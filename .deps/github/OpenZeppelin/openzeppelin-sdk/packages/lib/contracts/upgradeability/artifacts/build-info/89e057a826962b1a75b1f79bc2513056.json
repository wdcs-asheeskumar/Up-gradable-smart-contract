{
	"id": "89e057a826962b1a75b1f79bc2513056",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.5.17",
	"solcLongVersion": "0.5.17+commit.d19bba13",
	"input": {
		"language": "Solidity",
		"sources": {
			".deps/github/OpenZeppelin/openzeppelin-sdk/packages/lib/contracts/upgradeability/InitializableUpgradeabilityProxy.sol": {
				"content": "pragma solidity ^0.5.0;\n\nimport './BaseUpgradeabilityProxy.sol';\n\n/**\n * @title InitializableUpgradeabilityProxy\n * @dev Extends BaseUpgradeabilityProxy with an initializer for initializing\n * implementation and init data.\n */\ncontract InitializableUpgradeabilityProxy is BaseUpgradeabilityProxy {\n  /**\n   * @dev Contract initializer.\n   * @param _logic Address of the initial implementation.\n   * @param _data Data to send as msg.data to the implementation to initialize the proxied contract.\n   * It should include the signature and the parameters of the function to be called, as described in\n   * https://solidity.readthedocs.io/en/v0.4.24/abi-spec.html#function-selector-and-argument-encoding.\n   * This parameter is optional, if no data is given the initialization call to proxied contract will be skipped.\n   */\n  function initialize(address _logic, bytes memory _data) public payable {\n    require(_implementation() == address(0));\n    assert(IMPLEMENTATION_SLOT == keccak256(\"org.zeppelinos.proxy.implementation\"));\n    _setImplementation(_logic);\n    if(_data.length > 0) {\n      (bool success,) = _logic.delegatecall(_data);\n      require(success);\n    }\n  }  \n}"
			},
			".deps/github/OpenZeppelin/openzeppelin-sdk/packages/lib/contracts/upgradeability/BaseUpgradeabilityProxy.sol": {
				"content": "pragma solidity ^0.5.0;\n\nimport './Proxy.sol';\nimport '../utils/Address.sol';\n\n/**\n * @title BaseUpgradeabilityProxy\n * @dev This contract implements a proxy that allows to change the\n * implementation address to which it will delegate.\n * Such a change is called an implementation upgrade.\n */\ncontract BaseUpgradeabilityProxy is Proxy {\n  /**\n   * @dev Emitted when the implementation is upgraded.\n   * @param implementation Address of the new implementation.\n   */\n  event Upgraded(address indexed implementation);\n\n  /**\n   * @dev Storage slot with the address of the current implementation.\n   * This is the keccak-256 hash of \"org.zeppelinos.proxy.implementation\", and is\n   * validated in the constructor.\n   */\n  bytes32 internal constant IMPLEMENTATION_SLOT = 0x7050c9e0f4ca769c69bd3a8ef740bc37934f8e2c036e5a723fd8ee048ed3f8c3;\n\n  /**\n   * @dev Returns the current implementation.\n   * @return Address of the current implementation\n   */\n  function _implementation() internal view returns (address impl) {\n    bytes32 slot = IMPLEMENTATION_SLOT;\n    assembly {\n      impl := sload(slot)\n    }\n  }\n\n  /**\n   * @dev Upgrades the proxy to a new implementation.\n   * @param newImplementation Address of the new implementation.\n   */\n  function _upgradeTo(address newImplementation) internal {\n    _setImplementation(newImplementation);\n    emit Upgraded(newImplementation);\n  }\n\n  /**\n   * @dev Sets the implementation address of the proxy.\n   * @param newImplementation Address of the new implementation.\n   */\n  function _setImplementation(address newImplementation) internal {\n    require(ZOSLibAddress.isContract(newImplementation), \"Cannot set a proxy implementation to a non-contract address\");\n\n    bytes32 slot = IMPLEMENTATION_SLOT;\n\n    assembly {\n      sstore(slot, newImplementation)\n    }\n  }\n}\n"
			},
			".deps/github/OpenZeppelin/openzeppelin-sdk/packages/lib/contracts/utils/Address.sol": {
				"content": "pragma solidity ^0.5.0;\n\n/**\n * Utility library of inline functions on addresses\n *\n * Source https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-solidity/v2.1.3/contracts/utils/Address.sol\n * This contract is copied here and renamed from the original to avoid clashes in the compiled artifacts\n * when the user imports a zos-lib contract (that transitively causes this contract to be compiled and added to the\n * build/artifacts folder) as well as the vanilla Address implementation from an openzeppelin version.\n */\nlibrary ZOSLibAddress {\n    /**\n     * Returns whether the target address is a contract\n     * @dev This function will return false if invoked during the constructor of a contract,\n     * as the code is not actually created until after the constructor finishes.\n     * @param account address of the account to check\n     * @return whether the target address is a contract\n     */\n    function isContract(address account) internal view returns (bool) {\n        uint256 size;\n        // XXX Currently there is no better way to check if there is a contract in an address\n        // than to check the size of the code at that address.\n        // See https://ethereum.stackexchange.com/a/14016/36603\n        // for more details about how this works.\n        // TODO Check this again before the Serenity release, because all addresses will be\n        // contracts then.\n        // solhint-disable-next-line no-inline-assembly\n        assembly { size := extcodesize(account) }\n        return size > 0;\n    }\n}"
			},
			".deps/github/OpenZeppelin/openzeppelin-sdk/packages/lib/contracts/upgradeability/Proxy.sol": {
				"content": "pragma solidity ^0.5.0;\n\n/**\n * @title Proxy\n * @dev Implements delegation of calls to other contracts, with proper\n * forwarding of return values and bubbling of failures.\n * It defines a fallback function that delegates all calls to the address\n * returned by the abstract _implementation() internal function.\n */\ncontract Proxy {\n  /**\n   * @dev Fallback function.\n   * Implemented entirely in `_fallback`.\n   */\n  function () payable external {\n    _fallback();\n  }\n\n  /**\n   * @return The Address of the implementation.\n   */\n  function _implementation() internal view returns (address);\n\n  /**\n   * @dev Delegates execution to an implementation contract.\n   * This is a low level function that doesn't return to its internal call site.\n   * It will return to the external caller whatever the implementation returns.\n   * @param implementation Address to delegate.\n   */\n  function _delegate(address implementation) internal {\n    assembly {\n      // Copy msg.data. We take full control of memory in this inline assembly\n      // block because it will not return to Solidity code. We overwrite the\n      // Solidity scratch pad at memory position 0.\n      calldatacopy(0, 0, calldatasize)\n\n      // Call the implementation.\n      // out and outsize are 0 because we don't know the size yet.\n      let result := delegatecall(gas, implementation, 0, calldatasize, 0, 0)\n\n      // Copy the returned data.\n      returndatacopy(0, 0, returndatasize)\n\n      switch result\n      // delegatecall returns 0 on error.\n      case 0 { revert(0, returndatasize) }\n      default { return(0, returndatasize) }\n    }\n  }\n\n  /**\n   * @dev Function that is run as the first thing in the fallback function.\n   * Can be redefined in derived contracts to add functionality.\n   * Redefinitions must call super._willFallback().\n   */\n  function _willFallback() internal {\n  }\n\n  /**\n   * @dev fallback implementation.\n   * Extracted to enable manual triggering.\n   */\n  function _fallback() internal {\n    _willFallback();\n    _delegate(_implementation());\n  }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 900
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			".deps/github/OpenZeppelin/openzeppelin-sdk/packages/lib/contracts/upgradeability/BaseUpgradeabilityProxy.sol": {
				"BaseUpgradeabilityProxy": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "implementation",
									"type": "address"
								}
							],
							"name": "Upgraded",
							"type": "event"
						},
						{
							"payable": true,
							"stateMutability": "payable",
							"type": "fallback"
						}
					],
					"devdoc": {
						"details": "This contract implements a proxy that allows to change the implementation address to which it will delegate. Such a change is called an implementation upgrade.",
						"methods": {},
						"title": "BaseUpgradeabilityProxy"
					},
					"evm": {
						"assembly": "    /* \".deps/github/OpenZeppelin/openzeppelin-sdk/packages/lib/contracts/upgradeability/BaseUpgradeabilityProxy.sol\":295:1812  contract BaseUpgradeabilityProxy is Proxy {... */\n  mstore(0x40, 0x80)\n  callvalue\n    /* \"--CODEGEN--\":8:17   */\n  dup1\n    /* \"--CODEGEN--\":5:7   */\n  iszero\n  tag_1\n  jumpi\n    /* \"--CODEGEN--\":30:31   */\n  0x00\n    /* \"--CODEGEN--\":27:28   */\n  dup1\n    /* \"--CODEGEN--\":20:32   */\n  revert\n    /* \"--CODEGEN--\":5:7   */\ntag_1:\n    /* \".deps/github/OpenZeppelin/openzeppelin-sdk/packages/lib/contracts/upgradeability/BaseUpgradeabilityProxy.sol\":295:1812  contract BaseUpgradeabilityProxy is Proxy {... */\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \".deps/github/OpenZeppelin/openzeppelin-sdk/packages/lib/contracts/upgradeability/BaseUpgradeabilityProxy.sol\":295:1812  contract BaseUpgradeabilityProxy is Proxy {... */\n      mstore(0x40, 0x80)\n        /* \".deps/github/OpenZeppelin/openzeppelin-sdk/packages/lib/contracts/upgradeability/Proxy.sol\":453:464  _fallback() */\n      tag_4\n        /* \".deps/github/OpenZeppelin/openzeppelin-sdk/packages/lib/contracts/upgradeability/Proxy.sol\":453:462  _fallback */\n      tag_5\n        /* \".deps/github/OpenZeppelin/openzeppelin-sdk/packages/lib/contracts/upgradeability/Proxy.sol\":453:464  _fallback() */\n      jump\t// in\n    tag_4:\n        /* \".deps/github/OpenZeppelin/openzeppelin-sdk/packages/lib/contracts/upgradeability/BaseUpgradeabilityProxy.sol\":295:1812  contract BaseUpgradeabilityProxy is Proxy {... */\n      stop\n        /* \".deps/github/OpenZeppelin/openzeppelin-sdk/packages/lib/contracts/upgradeability/Proxy.sol\":1952:2042  function _fallback() internal {... */\n    tag_5:\n        /* \".deps/github/OpenZeppelin/openzeppelin-sdk/packages/lib/contracts/upgradeability/Proxy.sol\":1988:2003  _willFallback() */\n      tag_7\n        /* \".deps/github/OpenZeppelin/openzeppelin-sdk/packages/lib/contracts/upgradeability/Proxy.sol\":1988:2001  _willFallback */\n      tag_9\n        /* \".deps/github/OpenZeppelin/openzeppelin-sdk/packages/lib/contracts/upgradeability/Proxy.sol\":1988:2003  _willFallback() */\n      jump\t// in\n    tag_7:\n        /* \".deps/github/OpenZeppelin/openzeppelin-sdk/packages/lib/contracts/upgradeability/Proxy.sol\":2009:2037  _delegate(_implementation()) */\n      tag_9\n        /* \".deps/github/OpenZeppelin/openzeppelin-sdk/packages/lib/contracts/upgradeability/Proxy.sol\":2019:2036  _implementation() */\n      tag_10\n        /* \".deps/github/OpenZeppelin/openzeppelin-sdk/packages/lib/contracts/upgradeability/Proxy.sol\":2019:2034  _implementation */\n      tag_11\n        /* \".deps/github/OpenZeppelin/openzeppelin-sdk/packages/lib/contracts/upgradeability/Proxy.sol\":2019:2036  _implementation() */\n      jump\t// in\n    tag_10:\n        /* \".deps/github/OpenZeppelin/openzeppelin-sdk/packages/lib/contracts/upgradeability/Proxy.sol\":2009:2018  _delegate */\n      tag_12\n        /* \".deps/github/OpenZeppelin/openzeppelin-sdk/packages/lib/contracts/upgradeability/Proxy.sol\":2009:2037  _delegate(_implementation()) */\n      jump\t// in\n    tag_9:\n        /* \".deps/github/OpenZeppelin/openzeppelin-sdk/packages/lib/contracts/upgradeability/Proxy.sol\":1952:2042  function _fallback() internal {... */\n      jump\t// out\n        /* \".deps/github/OpenZeppelin/openzeppelin-sdk/packages/lib/contracts/upgradeability/BaseUpgradeabilityProxy.sol\":949:1105  function _implementation() internal view returns (address impl) {... */\n    tag_11:\n        /* \".deps/github/OpenZeppelin/openzeppelin-sdk/packages/lib/contracts/upgradeability/BaseUpgradeabilityProxy.sol\":769:835  0x7050c9e0f4ca769c69bd3a8ef740bc37934f8e2c036e5a723fd8ee048ed3f8c3 */\n      0x7050c9e0f4ca769c69bd3a8ef740bc37934f8e2c036e5a723fd8ee048ed3f8c3\n        /* \".deps/github/OpenZeppelin/openzeppelin-sdk/packages/lib/contracts/upgradeability/BaseUpgradeabilityProxy.sol\":1084:1095  sload(slot) */\n      sload\n      swap1\n        /* \".deps/github/OpenZeppelin/openzeppelin-sdk/packages/lib/contracts/upgradeability/BaseUpgradeabilityProxy.sol\":1068:1101  {... */\n      jump\t// out\n        /* \".deps/github/OpenZeppelin/openzeppelin-sdk/packages/lib/contracts/upgradeability/Proxy.sol\":878:1609  function _delegate(address implementation) internal {... */\n    tag_12:\n        /* \".deps/github/OpenZeppelin/openzeppelin-sdk/packages/lib/contracts/upgradeability/Proxy.sol\":1180:1192  calldatasize */\n      calldatasize\n        /* \".deps/github/OpenZeppelin/openzeppelin-sdk/packages/lib/contracts/upgradeability/Proxy.sol\":1177:1178  0 */\n      0x00\n        /* \".deps/github/OpenZeppelin/openzeppelin-sdk/packages/lib/contracts/upgradeability/Proxy.sol\":1174:1175  0 */\n      dup1\n        /* \".deps/github/OpenZeppelin/openzeppelin-sdk/packages/lib/contracts/upgradeability/Proxy.sol\":1161:1193  calldatacopy(0, 0, calldatasize) */\n      calldatacopy\n        /* \".deps/github/OpenZeppelin/openzeppelin-sdk/packages/lib/contracts/upgradeability/Proxy.sol\":1370:1371  0 */\n      0x00\n        /* \".deps/github/OpenZeppelin/openzeppelin-sdk/packages/lib/contracts/upgradeability/Proxy.sol\":1367:1368  0 */\n      dup1\n        /* \".deps/github/OpenZeppelin/openzeppelin-sdk/packages/lib/contracts/upgradeability/Proxy.sol\":1353:1365  calldatasize */\n      calldatasize\n        /* \".deps/github/OpenZeppelin/openzeppelin-sdk/packages/lib/contracts/upgradeability/Proxy.sol\":1350:1351  0 */\n      0x00\n        /* \".deps/github/OpenZeppelin/openzeppelin-sdk/packages/lib/contracts/upgradeability/Proxy.sol\":1334:1348  implementation */\n      dup5\n        /* \".deps/github/OpenZeppelin/openzeppelin-sdk/packages/lib/contracts/upgradeability/Proxy.sol\":1329:1332  gas */\n      gas\n        /* \".deps/github/OpenZeppelin/openzeppelin-sdk/packages/lib/contracts/upgradeability/Proxy.sol\":1316:1372  delegatecall(gas, implementation, 0, calldatasize, 0, 0) */\n      delegatecall\n        /* \".deps/github/OpenZeppelin/openzeppelin-sdk/packages/lib/contracts/upgradeability/Proxy.sol\":1434:1448  returndatasize */\n      returndatasize\n        /* \".deps/github/OpenZeppelin/openzeppelin-sdk/packages/lib/contracts/upgradeability/Proxy.sol\":1431:1432  0 */\n      0x00\n        /* \".deps/github/OpenZeppelin/openzeppelin-sdk/packages/lib/contracts/upgradeability/Proxy.sol\":1428:1429  0 */\n      dup1\n        /* \".deps/github/OpenZeppelin/openzeppelin-sdk/packages/lib/contracts/upgradeability/Proxy.sol\":1413:1449  returndatacopy(0, 0, returndatasize) */\n      returndatacopy\n        /* \".deps/github/OpenZeppelin/openzeppelin-sdk/packages/lib/contracts/upgradeability/Proxy.sol\":1464:1470  result */\n      dup1\n        /* \".deps/github/OpenZeppelin/openzeppelin-sdk/packages/lib/contracts/upgradeability/Proxy.sol\":1519:1555  case 0 { revert(0, returndatasize) } */\n      dup1\n      iszero\n      tag_17\n      jumpi\n        /* \".deps/github/OpenZeppelin/openzeppelin-sdk/packages/lib/contracts/upgradeability/Proxy.sol\":1582:1596  returndatasize */\n      returndatasize\n        /* \".deps/github/OpenZeppelin/openzeppelin-sdk/packages/lib/contracts/upgradeability/Proxy.sol\":1579:1580  0 */\n      0x00\n        /* \".deps/github/OpenZeppelin/openzeppelin-sdk/packages/lib/contracts/upgradeability/Proxy.sol\":1572:1597  return(0, returndatasize) */\n      return\n        /* \".deps/github/OpenZeppelin/openzeppelin-sdk/packages/lib/contracts/upgradeability/Proxy.sol\":1519:1555  case 0 { revert(0, returndatasize) } */\n    tag_17:\n        /* \".deps/github/OpenZeppelin/openzeppelin-sdk/packages/lib/contracts/upgradeability/Proxy.sol\":1538:1552  returndatasize */\n      returndatasize\n        /* \".deps/github/OpenZeppelin/openzeppelin-sdk/packages/lib/contracts/upgradeability/Proxy.sol\":1535:1536  0 */\n      0x00\n        /* \".deps/github/OpenZeppelin/openzeppelin-sdk/packages/lib/contracts/upgradeability/Proxy.sol\":1528:1553  revert(0, returndatasize) */\n      revert\n\n    auxdata: 0xa265627a7a723158202ba51f2599deb94c86d3709dc155cbe9c9ea6257d29c6ea8b838f665b8c5022264736f6c63430005110032\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "6080604052348015600f57600080fd5b50609d8061001e6000396000f3fe6080604052600a600c565b005b6012601e565b601e601a6020565b6045565b565b7f7050c9e0f4ca769c69bd3a8ef740bc37934f8e2c036e5a723fd8ee048ed3f8c35490565b3660008037600080366000845af43d6000803e8080156063573d6000f35b3d6000fdfea265627a7a723158202ba51f2599deb94c86d3709dc155cbe9c9ea6257d29c6ea8b838f665b8c5022264736f6c63430005110032",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x9D DUP1 PUSH2 0x1E PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0xA PUSH1 0xC JUMP JUMPDEST STOP JUMPDEST PUSH1 0x12 PUSH1 0x1E JUMP JUMPDEST PUSH1 0x1E PUSH1 0x1A PUSH1 0x20 JUMP JUMPDEST PUSH1 0x45 JUMP JUMPDEST JUMP JUMPDEST PUSH32 0x7050C9E0F4CA769C69BD3A8EF740BC37934F8E2C036E5A723FD8EE048ED3F8C3 SLOAD SWAP1 JUMP JUMPDEST CALLDATASIZE PUSH1 0x0 DUP1 CALLDATACOPY PUSH1 0x0 DUP1 CALLDATASIZE PUSH1 0x0 DUP5 GAS DELEGATECALL RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY DUP1 DUP1 ISZERO PUSH1 0x63 JUMPI RETURNDATASIZE PUSH1 0x0 RETURN JUMPDEST RETURNDATASIZE PUSH1 0x0 REVERT INVALID LOG2 PUSH6 0x627A7A723158 KECCAK256 0x2B 0xA5 0x1F 0x25 SWAP10 0xDE 0xB9 0x4C DUP7 0xD3 PUSH17 0x9DC155CBE9C9EA6257D29C6EA8B838F665 0xB8 0xC5 MUL 0x22 PUSH5 0x736F6C6343 STOP SDIV GT STOP ORIGIN ",
							"sourceMap": "295:1517:0:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;295:1517:0;;;;;;;"
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "6080604052600a600c565b005b6012601e565b601e601a6020565b6045565b565b7f7050c9e0f4ca769c69bd3a8ef740bc37934f8e2c036e5a723fd8ee048ed3f8c35490565b3660008037600080366000845af43d6000803e8080156063573d6000f35b3d6000fdfea265627a7a723158202ba51f2599deb94c86d3709dc155cbe9c9ea6257d29c6ea8b838f665b8c5022264736f6c63430005110032",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0xA PUSH1 0xC JUMP JUMPDEST STOP JUMPDEST PUSH1 0x12 PUSH1 0x1E JUMP JUMPDEST PUSH1 0x1E PUSH1 0x1A PUSH1 0x20 JUMP JUMPDEST PUSH1 0x45 JUMP JUMPDEST JUMP JUMPDEST PUSH32 0x7050C9E0F4CA769C69BD3A8EF740BC37934F8E2C036E5A723FD8EE048ED3F8C3 SLOAD SWAP1 JUMP JUMPDEST CALLDATASIZE PUSH1 0x0 DUP1 CALLDATACOPY PUSH1 0x0 DUP1 CALLDATASIZE PUSH1 0x0 DUP5 GAS DELEGATECALL RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY DUP1 DUP1 ISZERO PUSH1 0x63 JUMPI RETURNDATASIZE PUSH1 0x0 RETURN JUMPDEST RETURNDATASIZE PUSH1 0x0 REVERT INVALID LOG2 PUSH6 0x627A7A723158 KECCAK256 0x2B 0xA5 0x1F 0x25 SWAP10 0xDE 0xB9 0x4C DUP7 0xD3 PUSH17 0x9DC155CBE9C9EA6257D29C6EA8B838F665 0xB8 0xC5 MUL 0x22 PUSH5 0x736F6C6343 STOP SDIV GT STOP ORIGIN ",
							"sourceMap": "295:1517:0:-;;;453:11:2;:9;:11::i;:::-;295:1517:0;1952:90:2;1988:15;:13;:15::i;:::-;2009:28;2019:17;:15;:17::i;:::-;2009:9;:28::i;:::-;1952:90::o;949:156:0:-;769:66;1084:11;;1068:33::o;878:731:2:-;1180:12;1177:1;1174;1161:32;1370:1;1367;1353:12;1350:1;1334:14;1329:3;1316:56;1434:14;1431:1;1428;1413:36;1464:6;1519:36;;;;1582:14;1579:1;1572:25;1519:36;1538:14;1535:1;1528:25"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "31400",
								"executionCost": "81",
								"totalCost": "31481"
							},
							"external": {
								"": "infinite"
							},
							"internal": {
								"_implementation()": "815",
								"_setImplementation(address)": "infinite",
								"_upgradeTo(address)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 295,
									"end": 1812,
									"name": "PUSH",
									"value": "80"
								},
								{
									"begin": 295,
									"end": 1812,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 295,
									"end": 1812,
									"name": "MSTORE"
								},
								{
									"begin": 295,
									"end": 1812,
									"name": "CALLVALUE"
								},
								{
									"begin": 8,
									"end": 17,
									"name": "DUP1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "ISZERO"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "PUSH [tag]",
									"value": "1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "JUMPI"
								},
								{
									"begin": 30,
									"end": 31,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 27,
									"end": 28,
									"name": "DUP1"
								},
								{
									"begin": 20,
									"end": 32,
									"name": "REVERT"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "tag",
									"value": "1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "JUMPDEST"
								},
								{
									"begin": 295,
									"end": 1812,
									"name": "POP"
								},
								{
									"begin": 295,
									"end": 1812,
									"name": "PUSH #[$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 295,
									"end": 1812,
									"name": "DUP1"
								},
								{
									"begin": 295,
									"end": 1812,
									"name": "PUSH [$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 295,
									"end": 1812,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 295,
									"end": 1812,
									"name": "CODECOPY"
								},
								{
									"begin": 295,
									"end": 1812,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 295,
									"end": 1812,
									"name": "RETURN"
								}
							],
							".data": {
								"0": {
									".auxdata": "a265627a7a723158202ba51f2599deb94c86d3709dc155cbe9c9ea6257d29c6ea8b838f665b8c5022264736f6c63430005110032",
									".code": [
										{
											"begin": 295,
											"end": 1812,
											"name": "PUSH",
											"value": "80"
										},
										{
											"begin": 295,
											"end": 1812,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 295,
											"end": 1812,
											"name": "MSTORE"
										},
										{
											"begin": 453,
											"end": 464,
											"name": "PUSH [tag]",
											"value": "4"
										},
										{
											"begin": 453,
											"end": 462,
											"name": "PUSH [tag]",
											"value": "5"
										},
										{
											"begin": 453,
											"end": 464,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 453,
											"end": 464,
											"name": "tag",
											"value": "4"
										},
										{
											"begin": 453,
											"end": 464,
											"name": "JUMPDEST"
										},
										{
											"begin": 295,
											"end": 1812,
											"name": "STOP"
										},
										{
											"begin": 1952,
											"end": 2042,
											"name": "tag",
											"value": "5"
										},
										{
											"begin": 1952,
											"end": 2042,
											"name": "JUMPDEST"
										},
										{
											"begin": 1988,
											"end": 2003,
											"name": "PUSH [tag]",
											"value": "7"
										},
										{
											"begin": 1988,
											"end": 2001,
											"name": "PUSH [tag]",
											"value": "9"
										},
										{
											"begin": 1988,
											"end": 2003,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 1988,
											"end": 2003,
											"name": "tag",
											"value": "7"
										},
										{
											"begin": 1988,
											"end": 2003,
											"name": "JUMPDEST"
										},
										{
											"begin": 2009,
											"end": 2037,
											"name": "PUSH [tag]",
											"value": "9"
										},
										{
											"begin": 2019,
											"end": 2036,
											"name": "PUSH [tag]",
											"value": "10"
										},
										{
											"begin": 2019,
											"end": 2034,
											"name": "PUSH [tag]",
											"value": "11"
										},
										{
											"begin": 2019,
											"end": 2036,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 2019,
											"end": 2036,
											"name": "tag",
											"value": "10"
										},
										{
											"begin": 2019,
											"end": 2036,
											"name": "JUMPDEST"
										},
										{
											"begin": 2009,
											"end": 2018,
											"name": "PUSH [tag]",
											"value": "12"
										},
										{
											"begin": 2009,
											"end": 2037,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 2009,
											"end": 2037,
											"name": "tag",
											"value": "9"
										},
										{
											"begin": 2009,
											"end": 2037,
											"name": "JUMPDEST"
										},
										{
											"begin": 1952,
											"end": 2042,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 949,
											"end": 1105,
											"name": "tag",
											"value": "11"
										},
										{
											"begin": 949,
											"end": 1105,
											"name": "JUMPDEST"
										},
										{
											"begin": 769,
											"end": 835,
											"name": "PUSH",
											"value": "7050C9E0F4CA769C69BD3A8EF740BC37934F8E2C036E5A723FD8EE048ED3F8C3"
										},
										{
											"begin": 1084,
											"end": 1095,
											"name": "SLOAD"
										},
										{
											"begin": 1084,
											"end": 1095,
											"name": "SWAP1"
										},
										{
											"begin": 1068,
											"end": 1101,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 878,
											"end": 1609,
											"name": "tag",
											"value": "12"
										},
										{
											"begin": 878,
											"end": 1609,
											"name": "JUMPDEST"
										},
										{
											"begin": 1180,
											"end": 1192,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 1177,
											"end": 1178,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1174,
											"end": 1175,
											"name": "DUP1"
										},
										{
											"begin": 1161,
											"end": 1193,
											"name": "CALLDATACOPY"
										},
										{
											"begin": 1370,
											"end": 1371,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1367,
											"end": 1368,
											"name": "DUP1"
										},
										{
											"begin": 1353,
											"end": 1365,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 1350,
											"end": 1351,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1334,
											"end": 1348,
											"name": "DUP5"
										},
										{
											"begin": 1329,
											"end": 1332,
											"name": "GAS"
										},
										{
											"begin": 1316,
											"end": 1372,
											"name": "DELEGATECALL"
										},
										{
											"begin": 1434,
											"end": 1448,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 1431,
											"end": 1432,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1428,
											"end": 1429,
											"name": "DUP1"
										},
										{
											"begin": 1413,
											"end": 1449,
											"name": "RETURNDATACOPY"
										},
										{
											"begin": 1464,
											"end": 1470,
											"name": "DUP1"
										},
										{
											"begin": 1519,
											"end": 1555,
											"name": "DUP1"
										},
										{
											"begin": 1519,
											"end": 1555,
											"name": "ISZERO"
										},
										{
											"begin": 1519,
											"end": 1555,
											"name": "PUSH [tag]",
											"value": "17"
										},
										{
											"begin": 1519,
											"end": 1555,
											"name": "JUMPI"
										},
										{
											"begin": 1582,
											"end": 1596,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 1579,
											"end": 1580,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1572,
											"end": 1597,
											"name": "RETURN"
										},
										{
											"begin": 1519,
											"end": 1555,
											"name": "tag",
											"value": "17"
										},
										{
											"begin": 1519,
											"end": 1555,
											"name": "JUMPDEST"
										},
										{
											"begin": 1538,
											"end": 1552,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 1535,
											"end": 1536,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1528,
											"end": 1553,
											"name": "REVERT"
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.5.17+commit.d19bba13\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"Upgraded\",\"type\":\"event\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"}],\"devdoc\":{\"details\":\"This contract implements a proxy that allows to change the implementation address to which it will delegate. Such a change is called an implementation upgrade.\",\"methods\":{},\"title\":\"BaseUpgradeabilityProxy\"},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\".deps/github/OpenZeppelin/openzeppelin-sdk/packages/lib/contracts/upgradeability/BaseUpgradeabilityProxy.sol\":\"BaseUpgradeabilityProxy\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":true,\"runs\":900},\"remappings\":[]},\"sources\":{\".deps/github/OpenZeppelin/openzeppelin-sdk/packages/lib/contracts/upgradeability/BaseUpgradeabilityProxy.sol\":{\"keccak256\":\"0xc4bbf786e15395b2840d90edfa5599a2246d8b9e35786cbd012833989ba94353\",\"urls\":[\"bzz-raw://483629ea48c7905b41210bc4510936d3234430e18a1fbfa07bb286555ea49c71\",\"dweb:/ipfs/Qmev9DAjRsabvP5J7gErBh1vj3LJpTRQnpTq4hrK7afPmK\"]},\".deps/github/OpenZeppelin/openzeppelin-sdk/packages/lib/contracts/upgradeability/Proxy.sol\":{\"keccak256\":\"0xd8074ae5fa7ee6384ca8196a896612fb044bbf4ff4b7336d03cd97845000ac21\",\"urls\":[\"bzz-raw://3a111e1dc777d80e6c2ad41c6ff2bfb3ae8f61658fd6580ddf9ba9ab0d25a354\",\"dweb:/ipfs/QmSfwvUqqiownzHeMmUiYkejWs6FXR2KLtHQnSzP6FivTj\"]},\".deps/github/OpenZeppelin/openzeppelin-sdk/packages/lib/contracts/utils/Address.sol\":{\"keccak256\":\"0x4296cea43a884099c0d3f532883e8d3997fa07b559131fc5c4ae656a5da3df24\",\"urls\":[\"bzz-raw://53d28819ddbaf7886d2711ae7a2cd3580907f0f4f73a3efc202fa243e8e1f015\",\"dweb:/ipfs/QmZm2ybiRskHHWCyidfvx9dyZprRneWkSWKvEgXnEQuVqr\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"methods": {}
					}
				}
			},
			".deps/github/OpenZeppelin/openzeppelin-sdk/packages/lib/contracts/upgradeability/InitializableUpgradeabilityProxy.sol": {
				"InitializableUpgradeabilityProxy": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "implementation",
									"type": "address"
								}
							],
							"name": "Upgraded",
							"type": "event"
						},
						{
							"payable": true,
							"stateMutability": "payable",
							"type": "fallback"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "_logic",
									"type": "address"
								},
								{
									"internalType": "bytes",
									"name": "_data",
									"type": "bytes"
								}
							],
							"name": "initialize",
							"outputs": [],
							"payable": true,
							"stateMutability": "payable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Extends BaseUpgradeabilityProxy with an initializer for initializing implementation and init data.",
						"methods": {
							"initialize(address,bytes)": {
								"details": "Contract initializer.",
								"params": {
									"_data": "Data to send as msg.data to the implementation to initialize the proxied contract. It should include the signature and the parameters of the function to be called, as described in https://solidity.readthedocs.io/en/v0.4.24/abi-spec.html#function-selector-and-argument-encoding. This parameter is optional, if no data is given the initialization call to proxied contract will be skipped.",
									"_logic": "Address of the initial implementation."
								}
							}
						},
						"title": "InitializableUpgradeabilityProxy"
					},
					"evm": {
						"assembly": "    /* \".deps/github/OpenZeppelin/openzeppelin-sdk/packages/lib/contracts/upgradeability/InitializableUpgradeabilityProxy.sol\":227:1174  contract InitializableUpgradeabilityProxy is BaseUpgradeabilityProxy {... */\n  mstore(0x40, 0x80)\n  callvalue\n    /* \"--CODEGEN--\":8:17   */\n  dup1\n    /* \"--CODEGEN--\":5:7   */\n  iszero\n  tag_1\n  jumpi\n    /* \"--CODEGEN--\":30:31   */\n  0x00\n    /* \"--CODEGEN--\":27:28   */\n  dup1\n    /* \"--CODEGEN--\":20:32   */\n  revert\n    /* \"--CODEGEN--\":5:7   */\ntag_1:\n    /* \".deps/github/OpenZeppelin/openzeppelin-sdk/packages/lib/contracts/upgradeability/InitializableUpgradeabilityProxy.sol\":227:1174  contract InitializableUpgradeabilityProxy is BaseUpgradeabilityProxy {... */\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \".deps/github/OpenZeppelin/openzeppelin-sdk/packages/lib/contracts/upgradeability/InitializableUpgradeabilityProxy.sol\":227:1174  contract InitializableUpgradeabilityProxy is BaseUpgradeabilityProxy {... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0xd1f57894\n      eq\n      tag_2\n      jumpi\n    tag_1:\n        /* \".deps/github/OpenZeppelin/openzeppelin-sdk/packages/lib/contracts/upgradeability/Proxy.sol\":453:464  _fallback() */\n      tag_5\n        /* \".deps/github/OpenZeppelin/openzeppelin-sdk/packages/lib/contracts/upgradeability/Proxy.sol\":453:462  _fallback */\n      tag_6\n        /* \".deps/github/OpenZeppelin/openzeppelin-sdk/packages/lib/contracts/upgradeability/Proxy.sol\":453:464  _fallback() */\n      jump\t// in\n    tag_5:\n        /* \".deps/github/OpenZeppelin/openzeppelin-sdk/packages/lib/contracts/upgradeability/InitializableUpgradeabilityProxy.sol\":227:1174  contract InitializableUpgradeabilityProxy is BaseUpgradeabilityProxy {... */\n      stop\n        /* \".deps/github/OpenZeppelin/openzeppelin-sdk/packages/lib/contracts/upgradeability/InitializableUpgradeabilityProxy.sol\":822:1170  function initialize(address _logic, bytes memory _data) public payable {... */\n    tag_2:\n      tag_5\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x40\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_8\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_8:\n        /* \".deps/github/OpenZeppelin/openzeppelin-sdk/packages/lib/contracts/upgradeability/InitializableUpgradeabilityProxy.sol\":822:1170  function initialize(address _logic, bytes memory _data) public payable {... */\n      0xffffffffffffffffffffffffffffffffffffffff\n      dup3\n      calldataload\n      and\n      swap2\n      swap1\n      dup2\n      add\n      swap1\n      0x40\n      dup2\n      add\n      0x20\n      dup3\n      add\n      calldataload\n        /* \"--CODEGEN--\":21:32   */\n      0x0100000000\n        /* \"--CODEGEN--\":5:33   */\n      dup2\n      gt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_9\n      jumpi\n        /* \"--CODEGEN--\":46:47   */\n      0x00\n        /* \"--CODEGEN--\":43:44   */\n      dup1\n        /* \"--CODEGEN--\":36:48   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_9:\n        /* \".deps/github/OpenZeppelin/openzeppelin-sdk/packages/lib/contracts/upgradeability/InitializableUpgradeabilityProxy.sol\":822:1170  function initialize(address _logic, bytes memory _data) public payable {... */\n      dup3\n      add\n        /* \"--CODEGEN--\":35:44   */\n      dup4\n        /* \"--CODEGEN--\":28:32   */\n      0x20\n        /* \"--CODEGEN--\":12:26   */\n      dup3\n        /* \"--CODEGEN--\":8:33   */\n      add\n        /* \"--CODEGEN--\":5:45   */\n      gt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_10\n      jumpi\n        /* \"--CODEGEN--\":58:59   */\n      0x00\n        /* \"--CODEGEN--\":55:56   */\n      dup1\n        /* \"--CODEGEN--\":48:60   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_10:\n        /* \".deps/github/OpenZeppelin/openzeppelin-sdk/packages/lib/contracts/upgradeability/InitializableUpgradeabilityProxy.sol\":822:1170  function initialize(address _logic, bytes memory _data) public payable {... */\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap2\n        /* \"--CODEGEN--\":100:109   */\n      dup5\n        /* \"--CODEGEN--\":95:96   */\n      0x01\n        /* \"--CODEGEN--\":81:93   */\n      dup4\n        /* \"--CODEGEN--\":77:97   */\n      mul\n        /* \"--CODEGEN--\":67:75   */\n      dup5\n        /* \"--CODEGEN--\":63:98   */\n      add\n        /* \"--CODEGEN--\":60:110   */\n      gt\n        /* \"--CODEGEN--\":39:50   */\n      0x0100000000\n        /* \"--CODEGEN--\":25:37   */\n      dup4\n        /* \"--CODEGEN--\":22:51   */\n      gt\n        /* \"--CODEGEN--\":11:118   */\n      or\n        /* \"--CODEGEN--\":8:10   */\n      iszero\n      tag_11\n      jumpi\n        /* \"--CODEGEN--\":131:132   */\n      0x00\n        /* \"--CODEGEN--\":128:129   */\n      dup1\n        /* \"--CODEGEN--\":121:133   */\n      revert\n        /* \"--CODEGEN--\":8:10   */\n    tag_11:\n        /* \".deps/github/OpenZeppelin/openzeppelin-sdk/packages/lib/contracts/upgradeability/InitializableUpgradeabilityProxy.sol\":822:1170  function initialize(address _logic, bytes memory _data) public payable {... */\n      swap2\n      swap1\n      dup1\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap4\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup4\n      dup4\n        /* \"--CODEGEN--\":30:33   */\n      dup1\n        /* \"--CODEGEN--\":22:28   */\n      dup3\n        /* \"--CODEGEN--\":14:20   */\n      dup5\n        /* \"--CODEGEN--\":1:34   */\n      calldatacopy\n        /* \"--CODEGEN--\":99:100   */\n      0x00\n        /* \"--CODEGEN--\":81:97   */\n      swap3\n      add\n        /* \"--CODEGEN--\":74:101   */\n      swap2\n      swap1\n      swap2\n      mstore\n      pop\n        /* \".deps/github/OpenZeppelin/openzeppelin-sdk/packages/lib/contracts/upgradeability/InitializableUpgradeabilityProxy.sol\":822:1170  function initialize(address _logic, bytes memory _data) public payable {... */\n      swap3\n      swap6\n      pop\n      tag_12\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// in\n        /* \".deps/github/OpenZeppelin/openzeppelin-sdk/packages/lib/contracts/upgradeability/Proxy.sol\":1952:2042  function _fallback() internal {... */\n    tag_6:\n        /* \".deps/github/OpenZeppelin/openzeppelin-sdk/packages/lib/contracts/upgradeability/Proxy.sol\":1988:2003  _willFallback() */\n      tag_14\n        /* \".deps/github/OpenZeppelin/openzeppelin-sdk/packages/lib/contracts/upgradeability/Proxy.sol\":1988:2001  _willFallback */\n      tag_16\n        /* \".deps/github/OpenZeppelin/openzeppelin-sdk/packages/lib/contracts/upgradeability/Proxy.sol\":1988:2003  _willFallback() */\n      jump\t// in\n    tag_14:\n        /* \".deps/github/OpenZeppelin/openzeppelin-sdk/packages/lib/contracts/upgradeability/Proxy.sol\":2009:2037  _delegate(_implementation()) */\n      tag_16\n        /* \".deps/github/OpenZeppelin/openzeppelin-sdk/packages/lib/contracts/upgradeability/Proxy.sol\":2019:2036  _implementation() */\n      tag_17\n        /* \".deps/github/OpenZeppelin/openzeppelin-sdk/packages/lib/contracts/upgradeability/Proxy.sol\":2019:2034  _implementation */\n      tag_18\n        /* \".deps/github/OpenZeppelin/openzeppelin-sdk/packages/lib/contracts/upgradeability/Proxy.sol\":2019:2036  _implementation() */\n      jump\t// in\n    tag_17:\n        /* \".deps/github/OpenZeppelin/openzeppelin-sdk/packages/lib/contracts/upgradeability/Proxy.sol\":2009:2018  _delegate */\n      tag_19\n        /* \".deps/github/OpenZeppelin/openzeppelin-sdk/packages/lib/contracts/upgradeability/Proxy.sol\":2009:2037  _delegate(_implementation()) */\n      jump\t// in\n    tag_16:\n        /* \".deps/github/OpenZeppelin/openzeppelin-sdk/packages/lib/contracts/upgradeability/Proxy.sol\":1952:2042  function _fallback() internal {... */\n      jump\t// out\n        /* \".deps/github/OpenZeppelin/openzeppelin-sdk/packages/lib/contracts/upgradeability/InitializableUpgradeabilityProxy.sol\":822:1170  function initialize(address _logic, bytes memory _data) public payable {... */\n    tag_12:\n        /* \".deps/github/OpenZeppelin/openzeppelin-sdk/packages/lib/contracts/upgradeability/InitializableUpgradeabilityProxy.sol\":936:937  0 */\n      0x00\n        /* \".deps/github/OpenZeppelin/openzeppelin-sdk/packages/lib/contracts/upgradeability/InitializableUpgradeabilityProxy.sol\":907:924  _implementation() */\n      tag_21\n        /* \".deps/github/OpenZeppelin/openzeppelin-sdk/packages/lib/contracts/upgradeability/InitializableUpgradeabilityProxy.sol\":907:922  _implementation */\n      tag_18\n        /* \".deps/github/OpenZeppelin/openzeppelin-sdk/packages/lib/contracts/upgradeability/InitializableUpgradeabilityProxy.sol\":907:924  _implementation() */\n      jump\t// in\n    tag_21:\n        /* \".deps/github/OpenZeppelin/openzeppelin-sdk/packages/lib/contracts/upgradeability/InitializableUpgradeabilityProxy.sol\":907:938  _implementation() == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \".deps/github/OpenZeppelin/openzeppelin-sdk/packages/lib/contracts/upgradeability/InitializableUpgradeabilityProxy.sol\":899:939  require(_implementation() == address(0)) */\n      tag_22\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_22:\n        /* \".deps/github/OpenZeppelin/openzeppelin-sdk/packages/lib/contracts/upgradeability/InitializableUpgradeabilityProxy.sol\":975:1023  keccak256(\"org.zeppelinos.proxy.implementation\") */\n      mload(0x40)\n      dup1\n      0x23\n      data_7050c9e0f4ca769c69bd3a8ef740bc37934f8e2c036e5a723fd8ee048ed3f8c3\n      dup3\n      codecopy\n      mload(0x40)\n      swap1\n      dup2\n      swap1\n      sub\n      0x23\n      add\n      swap1\n      keccak256\n        /* \".deps/github/OpenZeppelin/openzeppelin-sdk/packages/lib/contracts/upgradeability/BaseUpgradeabilityProxy.sol\":769:835  0x7050c9e0f4ca769c69bd3a8ef740bc37934f8e2c036e5a723fd8ee048ed3f8c3 */\n      0x7050c9e0f4ca769c69bd3a8ef740bc37934f8e2c036e5a723fd8ee048ed3f8c3\n        /* \".deps/github/OpenZeppelin/openzeppelin-sdk/packages/lib/contracts/upgradeability/InitializableUpgradeabilityProxy.sol\":952:1023  IMPLEMENTATION_SLOT == keccak256(\"org.zeppelinos.proxy.implementation\") */\n      eq\n      swap1\n      pop\n        /* \".deps/github/OpenZeppelin/openzeppelin-sdk/packages/lib/contracts/upgradeability/InitializableUpgradeabilityProxy.sol\":945:1024  assert(IMPLEMENTATION_SLOT == keccak256(\"org.zeppelinos.proxy.implementation\")) */\n      tag_23\n      jumpi\n      invalid\n    tag_23:\n        /* \".deps/github/OpenZeppelin/openzeppelin-sdk/packages/lib/contracts/upgradeability/InitializableUpgradeabilityProxy.sol\":1030:1056  _setImplementation(_logic) */\n      tag_24\n        /* \".deps/github/OpenZeppelin/openzeppelin-sdk/packages/lib/contracts/upgradeability/InitializableUpgradeabilityProxy.sol\":1049:1055  _logic */\n      dup3\n        /* \".deps/github/OpenZeppelin/openzeppelin-sdk/packages/lib/contracts/upgradeability/InitializableUpgradeabilityProxy.sol\":1030:1048  _setImplementation */\n      tag_25\n        /* \".deps/github/OpenZeppelin/openzeppelin-sdk/packages/lib/contracts/upgradeability/InitializableUpgradeabilityProxy.sol\":1030:1056  _setImplementation(_logic) */\n      jump\t// in\n    tag_24:\n        /* \".deps/github/OpenZeppelin/openzeppelin-sdk/packages/lib/contracts/upgradeability/InitializableUpgradeabilityProxy.sol\":1065:1077  _data.length */\n      dup1\n      mload\n        /* \".deps/github/OpenZeppelin/openzeppelin-sdk/packages/lib/contracts/upgradeability/InitializableUpgradeabilityProxy.sol\":1065:1081  _data.length > 0 */\n      iszero\n        /* \".deps/github/OpenZeppelin/openzeppelin-sdk/packages/lib/contracts/upgradeability/InitializableUpgradeabilityProxy.sol\":1062:1166  if(_data.length > 0) {... */\n      tag_26\n      jumpi\n        /* \".deps/github/OpenZeppelin/openzeppelin-sdk/packages/lib/contracts/upgradeability/InitializableUpgradeabilityProxy.sol\":1092:1104  bool success */\n      0x00\n        /* \".deps/github/OpenZeppelin/openzeppelin-sdk/packages/lib/contracts/upgradeability/InitializableUpgradeabilityProxy.sol\":1109:1115  _logic */\n      dup3\n        /* \".deps/github/OpenZeppelin/openzeppelin-sdk/packages/lib/contracts/upgradeability/InitializableUpgradeabilityProxy.sol\":1109:1128  _logic.delegatecall */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \".deps/github/OpenZeppelin/openzeppelin-sdk/packages/lib/contracts/upgradeability/InitializableUpgradeabilityProxy.sol\":1129:1134  _data */\n      dup3\n        /* \".deps/github/OpenZeppelin/openzeppelin-sdk/packages/lib/contracts/upgradeability/InitializableUpgradeabilityProxy.sol\":1109:1135  _logic.delegatecall(_data) */\n      mload(0x40)\n      dup1\n      dup3\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n        /* \"--CODEGEN--\":36:189   */\n    tag_27:\n        /* \"--CODEGEN--\":66:68   */\n      0x20\n        /* \"--CODEGEN--\":61:64   */\n      dup4\n        /* \"--CODEGEN--\":58:69   */\n      lt\n        /* \"--CODEGEN--\":36:189   */\n      tag_29\n      jumpi\n        /* \"--CODEGEN--\":176:186   */\n      dup1\n      mload\n        /* \"--CODEGEN--\":164:187   */\n      dup3\n      mstore\n      not(0x1f)\n        /* \"--CODEGEN--\":139:151   */\n      swap1\n      swap3\n      add\n      swap2\n        /* \"--CODEGEN--\":98:100   */\n      0x20\n        /* \"--CODEGEN--\":89:101   */\n      swap2\n      dup3\n      add\n      swap2\n        /* \"--CODEGEN--\":114:126   */\n      add\n        /* \"--CODEGEN--\":36:189   */\n      jump(tag_27)\n    tag_29:\n        /* \"--CODEGEN--\":274:275   */\n      0x01\n        /* \"--CODEGEN--\":267:270   */\n      dup4\n        /* \"--CODEGEN--\":263:265   */\n      0x20\n        /* \"--CODEGEN--\":259:271   */\n      sub\n        /* \"--CODEGEN--\":254:257   */\n      0x0100\n        /* \"--CODEGEN--\":250:272   */\n      exp\n        /* \"--CODEGEN--\":246:276   */\n      sub\n        /* \"--CODEGEN--\":315:319   */\n      dup1\n        /* \"--CODEGEN--\":311:320   */\n      not\n        /* \"--CODEGEN--\":305:308   */\n      dup3\n        /* \"--CODEGEN--\":299:309   */\n      mload\n        /* \"--CODEGEN--\":295:321   */\n      and\n        /* \"--CODEGEN--\":356:360   */\n      dup2\n        /* \"--CODEGEN--\":350:353   */\n      dup5\n        /* \"--CODEGEN--\":344:354   */\n      mload\n        /* \"--CODEGEN--\":340:361   */\n      and\n        /* \"--CODEGEN--\":389:396   */\n      dup1\n        /* \"--CODEGEN--\":380:387   */\n      dup3\n        /* \"--CODEGEN--\":377:397   */\n      or\n        /* \"--CODEGEN--\":372:375   */\n      dup6\n        /* \"--CODEGEN--\":365:398   */\n      mstore\n        /* \"--CODEGEN--\":3:402   */\n      pop\n      pop\n      pop\n        /* \".deps/github/OpenZeppelin/openzeppelin-sdk/packages/lib/contracts/upgradeability/InitializableUpgradeabilityProxy.sol\":1109:1135  _logic.delegatecall(_data) */\n      pop\n      pop\n      pop\n      swap1\n      pop\n      add\n      swap2\n      pop\n      pop\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      gas\n      delegatecall\n      swap2\n      pop\n      pop\n      returndatasize\n        /* \"--CODEGEN--\":14:15   */\n      dup1\n        /* \"--CODEGEN--\":21:22   */\n      0x00\n        /* \"--CODEGEN--\":16:47   */\n      dup2\n      eq\n      tag_31\n      jumpi\n        /* \"--CODEGEN--\":75:79   */\n      0x40\n        /* \"--CODEGEN--\":69:80   */\n      mload\n        /* \"--CODEGEN--\":64:80   */\n      swap2\n      pop\n        /* \"--CODEGEN--\":144:148   */\n      0x1f\n        /* \"--CODEGEN--\":140:149   */\n      not\n        /* \"--CODEGEN--\":133:137   */\n      0x3f\n        /* \"--CODEGEN--\":115:131   */\n      returndatasize\n        /* \"--CODEGEN--\":111:138   */\n      add\n        /* \"--CODEGEN--\":107:150   */\n      and\n        /* \"--CODEGEN--\":104:105   */\n      dup3\n        /* \"--CODEGEN--\":100:151   */\n      add\n        /* \"--CODEGEN--\":94:98   */\n      0x40\n        /* \"--CODEGEN--\":87:152   */\n      mstore\n        /* \"--CODEGEN--\":169:185   */\n      returndatasize\n        /* \"--CODEGEN--\":166:167   */\n      dup3\n        /* \"--CODEGEN--\":159:186   */\n      mstore\n        /* \"--CODEGEN--\":225:241   */\n      returndatasize\n        /* \"--CODEGEN--\":222:223   */\n      0x00\n        /* \"--CODEGEN--\":215:219   */\n      0x20\n        /* \"--CODEGEN--\":212:213   */\n      dup5\n        /* \"--CODEGEN--\":208:220   */\n      add\n        /* \"--CODEGEN--\":193:242   */\n      returndatacopy\n        /* \"--CODEGEN--\":7:249   */\n      jump(tag_30)\n        /* \"--CODEGEN--\":16:47   */\n    tag_31:\n        /* \"--CODEGEN--\":36:40   */\n      0x60\n        /* \"--CODEGEN--\":31:40   */\n      swap2\n      pop\n        /* \"--CODEGEN--\":7:249   */\n    tag_30:\n      pop\n        /* \".deps/github/OpenZeppelin/openzeppelin-sdk/packages/lib/contracts/upgradeability/InitializableUpgradeabilityProxy.sol\":1091:1135  (bool success,) = _logic.delegatecall(_data) */\n      pop\n      swap1\n      pop\n        /* \".deps/github/OpenZeppelin/openzeppelin-sdk/packages/lib/contracts/upgradeability/InitializableUpgradeabilityProxy.sol\":1151:1158  success */\n      dup1\n        /* \".deps/github/OpenZeppelin/openzeppelin-sdk/packages/lib/contracts/upgradeability/InitializableUpgradeabilityProxy.sol\":1143:1159  require(success) */\n      tag_32\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_32:\n        /* \".deps/github/OpenZeppelin/openzeppelin-sdk/packages/lib/contracts/upgradeability/InitializableUpgradeabilityProxy.sol\":1062:1166  if(_data.length > 0) {... */\n      pop\n    tag_26:\n        /* \".deps/github/OpenZeppelin/openzeppelin-sdk/packages/lib/contracts/upgradeability/InitializableUpgradeabilityProxy.sol\":822:1170  function initialize(address _logic, bytes memory _data) public payable {... */\n      pop\n      pop\n      jump\t// out\n        /* \".deps/github/OpenZeppelin/openzeppelin-sdk/packages/lib/contracts/upgradeability/BaseUpgradeabilityProxy.sol\":949:1105  function _implementation() internal view returns (address impl) {... */\n    tag_18:\n        /* \".deps/github/OpenZeppelin/openzeppelin-sdk/packages/lib/contracts/upgradeability/BaseUpgradeabilityProxy.sol\":769:835  0x7050c9e0f4ca769c69bd3a8ef740bc37934f8e2c036e5a723fd8ee048ed3f8c3 */\n      0x7050c9e0f4ca769c69bd3a8ef740bc37934f8e2c036e5a723fd8ee048ed3f8c3\n        /* \".deps/github/OpenZeppelin/openzeppelin-sdk/packages/lib/contracts/upgradeability/BaseUpgradeabilityProxy.sol\":1084:1095  sload(slot) */\n      sload\n      swap1\n        /* \".deps/github/OpenZeppelin/openzeppelin-sdk/packages/lib/contracts/upgradeability/BaseUpgradeabilityProxy.sol\":1068:1101  {... */\n      jump\t// out\n        /* \".deps/github/OpenZeppelin/openzeppelin-sdk/packages/lib/contracts/upgradeability/Proxy.sol\":878:1609  function _delegate(address implementation) internal {... */\n    tag_19:\n        /* \".deps/github/OpenZeppelin/openzeppelin-sdk/packages/lib/contracts/upgradeability/Proxy.sol\":1180:1192  calldatasize */\n      calldatasize\n        /* \".deps/github/OpenZeppelin/openzeppelin-sdk/packages/lib/contracts/upgradeability/Proxy.sol\":1177:1178  0 */\n      0x00\n        /* \".deps/github/OpenZeppelin/openzeppelin-sdk/packages/lib/contracts/upgradeability/Proxy.sol\":1174:1175  0 */\n      dup1\n        /* \".deps/github/OpenZeppelin/openzeppelin-sdk/packages/lib/contracts/upgradeability/Proxy.sol\":1161:1193  calldatacopy(0, 0, calldatasize) */\n      calldatacopy\n        /* \".deps/github/OpenZeppelin/openzeppelin-sdk/packages/lib/contracts/upgradeability/Proxy.sol\":1370:1371  0 */\n      0x00\n        /* \".deps/github/OpenZeppelin/openzeppelin-sdk/packages/lib/contracts/upgradeability/Proxy.sol\":1367:1368  0 */\n      dup1\n        /* \".deps/github/OpenZeppelin/openzeppelin-sdk/packages/lib/contracts/upgradeability/Proxy.sol\":1353:1365  calldatasize */\n      calldatasize\n        /* \".deps/github/OpenZeppelin/openzeppelin-sdk/packages/lib/contracts/upgradeability/Proxy.sol\":1350:1351  0 */\n      0x00\n        /* \".deps/github/OpenZeppelin/openzeppelin-sdk/packages/lib/contracts/upgradeability/Proxy.sol\":1334:1348  implementation */\n      dup5\n        /* \".deps/github/OpenZeppelin/openzeppelin-sdk/packages/lib/contracts/upgradeability/Proxy.sol\":1329:1332  gas */\n      gas\n        /* \".deps/github/OpenZeppelin/openzeppelin-sdk/packages/lib/contracts/upgradeability/Proxy.sol\":1316:1372  delegatecall(gas, implementation, 0, calldatasize, 0, 0) */\n      delegatecall\n        /* \".deps/github/OpenZeppelin/openzeppelin-sdk/packages/lib/contracts/upgradeability/Proxy.sol\":1434:1448  returndatasize */\n      returndatasize\n        /* \".deps/github/OpenZeppelin/openzeppelin-sdk/packages/lib/contracts/upgradeability/Proxy.sol\":1431:1432  0 */\n      0x00\n        /* \".deps/github/OpenZeppelin/openzeppelin-sdk/packages/lib/contracts/upgradeability/Proxy.sol\":1428:1429  0 */\n      dup1\n        /* \".deps/github/OpenZeppelin/openzeppelin-sdk/packages/lib/contracts/upgradeability/Proxy.sol\":1413:1449  returndatacopy(0, 0, returndatasize) */\n      returndatacopy\n        /* \".deps/github/OpenZeppelin/openzeppelin-sdk/packages/lib/contracts/upgradeability/Proxy.sol\":1464:1470  result */\n      dup1\n        /* \".deps/github/OpenZeppelin/openzeppelin-sdk/packages/lib/contracts/upgradeability/Proxy.sol\":1519:1555  case 0 { revert(0, returndatasize) } */\n      dup1\n      iszero\n      tag_37\n      jumpi\n        /* \".deps/github/OpenZeppelin/openzeppelin-sdk/packages/lib/contracts/upgradeability/Proxy.sol\":1582:1596  returndatasize */\n      returndatasize\n        /* \".deps/github/OpenZeppelin/openzeppelin-sdk/packages/lib/contracts/upgradeability/Proxy.sol\":1579:1580  0 */\n      0x00\n        /* \".deps/github/OpenZeppelin/openzeppelin-sdk/packages/lib/contracts/upgradeability/Proxy.sol\":1572:1597  return(0, returndatasize) */\n      return\n        /* \".deps/github/OpenZeppelin/openzeppelin-sdk/packages/lib/contracts/upgradeability/Proxy.sol\":1519:1555  case 0 { revert(0, returndatasize) } */\n    tag_37:\n        /* \".deps/github/OpenZeppelin/openzeppelin-sdk/packages/lib/contracts/upgradeability/Proxy.sol\":1538:1552  returndatasize */\n      returndatasize\n        /* \".deps/github/OpenZeppelin/openzeppelin-sdk/packages/lib/contracts/upgradeability/Proxy.sol\":1535:1536  0 */\n      0x00\n        /* \".deps/github/OpenZeppelin/openzeppelin-sdk/packages/lib/contracts/upgradeability/Proxy.sol\":1528:1553  revert(0, returndatasize) */\n      revert\n        /* \".deps/github/OpenZeppelin/openzeppelin-sdk/packages/lib/contracts/upgradeability/BaseUpgradeabilityProxy.sol\":1519:1810  function _setImplementation(address newImplementation) internal {... */\n    tag_25:\n        /* \".deps/github/OpenZeppelin/openzeppelin-sdk/packages/lib/contracts/upgradeability/BaseUpgradeabilityProxy.sol\":1597:1640  ZOSLibAddress.isContract(newImplementation) */\n      tag_39\n        /* \".deps/github/OpenZeppelin/openzeppelin-sdk/packages/lib/contracts/upgradeability/BaseUpgradeabilityProxy.sol\":1622:1639  newImplementation */\n      dup2\n        /* \".deps/github/OpenZeppelin/openzeppelin-sdk/packages/lib/contracts/upgradeability/BaseUpgradeabilityProxy.sol\":1597:1621  ZOSLibAddress.isContract */\n      tag_40\n        /* \".deps/github/OpenZeppelin/openzeppelin-sdk/packages/lib/contracts/upgradeability/BaseUpgradeabilityProxy.sol\":1597:1640  ZOSLibAddress.isContract(newImplementation) */\n      jump\t// in\n    tag_39:\n        /* \".deps/github/OpenZeppelin/openzeppelin-sdk/packages/lib/contracts/upgradeability/BaseUpgradeabilityProxy.sol\":1589:1704  require(ZOSLibAddress.isContract(newImplementation), \"Cannot set a proxy implementation to a non-contract address\") */\n      tag_41\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x3b\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_b5145a64ce8c406e5785204fe5b300f0ceda96d6636350b38fdccb9cd8c0c37c\n      0x3b\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_41:\n        /* \".deps/github/OpenZeppelin/openzeppelin-sdk/packages/lib/contracts/upgradeability/BaseUpgradeabilityProxy.sol\":769:835  0x7050c9e0f4ca769c69bd3a8ef740bc37934f8e2c036e5a723fd8ee048ed3f8c3 */\n      0x7050c9e0f4ca769c69bd3a8ef740bc37934f8e2c036e5a723fd8ee048ed3f8c3\n        /* \".deps/github/OpenZeppelin/openzeppelin-sdk/packages/lib/contracts/upgradeability/BaseUpgradeabilityProxy.sol\":1769:1800  sstore(slot, newImplementation) */\n      sstore\n        /* \".deps/github/OpenZeppelin/openzeppelin-sdk/packages/lib/contracts/upgradeability/BaseUpgradeabilityProxy.sol\":1761:1806  {... */\n      jump\t// out\n        /* \".deps/github/OpenZeppelin/openzeppelin-sdk/packages/lib/contracts/utils/Address.sol\":910:1526  function isContract(address account) internal view returns (bool) {... */\n    tag_40:\n        /* \".deps/github/OpenZeppelin/openzeppelin-sdk/packages/lib/contracts/utils/Address.sol\":1473:1493  extcodesize(account) */\n      extcodesize\n        /* \".deps/github/OpenZeppelin/openzeppelin-sdk/packages/lib/contracts/utils/Address.sol\":1511:1519  size > 0 */\n      iszero\n      iszero\n      swap1\n        /* \".deps/github/OpenZeppelin/openzeppelin-sdk/packages/lib/contracts/utils/Address.sol\":910:1526  function isContract(address account) internal view returns (bool) {... */\n      jump\t// out\n    stop\n    data_7050c9e0f4ca769c69bd3a8ef740bc37934f8e2c036e5a723fd8ee048ed3f8c3 6f72672e7a657070656c696e6f732e70726f78792e696d706c656d656e746174696f6e\n    data_b5145a64ce8c406e5785204fe5b300f0ceda96d6636350b38fdccb9cd8c0c37c 43616e6e6f742073657420612070726f787920696d706c656d656e746174696f6e20746f2061206e6f6e2d636f6e74726163742061646472657373\n\n    auxdata: 0xa265627a7a72315820316b16fbef002c001d0f40094f6c785043bce173876c394b9fb64123b9646faa64736f6c63430005110032\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b506103a6806100206000396000f3fe60806040526004361061001e5760003560e01c8063d1f5789414610028575b6100266100eb565b005b6100266004803603604081101561003e57600080fd5b73ffffffffffffffffffffffffffffffffffffffff823516919081019060408101602082013564010000000081111561007657600080fd5b82018360208201111561008857600080fd5b803590602001918460018302840111640100000000831117156100aa57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250929550610105945050505050565b6100f3610103565b6101036100fe610242565b610267565b565b600061010f610242565b73ffffffffffffffffffffffffffffffffffffffff161461012f57600080fd5b60405180602361031482396040519081900360230190207f7050c9e0f4ca769c69bd3a8ef740bc37934f8e2c036e5a723fd8ee048ed3f8c314905061017057fe5b6101798261028b565b80511561023e5760008273ffffffffffffffffffffffffffffffffffffffff16826040518082805190602001908083835b602083106101c95780518252601f1990920191602091820191016101aa565b6001836020036101000a038019825116818451168082178552505050505050905001915050600060405180830381855af49150503d8060008114610229576040519150601f19603f3d011682016040523d82523d6000602084013e61022e565b606091505b505090508061023c57600080fd5b505b5050565b7f7050c9e0f4ca769c69bd3a8ef740bc37934f8e2c036e5a723fd8ee048ed3f8c35490565b3660008037600080366000845af43d6000803e808015610286573d6000f35b3d6000fd5b6102948161030d565b6102e9576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252603b815260200180610337603b913960400191505060405180910390fd5b7f7050c9e0f4ca769c69bd3a8ef740bc37934f8e2c036e5a723fd8ee048ed3f8c355565b3b15159056fe6f72672e7a657070656c696e6f732e70726f78792e696d706c656d656e746174696f6e43616e6e6f742073657420612070726f787920696d706c656d656e746174696f6e20746f2061206e6f6e2d636f6e74726163742061646472657373a265627a7a72315820316b16fbef002c001d0f40094f6c785043bce173876c394b9fb64123b9646faa64736f6c63430005110032",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3A6 DUP1 PUSH2 0x20 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x1E JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xD1F57894 EQ PUSH2 0x28 JUMPI JUMPDEST PUSH2 0x26 PUSH2 0xEB JUMP JUMPDEST STOP JUMPDEST PUSH2 0x26 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x3E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 CALLDATALOAD AND SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH1 0x40 DUP2 ADD PUSH1 0x20 DUP3 ADD CALLDATALOAD PUSH5 0x100000000 DUP2 GT ISZERO PUSH2 0x76 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x88 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x1 DUP4 MUL DUP5 ADD GT PUSH5 0x100000000 DUP4 GT OR ISZERO PUSH2 0xAA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP SWAP3 SWAP6 POP PUSH2 0x105 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH2 0xF3 PUSH2 0x103 JUMP JUMPDEST PUSH2 0x103 PUSH2 0xFE PUSH2 0x242 JUMP JUMPDEST PUSH2 0x267 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH2 0x10F PUSH2 0x242 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x12F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x23 PUSH2 0x314 DUP3 CODECOPY PUSH1 0x40 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x23 ADD SWAP1 KECCAK256 PUSH32 0x7050C9E0F4CA769C69BD3A8EF740BC37934F8E2C036E5A723FD8EE048ED3F8C3 EQ SWAP1 POP PUSH2 0x170 JUMPI INVALID JUMPDEST PUSH2 0x179 DUP3 PUSH2 0x28B JUMP JUMPDEST DUP1 MLOAD ISZERO PUSH2 0x23E JUMPI PUSH1 0x0 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH1 0x40 MLOAD DUP1 DUP3 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 JUMPDEST PUSH1 0x20 DUP4 LT PUSH2 0x1C9 JUMPI DUP1 MLOAD DUP3 MSTORE PUSH1 0x1F NOT SWAP1 SWAP3 ADD SWAP2 PUSH1 0x20 SWAP2 DUP3 ADD SWAP2 ADD PUSH2 0x1AA JUMP JUMPDEST PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB DUP1 NOT DUP3 MLOAD AND DUP2 DUP5 MLOAD AND DUP1 DUP3 OR DUP6 MSTORE POP POP POP POP POP POP SWAP1 POP ADD SWAP2 POP POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 GAS DELEGATECALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x229 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x22E JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x23C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMPDEST POP POP JUMP JUMPDEST PUSH32 0x7050C9E0F4CA769C69BD3A8EF740BC37934F8E2C036E5A723FD8EE048ED3F8C3 SLOAD SWAP1 JUMP JUMPDEST CALLDATASIZE PUSH1 0x0 DUP1 CALLDATACOPY PUSH1 0x0 DUP1 CALLDATASIZE PUSH1 0x0 DUP5 GAS DELEGATECALL RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY DUP1 DUP1 ISZERO PUSH2 0x286 JUMPI RETURNDATASIZE PUSH1 0x0 RETURN JUMPDEST RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST PUSH2 0x294 DUP2 PUSH2 0x30D JUMP JUMPDEST PUSH2 0x2E9 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x3B DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x337 PUSH1 0x3B SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH32 0x7050C9E0F4CA769C69BD3A8EF740BC37934F8E2C036E5A723FD8EE048ED3F8C3 SSTORE JUMP JUMPDEST EXTCODESIZE ISZERO ISZERO SWAP1 JUMP INVALID PUSH16 0x72672E7A657070656C696E6F732E7072 PUSH16 0x78792E696D706C656D656E746174696F PUSH15 0x43616E6E6F74207365742061207072 PUSH16 0x787920696D706C656D656E746174696F PUSH15 0x20746F2061206E6F6E2D636F6E7472 PUSH2 0x6374 KECCAK256 PUSH2 0x6464 PUSH19 0x657373A265627A7A72315820316B16FBEF002C STOP SAR 0xF BLOCKHASH MULMOD 0x4F PUSH13 0x785043BCE173876C394B9FB641 0x23 0xB9 PUSH5 0x6FAA64736F PUSH13 0x63430005110032000000000000 ",
							"sourceMap": "227:947:1:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;227:947:1;;;;;;;"
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "60806040526004361061001e5760003560e01c8063d1f5789414610028575b6100266100eb565b005b6100266004803603604081101561003e57600080fd5b73ffffffffffffffffffffffffffffffffffffffff823516919081019060408101602082013564010000000081111561007657600080fd5b82018360208201111561008857600080fd5b803590602001918460018302840111640100000000831117156100aa57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250929550610105945050505050565b6100f3610103565b6101036100fe610242565b610267565b565b600061010f610242565b73ffffffffffffffffffffffffffffffffffffffff161461012f57600080fd5b60405180602361031482396040519081900360230190207f7050c9e0f4ca769c69bd3a8ef740bc37934f8e2c036e5a723fd8ee048ed3f8c314905061017057fe5b6101798261028b565b80511561023e5760008273ffffffffffffffffffffffffffffffffffffffff16826040518082805190602001908083835b602083106101c95780518252601f1990920191602091820191016101aa565b6001836020036101000a038019825116818451168082178552505050505050905001915050600060405180830381855af49150503d8060008114610229576040519150601f19603f3d011682016040523d82523d6000602084013e61022e565b606091505b505090508061023c57600080fd5b505b5050565b7f7050c9e0f4ca769c69bd3a8ef740bc37934f8e2c036e5a723fd8ee048ed3f8c35490565b3660008037600080366000845af43d6000803e808015610286573d6000f35b3d6000fd5b6102948161030d565b6102e9576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252603b815260200180610337603b913960400191505060405180910390fd5b7f7050c9e0f4ca769c69bd3a8ef740bc37934f8e2c036e5a723fd8ee048ed3f8c355565b3b15159056fe6f72672e7a657070656c696e6f732e70726f78792e696d706c656d656e746174696f6e43616e6e6f742073657420612070726f787920696d706c656d656e746174696f6e20746f2061206e6f6e2d636f6e74726163742061646472657373a265627a7a72315820316b16fbef002c001d0f40094f6c785043bce173876c394b9fb64123b9646faa64736f6c63430005110032",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x1E JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xD1F57894 EQ PUSH2 0x28 JUMPI JUMPDEST PUSH2 0x26 PUSH2 0xEB JUMP JUMPDEST STOP JUMPDEST PUSH2 0x26 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x3E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 CALLDATALOAD AND SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH1 0x40 DUP2 ADD PUSH1 0x20 DUP3 ADD CALLDATALOAD PUSH5 0x100000000 DUP2 GT ISZERO PUSH2 0x76 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x88 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x1 DUP4 MUL DUP5 ADD GT PUSH5 0x100000000 DUP4 GT OR ISZERO PUSH2 0xAA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP SWAP3 SWAP6 POP PUSH2 0x105 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH2 0xF3 PUSH2 0x103 JUMP JUMPDEST PUSH2 0x103 PUSH2 0xFE PUSH2 0x242 JUMP JUMPDEST PUSH2 0x267 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH2 0x10F PUSH2 0x242 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x12F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x23 PUSH2 0x314 DUP3 CODECOPY PUSH1 0x40 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x23 ADD SWAP1 KECCAK256 PUSH32 0x7050C9E0F4CA769C69BD3A8EF740BC37934F8E2C036E5A723FD8EE048ED3F8C3 EQ SWAP1 POP PUSH2 0x170 JUMPI INVALID JUMPDEST PUSH2 0x179 DUP3 PUSH2 0x28B JUMP JUMPDEST DUP1 MLOAD ISZERO PUSH2 0x23E JUMPI PUSH1 0x0 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH1 0x40 MLOAD DUP1 DUP3 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 JUMPDEST PUSH1 0x20 DUP4 LT PUSH2 0x1C9 JUMPI DUP1 MLOAD DUP3 MSTORE PUSH1 0x1F NOT SWAP1 SWAP3 ADD SWAP2 PUSH1 0x20 SWAP2 DUP3 ADD SWAP2 ADD PUSH2 0x1AA JUMP JUMPDEST PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB DUP1 NOT DUP3 MLOAD AND DUP2 DUP5 MLOAD AND DUP1 DUP3 OR DUP6 MSTORE POP POP POP POP POP POP SWAP1 POP ADD SWAP2 POP POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 GAS DELEGATECALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x229 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x22E JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x23C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMPDEST POP POP JUMP JUMPDEST PUSH32 0x7050C9E0F4CA769C69BD3A8EF740BC37934F8E2C036E5A723FD8EE048ED3F8C3 SLOAD SWAP1 JUMP JUMPDEST CALLDATASIZE PUSH1 0x0 DUP1 CALLDATACOPY PUSH1 0x0 DUP1 CALLDATASIZE PUSH1 0x0 DUP5 GAS DELEGATECALL RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY DUP1 DUP1 ISZERO PUSH2 0x286 JUMPI RETURNDATASIZE PUSH1 0x0 RETURN JUMPDEST RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST PUSH2 0x294 DUP2 PUSH2 0x30D JUMP JUMPDEST PUSH2 0x2E9 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x3B DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x337 PUSH1 0x3B SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH32 0x7050C9E0F4CA769C69BD3A8EF740BC37934F8E2C036E5A723FD8EE048ED3F8C3 SSTORE JUMP JUMPDEST EXTCODESIZE ISZERO ISZERO SWAP1 JUMP INVALID PUSH16 0x72672E7A657070656C696E6F732E7072 PUSH16 0x78792E696D706C656D656E746174696F PUSH15 0x43616E6E6F74207365742061207072 PUSH16 0x787920696D706C656D656E746174696F PUSH15 0x20746F2061206E6F6E2D636F6E7472 PUSH2 0x6374 KECCAK256 PUSH2 0x6464 PUSH19 0x657373A265627A7A72315820316B16FBEF002C STOP SAR 0xF BLOCKHASH MULMOD 0x4F PUSH13 0x785043BCE173876C394B9FB641 0x23 0xB9 PUSH5 0x6FAA64736F PUSH13 0x63430005110032000000000000 ",
							"sourceMap": "227:947:1:-;;;;;;;;;;;;;;;;;;453:11:2;:9;:11::i;:::-;227:947:1;822:348;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;822:348:1;;;;;;;;;;;;;;;;21:11:-1;5:28;;2:2;;;46:1;43;36:12;2:2;822:348:1;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;822:348:1;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;822:348:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;81:16;;74:27;;;;-1:-1;822:348:1;;-1:-1:-1;822:348:1;;-1:-1:-1;;;;;822:348:1:i;1952:90:2:-;1988:15;:13;:15::i;:::-;2009:28;2019:17;:15;:17::i;:::-;2009:9;:28::i;:::-;1952:90::o;822:348:1:-;936:1;907:17;:15;:17::i;:::-;:31;;;899:40;;;;;;975:48;;;;;;;;;;;;;;;;;769:66:0;952:71:1;;-1:-1:-1;945:79:1;;;;1030:26;1049:6;1030:18;:26::i;:::-;1065:12;;:16;1062:104;;1092:12;1109:6;:19;;1129:5;1109:26;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;36:153;;176:10;;164:23;;-1:-1;;139:12;;;;98:2;89:12;;;;114;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;1109:26:1;;;;;;;;;;;;;;;;;;;;;;;14:1:-1;21;16:31;;;;75:4;69:11;64:16;;144:4;140:9;133:4;115:16;111:27;107:43;104:1;100:51;94:4;87:65;169:16;166:1;159:27;225:16;222:1;215:4;212:1;208:12;193:49;7:242;;16:31;36:4;31:9;;7:242;;1091:44:1;;;1151:7;1143:16;;;;;;1062:104;;822:348;;:::o;949:156:0:-;769:66;1084:11;;1068:33::o;878:731:2:-;1180:12;1177:1;1174;1161:32;1370:1;1367;1353:12;1350:1;1334:14;1329:3;1316:56;1434:14;1431:1;1428;1413:36;1464:6;1519:36;;;;1582:14;1579:1;1572:25;1519:36;1538:14;1535:1;1528:25;1519:291:0;1597:43;1622:17;1597:24;:43::i;:::-;1589:115;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;769:66;1769:31;1761:45::o;910:616:3:-;1473:20;1511:8;;;910:616::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "186800",
								"executionCost": "232",
								"totalCost": "187032"
							},
							"external": {
								"": "infinite",
								"initialize(address,bytes)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 227,
									"end": 1174,
									"name": "PUSH",
									"value": "80"
								},
								{
									"begin": 227,
									"end": 1174,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 227,
									"end": 1174,
									"name": "MSTORE"
								},
								{
									"begin": 227,
									"end": 1174,
									"name": "CALLVALUE"
								},
								{
									"begin": 8,
									"end": 17,
									"name": "DUP1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "ISZERO"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "PUSH [tag]",
									"value": "1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "JUMPI"
								},
								{
									"begin": 30,
									"end": 31,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 27,
									"end": 28,
									"name": "DUP1"
								},
								{
									"begin": 20,
									"end": 32,
									"name": "REVERT"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "tag",
									"value": "1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "JUMPDEST"
								},
								{
									"begin": 227,
									"end": 1174,
									"name": "POP"
								},
								{
									"begin": 227,
									"end": 1174,
									"name": "PUSH #[$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 227,
									"end": 1174,
									"name": "DUP1"
								},
								{
									"begin": 227,
									"end": 1174,
									"name": "PUSH [$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 227,
									"end": 1174,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 227,
									"end": 1174,
									"name": "CODECOPY"
								},
								{
									"begin": 227,
									"end": 1174,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 227,
									"end": 1174,
									"name": "RETURN"
								}
							],
							".data": {
								"0": {
									".auxdata": "a265627a7a72315820316b16fbef002c001d0f40094f6c785043bce173876c394b9fb64123b9646faa64736f6c63430005110032",
									".code": [
										{
											"begin": 227,
											"end": 1174,
											"name": "PUSH",
											"value": "80"
										},
										{
											"begin": 227,
											"end": 1174,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 227,
											"end": 1174,
											"name": "MSTORE"
										},
										{
											"begin": 227,
											"end": 1174,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 227,
											"end": 1174,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 227,
											"end": 1174,
											"name": "LT"
										},
										{
											"begin": 227,
											"end": 1174,
											"name": "PUSH [tag]",
											"value": "1"
										},
										{
											"begin": 227,
											"end": 1174,
											"name": "JUMPI"
										},
										{
											"begin": 227,
											"end": 1174,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 227,
											"end": 1174,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 227,
											"end": 1174,
											"name": "PUSH",
											"value": "E0"
										},
										{
											"begin": 227,
											"end": 1174,
											"name": "SHR"
										},
										{
											"begin": 227,
											"end": 1174,
											"name": "DUP1"
										},
										{
											"begin": 227,
											"end": 1174,
											"name": "PUSH",
											"value": "D1F57894"
										},
										{
											"begin": 227,
											"end": 1174,
											"name": "EQ"
										},
										{
											"begin": 227,
											"end": 1174,
											"name": "PUSH [tag]",
											"value": "2"
										},
										{
											"begin": 227,
											"end": 1174,
											"name": "JUMPI"
										},
										{
											"begin": 227,
											"end": 1174,
											"name": "tag",
											"value": "1"
										},
										{
											"begin": 227,
											"end": 1174,
											"name": "JUMPDEST"
										},
										{
											"begin": 453,
											"end": 464,
											"name": "PUSH [tag]",
											"value": "5"
										},
										{
											"begin": 453,
											"end": 462,
											"name": "PUSH [tag]",
											"value": "6"
										},
										{
											"begin": 453,
											"end": 464,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 453,
											"end": 464,
											"name": "tag",
											"value": "5"
										},
										{
											"begin": 453,
											"end": 464,
											"name": "JUMPDEST"
										},
										{
											"begin": 227,
											"end": 1174,
											"name": "STOP"
										},
										{
											"begin": 822,
											"end": 1170,
											"name": "tag",
											"value": "2"
										},
										{
											"begin": 822,
											"end": 1170,
											"name": "JUMPDEST"
										},
										{
											"begin": 822,
											"end": 1170,
											"name": "PUSH [tag]",
											"value": "5"
										},
										{
											"begin": 822,
											"end": 1170,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 822,
											"end": 1170,
											"name": "DUP1"
										},
										{
											"begin": 822,
											"end": 1170,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 822,
											"end": 1170,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "8"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "8"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 822,
											"end": 1170,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 822,
											"end": 1170,
											"name": "DUP3"
										},
										{
											"begin": 822,
											"end": 1170,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 822,
											"end": 1170,
											"name": "AND"
										},
										{
											"begin": 822,
											"end": 1170,
											"name": "SWAP2"
										},
										{
											"begin": 822,
											"end": 1170,
											"name": "SWAP1"
										},
										{
											"begin": 822,
											"end": 1170,
											"name": "DUP2"
										},
										{
											"begin": 822,
											"end": 1170,
											"name": "ADD"
										},
										{
											"begin": 822,
											"end": 1170,
											"name": "SWAP1"
										},
										{
											"begin": 822,
											"end": 1170,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 822,
											"end": 1170,
											"name": "DUP2"
										},
										{
											"begin": 822,
											"end": 1170,
											"name": "ADD"
										},
										{
											"begin": 822,
											"end": 1170,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 822,
											"end": 1170,
											"name": "DUP3"
										},
										{
											"begin": 822,
											"end": 1170,
											"name": "ADD"
										},
										{
											"begin": 822,
											"end": 1170,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 21,
											"end": 32,
											"name": "PUSH",
											"value": "100000000"
										},
										{
											"begin": 5,
											"end": 33,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 33,
											"name": "GT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "9"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 46,
											"end": 47,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 43,
											"end": 44,
											"name": "DUP1"
										},
										{
											"begin": 36,
											"end": 48,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "9"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 822,
											"end": 1170,
											"name": "DUP3"
										},
										{
											"begin": 822,
											"end": 1170,
											"name": "ADD"
										},
										{
											"begin": 35,
											"end": 44,
											"name": "DUP4"
										},
										{
											"begin": 28,
											"end": 32,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 12,
											"end": 26,
											"name": "DUP3"
										},
										{
											"begin": 8,
											"end": 33,
											"name": "ADD"
										},
										{
											"begin": 5,
											"end": 45,
											"name": "GT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "10"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 58,
											"end": 59,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 55,
											"end": 56,
											"name": "DUP1"
										},
										{
											"begin": 48,
											"end": 60,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "10"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 822,
											"end": 1170,
											"name": "DUP1"
										},
										{
											"begin": 822,
											"end": 1170,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 822,
											"end": 1170,
											"name": "SWAP1"
										},
										{
											"begin": 822,
											"end": 1170,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 822,
											"end": 1170,
											"name": "ADD"
										},
										{
											"begin": 822,
											"end": 1170,
											"name": "SWAP2"
										},
										{
											"begin": 100,
											"end": 109,
											"name": "DUP5"
										},
										{
											"begin": 95,
											"end": 96,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 81,
											"end": 93,
											"name": "DUP4"
										},
										{
											"begin": 77,
											"end": 97,
											"name": "MUL"
										},
										{
											"begin": 67,
											"end": 75,
											"name": "DUP5"
										},
										{
											"begin": 63,
											"end": 98,
											"name": "ADD"
										},
										{
											"begin": 60,
											"end": 110,
											"name": "GT"
										},
										{
											"begin": 39,
											"end": 50,
											"name": "PUSH",
											"value": "100000000"
										},
										{
											"begin": 25,
											"end": 37,
											"name": "DUP4"
										},
										{
											"begin": 22,
											"end": 51,
											"name": "GT"
										},
										{
											"begin": 11,
											"end": 118,
											"name": "OR"
										},
										{
											"begin": 8,
											"end": 10,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 10,
											"name": "PUSH [tag]",
											"value": "11"
										},
										{
											"begin": 8,
											"end": 10,
											"name": "JUMPI"
										},
										{
											"begin": 131,
											"end": 132,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 128,
											"end": 129,
											"name": "DUP1"
										},
										{
											"begin": 121,
											"end": 133,
											"name": "REVERT"
										},
										{
											"begin": 8,
											"end": 10,
											"name": "tag",
											"value": "11"
										},
										{
											"begin": 8,
											"end": 10,
											"name": "JUMPDEST"
										},
										{
											"begin": 822,
											"end": 1170,
											"name": "SWAP2"
										},
										{
											"begin": 822,
											"end": 1170,
											"name": "SWAP1"
										},
										{
											"begin": 822,
											"end": 1170,
											"name": "DUP1"
										},
										{
											"begin": 822,
											"end": 1170,
											"name": "DUP1"
										},
										{
											"begin": 822,
											"end": 1170,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 822,
											"end": 1170,
											"name": "ADD"
										},
										{
											"begin": 822,
											"end": 1170,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 822,
											"end": 1170,
											"name": "DUP1"
										},
										{
											"begin": 822,
											"end": 1170,
											"name": "SWAP2"
										},
										{
											"begin": 822,
											"end": 1170,
											"name": "DIV"
										},
										{
											"begin": 822,
											"end": 1170,
											"name": "MUL"
										},
										{
											"begin": 822,
											"end": 1170,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 822,
											"end": 1170,
											"name": "ADD"
										},
										{
											"begin": 822,
											"end": 1170,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 822,
											"end": 1170,
											"name": "MLOAD"
										},
										{
											"begin": 822,
											"end": 1170,
											"name": "SWAP1"
										},
										{
											"begin": 822,
											"end": 1170,
											"name": "DUP2"
										},
										{
											"begin": 822,
											"end": 1170,
											"name": "ADD"
										},
										{
											"begin": 822,
											"end": 1170,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 822,
											"end": 1170,
											"name": "MSTORE"
										},
										{
											"begin": 822,
											"end": 1170,
											"name": "DUP1"
										},
										{
											"begin": 822,
											"end": 1170,
											"name": "SWAP4"
										},
										{
											"begin": 822,
											"end": 1170,
											"name": "SWAP3"
										},
										{
											"begin": 822,
											"end": 1170,
											"name": "SWAP2"
										},
										{
											"begin": 822,
											"end": 1170,
											"name": "SWAP1"
										},
										{
											"begin": 822,
											"end": 1170,
											"name": "DUP2"
										},
										{
											"begin": 822,
											"end": 1170,
											"name": "DUP2"
										},
										{
											"begin": 822,
											"end": 1170,
											"name": "MSTORE"
										},
										{
											"begin": 822,
											"end": 1170,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 822,
											"end": 1170,
											"name": "ADD"
										},
										{
											"begin": 822,
											"end": 1170,
											"name": "DUP4"
										},
										{
											"begin": 822,
											"end": 1170,
											"name": "DUP4"
										},
										{
											"begin": 30,
											"end": 33,
											"name": "DUP1"
										},
										{
											"begin": 22,
											"end": 28,
											"name": "DUP3"
										},
										{
											"begin": 14,
											"end": 20,
											"name": "DUP5"
										},
										{
											"begin": 1,
											"end": 34,
											"name": "CALLDATACOPY"
										},
										{
											"begin": 99,
											"end": 100,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 81,
											"end": 97,
											"name": "SWAP3"
										},
										{
											"begin": 81,
											"end": 97,
											"name": "ADD"
										},
										{
											"begin": 74,
											"end": 101,
											"name": "SWAP2"
										},
										{
											"begin": 74,
											"end": 101,
											"name": "SWAP1"
										},
										{
											"begin": 74,
											"end": 101,
											"name": "SWAP2"
										},
										{
											"begin": 74,
											"end": 101,
											"name": "MSTORE"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 822,
											"end": 1170,
											"name": "SWAP3"
										},
										{
											"begin": 822,
											"end": 1170,
											"name": "SWAP6"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 822,
											"end": 1170,
											"name": "PUSH [tag]",
											"value": "12"
										},
										{
											"begin": 822,
											"end": 1170,
											"name": "SWAP5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 822,
											"end": 1170,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 1952,
											"end": 2042,
											"name": "tag",
											"value": "6"
										},
										{
											"begin": 1952,
											"end": 2042,
											"name": "JUMPDEST"
										},
										{
											"begin": 1988,
											"end": 2003,
											"name": "PUSH [tag]",
											"value": "14"
										},
										{
											"begin": 1988,
											"end": 2001,
											"name": "PUSH [tag]",
											"value": "16"
										},
										{
											"begin": 1988,
											"end": 2003,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 1988,
											"end": 2003,
											"name": "tag",
											"value": "14"
										},
										{
											"begin": 1988,
											"end": 2003,
											"name": "JUMPDEST"
										},
										{
											"begin": 2009,
											"end": 2037,
											"name": "PUSH [tag]",
											"value": "16"
										},
										{
											"begin": 2019,
											"end": 2036,
											"name": "PUSH [tag]",
											"value": "17"
										},
										{
											"begin": 2019,
											"end": 2034,
											"name": "PUSH [tag]",
											"value": "18"
										},
										{
											"begin": 2019,
											"end": 2036,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 2019,
											"end": 2036,
											"name": "tag",
											"value": "17"
										},
										{
											"begin": 2019,
											"end": 2036,
											"name": "JUMPDEST"
										},
										{
											"begin": 2009,
											"end": 2018,
											"name": "PUSH [tag]",
											"value": "19"
										},
										{
											"begin": 2009,
											"end": 2037,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 2009,
											"end": 2037,
											"name": "tag",
											"value": "16"
										},
										{
											"begin": 2009,
											"end": 2037,
											"name": "JUMPDEST"
										},
										{
											"begin": 1952,
											"end": 2042,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 822,
											"end": 1170,
											"name": "tag",
											"value": "12"
										},
										{
											"begin": 822,
											"end": 1170,
											"name": "JUMPDEST"
										},
										{
											"begin": 936,
											"end": 937,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 907,
											"end": 924,
											"name": "PUSH [tag]",
											"value": "21"
										},
										{
											"begin": 907,
											"end": 922,
											"name": "PUSH [tag]",
											"value": "18"
										},
										{
											"begin": 907,
											"end": 924,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 907,
											"end": 924,
											"name": "tag",
											"value": "21"
										},
										{
											"begin": 907,
											"end": 924,
											"name": "JUMPDEST"
										},
										{
											"begin": 907,
											"end": 938,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 907,
											"end": 938,
											"name": "AND"
										},
										{
											"begin": 907,
											"end": 938,
											"name": "EQ"
										},
										{
											"begin": 899,
											"end": 939,
											"name": "PUSH [tag]",
											"value": "22"
										},
										{
											"begin": 899,
											"end": 939,
											"name": "JUMPI"
										},
										{
											"begin": 899,
											"end": 939,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 899,
											"end": 939,
											"name": "DUP1"
										},
										{
											"begin": 899,
											"end": 939,
											"name": "REVERT"
										},
										{
											"begin": 899,
											"end": 939,
											"name": "tag",
											"value": "22"
										},
										{
											"begin": 899,
											"end": 939,
											"name": "JUMPDEST"
										},
										{
											"begin": 975,
											"end": 1023,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 975,
											"end": 1023,
											"name": "MLOAD"
										},
										{
											"begin": 975,
											"end": 1023,
											"name": "DUP1"
										},
										{
											"begin": 975,
											"end": 1023,
											"name": "PUSH",
											"value": "23"
										},
										{
											"begin": 975,
											"end": 1023,
											"name": "PUSH data",
											"value": "7050C9E0F4CA769C69BD3A8EF740BC37934F8E2C036E5A723FD8EE048ED3F8C3"
										},
										{
											"begin": 975,
											"end": 1023,
											"name": "DUP3"
										},
										{
											"begin": 975,
											"end": 1023,
											"name": "CODECOPY"
										},
										{
											"begin": 975,
											"end": 1023,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 975,
											"end": 1023,
											"name": "MLOAD"
										},
										{
											"begin": 975,
											"end": 1023,
											"name": "SWAP1"
										},
										{
											"begin": 975,
											"end": 1023,
											"name": "DUP2"
										},
										{
											"begin": 975,
											"end": 1023,
											"name": "SWAP1"
										},
										{
											"begin": 975,
											"end": 1023,
											"name": "SUB"
										},
										{
											"begin": 975,
											"end": 1023,
											"name": "PUSH",
											"value": "23"
										},
										{
											"begin": 975,
											"end": 1023,
											"name": "ADD"
										},
										{
											"begin": 975,
											"end": 1023,
											"name": "SWAP1"
										},
										{
											"begin": 975,
											"end": 1023,
											"name": "KECCAK256"
										},
										{
											"begin": 769,
											"end": 835,
											"name": "PUSH",
											"value": "7050C9E0F4CA769C69BD3A8EF740BC37934F8E2C036E5A723FD8EE048ED3F8C3"
										},
										{
											"begin": 952,
											"end": 1023,
											"name": "EQ"
										},
										{
											"begin": 952,
											"end": 1023,
											"name": "SWAP1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 945,
											"end": 1024,
											"name": "PUSH [tag]",
											"value": "23"
										},
										{
											"begin": 945,
											"end": 1024,
											"name": "JUMPI"
										},
										{
											"begin": 945,
											"end": 1024,
											"name": "INVALID"
										},
										{
											"begin": 945,
											"end": 1024,
											"name": "tag",
											"value": "23"
										},
										{
											"begin": 945,
											"end": 1024,
											"name": "JUMPDEST"
										},
										{
											"begin": 1030,
											"end": 1056,
											"name": "PUSH [tag]",
											"value": "24"
										},
										{
											"begin": 1049,
											"end": 1055,
											"name": "DUP3"
										},
										{
											"begin": 1030,
											"end": 1048,
											"name": "PUSH [tag]",
											"value": "25"
										},
										{
											"begin": 1030,
											"end": 1056,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 1030,
											"end": 1056,
											"name": "tag",
											"value": "24"
										},
										{
											"begin": 1030,
											"end": 1056,
											"name": "JUMPDEST"
										},
										{
											"begin": 1065,
											"end": 1077,
											"name": "DUP1"
										},
										{
											"begin": 1065,
											"end": 1077,
											"name": "MLOAD"
										},
										{
											"begin": 1065,
											"end": 1081,
											"name": "ISZERO"
										},
										{
											"begin": 1062,
											"end": 1166,
											"name": "PUSH [tag]",
											"value": "26"
										},
										{
											"begin": 1062,
											"end": 1166,
											"name": "JUMPI"
										},
										{
											"begin": 1092,
											"end": 1104,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1109,
											"end": 1115,
											"name": "DUP3"
										},
										{
											"begin": 1109,
											"end": 1128,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1109,
											"end": 1128,
											"name": "AND"
										},
										{
											"begin": 1129,
											"end": 1134,
											"name": "DUP3"
										},
										{
											"begin": 1109,
											"end": 1135,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1109,
											"end": 1135,
											"name": "MLOAD"
										},
										{
											"begin": 1109,
											"end": 1135,
											"name": "DUP1"
										},
										{
											"begin": 1109,
											"end": 1135,
											"name": "DUP3"
										},
										{
											"begin": 1109,
											"end": 1135,
											"name": "DUP1"
										},
										{
											"begin": 1109,
											"end": 1135,
											"name": "MLOAD"
										},
										{
											"begin": 1109,
											"end": 1135,
											"name": "SWAP1"
										},
										{
											"begin": 1109,
											"end": 1135,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1109,
											"end": 1135,
											"name": "ADD"
										},
										{
											"begin": 1109,
											"end": 1135,
											"name": "SWAP1"
										},
										{
											"begin": 1109,
											"end": 1135,
											"name": "DUP1"
										},
										{
											"begin": 1109,
											"end": 1135,
											"name": "DUP4"
										},
										{
											"begin": 1109,
											"end": 1135,
											"name": "DUP4"
										},
										{
											"begin": 36,
											"end": 189,
											"name": "tag",
											"value": "27"
										},
										{
											"begin": 36,
											"end": 189,
											"name": "JUMPDEST"
										},
										{
											"begin": 66,
											"end": 68,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 61,
											"end": 64,
											"name": "DUP4"
										},
										{
											"begin": 58,
											"end": 69,
											"name": "LT"
										},
										{
											"begin": 36,
											"end": 189,
											"name": "PUSH [tag]",
											"value": "29"
										},
										{
											"begin": 36,
											"end": 189,
											"name": "JUMPI"
										},
										{
											"begin": 176,
											"end": 186,
											"name": "DUP1"
										},
										{
											"begin": 176,
											"end": 186,
											"name": "MLOAD"
										},
										{
											"begin": 164,
											"end": 187,
											"name": "DUP3"
										},
										{
											"begin": 164,
											"end": 187,
											"name": "MSTORE"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT"
										},
										{
											"begin": 139,
											"end": 151,
											"name": "SWAP1"
										},
										{
											"begin": 139,
											"end": 151,
											"name": "SWAP3"
										},
										{
											"begin": 139,
											"end": 151,
											"name": "ADD"
										},
										{
											"begin": 139,
											"end": 151,
											"name": "SWAP2"
										},
										{
											"begin": 98,
											"end": 100,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 89,
											"end": 101,
											"name": "SWAP2"
										},
										{
											"begin": 89,
											"end": 101,
											"name": "DUP3"
										},
										{
											"begin": 89,
											"end": 101,
											"name": "ADD"
										},
										{
											"begin": 89,
											"end": 101,
											"name": "SWAP2"
										},
										{
											"begin": 114,
											"end": 126,
											"name": "ADD"
										},
										{
											"begin": 36,
											"end": 189,
											"name": "PUSH [tag]",
											"value": "27"
										},
										{
											"begin": 36,
											"end": 189,
											"name": "JUMP"
										},
										{
											"begin": 36,
											"end": 189,
											"name": "tag",
											"value": "29"
										},
										{
											"begin": 36,
											"end": 189,
											"name": "JUMPDEST"
										},
										{
											"begin": 274,
											"end": 275,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 267,
											"end": 270,
											"name": "DUP4"
										},
										{
											"begin": 263,
											"end": 265,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 259,
											"end": 271,
											"name": "SUB"
										},
										{
											"begin": 254,
											"end": 257,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 250,
											"end": 272,
											"name": "EXP"
										},
										{
											"begin": 246,
											"end": 276,
											"name": "SUB"
										},
										{
											"begin": 315,
											"end": 319,
											"name": "DUP1"
										},
										{
											"begin": 311,
											"end": 320,
											"name": "NOT"
										},
										{
											"begin": 305,
											"end": 308,
											"name": "DUP3"
										},
										{
											"begin": 299,
											"end": 309,
											"name": "MLOAD"
										},
										{
											"begin": 295,
											"end": 321,
											"name": "AND"
										},
										{
											"begin": 356,
											"end": 360,
											"name": "DUP2"
										},
										{
											"begin": 350,
											"end": 353,
											"name": "DUP5"
										},
										{
											"begin": 344,
											"end": 354,
											"name": "MLOAD"
										},
										{
											"begin": 340,
											"end": 361,
											"name": "AND"
										},
										{
											"begin": 389,
											"end": 396,
											"name": "DUP1"
										},
										{
											"begin": 380,
											"end": 387,
											"name": "DUP3"
										},
										{
											"begin": 377,
											"end": 397,
											"name": "OR"
										},
										{
											"begin": 372,
											"end": 375,
											"name": "DUP6"
										},
										{
											"begin": 365,
											"end": 398,
											"name": "MSTORE"
										},
										{
											"begin": 3,
											"end": 402,
											"name": "POP"
										},
										{
											"begin": 3,
											"end": 402,
											"name": "POP"
										},
										{
											"begin": 3,
											"end": 402,
											"name": "POP"
										},
										{
											"begin": 1109,
											"end": 1135,
											"name": "POP"
										},
										{
											"begin": 1109,
											"end": 1135,
											"name": "POP"
										},
										{
											"begin": 1109,
											"end": 1135,
											"name": "POP"
										},
										{
											"begin": 1109,
											"end": 1135,
											"name": "SWAP1"
										},
										{
											"begin": 1109,
											"end": 1135,
											"name": "POP"
										},
										{
											"begin": 1109,
											"end": 1135,
											"name": "ADD"
										},
										{
											"begin": 1109,
											"end": 1135,
											"name": "SWAP2"
										},
										{
											"begin": 1109,
											"end": 1135,
											"name": "POP"
										},
										{
											"begin": 1109,
											"end": 1135,
											"name": "POP"
										},
										{
											"begin": 1109,
											"end": 1135,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1109,
											"end": 1135,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1109,
											"end": 1135,
											"name": "MLOAD"
										},
										{
											"begin": 1109,
											"end": 1135,
											"name": "DUP1"
										},
										{
											"begin": 1109,
											"end": 1135,
											"name": "DUP4"
										},
										{
											"begin": 1109,
											"end": 1135,
											"name": "SUB"
										},
										{
											"begin": 1109,
											"end": 1135,
											"name": "DUP2"
										},
										{
											"begin": 1109,
											"end": 1135,
											"name": "DUP6"
										},
										{
											"begin": 1109,
											"end": 1135,
											"name": "GAS"
										},
										{
											"begin": 1109,
											"end": 1135,
											"name": "DELEGATECALL"
										},
										{
											"begin": 1109,
											"end": 1135,
											"name": "SWAP2"
										},
										{
											"begin": 1109,
											"end": 1135,
											"name": "POP"
										},
										{
											"begin": 1109,
											"end": 1135,
											"name": "POP"
										},
										{
											"begin": 1109,
											"end": 1135,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 14,
											"end": 15,
											"name": "DUP1"
										},
										{
											"begin": 21,
											"end": 22,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 16,
											"end": 47,
											"name": "DUP2"
										},
										{
											"begin": 16,
											"end": 47,
											"name": "EQ"
										},
										{
											"begin": 16,
											"end": 47,
											"name": "PUSH [tag]",
											"value": "31"
										},
										{
											"begin": 16,
											"end": 47,
											"name": "JUMPI"
										},
										{
											"begin": 75,
											"end": 79,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 69,
											"end": 80,
											"name": "MLOAD"
										},
										{
											"begin": 64,
											"end": 80,
											"name": "SWAP2"
										},
										{
											"begin": 64,
											"end": 80,
											"name": "POP"
										},
										{
											"begin": 144,
											"end": 148,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 140,
											"end": 149,
											"name": "NOT"
										},
										{
											"begin": 133,
											"end": 137,
											"name": "PUSH",
											"value": "3F"
										},
										{
											"begin": 115,
											"end": 131,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 111,
											"end": 138,
											"name": "ADD"
										},
										{
											"begin": 107,
											"end": 150,
											"name": "AND"
										},
										{
											"begin": 104,
											"end": 105,
											"name": "DUP3"
										},
										{
											"begin": 100,
											"end": 151,
											"name": "ADD"
										},
										{
											"begin": 94,
											"end": 98,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 87,
											"end": 152,
											"name": "MSTORE"
										},
										{
											"begin": 169,
											"end": 185,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 166,
											"end": 167,
											"name": "DUP3"
										},
										{
											"begin": 159,
											"end": 186,
											"name": "MSTORE"
										},
										{
											"begin": 225,
											"end": 241,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 222,
											"end": 223,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 215,
											"end": 219,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 212,
											"end": 213,
											"name": "DUP5"
										},
										{
											"begin": 208,
											"end": 220,
											"name": "ADD"
										},
										{
											"begin": 193,
											"end": 242,
											"name": "RETURNDATACOPY"
										},
										{
											"begin": 7,
											"end": 249,
											"name": "PUSH [tag]",
											"value": "30"
										},
										{
											"begin": 7,
											"end": 249,
											"name": "JUMP"
										},
										{
											"begin": 16,
											"end": 47,
											"name": "tag",
											"value": "31"
										},
										{
											"begin": 16,
											"end": 47,
											"name": "JUMPDEST"
										},
										{
											"begin": 36,
											"end": 40,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": 31,
											"end": 40,
											"name": "SWAP2"
										},
										{
											"begin": 31,
											"end": 40,
											"name": "POP"
										},
										{
											"begin": 7,
											"end": 249,
											"name": "tag",
											"value": "30"
										},
										{
											"begin": 7,
											"end": 249,
											"name": "JUMPDEST"
										},
										{
											"begin": 7,
											"end": 249,
											"name": "POP"
										},
										{
											"begin": 1091,
											"end": 1135,
											"name": "POP"
										},
										{
											"begin": 1091,
											"end": 1135,
											"name": "SWAP1"
										},
										{
											"begin": 1091,
											"end": 1135,
											"name": "POP"
										},
										{
											"begin": 1151,
											"end": 1158,
											"name": "DUP1"
										},
										{
											"begin": 1143,
											"end": 1159,
											"name": "PUSH [tag]",
											"value": "32"
										},
										{
											"begin": 1143,
											"end": 1159,
											"name": "JUMPI"
										},
										{
											"begin": 1143,
											"end": 1159,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1143,
											"end": 1159,
											"name": "DUP1"
										},
										{
											"begin": 1143,
											"end": 1159,
											"name": "REVERT"
										},
										{
											"begin": 1143,
											"end": 1159,
											"name": "tag",
											"value": "32"
										},
										{
											"begin": 1143,
											"end": 1159,
											"name": "JUMPDEST"
										},
										{
											"begin": 1062,
											"end": 1166,
											"name": "POP"
										},
										{
											"begin": 1062,
											"end": 1166,
											"name": "tag",
											"value": "26"
										},
										{
											"begin": 1062,
											"end": 1166,
											"name": "JUMPDEST"
										},
										{
											"begin": 822,
											"end": 1170,
											"name": "POP"
										},
										{
											"begin": 822,
											"end": 1170,
											"name": "POP"
										},
										{
											"begin": 822,
											"end": 1170,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 949,
											"end": 1105,
											"name": "tag",
											"value": "18"
										},
										{
											"begin": 949,
											"end": 1105,
											"name": "JUMPDEST"
										},
										{
											"begin": 769,
											"end": 835,
											"name": "PUSH",
											"value": "7050C9E0F4CA769C69BD3A8EF740BC37934F8E2C036E5A723FD8EE048ED3F8C3"
										},
										{
											"begin": 1084,
											"end": 1095,
											"name": "SLOAD"
										},
										{
											"begin": 1084,
											"end": 1095,
											"name": "SWAP1"
										},
										{
											"begin": 1068,
											"end": 1101,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 878,
											"end": 1609,
											"name": "tag",
											"value": "19"
										},
										{
											"begin": 878,
											"end": 1609,
											"name": "JUMPDEST"
										},
										{
											"begin": 1180,
											"end": 1192,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 1177,
											"end": 1178,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1174,
											"end": 1175,
											"name": "DUP1"
										},
										{
											"begin": 1161,
											"end": 1193,
											"name": "CALLDATACOPY"
										},
										{
											"begin": 1370,
											"end": 1371,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1367,
											"end": 1368,
											"name": "DUP1"
										},
										{
											"begin": 1353,
											"end": 1365,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 1350,
											"end": 1351,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1334,
											"end": 1348,
											"name": "DUP5"
										},
										{
											"begin": 1329,
											"end": 1332,
											"name": "GAS"
										},
										{
											"begin": 1316,
											"end": 1372,
											"name": "DELEGATECALL"
										},
										{
											"begin": 1434,
											"end": 1448,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 1431,
											"end": 1432,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1428,
											"end": 1429,
											"name": "DUP1"
										},
										{
											"begin": 1413,
											"end": 1449,
											"name": "RETURNDATACOPY"
										},
										{
											"begin": 1464,
											"end": 1470,
											"name": "DUP1"
										},
										{
											"begin": 1519,
											"end": 1555,
											"name": "DUP1"
										},
										{
											"begin": 1519,
											"end": 1555,
											"name": "ISZERO"
										},
										{
											"begin": 1519,
											"end": 1555,
											"name": "PUSH [tag]",
											"value": "37"
										},
										{
											"begin": 1519,
											"end": 1555,
											"name": "JUMPI"
										},
										{
											"begin": 1582,
											"end": 1596,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 1579,
											"end": 1580,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1572,
											"end": 1597,
											"name": "RETURN"
										},
										{
											"begin": 1519,
											"end": 1555,
											"name": "tag",
											"value": "37"
										},
										{
											"begin": 1519,
											"end": 1555,
											"name": "JUMPDEST"
										},
										{
											"begin": 1538,
											"end": 1552,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 1535,
											"end": 1536,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1528,
											"end": 1553,
											"name": "REVERT"
										},
										{
											"begin": 1519,
											"end": 1810,
											"name": "tag",
											"value": "25"
										},
										{
											"begin": 1519,
											"end": 1810,
											"name": "JUMPDEST"
										},
										{
											"begin": 1597,
											"end": 1640,
											"name": "PUSH [tag]",
											"value": "39"
										},
										{
											"begin": 1622,
											"end": 1639,
											"name": "DUP2"
										},
										{
											"begin": 1597,
											"end": 1621,
											"name": "PUSH [tag]",
											"value": "40"
										},
										{
											"begin": 1597,
											"end": 1640,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 1597,
											"end": 1640,
											"name": "tag",
											"value": "39"
										},
										{
											"begin": 1597,
											"end": 1640,
											"name": "JUMPDEST"
										},
										{
											"begin": 1589,
											"end": 1704,
											"name": "PUSH [tag]",
											"value": "41"
										},
										{
											"begin": 1589,
											"end": 1704,
											"name": "JUMPI"
										},
										{
											"begin": 1589,
											"end": 1704,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1589,
											"end": 1704,
											"name": "MLOAD"
										},
										{
											"begin": 1589,
											"end": 1704,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1589,
											"end": 1704,
											"name": "DUP2"
										},
										{
											"begin": 1589,
											"end": 1704,
											"name": "MSTORE"
										},
										{
											"begin": 1589,
											"end": 1704,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 1589,
											"end": 1704,
											"name": "ADD"
										},
										{
											"begin": 1589,
											"end": 1704,
											"name": "DUP1"
										},
										{
											"begin": 1589,
											"end": 1704,
											"name": "DUP1"
										},
										{
											"begin": 1589,
											"end": 1704,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1589,
											"end": 1704,
											"name": "ADD"
										},
										{
											"begin": 1589,
											"end": 1704,
											"name": "DUP3"
										},
										{
											"begin": 1589,
											"end": 1704,
											"name": "DUP2"
										},
										{
											"begin": 1589,
											"end": 1704,
											"name": "SUB"
										},
										{
											"begin": 1589,
											"end": 1704,
											"name": "DUP3"
										},
										{
											"begin": 1589,
											"end": 1704,
											"name": "MSTORE"
										},
										{
											"begin": 1589,
											"end": 1704,
											"name": "PUSH",
											"value": "3B"
										},
										{
											"begin": 1589,
											"end": 1704,
											"name": "DUP2"
										},
										{
											"begin": 1589,
											"end": 1704,
											"name": "MSTORE"
										},
										{
											"begin": 1589,
											"end": 1704,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1589,
											"end": 1704,
											"name": "ADD"
										},
										{
											"begin": 1589,
											"end": 1704,
											"name": "DUP1"
										},
										{
											"begin": 1589,
											"end": 1704,
											"name": "PUSH data",
											"value": "B5145A64CE8C406E5785204FE5B300F0CEDA96D6636350B38FDCCB9CD8C0C37C"
										},
										{
											"begin": 1589,
											"end": 1704,
											"name": "PUSH",
											"value": "3B"
										},
										{
											"begin": 1589,
											"end": 1704,
											"name": "SWAP2"
										},
										{
											"begin": 1589,
											"end": 1704,
											"name": "CODECOPY"
										},
										{
											"begin": 1589,
											"end": 1704,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1589,
											"end": 1704,
											"name": "ADD"
										},
										{
											"begin": 1589,
											"end": 1704,
											"name": "SWAP2"
										},
										{
											"begin": 1589,
											"end": 1704,
											"name": "POP"
										},
										{
											"begin": 1589,
											"end": 1704,
											"name": "POP"
										},
										{
											"begin": 1589,
											"end": 1704,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1589,
											"end": 1704,
											"name": "MLOAD"
										},
										{
											"begin": 1589,
											"end": 1704,
											"name": "DUP1"
										},
										{
											"begin": 1589,
											"end": 1704,
											"name": "SWAP2"
										},
										{
											"begin": 1589,
											"end": 1704,
											"name": "SUB"
										},
										{
											"begin": 1589,
											"end": 1704,
											"name": "SWAP1"
										},
										{
											"begin": 1589,
											"end": 1704,
											"name": "REVERT"
										},
										{
											"begin": 1589,
											"end": 1704,
											"name": "tag",
											"value": "41"
										},
										{
											"begin": 1589,
											"end": 1704,
											"name": "JUMPDEST"
										},
										{
											"begin": 769,
											"end": 835,
											"name": "PUSH",
											"value": "7050C9E0F4CA769C69BD3A8EF740BC37934F8E2C036E5A723FD8EE048ED3F8C3"
										},
										{
											"begin": 1769,
											"end": 1800,
											"name": "SSTORE"
										},
										{
											"begin": 1761,
											"end": 1806,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 910,
											"end": 1526,
											"name": "tag",
											"value": "40"
										},
										{
											"begin": 910,
											"end": 1526,
											"name": "JUMPDEST"
										},
										{
											"begin": 1473,
											"end": 1493,
											"name": "EXTCODESIZE"
										},
										{
											"begin": 1511,
											"end": 1519,
											"name": "ISZERO"
										},
										{
											"begin": 1511,
											"end": 1519,
											"name": "ISZERO"
										},
										{
											"begin": 1511,
											"end": 1519,
											"name": "SWAP1"
										},
										{
											"begin": 910,
											"end": 1526,
											"name": "JUMP",
											"value": "[out]"
										}
									],
									".data": {
										"7050C9E0F4CA769C69BD3A8EF740BC37934F8E2C036E5A723FD8EE048ED3F8C3": "6f72672e7a657070656c696e6f732e70726f78792e696d706c656d656e746174696f6e",
										"B5145A64CE8C406E5785204FE5B300F0CEDA96D6636350B38FDCCB9CD8C0C37C": "43616e6e6f742073657420612070726f787920696d706c656d656e746174696f6e20746f2061206e6f6e2d636f6e74726163742061646472657373"
									}
								}
							}
						},
						"methodIdentifiers": {
							"initialize(address,bytes)": "d1f57894"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.5.17+commit.d19bba13\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"Upgraded\",\"type\":\"event\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_logic\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"initialize\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Extends BaseUpgradeabilityProxy with an initializer for initializing implementation and init data.\",\"methods\":{\"initialize(address,bytes)\":{\"details\":\"Contract initializer.\",\"params\":{\"_data\":\"Data to send as msg.data to the implementation to initialize the proxied contract. It should include the signature and the parameters of the function to be called, as described in https://solidity.readthedocs.io/en/v0.4.24/abi-spec.html#function-selector-and-argument-encoding. This parameter is optional, if no data is given the initialization call to proxied contract will be skipped.\",\"_logic\":\"Address of the initial implementation.\"}}},\"title\":\"InitializableUpgradeabilityProxy\"},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\".deps/github/OpenZeppelin/openzeppelin-sdk/packages/lib/contracts/upgradeability/InitializableUpgradeabilityProxy.sol\":\"InitializableUpgradeabilityProxy\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":true,\"runs\":900},\"remappings\":[]},\"sources\":{\".deps/github/OpenZeppelin/openzeppelin-sdk/packages/lib/contracts/upgradeability/BaseUpgradeabilityProxy.sol\":{\"keccak256\":\"0xc4bbf786e15395b2840d90edfa5599a2246d8b9e35786cbd012833989ba94353\",\"urls\":[\"bzz-raw://483629ea48c7905b41210bc4510936d3234430e18a1fbfa07bb286555ea49c71\",\"dweb:/ipfs/Qmev9DAjRsabvP5J7gErBh1vj3LJpTRQnpTq4hrK7afPmK\"]},\".deps/github/OpenZeppelin/openzeppelin-sdk/packages/lib/contracts/upgradeability/InitializableUpgradeabilityProxy.sol\":{\"keccak256\":\"0xea3dcb2476e9b6aa9f83d84be6074ed638c0960b362b9d9074d646407d12ee1d\",\"urls\":[\"bzz-raw://f84091ddc818f7d8a4c52d2b45273cfc8d5f3a0aedef65c286a59d936f205d98\",\"dweb:/ipfs/QmRJrxKwHMEbdvMVDo7TmzE7f2oL7wCCTSWddgXjnhMv3U\"]},\".deps/github/OpenZeppelin/openzeppelin-sdk/packages/lib/contracts/upgradeability/Proxy.sol\":{\"keccak256\":\"0xd8074ae5fa7ee6384ca8196a896612fb044bbf4ff4b7336d03cd97845000ac21\",\"urls\":[\"bzz-raw://3a111e1dc777d80e6c2ad41c6ff2bfb3ae8f61658fd6580ddf9ba9ab0d25a354\",\"dweb:/ipfs/QmSfwvUqqiownzHeMmUiYkejWs6FXR2KLtHQnSzP6FivTj\"]},\".deps/github/OpenZeppelin/openzeppelin-sdk/packages/lib/contracts/utils/Address.sol\":{\"keccak256\":\"0x4296cea43a884099c0d3f532883e8d3997fa07b559131fc5c4ae656a5da3df24\",\"urls\":[\"bzz-raw://53d28819ddbaf7886d2711ae7a2cd3580907f0f4f73a3efc202fa243e8e1f015\",\"dweb:/ipfs/QmZm2ybiRskHHWCyidfvx9dyZprRneWkSWKvEgXnEQuVqr\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"methods": {}
					}
				}
			},
			".deps/github/OpenZeppelin/openzeppelin-sdk/packages/lib/contracts/upgradeability/Proxy.sol": {
				"Proxy": {
					"abi": [
						{
							"payable": true,
							"stateMutability": "payable",
							"type": "fallback"
						}
					],
					"devdoc": {
						"details": "Implements delegation of calls to other contracts, with proper forwarding of return values and bubbling of failures. It defines a fallback function that delegates all calls to the address returned by the abstract _implementation() internal function.",
						"methods": {},
						"title": "Proxy"
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.5.17+commit.d19bba13\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"}],\"devdoc\":{\"details\":\"Implements delegation of calls to other contracts, with proper forwarding of return values and bubbling of failures. It defines a fallback function that delegates all calls to the address returned by the abstract _implementation() internal function.\",\"methods\":{},\"title\":\"Proxy\"},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\".deps/github/OpenZeppelin/openzeppelin-sdk/packages/lib/contracts/upgradeability/Proxy.sol\":\"Proxy\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":true,\"runs\":900},\"remappings\":[]},\"sources\":{\".deps/github/OpenZeppelin/openzeppelin-sdk/packages/lib/contracts/upgradeability/Proxy.sol\":{\"keccak256\":\"0xd8074ae5fa7ee6384ca8196a896612fb044bbf4ff4b7336d03cd97845000ac21\",\"urls\":[\"bzz-raw://3a111e1dc777d80e6c2ad41c6ff2bfb3ae8f61658fd6580ddf9ba9ab0d25a354\",\"dweb:/ipfs/QmSfwvUqqiownzHeMmUiYkejWs6FXR2KLtHQnSzP6FivTj\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"methods": {}
					}
				}
			},
			".deps/github/OpenZeppelin/openzeppelin-sdk/packages/lib/contracts/utils/Address.sol": {
				"ZOSLibAddress": {
					"abi": [],
					"devdoc": {
						"methods": {}
					},
					"evm": {
						"assembly": "    /* \".deps/github/OpenZeppelin/openzeppelin-sdk/packages/lib/contracts/utils/Address.sol\":526:1528  library ZOSLibAddress {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n    /* \"--CODEGEN--\":132:134   */\n  0x0b\n    /* \"--CODEGEN--\":166:173   */\n  dup3\n    /* \"--CODEGEN--\":155:164   */\n  dup3\n    /* \"--CODEGEN--\":146:153   */\n  dup3\n    /* \"--CODEGEN--\":137:174   */\n  codecopy\n    /* \"--CODEGEN--\":255:262   */\n  dup1\n    /* \"--CODEGEN--\":249:263   */\n  mload\n    /* \"--CODEGEN--\":246:247   */\n  0x00\n    /* \"--CODEGEN--\":241:264   */\n  byte\n    /* \"--CODEGEN--\":235:239   */\n  0x73\n    /* \"--CODEGEN--\":232:265   */\n  eq\n    /* \"--CODEGEN--\":222:224   */\n  tag_1\n  jumpi\n    /* \"--CODEGEN--\":269:278   */\n  invalid\n    /* \"--CODEGEN--\":222:224   */\ntag_1:\n    /* \"--CODEGEN--\":293:302   */\n  address\n    /* \"--CODEGEN--\":290:291   */\n  0x00\n    /* \"--CODEGEN--\":283:303   */\n  mstore\n    /* \"--CODEGEN--\":323:327   */\n  0x73\n    /* \"--CODEGEN--\":314:321   */\n  dup2\n    /* \"--CODEGEN--\":306:328   */\n  mstore8\n    /* \"--CODEGEN--\":347:354   */\n  dup3\n    /* \"--CODEGEN--\":338:345   */\n  dup2\n    /* \"--CODEGEN--\":331:355   */\n  return\nstop\n\nsub_0: assembly {\n        /* \".deps/github/OpenZeppelin/openzeppelin-sdk/packages/lib/contracts/utils/Address.sol\":526:1528  library ZOSLibAddress {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa265627a7a723158201295853239ca15dafb3c0eaabce4ebb1fb0d848fa28a6d114893895d0695e31664736f6c63430005110032\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "60556023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea265627a7a723158201295853239ca15dafb3c0eaabce4ebb1fb0d848fa28a6d114893895d0695e31664736f6c63430005110032",
							"opcodes": "PUSH1 0x55 PUSH1 0x23 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x16 JUMPI INVALID JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH6 0x627A7A723158 KECCAK256 SLT SWAP6 DUP6 ORIGIN CODECOPY 0xCA ISZERO 0xDA 0xFB EXTCODECOPY 0xE 0xAA 0xBC 0xE4 0xEB 0xB1 0xFB 0xD DUP5 DUP16 LOG2 DUP11 PUSH14 0x114893895D0695E31664736F6C63 NUMBER STOP SDIV GT STOP ORIGIN ",
							"sourceMap": "526:1002:3:-;;132:2:-1;166:7;155:9;146:7;137:37;255:7;249:14;246:1;241:23;235:4;232:33;222:2;;269:9;222:2;293:9;290:1;283:20;323:4;314:7;306:22;347:7;338;331:24"
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea265627a7a723158201295853239ca15dafb3c0eaabce4ebb1fb0d848fa28a6d114893895d0695e31664736f6c63430005110032",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH6 0x627A7A723158 KECCAK256 SLT SWAP6 DUP6 ORIGIN CODECOPY 0xCA ISZERO 0xDA 0xFB EXTCODECOPY 0xE 0xAA 0xBC 0xE4 0xEB 0xB1 0xFB 0xD DUP5 DUP16 LOG2 DUP11 PUSH14 0x114893895D0695E31664736F6C63 NUMBER STOP SDIV GT STOP ORIGIN ",
							"sourceMap": "526:1002:3:-;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "94",
								"totalCost": "17094"
							},
							"internal": {
								"isContract(address)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 526,
									"end": 1528,
									"name": "PUSH #[$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 526,
									"end": 1528,
									"name": "PUSH [$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 132,
									"end": 134,
									"name": "PUSH",
									"value": "B"
								},
								{
									"begin": 166,
									"end": 173,
									"name": "DUP3"
								},
								{
									"begin": 155,
									"end": 164,
									"name": "DUP3"
								},
								{
									"begin": 146,
									"end": 153,
									"name": "DUP3"
								},
								{
									"begin": 137,
									"end": 174,
									"name": "CODECOPY"
								},
								{
									"begin": 255,
									"end": 262,
									"name": "DUP1"
								},
								{
									"begin": 249,
									"end": 263,
									"name": "MLOAD"
								},
								{
									"begin": 246,
									"end": 247,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 241,
									"end": 264,
									"name": "BYTE"
								},
								{
									"begin": 235,
									"end": 239,
									"name": "PUSH",
									"value": "73"
								},
								{
									"begin": 232,
									"end": 265,
									"name": "EQ"
								},
								{
									"begin": 222,
									"end": 224,
									"name": "PUSH [tag]",
									"value": "1"
								},
								{
									"begin": 222,
									"end": 224,
									"name": "JUMPI"
								},
								{
									"begin": 269,
									"end": 278,
									"name": "INVALID"
								},
								{
									"begin": 222,
									"end": 224,
									"name": "tag",
									"value": "1"
								},
								{
									"begin": 222,
									"end": 224,
									"name": "JUMPDEST"
								},
								{
									"begin": 293,
									"end": 302,
									"name": "ADDRESS"
								},
								{
									"begin": 290,
									"end": 291,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 283,
									"end": 303,
									"name": "MSTORE"
								},
								{
									"begin": 323,
									"end": 327,
									"name": "PUSH",
									"value": "73"
								},
								{
									"begin": 314,
									"end": 321,
									"name": "DUP2"
								},
								{
									"begin": 306,
									"end": 328,
									"name": "MSTORE8"
								},
								{
									"begin": 347,
									"end": 354,
									"name": "DUP3"
								},
								{
									"begin": 338,
									"end": 345,
									"name": "DUP2"
								},
								{
									"begin": 331,
									"end": 355,
									"name": "RETURN"
								}
							],
							".data": {
								"0": {
									".auxdata": "a265627a7a723158201295853239ca15dafb3c0eaabce4ebb1fb0d848fa28a6d114893895d0695e31664736f6c63430005110032",
									".code": [
										{
											"begin": 526,
											"end": 1528,
											"name": "PUSHDEPLOYADDRESS"
										},
										{
											"begin": 526,
											"end": 1528,
											"name": "ADDRESS"
										},
										{
											"begin": 526,
											"end": 1528,
											"name": "EQ"
										},
										{
											"begin": 526,
											"end": 1528,
											"name": "PUSH",
											"value": "80"
										},
										{
											"begin": 526,
											"end": 1528,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 526,
											"end": 1528,
											"name": "MSTORE"
										},
										{
											"begin": 526,
											"end": 1528,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 526,
											"end": 1528,
											"name": "DUP1"
										},
										{
											"begin": 526,
											"end": 1528,
											"name": "REVERT"
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.5.17+commit.d19bba13\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{},\"notice\":\"Utility library of inline functions on addresses * Source https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-solidity/v2.1.3/contracts/utils/Address.sol This contract is copied here and renamed from the original to avoid clashes in the compiled artifacts when the user imports a zos-lib contract (that transitively causes this contract to be compiled and added to the build/artifacts folder) as well as the vanilla Address implementation from an openzeppelin version.\"}},\"settings\":{\"compilationTarget\":{\".deps/github/OpenZeppelin/openzeppelin-sdk/packages/lib/contracts/utils/Address.sol\":\"ZOSLibAddress\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":true,\"runs\":900},\"remappings\":[]},\"sources\":{\".deps/github/OpenZeppelin/openzeppelin-sdk/packages/lib/contracts/utils/Address.sol\":{\"keccak256\":\"0x4296cea43a884099c0d3f532883e8d3997fa07b559131fc5c4ae656a5da3df24\",\"urls\":[\"bzz-raw://53d28819ddbaf7886d2711ae7a2cd3580907f0f4f73a3efc202fa243e8e1f015\",\"dweb:/ipfs/QmZm2ybiRskHHWCyidfvx9dyZprRneWkSWKvEgXnEQuVqr\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"methods": {},
						"notice": "Utility library of inline functions on addresses * Source https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-solidity/v2.1.3/contracts/utils/Address.sol This contract is copied here and renamed from the original to avoid clashes in the compiled artifacts when the user imports a zos-lib contract (that transitively causes this contract to be compiled and added to the build/artifacts folder) as well as the vanilla Address implementation from an openzeppelin version."
					}
				}
			}
		},
		"sources": {
			".deps/github/OpenZeppelin/openzeppelin-sdk/packages/lib/contracts/upgradeability/BaseUpgradeabilityProxy.sol": {
				"ast": {
					"absolutePath": ".deps/github/OpenZeppelin/openzeppelin-sdk/packages/lib/contracts/upgradeability/BaseUpgradeabilityProxy.sol",
					"exportedSymbols": {
						"BaseUpgradeabilityProxy": [
							57
						]
					},
					"id": 58,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.5",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "0:23:0"
						},
						{
							"absolutePath": ".deps/github/OpenZeppelin/openzeppelin-sdk/packages/lib/contracts/upgradeability/Proxy.sol",
							"file": "./Proxy.sol",
							"id": 2,
							"nodeType": "ImportDirective",
							"scope": 58,
							"sourceUnit": 148,
							"src": "25:21:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": ".deps/github/OpenZeppelin/openzeppelin-sdk/packages/lib/contracts/utils/Address.sol",
							"file": "../utils/Address.sol",
							"id": 3,
							"nodeType": "ImportDirective",
							"scope": 58,
							"sourceUnit": 167,
							"src": "47:30:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"baseContracts": [
								{
									"arguments": null,
									"baseName": {
										"contractScope": null,
										"id": 4,
										"name": "Proxy",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 147,
										"src": "331:5:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_Proxy_$147",
											"typeString": "contract Proxy"
										}
									},
									"id": 5,
									"nodeType": "InheritanceSpecifier",
									"src": "331:5:0"
								}
							],
							"contractDependencies": [
								147
							],
							"contractKind": "contract",
							"documentation": "@title BaseUpgradeabilityProxy\n@dev This contract implements a proxy that allows to change the\nimplementation address to which it will delegate.\nSuch a change is called an implementation upgrade.",
							"fullyImplemented": true,
							"id": 57,
							"linearizedBaseContracts": [
								57,
								147
							],
							"name": "BaseUpgradeabilityProxy",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": "@dev Emitted when the implementation is upgraded.\n@param implementation Address of the new implementation.",
									"id": 9,
									"name": "Upgraded",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 8,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 7,
												"indexed": true,
												"name": "implementation",
												"nodeType": "VariableDeclaration",
												"scope": 9,
												"src": "485:30:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 6,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "485:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "484:32:0"
									},
									"src": "470:47:0"
								},
								{
									"constant": true,
									"id": 12,
									"name": "IMPLEMENTATION_SLOT",
									"nodeType": "VariableDeclaration",
									"scope": 57,
									"src": "721:114:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 10,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "721:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "307837303530633965306634636137363963363962643361386566373430626333373933346638653263303336653561373233666438656530343865643366386333",
										"id": 11,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "769:66:0",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_rational_50801780122331352337026042894847907698553222651959119521779622085092237899971_by_1",
											"typeString": "int_const 5080...(69 digits omitted)...9971"
										},
										"value": "0x7050c9e0f4ca769c69bd3a8ef740bc37934f8e2c036e5a723fd8ee048ed3f8c3"
									},
									"visibility": "internal"
								},
								{
									"body": {
										"id": 22,
										"nodeType": "Block",
										"src": "1013:92:0",
										"statements": [
											{
												"assignments": [
													18
												],
												"declarations": [
													{
														"constant": false,
														"id": 18,
														"name": "slot",
														"nodeType": "VariableDeclaration",
														"scope": 22,
														"src": "1019:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 17,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "1019:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 20,
												"initialValue": {
													"argumentTypes": null,
													"id": 19,
													"name": "IMPLEMENTATION_SLOT",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 12,
													"src": "1034:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1019:34:0"
											},
											{
												"externalReferences": [
													{
														"impl": {
															"declaration": 15,
															"isOffset": false,
															"isSlot": false,
															"src": "1076:4:0",
															"valueSize": 1
														}
													},
													{
														"slot": {
															"declaration": 18,
															"isOffset": false,
															"isSlot": false,
															"src": "1090:4:0",
															"valueSize": 1
														}
													}
												],
												"id": 21,
												"nodeType": "InlineAssembly",
												"operations": "{ impl := sload(slot) }",
												"src": "1059:42:0"
											}
										]
									},
									"documentation": "@dev Returns the current implementation.\n@return Address of the current implementation",
									"id": 23,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_implementation",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 13,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "973:2:0"
									},
									"returnParameters": {
										"id": 16,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 15,
												"name": "impl",
												"nodeType": "VariableDeclaration",
												"scope": 23,
												"src": "999:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 14,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "999:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "998:14:0"
									},
									"scope": 57,
									"src": "949:156:0",
									"stateMutability": "view",
									"superFunction": 123,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 36,
										"nodeType": "Block",
										"src": "1296:86:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 29,
															"name": "newImplementation",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 25,
															"src": "1321:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 28,
														"name": "_setImplementation",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 56,
														"src": "1302:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 30,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1302:37:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 31,
												"nodeType": "ExpressionStatement",
												"src": "1302:37:0"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 33,
															"name": "newImplementation",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 25,
															"src": "1359:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 32,
														"name": "Upgraded",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 9,
														"src": "1350:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 34,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1350:27:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 35,
												"nodeType": "EmitStatement",
												"src": "1345:32:0"
											}
										]
									},
									"documentation": "@dev Upgrades the proxy to a new implementation.\n@param newImplementation Address of the new implementation.",
									"id": 37,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_upgradeTo",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 26,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 25,
												"name": "newImplementation",
												"nodeType": "VariableDeclaration",
												"scope": 37,
												"src": "1260:25:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 24,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1260:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1259:27:0"
									},
									"returnParameters": {
										"id": 27,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1296:0:0"
									},
									"scope": 57,
									"src": "1240:142:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 55,
										"nodeType": "Block",
										"src": "1583:227:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 45,
																	"name": "newImplementation",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 39,
																	"src": "1622:17:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"id": 43,
																	"name": "ZOSLibAddress",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 166,
																	"src": "1597:13:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_ZOSLibAddress_$166_$",
																		"typeString": "type(library ZOSLibAddress)"
																	}
																},
																"id": 44,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "isContract",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 165,
																"src": "1597:24:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 46,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1597:43:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "43616e6e6f742073657420612070726f787920696d706c656d656e746174696f6e20746f2061206e6f6e2d636f6e74726163742061646472657373",
															"id": 47,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1642:61:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b5145a64ce8c406e5785204fe5b300f0ceda96d6636350b38fdccb9cd8c0c37c",
																"typeString": "literal_string \"Cannot set a proxy implementation to a non-contract address\""
															},
															"value": "Cannot set a proxy implementation to a non-contract address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b5145a64ce8c406e5785204fe5b300f0ceda96d6636350b38fdccb9cd8c0c37c",
																"typeString": "literal_string \"Cannot set a proxy implementation to a non-contract address\""
															}
														],
														"id": 42,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															184,
															185
														],
														"referencedDeclaration": 185,
														"src": "1589:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 48,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1589:115:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 49,
												"nodeType": "ExpressionStatement",
												"src": "1589:115:0"
											},
											{
												"assignments": [
													51
												],
												"declarations": [
													{
														"constant": false,
														"id": 51,
														"name": "slot",
														"nodeType": "VariableDeclaration",
														"scope": 55,
														"src": "1711:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 50,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "1711:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 53,
												"initialValue": {
													"argumentTypes": null,
													"id": 52,
													"name": "IMPLEMENTATION_SLOT",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 12,
													"src": "1726:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1711:34:0"
											},
											{
												"externalReferences": [
													{
														"slot": {
															"declaration": 51,
															"isOffset": false,
															"isSlot": false,
															"src": "1776:4:0",
															"valueSize": 1
														}
													},
													{
														"newImplementation": {
															"declaration": 39,
															"isOffset": false,
															"isSlot": false,
															"src": "1782:17:0",
															"valueSize": 1
														}
													}
												],
												"id": 54,
												"nodeType": "InlineAssembly",
												"operations": "{\n    sstore(slot, newImplementation)\n}",
												"src": "1752:54:0"
											}
										]
									},
									"documentation": "@dev Sets the implementation address of the proxy.\n@param newImplementation Address of the new implementation.",
									"id": 56,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setImplementation",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 40,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 39,
												"name": "newImplementation",
												"nodeType": "VariableDeclaration",
												"scope": 56,
												"src": "1547:25:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 38,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1547:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1546:27:0"
									},
									"returnParameters": {
										"id": 41,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1583:0:0"
									},
									"scope": 57,
									"src": "1519:291:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "internal"
								}
							],
							"scope": 58,
							"src": "295:1517:0"
						}
					],
					"src": "0:1813:0"
				},
				"id": 0
			},
			".deps/github/OpenZeppelin/openzeppelin-sdk/packages/lib/contracts/upgradeability/InitializableUpgradeabilityProxy.sol": {
				"ast": {
					"absolutePath": ".deps/github/OpenZeppelin/openzeppelin-sdk/packages/lib/contracts/upgradeability/InitializableUpgradeabilityProxy.sol",
					"exportedSymbols": {
						"InitializableUpgradeabilityProxy": [
							109
						]
					},
					"id": 110,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 59,
							"literals": [
								"solidity",
								"^",
								"0.5",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "0:23:1"
						},
						{
							"absolutePath": ".deps/github/OpenZeppelin/openzeppelin-sdk/packages/lib/contracts/upgradeability/BaseUpgradeabilityProxy.sol",
							"file": "./BaseUpgradeabilityProxy.sol",
							"id": 60,
							"nodeType": "ImportDirective",
							"scope": 110,
							"sourceUnit": 58,
							"src": "25:39:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"baseContracts": [
								{
									"arguments": null,
									"baseName": {
										"contractScope": null,
										"id": 61,
										"name": "BaseUpgradeabilityProxy",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 57,
										"src": "272:23:1",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_BaseUpgradeabilityProxy_$57",
											"typeString": "contract BaseUpgradeabilityProxy"
										}
									},
									"id": 62,
									"nodeType": "InheritanceSpecifier",
									"src": "272:23:1"
								}
							],
							"contractDependencies": [
								57,
								147
							],
							"contractKind": "contract",
							"documentation": "@title InitializableUpgradeabilityProxy\n@dev Extends BaseUpgradeabilityProxy with an initializer for initializing\nimplementation and init data.",
							"fullyImplemented": true,
							"id": 109,
							"linearizedBaseContracts": [
								109,
								57,
								147
							],
							"name": "InitializableUpgradeabilityProxy",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 107,
										"nodeType": "Block",
										"src": "893:277:1",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 75,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 70,
																	"name": "_implementation",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		23
																	],
																	"referencedDeclaration": 23,
																	"src": "907:15:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 71,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "907:17:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 73,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "936:1:1",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 72,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "928:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": "address"
																},
																"id": 74,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "928:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "907:31:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 69,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															184,
															185
														],
														"referencedDeclaration": 184,
														"src": "899:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 76,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "899:40:1",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 77,
												"nodeType": "ExpressionStatement",
												"src": "899:40:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															"id": 83,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 79,
																"name": "IMPLEMENTATION_SLOT",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 12,
																"src": "952:19:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "6f72672e7a657070656c696e6f732e70726f78792e696d706c656d656e746174696f6e",
																		"id": 81,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "985:37:1",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_7050c9e0f4ca769c69bd3a8ef740bc37934f8e2c036e5a723fd8ee048ed3f8c3",
																			"typeString": "literal_string \"org.zeppelinos.proxy.implementation\""
																		},
																		"value": "org.zeppelinos.proxy.implementation"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_stringliteral_7050c9e0f4ca769c69bd3a8ef740bc37934f8e2c036e5a723fd8ee048ed3f8c3",
																			"typeString": "literal_string \"org.zeppelinos.proxy.implementation\""
																		}
																	],
																	"id": 80,
																	"name": "keccak256",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 175,
																	"src": "975:9:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																		"typeString": "function (bytes memory) pure returns (bytes32)"
																	}
																},
																"id": 82,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "975:48:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"src": "952:71:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 78,
														"name": "assert",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 170,
														"src": "945:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_assert_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 84,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "945:79:1",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 85,
												"nodeType": "ExpressionStatement",
												"src": "945:79:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 87,
															"name": "_logic",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 64,
															"src": "1049:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 86,
														"name": "_setImplementation",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 56,
														"src": "1030:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 88,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1030:26:1",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 89,
												"nodeType": "ExpressionStatement",
												"src": "1030:26:1"
											},
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 93,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 90,
															"name": "_data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 66,
															"src": "1065:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 91,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "1065:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 92,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1080:1:1",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1065:16:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 106,
												"nodeType": "IfStatement",
												"src": "1062:104:1",
												"trueBody": {
													"id": 105,
													"nodeType": "Block",
													"src": "1083:83:1",
													"statements": [
														{
															"assignments": [
																95,
																null
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 95,
																	"name": "success",
																	"nodeType": "VariableDeclaration",
																	"scope": 105,
																	"src": "1092:12:1",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"typeName": {
																		"id": 94,
																		"name": "bool",
																		"nodeType": "ElementaryTypeName",
																		"src": "1092:4:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"value": null,
																	"visibility": "internal"
																},
																null
															],
															"id": 100,
															"initialValue": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"id": 98,
																		"name": "_data",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 66,
																		"src": "1129:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"expression": {
																		"argumentTypes": null,
																		"id": 96,
																		"name": "_logic",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 64,
																		"src": "1109:6:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"id": 97,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "delegatecall",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "1109:19:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																		"typeString": "function (bytes memory) returns (bool,bytes memory)"
																	}
																},
																"id": 99,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1109:26:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
																	"typeString": "tuple(bool,bytes memory)"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "1091:44:1"
														},
														{
															"expression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"id": 102,
																		"name": "success",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 95,
																		"src": "1151:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	],
																	"id": 101,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		184,
																		185
																	],
																	"referencedDeclaration": 184,
																	"src": "1143:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
																		"typeString": "function (bool) pure"
																	}
																},
																"id": 103,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1143:16:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 104,
															"nodeType": "ExpressionStatement",
															"src": "1143:16:1"
														}
													]
												}
											}
										]
									},
									"documentation": "@dev Contract initializer.\n@param _logic Address of the initial implementation.\n@param _data Data to send as msg.data to the implementation to initialize the proxied contract.\nIt should include the signature and the parameters of the function to be called, as described in\nhttps://solidity.readthedocs.io/en/v0.4.24/abi-spec.html#function-selector-and-argument-encoding.\nThis parameter is optional, if no data is given the initialization call to proxied contract will be skipped.",
									"id": 108,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "initialize",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 67,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 64,
												"name": "_logic",
												"nodeType": "VariableDeclaration",
												"scope": 108,
												"src": "842:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 63,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "842:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 66,
												"name": "_data",
												"nodeType": "VariableDeclaration",
												"scope": 108,
												"src": "858:18:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 65,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "858:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "841:36:1"
									},
									"returnParameters": {
										"id": 68,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "893:0:1"
									},
									"scope": 109,
									"src": "822:348:1",
									"stateMutability": "payable",
									"superFunction": null,
									"visibility": "public"
								}
							],
							"scope": 110,
							"src": "227:947:1"
						}
					],
					"src": "0:1174:1"
				},
				"id": 1
			},
			".deps/github/OpenZeppelin/openzeppelin-sdk/packages/lib/contracts/upgradeability/Proxy.sol": {
				"ast": {
					"absolutePath": ".deps/github/OpenZeppelin/openzeppelin-sdk/packages/lib/contracts/upgradeability/Proxy.sol",
					"exportedSymbols": {
						"Proxy": [
							147
						]
					},
					"id": 148,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 111,
							"literals": [
								"solidity",
								"^",
								"0.5",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "0:23:2"
						},
						{
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": "@title Proxy\n@dev Implements delegation of calls to other contracts, with proper\nforwarding of return values and bubbling of failures.\nIt defines a fallback function that delegates all calls to the address\nreturned by the abstract _implementation() internal function.",
							"fullyImplemented": false,
							"id": 147,
							"linearizedBaseContracts": [
								147
							],
							"name": "Proxy",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 117,
										"nodeType": "Block",
										"src": "447:22:2",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 114,
														"name": "_fallback",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "453:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 115,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "453:11:2",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 116,
												"nodeType": "ExpressionStatement",
												"src": "453:11:2"
											}
										]
									},
									"documentation": "@dev Fallback function.\nImplemented entirely in `_fallback`.",
									"id": 118,
									"implemented": true,
									"kind": "fallback",
									"modifiers": [],
									"name": "",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 112,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "427:2:2"
									},
									"returnParameters": {
										"id": 113,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "447:0:2"
									},
									"scope": 147,
									"src": "418:51:2",
									"stateMutability": "payable",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": "@return The Address of the implementation.",
									"id": 123,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "_implementation",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 119,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "557:2:2"
									},
									"returnParameters": {
										"id": 122,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 121,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 123,
												"src": "583:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 120,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "583:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "582:9:2"
									},
									"scope": 147,
									"src": "533:59:2",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 129,
										"nodeType": "Block",
										"src": "930:679:2",
										"statements": [
											{
												"externalReferences": [
													{
														"implementation": {
															"declaration": 125,
															"isOffset": false,
															"isSlot": false,
															"src": "1334:14:2",
															"valueSize": 1
														}
													}
												],
												"id": 128,
												"nodeType": "InlineAssembly",
												"operations": "{\n    calldatacopy(0, 0, calldatasize())\n    let result := delegatecall(gas(), implementation, 0, calldatasize(), 0, 0)\n    returndatacopy(0, 0, returndatasize())\n    switch result\n    case 0 { revert(0, returndatasize()) }\n    default { return(0, returndatasize()) }\n}",
												"src": "936:669:2"
											}
										]
									},
									"documentation": "@dev Delegates execution to an implementation contract.\nThis is a low level function that doesn't return to its internal call site.\nIt will return to the external caller whatever the implementation returns.\n@param implementation Address to delegate.",
									"id": 130,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_delegate",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 126,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 125,
												"name": "implementation",
												"nodeType": "VariableDeclaration",
												"scope": 130,
												"src": "897:22:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 124,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "897:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "896:24:2"
									},
									"returnParameters": {
										"id": 127,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "930:0:2"
									},
									"scope": 147,
									"src": "878:731:2",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 133,
										"nodeType": "Block",
										"src": "1852:5:2",
										"statements": []
									},
									"documentation": "@dev Function that is run as the first thing in the fallback function.\nCan be redefined in derived contracts to add functionality.\nRedefinitions must call super._willFallback().",
									"id": 134,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_willFallback",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 131,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1840:2:2"
									},
									"returnParameters": {
										"id": 132,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1852:0:2"
									},
									"scope": 147,
									"src": "1818:39:2",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 145,
										"nodeType": "Block",
										"src": "1982:60:2",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 137,
														"name": "_willFallback",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 134,
														"src": "1988:13:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 138,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1988:15:2",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 139,
												"nodeType": "ExpressionStatement",
												"src": "1988:15:2"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 141,
																"name": "_implementation",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 123,
																"src": "2019:15:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 142,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2019:17:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 140,
														"name": "_delegate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 130,
														"src": "2009:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 143,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2009:28:2",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 144,
												"nodeType": "ExpressionStatement",
												"src": "2009:28:2"
											}
										]
									},
									"documentation": "@dev fallback implementation.\nExtracted to enable manual triggering.",
									"id": 146,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_fallback",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 135,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1970:2:2"
									},
									"returnParameters": {
										"id": 136,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1982:0:2"
									},
									"scope": 147,
									"src": "1952:90:2",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "internal"
								}
							],
							"scope": 148,
							"src": "316:1728:2"
						}
					],
					"src": "0:2045:2"
				},
				"id": 2
			},
			".deps/github/OpenZeppelin/openzeppelin-sdk/packages/lib/contracts/utils/Address.sol": {
				"ast": {
					"absolutePath": ".deps/github/OpenZeppelin/openzeppelin-sdk/packages/lib/contracts/utils/Address.sol",
					"exportedSymbols": {
						"ZOSLibAddress": [
							166
						]
					},
					"id": 167,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 149,
							"literals": [
								"solidity",
								"^",
								"0.5",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "0:23:3"
						},
						{
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": "Utility library of inline functions on addresses\n * Source https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-solidity/v2.1.3/contracts/utils/Address.sol\nThis contract is copied here and renamed from the original to avoid clashes in the compiled artifacts\nwhen the user imports a zos-lib contract (that transitively causes this contract to be compiled and added to the\nbuild/artifacts folder) as well as the vanilla Address implementation from an openzeppelin version.",
							"fullyImplemented": true,
							"id": 166,
							"linearizedBaseContracts": [
								166
							],
							"name": "ZOSLibAddress",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 164,
										"nodeType": "Block",
										"src": "976:550:3",
										"statements": [
											{
												"assignments": [
													157
												],
												"declarations": [
													{
														"constant": false,
														"id": 157,
														"name": "size",
														"nodeType": "VariableDeclaration",
														"scope": 164,
														"src": "986:12:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 156,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "986:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 158,
												"initialValue": null,
												"nodeType": "VariableDeclarationStatement",
												"src": "986:12:3"
											},
											{
												"externalReferences": [
													{
														"size": {
															"declaration": 157,
															"isOffset": false,
															"isSlot": false,
															"src": "1465:4:3",
															"valueSize": 1
														}
													},
													{
														"account": {
															"declaration": 151,
															"isOffset": false,
															"isSlot": false,
															"src": "1485:7:3",
															"valueSize": 1
														}
													}
												],
												"id": 159,
												"nodeType": "InlineAssembly",
												"operations": "{ size := extcodesize(account) }",
												"src": "1454:41:3"
											},
											{
												"expression": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 162,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 160,
														"name": "size",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 157,
														"src": "1511:4:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 161,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1518:1:3",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1511:8:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 155,
												"id": 163,
												"nodeType": "Return",
												"src": "1504:15:3"
											}
										]
									},
									"documentation": "Returns whether the target address is a contract\n@dev This function will return false if invoked during the constructor of a contract,\nas the code is not actually created until after the constructor finishes.\n@param account address of the account to check\n@return whether the target address is a contract",
									"id": 165,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isContract",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 152,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 151,
												"name": "account",
												"nodeType": "VariableDeclaration",
												"scope": 165,
												"src": "930:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 150,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "930:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "929:17:3"
									},
									"returnParameters": {
										"id": 155,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 154,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 165,
												"src": "970:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 153,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "970:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "969:6:3"
									},
									"scope": 166,
									"src": "910:616:3",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "internal"
								}
							],
							"scope": 167,
							"src": "526:1002:3"
						}
					],
					"src": "0:1528:3"
				},
				"id": 3
			}
		}
	}
}