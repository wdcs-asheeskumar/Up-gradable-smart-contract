{
	"id": "3e025fd0989a18e6c44ef0622f4d90e2",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.24",
	"solcLongVersion": "0.8.24+commit.e11b9ed9",
	"input": {
		"language": "Solidity",
		"sources": {
			".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/proxy/beacon/BeaconProxy.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (proxy/beacon/BeaconProxy.sol)\n\npragma solidity ^0.8.20;\n\nimport {IBeacon} from \"./IBeacon.sol\";\nimport {Proxy} from \"../Proxy.sol\";\nimport {ERC1967Utils} from \"../ERC1967/ERC1967Utils.sol\";\n\n/**\n * @dev This contract implements a proxy that gets the implementation address for each call from an {UpgradeableBeacon}.\n *\n * The beacon address can only be set once during construction, and cannot be changed afterwards. It is stored in an\n * immutable variable to avoid unnecessary storage reads, and also in the beacon storage slot specified by\n * https://eips.ethereum.org/EIPS/eip-1967[ERC-1967] so that it can be accessed externally.\n *\n * CAUTION: Since the beacon address can never be changed, you must ensure that you either control the beacon, or trust\n * the beacon to not upgrade the implementation maliciously.\n *\n * IMPORTANT: Do not use the implementation logic to modify the beacon storage slot. Doing so would leave the proxy in\n * an inconsistent state where the beacon storage slot does not match the beacon address.\n */\ncontract BeaconProxy is Proxy {\n    // An immutable address for the beacon to avoid unnecessary SLOADs before each delegate call.\n    address private immutable _beacon;\n\n    /**\n     * @dev Initializes the proxy with `beacon`.\n     *\n     * If `data` is nonempty, it's used as data in a delegate call to the implementation returned by the beacon. This\n     * will typically be an encoded function call, and allows initializing the storage of the proxy like a Solidity\n     * constructor.\n     *\n     * Requirements:\n     *\n     * - `beacon` must be a contract with the interface {IBeacon}.\n     * - If `data` is empty, `msg.value` must be zero.\n     */\n    constructor(address beacon, bytes memory data) payable {\n        ERC1967Utils.upgradeBeaconToAndCall(beacon, data);\n        _beacon = beacon;\n    }\n\n    /**\n     * @dev Returns the current implementation address of the associated beacon.\n     */\n    function _implementation() internal view virtual override returns (address) {\n        return IBeacon(_getBeacon()).implementation();\n    }\n\n    /**\n     * @dev Returns the beacon.\n     */\n    function _getBeacon() internal view virtual returns (address) {\n        return _beacon;\n    }\n}\n"
			},
			".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/proxy/ERC1967/ERC1967Utils.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (proxy/ERC1967/ERC1967Utils.sol)\n\npragma solidity ^0.8.20;\n\nimport {IBeacon} from \"../beacon/IBeacon.sol\";\nimport {Address} from \"../../utils/Address.sol\";\nimport {StorageSlot} from \"../../utils/StorageSlot.sol\";\n\n/**\n * @dev This abstract contract provides getters and event emitting update functions for\n * https://eips.ethereum.org/EIPS/eip-1967[ERC-1967] slots.\n */\nlibrary ERC1967Utils {\n    /**\n     * @dev Emitted when the implementation is upgraded.\n     */\n    event Upgraded(address indexed implementation);\n\n    /**\n     * @dev Emitted when the admin account has changed.\n     */\n    event AdminChanged(address previousAdmin, address newAdmin);\n\n    /**\n     * @dev Emitted when the beacon is changed.\n     */\n    event BeaconUpgraded(address indexed beacon);\n\n    /**\n     * @dev Storage slot with the address of the current implementation.\n     * This is the keccak-256 hash of \"eip1967.proxy.implementation\" subtracted by 1.\n     */\n    // solhint-disable-next-line private-vars-leading-underscore\n    bytes32 internal constant IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\n\n    /**\n     * @dev The `implementation` of the proxy is invalid.\n     */\n    error ERC1967InvalidImplementation(address implementation);\n\n    /**\n     * @dev The `admin` of the proxy is invalid.\n     */\n    error ERC1967InvalidAdmin(address admin);\n\n    /**\n     * @dev The `beacon` of the proxy is invalid.\n     */\n    error ERC1967InvalidBeacon(address beacon);\n\n    /**\n     * @dev An upgrade function sees `msg.value > 0` that may be lost.\n     */\n    error ERC1967NonPayable();\n\n    /**\n     * @dev Returns the current implementation address.\n     */\n    function getImplementation() internal view returns (address) {\n        return StorageSlot.getAddressSlot(IMPLEMENTATION_SLOT).value;\n    }\n\n    /**\n     * @dev Stores a new address in the ERC-1967 implementation slot.\n     */\n    function _setImplementation(address newImplementation) private {\n        if (newImplementation.code.length == 0) {\n            revert ERC1967InvalidImplementation(newImplementation);\n        }\n        StorageSlot.getAddressSlot(IMPLEMENTATION_SLOT).value = newImplementation;\n    }\n\n    /**\n     * @dev Performs implementation upgrade with additional setup call if data is nonempty.\n     * This function is payable only if the setup call is performed, otherwise `msg.value` is rejected\n     * to avoid stuck value in the contract.\n     *\n     * Emits an {IERC1967-Upgraded} event.\n     */\n    function upgradeToAndCall(address newImplementation, bytes memory data) internal {\n        _setImplementation(newImplementation);\n        emit Upgraded(newImplementation);\n\n        if (data.length > 0) {\n            Address.functionDelegateCall(newImplementation, data);\n        } else {\n            _checkNonPayable();\n        }\n    }\n\n    /**\n     * @dev Storage slot with the admin of the contract.\n     * This is the keccak-256 hash of \"eip1967.proxy.admin\" subtracted by 1.\n     */\n    // solhint-disable-next-line private-vars-leading-underscore\n    bytes32 internal constant ADMIN_SLOT = 0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103;\n\n    /**\n     * @dev Returns the current admin.\n     *\n     * TIP: To get this value clients can read directly from the storage slot shown below (specified by ERC-1967) using\n     * the https://eth.wiki/json-rpc/API#eth_getstorageat[`eth_getStorageAt`] RPC call.\n     * `0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103`\n     */\n    function getAdmin() internal view returns (address) {\n        return StorageSlot.getAddressSlot(ADMIN_SLOT).value;\n    }\n\n    /**\n     * @dev Stores a new address in the ERC-1967 admin slot.\n     */\n    function _setAdmin(address newAdmin) private {\n        if (newAdmin == address(0)) {\n            revert ERC1967InvalidAdmin(address(0));\n        }\n        StorageSlot.getAddressSlot(ADMIN_SLOT).value = newAdmin;\n    }\n\n    /**\n     * @dev Changes the admin of the proxy.\n     *\n     * Emits an {IERC1967-AdminChanged} event.\n     */\n    function changeAdmin(address newAdmin) internal {\n        emit AdminChanged(getAdmin(), newAdmin);\n        _setAdmin(newAdmin);\n    }\n\n    /**\n     * @dev The storage slot of the UpgradeableBeacon contract which defines the implementation for this proxy.\n     * This is the keccak-256 hash of \"eip1967.proxy.beacon\" subtracted by 1.\n     */\n    // solhint-disable-next-line private-vars-leading-underscore\n    bytes32 internal constant BEACON_SLOT = 0xa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d50;\n\n    /**\n     * @dev Returns the current beacon.\n     */\n    function getBeacon() internal view returns (address) {\n        return StorageSlot.getAddressSlot(BEACON_SLOT).value;\n    }\n\n    /**\n     * @dev Stores a new beacon in the ERC-1967 beacon slot.\n     */\n    function _setBeacon(address newBeacon) private {\n        if (newBeacon.code.length == 0) {\n            revert ERC1967InvalidBeacon(newBeacon);\n        }\n\n        StorageSlot.getAddressSlot(BEACON_SLOT).value = newBeacon;\n\n        address beaconImplementation = IBeacon(newBeacon).implementation();\n        if (beaconImplementation.code.length == 0) {\n            revert ERC1967InvalidImplementation(beaconImplementation);\n        }\n    }\n\n    /**\n     * @dev Change the beacon and trigger a setup call if data is nonempty.\n     * This function is payable only if the setup call is performed, otherwise `msg.value` is rejected\n     * to avoid stuck value in the contract.\n     *\n     * Emits an {IERC1967-BeaconUpgraded} event.\n     *\n     * CAUTION: Invoking this function has no effect on an instance of {BeaconProxy} since v5, since\n     * it uses an immutable beacon without looking at the value of the ERC-1967 beacon slot for\n     * efficiency.\n     */\n    function upgradeBeaconToAndCall(address newBeacon, bytes memory data) internal {\n        _setBeacon(newBeacon);\n        emit BeaconUpgraded(newBeacon);\n\n        if (data.length > 0) {\n            Address.functionDelegateCall(IBeacon(newBeacon).implementation(), data);\n        } else {\n            _checkNonPayable();\n        }\n    }\n\n    /**\n     * @dev Reverts if `msg.value` is not zero. It can be used to avoid `msg.value` stuck in the contract\n     * if an upgrade doesn't perform an initialization call.\n     */\n    function _checkNonPayable() private {\n        if (msg.value > 0) {\n            revert ERC1967NonPayable();\n        }\n    }\n}\n"
			},
			".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/proxy/Proxy.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (proxy/Proxy.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev This abstract contract provides a fallback function that delegates all calls to another contract using the EVM\n * instruction `delegatecall`. We refer to the second contract as the _implementation_ behind the proxy, and it has to\n * be specified by overriding the virtual {_implementation} function.\n *\n * Additionally, delegation to the implementation can be triggered manually through the {_fallback} function, or to a\n * different contract through the {_delegate} function.\n *\n * The success and return data of the delegated call will be returned back to the caller of the proxy.\n */\nabstract contract Proxy {\n    /**\n     * @dev Delegates the current call to `implementation`.\n     *\n     * This function does not return to its internal call site, it will return directly to the external caller.\n     */\n    function _delegate(address implementation) internal virtual {\n        assembly {\n            // Copy msg.data. We take full control of memory in this inline assembly\n            // block because it will not return to Solidity code. We overwrite the\n            // Solidity scratch pad at memory position 0.\n            calldatacopy(0, 0, calldatasize())\n\n            // Call the implementation.\n            // out and outsize are 0 because we don't know the size yet.\n            let result := delegatecall(gas(), implementation, 0, calldatasize(), 0, 0)\n\n            // Copy the returned data.\n            returndatacopy(0, 0, returndatasize())\n\n            switch result\n            // delegatecall returns 0 on error.\n            case 0 {\n                revert(0, returndatasize())\n            }\n            default {\n                return(0, returndatasize())\n            }\n        }\n    }\n\n    /**\n     * @dev This is a virtual function that should be overridden so it returns the address to which the fallback\n     * function and {_fallback} should delegate.\n     */\n    function _implementation() internal view virtual returns (address);\n\n    /**\n     * @dev Delegates the current call to the address returned by `_implementation()`.\n     *\n     * This function does not return to its internal call site, it will return directly to the external caller.\n     */\n    function _fallback() internal virtual {\n        _delegate(_implementation());\n    }\n\n    /**\n     * @dev Fallback function that delegates calls to the address returned by `_implementation()`. Will run if no other\n     * function in the contract matches the call data.\n     */\n    fallback() external payable virtual {\n        _fallback();\n    }\n}\n"
			},
			".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/proxy/beacon/IBeacon.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (proxy/beacon/IBeacon.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev This is the interface that {BeaconProxy} expects of its beacon.\n */\ninterface IBeacon {\n    /**\n     * @dev Must return an address that can be used as a delegate call target.\n     *\n     * {UpgradeableBeacon} will check that this address is a contract.\n     */\n    function implementation() external view returns (address);\n}\n"
			},
			".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/utils/StorageSlot.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/StorageSlot.sol)\n// This file was procedurally generated from scripts/generate/templates/StorageSlot.js.\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Library for reading and writing primitive types to specific storage slots.\n *\n * Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\n * This library helps with reading and writing to such slots without the need for inline assembly.\n *\n * The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\n *\n * Example usage to set ERC-1967 implementation slot:\n * ```solidity\n * contract ERC1967 {\n *     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\n *\n *     function _getImplementation() internal view returns (address) {\n *         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\n *     }\n *\n *     function _setImplementation(address newImplementation) internal {\n *         require(newImplementation.code.length > 0);\n *         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\n *     }\n * }\n * ```\n */\nlibrary StorageSlot {\n    struct AddressSlot {\n        address value;\n    }\n\n    struct BooleanSlot {\n        bool value;\n    }\n\n    struct Bytes32Slot {\n        bytes32 value;\n    }\n\n    struct Uint256Slot {\n        uint256 value;\n    }\n\n    struct StringSlot {\n        string value;\n    }\n\n    struct BytesSlot {\n        bytes value;\n    }\n\n    /**\n     * @dev Returns an `AddressSlot` with member `value` located at `slot`.\n     */\n    function getAddressSlot(bytes32 slot) internal pure returns (AddressSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `BooleanSlot` with member `value` located at `slot`.\n     */\n    function getBooleanSlot(bytes32 slot) internal pure returns (BooleanSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `Bytes32Slot` with member `value` located at `slot`.\n     */\n    function getBytes32Slot(bytes32 slot) internal pure returns (Bytes32Slot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `Uint256Slot` with member `value` located at `slot`.\n     */\n    function getUint256Slot(bytes32 slot) internal pure returns (Uint256Slot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `StringSlot` with member `value` located at `slot`.\n     */\n    function getStringSlot(bytes32 slot) internal pure returns (StringSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `StringSlot` representation of the string storage pointer `store`.\n     */\n    function getStringSlot(string storage store) internal pure returns (StringSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := store.slot\n        }\n    }\n\n    /**\n     * @dev Returns an `BytesSlot` with member `value` located at `slot`.\n     */\n    function getBytesSlot(bytes32 slot) internal pure returns (BytesSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `BytesSlot` representation of the bytes storage pointer `store`.\n     */\n    function getBytesSlot(bytes storage store) internal pure returns (BytesSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := store.slot\n        }\n    }\n}\n"
			},
			".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/utils/Address.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/Address.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Collection of functions related to the address type\n */\nlibrary Address {\n    /**\n     * @dev The ETH balance of the account is not enough to perform the operation.\n     */\n    error AddressInsufficientBalance(address account);\n\n    /**\n     * @dev There's no code at `target` (it is not a contract).\n     */\n    error AddressEmptyCode(address target);\n\n    /**\n     * @dev A call to an address target failed. The target may have reverted.\n     */\n    error FailedInnerCall();\n\n    /**\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n     * `recipient`, forwarding all available gas and reverting on errors.\n     *\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\n     * imposed by `transfer`, making them unable to receive funds via\n     * `transfer`. {sendValue} removes this limitation.\n     *\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     *\n     * IMPORTANT: because control is transferred to `recipient`, care must be\n     * taken to not create reentrancy vulnerabilities. Consider using\n     * {ReentrancyGuard} or the\n     * https://solidity.readthedocs.io/en/v0.8.20/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     */\n    function sendValue(address payable recipient, uint256 amount) internal {\n        if (address(this).balance < amount) {\n            revert AddressInsufficientBalance(address(this));\n        }\n\n        (bool success, ) = recipient.call{value: amount}(\"\");\n        if (!success) {\n            revert FailedInnerCall();\n        }\n    }\n\n    /**\n     * @dev Performs a Solidity function call using a low level `call`. A\n     * plain `call` is an unsafe replacement for a function call: use this\n     * function instead.\n     *\n     * If `target` reverts with a revert reason or custom error, it is bubbled\n     * up by this function (like regular Solidity function calls). However, if\n     * the call reverted with no returned reason, this function reverts with a\n     * {FailedInnerCall} error.\n     *\n     * Returns the raw returned data. To convert to the expected return value,\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n     *\n     * Requirements:\n     *\n     * - `target` must be a contract.\n     * - calling `target` with `data` must not revert.\n     */\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but also transferring `value` wei to `target`.\n     *\n     * Requirements:\n     *\n     * - the calling contract must have an ETH balance of at least `value`.\n     * - the called Solidity function must be `payable`.\n     */\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\n        if (address(this).balance < value) {\n            revert AddressInsufficientBalance(address(this));\n        }\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\n        return verifyCallResultFromTarget(target, success, returndata);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a static call.\n     */\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.staticcall(data);\n        return verifyCallResultFromTarget(target, success, returndata);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a delegate call.\n     */\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.delegatecall(data);\n        return verifyCallResultFromTarget(target, success, returndata);\n    }\n\n    /**\n     * @dev Tool to verify that a low level call to smart-contract was successful, and reverts if the target\n     * was not a contract or bubbling up the revert reason (falling back to {FailedInnerCall}) in case of an\n     * unsuccessful call.\n     */\n    function verifyCallResultFromTarget(\n        address target,\n        bool success,\n        bytes memory returndata\n    ) internal view returns (bytes memory) {\n        if (!success) {\n            _revert(returndata);\n        } else {\n            // only check if target is a contract if the call was successful and the return data is empty\n            // otherwise we already know that it was a contract\n            if (returndata.length == 0 && target.code.length == 0) {\n                revert AddressEmptyCode(target);\n            }\n            return returndata;\n        }\n    }\n\n    /**\n     * @dev Tool to verify that a low level call was successful, and reverts if it wasn't, either by bubbling the\n     * revert reason or with a default {FailedInnerCall} error.\n     */\n    function verifyCallResult(bool success, bytes memory returndata) internal pure returns (bytes memory) {\n        if (!success) {\n            _revert(returndata);\n        } else {\n            return returndata;\n        }\n    }\n\n    /**\n     * @dev Reverts with returndata if present. Otherwise reverts with {FailedInnerCall}.\n     */\n    function _revert(bytes memory returndata) private pure {\n        // Look for revert reason and bubble it up if present\n        if (returndata.length > 0) {\n            // The easiest way to bubble the revert reason is using memory via assembly\n            /// @solidity memory-safe-assembly\n            assembly {\n                let returndata_size := mload(returndata)\n                revert(add(32, returndata), returndata_size)\n            }\n        } else {\n            revert FailedInnerCall();\n        }\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 900
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/proxy/ERC1967/ERC1967Utils.sol": {
				"ERC1967Utils": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "admin",
									"type": "address"
								}
							],
							"name": "ERC1967InvalidAdmin",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "beacon",
									"type": "address"
								}
							],
							"name": "ERC1967InvalidBeacon",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "implementation",
									"type": "address"
								}
							],
							"name": "ERC1967InvalidImplementation",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "ERC1967NonPayable",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "previousAdmin",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "newAdmin",
									"type": "address"
								}
							],
							"name": "AdminChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "beacon",
									"type": "address"
								}
							],
							"name": "BeaconUpgraded",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "implementation",
									"type": "address"
								}
							],
							"name": "Upgraded",
							"type": "event"
						}
					],
					"devdoc": {
						"details": "This abstract contract provides getters and event emitting update functions for https://eips.ethereum.org/EIPS/eip-1967[ERC-1967] slots.",
						"errors": {
							"ERC1967InvalidAdmin(address)": [
								{
									"details": "The `admin` of the proxy is invalid."
								}
							],
							"ERC1967InvalidBeacon(address)": [
								{
									"details": "The `beacon` of the proxy is invalid."
								}
							],
							"ERC1967InvalidImplementation(address)": [
								{
									"details": "The `implementation` of the proxy is invalid."
								}
							],
							"ERC1967NonPayable()": [
								{
									"details": "An upgrade function sees `msg.value > 0` that may be lost."
								}
							]
						},
						"events": {
							"AdminChanged(address,address)": {
								"details": "Emitted when the admin account has changed."
							},
							"BeaconUpgraded(address)": {
								"details": "Emitted when the beacon is changed."
							},
							"Upgraded(address)": {
								"details": "Emitted when the implementation is upgraded."
							}
						},
						"kind": "dev",
						"methods": {},
						"stateVariables": {
							"ADMIN_SLOT": {
								"details": "Storage slot with the admin of the contract. This is the keccak-256 hash of \"eip1967.proxy.admin\" subtracted by 1."
							},
							"BEACON_SLOT": {
								"details": "The storage slot of the UpgradeableBeacon contract which defines the implementation for this proxy. This is the keccak-256 hash of \"eip1967.proxy.beacon\" subtracted by 1."
							},
							"IMPLEMENTATION_SLOT": {
								"details": "Storage slot with the address of the current implementation. This is the keccak-256 hash of \"eip1967.proxy.implementation\" subtracted by 1."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/proxy/ERC1967/ERC1967Utils.sol\":450:6543  library ERC1967Utils {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/proxy/ERC1967/ERC1967Utils.sol\":450:6543  library ERC1967Utils {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220f49e552e904bcd35dad7572cb5db838dbc1b33abcb357932b618a134ff7d73b564736f6c63430008180033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60556032600b8282823980515f1a607314602657634e487b7160e01b5f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220f49e552e904bcd35dad7572cb5db838dbc1b33abcb357932b618a134ff7d73b564736f6c63430008180033",
							"opcodes": "PUSH1 0x55 PUSH1 0x32 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x26 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DELEGATECALL SWAP15 SSTORE 0x2E SWAP1 0x4B 0xCD CALLDATALOAD 0xDA 0xD7 JUMPI 0x2C 0xB5 0xDB DUP4 DUP14 0xBC SHL CALLER 0xAB 0xCB CALLDATALOAD PUSH26 0x32B618A134FF7D73B564736F6C63430008180033000000000000 ",
							"sourceMap": "450:6093:0:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;450:6093:0;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220f49e552e904bcd35dad7572cb5db838dbc1b33abcb357932b618a134ff7d73b564736f6c63430008180033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DELEGATECALL SWAP15 SSTORE 0x2E SWAP1 0x4B 0xCD CALLDATALOAD 0xDA 0xD7 JUMPI 0x2C 0xB5 0xDB DUP4 DUP14 0xBC SHL CALLER 0xAB 0xCB CALLDATALOAD PUSH26 0x32B618A134FF7D73B564736F6C63430008180033000000000000 ",
							"sourceMap": "450:6093:0:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "96",
								"totalCost": "17096"
							},
							"internal": {
								"_checkNonPayable()": "infinite",
								"_setAdmin(address)": "infinite",
								"_setBeacon(address)": "infinite",
								"_setImplementation(address)": "infinite",
								"changeAdmin(address)": "infinite",
								"getAdmin()": "infinite",
								"getBeacon()": "infinite",
								"getImplementation()": "infinite",
								"upgradeBeaconToAndCall(address,bytes memory)": "infinite",
								"upgradeToAndCall(address,bytes memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 450,
									"end": 6543,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 450,
									"end": 6543,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 450,
									"end": 6543,
									"name": "PUSH",
									"source": 0,
									"value": "B"
								},
								{
									"begin": 450,
									"end": 6543,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 450,
									"end": 6543,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 450,
									"end": 6543,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 450,
									"end": 6543,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 450,
									"end": 6543,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 450,
									"end": 6543,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 450,
									"end": 6543,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 450,
									"end": 6543,
									"name": "BYTE",
									"source": 0
								},
								{
									"begin": 450,
									"end": 6543,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 450,
									"end": 6543,
									"name": "EQ",
									"source": 0
								},
								{
									"begin": 450,
									"end": 6543,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 450,
									"end": 6543,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 450,
									"end": 6543,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 450,
									"end": 6543,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 450,
									"end": 6543,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 450,
									"end": 6543,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 450,
									"end": 6543,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 450,
									"end": 6543,
									"name": "PUSH",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 450,
									"end": 6543,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 450,
									"end": 6543,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 450,
									"end": 6543,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 450,
									"end": 6543,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 450,
									"end": 6543,
									"name": "ADDRESS",
									"source": 0
								},
								{
									"begin": 450,
									"end": 6543,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 450,
									"end": 6543,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 450,
									"end": 6543,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 450,
									"end": 6543,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 450,
									"end": 6543,
									"name": "MSTORE8",
									"source": 0
								},
								{
									"begin": 450,
									"end": 6543,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 450,
									"end": 6543,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 450,
									"end": 6543,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220f49e552e904bcd35dad7572cb5db838dbc1b33abcb357932b618a134ff7d73b564736f6c63430008180033",
									".code": [
										{
											"begin": 450,
											"end": 6543,
											"name": "PUSHDEPLOYADDRESS",
											"source": 0
										},
										{
											"begin": 450,
											"end": 6543,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 450,
											"end": 6543,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 450,
											"end": 6543,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 450,
											"end": 6543,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 450,
											"end": 6543,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 450,
											"end": 6543,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 450,
											"end": 6543,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 450,
											"end": 6543,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							},
							"sourceList": [
								".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/proxy/ERC1967/ERC1967Utils.sol",
								".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/proxy/Proxy.sol",
								".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/proxy/beacon/BeaconProxy.sol",
								".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/proxy/beacon/IBeacon.sol",
								".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/utils/Address.sol",
								".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/utils/StorageSlot.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"admin\",\"type\":\"address\"}],\"name\":\"ERC1967InvalidAdmin\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"beacon\",\"type\":\"address\"}],\"name\":\"ERC1967InvalidBeacon\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"ERC1967InvalidImplementation\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ERC1967NonPayable\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"previousAdmin\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newAdmin\",\"type\":\"address\"}],\"name\":\"AdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"beacon\",\"type\":\"address\"}],\"name\":\"BeaconUpgraded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"Upgraded\",\"type\":\"event\"}],\"devdoc\":{\"details\":\"This abstract contract provides getters and event emitting update functions for https://eips.ethereum.org/EIPS/eip-1967[ERC-1967] slots.\",\"errors\":{\"ERC1967InvalidAdmin(address)\":[{\"details\":\"The `admin` of the proxy is invalid.\"}],\"ERC1967InvalidBeacon(address)\":[{\"details\":\"The `beacon` of the proxy is invalid.\"}],\"ERC1967InvalidImplementation(address)\":[{\"details\":\"The `implementation` of the proxy is invalid.\"}],\"ERC1967NonPayable()\":[{\"details\":\"An upgrade function sees `msg.value > 0` that may be lost.\"}]},\"events\":{\"AdminChanged(address,address)\":{\"details\":\"Emitted when the admin account has changed.\"},\"BeaconUpgraded(address)\":{\"details\":\"Emitted when the beacon is changed.\"},\"Upgraded(address)\":{\"details\":\"Emitted when the implementation is upgraded.\"}},\"kind\":\"dev\",\"methods\":{},\"stateVariables\":{\"ADMIN_SLOT\":{\"details\":\"Storage slot with the admin of the contract. This is the keccak-256 hash of \\\"eip1967.proxy.admin\\\" subtracted by 1.\"},\"BEACON_SLOT\":{\"details\":\"The storage slot of the UpgradeableBeacon contract which defines the implementation for this proxy. This is the keccak-256 hash of \\\"eip1967.proxy.beacon\\\" subtracted by 1.\"},\"IMPLEMENTATION_SLOT\":{\"details\":\"Storage slot with the address of the current implementation. This is the keccak-256 hash of \\\"eip1967.proxy.implementation\\\" subtracted by 1.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/proxy/ERC1967/ERC1967Utils.sol\":\"ERC1967Utils\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":900},\"remappings\":[]},\"sources\":{\".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/proxy/ERC1967/ERC1967Utils.sol\":{\"keccak256\":\"0x06bd04b0d6af06424c58c24ad861ac4fbe68ae729c199127f4b64361a0629510\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8a9228dd927facb9a400333848e8cf616c7a7f30693563d98a963266dc8ae28a\",\"dweb:/ipfs/Qmehe5JAWCK7g8A9VkS9LpfiNkYzXkrxnXfpvtuqbrA9BA\"]},\".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/proxy/beacon/IBeacon.sol\":{\"keccak256\":\"0xc59a78b07b44b2cf2e8ab4175fca91e8eca1eee2df7357b8d2a8833e5ea1f64c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5aa4f07e65444784c29cd7bfcc2341b34381e4e5b5da9f0c5bd00d7f430e66fa\",\"dweb:/ipfs/QmWRMh4Q9DpaU9GvsiXmDdoNYMyyece9if7hnfLz7uqzWM\"]},\".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/utils/Address.sol\":{\"keccak256\":\"0xaf28a975a78550e45f65e559a3ad6a5ad43b9b8a37366999abd1b7084eb70721\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7bd24e224f67f65bfadf85dc2929fa965456bb2415478bd0125471b5ce35245\",\"dweb:/ipfs/QmRaydGr8BTHs1kvaZfsNU69pKzUAGFrvABn1KiRSbE51y\"]},\".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0x70d9a9cf8d5cc830d7396505ef8eb9686bd0c60a29c6644bd6cc278f9bab8ebe\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://719abb402c11be12355088da587ffd971fee1b035b5aa6b1ba3b1a9493d3c1d7\",\"dweb:/ipfs/QmanHMFVDqVtZAFFaH1CeGQWoHWsFnWHH75fCrguwi77Hq\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/proxy/Proxy.sol": {
				"Proxy": {
					"abi": [
						{
							"stateMutability": "payable",
							"type": "fallback"
						}
					],
					"devdoc": {
						"details": "This abstract contract provides a fallback function that delegates all calls to another contract using the EVM instruction `delegatecall`. We refer to the second contract as the _implementation_ behind the proxy, and it has to be specified by overriding the virtual {_implementation} function. Additionally, delegation to the implementation can be triggered manually through the {_fallback} function, or to a different contract through the {_delegate} function. The success and return data of the delegated call will be returned back to the caller of the proxy.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"stateMutability\":\"payable\",\"type\":\"fallback\"}],\"devdoc\":{\"details\":\"This abstract contract provides a fallback function that delegates all calls to another contract using the EVM instruction `delegatecall`. We refer to the second contract as the _implementation_ behind the proxy, and it has to be specified by overriding the virtual {_implementation} function. Additionally, delegation to the implementation can be triggered manually through the {_fallback} function, or to a different contract through the {_delegate} function. The success and return data of the delegated call will be returned back to the caller of the proxy.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/proxy/Proxy.sol\":\"Proxy\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":900},\"remappings\":[]},\"sources\":{\".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/proxy/Proxy.sol\":{\"keccak256\":\"0xc3f2ec76a3de8ed7a7007c46166f5550c72c7709e3fc7e8bb3111a7191cdedbd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e73efb4c2ca655882dc237c6b4f234a9bd36d97159d8fcaa837eb01171f726ac\",\"dweb:/ipfs/QmTNnnv7Gu5fs5G1ZMh7Fexp8N4XUs3XrNAngjcxgiss3e\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/proxy/beacon/BeaconProxy.sol": {
				"BeaconProxy": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "beacon",
									"type": "address"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"stateMutability": "payable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "target",
									"type": "address"
								}
							],
							"name": "AddressEmptyCode",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "beacon",
									"type": "address"
								}
							],
							"name": "ERC1967InvalidBeacon",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "implementation",
									"type": "address"
								}
							],
							"name": "ERC1967InvalidImplementation",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "ERC1967NonPayable",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "FailedInnerCall",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "beacon",
									"type": "address"
								}
							],
							"name": "BeaconUpgraded",
							"type": "event"
						},
						{
							"stateMutability": "payable",
							"type": "fallback"
						}
					],
					"devdoc": {
						"details": "This contract implements a proxy that gets the implementation address for each call from an {UpgradeableBeacon}. The beacon address can only be set once during construction, and cannot be changed afterwards. It is stored in an immutable variable to avoid unnecessary storage reads, and also in the beacon storage slot specified by https://eips.ethereum.org/EIPS/eip-1967[ERC-1967] so that it can be accessed externally. CAUTION: Since the beacon address can never be changed, you must ensure that you either control the beacon, or trust the beacon to not upgrade the implementation maliciously. IMPORTANT: Do not use the implementation logic to modify the beacon storage slot. Doing so would leave the proxy in an inconsistent state where the beacon storage slot does not match the beacon address.",
						"errors": {
							"AddressEmptyCode(address)": [
								{
									"details": "There's no code at `target` (it is not a contract)."
								}
							],
							"ERC1967InvalidBeacon(address)": [
								{
									"details": "The `beacon` of the proxy is invalid."
								}
							],
							"ERC1967InvalidImplementation(address)": [
								{
									"details": "The `implementation` of the proxy is invalid."
								}
							],
							"ERC1967NonPayable()": [
								{
									"details": "An upgrade function sees `msg.value > 0` that may be lost."
								}
							],
							"FailedInnerCall()": [
								{
									"details": "A call to an address target failed. The target may have reverted."
								}
							]
						},
						"events": {
							"BeaconUpgraded(address)": {
								"details": "Emitted when the beacon is changed."
							}
						},
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the proxy with `beacon`. If `data` is nonempty, it's used as data in a delegate call to the implementation returned by the beacon. This will typically be an encoded function call, and allows initializing the storage of the proxy like a Solidity constructor. Requirements: - `beacon` must be a contract with the interface {IBeacon}. - If `data` is empty, `msg.value` must be zero."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/proxy/beacon/BeaconProxy.sol\":1116:2310  contract BeaconProxy is Proxy {... */\n  mstore(0x40, 0xa0)\n    /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/proxy/beacon/BeaconProxy.sol\":1773:1920  constructor(address beacon, bytes memory data) payable {... */\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  add\n  0x40\n  dup2\n  swap1\n  mstore\n  tag_1\n  swap2\n  tag_2\n  jump\t// in\ntag_1:\n    /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/proxy/beacon/BeaconProxy.sol\":1838:1887  ERC1967Utils.upgradeBeaconToAndCall(beacon, data) */\n  tag_5\n    /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/proxy/beacon/BeaconProxy.sol\":1874:1880  beacon */\n  dup3\n    /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/proxy/beacon/BeaconProxy.sol\":1882:1886  data */\n  dup3\n    /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/proxy/beacon/BeaconProxy.sol\":1838:1873  ERC1967Utils.upgradeBeaconToAndCall */\n  tag_6\n    /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/proxy/beacon/BeaconProxy.sol\":1838:1887  ERC1967Utils.upgradeBeaconToAndCall(beacon, data) */\n  jump\t// in\ntag_5:\n  pop\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/proxy/beacon/BeaconProxy.sol\":1897:1913  _beacon = beacon */\n  and\n  0x80\n  mstore\n    /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/proxy/beacon/BeaconProxy.sol\":1116:2310  contract BeaconProxy is Proxy {... */\n  jump(tag_57)\n    /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/proxy/ERC1967/ERC1967Utils.sol\":5897:6230  function upgradeBeaconToAndCall(address newBeacon, bytes memory data) internal {... */\ntag_6:\n    /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/proxy/ERC1967/ERC1967Utils.sol\":5986:6007  _setBeacon(newBeacon) */\n  tag_9\n    /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/proxy/ERC1967/ERC1967Utils.sol\":5997:6006  newBeacon */\n  dup3\n    /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/proxy/ERC1967/ERC1967Utils.sol\":5986:5996  _setBeacon */\n  tag_10\n    /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/proxy/ERC1967/ERC1967Utils.sol\":5986:6007  _setBeacon(newBeacon) */\n  jump\t// in\ntag_9:\n    /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/proxy/ERC1967/ERC1967Utils.sol\":6022:6047  BeaconUpgraded(newBeacon) */\n  mload(0x40)\n  sub(shl(0xa0, 0x01), 0x01)\n  dup4\n  and\n  swap1\n  0x1cf3b03a6cf19fa2baba4df148e9dcabedea7f8a5c07840e207e5c089be95d3e\n  swap1\n  0x00\n  swap1\n  log2\n    /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/proxy/ERC1967/ERC1967Utils.sol\":6062:6073  data.length */\n  dup1\n  mload\n    /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/proxy/ERC1967/ERC1967Utils.sol\":6062:6077  data.length > 0 */\n  iszero\n    /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/proxy/ERC1967/ERC1967Utils.sol\":6058:6224  if (data.length > 0) {... */\n  tag_11\n  jumpi\n    /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/proxy/ERC1967/ERC1967Utils.sol\":6093:6164  Address.functionDelegateCall(IBeacon(newBeacon).implementation(), data) */\n  tag_12\n    /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/proxy/ERC1967/ERC1967Utils.sol\":6130:6139  newBeacon */\n  dup3\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/proxy/ERC1967/ERC1967Utils.sol\":6122:6155  IBeacon(newBeacon).implementation */\n  and\n  0x5c60da1b\n    /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/proxy/ERC1967/ERC1967Utils.sol\":6122:6157  IBeacon(newBeacon).implementation() */\n  mload(0x40)\n  dup2\n  0xffffffff\n  and\n  0xe0\n  shl\n  dup2\n  mstore\n  0x04\n  add\n  0x20\n  mload(0x40)\n  dup1\n  dup4\n  sub\n  dup2\n  dup7\n  gas\n  staticcall\n  iszero\n  dup1\n  iszero\n  tag_14\n  jumpi\n  returndatasize\n  0x00\n  dup1\n  returndatacopy\n  revert(0x00, returndatasize)\ntag_14:\n  pop\n  pop\n  pop\n  pop\n  mload(0x40)\n  returndatasize\n  not(0x1f)\n  0x1f\n  dup3\n  add\n  and\n  dup3\n  add\n  dup1\n  0x40\n  mstore\n  pop\n  dup2\n  add\n  swap1\n  tag_15\n  swap2\n  swap1\n  tag_16\n  jump\t// in\ntag_15:\n    /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/proxy/ERC1967/ERC1967Utils.sol\":6159:6163  data */\n  dup3\n    /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/proxy/ERC1967/ERC1967Utils.sol\":6093:6121  Address.functionDelegateCall */\n  tag_17\n    /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/proxy/ERC1967/ERC1967Utils.sol\":6093:6164  Address.functionDelegateCall(IBeacon(newBeacon).implementation(), data) */\n  jump\t// in\ntag_12:\n  pop\n    /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/proxy/ERC1967/ERC1967Utils.sol\":5897:6230  function upgradeBeaconToAndCall(address newBeacon, bytes memory data) internal {... */\n  pop\n  pop\n  jump\t// out\n    /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/proxy/ERC1967/ERC1967Utils.sol\":6058:6224  if (data.length > 0) {... */\ntag_11:\n    /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/proxy/ERC1967/ERC1967Utils.sol\":6195:6213  _checkNonPayable() */\n  tag_19\n    /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/proxy/ERC1967/ERC1967Utils.sol\":6195:6211  _checkNonPayable */\n  tag_20\n    /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/proxy/ERC1967/ERC1967Utils.sol\":6195:6213  _checkNonPayable() */\n  jump\t// in\ntag_19:\n    /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/proxy/ERC1967/ERC1967Utils.sol\":5897:6230  function upgradeBeaconToAndCall(address newBeacon, bytes memory data) internal {... */\n  pop\n  pop\n  jump\t// out\n    /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/proxy/ERC1967/ERC1967Utils.sol\":4935:5372  function _setBeacon(address newBeacon) private {... */\ntag_10:\n    /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/proxy/ERC1967/ERC1967Utils.sol\":4996:5005  newBeacon */\n  dup1\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/proxy/ERC1967/ERC1967Utils.sol\":4996:5017  newBeacon.code.length */\n  and\n  extcodesize\n    /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/proxy/ERC1967/ERC1967Utils.sol\":5021:5022  0 */\n  0x00\n    /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/proxy/ERC1967/ERC1967Utils.sol\":4996:5022  newBeacon.code.length == 0 */\n  sub\n    /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/proxy/ERC1967/ERC1967Utils.sol\":4992:5087  if (newBeacon.code.length == 0) {... */\n  tag_22\n  jumpi\n    /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/proxy/ERC1967/ERC1967Utils.sol\":5045:5076  ERC1967InvalidBeacon(newBeacon) */\n  mload(0x40)\n  shl(0xe2, 0x1933b43b)\n  dup2\n  mstore\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"#utility.yul\":1946:1978   */\n  dup3\n  and\n    /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/proxy/ERC1967/ERC1967Utils.sol\":5045:5076  ERC1967InvalidBeacon(newBeacon) */\n  0x04\n  dup3\n  add\n    /* \"#utility.yul\":1928:1979   */\n  mstore\n    /* \"#utility.yul\":1901:1919   */\n  0x24\n  add\n    /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/proxy/ERC1967/ERC1967Utils.sol\":5045:5076  ERC1967InvalidBeacon(newBeacon) */\ntag_23:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/proxy/ERC1967/ERC1967Utils.sol\":4992:5087  if (newBeacon.code.length == 0) {... */\ntag_22:\n    /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/proxy/ERC1967/ERC1967Utils.sol\":5145:5154  newBeacon */\n  dup1\n    /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/proxy/ERC1967/ERC1967Utils.sol\":4601:4667  0xa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d50 */\n  0xa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d50\n    /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/proxy/ERC1967/ERC1967Utils.sol\":5097:5154  StorageSlot.getAddressSlot(BEACON_SLOT).value = newBeacon */\n  dup1\n  sload\n  not(sub(shl(0xa0, 0x01), 0x01))\n  and\n  sub(shl(0xa0, 0x01), 0x01)\n  swap3\n  dup4\n  and\n  or\n  swap1\n  sstore\n    /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/proxy/ERC1967/ERC1967Utils.sol\":5196:5231  IBeacon(newBeacon).implementation() */\n  0x40\n  dup1\n  mload\n  shl(0xe0, 0x5c60da1b)\n  dup2\n  mstore\n  swap1\n  mload\n  0x00\n  swap3\n    /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/proxy/ERC1967/ERC1967Utils.sol\":5196:5229  IBeacon(newBeacon).implementation */\n  dup5\n  and\n  swap2\n  0x5c60da1b\n  swap2\n    /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/proxy/ERC1967/ERC1967Utils.sol\":5196:5231  IBeacon(newBeacon).implementation() */\n  0x04\n  dup1\n  dup4\n  add\n  swap3\n  0x20\n  swap3\n  swap2\n  swap1\n  dup3\n  swap1\n  sub\n  add\n  dup2\n    /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/proxy/ERC1967/ERC1967Utils.sol\":5196:5229  IBeacon(newBeacon).implementation */\n  dup7\n    /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/proxy/ERC1967/ERC1967Utils.sol\":5196:5231  IBeacon(newBeacon).implementation() */\n  gas\n  staticcall\n  iszero\n  dup1\n  iszero\n  tag_28\n  jumpi\n  returndatasize\n  0x00\n  dup1\n  returndatacopy\n  revert(0x00, returndatasize)\ntag_28:\n  pop\n  pop\n  pop\n  pop\n  mload(0x40)\n  returndatasize\n  not(0x1f)\n  0x1f\n  dup3\n  add\n  and\n  dup3\n  add\n  dup1\n  0x40\n  mstore\n  pop\n  dup2\n  add\n  swap1\n  tag_29\n  swap2\n  swap1\n  tag_16\n  jump\t// in\ntag_29:\n    /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/proxy/ERC1967/ERC1967Utils.sol\":5165:5231  address beaconImplementation = IBeacon(newBeacon).implementation() */\n  swap1\n  pop\n    /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/proxy/ERC1967/ERC1967Utils.sol\":5245:5265  beaconImplementation */\n  dup1\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/proxy/ERC1967/ERC1967Utils.sol\":5245:5277  beaconImplementation.code.length */\n  and\n  extcodesize\n    /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/proxy/ERC1967/ERC1967Utils.sol\":5281:5282  0 */\n  0x00\n    /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/proxy/ERC1967/ERC1967Utils.sol\":5245:5282  beaconImplementation.code.length == 0 */\n  sub\n    /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/proxy/ERC1967/ERC1967Utils.sol\":5241:5366  if (beaconImplementation.code.length == 0) {... */\n  tag_19\n  jumpi\n    /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/proxy/ERC1967/ERC1967Utils.sol\":5305:5355  ERC1967InvalidImplementation(beaconImplementation) */\n  mload(0x40)\n  shl(0xe0, 0x4c9c8ce3)\n  dup2\n  mstore\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"#utility.yul\":1946:1978   */\n  dup3\n  and\n    /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/proxy/ERC1967/ERC1967Utils.sol\":5305:5355  ERC1967InvalidImplementation(beaconImplementation) */\n  0x04\n  dup3\n  add\n    /* \"#utility.yul\":1928:1979   */\n  mstore\n    /* \"#utility.yul\":1901:1919   */\n  0x24\n  add\n    /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/proxy/ERC1967/ERC1967Utils.sol\":5305:5355  ERC1967InvalidImplementation(beaconImplementation) */\n  tag_23\n    /* \"#utility.yul\":1782:1985   */\n  jump\n    /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/utils/Address.sol\":4106:4359  function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {... */\ntag_17:\n    /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/utils/Address.sol\":4189:4201  bytes memory */\n  0x60\n    /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/utils/Address.sol\":4214:4226  bool success */\n  0x00\n    /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/utils/Address.sol\":4228:4251  bytes memory returndata */\n  dup1\n    /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/utils/Address.sol\":4255:4261  target */\n  dup5\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/utils/Address.sol\":4255:4274  target.delegatecall */\n  and\n    /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/utils/Address.sol\":4275:4279  data */\n  dup5\n    /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/utils/Address.sol\":4255:4280  target.delegatecall(data) */\n  mload(0x40)\n  tag_33\n  swap2\n  swap1\n  tag_34\n  jump\t// in\ntag_33:\n  0x00\n  mload(0x40)\n  dup1\n  dup4\n  sub\n  dup2\n  dup6\n  gas\n  delegatecall\n  swap2\n  pop\n  pop\n  returndatasize\n  dup1\n  0x00\n  dup2\n  eq\n  tag_37\n  jumpi\n  mload(0x40)\n  swap2\n  pop\n  and(add(returndatasize, 0x3f), not(0x1f))\n  dup3\n  add\n  0x40\n  mstore\n  returndatasize\n  dup3\n  mstore\n  returndatasize\n  0x00\n  0x20\n  dup5\n  add\n  returndatacopy\n  jump(tag_36)\ntag_37:\n  0x60\n  swap2\n  pop\ntag_36:\n  pop\n    /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/utils/Address.sol\":4213:4280  (bool success, bytes memory returndata) = target.delegatecall(data) */\n  swap1\n  swap3\n  pop\n  swap1\n  pop\n    /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/utils/Address.sol\":4297:4352  verifyCallResultFromTarget(target, success, returndata) */\n  tag_38\n    /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/utils/Address.sol\":4324:4330  target */\n  dup6\n    /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/utils/Address.sol\":4213:4280  (bool success, bytes memory returndata) = target.delegatecall(data) */\n  dup4\n  dup4\n    /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/utils/Address.sol\":4297:4323  verifyCallResultFromTarget */\n  tag_39\n    /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/utils/Address.sol\":4297:4352  verifyCallResultFromTarget(target, success, returndata) */\n  jump\t// in\ntag_38:\n    /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/utils/Address.sol\":4290:4352  return verifyCallResultFromTarget(target, success, returndata) */\n  swap6\n    /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/utils/Address.sol\":4106:4359  function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {... */\n  swap5\n  pop\n  pop\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/proxy/ERC1967/ERC1967Utils.sol\":6419:6541  function _checkNonPayable() private {... */\ntag_20:\n    /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/proxy/ERC1967/ERC1967Utils.sol\":6469:6478  msg.value */\n  callvalue\n    /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/proxy/ERC1967/ERC1967Utils.sol\":6469:6482  msg.value > 0 */\n  iszero\n    /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/proxy/ERC1967/ERC1967Utils.sol\":6465:6535  if (msg.value > 0) {... */\n  tag_41\n  jumpi\n    /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/proxy/ERC1967/ERC1967Utils.sol\":6505:6524  ERC1967NonPayable() */\n  mload(0x40)\n  shl(0xe0, 0xb398979f)\n  dup2\n  mstore\n  0x04\n  add\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/proxy/ERC1967/ERC1967Utils.sol\":6465:6535  if (msg.value > 0) {... */\ntag_41:\n    /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/proxy/ERC1967/ERC1967Utils.sol\":6419:6541  function _checkNonPayable() private {... */\n  jump\t// out\n    /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/utils/Address.sol\":4625:5207  function verifyCallResultFromTarget(... */\ntag_39:\n    /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/utils/Address.sol\":4769:4781  bytes memory */\n  0x60\n    /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/utils/Address.sol\":4798:4805  success */\n  dup3\n    /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/utils/Address.sol\":4793:5201  if (!success) {... */\n  tag_44\n  jumpi\n    /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/utils/Address.sol\":4821:4840  _revert(returndata) */\n  tag_45\n    /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/utils/Address.sol\":4829:4839  returndata */\n  dup3\n    /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/utils/Address.sol\":4821:4828  _revert */\n  tag_46\n    /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/utils/Address.sol\":4821:4840  _revert(returndata) */\n  jump\t// in\ntag_45:\n    /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/utils/Address.sol\":4793:5201  if (!success) {... */\n  jump(tag_47)\ntag_44:\n    /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/utils/Address.sol\":5045:5062  returndata.length */\n  dup2\n  mload\n    /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/utils/Address.sol\":5045:5067  returndata.length == 0 */\n  iszero\n    /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/utils/Address.sol\":5045:5094  returndata.length == 0 && target.code.length == 0 */\n  dup1\n  iszero\n  tag_48\n  jumpi\n  pop\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/utils/Address.sol\":5071:5089  target.code.length */\n  dup5\n  and\n  extcodesize\n    /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/utils/Address.sol\":5071:5094  target.code.length == 0 */\n  iszero\n    /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/utils/Address.sol\":5045:5094  returndata.length == 0 && target.code.length == 0 */\ntag_48:\n    /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/utils/Address.sol\":5041:5160  if (returndata.length == 0 && target.code.length == 0) {... */\n  iszero\n  tag_49\n  jumpi\n    /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/utils/Address.sol\":5121:5145  AddressEmptyCode(target) */\n  mload(0x40)\n  shl(0xe0, 0x9996b315)\n  dup2\n  mstore\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"#utility.yul\":1946:1978   */\n  dup6\n  and\n    /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/utils/Address.sol\":5121:5145  AddressEmptyCode(target) */\n  0x04\n  dup3\n  add\n    /* \"#utility.yul\":1928:1979   */\n  mstore\n    /* \"#utility.yul\":1901:1919   */\n  0x24\n  add\n    /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/utils/Address.sol\":5121:5145  AddressEmptyCode(target) */\n  tag_23\n    /* \"#utility.yul\":1782:1985   */\n  jump\n    /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/utils/Address.sol\":5041:5160  if (returndata.length == 0 && target.code.length == 0) {... */\ntag_49:\n  pop\n    /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/utils/Address.sol\":5180:5190  returndata */\n  dup1\n    /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/utils/Address.sol\":4793:5201  if (!success) {... */\ntag_47:\n    /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/utils/Address.sol\":4625:5207  function verifyCallResultFromTarget(... */\n  swap4\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/utils/Address.sol\":5743:6259  function _revert(bytes memory returndata) private pure {... */\ntag_46:\n    /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/utils/Address.sol\":5874:5891  returndata.length */\n  dup1\n  mload\n    /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/utils/Address.sol\":5874:5895  returndata.length > 0 */\n  iszero\n    /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/utils/Address.sol\":5870:6253  if (returndata.length > 0) {... */\n  tag_52\n  jumpi\n    /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/utils/Address.sol\":6102:6112  returndata */\n  dup1\n    /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/utils/Address.sol\":6096:6113  mload(returndata) */\n  mload\n    /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/utils/Address.sol\":6158:6173  returndata_size */\n  dup1\n    /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/utils/Address.sol\":6145:6155  returndata */\n  dup3\n    /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/utils/Address.sol\":6141:6143  32 */\n  0x20\n    /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/utils/Address.sol\":6137:6156  add(32, returndata) */\n  add\n    /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/utils/Address.sol\":6130:6174  revert(add(32, returndata), returndata_size) */\n  revert\n    /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/utils/Address.sol\":5870:6253  if (returndata.length > 0) {... */\ntag_52:\n    /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/utils/Address.sol\":6225:6242  FailedInnerCall() */\n  mload(0x40)\n  shl(0xe1, 0x0a12f521)\n  dup2\n  mstore\n  0x04\n  add\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"#utility.yul\":14:191   */\ntag_54:\n    /* \"#utility.yul\":93:106   */\n  dup1\n  mload\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"#utility.yul\":135:166   */\n  dup2\n  and\n    /* \"#utility.yul\":125:167   */\n  dup2\n  eq\n    /* \"#utility.yul\":115:185   */\n  tag_59\n  jumpi\n    /* \"#utility.yul\":181:182   */\n  0x00\n    /* \"#utility.yul\":178:179   */\n  dup1\n    /* \"#utility.yul\":171:183   */\n  revert\n    /* \"#utility.yul\":115:185   */\ntag_59:\n    /* \"#utility.yul\":14:191   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":196:323   */\ntag_55:\n    /* \"#utility.yul\":257:267   */\n  0x4e487b71\n    /* \"#utility.yul\":252:255   */\n  0xe0\n    /* \"#utility.yul\":248:268   */\n  shl\n    /* \"#utility.yul\":245:246   */\n  0x00\n    /* \"#utility.yul\":238:269   */\n  mstore\n    /* \"#utility.yul\":288:292   */\n  0x41\n    /* \"#utility.yul\":285:286   */\n  0x04\n    /* \"#utility.yul\":278:293   */\n  mstore\n    /* \"#utility.yul\":312:316   */\n  0x24\n    /* \"#utility.yul\":309:310   */\n  0x00\n    /* \"#utility.yul\":302:317   */\n  revert\n    /* \"#utility.yul\":328:578   */\ntag_56:\n    /* \"#utility.yul\":413:414   */\n  0x00\n    /* \"#utility.yul\":423:536   */\ntag_62:\n    /* \"#utility.yul\":437:443   */\n  dup4\n    /* \"#utility.yul\":434:435   */\n  dup2\n    /* \"#utility.yul\":431:444   */\n  lt\n    /* \"#utility.yul\":423:536   */\n  iszero\n  tag_64\n  jumpi\n    /* \"#utility.yul\":513:524   */\n  dup2\n  dup2\n  add\n    /* \"#utility.yul\":507:525   */\n  mload\n    /* \"#utility.yul\":494:505   */\n  dup4\n  dup3\n  add\n    /* \"#utility.yul\":487:526   */\n  mstore\n    /* \"#utility.yul\":459:461   */\n  0x20\n    /* \"#utility.yul\":452:462   */\n  add\n    /* \"#utility.yul\":423:536   */\n  jump(tag_62)\ntag_64:\n  pop\n  pop\n    /* \"#utility.yul\":570:571   */\n  0x00\n    /* \"#utility.yul\":552:568   */\n  swap2\n  add\n    /* \"#utility.yul\":545:572   */\n  mstore\n    /* \"#utility.yul\":328:578   */\n  jump\t// out\n    /* \"#utility.yul\":583:1564   */\ntag_2:\n    /* \"#utility.yul\":671:677   */\n  0x00\n    /* \"#utility.yul\":679:685   */\n  dup1\n    /* \"#utility.yul\":732:734   */\n  0x40\n    /* \"#utility.yul\":720:729   */\n  dup4\n    /* \"#utility.yul\":711:718   */\n  dup6\n    /* \"#utility.yul\":707:730   */\n  sub\n    /* \"#utility.yul\":703:735   */\n  slt\n    /* \"#utility.yul\":700:752   */\n  iszero\n  tag_66\n  jumpi\n    /* \"#utility.yul\":748:749   */\n  0x00\n    /* \"#utility.yul\":745:746   */\n  dup1\n    /* \"#utility.yul\":738:750   */\n  revert\n    /* \"#utility.yul\":700:752   */\ntag_66:\n    /* \"#utility.yul\":771:811   */\n  tag_67\n    /* \"#utility.yul\":801:810   */\n  dup4\n    /* \"#utility.yul\":771:811   */\n  tag_54\n  jump\t// in\ntag_67:\n    /* \"#utility.yul\":855:857   */\n  0x20\n    /* \"#utility.yul\":840:858   */\n  dup5\n  add\n    /* \"#utility.yul\":834:859   */\n  mload\n    /* \"#utility.yul\":761:811   */\n  swap1\n  swap3\n  pop\n  sub(shl(0x40, 0x01), 0x01)\n    /* \"#utility.yul\":908:922   */\n  dup1\n  dup3\n  gt\n    /* \"#utility.yul\":905:939   */\n  iszero\n  tag_68\n  jumpi\n    /* \"#utility.yul\":935:936   */\n  0x00\n    /* \"#utility.yul\":932:933   */\n  dup1\n    /* \"#utility.yul\":925:937   */\n  revert\n    /* \"#utility.yul\":905:939   */\ntag_68:\n    /* \"#utility.yul\":973:979   */\n  dup2\n    /* \"#utility.yul\":962:971   */\n  dup6\n    /* \"#utility.yul\":958:980   */\n  add\n    /* \"#utility.yul\":948:980   */\n  swap2\n  pop\n    /* \"#utility.yul\":1018:1025   */\n  dup6\n    /* \"#utility.yul\":1011:1015   */\n  0x1f\n    /* \"#utility.yul\":1007:1009   */\n  dup4\n    /* \"#utility.yul\":1003:1016   */\n  add\n    /* \"#utility.yul\":999:1026   */\n  slt\n    /* \"#utility.yul\":989:1044   */\n  tag_69\n  jumpi\n    /* \"#utility.yul\":1040:1041   */\n  0x00\n    /* \"#utility.yul\":1037:1038   */\n  dup1\n    /* \"#utility.yul\":1030:1042   */\n  revert\n    /* \"#utility.yul\":989:1044   */\ntag_69:\n    /* \"#utility.yul\":1069:1071   */\n  dup2\n    /* \"#utility.yul\":1063:1072   */\n  mload\n    /* \"#utility.yul\":1091:1093   */\n  dup2\n    /* \"#utility.yul\":1087:1089   */\n  dup2\n    /* \"#utility.yul\":1084:1094   */\n  gt\n    /* \"#utility.yul\":1081:1117   */\n  iszero\n  tag_71\n  jumpi\n    /* \"#utility.yul\":1097:1115   */\n  tag_71\n  tag_55\n  jump\t// in\ntag_71:\n    /* \"#utility.yul\":1172:1174   */\n  0x40\n    /* \"#utility.yul\":1166:1175   */\n  mload\n    /* \"#utility.yul\":1140:1142   */\n  0x1f\n    /* \"#utility.yul\":1226:1239   */\n  dup3\n  add\n  not(0x1f)\n    /* \"#utility.yul\":1222:1244   */\n  swap1\n  dup2\n  and\n    /* \"#utility.yul\":1246:1248   */\n  0x3f\n    /* \"#utility.yul\":1218:1249   */\n  add\n    /* \"#utility.yul\":1214:1254   */\n  and\n    /* \"#utility.yul\":1202:1255   */\n  dup2\n  add\n  swap1\n    /* \"#utility.yul\":1270:1288   */\n  dup4\n  dup3\n  gt\n    /* \"#utility.yul\":1290:1312   */\n  dup2\n  dup4\n  lt\n    /* \"#utility.yul\":1267:1313   */\n  or\n    /* \"#utility.yul\":1264:1336   */\n  iszero\n  tag_73\n  jumpi\n    /* \"#utility.yul\":1316:1334   */\n  tag_73\n  tag_55\n  jump\t// in\ntag_73:\n    /* \"#utility.yul\":1356:1366   */\n  dup2\n    /* \"#utility.yul\":1352:1354   */\n  0x40\n    /* \"#utility.yul\":1345:1367   */\n  mstore\n    /* \"#utility.yul\":1391:1393   */\n  dup3\n    /* \"#utility.yul\":1383:1389   */\n  dup2\n    /* \"#utility.yul\":1376:1394   */\n  mstore\n    /* \"#utility.yul\":1431:1438   */\n  dup9\n    /* \"#utility.yul\":1426:1428   */\n  0x20\n    /* \"#utility.yul\":1421:1423   */\n  dup5\n    /* \"#utility.yul\":1417:1419   */\n  dup8\n    /* \"#utility.yul\":1413:1424   */\n  add\n    /* \"#utility.yul\":1409:1429   */\n  add\n    /* \"#utility.yul\":1406:1439   */\n  gt\n    /* \"#utility.yul\":1403:1456   */\n  iszero\n  tag_74\n  jumpi\n    /* \"#utility.yul\":1452:1453   */\n  0x00\n    /* \"#utility.yul\":1449:1450   */\n  dup1\n    /* \"#utility.yul\":1442:1454   */\n  revert\n    /* \"#utility.yul\":1403:1456   */\ntag_74:\n    /* \"#utility.yul\":1465:1533   */\n  tag_75\n    /* \"#utility.yul\":1530:1532   */\n  dup4\n    /* \"#utility.yul\":1525:1527   */\n  0x20\n    /* \"#utility.yul\":1517:1523   */\n  dup4\n    /* \"#utility.yul\":1513:1528   */\n  add\n    /* \"#utility.yul\":1508:1510   */\n  0x20\n    /* \"#utility.yul\":1504:1506   */\n  dup9\n    /* \"#utility.yul\":1500:1511   */\n  add\n    /* \"#utility.yul\":1465:1533   */\n  tag_56\n  jump\t// in\ntag_75:\n    /* \"#utility.yul\":1552:1558   */\n  dup1\n    /* \"#utility.yul\":1542:1558   */\n  swap6\n  pop\n  pop\n  pop\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":583:1564   */\n  swap3\n  pop\n  swap3\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1569:1777   */\ntag_16:\n    /* \"#utility.yul\":1639:1645   */\n  0x00\n    /* \"#utility.yul\":1692:1694   */\n  0x20\n    /* \"#utility.yul\":1680:1689   */\n  dup3\n    /* \"#utility.yul\":1671:1678   */\n  dup5\n    /* \"#utility.yul\":1667:1690   */\n  sub\n    /* \"#utility.yul\":1663:1695   */\n  slt\n    /* \"#utility.yul\":1660:1712   */\n  iszero\n  tag_77\n  jumpi\n    /* \"#utility.yul\":1708:1709   */\n  0x00\n    /* \"#utility.yul\":1705:1706   */\n  dup1\n    /* \"#utility.yul\":1698:1710   */\n  revert\n    /* \"#utility.yul\":1660:1712   */\ntag_77:\n    /* \"#utility.yul\":1731:1771   */\n  tag_47\n    /* \"#utility.yul\":1761:1770   */\n  dup3\n    /* \"#utility.yul\":1731:1771   */\n  tag_54\n  jump\t// in\n    /* \"#utility.yul\":1990:2277   */\ntag_34:\n    /* \"#utility.yul\":2119:2122   */\n  0x00\n    /* \"#utility.yul\":2157:2163   */\n  dup3\n    /* \"#utility.yul\":2151:2164   */\n  mload\n    /* \"#utility.yul\":2173:2239   */\n  tag_81\n    /* \"#utility.yul\":2232:2238   */\n  dup2\n    /* \"#utility.yul\":2227:2230   */\n  dup5\n    /* \"#utility.yul\":2220:2224   */\n  0x20\n    /* \"#utility.yul\":2212:2218   */\n  dup8\n    /* \"#utility.yul\":2208:2225   */\n  add\n    /* \"#utility.yul\":2173:2239   */\n  tag_56\n  jump\t// in\ntag_81:\n    /* \"#utility.yul\":2255:2271   */\n  swap2\n  swap1\n  swap2\n  add\n  swap3\n    /* \"#utility.yul\":1990:2277   */\n  swap2\n  pop\n  pop\n  jump\t// out\ntag_57:\n    /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/proxy/beacon/BeaconProxy.sol\":1116:2310  contract BeaconProxy is Proxy {... */\n  mload(0x80)\n  codecopy(0x00, dataOffset(sub_0), dataSize(sub_0))\n  0x00\n  assignImmutable(\"0xe0a82147633fcc3b58a649977a0ad09dbac4ac8e068610d8274b05fc09db6e2e\")\n  return(0x00, dataSize(sub_0))\nstop\n\nsub_0: assembly {\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/proxy/beacon/BeaconProxy.sol\":1116:2310  contract BeaconProxy is Proxy {... */\n      mstore(0x40, 0x80)\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/proxy/Proxy.sol\":2649:2660  _fallback() */\n      tag_5\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/proxy/Proxy.sol\":2649:2658  _fallback */\n      tag_6\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/proxy/Proxy.sol\":2649:2660  _fallback() */\n      jump\t// in\n    tag_5:\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/proxy/beacon/BeaconProxy.sol\":1116:2310  contract BeaconProxy is Proxy {... */\n      stop\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/proxy/Proxy.sol\":2323:2406  function _fallback() internal virtual {... */\n    tag_6:\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/proxy/Proxy.sol\":2371:2399  _delegate(_implementation()) */\n      tag_8\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/proxy/Proxy.sol\":2381:2398  _implementation() */\n      tag_9\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/proxy/Proxy.sol\":2381:2396  _implementation */\n      tag_10\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/proxy/Proxy.sol\":2381:2398  _implementation() */\n      jump\t// in\n    tag_9:\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/proxy/Proxy.sol\":2371:2380  _delegate */\n      tag_11\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/proxy/Proxy.sol\":2371:2399  _delegate(_implementation()) */\n      jump\t// in\n    tag_8:\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/proxy/Proxy.sol\":2323:2406  function _fallback() internal virtual {... */\n      jump\t// out\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/proxy/beacon/BeaconProxy.sol\":2023:2161  function _implementation() internal view virtual override returns (address) {... */\n    tag_10:\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/proxy/beacon/BeaconProxy.sol\":2090:2097  address */\n      0x00\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/proxy/beacon/BeaconProxy.sol\":2294:2301  _beacon */\n      immutable(\"0xe0a82147633fcc3b58a649977a0ad09dbac4ac8e068610d8274b05fc09db6e2e\")\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/proxy/beacon/BeaconProxy.sol\":2116:2152  IBeacon(_getBeacon()).implementation */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x5c60da1b\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/proxy/beacon/BeaconProxy.sol\":2116:2154  IBeacon(_getBeacon()).implementation() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_16\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_16:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_17\n      swap2\n      swap1\n      tag_18\n      jump\t// in\n    tag_17:\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/proxy/beacon/BeaconProxy.sol\":2109:2154  return IBeacon(_getBeacon()).implementation() */\n      swap1\n      pop\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/proxy/beacon/BeaconProxy.sol\":2023:2161  function _implementation() internal view virtual override returns (address) {... */\n      swap1\n      jump\t// out\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/proxy/Proxy.sol\":949:1844  function _delegate(address implementation) internal virtual {... */\n    tag_11:\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/proxy/Proxy.sol\":1287:1301  calldatasize() */\n      calldatasize\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/proxy/Proxy.sol\":1284:1285  0 */\n      0x00\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/proxy/Proxy.sol\":1281:1282  0 */\n      dup1\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/proxy/Proxy.sol\":1268:1302  calldatacopy(0, 0, calldatasize()) */\n      calldatacopy\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/proxy/Proxy.sol\":1501:1502  0 */\n      0x00\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/proxy/Proxy.sol\":1498:1499  0 */\n      dup1\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/proxy/Proxy.sol\":1482:1496  calldatasize() */\n      calldatasize\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/proxy/Proxy.sol\":1479:1480  0 */\n      0x00\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/proxy/Proxy.sol\":1463:1477  implementation */\n      dup5\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/proxy/Proxy.sol\":1456:1461  gas() */\n      gas\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/proxy/Proxy.sol\":1443:1503  delegatecall(gas(), implementation, 0, calldatasize(), 0, 0) */\n      delegatecall\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/proxy/Proxy.sol\":1577:1593  returndatasize() */\n      returndatasize\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/proxy/Proxy.sol\":1574:1575  0 */\n      0x00\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/proxy/Proxy.sol\":1571:1572  0 */\n      dup1\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/proxy/Proxy.sol\":1556:1594  returndatacopy(0, 0, returndatasize()) */\n      returndatacopy\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/proxy/Proxy.sol\":1615:1621  result */\n      dup1\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/proxy/Proxy.sol\":1682:1748  case 0 {... */\n      dup1\n      iszero\n      tag_21\n      jumpi\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/proxy/Proxy.sol\":1797:1813  returndatasize() */\n      returndatasize\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/proxy/Proxy.sol\":1794:1795  0 */\n      0x00\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/proxy/Proxy.sol\":1787:1814  return(0, returndatasize()) */\n      return\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/proxy/Proxy.sol\":1682:1748  case 0 {... */\n    tag_21:\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/proxy/Proxy.sol\":1717:1733  returndatasize() */\n      returndatasize\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/proxy/Proxy.sol\":1714:1715  0 */\n      0x00\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/proxy/Proxy.sol\":1707:1734  revert(0, returndatasize()) */\n      revert\n        /* \"#utility.yul\":14:327   */\n    tag_18:\n        /* \"#utility.yul\":84:90   */\n      0x00\n        /* \"#utility.yul\":137:139   */\n      0x20\n        /* \"#utility.yul\":125:134   */\n      dup3\n        /* \"#utility.yul\":116:123   */\n      dup5\n        /* \"#utility.yul\":112:135   */\n      sub\n        /* \"#utility.yul\":108:140   */\n      slt\n        /* \"#utility.yul\":105:157   */\n      iszero\n      tag_25\n      jumpi\n        /* \"#utility.yul\":153:154   */\n      0x00\n        /* \"#utility.yul\":150:151   */\n      dup1\n        /* \"#utility.yul\":143:155   */\n      revert\n        /* \"#utility.yul\":105:157   */\n    tag_25:\n        /* \"#utility.yul\":185:194   */\n      dup2\n        /* \"#utility.yul\":179:195   */\n      mload\n        /* \"#utility.yul\":235:277   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":228:233   */\n      dup2\n        /* \"#utility.yul\":224:278   */\n      and\n        /* \"#utility.yul\":217:222   */\n      dup2\n        /* \"#utility.yul\":214:279   */\n      eq\n        /* \"#utility.yul\":204:297   */\n      tag_26\n      jumpi\n        /* \"#utility.yul\":293:294   */\n      0x00\n        /* \"#utility.yul\":290:291   */\n      dup1\n        /* \"#utility.yul\":283:295   */\n      revert\n        /* \"#utility.yul\":204:297   */\n    tag_26:\n        /* \"#utility.yul\":316:321   */\n      swap4\n        /* \"#utility.yul\":14:327   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220536d01aa09d40303c29765510e815459d8d6c78bd621d4b8e438c93fb2a2381f64736f6c63430008180033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_371": {
									"entryPoint": null,
									"id": 371,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_checkNonPayable_301": {
									"entryPoint": 636,
									"id": 301,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_revert_658": {
									"entryPoint": 764,
									"id": 658,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_setBeacon_249": {
									"entryPoint": 251,
									"id": 249,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@functionDelegateCall_578": {
									"entryPoint": 521,
									"id": 578,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@getAddressSlot_691": {
									"entryPoint": null,
									"id": 691,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@upgradeBeaconToAndCall_287": {
									"entryPoint": 62,
									"id": 287,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@verifyCallResultFromTarget_618": {
									"entryPoint": 669,
									"id": 618,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_address_fromMemory": {
									"entryPoint": 805,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address_fromMemory": {
									"entryPoint": 1073,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_bytes_memory_ptr_fromMemory": {
									"entryPoint": 886,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 1098,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 852,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 832,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:2279:6",
										"nodeType": "YulBlock",
										"src": "0:2279:6",
										"statements": [
											{
												"nativeSrc": "6:3:6",
												"nodeType": "YulBlock",
												"src": "6:3:6",
												"statements": []
											},
											{
												"body": {
													"nativeSrc": "74:117:6",
													"nodeType": "YulBlock",
													"src": "74:117:6",
													"statements": [
														{
															"nativeSrc": "84:22:6",
															"nodeType": "YulAssignment",
															"src": "84:22:6",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "99:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "99:6:6"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "93:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "93:5:6"
																},
																"nativeSrc": "93:13:6",
																"nodeType": "YulFunctionCall",
																"src": "93:13:6"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "84:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "84:5:6"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "169:16:6",
																"nodeType": "YulBlock",
																"src": "169:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "178:1:6",
																					"nodeType": "YulLiteral",
																					"src": "178:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "181:1:6",
																					"nodeType": "YulLiteral",
																					"src": "181:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "171:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "171:6:6"
																			},
																			"nativeSrc": "171:12:6",
																			"nodeType": "YulFunctionCall",
																			"src": "171:12:6"
																		},
																		"nativeSrc": "171:12:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "171:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "128:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "128:5:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "139:5:6",
																						"nodeType": "YulIdentifier",
																						"src": "139:5:6"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "154:3:6",
																										"nodeType": "YulLiteral",
																										"src": "154:3:6",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "159:1:6",
																										"nodeType": "YulLiteral",
																										"src": "159:1:6",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nativeSrc": "150:3:6",
																									"nodeType": "YulIdentifier",
																									"src": "150:3:6"
																								},
																								"nativeSrc": "150:11:6",
																								"nodeType": "YulFunctionCall",
																								"src": "150:11:6"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "163:1:6",
																								"nodeType": "YulLiteral",
																								"src": "163:1:6",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nativeSrc": "146:3:6",
																							"nodeType": "YulIdentifier",
																							"src": "146:3:6"
																						},
																						"nativeSrc": "146:19:6",
																						"nodeType": "YulFunctionCall",
																						"src": "146:19:6"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "135:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "135:3:6"
																				},
																				"nativeSrc": "135:31:6",
																				"nodeType": "YulFunctionCall",
																				"src": "135:31:6"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "125:2:6",
																			"nodeType": "YulIdentifier",
																			"src": "125:2:6"
																		},
																		"nativeSrc": "125:42:6",
																		"nodeType": "YulFunctionCall",
																		"src": "125:42:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "118:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "118:6:6"
																},
																"nativeSrc": "118:50:6",
																"nodeType": "YulFunctionCall",
																"src": "118:50:6"
															},
															"nativeSrc": "115:70:6",
															"nodeType": "YulIf",
															"src": "115:70:6"
														}
													]
												},
												"name": "abi_decode_address_fromMemory",
												"nativeSrc": "14:177:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "53:6:6",
														"nodeType": "YulTypedName",
														"src": "53:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "64:5:6",
														"nodeType": "YulTypedName",
														"src": "64:5:6",
														"type": ""
													}
												],
												"src": "14:177:6"
											},
											{
												"body": {
													"nativeSrc": "228:95:6",
													"nodeType": "YulBlock",
													"src": "228:95:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "245:1:6",
																		"nodeType": "YulLiteral",
																		"src": "245:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "252:3:6",
																				"nodeType": "YulLiteral",
																				"src": "252:3:6",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "257:10:6",
																				"nodeType": "YulLiteral",
																				"src": "257:10:6",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "248:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "248:3:6"
																		},
																		"nativeSrc": "248:20:6",
																		"nodeType": "YulFunctionCall",
																		"src": "248:20:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "238:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "238:6:6"
																},
																"nativeSrc": "238:31:6",
																"nodeType": "YulFunctionCall",
																"src": "238:31:6"
															},
															"nativeSrc": "238:31:6",
															"nodeType": "YulExpressionStatement",
															"src": "238:31:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "285:1:6",
																		"nodeType": "YulLiteral",
																		"src": "285:1:6",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "288:4:6",
																		"nodeType": "YulLiteral",
																		"src": "288:4:6",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "278:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "278:6:6"
																},
																"nativeSrc": "278:15:6",
																"nodeType": "YulFunctionCall",
																"src": "278:15:6"
															},
															"nativeSrc": "278:15:6",
															"nodeType": "YulExpressionStatement",
															"src": "278:15:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "309:1:6",
																		"nodeType": "YulLiteral",
																		"src": "309:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "312:4:6",
																		"nodeType": "YulLiteral",
																		"src": "312:4:6",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "302:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "302:6:6"
																},
																"nativeSrc": "302:15:6",
																"nodeType": "YulFunctionCall",
																"src": "302:15:6"
															},
															"nativeSrc": "302:15:6",
															"nodeType": "YulExpressionStatement",
															"src": "302:15:6"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "196:127:6",
												"nodeType": "YulFunctionDefinition",
												"src": "196:127:6"
											},
											{
												"body": {
													"nativeSrc": "394:184:6",
													"nodeType": "YulBlock",
													"src": "394:184:6",
													"statements": [
														{
															"nativeSrc": "404:10:6",
															"nodeType": "YulVariableDeclaration",
															"src": "404:10:6",
															"value": {
																"kind": "number",
																"nativeSrc": "413:1:6",
																"nodeType": "YulLiteral",
																"src": "413:1:6",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nativeSrc": "408:1:6",
																	"nodeType": "YulTypedName",
																	"src": "408:1:6",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "473:63:6",
																"nodeType": "YulBlock",
																"src": "473:63:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nativeSrc": "498:3:6",
																							"nodeType": "YulIdentifier",
																							"src": "498:3:6"
																						},
																						{
																							"name": "i",
																							"nativeSrc": "503:1:6",
																							"nodeType": "YulIdentifier",
																							"src": "503:1:6"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "494:3:6",
																						"nodeType": "YulIdentifier",
																						"src": "494:3:6"
																					},
																					"nativeSrc": "494:11:6",
																					"nodeType": "YulFunctionCall",
																					"src": "494:11:6"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nativeSrc": "517:3:6",
																									"nodeType": "YulIdentifier",
																									"src": "517:3:6"
																								},
																								{
																									"name": "i",
																									"nativeSrc": "522:1:6",
																									"nodeType": "YulIdentifier",
																									"src": "522:1:6"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "513:3:6",
																								"nodeType": "YulIdentifier",
																								"src": "513:3:6"
																							},
																							"nativeSrc": "513:11:6",
																							"nodeType": "YulFunctionCall",
																							"src": "513:11:6"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nativeSrc": "507:5:6",
																						"nodeType": "YulIdentifier",
																						"src": "507:5:6"
																					},
																					"nativeSrc": "507:18:6",
																					"nodeType": "YulFunctionCall",
																					"src": "507:18:6"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "487:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "487:6:6"
																			},
																			"nativeSrc": "487:39:6",
																			"nodeType": "YulFunctionCall",
																			"src": "487:39:6"
																		},
																		"nativeSrc": "487:39:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "487:39:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nativeSrc": "434:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "434:1:6"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "437:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "437:6:6"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "431:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "431:2:6"
																},
																"nativeSrc": "431:13:6",
																"nodeType": "YulFunctionCall",
																"src": "431:13:6"
															},
															"nativeSrc": "423:113:6",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "445:19:6",
																"nodeType": "YulBlock",
																"src": "445:19:6",
																"statements": [
																	{
																		"nativeSrc": "447:15:6",
																		"nodeType": "YulAssignment",
																		"src": "447:15:6",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nativeSrc": "456:1:6",
																					"nodeType": "YulIdentifier",
																					"src": "456:1:6"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "459:2:6",
																					"nodeType": "YulLiteral",
																					"src": "459:2:6",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "452:3:6",
																				"nodeType": "YulIdentifier",
																				"src": "452:3:6"
																			},
																			"nativeSrc": "452:10:6",
																			"nodeType": "YulFunctionCall",
																			"src": "452:10:6"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nativeSrc": "447:1:6",
																				"nodeType": "YulIdentifier",
																				"src": "447:1:6"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "427:3:6",
																"nodeType": "YulBlock",
																"src": "427:3:6",
																"statements": []
															},
															"src": "423:113:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "556:3:6",
																				"nodeType": "YulIdentifier",
																				"src": "556:3:6"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "561:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "561:6:6"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "552:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "552:3:6"
																		},
																		"nativeSrc": "552:16:6",
																		"nodeType": "YulFunctionCall",
																		"src": "552:16:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "570:1:6",
																		"nodeType": "YulLiteral",
																		"src": "570:1:6",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "545:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "545:6:6"
																},
																"nativeSrc": "545:27:6",
																"nodeType": "YulFunctionCall",
																"src": "545:27:6"
															},
															"nativeSrc": "545:27:6",
															"nodeType": "YulExpressionStatement",
															"src": "545:27:6"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nativeSrc": "328:250:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "372:3:6",
														"nodeType": "YulTypedName",
														"src": "372:3:6",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "377:3:6",
														"nodeType": "YulTypedName",
														"src": "377:3:6",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "382:6:6",
														"nodeType": "YulTypedName",
														"src": "382:6:6",
														"type": ""
													}
												],
												"src": "328:250:6"
											},
											{
												"body": {
													"nativeSrc": "690:874:6",
													"nodeType": "YulBlock",
													"src": "690:874:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "736:16:6",
																"nodeType": "YulBlock",
																"src": "736:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "745:1:6",
																					"nodeType": "YulLiteral",
																					"src": "745:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "748:1:6",
																					"nodeType": "YulLiteral",
																					"src": "748:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "738:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "738:6:6"
																			},
																			"nativeSrc": "738:12:6",
																			"nodeType": "YulFunctionCall",
																			"src": "738:12:6"
																		},
																		"nativeSrc": "738:12:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "738:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "711:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "711:7:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "720:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "720:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "707:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "707:3:6"
																		},
																		"nativeSrc": "707:23:6",
																		"nodeType": "YulFunctionCall",
																		"src": "707:23:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "732:2:6",
																		"nodeType": "YulLiteral",
																		"src": "732:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "703:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "703:3:6"
																},
																"nativeSrc": "703:32:6",
																"nodeType": "YulFunctionCall",
																"src": "703:32:6"
															},
															"nativeSrc": "700:52:6",
															"nodeType": "YulIf",
															"src": "700:52:6"
														},
														{
															"nativeSrc": "761:50:6",
															"nodeType": "YulAssignment",
															"src": "761:50:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "801:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "801:9:6"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address_fromMemory",
																	"nativeSrc": "771:29:6",
																	"nodeType": "YulIdentifier",
																	"src": "771:29:6"
																},
																"nativeSrc": "771:40:6",
																"nodeType": "YulFunctionCall",
																"src": "771:40:6"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "761:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "761:6:6"
																}
															]
														},
														{
															"nativeSrc": "820:39:6",
															"nodeType": "YulVariableDeclaration",
															"src": "820:39:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "844:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "844:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "855:2:6",
																				"nodeType": "YulLiteral",
																				"src": "855:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "840:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "840:3:6"
																		},
																		"nativeSrc": "840:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "840:18:6"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "834:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "834:5:6"
																},
																"nativeSrc": "834:25:6",
																"nodeType": "YulFunctionCall",
																"src": "834:25:6"
															},
															"variables": [
																{
																	"name": "offset",
																	"nativeSrc": "824:6:6",
																	"nodeType": "YulTypedName",
																	"src": "824:6:6",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "868:28:6",
															"nodeType": "YulVariableDeclaration",
															"src": "868:28:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "886:2:6",
																				"nodeType": "YulLiteral",
																				"src": "886:2:6",
																				"type": "",
																				"value": "64"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "890:1:6",
																				"nodeType": "YulLiteral",
																				"src": "890:1:6",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "882:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "882:3:6"
																		},
																		"nativeSrc": "882:10:6",
																		"nodeType": "YulFunctionCall",
																		"src": "882:10:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "894:1:6",
																		"nodeType": "YulLiteral",
																		"src": "894:1:6",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nativeSrc": "878:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "878:3:6"
																},
																"nativeSrc": "878:18:6",
																"nodeType": "YulFunctionCall",
																"src": "878:18:6"
															},
															"variables": [
																{
																	"name": "_1",
																	"nativeSrc": "872:2:6",
																	"nodeType": "YulTypedName",
																	"src": "872:2:6",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "923:16:6",
																"nodeType": "YulBlock",
																"src": "923:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "932:1:6",
																					"nodeType": "YulLiteral",
																					"src": "932:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "935:1:6",
																					"nodeType": "YulLiteral",
																					"src": "935:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "925:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "925:6:6"
																			},
																			"nativeSrc": "925:12:6",
																			"nodeType": "YulFunctionCall",
																			"src": "925:12:6"
																		},
																		"nativeSrc": "925:12:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "925:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "911:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "911:6:6"
																	},
																	{
																		"name": "_1",
																		"nativeSrc": "919:2:6",
																		"nodeType": "YulIdentifier",
																		"src": "919:2:6"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "908:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "908:2:6"
																},
																"nativeSrc": "908:14:6",
																"nodeType": "YulFunctionCall",
																"src": "908:14:6"
															},
															"nativeSrc": "905:34:6",
															"nodeType": "YulIf",
															"src": "905:34:6"
														},
														{
															"nativeSrc": "948:32:6",
															"nodeType": "YulVariableDeclaration",
															"src": "948:32:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "962:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "962:9:6"
																	},
																	{
																		"name": "offset",
																		"nativeSrc": "973:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "973:6:6"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "958:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "958:3:6"
																},
																"nativeSrc": "958:22:6",
																"nodeType": "YulFunctionCall",
																"src": "958:22:6"
															},
															"variables": [
																{
																	"name": "_2",
																	"nativeSrc": "952:2:6",
																	"nodeType": "YulTypedName",
																	"src": "952:2:6",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1028:16:6",
																"nodeType": "YulBlock",
																"src": "1028:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1037:1:6",
																					"nodeType": "YulLiteral",
																					"src": "1037:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1040:1:6",
																					"nodeType": "YulLiteral",
																					"src": "1040:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1030:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "1030:6:6"
																			},
																			"nativeSrc": "1030:12:6",
																			"nodeType": "YulFunctionCall",
																			"src": "1030:12:6"
																		},
																		"nativeSrc": "1030:12:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "1030:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_2",
																						"nativeSrc": "1007:2:6",
																						"nodeType": "YulIdentifier",
																						"src": "1007:2:6"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "1011:4:6",
																						"nodeType": "YulLiteral",
																						"src": "1011:4:6",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1003:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "1003:3:6"
																				},
																				"nativeSrc": "1003:13:6",
																				"nodeType": "YulFunctionCall",
																				"src": "1003:13:6"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1018:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "1018:7:6"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nativeSrc": "999:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "999:3:6"
																		},
																		"nativeSrc": "999:27:6",
																		"nodeType": "YulFunctionCall",
																		"src": "999:27:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "992:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "992:6:6"
																},
																"nativeSrc": "992:35:6",
																"nodeType": "YulFunctionCall",
																"src": "992:35:6"
															},
															"nativeSrc": "989:55:6",
															"nodeType": "YulIf",
															"src": "989:55:6"
														},
														{
															"nativeSrc": "1053:19:6",
															"nodeType": "YulVariableDeclaration",
															"src": "1053:19:6",
															"value": {
																"arguments": [
																	{
																		"name": "_2",
																		"nativeSrc": "1069:2:6",
																		"nodeType": "YulIdentifier",
																		"src": "1069:2:6"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1063:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "1063:5:6"
																},
																"nativeSrc": "1063:9:6",
																"nodeType": "YulFunctionCall",
																"src": "1063:9:6"
															},
															"variables": [
																{
																	"name": "_3",
																	"nativeSrc": "1057:2:6",
																	"nodeType": "YulTypedName",
																	"src": "1057:2:6",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1095:22:6",
																"nodeType": "YulBlock",
																"src": "1095:22:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "1097:16:6",
																				"nodeType": "YulIdentifier",
																				"src": "1097:16:6"
																			},
																			"nativeSrc": "1097:18:6",
																			"nodeType": "YulFunctionCall",
																			"src": "1097:18:6"
																		},
																		"nativeSrc": "1097:18:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "1097:18:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "_3",
																		"nativeSrc": "1087:2:6",
																		"nodeType": "YulIdentifier",
																		"src": "1087:2:6"
																	},
																	{
																		"name": "_1",
																		"nativeSrc": "1091:2:6",
																		"nodeType": "YulIdentifier",
																		"src": "1091:2:6"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "1084:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "1084:2:6"
																},
																"nativeSrc": "1084:10:6",
																"nodeType": "YulFunctionCall",
																"src": "1084:10:6"
															},
															"nativeSrc": "1081:36:6",
															"nodeType": "YulIf",
															"src": "1081:36:6"
														},
														{
															"nativeSrc": "1126:17:6",
															"nodeType": "YulVariableDeclaration",
															"src": "1126:17:6",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1140:2:6",
																		"nodeType": "YulLiteral",
																		"src": "1140:2:6",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nativeSrc": "1136:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "1136:3:6"
																},
																"nativeSrc": "1136:7:6",
																"nodeType": "YulFunctionCall",
																"src": "1136:7:6"
															},
															"variables": [
																{
																	"name": "_4",
																	"nativeSrc": "1130:2:6",
																	"nodeType": "YulTypedName",
																	"src": "1130:2:6",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "1152:23:6",
															"nodeType": "YulVariableDeclaration",
															"src": "1152:23:6",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1172:2:6",
																		"nodeType": "YulLiteral",
																		"src": "1172:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1166:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "1166:5:6"
																},
																"nativeSrc": "1166:9:6",
																"nodeType": "YulFunctionCall",
																"src": "1166:9:6"
															},
															"variables": [
																{
																	"name": "memPtr",
																	"nativeSrc": "1156:6:6",
																	"nodeType": "YulTypedName",
																	"src": "1156:6:6",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "1184:71:6",
															"nodeType": "YulVariableDeclaration",
															"src": "1184:71:6",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "1206:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "1206:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"name": "_3",
																										"nativeSrc": "1230:2:6",
																										"nodeType": "YulIdentifier",
																										"src": "1230:2:6"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "1234:4:6",
																										"nodeType": "YulLiteral",
																										"src": "1234:4:6",
																										"type": "",
																										"value": "0x1f"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "1226:3:6",
																									"nodeType": "YulIdentifier",
																									"src": "1226:3:6"
																								},
																								"nativeSrc": "1226:13:6",
																								"nodeType": "YulFunctionCall",
																								"src": "1226:13:6"
																							},
																							{
																								"name": "_4",
																								"nativeSrc": "1241:2:6",
																								"nodeType": "YulIdentifier",
																								"src": "1241:2:6"
																							}
																						],
																						"functionName": {
																							"name": "and",
																							"nativeSrc": "1222:3:6",
																							"nodeType": "YulIdentifier",
																							"src": "1222:3:6"
																						},
																						"nativeSrc": "1222:22:6",
																						"nodeType": "YulFunctionCall",
																						"src": "1222:22:6"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "1246:2:6",
																						"nodeType": "YulLiteral",
																						"src": "1246:2:6",
																						"type": "",
																						"value": "63"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1218:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "1218:3:6"
																				},
																				"nativeSrc": "1218:31:6",
																				"nodeType": "YulFunctionCall",
																				"src": "1218:31:6"
																			},
																			{
																				"name": "_4",
																				"nativeSrc": "1251:2:6",
																				"nodeType": "YulIdentifier",
																				"src": "1251:2:6"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "1214:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "1214:3:6"
																		},
																		"nativeSrc": "1214:40:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1214:40:6"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1202:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "1202:3:6"
																},
																"nativeSrc": "1202:53:6",
																"nodeType": "YulFunctionCall",
																"src": "1202:53:6"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nativeSrc": "1188:10:6",
																	"nodeType": "YulTypedName",
																	"src": "1188:10:6",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1314:22:6",
																"nodeType": "YulBlock",
																"src": "1314:22:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "1316:16:6",
																				"nodeType": "YulIdentifier",
																				"src": "1316:16:6"
																			},
																			"nativeSrc": "1316:18:6",
																			"nodeType": "YulFunctionCall",
																			"src": "1316:18:6"
																		},
																		"nativeSrc": "1316:18:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "1316:18:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "1273:10:6",
																				"nodeType": "YulIdentifier",
																				"src": "1273:10:6"
																			},
																			{
																				"name": "_1",
																				"nativeSrc": "1285:2:6",
																				"nodeType": "YulIdentifier",
																				"src": "1285:2:6"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "1270:2:6",
																			"nodeType": "YulIdentifier",
																			"src": "1270:2:6"
																		},
																		"nativeSrc": "1270:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1270:18:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "1293:10:6",
																				"nodeType": "YulIdentifier",
																				"src": "1293:10:6"
																			},
																			{
																				"name": "memPtr",
																				"nativeSrc": "1305:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "1305:6:6"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "1290:2:6",
																			"nodeType": "YulIdentifier",
																			"src": "1290:2:6"
																		},
																		"nativeSrc": "1290:22:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1290:22:6"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "1267:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "1267:2:6"
																},
																"nativeSrc": "1267:46:6",
																"nodeType": "YulFunctionCall",
																"src": "1267:46:6"
															},
															"nativeSrc": "1264:72:6",
															"nodeType": "YulIf",
															"src": "1264:72:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1352:2:6",
																		"nodeType": "YulLiteral",
																		"src": "1352:2:6",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nativeSrc": "1356:10:6",
																		"nodeType": "YulIdentifier",
																		"src": "1356:10:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1345:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "1345:6:6"
																},
																"nativeSrc": "1345:22:6",
																"nodeType": "YulFunctionCall",
																"src": "1345:22:6"
															},
															"nativeSrc": "1345:22:6",
															"nodeType": "YulExpressionStatement",
															"src": "1345:22:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "1383:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "1383:6:6"
																	},
																	{
																		"name": "_3",
																		"nativeSrc": "1391:2:6",
																		"nodeType": "YulIdentifier",
																		"src": "1391:2:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1376:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "1376:6:6"
																},
																"nativeSrc": "1376:18:6",
																"nodeType": "YulFunctionCall",
																"src": "1376:18:6"
															},
															"nativeSrc": "1376:18:6",
															"nodeType": "YulExpressionStatement",
															"src": "1376:18:6"
														},
														{
															"body": {
																"nativeSrc": "1440:16:6",
																"nodeType": "YulBlock",
																"src": "1440:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1449:1:6",
																					"nodeType": "YulLiteral",
																					"src": "1449:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1452:1:6",
																					"nodeType": "YulLiteral",
																					"src": "1452:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1442:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "1442:6:6"
																			},
																			"nativeSrc": "1442:12:6",
																			"nodeType": "YulFunctionCall",
																			"src": "1442:12:6"
																		},
																		"nativeSrc": "1442:12:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "1442:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_2",
																						"nativeSrc": "1417:2:6",
																						"nodeType": "YulIdentifier",
																						"src": "1417:2:6"
																					},
																					{
																						"name": "_3",
																						"nativeSrc": "1421:2:6",
																						"nodeType": "YulIdentifier",
																						"src": "1421:2:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1413:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "1413:3:6"
																				},
																				"nativeSrc": "1413:11:6",
																				"nodeType": "YulFunctionCall",
																				"src": "1413:11:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1426:2:6",
																				"nodeType": "YulLiteral",
																				"src": "1426:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1409:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "1409:3:6"
																		},
																		"nativeSrc": "1409:20:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1409:20:6"
																	},
																	{
																		"name": "dataEnd",
																		"nativeSrc": "1431:7:6",
																		"nodeType": "YulIdentifier",
																		"src": "1431:7:6"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "1406:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "1406:2:6"
																},
																"nativeSrc": "1406:33:6",
																"nodeType": "YulFunctionCall",
																"src": "1406:33:6"
															},
															"nativeSrc": "1403:53:6",
															"nodeType": "YulIf",
															"src": "1403:53:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "_2",
																				"nativeSrc": "1504:2:6",
																				"nodeType": "YulIdentifier",
																				"src": "1504:2:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1508:2:6",
																				"nodeType": "YulLiteral",
																				"src": "1508:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1500:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "1500:3:6"
																		},
																		"nativeSrc": "1500:11:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1500:11:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "1517:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "1517:6:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1525:2:6",
																				"nodeType": "YulLiteral",
																				"src": "1525:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1513:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "1513:3:6"
																		},
																		"nativeSrc": "1513:15:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1513:15:6"
																	},
																	{
																		"name": "_3",
																		"nativeSrc": "1530:2:6",
																		"nodeType": "YulIdentifier",
																		"src": "1530:2:6"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "1465:34:6",
																	"nodeType": "YulIdentifier",
																	"src": "1465:34:6"
																},
																"nativeSrc": "1465:68:6",
																"nodeType": "YulFunctionCall",
																"src": "1465:68:6"
															},
															"nativeSrc": "1465:68:6",
															"nodeType": "YulExpressionStatement",
															"src": "1465:68:6"
														},
														{
															"nativeSrc": "1542:16:6",
															"nodeType": "YulAssignment",
															"src": "1542:16:6",
															"value": {
																"name": "memPtr",
																"nativeSrc": "1552:6:6",
																"nodeType": "YulIdentifier",
																"src": "1552:6:6"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "1542:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "1542:6:6"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_bytes_memory_ptr_fromMemory",
												"nativeSrc": "583:981:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "648:9:6",
														"nodeType": "YulTypedName",
														"src": "648:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "659:7:6",
														"nodeType": "YulTypedName",
														"src": "659:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "671:6:6",
														"nodeType": "YulTypedName",
														"src": "671:6:6",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "679:6:6",
														"nodeType": "YulTypedName",
														"src": "679:6:6",
														"type": ""
													}
												],
												"src": "583:981:6"
											},
											{
												"body": {
													"nativeSrc": "1650:127:6",
													"nodeType": "YulBlock",
													"src": "1650:127:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "1696:16:6",
																"nodeType": "YulBlock",
																"src": "1696:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1705:1:6",
																					"nodeType": "YulLiteral",
																					"src": "1705:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1708:1:6",
																					"nodeType": "YulLiteral",
																					"src": "1708:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1698:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "1698:6:6"
																			},
																			"nativeSrc": "1698:12:6",
																			"nodeType": "YulFunctionCall",
																			"src": "1698:12:6"
																		},
																		"nativeSrc": "1698:12:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "1698:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1671:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "1671:7:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1680:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "1680:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1667:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "1667:3:6"
																		},
																		"nativeSrc": "1667:23:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1667:23:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1692:2:6",
																		"nodeType": "YulLiteral",
																		"src": "1692:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1663:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "1663:3:6"
																},
																"nativeSrc": "1663:32:6",
																"nodeType": "YulFunctionCall",
																"src": "1663:32:6"
															},
															"nativeSrc": "1660:52:6",
															"nodeType": "YulIf",
															"src": "1660:52:6"
														},
														{
															"nativeSrc": "1721:50:6",
															"nodeType": "YulAssignment",
															"src": "1721:50:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1761:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "1761:9:6"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address_fromMemory",
																	"nativeSrc": "1731:29:6",
																	"nodeType": "YulIdentifier",
																	"src": "1731:29:6"
																},
																"nativeSrc": "1731:40:6",
																"nodeType": "YulFunctionCall",
																"src": "1731:40:6"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "1721:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "1721:6:6"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address_fromMemory",
												"nativeSrc": "1569:208:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1616:9:6",
														"nodeType": "YulTypedName",
														"src": "1616:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1627:7:6",
														"nodeType": "YulTypedName",
														"src": "1627:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1639:6:6",
														"nodeType": "YulTypedName",
														"src": "1639:6:6",
														"type": ""
													}
												],
												"src": "1569:208:6"
											},
											{
												"body": {
													"nativeSrc": "1883:102:6",
													"nodeType": "YulBlock",
													"src": "1883:102:6",
													"statements": [
														{
															"nativeSrc": "1893:26:6",
															"nodeType": "YulAssignment",
															"src": "1893:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1905:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "1905:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1916:2:6",
																		"nodeType": "YulLiteral",
																		"src": "1916:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1901:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "1901:3:6"
																},
																"nativeSrc": "1901:18:6",
																"nodeType": "YulFunctionCall",
																"src": "1901:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1893:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "1893:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1935:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "1935:9:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "1950:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "1950:6:6"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "1966:3:6",
																								"nodeType": "YulLiteral",
																								"src": "1966:3:6",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "1971:1:6",
																								"nodeType": "YulLiteral",
																								"src": "1971:1:6",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "1962:3:6",
																							"nodeType": "YulIdentifier",
																							"src": "1962:3:6"
																						},
																						"nativeSrc": "1962:11:6",
																						"nodeType": "YulFunctionCall",
																						"src": "1962:11:6"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "1975:1:6",
																						"nodeType": "YulLiteral",
																						"src": "1975:1:6",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "1958:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "1958:3:6"
																				},
																				"nativeSrc": "1958:19:6",
																				"nodeType": "YulFunctionCall",
																				"src": "1958:19:6"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "1946:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "1946:3:6"
																		},
																		"nativeSrc": "1946:32:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1946:32:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1928:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "1928:6:6"
																},
																"nativeSrc": "1928:51:6",
																"nodeType": "YulFunctionCall",
																"src": "1928:51:6"
															},
															"nativeSrc": "1928:51:6",
															"nodeType": "YulExpressionStatement",
															"src": "1928:51:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "1782:203:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1852:9:6",
														"nodeType": "YulTypedName",
														"src": "1852:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1863:6:6",
														"nodeType": "YulTypedName",
														"src": "1863:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1874:4:6",
														"nodeType": "YulTypedName",
														"src": "1874:4:6",
														"type": ""
													}
												],
												"src": "1782:203:6"
											},
											{
												"body": {
													"nativeSrc": "2127:150:6",
													"nodeType": "YulBlock",
													"src": "2127:150:6",
													"statements": [
														{
															"nativeSrc": "2137:27:6",
															"nodeType": "YulVariableDeclaration",
															"src": "2137:27:6",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "2157:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "2157:6:6"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "2151:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "2151:5:6"
																},
																"nativeSrc": "2151:13:6",
																"nodeType": "YulFunctionCall",
																"src": "2151:13:6"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "2141:6:6",
																	"nodeType": "YulTypedName",
																	"src": "2141:6:6",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "2212:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "2212:6:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2220:4:6",
																				"nodeType": "YulLiteral",
																				"src": "2220:4:6",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2208:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "2208:3:6"
																		},
																		"nativeSrc": "2208:17:6",
																		"nodeType": "YulFunctionCall",
																		"src": "2208:17:6"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "2227:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "2227:3:6"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "2232:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "2232:6:6"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "2173:34:6",
																	"nodeType": "YulIdentifier",
																	"src": "2173:34:6"
																},
																"nativeSrc": "2173:66:6",
																"nodeType": "YulFunctionCall",
																"src": "2173:66:6"
															},
															"nativeSrc": "2173:66:6",
															"nodeType": "YulExpressionStatement",
															"src": "2173:66:6"
														},
														{
															"nativeSrc": "2248:23:6",
															"nodeType": "YulAssignment",
															"src": "2248:23:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2259:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "2259:3:6"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "2264:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "2264:6:6"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2255:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "2255:3:6"
																},
																"nativeSrc": "2255:16:6",
																"nodeType": "YulFunctionCall",
																"src": "2255:16:6"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "2248:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "2248:3:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nativeSrc": "1990:287:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "2103:3:6",
														"nodeType": "YulTypedName",
														"src": "2103:3:6",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "2108:6:6",
														"nodeType": "YulTypedName",
														"src": "2108:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "2119:3:6",
														"nodeType": "YulTypedName",
														"src": "2119:3:6",
														"type": ""
													}
												],
												"src": "1990:287:6"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_address_fromMemory(offset) -> value\n    {\n        value := mload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function copy_memory_to_memory_with_cleanup(src, dst, length)\n    {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n    function abi_decode_tuple_t_addresst_bytes_memory_ptr_fromMemory(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address_fromMemory(headStart)\n        let offset := mload(add(headStart, 32))\n        let _1 := sub(shl(64, 1), 1)\n        if gt(offset, _1) { revert(0, 0) }\n        let _2 := add(headStart, offset)\n        if iszero(slt(add(_2, 0x1f), dataEnd)) { revert(0, 0) }\n        let _3 := mload(_2)\n        if gt(_3, _1) { panic_error_0x41() }\n        let _4 := not(31)\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(and(add(_3, 0x1f), _4), 63), _4))\n        if or(gt(newFreePtr, _1), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        mstore(memPtr, _3)\n        if gt(add(add(_2, _3), 32), dataEnd) { revert(0, 0) }\n        copy_memory_to_memory_with_cleanup(add(_2, 32), add(memPtr, 32), _3)\n        value1 := memPtr\n    }\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address_fromMemory(headStart)\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value0) -> end\n    {\n        let length := mload(value0)\n        copy_memory_to_memory_with_cleanup(add(value0, 0x20), pos, length)\n        end := add(pos, length)\n    }\n}",
									"id": 6,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "60a06040526040516105bd3803806105bd83398101604081905261002291610376565b61002c828261003e565b506001600160a01b0316608052610465565b610047826100fb565b6040516001600160a01b038316907f1cf3b03a6cf19fa2baba4df148e9dcabedea7f8a5c07840e207e5c089be95d3e905f90a28051156100ef576100ea826001600160a01b0316635c60da1b6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156100c0573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906100e49190610431565b82610209565b505050565b6100f761027c565b5050565b806001600160a01b03163b5f0361013557604051631933b43b60e21b81526001600160a01b03821660048201526024015b60405180910390fd5b807fa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d5080546001600160a01b0319166001600160a01b0392831617905560408051635c60da1b60e01b815290515f92841691635c60da1b9160048083019260209291908290030181865afa1580156101ae573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906101d29190610431565b9050806001600160a01b03163b5f036100f757604051634c9c8ce360e01b81526001600160a01b038216600482015260240161012c565b60605f80846001600160a01b031684604051610225919061044a565b5f60405180830381855af49150503d805f811461025d576040519150601f19603f3d011682016040523d82523d5f602084013e610262565b606091505b50909250905061027385838361029d565b95945050505050565b341561029b5760405163b398979f60e01b815260040160405180910390fd5b565b6060826102b2576102ad826102fc565b6102f5565b81511580156102c957506001600160a01b0384163b155b156102f257604051639996b31560e01b81526001600160a01b038516600482015260240161012c565b50805b9392505050565b80511561030c5780518082602001fd5b604051630a12f52160e11b815260040160405180910390fd5b80516001600160a01b038116811461033b575f80fd5b919050565b634e487b7160e01b5f52604160045260245ffd5b5f5b8381101561036e578181015183820152602001610356565b50505f910152565b5f8060408385031215610387575f80fd5b61039083610325565b60208401519092506001600160401b03808211156103ac575f80fd5b818501915085601f8301126103bf575f80fd5b8151818111156103d1576103d1610340565b604051601f8201601f19908116603f011681019083821181831017156103f9576103f9610340565b81604052828152886020848701011115610411575f80fd5b610422836020830160208801610354565b80955050505050509250929050565b5f60208284031215610441575f80fd5b6102f582610325565b5f825161045b818460208701610354565b9190910192915050565b60805161014161047c5f395f602301526101415ff3fe608060405261000c61000e565b005b61001e610019610020565b6100b3565b565b5f7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16635c60da1b6040518163ffffffff1660e01b8152600401602060405180830381865afa15801561008a573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906100ae91906100d1565b905090565b365f80375f80365f845af43d5f803e8080156100cd573d5ff35b3d5ffd5b5f602082840312156100e1575f80fd5b815173ffffffffffffffffffffffffffffffffffffffff81168114610104575f80fd5b939250505056fea2646970667358221220536d01aa09d40303c29765510e815459d8d6c78bd621d4b8e438c93fb2a2381f64736f6c63430008180033",
							"opcodes": "PUSH1 0xA0 PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD PUSH2 0x5BD CODESIZE SUB DUP1 PUSH2 0x5BD DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH2 0x22 SWAP2 PUSH2 0x376 JUMP JUMPDEST PUSH2 0x2C DUP3 DUP3 PUSH2 0x3E JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x80 MSTORE PUSH2 0x465 JUMP JUMPDEST PUSH2 0x47 DUP3 PUSH2 0xFB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 PUSH32 0x1CF3B03A6CF19FA2BABA4DF148E9DCABEDEA7F8A5C07840E207E5C089BE95D3E SWAP1 PUSH0 SWAP1 LOG2 DUP1 MLOAD ISZERO PUSH2 0xEF JUMPI PUSH2 0xEA DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x5C60DA1B PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xC0 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xE4 SWAP2 SWAP1 PUSH2 0x431 JUMP JUMPDEST DUP3 PUSH2 0x209 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0xF7 PUSH2 0x27C JUMP JUMPDEST POP POP JUMP JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EXTCODESIZE PUSH0 SUB PUSH2 0x135 JUMPI PUSH1 0x40 MLOAD PUSH4 0x1933B43B PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH32 0xA3F0AD74E5423AEBFD80D3EF4346578335A9A72AEAEE59FF6CB3582B35133D50 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND OR SWAP1 SSTORE PUSH1 0x40 DUP1 MLOAD PUSH4 0x5C60DA1B PUSH1 0xE0 SHL DUP2 MSTORE SWAP1 MLOAD PUSH0 SWAP3 DUP5 AND SWAP2 PUSH4 0x5C60DA1B SWAP2 PUSH1 0x4 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1AE JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1D2 SWAP2 SWAP1 PUSH2 0x431 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EXTCODESIZE PUSH0 SUB PUSH2 0xF7 JUMPI PUSH1 0x40 MLOAD PUSH4 0x4C9C8CE3 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x12C JUMP JUMPDEST PUSH1 0x60 PUSH0 DUP1 DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x40 MLOAD PUSH2 0x225 SWAP2 SWAP1 PUSH2 0x44A JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 GAS DELEGATECALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0x25D JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x262 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP1 SWAP3 POP SWAP1 POP PUSH2 0x273 DUP6 DUP4 DUP4 PUSH2 0x29D JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST CALLVALUE ISZERO PUSH2 0x29B JUMPI PUSH1 0x40 MLOAD PUSH4 0xB398979F PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x60 DUP3 PUSH2 0x2B2 JUMPI PUSH2 0x2AD DUP3 PUSH2 0x2FC JUMP JUMPDEST PUSH2 0x2F5 JUMP JUMPDEST DUP2 MLOAD ISZERO DUP1 ISZERO PUSH2 0x2C9 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND EXTCODESIZE ISZERO JUMPDEST ISZERO PUSH2 0x2F2 JUMPI PUSH1 0x40 MLOAD PUSH4 0x9996B315 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x12C JUMP JUMPDEST POP DUP1 JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP1 MLOAD ISZERO PUSH2 0x30C JUMPI DUP1 MLOAD DUP1 DUP3 PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xA12F521 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x33B JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x36E JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x356 JUMP JUMPDEST POP POP PUSH0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x387 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x390 DUP4 PUSH2 0x325 JUMP JUMPDEST PUSH1 0x20 DUP5 ADD MLOAD SWAP1 SWAP3 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH2 0x3AC JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 DUP6 ADD SWAP2 POP DUP6 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x3BF JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP2 DUP2 GT ISZERO PUSH2 0x3D1 JUMPI PUSH2 0x3D1 PUSH2 0x340 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP4 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH2 0x3F9 JUMPI PUSH2 0x3F9 PUSH2 0x340 JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP3 DUP2 MSTORE DUP9 PUSH1 0x20 DUP5 DUP8 ADD ADD GT ISZERO PUSH2 0x411 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x422 DUP4 PUSH1 0x20 DUP4 ADD PUSH1 0x20 DUP9 ADD PUSH2 0x354 JUMP JUMPDEST DUP1 SWAP6 POP POP POP POP POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x441 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x2F5 DUP3 PUSH2 0x325 JUMP JUMPDEST PUSH0 DUP3 MLOAD PUSH2 0x45B DUP2 DUP5 PUSH1 0x20 DUP8 ADD PUSH2 0x354 JUMP JUMPDEST SWAP2 SWAP1 SWAP2 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x80 MLOAD PUSH2 0x141 PUSH2 0x47C PUSH0 CODECOPY PUSH0 PUSH1 0x23 ADD MSTORE PUSH2 0x141 PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH2 0xC PUSH2 0xE JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1E PUSH2 0x19 PUSH2 0x20 JUMP JUMPDEST PUSH2 0xB3 JUMP JUMPDEST JUMP JUMPDEST PUSH0 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x5C60DA1B PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x8A JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xAE SWAP2 SWAP1 PUSH2 0xD1 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST CALLDATASIZE PUSH0 DUP1 CALLDATACOPY PUSH0 DUP1 CALLDATASIZE PUSH0 DUP5 GAS DELEGATECALL RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY DUP1 DUP1 ISZERO PUSH2 0xCD JUMPI RETURNDATASIZE PUSH0 RETURN JUMPDEST RETURNDATASIZE PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xE1 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND DUP2 EQ PUSH2 0x104 JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 MSTORE8 PUSH14 0x1AA09D40303C29765510E815459 0xD8 0xD6 0xC7 DUP12 0xD6 0x21 0xD4 0xB8 0xE4 CODESIZE 0xC9 EXTCODEHASH 0xB2 LOG2 CODESIZE 0x1F PUSH5 0x736F6C6343 STOP ADDMOD XOR STOP CALLER ",
							"sourceMap": "1116:1194:2:-:0;;;1773:147;;;;;;;;;;;;;;;;;;:::i;:::-;1838:49;1874:6;1882:4;1838:35;:49::i;:::-;-1:-1:-1;;;;;;1897:16:2;;;1116:1194;;5897:333:0;5986:21;5997:9;5986:10;:21::i;:::-;6022:25;;-1:-1:-1;;;;;6022:25:0;;;;;;;;6062:11;;:15;6058:166;;6093:71;6130:9;-1:-1:-1;;;;;6122:33:0;;:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;6159:4;6093:28;:71::i;:::-;;5897:333;;:::o;6058:166::-;6195:18;:16;:18::i;:::-;5897:333;;:::o;4935:437::-;4996:9;-1:-1:-1;;;;;4996:21:0;;5021:1;4996:26;4992:95;;5045:31;;-1:-1:-1;;;5045:31:0;;-1:-1:-1;;;;;1946:32:6;;5045:31:0;;;1928:51:6;1901:18;;5045:31:0;;;;;;;;4992:95;5145:9;4601:66;5097:57;;-1:-1:-1;;;;;;5097:57:0;-1:-1:-1;;;;;5097:57:0;;;;;;5196:35;;;-1:-1:-1;;;5196:35:0;;;;-1:-1:-1;;5196:33:0;;;;;:35;;;;;;;;;;;;;;:33;:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5165:66;;5245:20;-1:-1:-1;;;;;5245:32:0;;5281:1;5245:37;5241:125;;5305:50;;-1:-1:-1;;;5305:50:0;;-1:-1:-1;;;;;1946:32:6;;5305:50:0;;;1928:51:6;1901:18;;5305:50:0;1782:203:6;4106:253:4;4189:12;4214;4228:23;4255:6;-1:-1:-1;;;;;4255:19:4;4275:4;4255:25;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;4213:67:4;;-1:-1:-1;4213:67:4;-1:-1:-1;4297:55:4;4324:6;4213:67;;4297:26;:55::i;:::-;4290:62;4106:253;-1:-1:-1;;;;;4106:253:4:o;6419:122:0:-;6469:9;:13;6465:70;;6505:19;;-1:-1:-1;;;6505:19:0;;;;;;;;;;;6465:70;6419:122::o;4625:582:4:-;4769:12;4798:7;4793:408;;4821:19;4829:10;4821:7;:19::i;:::-;4793:408;;;5045:17;;:22;:49;;;;-1:-1:-1;;;;;;5071:18:4;;;:23;5045:49;5041:119;;;5121:24;;-1:-1:-1;;;5121:24:4;;-1:-1:-1;;;;;1946:32:6;;5121:24:4;;;1928:51:6;1901:18;;5121:24:4;1782:203:6;5041:119:4;-1:-1:-1;5180:10:4;4793:408;4625:582;;;;;:::o;5743:516::-;5874:17;;:21;5870:383;;6102:10;6096:17;6158:15;6145:10;6141:2;6137:19;6130:44;5870:383;6225:17;;-1:-1:-1;;;6225:17:4;;;;;;;;;;;14:177:6;93:13;;-1:-1:-1;;;;;135:31:6;;125:42;;115:70;;181:1;178;171:12;115:70;14:177;;;:::o;196:127::-;257:10;252:3;248:20;245:1;238:31;288:4;285:1;278:15;312:4;309:1;302:15;328:250;413:1;423:113;437:6;434:1;431:13;423:113;;;513:11;;;507:18;494:11;;;487:39;459:2;452:10;423:113;;;-1:-1:-1;;570:1:6;552:16;;545:27;328:250::o;583:981::-;671:6;679;732:2;720:9;711:7;707:23;703:32;700:52;;;748:1;745;738:12;700:52;771:40;801:9;771:40;:::i;:::-;855:2;840:18;;834:25;761:50;;-1:-1:-1;;;;;;908:14:6;;;905:34;;;935:1;932;925:12;905:34;973:6;962:9;958:22;948:32;;1018:7;1011:4;1007:2;1003:13;999:27;989:55;;1040:1;1037;1030:12;989:55;1069:2;1063:9;1091:2;1087;1084:10;1081:36;;;1097:18;;:::i;:::-;1172:2;1166:9;1140:2;1226:13;;-1:-1:-1;;1222:22:6;;;1246:2;1218:31;1214:40;1202:53;;;1270:18;;;1290:22;;;1267:46;1264:72;;;1316:18;;:::i;:::-;1356:10;1352:2;1345:22;1391:2;1383:6;1376:18;1431:7;1426:2;1421;1417;1413:11;1409:20;1406:33;1403:53;;;1452:1;1449;1442:12;1403:53;1465:68;1530:2;1525;1517:6;1513:15;1508:2;1504;1500:11;1465:68;:::i;:::-;1552:6;1542:16;;;;;;;583:981;;;;;:::o;1569:208::-;1639:6;1692:2;1680:9;1671:7;1667:23;1663:32;1660:52;;;1708:1;1705;1698:12;1660:52;1731:40;1761:9;1731:40;:::i;1990:287::-;2119:3;2157:6;2151:13;2173:66;2232:6;2227:3;2220:4;2212:6;2208:17;2173:66;:::i;:::-;2255:16;;;;;1990:287;-1:-1:-1;;1990:287:6:o;:::-;1116:1194:2;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_337": {
									"entryPoint": null,
									"id": 337,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_delegate_313": {
									"entryPoint": 179,
									"id": 313,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_fallback_329": {
									"entryPoint": 14,
									"id": 329,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_getBeacon_395": {
									"entryPoint": null,
									"id": 395,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_implementation_386": {
									"entryPoint": 32,
									"id": 386,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address_fromMemory": {
									"entryPoint": 209,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:329:6",
										"nodeType": "YulBlock",
										"src": "0:329:6",
										"statements": [
											{
												"nativeSrc": "6:3:6",
												"nodeType": "YulBlock",
												"src": "6:3:6",
												"statements": []
											},
											{
												"body": {
													"nativeSrc": "95:232:6",
													"nodeType": "YulBlock",
													"src": "95:232:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "141:16:6",
																"nodeType": "YulBlock",
																"src": "141:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "150:1:6",
																					"nodeType": "YulLiteral",
																					"src": "150:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "153:1:6",
																					"nodeType": "YulLiteral",
																					"src": "153:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "143:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "143:6:6"
																			},
																			"nativeSrc": "143:12:6",
																			"nodeType": "YulFunctionCall",
																			"src": "143:12:6"
																		},
																		"nativeSrc": "143:12:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "143:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "116:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "116:7:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "125:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "125:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "112:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "112:3:6"
																		},
																		"nativeSrc": "112:23:6",
																		"nodeType": "YulFunctionCall",
																		"src": "112:23:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "137:2:6",
																		"nodeType": "YulLiteral",
																		"src": "137:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "108:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "108:3:6"
																},
																"nativeSrc": "108:32:6",
																"nodeType": "YulFunctionCall",
																"src": "108:32:6"
															},
															"nativeSrc": "105:52:6",
															"nodeType": "YulIf",
															"src": "105:52:6"
														},
														{
															"nativeSrc": "166:29:6",
															"nodeType": "YulVariableDeclaration",
															"src": "166:29:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "185:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "185:9:6"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "179:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "179:5:6"
																},
																"nativeSrc": "179:16:6",
																"nodeType": "YulFunctionCall",
																"src": "179:16:6"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "170:5:6",
																	"nodeType": "YulTypedName",
																	"src": "170:5:6",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "281:16:6",
																"nodeType": "YulBlock",
																"src": "281:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "290:1:6",
																					"nodeType": "YulLiteral",
																					"src": "290:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "293:1:6",
																					"nodeType": "YulLiteral",
																					"src": "293:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "283:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "283:6:6"
																			},
																			"nativeSrc": "283:12:6",
																			"nodeType": "YulFunctionCall",
																			"src": "283:12:6"
																		},
																		"nativeSrc": "283:12:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "283:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "217:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "217:5:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "228:5:6",
																						"nodeType": "YulIdentifier",
																						"src": "228:5:6"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "235:42:6",
																						"nodeType": "YulLiteral",
																						"src": "235:42:6",
																						"type": "",
																						"value": "0xffffffffffffffffffffffffffffffffffffffff"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "224:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "224:3:6"
																				},
																				"nativeSrc": "224:54:6",
																				"nodeType": "YulFunctionCall",
																				"src": "224:54:6"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "214:2:6",
																			"nodeType": "YulIdentifier",
																			"src": "214:2:6"
																		},
																		"nativeSrc": "214:65:6",
																		"nodeType": "YulFunctionCall",
																		"src": "214:65:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "207:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "207:6:6"
																},
																"nativeSrc": "207:73:6",
																"nodeType": "YulFunctionCall",
																"src": "207:73:6"
															},
															"nativeSrc": "204:93:6",
															"nodeType": "YulIf",
															"src": "204:93:6"
														},
														{
															"nativeSrc": "306:15:6",
															"nodeType": "YulAssignment",
															"src": "306:15:6",
															"value": {
																"name": "value",
																"nativeSrc": "316:5:6",
																"nodeType": "YulIdentifier",
																"src": "316:5:6"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "306:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "306:6:6"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address_fromMemory",
												"nativeSrc": "14:313:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "61:9:6",
														"nodeType": "YulTypedName",
														"src": "61:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "72:7:6",
														"nodeType": "YulTypedName",
														"src": "72:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "84:6:6",
														"nodeType": "YulTypedName",
														"src": "84:6:6",
														"type": ""
													}
												],
												"src": "14:313:6"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, and(value, 0xffffffffffffffffffffffffffffffffffffffff))) { revert(0, 0) }\n        value0 := value\n    }\n}",
									"id": 6,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {
								"351": [
									{
										"length": 32,
										"start": 35
									}
								]
							},
							"linkReferences": {},
							"object": "608060405261000c61000e565b005b61001e610019610020565b6100b3565b565b5f7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16635c60da1b6040518163ffffffff1660e01b8152600401602060405180830381865afa15801561008a573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906100ae91906100d1565b905090565b365f80375f80365f845af43d5f803e8080156100cd573d5ff35b3d5ffd5b5f602082840312156100e1575f80fd5b815173ffffffffffffffffffffffffffffffffffffffff81168114610104575f80fd5b939250505056fea2646970667358221220536d01aa09d40303c29765510e815459d8d6c78bd621d4b8e438c93fb2a2381f64736f6c63430008180033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH2 0xC PUSH2 0xE JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1E PUSH2 0x19 PUSH2 0x20 JUMP JUMPDEST PUSH2 0xB3 JUMP JUMPDEST JUMP JUMPDEST PUSH0 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x5C60DA1B PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x8A JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xAE SWAP2 SWAP1 PUSH2 0xD1 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST CALLDATASIZE PUSH0 DUP1 CALLDATACOPY PUSH0 DUP1 CALLDATASIZE PUSH0 DUP5 GAS DELEGATECALL RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY DUP1 DUP1 ISZERO PUSH2 0xCD JUMPI RETURNDATASIZE PUSH0 RETURN JUMPDEST RETURNDATASIZE PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xE1 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND DUP2 EQ PUSH2 0x104 JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 MSTORE8 PUSH14 0x1AA09D40303C29765510E815459 0xD8 0xD6 0xC7 DUP12 0xD6 0x21 0xD4 0xB8 0xE4 CODESIZE 0xC9 EXTCODEHASH 0xB2 LOG2 CODESIZE 0x1F PUSH5 0x736F6C6343 STOP ADDMOD XOR STOP CALLER ",
							"sourceMap": "1116:1194:2:-:0;;;2649:11:1;:9;:11::i;:::-;1116:1194:2;2323:83:1;2371:28;2381:17;:15;:17::i;:::-;2371:9;:28::i;:::-;2323:83::o;2023:138:2:-;2090:7;2294;2116:36;;;:38;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2109:45;;2023:138;:::o;949:895:1:-;1287:14;1284:1;1281;1268:34;1501:1;1498;1482:14;1479:1;1463:14;1456:5;1443:60;1577:16;1574:1;1571;1556:38;1615:6;1682:66;;;;1797:16;1794:1;1787:27;1682:66;1717:16;1714:1;1707:27;14:313:6;84:6;137:2;125:9;116:7;112:23;108:32;105:52;;;153:1;150;143:12;105:52;185:9;179:16;235:42;228:5;224:54;217:5;214:65;204:93;;293:1;290;283:12;204:93;316:5;14:313;-1:-1:-1;;;14:313:6:o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "64200",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"": "infinite"
							},
							"internal": {
								"_getBeacon()": "infinite",
								"_implementation()": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 1116,
									"end": 2310,
									"name": "PUSH",
									"source": 2,
									"value": "A0"
								},
								{
									"begin": 1116,
									"end": 2310,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1116,
									"end": 2310,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1773,
									"end": 1920,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1773,
									"end": 1920,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 1773,
									"end": 1920,
									"name": "PUSHSIZE",
									"source": 2
								},
								{
									"begin": 1773,
									"end": 1920,
									"name": "CODESIZE",
									"source": 2
								},
								{
									"begin": 1773,
									"end": 1920,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 1773,
									"end": 1920,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1773,
									"end": 1920,
									"name": "PUSHSIZE",
									"source": 2
								},
								{
									"begin": 1773,
									"end": 1920,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 1773,
									"end": 1920,
									"name": "CODECOPY",
									"source": 2
								},
								{
									"begin": 1773,
									"end": 1920,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1773,
									"end": 1920,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1773,
									"end": 1920,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1773,
									"end": 1920,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1773,
									"end": 1920,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1773,
									"end": 1920,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1773,
									"end": 1920,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 1773,
									"end": 1920,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 1773,
									"end": 1920,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "2"
								},
								{
									"begin": 1773,
									"end": 1920,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 1773,
									"end": 1920,
									"name": "tag",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 1773,
									"end": 1920,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1838,
									"end": 1887,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "5"
								},
								{
									"begin": 1874,
									"end": 1880,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 1882,
									"end": 1886,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 1838,
									"end": 1873,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "6"
								},
								{
									"begin": 1838,
									"end": 1887,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 1838,
									"end": 1887,
									"name": "tag",
									"source": 2,
									"value": "5"
								},
								{
									"begin": 1838,
									"end": 1887,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1897,
									"end": 1913,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 1897,
									"end": 1913,
									"name": "PUSH",
									"source": 2,
									"value": "80"
								},
								{
									"begin": 1897,
									"end": 1913,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1116,
									"end": 2310,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "57"
								},
								{
									"begin": 1116,
									"end": 2310,
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 5897,
									"end": 6230,
									"name": "tag",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 5897,
									"end": 6230,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 5986,
									"end": 6007,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 5997,
									"end": 6006,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 5986,
									"end": 5996,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 5986,
									"end": 6007,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 5986,
									"end": 6007,
									"name": "tag",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 5986,
									"end": 6007,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 6022,
									"end": 6047,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 6022,
									"end": 6047,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 6022,
									"end": 6047,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 6022,
									"end": 6047,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 6022,
									"end": 6047,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 6022,
									"end": 6047,
									"name": "PUSH",
									"source": 0,
									"value": "1CF3B03A6CF19FA2BABA4DF148E9DCABEDEA7F8A5C07840E207E5C089BE95D3E"
								},
								{
									"begin": 6022,
									"end": 6047,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 6022,
									"end": 6047,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 6022,
									"end": 6047,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 6022,
									"end": 6047,
									"name": "LOG2",
									"source": 0
								},
								{
									"begin": 6062,
									"end": 6073,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 6062,
									"end": 6073,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 6062,
									"end": 6077,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 6058,
									"end": 6224,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 6058,
									"end": 6224,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 6093,
									"end": 6164,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 6130,
									"end": 6139,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 6122,
									"end": 6155,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 6122,
									"end": 6155,
									"name": "PUSH",
									"source": 0,
									"value": "5C60DA1B"
								},
								{
									"begin": 6122,
									"end": 6157,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 6122,
									"end": 6157,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 6122,
									"end": 6157,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 6122,
									"end": 6157,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFF"
								},
								{
									"begin": 6122,
									"end": 6157,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 6122,
									"end": 6157,
									"name": "PUSH",
									"source": 0,
									"value": "E0"
								},
								{
									"begin": 6122,
									"end": 6157,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 6122,
									"end": 6157,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 6122,
									"end": 6157,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 6122,
									"end": 6157,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 6122,
									"end": 6157,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 6122,
									"end": 6157,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 6122,
									"end": 6157,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 6122,
									"end": 6157,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 6122,
									"end": 6157,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 6122,
									"end": 6157,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 6122,
									"end": 6157,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 6122,
									"end": 6157,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 6122,
									"end": 6157,
									"name": "DUP7",
									"source": 0
								},
								{
									"begin": 6122,
									"end": 6157,
									"name": "GAS",
									"source": 0
								},
								{
									"begin": 6122,
									"end": 6157,
									"name": "STATICCALL",
									"source": 0
								},
								{
									"begin": 6122,
									"end": 6157,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 6122,
									"end": 6157,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 6122,
									"end": 6157,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 6122,
									"end": 6157,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "14"
								},
								{
									"begin": 6122,
									"end": 6157,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 6122,
									"end": 6157,
									"name": "RETURNDATASIZE",
									"source": 0
								},
								{
									"begin": 6122,
									"end": 6157,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 6122,
									"end": 6157,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 6122,
									"end": 6157,
									"name": "RETURNDATACOPY",
									"source": 0
								},
								{
									"begin": 6122,
									"end": 6157,
									"name": "RETURNDATASIZE",
									"source": 0
								},
								{
									"begin": 6122,
									"end": 6157,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 6122,
									"end": 6157,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 6122,
									"end": 6157,
									"name": "tag",
									"source": 0,
									"value": "14"
								},
								{
									"begin": 6122,
									"end": 6157,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 6122,
									"end": 6157,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 6122,
									"end": 6157,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 6122,
									"end": 6157,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 6122,
									"end": 6157,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 6122,
									"end": 6157,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 6122,
									"end": 6157,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 6122,
									"end": 6157,
									"name": "RETURNDATASIZE",
									"source": 0
								},
								{
									"begin": 6122,
									"end": 6157,
									"name": "PUSH",
									"source": 0,
									"value": "1F"
								},
								{
									"begin": 6122,
									"end": 6157,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 6122,
									"end": 6157,
									"name": "PUSH",
									"source": 0,
									"value": "1F"
								},
								{
									"begin": 6122,
									"end": 6157,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 6122,
									"end": 6157,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 6122,
									"end": 6157,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 6122,
									"end": 6157,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 6122,
									"end": 6157,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 6122,
									"end": 6157,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 6122,
									"end": 6157,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 6122,
									"end": 6157,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 6122,
									"end": 6157,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 6122,
									"end": 6157,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 6122,
									"end": 6157,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 6122,
									"end": 6157,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 6122,
									"end": 6157,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "15"
								},
								{
									"begin": 6122,
									"end": 6157,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 6122,
									"end": 6157,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 6122,
									"end": 6157,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "16"
								},
								{
									"begin": 6122,
									"end": 6157,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 6122,
									"end": 6157,
									"name": "tag",
									"source": 0,
									"value": "15"
								},
								{
									"begin": 6122,
									"end": 6157,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 6159,
									"end": 6163,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 6093,
									"end": 6121,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "17"
								},
								{
									"begin": 6093,
									"end": 6164,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 6093,
									"end": 6164,
									"name": "tag",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 6093,
									"end": 6164,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 6093,
									"end": 6164,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 5897,
									"end": 6230,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 5897,
									"end": 6230,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 5897,
									"end": 6230,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 6058,
									"end": 6224,
									"name": "tag",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 6058,
									"end": 6224,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 6195,
									"end": 6213,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "19"
								},
								{
									"begin": 6195,
									"end": 6211,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 6195,
									"end": 6213,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 6195,
									"end": 6213,
									"name": "tag",
									"source": 0,
									"value": "19"
								},
								{
									"begin": 6195,
									"end": 6213,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 5897,
									"end": 6230,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 5897,
									"end": 6230,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 5897,
									"end": 6230,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 4935,
									"end": 5372,
									"name": "tag",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 4935,
									"end": 5372,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 4996,
									"end": 5005,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 4996,
									"end": 5017,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 4996,
									"end": 5017,
									"name": "EXTCODESIZE",
									"source": 0
								},
								{
									"begin": 5021,
									"end": 5022,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 4996,
									"end": 5022,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 4992,
									"end": 5087,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "22"
								},
								{
									"begin": 4992,
									"end": 5087,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 5045,
									"end": 5076,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 5045,
									"end": 5076,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1933B43B"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E2"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 5045,
									"end": 5076,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 5045,
									"end": 5076,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1946,
									"end": 1978,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 1946,
									"end": 1978,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 5045,
									"end": 5076,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 5045,
									"end": 5076,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 5045,
									"end": 5076,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1928,
									"end": 1979,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 1901,
									"end": 1919,
									"name": "PUSH",
									"source": 6,
									"value": "24"
								},
								{
									"begin": 1901,
									"end": 1919,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 5045,
									"end": 5076,
									"name": "tag",
									"source": 0,
									"value": "23"
								},
								{
									"begin": 5045,
									"end": 5076,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 5045,
									"end": 5076,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 5045,
									"end": 5076,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 5045,
									"end": 5076,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 5045,
									"end": 5076,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 5045,
									"end": 5076,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 5045,
									"end": 5076,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 5045,
									"end": 5076,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 4992,
									"end": 5087,
									"name": "tag",
									"source": 0,
									"value": "22"
								},
								{
									"begin": 4992,
									"end": 5087,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 5145,
									"end": 5154,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 4601,
									"end": 4667,
									"name": "PUSH",
									"source": 0,
									"value": "A3F0AD74E5423AEBFD80D3EF4346578335A9A72AEAEE59FF6CB3582B35133D50"
								},
								{
									"begin": 5097,
									"end": 5154,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 5097,
									"end": 5154,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 5097,
									"end": 5154,
									"name": "AND",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 5097,
									"end": 5154,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 5097,
									"end": 5154,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 5097,
									"end": 5154,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 5097,
									"end": 5154,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 5097,
									"end": 5154,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 5097,
									"end": 5154,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 5196,
									"end": 5231,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 5196,
									"end": 5231,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 5196,
									"end": 5231,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "5C60DA1B"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 5196,
									"end": 5231,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 5196,
									"end": 5231,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 5196,
									"end": 5231,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 5196,
									"end": 5231,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SWAP3",
									"source": -1
								},
								{
									"begin": 5196,
									"end": 5229,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 5196,
									"end": 5229,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 5196,
									"end": 5229,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 5196,
									"end": 5229,
									"name": "PUSH",
									"source": 0,
									"value": "5C60DA1B"
								},
								{
									"begin": 5196,
									"end": 5229,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 5196,
									"end": 5231,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 5196,
									"end": 5231,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 5196,
									"end": 5231,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 5196,
									"end": 5231,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 5196,
									"end": 5231,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 5196,
									"end": 5231,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 5196,
									"end": 5231,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 5196,
									"end": 5231,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 5196,
									"end": 5231,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 5196,
									"end": 5231,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 5196,
									"end": 5231,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 5196,
									"end": 5231,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 5196,
									"end": 5231,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 5196,
									"end": 5231,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 5196,
									"end": 5229,
									"name": "DUP7",
									"source": 0
								},
								{
									"begin": 5196,
									"end": 5231,
									"name": "GAS",
									"source": 0
								},
								{
									"begin": 5196,
									"end": 5231,
									"name": "STATICCALL",
									"source": 0
								},
								{
									"begin": 5196,
									"end": 5231,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 5196,
									"end": 5231,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 5196,
									"end": 5231,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 5196,
									"end": 5231,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "28"
								},
								{
									"begin": 5196,
									"end": 5231,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 5196,
									"end": 5231,
									"name": "RETURNDATASIZE",
									"source": 0
								},
								{
									"begin": 5196,
									"end": 5231,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 5196,
									"end": 5231,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 5196,
									"end": 5231,
									"name": "RETURNDATACOPY",
									"source": 0
								},
								{
									"begin": 5196,
									"end": 5231,
									"name": "RETURNDATASIZE",
									"source": 0
								},
								{
									"begin": 5196,
									"end": 5231,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 5196,
									"end": 5231,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 5196,
									"end": 5231,
									"name": "tag",
									"source": 0,
									"value": "28"
								},
								{
									"begin": 5196,
									"end": 5231,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 5196,
									"end": 5231,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 5196,
									"end": 5231,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 5196,
									"end": 5231,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 5196,
									"end": 5231,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 5196,
									"end": 5231,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 5196,
									"end": 5231,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 5196,
									"end": 5231,
									"name": "RETURNDATASIZE",
									"source": 0
								},
								{
									"begin": 5196,
									"end": 5231,
									"name": "PUSH",
									"source": 0,
									"value": "1F"
								},
								{
									"begin": 5196,
									"end": 5231,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 5196,
									"end": 5231,
									"name": "PUSH",
									"source": 0,
									"value": "1F"
								},
								{
									"begin": 5196,
									"end": 5231,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 5196,
									"end": 5231,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 5196,
									"end": 5231,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 5196,
									"end": 5231,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 5196,
									"end": 5231,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 5196,
									"end": 5231,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 5196,
									"end": 5231,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 5196,
									"end": 5231,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 5196,
									"end": 5231,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 5196,
									"end": 5231,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 5196,
									"end": 5231,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 5196,
									"end": 5231,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 5196,
									"end": 5231,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "29"
								},
								{
									"begin": 5196,
									"end": 5231,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 5196,
									"end": 5231,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 5196,
									"end": 5231,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "16"
								},
								{
									"begin": 5196,
									"end": 5231,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 5196,
									"end": 5231,
									"name": "tag",
									"source": 0,
									"value": "29"
								},
								{
									"begin": 5196,
									"end": 5231,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 5165,
									"end": 5231,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 5165,
									"end": 5231,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 5245,
									"end": 5265,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 5245,
									"end": 5277,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 5245,
									"end": 5277,
									"name": "EXTCODESIZE",
									"source": 0
								},
								{
									"begin": 5281,
									"end": 5282,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 5245,
									"end": 5282,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 5241,
									"end": 5366,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "19"
								},
								{
									"begin": 5241,
									"end": 5366,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 5305,
									"end": 5355,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 5305,
									"end": 5355,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4C9C8CE3"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 5305,
									"end": 5355,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 5305,
									"end": 5355,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1946,
									"end": 1978,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 1946,
									"end": 1978,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 5305,
									"end": 5355,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 5305,
									"end": 5355,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 5305,
									"end": 5355,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1928,
									"end": 1979,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 1901,
									"end": 1919,
									"name": "PUSH",
									"source": 6,
									"value": "24"
								},
								{
									"begin": 1901,
									"end": 1919,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 5305,
									"end": 5355,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "23"
								},
								{
									"begin": 1782,
									"end": 1985,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 4106,
									"end": 4359,
									"name": "tag",
									"source": 4,
									"value": "17"
								},
								{
									"begin": 4106,
									"end": 4359,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 4189,
									"end": 4201,
									"name": "PUSH",
									"source": 4,
									"value": "60"
								},
								{
									"begin": 4214,
									"end": 4226,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 4228,
									"end": 4251,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 4255,
									"end": 4261,
									"name": "DUP5",
									"source": 4
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 4255,
									"end": 4274,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 4275,
									"end": 4279,
									"name": "DUP5",
									"source": 4
								},
								{
									"begin": 4255,
									"end": 4280,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 4255,
									"end": 4280,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 4255,
									"end": 4280,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "33"
								},
								{
									"begin": 4255,
									"end": 4280,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 4255,
									"end": 4280,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 4255,
									"end": 4280,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "34"
								},
								{
									"begin": 4255,
									"end": 4280,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 4255,
									"end": 4280,
									"name": "tag",
									"source": 4,
									"value": "33"
								},
								{
									"begin": 4255,
									"end": 4280,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 4255,
									"end": 4280,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 4255,
									"end": 4280,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 4255,
									"end": 4280,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 4255,
									"end": 4280,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 4255,
									"end": 4280,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 4255,
									"end": 4280,
									"name": "SUB",
									"source": 4
								},
								{
									"begin": 4255,
									"end": 4280,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 4255,
									"end": 4280,
									"name": "DUP6",
									"source": 4
								},
								{
									"begin": 4255,
									"end": 4280,
									"name": "GAS",
									"source": 4
								},
								{
									"begin": 4255,
									"end": 4280,
									"name": "DELEGATECALL",
									"source": 4
								},
								{
									"begin": 4255,
									"end": 4280,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 4255,
									"end": 4280,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 4255,
									"end": 4280,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 4255,
									"end": 4280,
									"name": "RETURNDATASIZE",
									"source": 4
								},
								{
									"begin": 4255,
									"end": 4280,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 4255,
									"end": 4280,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 4255,
									"end": 4280,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 4255,
									"end": 4280,
									"name": "EQ",
									"source": 4
								},
								{
									"begin": 4255,
									"end": 4280,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "37"
								},
								{
									"begin": 4255,
									"end": 4280,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 4255,
									"end": 4280,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 4255,
									"end": 4280,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 4255,
									"end": 4280,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 4255,
									"end": 4280,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 4255,
									"end": 4280,
									"name": "PUSH",
									"source": 4,
									"value": "1F"
								},
								{
									"begin": 4255,
									"end": 4280,
									"name": "NOT",
									"source": 4
								},
								{
									"begin": 4255,
									"end": 4280,
									"name": "PUSH",
									"source": 4,
									"value": "3F"
								},
								{
									"begin": 4255,
									"end": 4280,
									"name": "RETURNDATASIZE",
									"source": 4
								},
								{
									"begin": 4255,
									"end": 4280,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 4255,
									"end": 4280,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 4255,
									"end": 4280,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 4255,
									"end": 4280,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 4255,
									"end": 4280,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 4255,
									"end": 4280,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 4255,
									"end": 4280,
									"name": "RETURNDATASIZE",
									"source": 4
								},
								{
									"begin": 4255,
									"end": 4280,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 4255,
									"end": 4280,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 4255,
									"end": 4280,
									"name": "RETURNDATASIZE",
									"source": 4
								},
								{
									"begin": 4255,
									"end": 4280,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 4255,
									"end": 4280,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 4255,
									"end": 4280,
									"name": "DUP5",
									"source": 4
								},
								{
									"begin": 4255,
									"end": 4280,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 4255,
									"end": 4280,
									"name": "RETURNDATACOPY",
									"source": 4
								},
								{
									"begin": 4255,
									"end": 4280,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "36"
								},
								{
									"begin": 4255,
									"end": 4280,
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 4255,
									"end": 4280,
									"name": "tag",
									"source": 4,
									"value": "37"
								},
								{
									"begin": 4255,
									"end": 4280,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 4255,
									"end": 4280,
									"name": "PUSH",
									"source": 4,
									"value": "60"
								},
								{
									"begin": 4255,
									"end": 4280,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 4255,
									"end": 4280,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 4255,
									"end": 4280,
									"name": "tag",
									"source": 4,
									"value": "36"
								},
								{
									"begin": 4255,
									"end": 4280,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 4213,
									"end": 4280,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 4213,
									"end": 4280,
									"name": "SWAP3",
									"source": 4
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 4213,
									"end": 4280,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 4297,
									"end": 4352,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "38"
								},
								{
									"begin": 4324,
									"end": 4330,
									"name": "DUP6",
									"source": 4
								},
								{
									"begin": 4213,
									"end": 4280,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 4213,
									"end": 4280,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 4297,
									"end": 4323,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "39"
								},
								{
									"begin": 4297,
									"end": 4352,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 4297,
									"end": 4352,
									"name": "tag",
									"source": 4,
									"value": "38"
								},
								{
									"begin": 4297,
									"end": 4352,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 4290,
									"end": 4352,
									"name": "SWAP6",
									"source": 4
								},
								{
									"begin": 4106,
									"end": 4359,
									"name": "SWAP5",
									"source": 4
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 4106,
									"end": 4359,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 6419,
									"end": 6541,
									"name": "tag",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 6419,
									"end": 6541,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 6469,
									"end": 6478,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 6469,
									"end": 6482,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 6465,
									"end": 6535,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "41"
								},
								{
									"begin": 6465,
									"end": 6535,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 6505,
									"end": 6524,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 6505,
									"end": 6524,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "B398979F"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 6505,
									"end": 6524,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 6505,
									"end": 6524,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 6505,
									"end": 6524,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 6505,
									"end": 6524,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 6505,
									"end": 6524,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 6505,
									"end": 6524,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 6505,
									"end": 6524,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 6505,
									"end": 6524,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 6505,
									"end": 6524,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 6505,
									"end": 6524,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 6505,
									"end": 6524,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 6465,
									"end": 6535,
									"name": "tag",
									"source": 0,
									"value": "41"
								},
								{
									"begin": 6465,
									"end": 6535,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 6419,
									"end": 6541,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 4625,
									"end": 5207,
									"name": "tag",
									"source": 4,
									"value": "39"
								},
								{
									"begin": 4625,
									"end": 5207,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 4769,
									"end": 4781,
									"name": "PUSH",
									"source": 4,
									"value": "60"
								},
								{
									"begin": 4798,
									"end": 4805,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 4793,
									"end": 5201,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "44"
								},
								{
									"begin": 4793,
									"end": 5201,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 4821,
									"end": 4840,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "45"
								},
								{
									"begin": 4829,
									"end": 4839,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 4821,
									"end": 4828,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "46"
								},
								{
									"begin": 4821,
									"end": 4840,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 4821,
									"end": 4840,
									"name": "tag",
									"source": 4,
									"value": "45"
								},
								{
									"begin": 4821,
									"end": 4840,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 4793,
									"end": 5201,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "47"
								},
								{
									"begin": 4793,
									"end": 5201,
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 4793,
									"end": 5201,
									"name": "tag",
									"source": 4,
									"value": "44"
								},
								{
									"begin": 4793,
									"end": 5201,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 5045,
									"end": 5062,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 5045,
									"end": 5062,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 5045,
									"end": 5067,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 5045,
									"end": 5094,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 5045,
									"end": 5094,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 5045,
									"end": 5094,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "48"
								},
								{
									"begin": 5045,
									"end": 5094,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 5071,
									"end": 5089,
									"name": "DUP5",
									"source": 4
								},
								{
									"begin": 5071,
									"end": 5089,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 5071,
									"end": 5089,
									"name": "EXTCODESIZE",
									"source": 4
								},
								{
									"begin": 5071,
									"end": 5094,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 5045,
									"end": 5094,
									"name": "tag",
									"source": 4,
									"value": "48"
								},
								{
									"begin": 5045,
									"end": 5094,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 5041,
									"end": 5160,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 5041,
									"end": 5160,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "49"
								},
								{
									"begin": 5041,
									"end": 5160,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 5121,
									"end": 5145,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 5121,
									"end": 5145,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "9996B315"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 5121,
									"end": 5145,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 5121,
									"end": 5145,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1946,
									"end": 1978,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 1946,
									"end": 1978,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 5121,
									"end": 5145,
									"name": "PUSH",
									"source": 4,
									"value": "4"
								},
								{
									"begin": 5121,
									"end": 5145,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 5121,
									"end": 5145,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 1928,
									"end": 1979,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 1901,
									"end": 1919,
									"name": "PUSH",
									"source": 6,
									"value": "24"
								},
								{
									"begin": 1901,
									"end": 1919,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 5121,
									"end": 5145,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "23"
								},
								{
									"begin": 1782,
									"end": 1985,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 5041,
									"end": 5160,
									"name": "tag",
									"source": 4,
									"value": "49"
								},
								{
									"begin": 5041,
									"end": 5160,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 5180,
									"end": 5190,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 4793,
									"end": 5201,
									"name": "tag",
									"source": 4,
									"value": "47"
								},
								{
									"begin": 4793,
									"end": 5201,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 4625,
									"end": 5207,
									"name": "SWAP4",
									"source": 4
								},
								{
									"begin": 4625,
									"end": 5207,
									"name": "SWAP3",
									"source": 4
								},
								{
									"begin": 4625,
									"end": 5207,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 4625,
									"end": 5207,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 4625,
									"end": 5207,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 4625,
									"end": 5207,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 5743,
									"end": 6259,
									"name": "tag",
									"source": 4,
									"value": "46"
								},
								{
									"begin": 5743,
									"end": 6259,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 5874,
									"end": 5891,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 5874,
									"end": 5891,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 5874,
									"end": 5895,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 5870,
									"end": 6253,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "52"
								},
								{
									"begin": 5870,
									"end": 6253,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 6102,
									"end": 6112,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 6096,
									"end": 6113,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 6158,
									"end": 6173,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 6145,
									"end": 6155,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 6141,
									"end": 6143,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 6137,
									"end": 6156,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 6130,
									"end": 6174,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 5870,
									"end": 6253,
									"name": "tag",
									"source": 4,
									"value": "52"
								},
								{
									"begin": 5870,
									"end": 6253,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 6225,
									"end": 6242,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 6225,
									"end": 6242,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A12F521"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 6225,
									"end": 6242,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 6225,
									"end": 6242,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 6225,
									"end": 6242,
									"name": "PUSH",
									"source": 4,
									"value": "4"
								},
								{
									"begin": 6225,
									"end": 6242,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 6225,
									"end": 6242,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 6225,
									"end": 6242,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 6225,
									"end": 6242,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 6225,
									"end": 6242,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 6225,
									"end": 6242,
									"name": "SUB",
									"source": 4
								},
								{
									"begin": 6225,
									"end": 6242,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 6225,
									"end": 6242,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 14,
									"end": 191,
									"name": "tag",
									"source": 6,
									"value": "54"
								},
								{
									"begin": 14,
									"end": 191,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 93,
									"end": 106,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 93,
									"end": 106,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 135,
									"end": 166,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 135,
									"end": 166,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 125,
									"end": 167,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 125,
									"end": 167,
									"name": "EQ",
									"source": 6
								},
								{
									"begin": 115,
									"end": 185,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "59"
								},
								{
									"begin": 115,
									"end": 185,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 181,
									"end": 182,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 178,
									"end": 179,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 171,
									"end": 183,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 115,
									"end": 185,
									"name": "tag",
									"source": 6,
									"value": "59"
								},
								{
									"begin": 115,
									"end": 185,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 14,
									"end": 191,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 14,
									"end": 191,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 14,
									"end": 191,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 14,
									"end": 191,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 196,
									"end": 323,
									"name": "tag",
									"source": 6,
									"value": "55"
								},
								{
									"begin": 196,
									"end": 323,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 257,
									"end": 267,
									"name": "PUSH",
									"source": 6,
									"value": "4E487B71"
								},
								{
									"begin": 252,
									"end": 255,
									"name": "PUSH",
									"source": 6,
									"value": "E0"
								},
								{
									"begin": 248,
									"end": 268,
									"name": "SHL",
									"source": 6
								},
								{
									"begin": 245,
									"end": 246,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 238,
									"end": 269,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 288,
									"end": 292,
									"name": "PUSH",
									"source": 6,
									"value": "41"
								},
								{
									"begin": 285,
									"end": 286,
									"name": "PUSH",
									"source": 6,
									"value": "4"
								},
								{
									"begin": 278,
									"end": 293,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 312,
									"end": 316,
									"name": "PUSH",
									"source": 6,
									"value": "24"
								},
								{
									"begin": 309,
									"end": 310,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 302,
									"end": 317,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 328,
									"end": 578,
									"name": "tag",
									"source": 6,
									"value": "56"
								},
								{
									"begin": 328,
									"end": 578,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 413,
									"end": 414,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 423,
									"end": 536,
									"name": "tag",
									"source": 6,
									"value": "62"
								},
								{
									"begin": 423,
									"end": 536,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 437,
									"end": 443,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 434,
									"end": 435,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 431,
									"end": 444,
									"name": "LT",
									"source": 6
								},
								{
									"begin": 423,
									"end": 536,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 423,
									"end": 536,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "64"
								},
								{
									"begin": 423,
									"end": 536,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 513,
									"end": 524,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 513,
									"end": 524,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 513,
									"end": 524,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 507,
									"end": 525,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 494,
									"end": 505,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 494,
									"end": 505,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 494,
									"end": 505,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 487,
									"end": 526,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 459,
									"end": 461,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 452,
									"end": 462,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 423,
									"end": 536,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "62"
								},
								{
									"begin": 423,
									"end": 536,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 423,
									"end": 536,
									"name": "tag",
									"source": 6,
									"value": "64"
								},
								{
									"begin": 423,
									"end": 536,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 570,
									"end": 571,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 552,
									"end": 568,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 552,
									"end": 568,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 545,
									"end": 572,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 328,
									"end": 578,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 583,
									"end": 1564,
									"name": "tag",
									"source": 6,
									"value": "2"
								},
								{
									"begin": 583,
									"end": 1564,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 671,
									"end": 677,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 679,
									"end": 685,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 732,
									"end": 734,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 720,
									"end": 729,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 711,
									"end": 718,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 707,
									"end": 730,
									"name": "SUB",
									"source": 6
								},
								{
									"begin": 703,
									"end": 735,
									"name": "SLT",
									"source": 6
								},
								{
									"begin": 700,
									"end": 752,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 700,
									"end": 752,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "66"
								},
								{
									"begin": 700,
									"end": 752,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 748,
									"end": 749,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 745,
									"end": 746,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 738,
									"end": 750,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 700,
									"end": 752,
									"name": "tag",
									"source": 6,
									"value": "66"
								},
								{
									"begin": 700,
									"end": 752,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 771,
									"end": 811,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "67"
								},
								{
									"begin": 801,
									"end": 810,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 771,
									"end": 811,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "54"
								},
								{
									"begin": 771,
									"end": 811,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 771,
									"end": 811,
									"name": "tag",
									"source": 6,
									"value": "67"
								},
								{
									"begin": 771,
									"end": 811,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 855,
									"end": 857,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 840,
									"end": 858,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 840,
									"end": 858,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 834,
									"end": 859,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 761,
									"end": 811,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 761,
									"end": 811,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 908,
									"end": 922,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 908,
									"end": 922,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 908,
									"end": 922,
									"name": "GT",
									"source": 6
								},
								{
									"begin": 905,
									"end": 939,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 905,
									"end": 939,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "68"
								},
								{
									"begin": 905,
									"end": 939,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 935,
									"end": 936,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 932,
									"end": 933,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 925,
									"end": 937,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 905,
									"end": 939,
									"name": "tag",
									"source": 6,
									"value": "68"
								},
								{
									"begin": 905,
									"end": 939,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 973,
									"end": 979,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 962,
									"end": 971,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 958,
									"end": 980,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 948,
									"end": 980,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 948,
									"end": 980,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1018,
									"end": 1025,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 1011,
									"end": 1015,
									"name": "PUSH",
									"source": 6,
									"value": "1F"
								},
								{
									"begin": 1007,
									"end": 1009,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 1003,
									"end": 1016,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 999,
									"end": 1026,
									"name": "SLT",
									"source": 6
								},
								{
									"begin": 989,
									"end": 1044,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "69"
								},
								{
									"begin": 989,
									"end": 1044,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 1040,
									"end": 1041,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1037,
									"end": 1038,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 1030,
									"end": 1042,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 989,
									"end": 1044,
									"name": "tag",
									"source": 6,
									"value": "69"
								},
								{
									"begin": 989,
									"end": 1044,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1069,
									"end": 1071,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1063,
									"end": 1072,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 1091,
									"end": 1093,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1087,
									"end": 1089,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1084,
									"end": 1094,
									"name": "GT",
									"source": 6
								},
								{
									"begin": 1081,
									"end": 1117,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 1081,
									"end": 1117,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "71"
								},
								{
									"begin": 1081,
									"end": 1117,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 1097,
									"end": 1115,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "71"
								},
								{
									"begin": 1097,
									"end": 1115,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "55"
								},
								{
									"begin": 1097,
									"end": 1115,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1097,
									"end": 1115,
									"name": "tag",
									"source": 6,
									"value": "71"
								},
								{
									"begin": 1097,
									"end": 1115,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1172,
									"end": 1174,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 1166,
									"end": 1175,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 1140,
									"end": 1142,
									"name": "PUSH",
									"source": 6,
									"value": "1F"
								},
								{
									"begin": 1226,
									"end": 1239,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 1226,
									"end": 1239,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1F"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 1222,
									"end": 1244,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1222,
									"end": 1244,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1222,
									"end": 1244,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 1246,
									"end": 1248,
									"name": "PUSH",
									"source": 6,
									"value": "3F"
								},
								{
									"begin": 1218,
									"end": 1249,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 1214,
									"end": 1254,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 1202,
									"end": 1255,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1202,
									"end": 1255,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 1202,
									"end": 1255,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1270,
									"end": 1288,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 1270,
									"end": 1288,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 1270,
									"end": 1288,
									"name": "GT",
									"source": 6
								},
								{
									"begin": 1290,
									"end": 1312,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1290,
									"end": 1312,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 1290,
									"end": 1312,
									"name": "LT",
									"source": 6
								},
								{
									"begin": 1267,
									"end": 1313,
									"name": "OR",
									"source": 6
								},
								{
									"begin": 1264,
									"end": 1336,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 1264,
									"end": 1336,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "73"
								},
								{
									"begin": 1264,
									"end": 1336,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 1316,
									"end": 1334,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "73"
								},
								{
									"begin": 1316,
									"end": 1334,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "55"
								},
								{
									"begin": 1316,
									"end": 1334,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1316,
									"end": 1334,
									"name": "tag",
									"source": 6,
									"value": "73"
								},
								{
									"begin": 1316,
									"end": 1334,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1356,
									"end": 1366,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1352,
									"end": 1354,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 1345,
									"end": 1367,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 1391,
									"end": 1393,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 1383,
									"end": 1389,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1376,
									"end": 1394,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 1431,
									"end": 1438,
									"name": "DUP9",
									"source": 6
								},
								{
									"begin": 1426,
									"end": 1428,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 1421,
									"end": 1423,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 1417,
									"end": 1419,
									"name": "DUP8",
									"source": 6
								},
								{
									"begin": 1413,
									"end": 1424,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 1409,
									"end": 1429,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 1406,
									"end": 1439,
									"name": "GT",
									"source": 6
								},
								{
									"begin": 1403,
									"end": 1456,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 1403,
									"end": 1456,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "74"
								},
								{
									"begin": 1403,
									"end": 1456,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 1452,
									"end": 1453,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1449,
									"end": 1450,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 1442,
									"end": 1454,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 1403,
									"end": 1456,
									"name": "tag",
									"source": 6,
									"value": "74"
								},
								{
									"begin": 1403,
									"end": 1456,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1465,
									"end": 1533,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "75"
								},
								{
									"begin": 1530,
									"end": 1532,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 1525,
									"end": 1527,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 1517,
									"end": 1523,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 1513,
									"end": 1528,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 1508,
									"end": 1510,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 1504,
									"end": 1506,
									"name": "DUP9",
									"source": 6
								},
								{
									"begin": 1500,
									"end": 1511,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 1465,
									"end": 1533,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "56"
								},
								{
									"begin": 1465,
									"end": 1533,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1465,
									"end": 1533,
									"name": "tag",
									"source": 6,
									"value": "75"
								},
								{
									"begin": 1465,
									"end": 1533,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1552,
									"end": 1558,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 1542,
									"end": 1558,
									"name": "SWAP6",
									"source": 6
								},
								{
									"begin": 1542,
									"end": 1558,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1542,
									"end": 1558,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1542,
									"end": 1558,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1542,
									"end": 1558,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1542,
									"end": 1558,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1542,
									"end": 1558,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 583,
									"end": 1564,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 583,
									"end": 1564,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 583,
									"end": 1564,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 583,
									"end": 1564,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 583,
									"end": 1564,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 583,
									"end": 1564,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1569,
									"end": 1777,
									"name": "tag",
									"source": 6,
									"value": "16"
								},
								{
									"begin": 1569,
									"end": 1777,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1639,
									"end": 1645,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1692,
									"end": 1694,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 1680,
									"end": 1689,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 1671,
									"end": 1678,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 1667,
									"end": 1690,
									"name": "SUB",
									"source": 6
								},
								{
									"begin": 1663,
									"end": 1695,
									"name": "SLT",
									"source": 6
								},
								{
									"begin": 1660,
									"end": 1712,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 1660,
									"end": 1712,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "77"
								},
								{
									"begin": 1660,
									"end": 1712,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 1708,
									"end": 1709,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1705,
									"end": 1706,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 1698,
									"end": 1710,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 1660,
									"end": 1712,
									"name": "tag",
									"source": 6,
									"value": "77"
								},
								{
									"begin": 1660,
									"end": 1712,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1731,
									"end": 1771,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "47"
								},
								{
									"begin": 1761,
									"end": 1770,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 1731,
									"end": 1771,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "54"
								},
								{
									"begin": 1731,
									"end": 1771,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1990,
									"end": 2277,
									"name": "tag",
									"source": 6,
									"value": "34"
								},
								{
									"begin": 1990,
									"end": 2277,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2119,
									"end": 2122,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 2157,
									"end": 2163,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 2151,
									"end": 2164,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 2173,
									"end": 2239,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "81"
								},
								{
									"begin": 2232,
									"end": 2238,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 2227,
									"end": 2230,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 2220,
									"end": 2224,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 2212,
									"end": 2218,
									"name": "DUP8",
									"source": 6
								},
								{
									"begin": 2208,
									"end": 2225,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 2173,
									"end": 2239,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "56"
								},
								{
									"begin": 2173,
									"end": 2239,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 2173,
									"end": 2239,
									"name": "tag",
									"source": 6,
									"value": "81"
								},
								{
									"begin": 2173,
									"end": 2239,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2255,
									"end": 2271,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 2255,
									"end": 2271,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 2255,
									"end": 2271,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 2255,
									"end": 2271,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 2255,
									"end": 2271,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 1990,
									"end": 2277,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1990,
									"end": 2277,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1990,
									"end": 2277,
									"name": "tag",
									"source": 6,
									"value": "57"
								},
								{
									"begin": 1990,
									"end": 2277,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1116,
									"end": 2310,
									"name": "PUSH",
									"source": 2,
									"value": "80"
								},
								{
									"begin": 1116,
									"end": 2310,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 1116,
									"end": 2310,
									"name": "PUSH #[$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1116,
									"end": 2310,
									"name": "PUSH [$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1116,
									"end": 2310,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 1116,
									"end": 2310,
									"name": "CODECOPY",
									"source": 2
								},
								{
									"begin": 1116,
									"end": 2310,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 1116,
									"end": 2310,
									"name": "ASSIGNIMMUTABLE",
									"source": 2,
									"value": "351"
								},
								{
									"begin": 1116,
									"end": 2310,
									"name": "PUSH #[$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1116,
									"end": 2310,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 1116,
									"end": 2310,
									"name": "RETURN",
									"source": 2
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220536d01aa09d40303c29765510e815459d8d6c78bd621d4b8e438c93fb2a2381f64736f6c63430008180033",
									".code": [
										{
											"begin": 1116,
											"end": 2310,
											"name": "PUSH",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 1116,
											"end": 2310,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1116,
											"end": 2310,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2649,
											"end": 2660,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 2649,
											"end": 2658,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 2649,
											"end": 2660,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2649,
											"end": 2660,
											"name": "tag",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 2649,
											"end": 2660,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1116,
											"end": 2310,
											"name": "STOP",
											"source": 2
										},
										{
											"begin": 2323,
											"end": 2406,
											"name": "tag",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 2323,
											"end": 2406,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2371,
											"end": 2399,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 2381,
											"end": 2398,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 2381,
											"end": 2396,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 2381,
											"end": 2398,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2381,
											"end": 2398,
											"name": "tag",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 2381,
											"end": 2398,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2371,
											"end": 2380,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 2371,
											"end": 2399,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2371,
											"end": 2399,
											"name": "tag",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 2371,
											"end": 2399,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2323,
											"end": 2406,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2023,
											"end": 2161,
											"name": "tag",
											"source": 2,
											"value": "10"
										},
										{
											"begin": 2023,
											"end": 2161,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2090,
											"end": 2097,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2294,
											"end": 2301,
											"name": "PUSHIMMUTABLE",
											"source": 2,
											"value": "351"
										},
										{
											"begin": 2116,
											"end": 2152,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2116,
											"end": 2152,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2116,
											"end": 2152,
											"name": "PUSH",
											"source": 2,
											"value": "5C60DA1B"
										},
										{
											"begin": 2116,
											"end": 2154,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2116,
											"end": 2154,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2116,
											"end": 2154,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2116,
											"end": 2154,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2116,
											"end": 2154,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2116,
											"end": 2154,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 2116,
											"end": 2154,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 2116,
											"end": 2154,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2116,
											"end": 2154,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2116,
											"end": 2154,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2116,
											"end": 2154,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2116,
											"end": 2154,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2116,
											"end": 2154,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2116,
											"end": 2154,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2116,
											"end": 2154,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2116,
											"end": 2154,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2116,
											"end": 2154,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2116,
											"end": 2154,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2116,
											"end": 2154,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 2116,
											"end": 2154,
											"name": "GAS",
											"source": 2
										},
										{
											"begin": 2116,
											"end": 2154,
											"name": "STATICCALL",
											"source": 2
										},
										{
											"begin": 2116,
											"end": 2154,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2116,
											"end": 2154,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2116,
											"end": 2154,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2116,
											"end": 2154,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "16"
										},
										{
											"begin": 2116,
											"end": 2154,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2116,
											"end": 2154,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 2116,
											"end": 2154,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2116,
											"end": 2154,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2116,
											"end": 2154,
											"name": "RETURNDATACOPY",
											"source": 2
										},
										{
											"begin": 2116,
											"end": 2154,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 2116,
											"end": 2154,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2116,
											"end": 2154,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2116,
											"end": 2154,
											"name": "tag",
											"source": 2,
											"value": "16"
										},
										{
											"begin": 2116,
											"end": 2154,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2116,
											"end": 2154,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2116,
											"end": 2154,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2116,
											"end": 2154,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2116,
											"end": 2154,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2116,
											"end": 2154,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2116,
											"end": 2154,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2116,
											"end": 2154,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 2116,
											"end": 2154,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2116,
											"end": 2154,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 2116,
											"end": 2154,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2116,
											"end": 2154,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2116,
											"end": 2154,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2116,
											"end": 2154,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2116,
											"end": 2154,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2116,
											"end": 2154,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2116,
											"end": 2154,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2116,
											"end": 2154,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2116,
											"end": 2154,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2116,
											"end": 2154,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2116,
											"end": 2154,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2116,
											"end": 2154,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2116,
											"end": 2154,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2116,
											"end": 2154,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "17"
										},
										{
											"begin": 2116,
											"end": 2154,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2116,
											"end": 2154,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2116,
											"end": 2154,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "18"
										},
										{
											"begin": 2116,
											"end": 2154,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2116,
											"end": 2154,
											"name": "tag",
											"source": 2,
											"value": "17"
										},
										{
											"begin": 2116,
											"end": 2154,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2109,
											"end": 2154,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2109,
											"end": 2154,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2023,
											"end": 2161,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2023,
											"end": 2161,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 949,
											"end": 1844,
											"name": "tag",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 949,
											"end": 1844,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1287,
											"end": 1301,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 1284,
											"end": 1285,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1281,
											"end": 1282,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1268,
											"end": 1302,
											"name": "CALLDATACOPY",
											"source": 1
										},
										{
											"begin": 1501,
											"end": 1502,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1498,
											"end": 1499,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1482,
											"end": 1496,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 1479,
											"end": 1480,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1463,
											"end": 1477,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1456,
											"end": 1461,
											"name": "GAS",
											"source": 1
										},
										{
											"begin": 1443,
											"end": 1503,
											"name": "DELEGATECALL",
											"source": 1
										},
										{
											"begin": 1577,
											"end": 1593,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 1574,
											"end": 1575,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1571,
											"end": 1572,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1556,
											"end": 1594,
											"name": "RETURNDATACOPY",
											"source": 1
										},
										{
											"begin": 1615,
											"end": 1621,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1682,
											"end": 1748,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1682,
											"end": 1748,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1682,
											"end": 1748,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 1682,
											"end": 1748,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1797,
											"end": 1813,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 1794,
											"end": 1795,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1787,
											"end": 1814,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 1682,
											"end": 1748,
											"name": "tag",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 1682,
											"end": 1748,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1717,
											"end": 1733,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 1714,
											"end": 1715,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1707,
											"end": 1734,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 14,
											"end": 327,
											"name": "tag",
											"source": 6,
											"value": "18"
										},
										{
											"begin": 14,
											"end": 327,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 84,
											"end": 90,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 137,
											"end": 139,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 125,
											"end": 134,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 116,
											"end": 123,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 112,
											"end": 135,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 108,
											"end": 140,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 105,
											"end": 157,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 105,
											"end": 157,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "25"
										},
										{
											"begin": 105,
											"end": 157,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 153,
											"end": 154,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 150,
											"end": 151,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 143,
											"end": 155,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 105,
											"end": 157,
											"name": "tag",
											"source": 6,
											"value": "25"
										},
										{
											"begin": 105,
											"end": 157,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 185,
											"end": 194,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 179,
											"end": 195,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 235,
											"end": 277,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 228,
											"end": 233,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 224,
											"end": 278,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 217,
											"end": 222,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 214,
											"end": 279,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 204,
											"end": 297,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "26"
										},
										{
											"begin": 204,
											"end": 297,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 293,
											"end": 294,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 290,
											"end": 291,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 283,
											"end": 295,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 204,
											"end": 297,
											"name": "tag",
											"source": 6,
											"value": "26"
										},
										{
											"begin": 204,
											"end": 297,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 316,
											"end": 321,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 14,
											"end": 327,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 14,
											"end": 327,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										}
									]
								}
							},
							"sourceList": [
								".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/proxy/ERC1967/ERC1967Utils.sol",
								".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/proxy/Proxy.sol",
								".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/proxy/beacon/BeaconProxy.sol",
								".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/proxy/beacon/IBeacon.sol",
								".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/utils/Address.sol",
								".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/utils/StorageSlot.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"beacon\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"stateMutability\":\"payable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"AddressEmptyCode\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"beacon\",\"type\":\"address\"}],\"name\":\"ERC1967InvalidBeacon\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"ERC1967InvalidImplementation\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ERC1967NonPayable\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FailedInnerCall\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"beacon\",\"type\":\"address\"}],\"name\":\"BeaconUpgraded\",\"type\":\"event\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"}],\"devdoc\":{\"details\":\"This contract implements a proxy that gets the implementation address for each call from an {UpgradeableBeacon}. The beacon address can only be set once during construction, and cannot be changed afterwards. It is stored in an immutable variable to avoid unnecessary storage reads, and also in the beacon storage slot specified by https://eips.ethereum.org/EIPS/eip-1967[ERC-1967] so that it can be accessed externally. CAUTION: Since the beacon address can never be changed, you must ensure that you either control the beacon, or trust the beacon to not upgrade the implementation maliciously. IMPORTANT: Do not use the implementation logic to modify the beacon storage slot. Doing so would leave the proxy in an inconsistent state where the beacon storage slot does not match the beacon address.\",\"errors\":{\"AddressEmptyCode(address)\":[{\"details\":\"There's no code at `target` (it is not a contract).\"}],\"ERC1967InvalidBeacon(address)\":[{\"details\":\"The `beacon` of the proxy is invalid.\"}],\"ERC1967InvalidImplementation(address)\":[{\"details\":\"The `implementation` of the proxy is invalid.\"}],\"ERC1967NonPayable()\":[{\"details\":\"An upgrade function sees `msg.value > 0` that may be lost.\"}],\"FailedInnerCall()\":[{\"details\":\"A call to an address target failed. The target may have reverted.\"}]},\"events\":{\"BeaconUpgraded(address)\":{\"details\":\"Emitted when the beacon is changed.\"}},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the proxy with `beacon`. If `data` is nonempty, it's used as data in a delegate call to the implementation returned by the beacon. This will typically be an encoded function call, and allows initializing the storage of the proxy like a Solidity constructor. Requirements: - `beacon` must be a contract with the interface {IBeacon}. - If `data` is empty, `msg.value` must be zero.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/proxy/beacon/BeaconProxy.sol\":\"BeaconProxy\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":900},\"remappings\":[]},\"sources\":{\".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/proxy/ERC1967/ERC1967Utils.sol\":{\"keccak256\":\"0x06bd04b0d6af06424c58c24ad861ac4fbe68ae729c199127f4b64361a0629510\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8a9228dd927facb9a400333848e8cf616c7a7f30693563d98a963266dc8ae28a\",\"dweb:/ipfs/Qmehe5JAWCK7g8A9VkS9LpfiNkYzXkrxnXfpvtuqbrA9BA\"]},\".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/proxy/Proxy.sol\":{\"keccak256\":\"0xc3f2ec76a3de8ed7a7007c46166f5550c72c7709e3fc7e8bb3111a7191cdedbd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e73efb4c2ca655882dc237c6b4f234a9bd36d97159d8fcaa837eb01171f726ac\",\"dweb:/ipfs/QmTNnnv7Gu5fs5G1ZMh7Fexp8N4XUs3XrNAngjcxgiss3e\"]},\".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/proxy/beacon/BeaconProxy.sol\":{\"keccak256\":\"0x25052a8e6c783ab01f98a9ac7f521649be60b9963f352e2453997ba8fbc2d285\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://94ba3d98053a310582febe79742e566a36073f1f2645ddc772c638c84ae93b88\",\"dweb:/ipfs/QmTHUMHniPNJ9H2Ui2zgk35CZDSThg2nQ8j5sNXaNarL9D\"]},\".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/proxy/beacon/IBeacon.sol\":{\"keccak256\":\"0xc59a78b07b44b2cf2e8ab4175fca91e8eca1eee2df7357b8d2a8833e5ea1f64c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5aa4f07e65444784c29cd7bfcc2341b34381e4e5b5da9f0c5bd00d7f430e66fa\",\"dweb:/ipfs/QmWRMh4Q9DpaU9GvsiXmDdoNYMyyece9if7hnfLz7uqzWM\"]},\".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/utils/Address.sol\":{\"keccak256\":\"0xaf28a975a78550e45f65e559a3ad6a5ad43b9b8a37366999abd1b7084eb70721\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7bd24e224f67f65bfadf85dc2929fa965456bb2415478bd0125471b5ce35245\",\"dweb:/ipfs/QmRaydGr8BTHs1kvaZfsNU69pKzUAGFrvABn1KiRSbE51y\"]},\".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0x70d9a9cf8d5cc830d7396505ef8eb9686bd0c60a29c6644bd6cc278f9bab8ebe\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://719abb402c11be12355088da587ffd971fee1b035b5aa6b1ba3b1a9493d3c1d7\",\"dweb:/ipfs/QmanHMFVDqVtZAFFaH1CeGQWoHWsFnWHH75fCrguwi77Hq\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/proxy/beacon/IBeacon.sol": {
				"IBeacon": {
					"abi": [
						{
							"inputs": [],
							"name": "implementation",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "This is the interface that {BeaconProxy} expects of its beacon.",
						"kind": "dev",
						"methods": {
							"implementation()": {
								"details": "Must return an address that can be used as a delegate call target. {UpgradeableBeacon} will check that this address is a contract."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"implementation()": "5c60da1b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"implementation\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"This is the interface that {BeaconProxy} expects of its beacon.\",\"kind\":\"dev\",\"methods\":{\"implementation()\":{\"details\":\"Must return an address that can be used as a delegate call target. {UpgradeableBeacon} will check that this address is a contract.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/proxy/beacon/IBeacon.sol\":\"IBeacon\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":900},\"remappings\":[]},\"sources\":{\".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/proxy/beacon/IBeacon.sol\":{\"keccak256\":\"0xc59a78b07b44b2cf2e8ab4175fca91e8eca1eee2df7357b8d2a8833e5ea1f64c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5aa4f07e65444784c29cd7bfcc2341b34381e4e5b5da9f0c5bd00d7f430e66fa\",\"dweb:/ipfs/QmWRMh4Q9DpaU9GvsiXmDdoNYMyyece9if7hnfLz7uqzWM\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/utils/Address.sol": {
				"Address": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "target",
									"type": "address"
								}
							],
							"name": "AddressEmptyCode",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "AddressInsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "FailedInnerCall",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Collection of functions related to the address type",
						"errors": {
							"AddressEmptyCode(address)": [
								{
									"details": "There's no code at `target` (it is not a contract)."
								}
							],
							"AddressInsufficientBalance(address)": [
								{
									"details": "The ETH balance of the account is not enough to perform the operation."
								}
							],
							"FailedInnerCall()": [
								{
									"details": "A call to an address target failed. The target may have reverted."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/utils/Address.sol\":195:6261  library Address {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/utils/Address.sol\":195:6261  library Address {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212204718b04f6428529afe72bf73947386ab13ccfaf3928bbadb563a6522bb3505c464736f6c63430008180033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60556032600b8282823980515f1a607314602657634e487b7160e01b5f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea26469706673582212204718b04f6428529afe72bf73947386ab13ccfaf3928bbadb563a6522bb3505c464736f6c63430008180033",
							"opcodes": "PUSH1 0x55 PUSH1 0x32 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x26 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SELFBALANCE XOR 0xB0 0x4F PUSH5 0x28529AFE72 0xBF PUSH20 0x947386AB13CCFAF3928BBADB563A6522BB3505C4 PUSH5 0x736F6C6343 STOP ADDMOD XOR STOP CALLER ",
							"sourceMap": "195:6066:4:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;195:6066:4;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea26469706673582212204718b04f6428529afe72bf73947386ab13ccfaf3928bbadb563a6522bb3505c464736f6c63430008180033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SELFBALANCE XOR 0xB0 0x4F PUSH5 0x28529AFE72 0xBF PUSH20 0x947386AB13CCFAF3928BBADB563A6522BB3505C4 PUSH5 0x736F6C6343 STOP ADDMOD XOR STOP CALLER ",
							"sourceMap": "195:6066:4:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "96",
								"totalCost": "17096"
							},
							"internal": {
								"_revert(bytes memory)": "infinite",
								"functionCall(address,bytes memory)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256)": "infinite",
								"functionDelegateCall(address,bytes memory)": "infinite",
								"functionStaticCall(address,bytes memory)": "infinite",
								"sendValue(address payable,uint256)": "infinite",
								"verifyCallResult(bool,bytes memory)": "infinite",
								"verifyCallResultFromTarget(address,bool,bytes memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH #[$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH [$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 4,
									"value": "B"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "CODECOPY",
									"source": 4
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "BYTE",
									"source": 4
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 4,
									"value": "73"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "EQ",
									"source": 4
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 4,
									"value": "4"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 4,
									"value": "24"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "tag",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "ADDRESS",
									"source": 4
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 4,
									"value": "73"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "MSTORE8",
									"source": 4
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "RETURN",
									"source": 4
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212204718b04f6428529afe72bf73947386ab13ccfaf3928bbadb563a6522bb3505c464736f6c63430008180033",
									".code": [
										{
											"begin": 195,
											"end": 6261,
											"name": "PUSHDEPLOYADDRESS",
											"source": 4
										},
										{
											"begin": 195,
											"end": 6261,
											"name": "ADDRESS",
											"source": 4
										},
										{
											"begin": 195,
											"end": 6261,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 195,
											"end": 6261,
											"name": "PUSH",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 195,
											"end": 6261,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 195,
											"end": 6261,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 195,
											"end": 6261,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 195,
											"end": 6261,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 195,
											"end": 6261,
											"name": "REVERT",
											"source": 4
										}
									]
								}
							},
							"sourceList": [
								".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/proxy/ERC1967/ERC1967Utils.sol",
								".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/proxy/Proxy.sol",
								".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/proxy/beacon/BeaconProxy.sol",
								".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/proxy/beacon/IBeacon.sol",
								".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/utils/Address.sol",
								".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/utils/StorageSlot.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"AddressEmptyCode\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"AddressInsufficientBalance\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FailedInnerCall\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"errors\":{\"AddressEmptyCode(address)\":[{\"details\":\"There's no code at `target` (it is not a contract).\"}],\"AddressInsufficientBalance(address)\":[{\"details\":\"The ETH balance of the account is not enough to perform the operation.\"}],\"FailedInnerCall()\":[{\"details\":\"A call to an address target failed. The target may have reverted.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/utils/Address.sol\":\"Address\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":900},\"remappings\":[]},\"sources\":{\".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/utils/Address.sol\":{\"keccak256\":\"0xaf28a975a78550e45f65e559a3ad6a5ad43b9b8a37366999abd1b7084eb70721\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7bd24e224f67f65bfadf85dc2929fa965456bb2415478bd0125471b5ce35245\",\"dweb:/ipfs/QmRaydGr8BTHs1kvaZfsNU69pKzUAGFrvABn1KiRSbE51y\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/utils/StorageSlot.sol": {
				"StorageSlot": {
					"abi": [],
					"devdoc": {
						"details": "Library for reading and writing primitive types to specific storage slots. Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts. This library helps with reading and writing to such slots without the need for inline assembly. The functions in this library return Slot structs that contain a `value` member that can be used to read or write. Example usage to set ERC-1967 implementation slot: ```solidity contract ERC1967 {     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;     function _getImplementation() internal view returns (address) {         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;     }     function _setImplementation(address newImplementation) internal {         require(newImplementation.code.length > 0);         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;     } } ```",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/utils/StorageSlot.sol\":1246:3931  library StorageSlot {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/utils/StorageSlot.sol\":1246:3931  library StorageSlot {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa264697066735822122006ce4251906d5ce0871cf8eb2238bf78e60cde7d9c5709457488797d8bd9656064736f6c63430008180033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60556032600b8282823980515f1a607314602657634e487b7160e01b5f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea264697066735822122006ce4251906d5ce0871cf8eb2238bf78e60cde7d9c5709457488797d8bd9656064736f6c63430008180033",
							"opcodes": "PUSH1 0x55 PUSH1 0x32 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x26 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 MOD 0xCE TIMESTAMP MLOAD SWAP1 PUSH14 0x5CE0871CF8EB2238BF78E60CDE7D SWAP13 JUMPI MULMOD GASLIMIT PUSH21 0x88797D8BD9656064736F6C63430008180033000000 ",
							"sourceMap": "1246:2685:5:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;1246:2685:5;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea264697066735822122006ce4251906d5ce0871cf8eb2238bf78e60cde7d9c5709457488797d8bd9656064736f6c63430008180033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 MOD 0xCE TIMESTAMP MLOAD SWAP1 PUSH14 0x5CE0871CF8EB2238BF78E60CDE7D SWAP13 JUMPI MULMOD GASLIMIT PUSH21 0x88797D8BD9656064736F6C63430008180033000000 ",
							"sourceMap": "1246:2685:5:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "96",
								"totalCost": "17096"
							},
							"internal": {
								"getAddressSlot(bytes32)": "infinite",
								"getBooleanSlot(bytes32)": "infinite",
								"getBytes32Slot(bytes32)": "infinite",
								"getBytesSlot(bytes storage pointer)": "infinite",
								"getBytesSlot(bytes32)": "infinite",
								"getStringSlot(bytes32)": "infinite",
								"getStringSlot(string storage pointer)": "infinite",
								"getUint256Slot(bytes32)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 1246,
									"end": 3931,
									"name": "PUSH #[$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1246,
									"end": 3931,
									"name": "PUSH [$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1246,
									"end": 3931,
									"name": "PUSH",
									"source": 5,
									"value": "B"
								},
								{
									"begin": 1246,
									"end": 3931,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 1246,
									"end": 3931,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 1246,
									"end": 3931,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 1246,
									"end": 3931,
									"name": "CODECOPY",
									"source": 5
								},
								{
									"begin": 1246,
									"end": 3931,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 1246,
									"end": 3931,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 1246,
									"end": 3931,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 1246,
									"end": 3931,
									"name": "BYTE",
									"source": 5
								},
								{
									"begin": 1246,
									"end": 3931,
									"name": "PUSH",
									"source": 5,
									"value": "73"
								},
								{
									"begin": 1246,
									"end": 3931,
									"name": "EQ",
									"source": 5
								},
								{
									"begin": 1246,
									"end": 3931,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 1246,
									"end": 3931,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 1246,
									"end": 3931,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 1246,
									"end": 3931,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 1246,
									"end": 3931,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 1246,
									"end": 3931,
									"name": "PUSH",
									"source": 5,
									"value": "4"
								},
								{
									"begin": 1246,
									"end": 3931,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 1246,
									"end": 3931,
									"name": "PUSH",
									"source": 5,
									"value": "24"
								},
								{
									"begin": 1246,
									"end": 3931,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 1246,
									"end": 3931,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 1246,
									"end": 3931,
									"name": "tag",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 1246,
									"end": 3931,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1246,
									"end": 3931,
									"name": "ADDRESS",
									"source": 5
								},
								{
									"begin": 1246,
									"end": 3931,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 1246,
									"end": 3931,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 1246,
									"end": 3931,
									"name": "PUSH",
									"source": 5,
									"value": "73"
								},
								{
									"begin": 1246,
									"end": 3931,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1246,
									"end": 3931,
									"name": "MSTORE8",
									"source": 5
								},
								{
									"begin": 1246,
									"end": 3931,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 1246,
									"end": 3931,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1246,
									"end": 3931,
									"name": "RETURN",
									"source": 5
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122006ce4251906d5ce0871cf8eb2238bf78e60cde7d9c5709457488797d8bd9656064736f6c63430008180033",
									".code": [
										{
											"begin": 1246,
											"end": 3931,
											"name": "PUSHDEPLOYADDRESS",
											"source": 5
										},
										{
											"begin": 1246,
											"end": 3931,
											"name": "ADDRESS",
											"source": 5
										},
										{
											"begin": 1246,
											"end": 3931,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 1246,
											"end": 3931,
											"name": "PUSH",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 1246,
											"end": 3931,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1246,
											"end": 3931,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1246,
											"end": 3931,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1246,
											"end": 3931,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1246,
											"end": 3931,
											"name": "REVERT",
											"source": 5
										}
									]
								}
							},
							"sourceList": [
								".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/proxy/ERC1967/ERC1967Utils.sol",
								".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/proxy/Proxy.sol",
								".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/proxy/beacon/BeaconProxy.sol",
								".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/proxy/beacon/IBeacon.sol",
								".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/utils/Address.sol",
								".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/utils/StorageSlot.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Library for reading and writing primitive types to specific storage slots. Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts. This library helps with reading and writing to such slots without the need for inline assembly. The functions in this library return Slot structs that contain a `value` member that can be used to read or write. Example usage to set ERC-1967 implementation slot: ```solidity contract ERC1967 {     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;     function _getImplementation() internal view returns (address) {         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;     }     function _setImplementation(address newImplementation) internal {         require(newImplementation.code.length > 0);         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;     } } ```\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/utils/StorageSlot.sol\":\"StorageSlot\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":900},\"remappings\":[]},\"sources\":{\".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0x70d9a9cf8d5cc830d7396505ef8eb9686bd0c60a29c6644bd6cc278f9bab8ebe\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://719abb402c11be12355088da587ffd971fee1b035b5aa6b1ba3b1a9493d3c1d7\",\"dweb:/ipfs/QmanHMFVDqVtZAFFaH1CeGQWoHWsFnWHH75fCrguwi77Hq\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/proxy/ERC1967/ERC1967Utils.sol": {
				"ast": {
					"absolutePath": ".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/proxy/ERC1967/ERC1967Utils.sol",
					"exportedSymbols": {
						"Address": [
							659
						],
						"ERC1967Utils": [
							302
						],
						"IBeacon": [
							406
						],
						"StorageSlot": [
							769
						]
					},
					"id": 303,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "114:24:0"
						},
						{
							"absolutePath": ".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/proxy/beacon/IBeacon.sol",
							"file": "../beacon/IBeacon.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 303,
							"sourceUnit": 407,
							"src": "140:46:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2,
										"name": "IBeacon",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 406,
										"src": "148:7:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": ".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/utils/Address.sol",
							"file": "../../utils/Address.sol",
							"id": 5,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 303,
							"sourceUnit": 660,
							"src": "187:48:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 4,
										"name": "Address",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 659,
										"src": "195:7:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": ".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/utils/StorageSlot.sol",
							"file": "../../utils/StorageSlot.sol",
							"id": 7,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 303,
							"sourceUnit": 770,
							"src": "236:56:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 6,
										"name": "StorageSlot",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 769,
										"src": "244:11:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "ERC1967Utils",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 8,
								"nodeType": "StructuredDocumentation",
								"src": "294:155:0",
								"text": " @dev This abstract contract provides getters and event emitting update functions for\n https://eips.ethereum.org/EIPS/eip-1967[ERC-1967] slots."
							},
							"fullyImplemented": true,
							"id": 302,
							"linearizedBaseContracts": [
								302
							],
							"name": "ERC1967Utils",
							"nameLocation": "458:12:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 9,
										"nodeType": "StructuredDocumentation",
										"src": "477:68:0",
										"text": " @dev Emitted when the implementation is upgraded."
									},
									"eventSelector": "bc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b",
									"id": 13,
									"name": "Upgraded",
									"nameLocation": "556:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 11,
												"indexed": true,
												"mutability": "mutable",
												"name": "implementation",
												"nameLocation": "581:14:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "565:30:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 10,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "565:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "564:32:0"
									},
									"src": "550:47:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 14,
										"nodeType": "StructuredDocumentation",
										"src": "603:67:0",
										"text": " @dev Emitted when the admin account has changed."
									},
									"eventSelector": "7e644d79422f17c01e4894b5f4f588d331ebfa28653d42ae832dc59e38c9798f",
									"id": 20,
									"name": "AdminChanged",
									"nameLocation": "681:12:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 19,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 16,
												"indexed": false,
												"mutability": "mutable",
												"name": "previousAdmin",
												"nameLocation": "702:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "694:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 15,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "694:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 18,
												"indexed": false,
												"mutability": "mutable",
												"name": "newAdmin",
												"nameLocation": "725:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "717:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 17,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "717:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "693:41:0"
									},
									"src": "675:60:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 21,
										"nodeType": "StructuredDocumentation",
										"src": "741:59:0",
										"text": " @dev Emitted when the beacon is changed."
									},
									"eventSelector": "1cf3b03a6cf19fa2baba4df148e9dcabedea7f8a5c07840e207e5c089be95d3e",
									"id": 25,
									"name": "BeaconUpgraded",
									"nameLocation": "811:14:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 24,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 23,
												"indexed": true,
												"mutability": "mutable",
												"name": "beacon",
												"nameLocation": "842:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 25,
												"src": "826:22:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 22,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "826:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "825:24:0"
									},
									"src": "805:45:0"
								},
								{
									"constant": true,
									"documentation": {
										"id": 26,
										"nodeType": "StructuredDocumentation",
										"src": "856:170:0",
										"text": " @dev Storage slot with the address of the current implementation.\n This is the keccak-256 hash of \"eip1967.proxy.implementation\" subtracted by 1."
									},
									"id": 29,
									"mutability": "constant",
									"name": "IMPLEMENTATION_SLOT",
									"nameLocation": "1122:19:0",
									"nodeType": "VariableDeclaration",
									"scope": 302,
									"src": "1096:114:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 27,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "1096:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"hexValue": "307833363038393461313362613161333231303636376338323834393264623938646361336532303736636333373335613932306133636135303564333832626263",
										"id": 28,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1144:66:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_24440054405305269366569402256811496959409073762505157381672968839269610695612_by_1",
											"typeString": "int_const 2444...(69 digits omitted)...5612"
										},
										"value": "0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc"
									},
									"visibility": "internal"
								},
								{
									"documentation": {
										"id": 30,
										"nodeType": "StructuredDocumentation",
										"src": "1217:69:0",
										"text": " @dev The `implementation` of the proxy is invalid."
									},
									"errorSelector": "4c9c8ce3",
									"id": 34,
									"name": "ERC1967InvalidImplementation",
									"nameLocation": "1297:28:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 33,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 32,
												"mutability": "mutable",
												"name": "implementation",
												"nameLocation": "1334:14:0",
												"nodeType": "VariableDeclaration",
												"scope": 34,
												"src": "1326:22:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 31,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1326:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1325:24:0"
									},
									"src": "1291:59:0"
								},
								{
									"documentation": {
										"id": 35,
										"nodeType": "StructuredDocumentation",
										"src": "1356:60:0",
										"text": " @dev The `admin` of the proxy is invalid."
									},
									"errorSelector": "62e77ba2",
									"id": 39,
									"name": "ERC1967InvalidAdmin",
									"nameLocation": "1427:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 38,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 37,
												"mutability": "mutable",
												"name": "admin",
												"nameLocation": "1455:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 39,
												"src": "1447:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 36,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1447:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1446:15:0"
									},
									"src": "1421:41:0"
								},
								{
									"documentation": {
										"id": 40,
										"nodeType": "StructuredDocumentation",
										"src": "1468:61:0",
										"text": " @dev The `beacon` of the proxy is invalid."
									},
									"errorSelector": "64ced0ec",
									"id": 44,
									"name": "ERC1967InvalidBeacon",
									"nameLocation": "1540:20:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 43,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 42,
												"mutability": "mutable",
												"name": "beacon",
												"nameLocation": "1569:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "1561:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 41,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1561:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1560:16:0"
									},
									"src": "1534:43:0"
								},
								{
									"documentation": {
										"id": 45,
										"nodeType": "StructuredDocumentation",
										"src": "1583:82:0",
										"text": " @dev An upgrade function sees `msg.value > 0` that may be lost."
									},
									"errorSelector": "b398979f",
									"id": 47,
									"name": "ERC1967NonPayable",
									"nameLocation": "1676:17:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 46,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1693:2:0"
									},
									"src": "1670:26:0"
								},
								{
									"body": {
										"id": 59,
										"nodeType": "Block",
										"src": "1835:77:0",
										"statements": [
											{
												"expression": {
													"expression": {
														"arguments": [
															{
																"id": 55,
																"name": "IMPLEMENTATION_SLOT",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 29,
																"src": "1879:19:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															],
															"expression": {
																"id": 53,
																"name": "StorageSlot",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 769,
																"src": "1852:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_StorageSlot_$769_$",
																	"typeString": "type(library StorageSlot)"
																}
															},
															"id": 54,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1864:14:0",
															"memberName": "getAddressSlot",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 691,
															"src": "1852:26:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$665_storage_ptr_$",
																"typeString": "function (bytes32) pure returns (struct StorageSlot.AddressSlot storage pointer)"
															}
														},
														"id": 56,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1852:47:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_AddressSlot_$665_storage_ptr",
															"typeString": "struct StorageSlot.AddressSlot storage pointer"
														}
													},
													"id": 57,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "1900:5:0",
													"memberName": "value",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 664,
													"src": "1852:53:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 52,
												"id": 58,
												"nodeType": "Return",
												"src": "1845:60:0"
											}
										]
									},
									"documentation": {
										"id": 48,
										"nodeType": "StructuredDocumentation",
										"src": "1702:67:0",
										"text": " @dev Returns the current implementation address."
									},
									"id": 60,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getImplementation",
									"nameLocation": "1783:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 49,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1800:2:0"
									},
									"returnParameters": {
										"id": 52,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 51,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 60,
												"src": "1826:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 50,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1826:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1825:9:0"
									},
									"scope": 302,
									"src": "1774:138:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 86,
										"nodeType": "Block",
										"src": "2067:218:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 70,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 66,
																"name": "newImplementation",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 63,
																"src": "2081:17:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 67,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2099:4:0",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "2081:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 68,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2104:6:0",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "2081:29:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 69,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2114:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2081:34:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 76,
												"nodeType": "IfStatement",
												"src": "2077:119:0",
												"trueBody": {
													"id": 75,
													"nodeType": "Block",
													"src": "2117:79:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 72,
																		"name": "newImplementation",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 63,
																		"src": "2167:17:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 71,
																	"name": "ERC1967InvalidImplementation",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 34,
																	"src": "2138:28:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 73,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2138:47:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 74,
															"nodeType": "RevertStatement",
															"src": "2131:54:0"
														}
													]
												}
											},
											{
												"expression": {
													"id": 84,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"arguments": [
																{
																	"id": 80,
																	"name": "IMPLEMENTATION_SLOT",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 29,
																	"src": "2232:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																],
																"expression": {
																	"id": 77,
																	"name": "StorageSlot",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 769,
																	"src": "2205:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_StorageSlot_$769_$",
																		"typeString": "type(library StorageSlot)"
																	}
																},
																"id": 79,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2217:14:0",
																"memberName": "getAddressSlot",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 691,
																"src": "2205:26:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$665_storage_ptr_$",
																	"typeString": "function (bytes32) pure returns (struct StorageSlot.AddressSlot storage pointer)"
																}
															},
															"id": 81,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2205:47:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_AddressSlot_$665_storage_ptr",
																"typeString": "struct StorageSlot.AddressSlot storage pointer"
															}
														},
														"id": 82,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "2253:5:0",
														"memberName": "value",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 664,
														"src": "2205:53:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 83,
														"name": "newImplementation",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 63,
														"src": "2261:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2205:73:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 85,
												"nodeType": "ExpressionStatement",
												"src": "2205:73:0"
											}
										]
									},
									"documentation": {
										"id": 61,
										"nodeType": "StructuredDocumentation",
										"src": "1918:81:0",
										"text": " @dev Stores a new address in the ERC-1967 implementation slot."
									},
									"id": 87,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setImplementation",
									"nameLocation": "2013:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 64,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 63,
												"mutability": "mutable",
												"name": "newImplementation",
												"nameLocation": "2040:17:0",
												"nodeType": "VariableDeclaration",
												"scope": 87,
												"src": "2032:25:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 62,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2032:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2031:27:0"
									},
									"returnParameters": {
										"id": 65,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2067:0:0"
									},
									"scope": 302,
									"src": "2004:281:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 120,
										"nodeType": "Block",
										"src": "2678:254:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 96,
															"name": "newImplementation",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 90,
															"src": "2707:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 95,
														"name": "_setImplementation",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 87,
														"src": "2688:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 97,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2688:37:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 98,
												"nodeType": "ExpressionStatement",
												"src": "2688:37:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 100,
															"name": "newImplementation",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 90,
															"src": "2749:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 99,
														"name": "Upgraded",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 13,
														"src": "2740:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 101,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2740:27:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 102,
												"nodeType": "EmitStatement",
												"src": "2735:32:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 106,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 103,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 92,
															"src": "2782:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 104,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2787:6:0",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "2782:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 105,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2796:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2782:15:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 118,
													"nodeType": "Block",
													"src": "2883:43:0",
													"statements": [
														{
															"expression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 115,
																	"name": "_checkNonPayable",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 301,
																	"src": "2897:16:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
																		"typeString": "function ()"
																	}
																},
																"id": 116,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2897:18:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 117,
															"nodeType": "ExpressionStatement",
															"src": "2897:18:0"
														}
													]
												},
												"id": 119,
												"nodeType": "IfStatement",
												"src": "2778:148:0",
												"trueBody": {
													"id": 114,
													"nodeType": "Block",
													"src": "2799:78:0",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 110,
																		"name": "newImplementation",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 90,
																		"src": "2842:17:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 111,
																		"name": "data",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 92,
																		"src": "2861:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"expression": {
																		"id": 107,
																		"name": "Address",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 659,
																		"src": "2813:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_Address_$659_$",
																			"typeString": "type(library Address)"
																		}
																	},
																	"id": 109,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2821:20:0",
																	"memberName": "functionDelegateCall",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 578,
																	"src": "2813:28:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
																		"typeString": "function (address,bytes memory) returns (bytes memory)"
																	}
																},
																"id": 112,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2813:53:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 113,
															"nodeType": "ExpressionStatement",
															"src": "2813:53:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 88,
										"nodeType": "StructuredDocumentation",
										"src": "2291:301:0",
										"text": " @dev Performs implementation upgrade with additional setup call if data is nonempty.\n This function is payable only if the setup call is performed, otherwise `msg.value` is rejected\n to avoid stuck value in the contract.\n Emits an {IERC1967-Upgraded} event."
									},
									"id": 121,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "upgradeToAndCall",
									"nameLocation": "2606:16:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 93,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 90,
												"mutability": "mutable",
												"name": "newImplementation",
												"nameLocation": "2631:17:0",
												"nodeType": "VariableDeclaration",
												"scope": 121,
												"src": "2623:25:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 89,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2623:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 92,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "2663:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 121,
												"src": "2650:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 91,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2650:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2622:46:0"
									},
									"returnParameters": {
										"id": 94,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2678:0:0"
									},
									"scope": 302,
									"src": "2597:335:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"constant": true,
									"documentation": {
										"id": 122,
										"nodeType": "StructuredDocumentation",
										"src": "2938:145:0",
										"text": " @dev Storage slot with the admin of the contract.\n This is the keccak-256 hash of \"eip1967.proxy.admin\" subtracted by 1."
									},
									"id": 125,
									"mutability": "constant",
									"name": "ADMIN_SLOT",
									"nameLocation": "3179:10:0",
									"nodeType": "VariableDeclaration",
									"scope": 302,
									"src": "3153:105:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 123,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "3153:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"hexValue": "307862353331323736383461353638623331373361653133623966386136303136653234336536336236653865653131373864366137313738353062356436313033",
										"id": 124,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "3192:66:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_81955473079516046949633743016697847541294818689821282749996681496272635257091_by_1",
											"typeString": "int_const 8195...(69 digits omitted)...7091"
										},
										"value": "0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103"
									},
									"visibility": "internal"
								},
								{
									"body": {
										"id": 137,
										"nodeType": "Block",
										"src": "3663:68:0",
										"statements": [
											{
												"expression": {
													"expression": {
														"arguments": [
															{
																"id": 133,
																"name": "ADMIN_SLOT",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 125,
																"src": "3707:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															],
															"expression": {
																"id": 131,
																"name": "StorageSlot",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 769,
																"src": "3680:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_StorageSlot_$769_$",
																	"typeString": "type(library StorageSlot)"
																}
															},
															"id": 132,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3692:14:0",
															"memberName": "getAddressSlot",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 691,
															"src": "3680:26:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$665_storage_ptr_$",
																"typeString": "function (bytes32) pure returns (struct StorageSlot.AddressSlot storage pointer)"
															}
														},
														"id": 134,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3680:38:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_AddressSlot_$665_storage_ptr",
															"typeString": "struct StorageSlot.AddressSlot storage pointer"
														}
													},
													"id": 135,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "3719:5:0",
													"memberName": "value",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 664,
													"src": "3680:44:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 130,
												"id": 136,
												"nodeType": "Return",
												"src": "3673:51:0"
											}
										]
									},
									"documentation": {
										"id": 126,
										"nodeType": "StructuredDocumentation",
										"src": "3265:341:0",
										"text": " @dev Returns the current admin.\n TIP: To get this value clients can read directly from the storage slot shown below (specified by ERC-1967) using\n the https://eth.wiki/json-rpc/API#eth_getstorageat[`eth_getStorageAt`] RPC call.\n `0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103`"
									},
									"id": 138,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getAdmin",
									"nameLocation": "3620:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 127,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3628:2:0"
									},
									"returnParameters": {
										"id": 130,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 129,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 138,
												"src": "3654:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 128,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3654:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3653:9:0"
									},
									"scope": 302,
									"src": "3611:120:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 168,
										"nodeType": "Block",
										"src": "3859:172:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 149,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 144,
														"name": "newAdmin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 141,
														"src": "3873:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 147,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3893:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 146,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "3885:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 145,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "3885:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 148,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3885:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3873:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 158,
												"nodeType": "IfStatement",
												"src": "3869:91:0",
												"trueBody": {
													"id": 157,
													"nodeType": "Block",
													"src": "3897:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 153,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "3946:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 152,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "3938:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 151,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "3938:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 154,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3938:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 150,
																	"name": "ERC1967InvalidAdmin",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 39,
																	"src": "3918:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 155,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3918:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 156,
															"nodeType": "RevertStatement",
															"src": "3911:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"id": 166,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"arguments": [
																{
																	"id": 162,
																	"name": "ADMIN_SLOT",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 125,
																	"src": "3996:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																],
																"expression": {
																	"id": 159,
																	"name": "StorageSlot",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 769,
																	"src": "3969:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_StorageSlot_$769_$",
																		"typeString": "type(library StorageSlot)"
																	}
																},
																"id": 161,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "3981:14:0",
																"memberName": "getAddressSlot",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 691,
																"src": "3969:26:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$665_storage_ptr_$",
																	"typeString": "function (bytes32) pure returns (struct StorageSlot.AddressSlot storage pointer)"
																}
															},
															"id": 163,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3969:38:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_AddressSlot_$665_storage_ptr",
																"typeString": "struct StorageSlot.AddressSlot storage pointer"
															}
														},
														"id": 164,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "4008:5:0",
														"memberName": "value",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 664,
														"src": "3969:44:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 165,
														"name": "newAdmin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 141,
														"src": "4016:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3969:55:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 167,
												"nodeType": "ExpressionStatement",
												"src": "3969:55:0"
											}
										]
									},
									"documentation": {
										"id": 139,
										"nodeType": "StructuredDocumentation",
										"src": "3737:72:0",
										"text": " @dev Stores a new address in the ERC-1967 admin slot."
									},
									"id": 169,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setAdmin",
									"nameLocation": "3823:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 142,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 141,
												"mutability": "mutable",
												"name": "newAdmin",
												"nameLocation": "3841:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 169,
												"src": "3833:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 140,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3833:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3832:18:0"
									},
									"returnParameters": {
										"id": 143,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3859:0:0"
									},
									"scope": 302,
									"src": "3814:217:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 185,
										"nodeType": "Block",
										"src": "4199:85:0",
										"statements": [
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 176,
																"name": "getAdmin",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 138,
																"src": "4227:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 177,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4227:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 178,
															"name": "newAdmin",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 172,
															"src": "4239:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 175,
														"name": "AdminChanged",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 20,
														"src": "4214:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 179,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4214:34:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 180,
												"nodeType": "EmitStatement",
												"src": "4209:39:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 182,
															"name": "newAdmin",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 172,
															"src": "4268:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 181,
														"name": "_setAdmin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 169,
														"src": "4258:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 183,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4258:19:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 184,
												"nodeType": "ExpressionStatement",
												"src": "4258:19:0"
											}
										]
									},
									"documentation": {
										"id": 170,
										"nodeType": "StructuredDocumentation",
										"src": "4037:109:0",
										"text": " @dev Changes the admin of the proxy.\n Emits an {IERC1967-AdminChanged} event."
									},
									"id": 186,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "changeAdmin",
									"nameLocation": "4160:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 173,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 172,
												"mutability": "mutable",
												"name": "newAdmin",
												"nameLocation": "4180:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 186,
												"src": "4172:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 171,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4172:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4171:18:0"
									},
									"returnParameters": {
										"id": 174,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4199:0:0"
									},
									"scope": 302,
									"src": "4151:133:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"constant": true,
									"documentation": {
										"id": 187,
										"nodeType": "StructuredDocumentation",
										"src": "4290:201:0",
										"text": " @dev The storage slot of the UpgradeableBeacon contract which defines the implementation for this proxy.\n This is the keccak-256 hash of \"eip1967.proxy.beacon\" subtracted by 1."
									},
									"id": 190,
									"mutability": "constant",
									"name": "BEACON_SLOT",
									"nameLocation": "4587:11:0",
									"nodeType": "VariableDeclaration",
									"scope": 302,
									"src": "4561:106:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 188,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "4561:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"hexValue": "307861336630616437346535343233616562666438306433656634333436353738333335613961373261656165653539666636636233353832623335313333643530",
										"id": 189,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "4601:66:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_74152234768234802001998023604048924213078445070507226371336425913862612794704_by_1",
											"typeString": "int_const 7415...(69 digits omitted)...4704"
										},
										"value": "0xa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d50"
									},
									"visibility": "internal"
								},
								{
									"body": {
										"id": 202,
										"nodeType": "Block",
										"src": "4783:69:0",
										"statements": [
											{
												"expression": {
													"expression": {
														"arguments": [
															{
																"id": 198,
																"name": "BEACON_SLOT",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 190,
																"src": "4827:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															],
															"expression": {
																"id": 196,
																"name": "StorageSlot",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 769,
																"src": "4800:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_StorageSlot_$769_$",
																	"typeString": "type(library StorageSlot)"
																}
															},
															"id": 197,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4812:14:0",
															"memberName": "getAddressSlot",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 691,
															"src": "4800:26:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$665_storage_ptr_$",
																"typeString": "function (bytes32) pure returns (struct StorageSlot.AddressSlot storage pointer)"
															}
														},
														"id": 199,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4800:39:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_AddressSlot_$665_storage_ptr",
															"typeString": "struct StorageSlot.AddressSlot storage pointer"
														}
													},
													"id": 200,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "4840:5:0",
													"memberName": "value",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 664,
													"src": "4800:45:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 195,
												"id": 201,
												"nodeType": "Return",
												"src": "4793:52:0"
											}
										]
									},
									"documentation": {
										"id": 191,
										"nodeType": "StructuredDocumentation",
										"src": "4674:51:0",
										"text": " @dev Returns the current beacon."
									},
									"id": 203,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getBeacon",
									"nameLocation": "4739:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 192,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4748:2:0"
									},
									"returnParameters": {
										"id": 195,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 194,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 203,
												"src": "4774:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 193,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4774:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4773:9:0"
									},
									"scope": 302,
									"src": "4730:122:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 248,
										"nodeType": "Block",
										"src": "4982:390:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 213,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 209,
																"name": "newBeacon",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 206,
																"src": "4996:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 210,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5006:4:0",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "4996:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 211,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5011:6:0",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "4996:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 212,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5021:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "4996:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 219,
												"nodeType": "IfStatement",
												"src": "4992:95:0",
												"trueBody": {
													"id": 218,
													"nodeType": "Block",
													"src": "5024:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 215,
																		"name": "newBeacon",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 206,
																		"src": "5066:9:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 214,
																	"name": "ERC1967InvalidBeacon",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 44,
																	"src": "5045:20:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 216,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5045:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 217,
															"nodeType": "RevertStatement",
															"src": "5038:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"id": 227,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"arguments": [
																{
																	"id": 223,
																	"name": "BEACON_SLOT",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 190,
																	"src": "5124:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																],
																"expression": {
																	"id": 220,
																	"name": "StorageSlot",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 769,
																	"src": "5097:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_StorageSlot_$769_$",
																		"typeString": "type(library StorageSlot)"
																	}
																},
																"id": 222,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "5109:14:0",
																"memberName": "getAddressSlot",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 691,
																"src": "5097:26:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$665_storage_ptr_$",
																	"typeString": "function (bytes32) pure returns (struct StorageSlot.AddressSlot storage pointer)"
																}
															},
															"id": 224,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5097:39:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_AddressSlot_$665_storage_ptr",
																"typeString": "struct StorageSlot.AddressSlot storage pointer"
															}
														},
														"id": 225,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "5137:5:0",
														"memberName": "value",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 664,
														"src": "5097:45:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 226,
														"name": "newBeacon",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 206,
														"src": "5145:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5097:57:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 228,
												"nodeType": "ExpressionStatement",
												"src": "5097:57:0"
											},
											{
												"assignments": [
													230
												],
												"declarations": [
													{
														"constant": false,
														"id": 230,
														"mutability": "mutable",
														"name": "beaconImplementation",
														"nameLocation": "5173:20:0",
														"nodeType": "VariableDeclaration",
														"scope": 248,
														"src": "5165:28:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 229,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "5165:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 236,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"arguments": [
																{
																	"id": 232,
																	"name": "newBeacon",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 206,
																	"src": "5204:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 231,
																"name": "IBeacon",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 406,
																"src": "5196:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IBeacon_$406_$",
																	"typeString": "type(contract IBeacon)"
																}
															},
															"id": 233,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5196:18:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IBeacon_$406",
																"typeString": "contract IBeacon"
															}
														},
														"id": 234,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5215:14:0",
														"memberName": "implementation",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 405,
														"src": "5196:33:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
															"typeString": "function () view external returns (address)"
														}
													},
													"id": 235,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5196:35:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5165:66:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 241,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 237,
																"name": "beaconImplementation",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 230,
																"src": "5245:20:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 238,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5266:4:0",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "5245:25:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 239,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5271:6:0",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "5245:32:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 240,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5281:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "5245:37:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 247,
												"nodeType": "IfStatement",
												"src": "5241:125:0",
												"trueBody": {
													"id": 246,
													"nodeType": "Block",
													"src": "5284:82:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 243,
																		"name": "beaconImplementation",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 230,
																		"src": "5334:20:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 242,
																	"name": "ERC1967InvalidImplementation",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 34,
																	"src": "5305:28:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 244,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5305:50:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 245,
															"nodeType": "RevertStatement",
															"src": "5298:57:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 204,
										"nodeType": "StructuredDocumentation",
										"src": "4858:72:0",
										"text": " @dev Stores a new beacon in the ERC-1967 beacon slot."
									},
									"id": 249,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setBeacon",
									"nameLocation": "4944:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 207,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 206,
												"mutability": "mutable",
												"name": "newBeacon",
												"nameLocation": "4963:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "4955:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 205,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4955:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4954:19:0"
									},
									"returnParameters": {
										"id": 208,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4982:0:0"
									},
									"scope": 302,
									"src": "4935:437:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 286,
										"nodeType": "Block",
										"src": "5976:254:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 258,
															"name": "newBeacon",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 252,
															"src": "5997:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 257,
														"name": "_setBeacon",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 249,
														"src": "5986:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 259,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5986:21:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 260,
												"nodeType": "ExpressionStatement",
												"src": "5986:21:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 262,
															"name": "newBeacon",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 252,
															"src": "6037:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 261,
														"name": "BeaconUpgraded",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 25,
														"src": "6022:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 263,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6022:25:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 264,
												"nodeType": "EmitStatement",
												"src": "6017:30:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 268,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 265,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 254,
															"src": "6062:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 266,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6067:6:0",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "6062:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 267,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6076:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "6062:15:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 284,
													"nodeType": "Block",
													"src": "6181:43:0",
													"statements": [
														{
															"expression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 281,
																	"name": "_checkNonPayable",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 301,
																	"src": "6195:16:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
																		"typeString": "function ()"
																	}
																},
																"id": 282,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6195:18:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 283,
															"nodeType": "ExpressionStatement",
															"src": "6195:18:0"
														}
													]
												},
												"id": 285,
												"nodeType": "IfStatement",
												"src": "6058:166:0",
												"trueBody": {
													"id": 280,
													"nodeType": "Block",
													"src": "6079:96:0",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"expression": {
																				"arguments": [
																					{
																						"id": 273,
																						"name": "newBeacon",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 252,
																						"src": "6130:9:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					],
																					"id": 272,
																					"name": "IBeacon",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 406,
																					"src": "6122:7:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_contract$_IBeacon_$406_$",
																						"typeString": "type(contract IBeacon)"
																					}
																				},
																				"id": 274,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "6122:18:0",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_IBeacon_$406",
																					"typeString": "contract IBeacon"
																				}
																			},
																			"id": 275,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "6141:14:0",
																			"memberName": "implementation",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 405,
																			"src": "6122:33:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
																				"typeString": "function () view external returns (address)"
																			}
																		},
																		"id": 276,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6122:35:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 277,
																		"name": "data",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 254,
																		"src": "6159:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"expression": {
																		"id": 269,
																		"name": "Address",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 659,
																		"src": "6093:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_Address_$659_$",
																			"typeString": "type(library Address)"
																		}
																	},
																	"id": 271,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "6101:20:0",
																	"memberName": "functionDelegateCall",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 578,
																	"src": "6093:28:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
																		"typeString": "function (address,bytes memory) returns (bytes memory)"
																	}
																},
																"id": 278,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6093:71:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 279,
															"nodeType": "ExpressionStatement",
															"src": "6093:71:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 250,
										"nodeType": "StructuredDocumentation",
										"src": "5378:514:0",
										"text": " @dev Change the beacon and trigger a setup call if data is nonempty.\n This function is payable only if the setup call is performed, otherwise `msg.value` is rejected\n to avoid stuck value in the contract.\n Emits an {IERC1967-BeaconUpgraded} event.\n CAUTION: Invoking this function has no effect on an instance of {BeaconProxy} since v5, since\n it uses an immutable beacon without looking at the value of the ERC-1967 beacon slot for\n efficiency."
									},
									"id": 287,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "upgradeBeaconToAndCall",
									"nameLocation": "5906:22:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 255,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 252,
												"mutability": "mutable",
												"name": "newBeacon",
												"nameLocation": "5937:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 287,
												"src": "5929:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 251,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5929:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 254,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5961:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 287,
												"src": "5948:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 253,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5948:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5928:38:0"
									},
									"returnParameters": {
										"id": 256,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5976:0:0"
									},
									"scope": 302,
									"src": "5897:333:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 300,
										"nodeType": "Block",
										"src": "6455:86:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 294,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 291,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "6469:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 292,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6473:5:0",
														"memberName": "value",
														"nodeType": "MemberAccess",
														"src": "6469:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 293,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6481:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "6469:13:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 299,
												"nodeType": "IfStatement",
												"src": "6465:70:0",
												"trueBody": {
													"id": 298,
													"nodeType": "Block",
													"src": "6484:51:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 295,
																	"name": "ERC1967NonPayable",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 47,
																	"src": "6505:17:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 296,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6505:19:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 297,
															"nodeType": "RevertStatement",
															"src": "6498:26:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 288,
										"nodeType": "StructuredDocumentation",
										"src": "6236:178:0",
										"text": " @dev Reverts if `msg.value` is not zero. It can be used to avoid `msg.value` stuck in the contract\n if an upgrade doesn't perform an initialization call."
									},
									"id": 301,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkNonPayable",
									"nameLocation": "6428:16:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 289,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6444:2:0"
									},
									"returnParameters": {
										"id": 290,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6455:0:0"
									},
									"scope": 302,
									"src": "6419:122:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 303,
							"src": "450:6093:0",
							"usedErrors": [
								34,
								39,
								44,
								47
							],
							"usedEvents": [
								13,
								20,
								25
							]
						}
					],
					"src": "114:6430:0"
				},
				"id": 0
			},
			".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/proxy/Proxy.sol": {
				"ast": {
					"absolutePath": ".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/proxy/Proxy.sol",
					"exportedSymbols": {
						"Proxy": [
							338
						]
					},
					"id": 339,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 304,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "99:24:1"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Proxy",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 305,
								"nodeType": "StructuredDocumentation",
								"src": "125:598:1",
								"text": " @dev This abstract contract provides a fallback function that delegates all calls to another contract using the EVM\n instruction `delegatecall`. We refer to the second contract as the _implementation_ behind the proxy, and it has to\n be specified by overriding the virtual {_implementation} function.\n Additionally, delegation to the implementation can be triggered manually through the {_fallback} function, or to a\n different contract through the {_delegate} function.\n The success and return data of the delegated call will be returned back to the caller of the proxy."
							},
							"fullyImplemented": false,
							"id": 338,
							"linearizedBaseContracts": [
								338
							],
							"name": "Proxy",
							"nameLocation": "742:5:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 312,
										"nodeType": "Block",
										"src": "1009:835:1",
										"statements": [
											{
												"AST": {
													"nativeSrc": "1028:810:1",
													"nodeType": "YulBlock",
													"src": "1028:810:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1281:1:1",
																		"nodeType": "YulLiteral",
																		"src": "1281:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1284:1:1",
																		"nodeType": "YulLiteral",
																		"src": "1284:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [],
																		"functionName": {
																			"name": "calldatasize",
																			"nativeSrc": "1287:12:1",
																			"nodeType": "YulIdentifier",
																			"src": "1287:12:1"
																		},
																		"nativeSrc": "1287:14:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1287:14:1"
																	}
																],
																"functionName": {
																	"name": "calldatacopy",
																	"nativeSrc": "1268:12:1",
																	"nodeType": "YulIdentifier",
																	"src": "1268:12:1"
																},
																"nativeSrc": "1268:34:1",
																"nodeType": "YulFunctionCall",
																"src": "1268:34:1"
															},
															"nativeSrc": "1268:34:1",
															"nodeType": "YulExpressionStatement",
															"src": "1268:34:1"
														},
														{
															"nativeSrc": "1429:74:1",
															"nodeType": "YulVariableDeclaration",
															"src": "1429:74:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [],
																		"functionName": {
																			"name": "gas",
																			"nativeSrc": "1456:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "1456:3:1"
																		},
																		"nativeSrc": "1456:5:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1456:5:1"
																	},
																	{
																		"name": "implementation",
																		"nativeSrc": "1463:14:1",
																		"nodeType": "YulIdentifier",
																		"src": "1463:14:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1479:1:1",
																		"nodeType": "YulLiteral",
																		"src": "1479:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [],
																		"functionName": {
																			"name": "calldatasize",
																			"nativeSrc": "1482:12:1",
																			"nodeType": "YulIdentifier",
																			"src": "1482:12:1"
																		},
																		"nativeSrc": "1482:14:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1482:14:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1498:1:1",
																		"nodeType": "YulLiteral",
																		"src": "1498:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1501:1:1",
																		"nodeType": "YulLiteral",
																		"src": "1501:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "delegatecall",
																	"nativeSrc": "1443:12:1",
																	"nodeType": "YulIdentifier",
																	"src": "1443:12:1"
																},
																"nativeSrc": "1443:60:1",
																"nodeType": "YulFunctionCall",
																"src": "1443:60:1"
															},
															"variables": [
																{
																	"name": "result",
																	"nativeSrc": "1433:6:1",
																	"nodeType": "YulTypedName",
																	"src": "1433:6:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1571:1:1",
																		"nodeType": "YulLiteral",
																		"src": "1571:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1574:1:1",
																		"nodeType": "YulLiteral",
																		"src": "1574:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [],
																		"functionName": {
																			"name": "returndatasize",
																			"nativeSrc": "1577:14:1",
																			"nodeType": "YulIdentifier",
																			"src": "1577:14:1"
																		},
																		"nativeSrc": "1577:16:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1577:16:1"
																	}
																],
																"functionName": {
																	"name": "returndatacopy",
																	"nativeSrc": "1556:14:1",
																	"nodeType": "YulIdentifier",
																	"src": "1556:14:1"
																},
																"nativeSrc": "1556:38:1",
																"nodeType": "YulFunctionCall",
																"src": "1556:38:1"
															},
															"nativeSrc": "1556:38:1",
															"nodeType": "YulExpressionStatement",
															"src": "1556:38:1"
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "1689:59:1",
																		"nodeType": "YulBlock",
																		"src": "1689:59:1",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "1714:1:1",
																							"nodeType": "YulLiteral",
																							"src": "1714:1:1",
																							"type": "",
																							"value": "0"
																						},
																						{
																							"arguments": [],
																							"functionName": {
																								"name": "returndatasize",
																								"nativeSrc": "1717:14:1",
																								"nodeType": "YulIdentifier",
																								"src": "1717:14:1"
																							},
																							"nativeSrc": "1717:16:1",
																							"nodeType": "YulFunctionCall",
																							"src": "1717:16:1"
																						}
																					],
																					"functionName": {
																						"name": "revert",
																						"nativeSrc": "1707:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "1707:6:1"
																					},
																					"nativeSrc": "1707:27:1",
																					"nodeType": "YulFunctionCall",
																					"src": "1707:27:1"
																				},
																				"nativeSrc": "1707:27:1",
																				"nodeType": "YulExpressionStatement",
																				"src": "1707:27:1"
																			}
																		]
																	},
																	"nativeSrc": "1682:66:1",
																	"nodeType": "YulCase",
																	"src": "1682:66:1",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1687:1:1",
																		"nodeType": "YulLiteral",
																		"src": "1687:1:1",
																		"type": "",
																		"value": "0"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "1769:59:1",
																		"nodeType": "YulBlock",
																		"src": "1769:59:1",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "1794:1:1",
																							"nodeType": "YulLiteral",
																							"src": "1794:1:1",
																							"type": "",
																							"value": "0"
																						},
																						{
																							"arguments": [],
																							"functionName": {
																								"name": "returndatasize",
																								"nativeSrc": "1797:14:1",
																								"nodeType": "YulIdentifier",
																								"src": "1797:14:1"
																							},
																							"nativeSrc": "1797:16:1",
																							"nodeType": "YulFunctionCall",
																							"src": "1797:16:1"
																						}
																					],
																					"functionName": {
																						"name": "return",
																						"nativeSrc": "1787:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "1787:6:1"
																					},
																					"nativeSrc": "1787:27:1",
																					"nodeType": "YulFunctionCall",
																					"src": "1787:27:1"
																				},
																				"nativeSrc": "1787:27:1",
																				"nodeType": "YulExpressionStatement",
																				"src": "1787:27:1"
																			}
																		]
																	},
																	"nativeSrc": "1761:67:1",
																	"nodeType": "YulCase",
																	"src": "1761:67:1",
																	"value": "default"
																}
															],
															"expression": {
																"name": "result",
																"nativeSrc": "1615:6:1",
																"nodeType": "YulIdentifier",
																"src": "1615:6:1"
															},
															"nativeSrc": "1608:220:1",
															"nodeType": "YulSwitch",
															"src": "1608:220:1"
														}
													]
												},
												"evmVersion": "shanghai",
												"externalReferences": [
													{
														"declaration": 308,
														"isOffset": false,
														"isSlot": false,
														"src": "1463:14:1",
														"valueSize": 1
													}
												],
												"id": 311,
												"nodeType": "InlineAssembly",
												"src": "1019:819:1"
											}
										]
									},
									"documentation": {
										"id": 306,
										"nodeType": "StructuredDocumentation",
										"src": "754:190:1",
										"text": " @dev Delegates the current call to `implementation`.\n This function does not return to its internal call site, it will return directly to the external caller."
									},
									"id": 313,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_delegate",
									"nameLocation": "958:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 309,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 308,
												"mutability": "mutable",
												"name": "implementation",
												"nameLocation": "976:14:1",
												"nodeType": "VariableDeclaration",
												"scope": 313,
												"src": "968:22:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 307,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "968:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "967:24:1"
									},
									"returnParameters": {
										"id": 310,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1009:0:1"
									},
									"scope": 338,
									"src": "949:895:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"documentation": {
										"id": 314,
										"nodeType": "StructuredDocumentation",
										"src": "1850:173:1",
										"text": " @dev This is a virtual function that should be overridden so it returns the address to which the fallback\n function and {_fallback} should delegate."
									},
									"id": 319,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "_implementation",
									"nameLocation": "2037:15:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 315,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2052:2:1"
									},
									"returnParameters": {
										"id": 318,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 317,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 319,
												"src": "2086:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 316,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2086:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2085:9:1"
									},
									"scope": 338,
									"src": "2028:67:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 328,
										"nodeType": "Block",
										"src": "2361:45:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 324,
																"name": "_implementation",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 319,
																"src": "2381:15:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 325,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2381:17:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 323,
														"name": "_delegate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 313,
														"src": "2371:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 326,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2371:28:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 327,
												"nodeType": "ExpressionStatement",
												"src": "2371:28:1"
											}
										]
									},
									"documentation": {
										"id": 320,
										"nodeType": "StructuredDocumentation",
										"src": "2101:217:1",
										"text": " @dev Delegates the current call to the address returned by `_implementation()`.\n This function does not return to its internal call site, it will return directly to the external caller."
									},
									"id": 329,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_fallback",
									"nameLocation": "2332:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 321,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2341:2:1"
									},
									"returnParameters": {
										"id": 322,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2361:0:1"
									},
									"scope": 338,
									"src": "2323:83:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 336,
										"nodeType": "Block",
										"src": "2639:28:1",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 333,
														"name": "_fallback",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 329,
														"src": "2649:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 334,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2649:11:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 335,
												"nodeType": "ExpressionStatement",
												"src": "2649:11:1"
											}
										]
									},
									"documentation": {
										"id": 330,
										"nodeType": "StructuredDocumentation",
										"src": "2412:186:1",
										"text": " @dev Fallback function that delegates calls to the address returned by `_implementation()`. Will run if no other\n function in the contract matches the call data."
									},
									"id": 337,
									"implemented": true,
									"kind": "fallback",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 331,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2611:2:1"
									},
									"returnParameters": {
										"id": 332,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2639:0:1"
									},
									"scope": 338,
									"src": "2603:64:1",
									"stateMutability": "payable",
									"virtual": true,
									"visibility": "external"
								}
							],
							"scope": 339,
							"src": "724:1945:1",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "99:2571:1"
				},
				"id": 1
			},
			".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/proxy/beacon/BeaconProxy.sol": {
				"ast": {
					"absolutePath": ".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/proxy/beacon/BeaconProxy.sol",
					"exportedSymbols": {
						"BeaconProxy": [
							396
						],
						"ERC1967Utils": [
							302
						],
						"IBeacon": [
							406
						],
						"Proxy": [
							338
						]
					},
					"id": 397,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 340,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "112:24:2"
						},
						{
							"absolutePath": ".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/proxy/beacon/IBeacon.sol",
							"file": "./IBeacon.sol",
							"id": 342,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 397,
							"sourceUnit": 407,
							"src": "138:38:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 341,
										"name": "IBeacon",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 406,
										"src": "146:7:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": ".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/proxy/Proxy.sol",
							"file": "../Proxy.sol",
							"id": 344,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 397,
							"sourceUnit": 339,
							"src": "177:35:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 343,
										"name": "Proxy",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 338,
										"src": "185:5:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": ".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/proxy/ERC1967/ERC1967Utils.sol",
							"file": "../ERC1967/ERC1967Utils.sol",
							"id": 346,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 397,
							"sourceUnit": 303,
							"src": "213:57:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 345,
										"name": "ERC1967Utils",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 302,
										"src": "221:12:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 348,
										"name": "Proxy",
										"nameLocations": [
											"1140:5:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 338,
										"src": "1140:5:2"
									},
									"id": 349,
									"nodeType": "InheritanceSpecifier",
									"src": "1140:5:2"
								}
							],
							"canonicalName": "BeaconProxy",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 347,
								"nodeType": "StructuredDocumentation",
								"src": "272:843:2",
								"text": " @dev This contract implements a proxy that gets the implementation address for each call from an {UpgradeableBeacon}.\n The beacon address can only be set once during construction, and cannot be changed afterwards. It is stored in an\n immutable variable to avoid unnecessary storage reads, and also in the beacon storage slot specified by\n https://eips.ethereum.org/EIPS/eip-1967[ERC-1967] so that it can be accessed externally.\n CAUTION: Since the beacon address can never be changed, you must ensure that you either control the beacon, or trust\n the beacon to not upgrade the implementation maliciously.\n IMPORTANT: Do not use the implementation logic to modify the beacon storage slot. Doing so would leave the proxy in\n an inconsistent state where the beacon storage slot does not match the beacon address."
							},
							"fullyImplemented": true,
							"id": 396,
							"linearizedBaseContracts": [
								396,
								338
							],
							"name": "BeaconProxy",
							"nameLocation": "1125:11:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 351,
									"mutability": "immutable",
									"name": "_beacon",
									"nameLocation": "1276:7:2",
									"nodeType": "VariableDeclaration",
									"scope": 396,
									"src": "1250:33:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 350,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "1250:7:2",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 370,
										"nodeType": "Block",
										"src": "1828:92:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 362,
															"name": "beacon",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 354,
															"src": "1874:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 363,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 356,
															"src": "1882:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 359,
															"name": "ERC1967Utils",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 302,
															"src": "1838:12:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_ERC1967Utils_$302_$",
																"typeString": "type(library ERC1967Utils)"
															}
														},
														"id": 361,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1851:22:2",
														"memberName": "upgradeBeaconToAndCall",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 287,
														"src": "1838:35:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,bytes memory)"
														}
													},
													"id": 364,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1838:49:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 365,
												"nodeType": "ExpressionStatement",
												"src": "1838:49:2"
											},
											{
												"expression": {
													"id": 368,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 366,
														"name": "_beacon",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 351,
														"src": "1897:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 367,
														"name": "beacon",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 354,
														"src": "1907:6:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1897:16:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 369,
												"nodeType": "ExpressionStatement",
												"src": "1897:16:2"
											}
										]
									},
									"documentation": {
										"id": 352,
										"nodeType": "StructuredDocumentation",
										"src": "1290:478:2",
										"text": " @dev Initializes the proxy with `beacon`.\n If `data` is nonempty, it's used as data in a delegate call to the implementation returned by the beacon. This\n will typically be an encoded function call, and allows initializing the storage of the proxy like a Solidity\n constructor.\n Requirements:\n - `beacon` must be a contract with the interface {IBeacon}.\n - If `data` is empty, `msg.value` must be zero."
									},
									"id": 371,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 357,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 354,
												"mutability": "mutable",
												"name": "beacon",
												"nameLocation": "1793:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 371,
												"src": "1785:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 353,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1785:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 356,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "1814:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 371,
												"src": "1801:17:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 355,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1801:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1784:35:2"
									},
									"returnParameters": {
										"id": 358,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1828:0:2"
									},
									"scope": 396,
									"src": "1773:147:2",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										319
									],
									"body": {
										"id": 385,
										"nodeType": "Block",
										"src": "2099:62:2",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"arguments": [
																{
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 379,
																		"name": "_getBeacon",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 395,
																		"src": "2124:10:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																			"typeString": "function () view returns (address)"
																		}
																	},
																	"id": 380,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2124:12:2",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 378,
																"name": "IBeacon",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 406,
																"src": "2116:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IBeacon_$406_$",
																	"typeString": "type(contract IBeacon)"
																}
															},
															"id": 381,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2116:21:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IBeacon_$406",
																"typeString": "contract IBeacon"
															}
														},
														"id": 382,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2138:14:2",
														"memberName": "implementation",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 405,
														"src": "2116:36:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
															"typeString": "function () view external returns (address)"
														}
													},
													"id": 383,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2116:38:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 377,
												"id": 384,
												"nodeType": "Return",
												"src": "2109:45:2"
											}
										]
									},
									"documentation": {
										"id": 372,
										"nodeType": "StructuredDocumentation",
										"src": "1926:92:2",
										"text": " @dev Returns the current implementation address of the associated beacon."
									},
									"id": 386,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_implementation",
									"nameLocation": "2032:15:2",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 374,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2072:8:2"
									},
									"parameters": {
										"id": 373,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2047:2:2"
									},
									"returnParameters": {
										"id": 377,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 376,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 386,
												"src": "2090:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 375,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2090:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2089:9:2"
									},
									"scope": 396,
									"src": "2023:138:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 394,
										"nodeType": "Block",
										"src": "2277:31:2",
										"statements": [
											{
												"expression": {
													"id": 392,
													"name": "_beacon",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 351,
													"src": "2294:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 391,
												"id": 393,
												"nodeType": "Return",
												"src": "2287:14:2"
											}
										]
									},
									"documentation": {
										"id": 387,
										"nodeType": "StructuredDocumentation",
										"src": "2167:43:2",
										"text": " @dev Returns the beacon."
									},
									"id": 395,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_getBeacon",
									"nameLocation": "2224:10:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 388,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2234:2:2"
									},
									"returnParameters": {
										"id": 391,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 390,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 395,
												"src": "2268:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 389,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2268:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2267:9:2"
									},
									"scope": 396,
									"src": "2215:93:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 397,
							"src": "1116:1194:2",
							"usedErrors": [
								34,
								44,
								47,
								419,
								422
							],
							"usedEvents": [
								25
							]
						}
					],
					"src": "112:2199:2"
				},
				"id": 2
			},
			".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/proxy/beacon/IBeacon.sol": {
				"ast": {
					"absolutePath": ".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/proxy/beacon/IBeacon.sol",
					"exportedSymbols": {
						"IBeacon": [
							406
						]
					},
					"id": 407,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 398,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "108:24:3"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IBeacon",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 399,
								"nodeType": "StructuredDocumentation",
								"src": "134:79:3",
								"text": " @dev This is the interface that {BeaconProxy} expects of its beacon."
							},
							"fullyImplemented": false,
							"id": 406,
							"linearizedBaseContracts": [
								406
							],
							"name": "IBeacon",
							"nameLocation": "224:7:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 400,
										"nodeType": "StructuredDocumentation",
										"src": "238:168:3",
										"text": " @dev Must return an address that can be used as a delegate call target.\n {UpgradeableBeacon} will check that this address is a contract."
									},
									"functionSelector": "5c60da1b",
									"id": 405,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "implementation",
									"nameLocation": "420:14:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 401,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "434:2:3"
									},
									"returnParameters": {
										"id": 404,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 403,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 405,
												"src": "460:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 402,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "460:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "459:9:3"
									},
									"scope": 406,
									"src": "411:58:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 407,
							"src": "214:257:3",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "108:364:3"
				},
				"id": 3
			},
			".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/utils/Address.sol": {
				"ast": {
					"absolutePath": ".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/utils/Address.sol",
					"exportedSymbols": {
						"Address": [
							659
						]
					},
					"id": 660,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 408,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:4"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Address",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 409,
								"nodeType": "StructuredDocumentation",
								"src": "127:67:4",
								"text": " @dev Collection of functions related to the address type"
							},
							"fullyImplemented": true,
							"id": 659,
							"linearizedBaseContracts": [
								659
							],
							"name": "Address",
							"nameLocation": "203:7:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 410,
										"nodeType": "StructuredDocumentation",
										"src": "217:94:4",
										"text": " @dev The ETH balance of the account is not enough to perform the operation."
									},
									"errorSelector": "cd786059",
									"id": 414,
									"name": "AddressInsufficientBalance",
									"nameLocation": "322:26:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 413,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 412,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "357:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 414,
												"src": "349:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 411,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "349:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "348:17:4"
									},
									"src": "316:50:4"
								},
								{
									"documentation": {
										"id": 415,
										"nodeType": "StructuredDocumentation",
										"src": "372:75:4",
										"text": " @dev There's no code at `target` (it is not a contract)."
									},
									"errorSelector": "9996b315",
									"id": 419,
									"name": "AddressEmptyCode",
									"nameLocation": "458:16:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 418,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 417,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "483:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 419,
												"src": "475:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 416,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "475:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "474:16:4"
									},
									"src": "452:39:4"
								},
								{
									"documentation": {
										"id": 420,
										"nodeType": "StructuredDocumentation",
										"src": "497:89:4",
										"text": " @dev A call to an address target failed. The target may have reverted."
									},
									"errorSelector": "1425ea42",
									"id": 422,
									"name": "FailedInnerCall",
									"nameLocation": "597:15:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 421,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "612:2:4"
									},
									"src": "591:24:4"
								},
								{
									"body": {
										"id": 462,
										"nodeType": "Block",
										"src": "1602:260:4",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 436,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 432,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "1624:4:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Address_$659",
																		"typeString": "library Address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_Address_$659",
																		"typeString": "library Address"
																	}
																],
																"id": 431,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1616:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 430,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1616:7:4",
																	"typeDescriptions": {}
																}
															},
															"id": 433,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1616:13:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 434,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1630:7:4",
														"memberName": "balance",
														"nodeType": "MemberAccess",
														"src": "1616:21:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 435,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 427,
														"src": "1640:6:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1616:30:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 445,
												"nodeType": "IfStatement",
												"src": "1612:109:4",
												"trueBody": {
													"id": 444,
													"nodeType": "Block",
													"src": "1648:73:4",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 440,
																				"name": "this",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967268,
																				"src": "1704:4:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_Address_$659",
																					"typeString": "library Address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_Address_$659",
																					"typeString": "library Address"
																				}
																			],
																			"id": 439,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "1696:7:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 438,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "1696:7:4",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 441,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1696:13:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 437,
																	"name": "AddressInsufficientBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 414,
																	"src": "1669:26:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 442,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1669:41:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 443,
															"nodeType": "RevertStatement",
															"src": "1662:48:4"
														}
													]
												}
											},
											{
												"assignments": [
													447,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 447,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "1737:7:4",
														"nodeType": "VariableDeclaration",
														"scope": 462,
														"src": "1732:12:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 446,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "1732:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 454,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "",
															"id": 452,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1780:2:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																}
															],
															"expression": {
																"id": 448,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 425,
																"src": "1750:9:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"id": 449,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1760:4:4",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "1750:14:4",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 451,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 450,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 427,
																"src": "1772:6:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "1750:29:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 453,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1750:33:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1731:52:4"
											},
											{
												"condition": {
													"id": 456,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "1797:8:4",
													"subExpression": {
														"id": 455,
														"name": "success",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 447,
														"src": "1798:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 461,
												"nodeType": "IfStatement",
												"src": "1793:63:4",
												"trueBody": {
													"id": 460,
													"nodeType": "Block",
													"src": "1807:49:4",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 457,
																	"name": "FailedInnerCall",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 422,
																	"src": "1828:15:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 458,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1828:17:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 459,
															"nodeType": "RevertStatement",
															"src": "1821:24:4"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 423,
										"nodeType": "StructuredDocumentation",
										"src": "621:905:4",
										"text": " @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.8.20/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."
									},
									"id": 463,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sendValue",
									"nameLocation": "1540:9:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 428,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 425,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "1566:9:4",
												"nodeType": "VariableDeclaration",
												"scope": 463,
												"src": "1550:25:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 424,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1550:15:4",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 427,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1585:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 463,
												"src": "1577:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 426,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1577:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1549:43:4"
									},
									"returnParameters": {
										"id": 429,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1602:0:4"
									},
									"scope": 659,
									"src": "1531:331:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 479,
										"nodeType": "Block",
										"src": "2794:62:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 474,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 466,
															"src": "2833:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 475,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 468,
															"src": "2841:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "30",
															"id": 476,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2847:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															}
														],
														"id": 473,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 526,
														"src": "2811:21:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256) returns (bytes memory)"
														}
													},
													"id": 477,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2811:38:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 472,
												"id": 478,
												"nodeType": "Return",
												"src": "2804:45:4"
											}
										]
									},
									"documentation": {
										"id": 464,
										"nodeType": "StructuredDocumentation",
										"src": "1868:832:4",
										"text": " @dev Performs a Solidity function call using a low level `call`. A\n plain `call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason or custom error, it is bubbled\n up by this function (like regular Solidity function calls). However, if\n the call reverted with no returned reason, this function reverts with a\n {FailedInnerCall} error.\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert."
									},
									"id": 480,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "2714:12:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 469,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 466,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "2735:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 480,
												"src": "2727:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 465,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2727:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 468,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "2756:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 480,
												"src": "2743:17:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 467,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2743:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2726:35:4"
									},
									"returnParameters": {
										"id": 472,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 471,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 480,
												"src": "2780:12:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 470,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2780:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2779:14:4"
									},
									"scope": 659,
									"src": "2705:151:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 525,
										"nodeType": "Block",
										"src": "3293:279:4",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 498,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 494,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "3315:4:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Address_$659",
																		"typeString": "library Address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_Address_$659",
																		"typeString": "library Address"
																	}
																],
																"id": 493,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3307:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 492,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3307:7:4",
																	"typeDescriptions": {}
																}
															},
															"id": 495,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3307:13:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 496,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3321:7:4",
														"memberName": "balance",
														"nodeType": "MemberAccess",
														"src": "3307:21:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 497,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 487,
														"src": "3331:5:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3307:29:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 507,
												"nodeType": "IfStatement",
												"src": "3303:108:4",
												"trueBody": {
													"id": 506,
													"nodeType": "Block",
													"src": "3338:73:4",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 502,
																				"name": "this",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967268,
																				"src": "3394:4:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_Address_$659",
																					"typeString": "library Address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_Address_$659",
																					"typeString": "library Address"
																				}
																			],
																			"id": 501,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "3386:7:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 500,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "3386:7:4",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 503,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3386:13:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 499,
																	"name": "AddressInsufficientBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 414,
																	"src": "3359:26:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 504,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3359:41:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 505,
															"nodeType": "RevertStatement",
															"src": "3352:48:4"
														}
													]
												}
											},
											{
												"assignments": [
													509,
													511
												],
												"declarations": [
													{
														"constant": false,
														"id": 509,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "3426:7:4",
														"nodeType": "VariableDeclaration",
														"scope": 525,
														"src": "3421:12:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 508,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "3421:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 511,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "3448:10:4",
														"nodeType": "VariableDeclaration",
														"scope": 525,
														"src": "3435:23:4",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 510,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "3435:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 518,
												"initialValue": {
													"arguments": [
														{
															"id": 516,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 485,
															"src": "3488:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"expression": {
																"id": 512,
																"name": "target",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 483,
																"src": "3462:6:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 513,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3469:4:4",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "3462:11:4",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 515,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 514,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 487,
																"src": "3481:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "3462:25:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 517,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3462:31:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3420:73:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 520,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 483,
															"src": "3537:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 521,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 509,
															"src": "3545:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 522,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 511,
															"src": "3554:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 519,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 618,
														"src": "3510:26:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory) view returns (bytes memory)"
														}
													},
													"id": 523,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3510:55:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 491,
												"id": 524,
												"nodeType": "Return",
												"src": "3503:62:4"
											}
										]
									},
									"documentation": {
										"id": 481,
										"nodeType": "StructuredDocumentation",
										"src": "2862:313:4",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`."
									},
									"id": 526,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "3189:21:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 488,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 483,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3219:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 526,
												"src": "3211:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 482,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3211:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 485,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3240:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 526,
												"src": "3227:17:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 484,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3227:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 487,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3254:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 526,
												"src": "3246:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 486,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3246:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3210:50:4"
									},
									"returnParameters": {
										"id": 491,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 490,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 526,
												"src": "3279:12:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 489,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3279:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3278:14:4"
									},
									"scope": 659,
									"src": "3180:392:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 551,
										"nodeType": "Block",
										"src": "3811:154:4",
										"statements": [
											{
												"assignments": [
													537,
													539
												],
												"declarations": [
													{
														"constant": false,
														"id": 537,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "3827:7:4",
														"nodeType": "VariableDeclaration",
														"scope": 551,
														"src": "3822:12:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 536,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "3822:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 539,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "3849:10:4",
														"nodeType": "VariableDeclaration",
														"scope": 551,
														"src": "3836:23:4",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 538,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "3836:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 544,
												"initialValue": {
													"arguments": [
														{
															"id": 542,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 531,
															"src": "3881:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 540,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 529,
															"src": "3863:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 541,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3870:10:4",
														"memberName": "staticcall",
														"nodeType": "MemberAccess",
														"src": "3863:17:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) view returns (bool,bytes memory)"
														}
													},
													"id": 543,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3863:23:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3821:65:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 546,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 529,
															"src": "3930:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 547,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 537,
															"src": "3938:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 548,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 539,
															"src": "3947:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 545,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 618,
														"src": "3903:26:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory) view returns (bytes memory)"
														}
													},
													"id": 549,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3903:55:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 535,
												"id": 550,
												"nodeType": "Return",
												"src": "3896:62:4"
											}
										]
									},
									"documentation": {
										"id": 527,
										"nodeType": "StructuredDocumentation",
										"src": "3578:128:4",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call."
									},
									"id": 552,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "3720:18:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 532,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 529,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3747:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 552,
												"src": "3739:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 528,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3739:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 531,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3768:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 552,
												"src": "3755:17:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 530,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3755:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3738:35:4"
									},
									"returnParameters": {
										"id": 535,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 534,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 552,
												"src": "3797:12:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 533,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3797:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3796:14:4"
									},
									"scope": 659,
									"src": "3711:254:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 577,
										"nodeType": "Block",
										"src": "4203:156:4",
										"statements": [
											{
												"assignments": [
													563,
													565
												],
												"declarations": [
													{
														"constant": false,
														"id": 563,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "4219:7:4",
														"nodeType": "VariableDeclaration",
														"scope": 577,
														"src": "4214:12:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 562,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "4214:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 565,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "4241:10:4",
														"nodeType": "VariableDeclaration",
														"scope": 577,
														"src": "4228:23:4",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 564,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "4228:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 570,
												"initialValue": {
													"arguments": [
														{
															"id": 568,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 557,
															"src": "4275:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 566,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 555,
															"src": "4255:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 567,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4262:12:4",
														"memberName": "delegatecall",
														"nodeType": "MemberAccess",
														"src": "4255:19:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) returns (bool,bytes memory)"
														}
													},
													"id": 569,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4255:25:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4213:67:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 572,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 555,
															"src": "4324:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 573,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 563,
															"src": "4332:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 574,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 565,
															"src": "4341:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 571,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 618,
														"src": "4297:26:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory) view returns (bytes memory)"
														}
													},
													"id": 575,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4297:55:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 561,
												"id": 576,
												"nodeType": "Return",
												"src": "4290:62:4"
											}
										]
									},
									"documentation": {
										"id": 553,
										"nodeType": "StructuredDocumentation",
										"src": "3971:130:4",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a delegate call."
									},
									"id": 578,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "4115:20:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 558,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 555,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4144:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 578,
												"src": "4136:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 554,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4136:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 557,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4165:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 578,
												"src": "4152:17:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 556,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4152:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4135:35:4"
									},
									"returnParameters": {
										"id": 561,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 560,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 578,
												"src": "4189:12:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 559,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4189:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4188:14:4"
									},
									"scope": 659,
									"src": "4106:253:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 617,
										"nodeType": "Block",
										"src": "4783:424:4",
										"statements": [
											{
												"condition": {
													"id": 591,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "4797:8:4",
													"subExpression": {
														"id": 590,
														"name": "success",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 583,
														"src": "4798:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 615,
													"nodeType": "Block",
													"src": "4857:344:4",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 606,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 600,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"id": 597,
																			"name": "returndata",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 585,
																			"src": "5045:10:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		},
																		"id": 598,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "5056:6:4",
																		"memberName": "length",
																		"nodeType": "MemberAccess",
																		"src": "5045:17:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 599,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5066:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "5045:22:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&&",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 605,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"expression": {
																				"id": 601,
																				"name": "target",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 581,
																				"src": "5071:6:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"id": 602,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "5078:4:4",
																			"memberName": "code",
																			"nodeType": "MemberAccess",
																			"src": "5071:11:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		},
																		"id": 603,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "5083:6:4",
																		"memberName": "length",
																		"nodeType": "MemberAccess",
																		"src": "5071:18:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 604,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5093:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "5071:23:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "5045:49:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 612,
															"nodeType": "IfStatement",
															"src": "5041:119:4",
															"trueBody": {
																"id": 611,
																"nodeType": "Block",
																"src": "5096:64:4",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 608,
																					"name": "target",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 581,
																					"src": "5138:6:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"id": 607,
																				"name": "AddressEmptyCode",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 419,
																				"src": "5121:16:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																					"typeString": "function (address) pure"
																				}
																			},
																			"id": 609,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "5121:24:4",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 610,
																		"nodeType": "RevertStatement",
																		"src": "5114:31:4"
																	}
																]
															}
														},
														{
															"expression": {
																"id": 613,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 585,
																"src": "5180:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 589,
															"id": 614,
															"nodeType": "Return",
															"src": "5173:17:4"
														}
													]
												},
												"id": 616,
												"nodeType": "IfStatement",
												"src": "4793:408:4",
												"trueBody": {
													"id": 596,
													"nodeType": "Block",
													"src": "4807:44:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 593,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 585,
																		"src": "4829:10:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 592,
																	"name": "_revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 658,
																	"src": "4821:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (bytes memory) pure"
																	}
																},
																"id": 594,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4821:19:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 595,
															"nodeType": "ExpressionStatement",
															"src": "4821:19:4"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 579,
										"nodeType": "StructuredDocumentation",
										"src": "4365:255:4",
										"text": " @dev Tool to verify that a low level call to smart-contract was successful, and reverts if the target\n was not a contract or bubbling up the revert reason (falling back to {FailedInnerCall}) in case of an\n unsuccessful call."
									},
									"id": 618,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResultFromTarget",
									"nameLocation": "4634:26:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 586,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 581,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4678:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 618,
												"src": "4670:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 580,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4670:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 583,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "4699:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 618,
												"src": "4694:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 582,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4694:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 585,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "4729:10:4",
												"nodeType": "VariableDeclaration",
												"scope": 618,
												"src": "4716:23:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 584,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4716:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4660:85:4"
									},
									"returnParameters": {
										"id": 589,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 588,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 618,
												"src": "4769:12:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 587,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4769:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4768:14:4"
									},
									"scope": 659,
									"src": "4625:582:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 639,
										"nodeType": "Block",
										"src": "5509:122:4",
										"statements": [
											{
												"condition": {
													"id": 629,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "5523:8:4",
													"subExpression": {
														"id": 628,
														"name": "success",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 621,
														"src": "5524:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 637,
													"nodeType": "Block",
													"src": "5583:42:4",
													"statements": [
														{
															"expression": {
																"id": 635,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 623,
																"src": "5604:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 627,
															"id": 636,
															"nodeType": "Return",
															"src": "5597:17:4"
														}
													]
												},
												"id": 638,
												"nodeType": "IfStatement",
												"src": "5519:106:4",
												"trueBody": {
													"id": 634,
													"nodeType": "Block",
													"src": "5533:44:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 631,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 623,
																		"src": "5555:10:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 630,
																	"name": "_revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 658,
																	"src": "5547:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (bytes memory) pure"
																	}
																},
																"id": 632,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5547:19:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 633,
															"nodeType": "ExpressionStatement",
															"src": "5547:19:4"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 619,
										"nodeType": "StructuredDocumentation",
										"src": "5213:189:4",
										"text": " @dev Tool to verify that a low level call was successful, and reverts if it wasn't, either by bubbling the\n revert reason or with a default {FailedInnerCall} error."
									},
									"id": 640,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResult",
									"nameLocation": "5416:16:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 624,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 621,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "5438:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 640,
												"src": "5433:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 620,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5433:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 623,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "5460:10:4",
												"nodeType": "VariableDeclaration",
												"scope": 640,
												"src": "5447:23:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 622,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5447:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5432:39:4"
									},
									"returnParameters": {
										"id": 627,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 626,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 640,
												"src": "5495:12:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 625,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5495:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5494:14:4"
									},
									"scope": 659,
									"src": "5407:224:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 657,
										"nodeType": "Block",
										"src": "5798:461:4",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 649,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 646,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 643,
															"src": "5874:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 647,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5885:6:4",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "5874:17:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 648,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5894:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "5874:21:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 655,
													"nodeType": "Block",
													"src": "6204:49:4",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 652,
																	"name": "FailedInnerCall",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 422,
																	"src": "6225:15:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 653,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6225:17:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 654,
															"nodeType": "RevertStatement",
															"src": "6218:24:4"
														}
													]
												},
												"id": 656,
												"nodeType": "IfStatement",
												"src": "5870:383:4",
												"trueBody": {
													"id": 651,
													"nodeType": "Block",
													"src": "5897:301:4",
													"statements": [
														{
															"AST": {
																"nativeSrc": "6055:133:4",
																"nodeType": "YulBlock",
																"src": "6055:133:4",
																"statements": [
																	{
																		"nativeSrc": "6073:40:4",
																		"nodeType": "YulVariableDeclaration",
																		"src": "6073:40:4",
																		"value": {
																			"arguments": [
																				{
																					"name": "returndata",
																					"nativeSrc": "6102:10:4",
																					"nodeType": "YulIdentifier",
																					"src": "6102:10:4"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nativeSrc": "6096:5:4",
																				"nodeType": "YulIdentifier",
																				"src": "6096:5:4"
																			},
																			"nativeSrc": "6096:17:4",
																			"nodeType": "YulFunctionCall",
																			"src": "6096:17:4"
																		},
																		"variables": [
																			{
																				"name": "returndata_size",
																				"nativeSrc": "6077:15:4",
																				"nodeType": "YulTypedName",
																				"src": "6077:15:4",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "6141:2:4",
																							"nodeType": "YulLiteral",
																							"src": "6141:2:4",
																							"type": "",
																							"value": "32"
																						},
																						{
																							"name": "returndata",
																							"nativeSrc": "6145:10:4",
																							"nodeType": "YulIdentifier",
																							"src": "6145:10:4"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "6137:3:4",
																						"nodeType": "YulIdentifier",
																						"src": "6137:3:4"
																					},
																					"nativeSrc": "6137:19:4",
																					"nodeType": "YulFunctionCall",
																					"src": "6137:19:4"
																				},
																				{
																					"name": "returndata_size",
																					"nativeSrc": "6158:15:4",
																					"nodeType": "YulIdentifier",
																					"src": "6158:15:4"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "6130:6:4",
																				"nodeType": "YulIdentifier",
																				"src": "6130:6:4"
																			},
																			"nativeSrc": "6130:44:4",
																			"nodeType": "YulFunctionCall",
																			"src": "6130:44:4"
																		},
																		"nativeSrc": "6130:44:4",
																		"nodeType": "YulExpressionStatement",
																		"src": "6130:44:4"
																	}
																]
															},
															"documentation": "@solidity memory-safe-assembly",
															"evmVersion": "shanghai",
															"externalReferences": [
																{
																	"declaration": 643,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "6102:10:4",
																	"valueSize": 1
																},
																{
																	"declaration": 643,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "6145:10:4",
																	"valueSize": 1
																}
															],
															"id": 650,
															"nodeType": "InlineAssembly",
															"src": "6046:142:4"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 641,
										"nodeType": "StructuredDocumentation",
										"src": "5637:101:4",
										"text": " @dev Reverts with returndata if present. Otherwise reverts with {FailedInnerCall}."
									},
									"id": 658,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_revert",
									"nameLocation": "5752:7:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 644,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 643,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "5773:10:4",
												"nodeType": "VariableDeclaration",
												"scope": 658,
												"src": "5760:23:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 642,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5760:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5759:25:4"
									},
									"returnParameters": {
										"id": 645,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5798:0:4"
									},
									"scope": 659,
									"src": "5743:516:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 660,
							"src": "195:6066:4",
							"usedErrors": [
								414,
								419,
								422
							],
							"usedEvents": []
						}
					],
					"src": "101:6161:4"
				},
				"id": 4
			},
			".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/utils/StorageSlot.sol": {
				"ast": {
					"absolutePath": ".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/utils/StorageSlot.sol",
					"exportedSymbols": {
						"StorageSlot": [
							769
						]
					},
					"id": 770,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 661,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "193:24:5"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "StorageSlot",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 662,
								"nodeType": "StructuredDocumentation",
								"src": "219:1026:5",
								"text": " @dev Library for reading and writing primitive types to specific storage slots.\n Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\n This library helps with reading and writing to such slots without the need for inline assembly.\n The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\n Example usage to set ERC-1967 implementation slot:\n ```solidity\n contract ERC1967 {\n     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\n     function _getImplementation() internal view returns (address) {\n         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\n     }\n     function _setImplementation(address newImplementation) internal {\n         require(newImplementation.code.length > 0);\n         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\n     }\n }\n ```"
							},
							"fullyImplemented": true,
							"id": 769,
							"linearizedBaseContracts": [
								769
							],
							"name": "StorageSlot",
							"nameLocation": "1254:11:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "StorageSlot.AddressSlot",
									"id": 665,
									"members": [
										{
											"constant": false,
											"id": 664,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "1309:5:5",
											"nodeType": "VariableDeclaration",
											"scope": 665,
											"src": "1301:13:5",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 663,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1301:7:5",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "AddressSlot",
									"nameLocation": "1279:11:5",
									"nodeType": "StructDefinition",
									"scope": 769,
									"src": "1272:49:5",
									"visibility": "public"
								},
								{
									"canonicalName": "StorageSlot.BooleanSlot",
									"id": 668,
									"members": [
										{
											"constant": false,
											"id": 667,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "1361:5:5",
											"nodeType": "VariableDeclaration",
											"scope": 668,
											"src": "1356:10:5",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 666,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "1356:4:5",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "BooleanSlot",
									"nameLocation": "1334:11:5",
									"nodeType": "StructDefinition",
									"scope": 769,
									"src": "1327:46:5",
									"visibility": "public"
								},
								{
									"canonicalName": "StorageSlot.Bytes32Slot",
									"id": 671,
									"members": [
										{
											"constant": false,
											"id": 670,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "1416:5:5",
											"nodeType": "VariableDeclaration",
											"scope": 671,
											"src": "1408:13:5",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											},
											"typeName": {
												"id": 669,
												"name": "bytes32",
												"nodeType": "ElementaryTypeName",
												"src": "1408:7:5",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Bytes32Slot",
									"nameLocation": "1386:11:5",
									"nodeType": "StructDefinition",
									"scope": 769,
									"src": "1379:49:5",
									"visibility": "public"
								},
								{
									"canonicalName": "StorageSlot.Uint256Slot",
									"id": 674,
									"members": [
										{
											"constant": false,
											"id": 673,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "1471:5:5",
											"nodeType": "VariableDeclaration",
											"scope": 674,
											"src": "1463:13:5",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 672,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1463:7:5",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Uint256Slot",
									"nameLocation": "1441:11:5",
									"nodeType": "StructDefinition",
									"scope": 769,
									"src": "1434:49:5",
									"visibility": "public"
								},
								{
									"canonicalName": "StorageSlot.StringSlot",
									"id": 677,
									"members": [
										{
											"constant": false,
											"id": 676,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "1524:5:5",
											"nodeType": "VariableDeclaration",
											"scope": 677,
											"src": "1517:12:5",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_string_storage_ptr",
												"typeString": "string"
											},
											"typeName": {
												"id": 675,
												"name": "string",
												"nodeType": "ElementaryTypeName",
												"src": "1517:6:5",
												"typeDescriptions": {
													"typeIdentifier": "t_string_storage_ptr",
													"typeString": "string"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "StringSlot",
									"nameLocation": "1496:10:5",
									"nodeType": "StructDefinition",
									"scope": 769,
									"src": "1489:47:5",
									"visibility": "public"
								},
								{
									"canonicalName": "StorageSlot.BytesSlot",
									"id": 680,
									"members": [
										{
											"constant": false,
											"id": 679,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "1575:5:5",
											"nodeType": "VariableDeclaration",
											"scope": 680,
											"src": "1569:11:5",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes_storage_ptr",
												"typeString": "bytes"
											},
											"typeName": {
												"id": 678,
												"name": "bytes",
												"nodeType": "ElementaryTypeName",
												"src": "1569:5:5",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_storage_ptr",
													"typeString": "bytes"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "BytesSlot",
									"nameLocation": "1549:9:5",
									"nodeType": "StructDefinition",
									"scope": 769,
									"src": "1542:45:5",
									"visibility": "public"
								},
								{
									"body": {
										"id": 690,
										"nodeType": "Block",
										"src": "1769:106:5",
										"statements": [
											{
												"AST": {
													"nativeSrc": "1831:38:5",
													"nodeType": "YulBlock",
													"src": "1831:38:5",
													"statements": [
														{
															"nativeSrc": "1845:14:5",
															"nodeType": "YulAssignment",
															"src": "1845:14:5",
															"value": {
																"name": "slot",
																"nativeSrc": "1855:4:5",
																"nodeType": "YulIdentifier",
																"src": "1855:4:5"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "1845:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "1845:6:5"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "shanghai",
												"externalReferences": [
													{
														"declaration": 687,
														"isOffset": false,
														"isSlot": true,
														"src": "1845:6:5",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 683,
														"isOffset": false,
														"isSlot": false,
														"src": "1855:4:5",
														"valueSize": 1
													}
												],
												"id": 689,
												"nodeType": "InlineAssembly",
												"src": "1822:47:5"
											}
										]
									},
									"documentation": {
										"id": 681,
										"nodeType": "StructuredDocumentation",
										"src": "1593:87:5",
										"text": " @dev Returns an `AddressSlot` with member `value` located at `slot`."
									},
									"id": 691,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getAddressSlot",
									"nameLocation": "1694:14:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 684,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 683,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "1717:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 691,
												"src": "1709:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 682,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1709:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1708:14:5"
									},
									"returnParameters": {
										"id": 688,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 687,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "1766:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 691,
												"src": "1746:21:5",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_AddressSlot_$665_storage_ptr",
													"typeString": "struct StorageSlot.AddressSlot"
												},
												"typeName": {
													"id": 686,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 685,
														"name": "AddressSlot",
														"nameLocations": [
															"1746:11:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 665,
														"src": "1746:11:5"
													},
													"referencedDeclaration": 665,
													"src": "1746:11:5",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_AddressSlot_$665_storage_ptr",
														"typeString": "struct StorageSlot.AddressSlot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1745:23:5"
									},
									"scope": 769,
									"src": "1685:190:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 701,
										"nodeType": "Block",
										"src": "2057:106:5",
										"statements": [
											{
												"AST": {
													"nativeSrc": "2119:38:5",
													"nodeType": "YulBlock",
													"src": "2119:38:5",
													"statements": [
														{
															"nativeSrc": "2133:14:5",
															"nodeType": "YulAssignment",
															"src": "2133:14:5",
															"value": {
																"name": "slot",
																"nativeSrc": "2143:4:5",
																"nodeType": "YulIdentifier",
																"src": "2143:4:5"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "2133:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "2133:6:5"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "shanghai",
												"externalReferences": [
													{
														"declaration": 698,
														"isOffset": false,
														"isSlot": true,
														"src": "2133:6:5",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 694,
														"isOffset": false,
														"isSlot": false,
														"src": "2143:4:5",
														"valueSize": 1
													}
												],
												"id": 700,
												"nodeType": "InlineAssembly",
												"src": "2110:47:5"
											}
										]
									},
									"documentation": {
										"id": 692,
										"nodeType": "StructuredDocumentation",
										"src": "1881:87:5",
										"text": " @dev Returns an `BooleanSlot` with member `value` located at `slot`."
									},
									"id": 702,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getBooleanSlot",
									"nameLocation": "1982:14:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 695,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 694,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "2005:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 702,
												"src": "1997:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 693,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1997:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1996:14:5"
									},
									"returnParameters": {
										"id": 699,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 698,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "2054:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 702,
												"src": "2034:21:5",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_BooleanSlot_$668_storage_ptr",
													"typeString": "struct StorageSlot.BooleanSlot"
												},
												"typeName": {
													"id": 697,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 696,
														"name": "BooleanSlot",
														"nameLocations": [
															"2034:11:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 668,
														"src": "2034:11:5"
													},
													"referencedDeclaration": 668,
													"src": "2034:11:5",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_BooleanSlot_$668_storage_ptr",
														"typeString": "struct StorageSlot.BooleanSlot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2033:23:5"
									},
									"scope": 769,
									"src": "1973:190:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 712,
										"nodeType": "Block",
										"src": "2345:106:5",
										"statements": [
											{
												"AST": {
													"nativeSrc": "2407:38:5",
													"nodeType": "YulBlock",
													"src": "2407:38:5",
													"statements": [
														{
															"nativeSrc": "2421:14:5",
															"nodeType": "YulAssignment",
															"src": "2421:14:5",
															"value": {
																"name": "slot",
																"nativeSrc": "2431:4:5",
																"nodeType": "YulIdentifier",
																"src": "2431:4:5"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "2421:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "2421:6:5"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "shanghai",
												"externalReferences": [
													{
														"declaration": 709,
														"isOffset": false,
														"isSlot": true,
														"src": "2421:6:5",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 705,
														"isOffset": false,
														"isSlot": false,
														"src": "2431:4:5",
														"valueSize": 1
													}
												],
												"id": 711,
												"nodeType": "InlineAssembly",
												"src": "2398:47:5"
											}
										]
									},
									"documentation": {
										"id": 703,
										"nodeType": "StructuredDocumentation",
										"src": "2169:87:5",
										"text": " @dev Returns an `Bytes32Slot` with member `value` located at `slot`."
									},
									"id": 713,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getBytes32Slot",
									"nameLocation": "2270:14:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 706,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 705,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "2293:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 713,
												"src": "2285:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 704,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2285:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2284:14:5"
									},
									"returnParameters": {
										"id": 710,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 709,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "2342:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 713,
												"src": "2322:21:5",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Bytes32Slot_$671_storage_ptr",
													"typeString": "struct StorageSlot.Bytes32Slot"
												},
												"typeName": {
													"id": 708,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 707,
														"name": "Bytes32Slot",
														"nameLocations": [
															"2322:11:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 671,
														"src": "2322:11:5"
													},
													"referencedDeclaration": 671,
													"src": "2322:11:5",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Bytes32Slot_$671_storage_ptr",
														"typeString": "struct StorageSlot.Bytes32Slot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2321:23:5"
									},
									"scope": 769,
									"src": "2261:190:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 723,
										"nodeType": "Block",
										"src": "2633:106:5",
										"statements": [
											{
												"AST": {
													"nativeSrc": "2695:38:5",
													"nodeType": "YulBlock",
													"src": "2695:38:5",
													"statements": [
														{
															"nativeSrc": "2709:14:5",
															"nodeType": "YulAssignment",
															"src": "2709:14:5",
															"value": {
																"name": "slot",
																"nativeSrc": "2719:4:5",
																"nodeType": "YulIdentifier",
																"src": "2719:4:5"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "2709:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "2709:6:5"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "shanghai",
												"externalReferences": [
													{
														"declaration": 720,
														"isOffset": false,
														"isSlot": true,
														"src": "2709:6:5",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 716,
														"isOffset": false,
														"isSlot": false,
														"src": "2719:4:5",
														"valueSize": 1
													}
												],
												"id": 722,
												"nodeType": "InlineAssembly",
												"src": "2686:47:5"
											}
										]
									},
									"documentation": {
										"id": 714,
										"nodeType": "StructuredDocumentation",
										"src": "2457:87:5",
										"text": " @dev Returns an `Uint256Slot` with member `value` located at `slot`."
									},
									"id": 724,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getUint256Slot",
									"nameLocation": "2558:14:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 717,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 716,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "2581:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 724,
												"src": "2573:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 715,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2573:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2572:14:5"
									},
									"returnParameters": {
										"id": 721,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 720,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "2630:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 724,
												"src": "2610:21:5",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Uint256Slot_$674_storage_ptr",
													"typeString": "struct StorageSlot.Uint256Slot"
												},
												"typeName": {
													"id": 719,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 718,
														"name": "Uint256Slot",
														"nameLocations": [
															"2610:11:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 674,
														"src": "2610:11:5"
													},
													"referencedDeclaration": 674,
													"src": "2610:11:5",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Uint256Slot_$674_storage_ptr",
														"typeString": "struct StorageSlot.Uint256Slot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2609:23:5"
									},
									"scope": 769,
									"src": "2549:190:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 734,
										"nodeType": "Block",
										"src": "2918:106:5",
										"statements": [
											{
												"AST": {
													"nativeSrc": "2980:38:5",
													"nodeType": "YulBlock",
													"src": "2980:38:5",
													"statements": [
														{
															"nativeSrc": "2994:14:5",
															"nodeType": "YulAssignment",
															"src": "2994:14:5",
															"value": {
																"name": "slot",
																"nativeSrc": "3004:4:5",
																"nodeType": "YulIdentifier",
																"src": "3004:4:5"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "2994:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "2994:6:5"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "shanghai",
												"externalReferences": [
													{
														"declaration": 731,
														"isOffset": false,
														"isSlot": true,
														"src": "2994:6:5",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 727,
														"isOffset": false,
														"isSlot": false,
														"src": "3004:4:5",
														"valueSize": 1
													}
												],
												"id": 733,
												"nodeType": "InlineAssembly",
												"src": "2971:47:5"
											}
										]
									},
									"documentation": {
										"id": 725,
										"nodeType": "StructuredDocumentation",
										"src": "2745:86:5",
										"text": " @dev Returns an `StringSlot` with member `value` located at `slot`."
									},
									"id": 735,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getStringSlot",
									"nameLocation": "2845:13:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 728,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 727,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "2867:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 735,
												"src": "2859:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 726,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2859:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2858:14:5"
									},
									"returnParameters": {
										"id": 732,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 731,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "2915:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 735,
												"src": "2896:20:5",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_StringSlot_$677_storage_ptr",
													"typeString": "struct StorageSlot.StringSlot"
												},
												"typeName": {
													"id": 730,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 729,
														"name": "StringSlot",
														"nameLocations": [
															"2896:10:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 677,
														"src": "2896:10:5"
													},
													"referencedDeclaration": 677,
													"src": "2896:10:5",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_StringSlot_$677_storage_ptr",
														"typeString": "struct StorageSlot.StringSlot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2895:22:5"
									},
									"scope": 769,
									"src": "2836:188:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 745,
										"nodeType": "Block",
										"src": "3226:112:5",
										"statements": [
											{
												"AST": {
													"nativeSrc": "3288:44:5",
													"nodeType": "YulBlock",
													"src": "3288:44:5",
													"statements": [
														{
															"nativeSrc": "3302:20:5",
															"nodeType": "YulAssignment",
															"src": "3302:20:5",
															"value": {
																"name": "store.slot",
																"nativeSrc": "3312:10:5",
																"nodeType": "YulIdentifier",
																"src": "3312:10:5"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "3302:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "3302:6:5"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "shanghai",
												"externalReferences": [
													{
														"declaration": 742,
														"isOffset": false,
														"isSlot": true,
														"src": "3302:6:5",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 738,
														"isOffset": false,
														"isSlot": true,
														"src": "3312:10:5",
														"suffix": "slot",
														"valueSize": 1
													}
												],
												"id": 744,
												"nodeType": "InlineAssembly",
												"src": "3279:53:5"
											}
										]
									},
									"documentation": {
										"id": 736,
										"nodeType": "StructuredDocumentation",
										"src": "3030:101:5",
										"text": " @dev Returns an `StringSlot` representation of the string storage pointer `store`."
									},
									"id": 746,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getStringSlot",
									"nameLocation": "3145:13:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 739,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 738,
												"mutability": "mutable",
												"name": "store",
												"nameLocation": "3174:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 746,
												"src": "3159:20:5",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_string_storage_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 737,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3159:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3158:22:5"
									},
									"returnParameters": {
										"id": 743,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 742,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "3223:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 746,
												"src": "3204:20:5",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_StringSlot_$677_storage_ptr",
													"typeString": "struct StorageSlot.StringSlot"
												},
												"typeName": {
													"id": 741,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 740,
														"name": "StringSlot",
														"nameLocations": [
															"3204:10:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 677,
														"src": "3204:10:5"
													},
													"referencedDeclaration": 677,
													"src": "3204:10:5",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_StringSlot_$677_storage_ptr",
														"typeString": "struct StorageSlot.StringSlot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3203:22:5"
									},
									"scope": 769,
									"src": "3136:202:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 756,
										"nodeType": "Block",
										"src": "3514:106:5",
										"statements": [
											{
												"AST": {
													"nativeSrc": "3576:38:5",
													"nodeType": "YulBlock",
													"src": "3576:38:5",
													"statements": [
														{
															"nativeSrc": "3590:14:5",
															"nodeType": "YulAssignment",
															"src": "3590:14:5",
															"value": {
																"name": "slot",
																"nativeSrc": "3600:4:5",
																"nodeType": "YulIdentifier",
																"src": "3600:4:5"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "3590:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "3590:6:5"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "shanghai",
												"externalReferences": [
													{
														"declaration": 753,
														"isOffset": false,
														"isSlot": true,
														"src": "3590:6:5",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 749,
														"isOffset": false,
														"isSlot": false,
														"src": "3600:4:5",
														"valueSize": 1
													}
												],
												"id": 755,
												"nodeType": "InlineAssembly",
												"src": "3567:47:5"
											}
										]
									},
									"documentation": {
										"id": 747,
										"nodeType": "StructuredDocumentation",
										"src": "3344:85:5",
										"text": " @dev Returns an `BytesSlot` with member `value` located at `slot`."
									},
									"id": 757,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getBytesSlot",
									"nameLocation": "3443:12:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 750,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 749,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "3464:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 757,
												"src": "3456:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 748,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3456:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3455:14:5"
									},
									"returnParameters": {
										"id": 754,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 753,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "3511:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 757,
												"src": "3493:19:5",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_BytesSlot_$680_storage_ptr",
													"typeString": "struct StorageSlot.BytesSlot"
												},
												"typeName": {
													"id": 752,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 751,
														"name": "BytesSlot",
														"nameLocations": [
															"3493:9:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 680,
														"src": "3493:9:5"
													},
													"referencedDeclaration": 680,
													"src": "3493:9:5",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_BytesSlot_$680_storage_ptr",
														"typeString": "struct StorageSlot.BytesSlot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3492:21:5"
									},
									"scope": 769,
									"src": "3434:186:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 767,
										"nodeType": "Block",
										"src": "3817:112:5",
										"statements": [
											{
												"AST": {
													"nativeSrc": "3879:44:5",
													"nodeType": "YulBlock",
													"src": "3879:44:5",
													"statements": [
														{
															"nativeSrc": "3893:20:5",
															"nodeType": "YulAssignment",
															"src": "3893:20:5",
															"value": {
																"name": "store.slot",
																"nativeSrc": "3903:10:5",
																"nodeType": "YulIdentifier",
																"src": "3903:10:5"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "3893:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "3893:6:5"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "shanghai",
												"externalReferences": [
													{
														"declaration": 764,
														"isOffset": false,
														"isSlot": true,
														"src": "3893:6:5",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 760,
														"isOffset": false,
														"isSlot": true,
														"src": "3903:10:5",
														"suffix": "slot",
														"valueSize": 1
													}
												],
												"id": 766,
												"nodeType": "InlineAssembly",
												"src": "3870:53:5"
											}
										]
									},
									"documentation": {
										"id": 758,
										"nodeType": "StructuredDocumentation",
										"src": "3626:99:5",
										"text": " @dev Returns an `BytesSlot` representation of the bytes storage pointer `store`."
									},
									"id": 768,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getBytesSlot",
									"nameLocation": "3739:12:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 761,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 760,
												"mutability": "mutable",
												"name": "store",
												"nameLocation": "3766:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 768,
												"src": "3752:19:5",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_storage_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 759,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3752:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3751:21:5"
									},
									"returnParameters": {
										"id": 765,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 764,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "3814:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 768,
												"src": "3796:19:5",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_BytesSlot_$680_storage_ptr",
													"typeString": "struct StorageSlot.BytesSlot"
												},
												"typeName": {
													"id": 763,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 762,
														"name": "BytesSlot",
														"nameLocations": [
															"3796:9:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 680,
														"src": "3796:9:5"
													},
													"referencedDeclaration": 680,
													"src": "3796:9:5",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_BytesSlot_$680_storage_ptr",
														"typeString": "struct StorageSlot.BytesSlot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3795:21:5"
									},
									"scope": 769,
									"src": "3730:199:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 770,
							"src": "1246:2685:5",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "193:3739:5"
				},
				"id": 5
			}
		}
	}
}