{
	"compiler": {
		"version": "0.8.24+commit.e11b9ed9"
	},
	"language": "Solidity",
	"output": {
		"abi": [
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "initialLogicContract",
						"type": "address"
					}
				],
				"stateMutability": "nonpayable",
				"type": "constructor"
			},
			{
				"stateMutability": "payable",
				"type": "fallback"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "newLogicContract",
						"type": "address"
					}
				],
				"name": "upgradeLogicContract",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			}
		],
		"devdoc": {
			"details": "This contract acts as a proxy that forwards all calls to a target contract. It allows for upgrading the logic contract while preserving the proxy contract's address.",
			"kind": "dev",
			"methods": {
				"constructor": {
					"details": "Constructor function",
					"params": {
						"initialLogicContract": "Address of the initial logic contract"
					}
				},
				"upgradeLogicContract(address)": {
					"details": "Function to upgrade the logic contract to a new contract",
					"params": {
						"newLogicContract": "Address of the new logic contract"
					}
				}
			},
			"title": "UniversalUpgradableProxy",
			"version": 1
		},
		"userdoc": {
			"kind": "user",
			"methods": {},
			"version": 1
		}
	},
	"settings": {
		"compilationTarget": {
			"contracts/Eip1822/ProxyC.sol": "UniversalUpgradableProxy"
		},
		"evmVersion": "shanghai",
		"libraries": {},
		"metadata": {
			"bytecodeHash": "ipfs"
		},
		"optimizer": {
			"enabled": true,
			"runs": 900
		},
		"remappings": []
	},
	"sources": {
		"contracts/Eip1822/ProxyC.sol": {
			"keccak256": "0xf0574ba1781aeac15c9ea1d305a087b43ed412f612bb27a481c6a32c0359e4bb",
			"license": "MIT",
			"urls": [
				"bzz-raw://973f92fe843b360d4c7313b44693478420d9eb74f1a681d3e2168492018c1eb7",
				"dweb:/ipfs/QmWCEEAgJmCTd8aJPMkAiYCnBjTCyS48T9tLC1jfLo9Vyu"
			]
		}
	},
	"version": 1
}