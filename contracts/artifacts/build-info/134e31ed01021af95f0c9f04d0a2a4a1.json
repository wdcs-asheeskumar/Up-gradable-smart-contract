{
	"id": "134e31ed01021af95f0c9f04d0a2a4a1",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.23",
	"solcLongVersion": "0.8.23+commit.f704f362",
	"input": {
		"language": "Solidity",
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		},
		"sources": {
			"contracts/Erc20MNTK.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.20;\n\nimport \"@openzeppelin/contracts/token/ERC20/ERC20.sol\";\nimport \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\";\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\n\ncontract MyNewToken is ERC20, ERC20Burnable, Ownable {\n    address public taxCollector;\n    uint256 public currentTaxDeducted;\n    uint256 public grossTaxCollected;\n\n    mapping(address => mapping(address => uint256))public _taxRecord;\n    constructor(address initialOwner, uint amount, address _taxCollector)\n        ERC20(\"MyNewToken\", \"MNTK\")\n        Ownable(initialOwner)\n    {\n        taxCollector = _taxCollector;\n        _mint(initialOwner,amount * (10 **(decimals())));\n    }\n\n    function mint(address to, uint256 amount) public onlyOwner {\n        require(to == msg.sender, \"Minting allowed only to owner\");\n        _mint(to,amount * (10 **(decimals())));\n    }\n\n    function decimals()public view virtual override returns(uint8){\n        return 9;\n    }\n\n    function transfer(address to, uint value) public virtual override returns(bool) {\n        currentTaxDeducted = (5 * value)/100;\n        uint transferAmount = value - currentTaxDeducted;\n        grossTaxCollected = grossTaxCollected + currentTaxDeducted;\n        address _taxCollector = taxCollector;\n        _transfer(msg.sender, taxCollector, currentTaxDeducted);\n        _transfer(msg.sender, to, transferAmount);\n        _taxRecord[_taxCollector][to] += currentTaxDeducted;\n        return true;\n\n    }\n}"
			},
			"@openzeppelin/contracts/access/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\n\npragma solidity ^0.8.20;\n\nimport {Context} from \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * The initial owner is set to the address provided by the deployer. This can\n * later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    /**\n     * @dev The caller account is not authorized to perform an operation.\n     */\n    error OwnableUnauthorizedAccount(address account);\n\n    /**\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\n     */\n    error OwnableInvalidOwner(address owner);\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\n     */\n    constructor(address initialOwner) {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/extensions/ERC20Burnable.sol)\n\npragma solidity ^0.8.20;\n\nimport {ERC20} from \"../ERC20.sol\";\nimport {Context} from \"../../../utils/Context.sol\";\n\n/**\n * @dev Extension of {ERC20} that allows token holders to destroy both their own\n * tokens and those that they have an allowance for, in a way that can be\n * recognized off-chain (via event analysis).\n */\nabstract contract ERC20Burnable is Context, ERC20 {\n    /**\n     * @dev Destroys a `value` amount of tokens from the caller.\n     *\n     * See {ERC20-_burn}.\n     */\n    function burn(uint256 value) public virtual {\n        _burn(_msgSender(), value);\n    }\n\n    /**\n     * @dev Destroys a `value` amount of tokens from `account`, deducting from\n     * the caller's allowance.\n     *\n     * See {ERC20-_burn} and {ERC20-allowance}.\n     *\n     * Requirements:\n     *\n     * - the caller must have allowance for ``accounts``'s tokens of at least\n     * `value`.\n     */\n    function burnFrom(address account, uint256 value) public virtual {\n        _spendAllowance(account, _msgSender(), value);\n        _burn(account, value);\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/ERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"./IERC20.sol\";\nimport {IERC20Metadata} from \"./extensions/IERC20Metadata.sol\";\nimport {Context} from \"../../utils/Context.sol\";\nimport {IERC20Errors} from \"../../interfaces/draft-IERC6093.sol\";\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * The default value of {decimals} is 18. To change this, you should override\n * this function so it returns a different value.\n *\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\n * instead returning `false` on failure. This behavior is nonetheless\n * conventional and does not conflict with the expectations of ERC20\n * applications.\n *\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n * This allows applications to reconstruct the allowance for all accounts just\n * by listening to said events. Other implementations of the EIP may not emit\n * these events, as it isn't required by the specification.\n */\nabstract contract ERC20 is Context, IERC20, IERC20Metadata, IERC20Errors {\n    mapping(address account => uint256) private _balances;\n\n    mapping(address account => mapping(address spender => uint256)) private _allowances;\n\n    uint256 private _totalSupply;\n\n    string private _name;\n    string private _symbol;\n\n    /**\n     * @dev Sets the values for {name} and {symbol}.\n     *\n     * All two of these values are immutable: they can only be set once during\n     * construction.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view virtual returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the default value returned by this function, unless\n     * it's overridden.\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view virtual returns (uint8) {\n        return 18;\n    }\n\n    /**\n     * @dev See {IERC20-totalSupply}.\n     */\n    function totalSupply() public view virtual returns (uint256) {\n        return _totalSupply;\n    }\n\n    /**\n     * @dev See {IERC20-balanceOf}.\n     */\n    function balanceOf(address account) public view virtual returns (uint256) {\n        return _balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - the caller must have a balance of at least `value`.\n     */\n    function transfer(address to, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _transfer(owner, to, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-allowance}.\n     */\n    function allowance(address owner, address spender) public view virtual returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Emits an {Approval} event indicating the updated allowance. This is not\n     * required by the EIP. See the note at the beginning of {ERC20}.\n     *\n     * NOTE: Does not update the allowance if the current allowance\n     * is the maximum `uint256`.\n     *\n     * Requirements:\n     *\n     * - `from` and `to` cannot be the zero address.\n     * - `from` must have a balance of at least `value`.\n     * - the caller must have allowance for ``from``'s tokens of at least\n     * `value`.\n     */\n    function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {\n        address spender = _msgSender();\n        _spendAllowance(from, spender, value);\n        _transfer(from, to, value);\n        return true;\n    }\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to`.\n     *\n     * This internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _transfer(address from, address to, uint256 value) internal {\n        if (from == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        if (to == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(from, to, value);\n    }\n\n    /**\n     * @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n     * (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n     * this function.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _update(address from, address to, uint256 value) internal virtual {\n        if (from == address(0)) {\n            // Overflow check required: The rest of the code assumes that totalSupply never overflows\n            _totalSupply += value;\n        } else {\n            uint256 fromBalance = _balances[from];\n            if (fromBalance < value) {\n                revert ERC20InsufficientBalance(from, fromBalance, value);\n            }\n            unchecked {\n                // Overflow not possible: value <= fromBalance <= totalSupply.\n                _balances[from] = fromBalance - value;\n            }\n        }\n\n        if (to == address(0)) {\n            unchecked {\n                // Overflow not possible: value <= totalSupply or value <= fromBalance <= totalSupply.\n                _totalSupply -= value;\n            }\n        } else {\n            unchecked {\n                // Overflow not possible: balance + value is at most totalSupply, which we know fits into a uint256.\n                _balances[to] += value;\n            }\n        }\n\n        emit Transfer(from, to, value);\n    }\n\n    /**\n     * @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n     * Relies on the `_update` mechanism\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _mint(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(address(0), account, value);\n    }\n\n    /**\n     * @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n     * Relies on the `_update` mechanism.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead\n     */\n    function _burn(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        _update(account, address(0), value);\n    }\n\n    /**\n     * @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     *\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\n     */\n    function _approve(address owner, address spender, uint256 value) internal {\n        _approve(owner, spender, value, true);\n    }\n\n    /**\n     * @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n     *\n     * By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n     * `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n     * `Approval` event during `transferFrom` operations.\n     *\n     * Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n     * true using the following override:\n     * ```\n     * function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     *     super._approve(owner, spender, value, true);\n     * }\n     * ```\n     *\n     * Requirements are the same as {_approve}.\n     */\n    function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {\n        if (owner == address(0)) {\n            revert ERC20InvalidApprover(address(0));\n        }\n        if (spender == address(0)) {\n            revert ERC20InvalidSpender(address(0));\n        }\n        _allowances[owner][spender] = value;\n        if (emitEvent) {\n            emit Approval(owner, spender, value);\n        }\n    }\n\n    /**\n     * @dev Updates `owner` s allowance for `spender` based on spent `value`.\n     *\n     * Does not update the allowance value in case of infinite allowance.\n     * Revert if not enough allowance is available.\n     *\n     * Does not emit an {Approval} event.\n     */\n    function _spendAllowance(address owner, address spender, uint256 value) internal virtual {\n        uint256 currentAllowance = allowance(owner, spender);\n        if (currentAllowance != type(uint256).max) {\n            if (currentAllowance < value) {\n                revert ERC20InsufficientAllowance(spender, currentAllowance, value);\n            }\n            unchecked {\n                _approve(owner, spender, currentAllowance - value, false);\n            }\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/draft-IERC6093.sol)\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard ERC20 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\n */\ninterface IERC20Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC20InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC20InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC20InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC20InvalidSpender(address spender);\n}\n\n/**\n * @dev Standard ERC721 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\n */\ninterface IERC721Errors {\n    /**\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\n     * Used in balance queries.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721InvalidOwner(address owner);\n\n    /**\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721NonexistentToken(uint256 tokenId);\n\n    /**\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param tokenId Identifier number of a token.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC721InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC721InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC721InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC721InvalidOperator(address operator);\n}\n\n/**\n * @dev Standard ERC1155 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\n */\ninterface IERC1155Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC1155InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC1155InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC1155MissingApprovalForAll(address operator, address owner);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC1155InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC1155InvalidOperator(address operator);\n\n    /**\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n     * Used in batch transfers.\n     * @param idsLength Length of the array of token identifiers\n     * @param valuesLength Length of the array of token amounts\n     */\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/extensions/IERC20Metadata.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../IERC20.sol\";\n\n/**\n * @dev Interface for the optional metadata functions from the ERC20 standard.\n */\ninterface IERC20Metadata is IERC20 {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the decimals places of the token.\n     */\n    function decimals() external view returns (uint8);\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"
			}
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"errors": {
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the address provided by the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the address provided by the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 8,
								"contract": "@openzeppelin/contracts/access/Ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"IERC1155Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC1155InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "idsLength",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "valuesLength",
									"type": "uint256"
								}
							],
							"name": "ERC1155InvalidArrayLength",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC1155MissingApprovalForAll",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.",
						"errors": {
							"ERC1155InsufficientBalance(address,uint256,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC1155InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC1155InvalidArrayLength(uint256,uint256)": [
								{
									"details": "Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.",
									"params": {
										"idsLength": "Length of the array of token identifiers",
										"valuesLength": "Length of the array of token amounts"
									}
								}
							],
							"ERC1155InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC1155InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC1155InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC1155MissingApprovalForAll(address,address)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"owner": "Address of the current owner of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC1155Errors\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC20Errors\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC721Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721IncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721InsufficientApproval",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC721InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721NonexistentToken",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.",
						"errors": {
							"ERC721IncorrectOwner(address,uint256,address)": [
								{
									"details": "Indicates an error related to the ownership over a particular token. Used in transfers.",
									"params": {
										"owner": "Address of the current owner of a token.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InsufficientApproval(address,uint256)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC721InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC721InvalidOwner(address)": [
								{
									"details": "Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.",
									"params": {
										"owner": "Address of the current owner of a token."
									}
								}
							],
							"ERC721InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC721InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC721NonexistentToken(uint256)": [
								{
									"details": "Indicates a `tokenId` whose `owner` is the zero address.",
									"params": {
										"tokenId": "Identifier number of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC721Errors\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"ERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"constructor": {
								"details": "Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":\"ERC20\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xc3e1fa9d1987f8d349dfb4d6fe93bf2ca014b52ba335cfac30bfe71e357e6f80\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5703ccdeb7b1d685e375ed719117e9edf2ab4bc544f24f23b0d50ec82257229\",\"dweb:/ipfs/QmTdwkbQq7owpCiyuzE7eh5LrD2ddrBCZ5WHVsWPi1RrTS\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ad7c8d4d08938c8dfc43d75a148863fb324b80cf53e0a36f7e5a4ac29008850\",\"dweb:/ipfs/QmcrhfPgVNf5mkdhQvy1pMv51TFokD3Y4Wa5WZhFqVh8UV\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 307,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 313,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 315,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 317,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 319,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol": {
				"ERC20Burnable": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "burn",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "burnFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Extension of {ERC20} that allows token holders to destroy both their own tokens and those that they have an allowance for, in a way that can be recognized off-chain (via event analysis).",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"burn(uint256)": {
								"details": "Destroys a `value` amount of tokens from the caller. See {ERC20-_burn}."
							},
							"burnFrom(address,uint256)": {
								"details": "Destroys a `value` amount of tokens from `account`, deducting from the caller's allowance. See {ERC20-_burn} and {ERC20-allowance}. Requirements: - the caller must have allowance for ``accounts``'s tokens of at least `value`."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"burn(uint256)": "42966c68",
							"burnFrom(address,uint256)": "79cc6790",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"burnFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Extension of {ERC20} that allows token holders to destroy both their own tokens and those that they have an allowance for, in a way that can be recognized off-chain (via event analysis).\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"burn(uint256)\":{\"details\":\"Destroys a `value` amount of tokens from the caller. See {ERC20-_burn}.\"},\"burnFrom(address,uint256)\":{\"details\":\"Destroys a `value` amount of tokens from `account`, deducting from the caller's allowance. See {ERC20-_burn} and {ERC20-allowance}. Requirements: - the caller must have allowance for ``accounts``'s tokens of at least `value`.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":\"ERC20Burnable\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xc3e1fa9d1987f8d349dfb4d6fe93bf2ca014b52ba335cfac30bfe71e357e6f80\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5703ccdeb7b1d685e375ed719117e9edf2ab4bc544f24f23b0d50ec82257229\",\"dweb:/ipfs/QmTdwkbQq7owpCiyuzE7eh5LrD2ddrBCZ5WHVsWPi1RrTS\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":{\"keccak256\":\"0x2659248df25e34000ed214b3dc8da2160bc39874c992b477d9e2b1b3283dc073\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c345af1b0e7ea28d1216d6a04ab28f5534a5229b9edf9ca3cd0e84950ae58d26\",\"dweb:/ipfs/QmY63jtSrYpLRe8Gj1ep2vMDCKxGNNG3hnNVKBVnrs2nmA\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ad7c8d4d08938c8dfc43d75a148863fb324b80cf53e0a36f7e5a4ac29008850\",\"dweb:/ipfs/QmcrhfPgVNf5mkdhQvy1pMv51TFokD3Y4Wa5WZhFqVh8UV\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 307,
								"contract": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol:ERC20Burnable",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 313,
								"contract": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol:ERC20Burnable",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 315,
								"contract": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol:ERC20Burnable",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 317,
								"contract": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol:ERC20Burnable",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 319,
								"contract": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol:ERC20Burnable",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"IERC20Metadata": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for the optional metadata functions from the ERC20 standard.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"decimals()": {
								"details": "Returns the decimals places of the token."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC20 standard.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":\"IERC20Metadata\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ad7c8d4d08938c8dfc43d75a148863fb324b80cf53e0a36f7e5a4ac29008850\",\"dweb:/ipfs/QmcrhfPgVNf5mkdhQvy1pMv51TFokD3Y4Wa5WZhFqVh8UV\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/Erc20MNTK.sol": {
				"MyNewToken": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "initialOwner",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "_taxCollector",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "_taxRecord",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "burn",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "burnFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "currentTaxDeducted",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "grossTaxCollected",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "mint",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "taxCollector",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"burn(uint256)": {
								"details": "Destroys a `value` amount of tokens from the caller. See {ERC20-_burn}."
							},
							"burnFrom(address,uint256)": {
								"details": "Destroys a `value` amount of tokens from `account`, deducting from the caller's allowance. See {ERC20-_burn} and {ERC20-allowance}. Requirements: - the caller must have allowance for ``accounts``'s tokens of at least `value`."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/Erc20MNTK.sol\":243:1519  contract MyNewToken is ERC20, ERC20Burnable, Ownable {... */\n  mstore(0x40, 0x80)\n    /* \"contracts/Erc20MNTK.sol\":483:726  constructor(address initialOwner, uint amount, address _taxCollector)... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  add\n  0x40\n  dup2\n  swap1\n  mstore\n  tag_2\n  swap2\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"contracts/Erc20MNTK.sol\":605:617  initialOwner */\n  dup3\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1896:2009  constructor(string memory name_, string memory symbol_) {... */\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x0a\n  dup2\n  mstore\n  0x20\n  add\n  shl(0xb1, 0x26bca732bbaa37b5b2b7)\n  dup2\n  mstore\n  pop\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x04\n  dup2\n  mstore\n  0x20\n  add\n  shl(0xe0, 0x4d4e544b)\n  dup2\n  mstore\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1970:1975  name_ */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1962:1967  _name */\n  0x03\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1962:1975  _name = name_ */\n  swap1\n  dup2\n  tag_8\n  swap2\n  swap1\n  tag_9\n  jump\t// in\ntag_8:\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1985:1992  _symbol */\n  0x04\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1985:2002  _symbol = symbol_ */\n  tag_10\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1995:2002  symbol_ */\n  dup3\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1985:1992  _symbol */\n  dup3\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1985:2002  _symbol = symbol_ */\n  tag_9\n  jump\t// in\ntag_10:\n  pop\n  pop\n  pop\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1299  initialOwner == address(0) */\n  dup2\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\n  tag_12\n  jumpi\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1322:1353  OwnableInvalidOwner(address(0)) */\n  mload(0x40)\n  shl(0xe0, 0x1e4fbdf7)\n  dup2\n  mstore\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1350:1351  0 */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1322:1353  OwnableInvalidOwner(address(0)) */\n  0x04\n  dup3\n  add\n    /* \"#utility.yul\":3388:3439   */\n  mstore\n    /* \"#utility.yul\":3361:3379   */\n  0x24\n  add\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1322:1353  OwnableInvalidOwner(address(0)) */\ntag_13:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\ntag_12:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  tag_15\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1392:1404  initialOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1391  _transferOwnership */\n  tag_16\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  jump\t// in\ntag_15:\n  pop\n    /* \"contracts/Erc20MNTK.sol\":633:645  taxCollector */\n  0x06\n    /* \"contracts/Erc20MNTK.sol\":633:661  taxCollector = _taxCollector */\n  dup1\n  sload\n  not(sub(shl(0xa0, 0x01), 0x01))\n  and\n  sub(shl(0xa0, 0x01), 0x01)\n  dup4\n  and\n  or\n  swap1\n  sstore\n    /* \"contracts/Erc20MNTK.sol\":671:719  _mint(initialOwner,amount * (10 **(decimals()))) */\n  tag_18\n    /* \"contracts/Erc20MNTK.sol\":677:689  initialOwner */\n  dup4\n    /* \"contracts/Erc20MNTK.sol\":706:716  decimals() */\n  tag_19\n    /* \"contracts/Erc20MNTK.sol\":999:1000  9 */\n  0x09\n  swap1\n    /* \"contracts/Erc20MNTK.sol\":920:1007  function decimals()public view virtual override returns(uint8){... */\n  jump\n    /* \"contracts/Erc20MNTK.sol\":706:716  decimals() */\ntag_19:\n    /* \"contracts/Erc20MNTK.sol\":700:717  10 **(decimals()) */\n  tag_21\n  swap1\n    /* \"contracts/Erc20MNTK.sol\":700:702  10 */\n  0x0a\n    /* \"contracts/Erc20MNTK.sol\":700:717  10 **(decimals()) */\n  tag_22\n  jump\t// in\ntag_21:\n    /* \"contracts/Erc20MNTK.sol\":690:718  amount * (10 **(decimals())) */\n  tag_23\n  swap1\n    /* \"contracts/Erc20MNTK.sol\":690:696  amount */\n  dup6\n    /* \"contracts/Erc20MNTK.sol\":690:718  amount * (10 **(decimals())) */\n  tag_24\n  jump\t// in\ntag_23:\n    /* \"contracts/Erc20MNTK.sol\":671:676  _mint */\n  tag_25\n    /* \"contracts/Erc20MNTK.sol\":671:719  _mint(initialOwner,amount * (10 **(decimals()))) */\n  jump\t// in\ntag_18:\n    /* \"contracts/Erc20MNTK.sol\":483:726  constructor(address initialOwner, uint amount, address _taxCollector)... */\n  pop\n  pop\n  pop\n    /* \"contracts/Erc20MNTK.sol\":243:1519  contract MyNewToken is ERC20, ERC20Burnable, Ownable {... */\n  jump(tag_55)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\ntag_16:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n  0x05\n  dup1\n  sload\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n  dup4\n  dup2\n  and\n  not(sub(shl(0xa0, 0x01), 0x01))\n  dup4\n  and\n  dup2\n  or\n  swap1\n  swap4\n  sstore\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  mload(0x40)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n  swap2\n  and\n  swap2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n  swap1\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n  dup3\n  swap1\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  swap1\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n  0x00\n  swap1\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  log3\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2975:3099  {... */\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7721:7929  function _mint(address account, uint256 value) internal {... */\ntag_25:\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7791:7812  account == address(0) */\n  dup3\n  and\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7787:7878  if (account == address(0)) {... */\n  tag_30\n  jumpi\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7835:7867  ERC20InvalidReceiver(address(0)) */\n  mload(0x40)\n  shl(0xe0, 0xec442f05)\n  dup2\n  mstore\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7864:7865  0 */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7835:7867  ERC20InvalidReceiver(address(0)) */\n  0x04\n  dup3\n  add\n    /* \"#utility.yul\":3388:3439   */\n  mstore\n    /* \"#utility.yul\":3361:3379   */\n  0x24\n  add\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7835:7867  ERC20InvalidReceiver(address(0)) */\n  tag_13\n    /* \"#utility.yul\":3242:3445   */\n  jump\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7787:7878  if (account == address(0)) {... */\ntag_30:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7887:7922  _update(address(0), account, value) */\n  tag_32\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7903:7904  0 */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7907:7914  account */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7916:7921  value */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7887:7894  _update */\n  tag_33\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7887:7922  _update(address(0), account, value) */\n  jump\t// in\ntag_32:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7721:7929  function _mint(address account, uint256 value) internal {... */\n  pop\n  pop\n  jump\t// out\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6271:7378  function _update(address from, address to, uint256 value) internal virtual {... */\ntag_33:\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6360:6378  from == address(0) */\n  dup4\n  and\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6356:6896  if (from == address(0)) {... */\n  tag_35\n  jumpi\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6512:6517  value */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6496:6508  _totalSupply */\n  0x02\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6496:6517  _totalSupply += value */\n  dup3\n  dup3\n  sload\n  tag_36\n  swap2\n  swap1\n  tag_37\n  jump\t// in\ntag_36:\n  swap1\n  swap2\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6356:6896  if (from == address(0)) {... */\n  tag_38\n  swap1\n  pop\n  jump\ntag_35:\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6570:6585  _balances[from] */\n  dup4\n  and\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6548:6567  uint256 fromBalance */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6570:6585  _balances[from] */\n  swap1\n  dup2\n  mstore\n  0x20\n  dup2\n  swap1\n  mstore\n  0x40\n  swap1\n  keccak256\n  sload\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6603:6622  fromBalance < value */\n  dup2\n  dup2\n  lt\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6599:6714  if (fromBalance < value) {... */\n  iszero\n  tag_39\n  jumpi\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6649:6699  ERC20InsufficientBalance(from, fromBalance, value) */\n  mload(0x40)\n  shl(0xe2, 0x391434e3)\n  dup2\n  mstore\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"#utility.yul\":5482:5514   */\n  dup6\n  and\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6649:6699  ERC20InsufficientBalance(from, fromBalance, value) */\n  0x04\n  dup3\n  add\n    /* \"#utility.yul\":5464:5515   */\n  mstore\n    /* \"#utility.yul\":5531:5549   */\n  0x24\n  dup2\n  add\n    /* \"#utility.yul\":5524:5558   */\n  dup3\n  swap1\n  mstore\n    /* \"#utility.yul\":5574:5592   */\n  0x44\n  dup2\n  add\n    /* \"#utility.yul\":5567:5601   */\n  dup4\n  swap1\n  mstore\n    /* \"#utility.yul\":5437:5455   */\n  0x64\n  add\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6649:6699  ERC20InsufficientBalance(from, fromBalance, value) */\n  tag_13\n    /* \"#utility.yul\":5262:5607   */\n  jump\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6599:6714  if (fromBalance < value) {... */\ntag_39:\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6834:6849  _balances[from] */\n  dup5\n  and\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6834:6843  _balances */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6834:6849  _balances[from] */\n  swap1\n  dup2\n  mstore\n  0x20\n  dup2\n  swap1\n  mstore\n  0x40\n  swap1\n  keccak256\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6852:6871  fromBalance - value */\n  swap1\n  dup3\n  swap1\n  sub\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6834:6871  _balances[from] = fromBalance - value */\n  swap1\n  sstore\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6356:6896  if (from == address(0)) {... */\ntag_38:\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6910:6926  to == address(0) */\n  dup3\n  and\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6906:7331  if (to == address(0)) {... */\n  tag_42\n  jumpi\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7073:7085  _totalSupply */\n  0x02\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7073:7094  _totalSupply -= value */\n  dup1\n  sload\n  dup3\n  swap1\n  sub\n  swap1\n  sstore\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6906:7331  if (to == address(0)) {... */\n  jump(tag_43)\ntag_42:\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7284:7297  _balances[to] */\n  dup3\n  and\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7284:7293  _balances */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7284:7297  _balances[to] */\n  swap1\n  dup2\n  mstore\n  0x20\n  dup2\n  swap1\n  mstore\n  0x40\n  swap1\n  keccak256\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7284:7306  _balances[to] += value */\n  dup1\n  sload\n  dup3\n  add\n  swap1\n  sstore\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6906:7331  if (to == address(0)) {... */\ntag_43:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7361:7363  to */\n  dup2\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7346:7371  Transfer(from, to, value) */\n  and\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7355:7359  from */\n  dup4\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7346:7371  Transfer(from, to, value) */\n  and\n  0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7365:7370  value */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7346:7371  Transfer(from, to, value) */\n  mload(0x40)\n  tag_44\n  swap2\n    /* \"#utility.yul\":5758:5783   */\n  dup2\n  mstore\n    /* \"#utility.yul\":5746:5748   */\n  0x20\n    /* \"#utility.yul\":5731:5749   */\n  add\n  swap1\n    /* \"#utility.yul\":5612:5789   */\n  jump\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7346:7371  Transfer(from, to, value) */\ntag_44:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6271:7378  function _update(address from, address to, uint256 value) internal virtual {... */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":14:191   */\ntag_46:\n    /* \"#utility.yul\":93:106   */\n  dup1\n  mload\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"#utility.yul\":135:166   */\n  dup2\n  and\n    /* \"#utility.yul\":125:167   */\n  dup2\n  eq\n    /* \"#utility.yul\":115:185   */\n  tag_57\n  jumpi\n    /* \"#utility.yul\":181:182   */\n  0x00\n    /* \"#utility.yul\":178:179   */\n  dup1\n    /* \"#utility.yul\":171:183   */\n  revert\n    /* \"#utility.yul\":115:185   */\ntag_57:\n    /* \"#utility.yul\":14:191   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":196:550   */\ntag_3:\n    /* \"#utility.yul\":284:290   */\n  0x00\n    /* \"#utility.yul\":292:298   */\n  dup1\n    /* \"#utility.yul\":300:306   */\n  0x00\n    /* \"#utility.yul\":353:355   */\n  0x60\n    /* \"#utility.yul\":341:350   */\n  dup5\n    /* \"#utility.yul\":332:339   */\n  dup7\n    /* \"#utility.yul\":328:351   */\n  sub\n    /* \"#utility.yul\":324:356   */\n  slt\n    /* \"#utility.yul\":321:373   */\n  iszero\n  tag_59\n  jumpi\n    /* \"#utility.yul\":369:370   */\n  0x00\n    /* \"#utility.yul\":366:367   */\n  dup1\n    /* \"#utility.yul\":359:371   */\n  revert\n    /* \"#utility.yul\":321:373   */\ntag_59:\n    /* \"#utility.yul\":392:432   */\n  tag_60\n    /* \"#utility.yul\":422:431   */\n  dup5\n    /* \"#utility.yul\":392:432   */\n  tag_46\n  jump\t// in\ntag_60:\n    /* \"#utility.yul\":382:432   */\n  swap3\n  pop\n    /* \"#utility.yul\":472:474   */\n  0x20\n    /* \"#utility.yul\":461:470   */\n  dup5\n    /* \"#utility.yul\":457:475   */\n  add\n    /* \"#utility.yul\":451:476   */\n  mload\n    /* \"#utility.yul\":441:476   */\n  swap2\n  pop\n    /* \"#utility.yul\":495:544   */\n  tag_61\n    /* \"#utility.yul\":540:542   */\n  0x40\n    /* \"#utility.yul\":529:538   */\n  dup6\n    /* \"#utility.yul\":525:543   */\n  add\n    /* \"#utility.yul\":495:544   */\n  tag_46\n  jump\t// in\ntag_61:\n    /* \"#utility.yul\":485:544   */\n  swap1\n  pop\n    /* \"#utility.yul\":196:550   */\n  swap3\n  pop\n  swap3\n  pop\n  swap3\n  jump\t// out\n    /* \"#utility.yul\":555:682   */\ntag_47:\n    /* \"#utility.yul\":616:626   */\n  0x4e487b71\n    /* \"#utility.yul\":611:614   */\n  0xe0\n    /* \"#utility.yul\":607:627   */\n  shl\n    /* \"#utility.yul\":604:605   */\n  0x00\n    /* \"#utility.yul\":597:628   */\n  mstore\n    /* \"#utility.yul\":647:651   */\n  0x41\n    /* \"#utility.yul\":644:645   */\n  0x04\n    /* \"#utility.yul\":637:652   */\n  mstore\n    /* \"#utility.yul\":671:675   */\n  0x24\n    /* \"#utility.yul\":668:669   */\n  0x00\n    /* \"#utility.yul\":661:676   */\n  revert\n    /* \"#utility.yul\":687:1067   */\ntag_48:\n    /* \"#utility.yul\":766:767   */\n  0x01\n    /* \"#utility.yul\":762:774   */\n  dup2\n  dup2\n  shr\n  swap1\n    /* \"#utility.yul\":809:821   */\n  dup3\n  and\n  dup1\n    /* \"#utility.yul\":830:891   */\n  tag_64\n  jumpi\n    /* \"#utility.yul\":884:888   */\n  0x7f\n    /* \"#utility.yul\":876:882   */\n  dup3\n    /* \"#utility.yul\":872:889   */\n  and\n    /* \"#utility.yul\":862:889   */\n  swap2\n  pop\n    /* \"#utility.yul\":830:891   */\ntag_64:\n    /* \"#utility.yul\":937:939   */\n  0x20\n    /* \"#utility.yul\":929:935   */\n  dup3\n    /* \"#utility.yul\":926:940   */\n  lt\n    /* \"#utility.yul\":906:924   */\n  dup2\n    /* \"#utility.yul\":903:941   */\n  sub\n    /* \"#utility.yul\":900:1061   */\n  tag_65\n  jumpi\n    /* \"#utility.yul\":983:993   */\n  0x4e487b71\n    /* \"#utility.yul\":978:981   */\n  0xe0\n    /* \"#utility.yul\":974:994   */\n  shl\n    /* \"#utility.yul\":971:972   */\n  0x00\n    /* \"#utility.yul\":964:995   */\n  mstore\n    /* \"#utility.yul\":1018:1022   */\n  0x22\n    /* \"#utility.yul\":1015:1016   */\n  0x04\n    /* \"#utility.yul\":1008:1023   */\n  mstore\n    /* \"#utility.yul\":1046:1050   */\n  0x24\n    /* \"#utility.yul\":1043:1044   */\n  0x00\n    /* \"#utility.yul\":1036:1051   */\n  revert\n    /* \"#utility.yul\":900:1061   */\ntag_65:\n  pop\n    /* \"#utility.yul\":687:1067   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1198:1716   */\ntag_50:\n    /* \"#utility.yul\":1300:1302   */\n  0x1f\n    /* \"#utility.yul\":1295:1298   */\n  dup3\n    /* \"#utility.yul\":1292:1303   */\n  gt\n    /* \"#utility.yul\":1289:1710   */\n  iszero\n  tag_68\n  jumpi\n    /* \"#utility.yul\":1336:1341   */\n  dup1\n    /* \"#utility.yul\":1333:1334   */\n  0x00\n    /* \"#utility.yul\":1326:1342   */\n  mstore\n    /* \"#utility.yul\":1380:1384   */\n  0x20\n    /* \"#utility.yul\":1377:1378   */\n  0x00\n    /* \"#utility.yul\":1367:1385   */\n  keccak256\n    /* \"#utility.yul\":1450:1452   */\n  0x1f\n    /* \"#utility.yul\":1438:1448   */\n  dup5\n    /* \"#utility.yul\":1434:1453   */\n  add\n    /* \"#utility.yul\":1431:1432   */\n  0x05\n    /* \"#utility.yul\":1427:1454   */\n  shr\n    /* \"#utility.yul\":1421:1425   */\n  dup2\n    /* \"#utility.yul\":1417:1455   */\n  add\n    /* \"#utility.yul\":1486:1490   */\n  0x20\n    /* \"#utility.yul\":1474:1484   */\n  dup6\n    /* \"#utility.yul\":1471:1491   */\n  lt\n    /* \"#utility.yul\":1468:1515   */\n  iszero\n  tag_69\n  jumpi\n  pop\n    /* \"#utility.yul\":1509:1513   */\n  dup1\n    /* \"#utility.yul\":1468:1515   */\ntag_69:\n    /* \"#utility.yul\":1564:1566   */\n  0x1f\n    /* \"#utility.yul\":1559:1562   */\n  dup5\n    /* \"#utility.yul\":1555:1567   */\n  add\n    /* \"#utility.yul\":1552:1553   */\n  0x05\n    /* \"#utility.yul\":1548:1568   */\n  shr\n    /* \"#utility.yul\":1542:1546   */\n  dup3\n    /* \"#utility.yul\":1538:1569   */\n  add\n    /* \"#utility.yul\":1528:1569   */\n  swap2\n  pop\n    /* \"#utility.yul\":1619:1700   */\ntag_70:\n    /* \"#utility.yul\":1637:1639   */\n  dup2\n    /* \"#utility.yul\":1630:1635   */\n  dup2\n    /* \"#utility.yul\":1627:1640   */\n  lt\n    /* \"#utility.yul\":1619:1700   */\n  iszero\n  tag_72\n  jumpi\n    /* \"#utility.yul\":1696:1697   */\n  0x00\n    /* \"#utility.yul\":1682:1698   */\n  dup2\n  sstore\n    /* \"#utility.yul\":1663:1664   */\n  0x01\n    /* \"#utility.yul\":1652:1665   */\n  add\n    /* \"#utility.yul\":1619:1700   */\n  jump(tag_70)\ntag_72:\n    /* \"#utility.yul\":1623:1626   */\n  pop\n  pop\n    /* \"#utility.yul\":1289:1710   */\ntag_68:\n    /* \"#utility.yul\":1198:1716   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1892:3237   */\ntag_9:\n    /* \"#utility.yul\":2012:2022   */\n  dup2\n  mload\n  sub(shl(0x40, 0x01), 0x01)\n    /* \"#utility.yul\":2034:2064   */\n  dup2\n  gt\n    /* \"#utility.yul\":2031:2087   */\n  iszero\n  tag_76\n  jumpi\n    /* \"#utility.yul\":2067:2085   */\n  tag_76\n  tag_47\n  jump\t// in\ntag_76:\n    /* \"#utility.yul\":2096:2193   */\n  tag_77\n    /* \"#utility.yul\":2186:2192   */\n  dup2\n    /* \"#utility.yul\":2146:2184   */\n  tag_78\n    /* \"#utility.yul\":2178:2182   */\n  dup5\n    /* \"#utility.yul\":2172:2183   */\n  sload\n    /* \"#utility.yul\":2146:2184   */\n  tag_48\n  jump\t// in\ntag_78:\n    /* \"#utility.yul\":2140:2144   */\n  dup5\n    /* \"#utility.yul\":2096:2193   */\n  tag_50\n  jump\t// in\ntag_77:\n    /* \"#utility.yul\":2248:2252   */\n  0x20\n  dup1\n    /* \"#utility.yul\":2305:2307   */\n  0x1f\n    /* \"#utility.yul\":2294:2308   */\n  dup4\n  gt\n    /* \"#utility.yul\":2322:2323   */\n  0x01\n    /* \"#utility.yul\":2317:2980   */\n  dup2\n  eq\n  tag_80\n  jumpi\n    /* \"#utility.yul\":3024:3025   */\n  0x00\n    /* \"#utility.yul\":3041:3047   */\n  dup5\n    /* \"#utility.yul\":3038:3127   */\n  iszero\n  tag_81\n  jumpi\n  pop\n    /* \"#utility.yul\":3093:3112   */\n  dup6\n  dup4\n  add\n    /* \"#utility.yul\":3087:3113   */\n  mload\n    /* \"#utility.yul\":3038:3127   */\ntag_81:\n  not(0x00)\n    /* \"#utility.yul\":1849:1850   */\n  0x03\n    /* \"#utility.yul\":1845:1856   */\n  dup7\n  swap1\n  shl\n    /* \"#utility.yul\":1841:1865   */\n  shr\n    /* \"#utility.yul\":1837:1866   */\n  not\n    /* \"#utility.yul\":1827:1867   */\n  and\n    /* \"#utility.yul\":1873:1874   */\n  0x01\n    /* \"#utility.yul\":1869:1880   */\n  dup6\n  swap1\n  shl\n    /* \"#utility.yul\":1824:1881   */\n  or\n    /* \"#utility.yul\":3140:3221   */\n  dup6\n  sstore\n    /* \"#utility.yul\":2287:3231   */\n  jump(tag_79)\n    /* \"#utility.yul\":2317:2980   */\ntag_80:\n    /* \"#utility.yul\":1145:1146   */\n  0x00\n    /* \"#utility.yul\":1138:1152   */\n  dup6\n  dup2\n  mstore\n    /* \"#utility.yul\":1182:1186   */\n  0x20\n    /* \"#utility.yul\":1169:1187   */\n  dup2\n  keccak256\n  not(0x1f)\n    /* \"#utility.yul\":2353:2373   */\n  dup7\n  and\n  swap2\n    /* \"#utility.yul\":2471:2707   */\ntag_84:\n    /* \"#utility.yul\":2485:2492   */\n  dup3\n    /* \"#utility.yul\":2482:2483   */\n  dup2\n    /* \"#utility.yul\":2479:2493   */\n  lt\n    /* \"#utility.yul\":2471:2707   */\n  iszero\n  tag_86\n  jumpi\n    /* \"#utility.yul\":2574:2593   */\n  dup9\n  dup7\n  add\n    /* \"#utility.yul\":2568:2594   */\n  mload\n    /* \"#utility.yul\":2553:2595   */\n  dup3\n  sstore\n    /* \"#utility.yul\":2666:2693   */\n  swap5\n  dup5\n  add\n  swap5\n    /* \"#utility.yul\":2634:2635   */\n  0x01\n    /* \"#utility.yul\":2622:2636   */\n  swap1\n  swap2\n  add\n  swap1\n    /* \"#utility.yul\":2501:2520   */\n  dup5\n  add\n    /* \"#utility.yul\":2471:2707   */\n  jump(tag_84)\ntag_86:\n    /* \"#utility.yul\":2475:2478   */\n  pop\n    /* \"#utility.yul\":2735:2741   */\n  dup6\n    /* \"#utility.yul\":2726:2733   */\n  dup3\n    /* \"#utility.yul\":2723:2742   */\n  lt\n    /* \"#utility.yul\":2720:2921   */\n  iszero\n  tag_87\n  jumpi\n    /* \"#utility.yul\":2796:2815   */\n  dup8\n  dup6\n  add\n    /* \"#utility.yul\":2790:2816   */\n  mload\n  not(0x00)\n    /* \"#utility.yul\":2879:2880   */\n  0x03\n    /* \"#utility.yul\":2875:2889   */\n  dup9\n  swap1\n  shl\n    /* \"#utility.yul\":2891:2894   */\n  0xf8\n    /* \"#utility.yul\":2871:2895   */\n  and\n    /* \"#utility.yul\":2867:2904   */\n  shr\n    /* \"#utility.yul\":2863:2905   */\n  not\n    /* \"#utility.yul\":2848:2906   */\n  and\n    /* \"#utility.yul\":2833:2907   */\n  dup2\n  sstore\n    /* \"#utility.yul\":2720:2921   */\ntag_87:\n  pop\n  pop\n    /* \"#utility.yul\":2967:2968   */\n  0x01\n    /* \"#utility.yul\":2958:2964   */\n  dup5\n    /* \"#utility.yul\":2955:2956   */\n  0x01\n    /* \"#utility.yul\":2951:2965   */\n  shl\n    /* \"#utility.yul\":2947:2969   */\n  add\n    /* \"#utility.yul\":2941:2945   */\n  dup6\n    /* \"#utility.yul\":2934:2970   */\n  sstore\n    /* \"#utility.yul\":2287:3231   */\ntag_79:\n  pop\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":1892:3237   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3450:3577   */\ntag_52:\n    /* \"#utility.yul\":3511:3521   */\n  0x4e487b71\n    /* \"#utility.yul\":3506:3509   */\n  0xe0\n    /* \"#utility.yul\":3502:3522   */\n  shl\n    /* \"#utility.yul\":3499:3500   */\n  0x00\n    /* \"#utility.yul\":3492:3523   */\n  mstore\n    /* \"#utility.yul\":3542:3546   */\n  0x11\n    /* \"#utility.yul\":3539:3540   */\n  0x04\n    /* \"#utility.yul\":3532:3547   */\n  mstore\n    /* \"#utility.yul\":3566:3570   */\n  0x24\n    /* \"#utility.yul\":3563:3564   */\n  0x00\n    /* \"#utility.yul\":3556:3571   */\n  revert\n    /* \"#utility.yul\":3582:3998   */\ntag_53:\n    /* \"#utility.yul\":3671:3672   */\n  0x01\n    /* \"#utility.yul\":3708:3713   */\n  dup2\n    /* \"#utility.yul\":3671:3672   */\n  dup2\n    /* \"#utility.yul\":3722:3992   */\ntag_91:\n    /* \"#utility.yul\":3743:3750   */\n  dup1\n    /* \"#utility.yul\":3733:3741   */\n  dup6\n    /* \"#utility.yul\":3730:3751   */\n  gt\n    /* \"#utility.yul\":3722:3992   */\n  iszero\n  tag_93\n  jumpi\n    /* \"#utility.yul\":3802:3806   */\n  dup2\n    /* \"#utility.yul\":3798:3799   */\n  0x00\n    /* \"#utility.yul\":3794:3800   */\n  not\n    /* \"#utility.yul\":3790:3807   */\n  div\n    /* \"#utility.yul\":3784:3788   */\n  dup3\n    /* \"#utility.yul\":3781:3808   */\n  gt\n    /* \"#utility.yul\":3778:3831   */\n  iszero\n  tag_95\n  jumpi\n    /* \"#utility.yul\":3811:3829   */\n  tag_95\n  tag_52\n  jump\t// in\ntag_95:\n    /* \"#utility.yul\":3861:3868   */\n  dup1\n    /* \"#utility.yul\":3851:3859   */\n  dup6\n    /* \"#utility.yul\":3847:3869   */\n  and\n    /* \"#utility.yul\":3844:3899   */\n  iszero\n  tag_96\n  jumpi\n    /* \"#utility.yul\":3881:3897   */\n  swap2\n  dup2\n  mul\n  swap2\n    /* \"#utility.yul\":3844:3899   */\ntag_96:\n    /* \"#utility.yul\":3960:3982   */\n  swap4\n  dup5\n  shr\n  swap4\n    /* \"#utility.yul\":3920:3935   */\n  swap1\n  dup1\n  mul\n  swap1\n    /* \"#utility.yul\":3722:3992   */\n  jump(tag_91)\ntag_93:\n    /* \"#utility.yul\":3726:3729   */\n  pop\n    /* \"#utility.yul\":3582:3998   */\n  swap3\n  pop\n  swap3\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4003:4809   */\ntag_54:\n    /* \"#utility.yul\":4052:4057   */\n  0x00\n    /* \"#utility.yul\":4082:4090   */\n  dup3\n    /* \"#utility.yul\":4072:4152   */\n  tag_98\n  jumpi\n  pop\n    /* \"#utility.yul\":4123:4124   */\n  0x01\n    /* \"#utility.yul\":4137:4142   */\n  jump(tag_97)\n    /* \"#utility.yul\":4072:4152   */\ntag_98:\n    /* \"#utility.yul\":4171:4175   */\n  dup2\n    /* \"#utility.yul\":4161:4237   */\n  tag_99\n  jumpi\n  pop\n    /* \"#utility.yul\":4208:4209   */\n  0x00\n    /* \"#utility.yul\":4222:4227   */\n  jump(tag_97)\n    /* \"#utility.yul\":4161:4237   */\ntag_99:\n    /* \"#utility.yul\":4253:4257   */\n  dup2\n    /* \"#utility.yul\":4271:4272   */\n  0x01\n    /* \"#utility.yul\":4266:4325   */\n  dup2\n  eq\n  tag_101\n  jumpi\n    /* \"#utility.yul\":4339:4340   */\n  0x02\n    /* \"#utility.yul\":4334:4464   */\n  dup2\n  eq\n  tag_102\n  jumpi\n    /* \"#utility.yul\":4246:4464   */\n  jump(tag_100)\n    /* \"#utility.yul\":4266:4325   */\ntag_101:\n    /* \"#utility.yul\":4296:4297   */\n  0x01\n    /* \"#utility.yul\":4287:4297   */\n  swap2\n  pop\n    /* \"#utility.yul\":4310:4315   */\n  pop\n  jump(tag_97)\n    /* \"#utility.yul\":4334:4464   */\ntag_102:\n    /* \"#utility.yul\":4371:4374   */\n  0xff\n    /* \"#utility.yul\":4361:4369   */\n  dup5\n    /* \"#utility.yul\":4358:4375   */\n  gt\n    /* \"#utility.yul\":4355:4398   */\n  iszero\n  tag_104\n  jumpi\n    /* \"#utility.yul\":4378:4396   */\n  tag_104\n  tag_52\n  jump\t// in\ntag_104:\n  pop\n  pop\n    /* \"#utility.yul\":4434:4435   */\n  0x01\n    /* \"#utility.yul\":4420:4436   */\n  dup3\n  shl\n    /* \"#utility.yul\":4449:4454   */\n  jump(tag_97)\n    /* \"#utility.yul\":4246:4464   */\ntag_100:\n  pop\n    /* \"#utility.yul\":4548:4550   */\n  0x20\n    /* \"#utility.yul\":4538:4546   */\n  dup4\n    /* \"#utility.yul\":4535:4551   */\n  lt\n    /* \"#utility.yul\":4529:4532   */\n  0x0133\n    /* \"#utility.yul\":4523:4527   */\n  dup4\n    /* \"#utility.yul\":4520:4533   */\n  lt\n    /* \"#utility.yul\":4516:4552   */\n  and\n    /* \"#utility.yul\":4510:4512   */\n  0x4e\n    /* \"#utility.yul\":4500:4508   */\n  dup5\n    /* \"#utility.yul\":4497:4513   */\n  lt\n    /* \"#utility.yul\":4492:4494   */\n  0x0b\n    /* \"#utility.yul\":4486:4490   */\n  dup5\n    /* \"#utility.yul\":4483:4495   */\n  lt\n    /* \"#utility.yul\":4479:4514   */\n  and\n    /* \"#utility.yul\":4476:4553   */\n  or\n    /* \"#utility.yul\":4473:4632   */\n  iszero\n  tag_105\n  jumpi\n  pop\n    /* \"#utility.yul\":4585:4604   */\n  dup2\n  dup2\n  exp\n    /* \"#utility.yul\":4617:4622   */\n  jump(tag_97)\n    /* \"#utility.yul\":4473:4632   */\ntag_105:\n    /* \"#utility.yul\":4664:4698   */\n  tag_106\n    /* \"#utility.yul\":4689:4697   */\n  dup4\n    /* \"#utility.yul\":4683:4687   */\n  dup4\n    /* \"#utility.yul\":4664:4698   */\n  tag_53\n  jump\t// in\ntag_106:\n    /* \"#utility.yul\":4734:4740   */\n  dup1\n    /* \"#utility.yul\":4730:4731   */\n  0x00\n    /* \"#utility.yul\":4726:4732   */\n  not\n    /* \"#utility.yul\":4722:4741   */\n  div\n    /* \"#utility.yul\":4713:4720   */\n  dup3\n    /* \"#utility.yul\":4710:4742   */\n  gt\n    /* \"#utility.yul\":4707:4765   */\n  iszero\n  tag_108\n  jumpi\n    /* \"#utility.yul\":4745:4763   */\n  tag_108\n  tag_52\n  jump\t// in\ntag_108:\n    /* \"#utility.yul\":4783:4803   */\n  mul\n  swap1\n  pop\n    /* \"#utility.yul\":4003:4809   */\ntag_97:\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4814:4954   */\ntag_22:\n    /* \"#utility.yul\":4872:4877   */\n  0x00\n    /* \"#utility.yul\":4901:4948   */\n  tag_110\n    /* \"#utility.yul\":4942:4946   */\n  0xff\n    /* \"#utility.yul\":4932:4940   */\n  dup5\n    /* \"#utility.yul\":4928:4947   */\n  and\n    /* \"#utility.yul\":4922:4926   */\n  dup4\n    /* \"#utility.yul\":4901:4948   */\n  tag_54\n  jump\t// in\ntag_110:\n    /* \"#utility.yul\":4892:4948   */\n  swap4\n    /* \"#utility.yul\":4814:4954   */\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4959:5127   */\ntag_24:\n    /* \"#utility.yul\":5032:5041   */\n  dup1\n  dup3\n  mul\n    /* \"#utility.yul\":5063:5072   */\n  dup2\n  iszero\n    /* \"#utility.yul\":5080:5095   */\n  dup3\n  dup3\n  div\n    /* \"#utility.yul\":5074:5096   */\n  dup5\n  eq\n    /* \"#utility.yul\":5060:5097   */\n  or\n    /* \"#utility.yul\":5050:5121   */\n  tag_97\n  jumpi\n    /* \"#utility.yul\":5101:5119   */\n  tag_97\n  tag_52\n  jump\t// in\n    /* \"#utility.yul\":5132:5257   */\ntag_37:\n    /* \"#utility.yul\":5197:5206   */\n  dup1\n  dup3\n  add\n    /* \"#utility.yul\":5218:5228   */\n  dup1\n  dup3\n  gt\n    /* \"#utility.yul\":5215:5251   */\n  iszero\n  tag_97\n  jumpi\n    /* \"#utility.yul\":5231:5249   */\n  tag_97\n  tag_52\n  jump\t// in\n    /* \"#utility.yul\":5612:5789   */\ntag_55:\n    /* \"contracts/Erc20MNTK.sol\":243:1519  contract MyNewToken is ERC20, ERC20Burnable, Ownable {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/Erc20MNTK.sol\":243:1519  contract MyNewToken is ERC20, ERC20Burnable, Ownable {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x715018a6\n      gt\n      tag_22\n      jumpi\n      dup1\n      0xac3c93cf\n      gt\n      tag_23\n      jumpi\n      dup1\n      0xac3c93cf\n      eq\n      tag_17\n      jumpi\n      dup1\n      0xbea1dcf8\n      eq\n      tag_18\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_19\n      jumpi\n      dup1\n      0xee33bc45\n      eq\n      tag_20\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_21\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_23:\n      dup1\n      0x715018a6\n      eq\n      tag_12\n      jumpi\n      dup1\n      0x79cc6790\n      eq\n      tag_13\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_14\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_15\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_16\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_22:\n      dup1\n      0x2d44ff23\n      gt\n      tag_24\n      jumpi\n      dup1\n      0x2d44ff23\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x40c10f19\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x42966c68\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_11\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_24:\n      dup1\n      0x06fdde03\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_6\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2074:2163  function name() public view virtual returns (string memory) {... */\n    tag_3:\n      tag_25\n      tag_26\n      jump\t// in\n    tag_25:\n      mload(0x40)\n      tag_27\n      swap2\n      swap1\n      tag_28\n      jump\t// in\n    tag_27:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4293:4479  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n    tag_4:\n      tag_29\n      tag_30\n      calldatasize\n      0x04\n      tag_31\n      jump\t// in\n    tag_30:\n      tag_32\n      jump\t// in\n    tag_29:\n      mload(0x40)\n        /* \"#utility.yul\":1169:1183   */\n      swap1\n      iszero\n        /* \"#utility.yul\":1162:1184   */\n      iszero\n        /* \"#utility.yul\":1144:1185   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1132:1134   */\n      0x20\n        /* \"#utility.yul\":1117:1135   */\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4293:4479  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n      tag_27\n        /* \"#utility.yul\":1004:1191   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3144:3241  function totalSupply() public view virtual returns (uint256) {... */\n    tag_5:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3222:3234  _totalSupply */\n      sload(0x02)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3144:3241  function totalSupply() public view virtual returns (uint256) {... */\n    tag_35:\n      mload(0x40)\n        /* \"#utility.yul\":1342:1367   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":1330:1332   */\n      0x20\n        /* \"#utility.yul\":1315:1333   */\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3144:3241  function totalSupply() public view virtual returns (uint256) {... */\n      tag_27\n        /* \"#utility.yul\":1196:1373   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5039:5283  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n    tag_6:\n      tag_29\n      tag_40\n      calldatasize\n      0x04\n      tag_41\n      jump\t// in\n    tag_40:\n      tag_42\n      jump\t// in\n        /* \"contracts/Erc20MNTK.sol\":335:368  uint256 public currentTaxDeducted */\n    tag_7:\n      tag_35\n      sload(0x07)\n      dup2\n      jump\n        /* \"contracts/Erc20MNTK.sol\":920:1007  function decimals()public view virtual override returns(uint8){... */\n    tag_8:\n      mload(0x40)\n        /* \"contracts/Erc20MNTK.sol\":999:1000  9 */\n      0x09\n        /* \"#utility.yul\":1853:1889   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1841:1843   */\n      0x20\n        /* \"#utility.yul\":1826:1844   */\n      add\n        /* \"contracts/Erc20MNTK.sol\":920:1007  function decimals()public view virtual override returns(uint8){... */\n      tag_27\n        /* \"#utility.yul\":1711:1895   */\n      jump\n        /* \"contracts/Erc20MNTK.sol\":732:914  function mint(address to, uint256 amount) public onlyOwner {... */\n    tag_9:\n      tag_51\n      tag_52\n      calldatasize\n      0x04\n      tag_31\n      jump\t// in\n    tag_52:\n      tag_53\n      jump\t// in\n    tag_51:\n      stop\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":618:705  function burn(uint256 value) public virtual {... */\n    tag_10:\n      tag_51\n      tag_55\n      calldatasize\n      0x04\n      tag_56\n      jump\t// in\n    tag_55:\n      tag_57\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3299:3415  function balanceOf(address account) public view virtual returns (uint256) {... */\n    tag_11:\n      tag_35\n      tag_59\n      calldatasize\n      0x04\n      tag_60\n      jump\t// in\n    tag_59:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3390:3408  _balances[account] */\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3364:3371  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3390:3408  _balances[account] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3299:3415  function balanceOf(address account) public view virtual returns (uint256) {... */\n      jump\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_12:\n      tag_51\n      tag_64\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":1021:1179  function burnFrom(address account, uint256 value) public virtual {... */\n    tag_13:\n      tag_51\n      tag_66\n      calldatasize\n      0x04\n      tag_31\n      jump\t// in\n    tag_66:\n      tag_67\n      jump\t// in\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n    tag_14:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1710:1716  _owner */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x05))\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n    tag_68:\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":2440:2472   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":2422:2473   */\n      dup2\n      mstore\n        /* \"#utility.yul\":2410:2412   */\n      0x20\n        /* \"#utility.yul\":2395:2413   */\n      add\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n      tag_27\n        /* \"#utility.yul\":2276:2479   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2276:2369  function symbol() public view virtual returns (string memory) {... */\n    tag_15:\n      tag_25\n      tag_73\n      jump\t// in\n        /* \"contracts/Erc20MNTK.sol\":1013:1517  function transfer(address to, uint value) public virtual override returns(bool) {... */\n    tag_16:\n      tag_29\n      tag_76\n      calldatasize\n      0x04\n      tag_31\n      jump\t// in\n    tag_76:\n      tag_77\n      jump\t// in\n        /* \"contracts/Erc20MNTK.sol\":413:477  mapping(address => mapping(address => uint256))public _taxRecord */\n    tag_17:\n      tag_35\n      tag_80\n      calldatasize\n      0x04\n      tag_81\n      jump\t// in\n    tag_80:\n      0x09\n      0x20\n      swap1\n      dup2\n      mstore\n      0x00\n      swap3\n      dup4\n      mstore\n      0x40\n      dup1\n      dup5\n      keccak256\n      swap1\n      swap2\n      mstore\n      swap1\n      dup3\n      mstore\n      swap1\n      keccak256\n      sload\n      dup2\n      jump\n        /* \"contracts/Erc20MNTK.sol\":302:329  address public taxCollector */\n    tag_18:\n      sload(0x06)\n      tag_68\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3846:3986  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n    tag_19:\n      tag_35\n      tag_88\n      calldatasize\n      0x04\n      tag_81\n      jump\t// in\n    tag_88:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3952:3970  _allowances[owner] */\n      swap2\n      dup3\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3926:3933  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3952:3970  _allowances[owner] */\n      swap1\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3952:3963  _allowances */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3952:3970  _allowances[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3952:3979  _allowances[owner][spender] */\n      swap4\n      swap1\n      swap5\n      and\n      dup3\n      mstore\n      swap2\n      swap1\n      swap2\n      mstore\n      keccak256\n      sload\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3846:3986  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n      jump\n        /* \"contracts/Erc20MNTK.sol\":374:406  uint256 public grossTaxCollected */\n    tag_20:\n      tag_35\n      sload(0x08)\n      dup2\n      jump\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_21:\n      tag_51\n      tag_95\n      calldatasize\n      0x04\n      tag_60\n      jump\t// in\n    tag_95:\n      tag_96\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2074:2163  function name() public view virtual returns (string memory) {... */\n    tag_26:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2119:2132  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2151:2156  _name */\n      0x03\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2144:2156  return _name */\n      dup1\n      sload\n      tag_98\n      swap1\n      tag_99\n      jump\t// in\n    tag_98:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_100\n      swap1\n      tag_99\n      jump\t// in\n    tag_100:\n      dup1\n      iszero\n      tag_101\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_102\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_101)\n    tag_102:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_103:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_103\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_101:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2074:2163  function name() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4293:4479  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n    tag_32:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4366:4370  bool */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4420:4451  _approve(owner, spender, value) */\n      tag_107\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4436:4443  spender */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4445:4450  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4420:4428  _approve */\n      tag_108\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4420:4451  _approve(owner, spender, value) */\n      jump\t// in\n    tag_107:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4468:4472  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4461:4472  return true */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4293:4479  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n    tag_104:\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5039:5283  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n    tag_42:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5126:5130  bool */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5182:5219  _spendAllowance(from, spender, value) */\n      tag_112\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5198:5202  from */\n      dup6\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5213:5218  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5182:5197  _spendAllowance */\n      tag_113\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5182:5219  _spendAllowance(from, spender, value) */\n      jump\t// in\n    tag_112:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5229:5255  _transfer(from, to, value) */\n      tag_114\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5239:5243  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5245:5247  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5249:5254  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5229:5238  _transfer */\n      tag_115\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5229:5255  _transfer(from, to, value) */\n      jump\t// in\n    tag_114:\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5272:5276  true */\n      0x01\n      swap5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5039:5283  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/Erc20MNTK.sol\":732:914  function mint(address to, uint256 amount) public onlyOwner {... */\n    tag_53:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_118\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_119\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_118:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Erc20MNTK.sol\":809:825  to == msg.sender */\n      dup3\n      and\n        /* \"contracts/Erc20MNTK.sol\":815:825  msg.sender */\n      caller\n        /* \"contracts/Erc20MNTK.sol\":809:825  to == msg.sender */\n      eq\n        /* \"contracts/Erc20MNTK.sol\":801:859  require(to == msg.sender, \"Minting allowed only to owner\") */\n      tag_121\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":3336:3338   */\n      0x20\n        /* \"contracts/Erc20MNTK.sol\":801:859  require(to == msg.sender, \"Minting allowed only to owner\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3318:3339   */\n      mstore\n        /* \"#utility.yul\":3375:3377   */\n      0x1d\n        /* \"#utility.yul\":3355:3373   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":3348:3378   */\n      mstore\n        /* \"#utility.yul\":3414:3445   */\n      0x4d696e74696e6720616c6c6f776564206f6e6c7920746f206f776e6572000000\n        /* \"#utility.yul\":3394:3412   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":3387:3446   */\n      mstore\n        /* \"#utility.yul\":3463:3481   */\n      0x64\n      add\n        /* \"contracts/Erc20MNTK.sol\":801:859  require(to == msg.sender, \"Minting allowed only to owner\") */\n    tag_122:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_121:\n        /* \"contracts/Erc20MNTK.sol\":869:907  _mint(to,amount * (10 **(decimals()))) */\n      tag_124\n        /* \"contracts/Erc20MNTK.sol\":875:877  to */\n      dup3\n        /* \"contracts/Erc20MNTK.sol\":888:905  10 **(decimals()) */\n      tag_126\n        /* \"contracts/Erc20MNTK.sol\":999:1000  9 */\n      0x09\n        /* \"contracts/Erc20MNTK.sol\":888:890  10 */\n      0x0a\n        /* \"contracts/Erc20MNTK.sol\":888:905  10 **(decimals()) */\n      tag_127\n      jump\t// in\n    tag_126:\n        /* \"contracts/Erc20MNTK.sol\":878:906  amount * (10 **(decimals())) */\n      tag_128\n      swap1\n        /* \"contracts/Erc20MNTK.sol\":878:884  amount */\n      dup5\n        /* \"contracts/Erc20MNTK.sol\":878:906  amount * (10 **(decimals())) */\n      tag_129\n      jump\t// in\n    tag_128:\n        /* \"contracts/Erc20MNTK.sol\":869:874  _mint */\n      tag_130\n        /* \"contracts/Erc20MNTK.sol\":869:907  _mint(to,amount * (10 **(decimals()))) */\n      jump\t// in\n    tag_124:\n        /* \"contracts/Erc20MNTK.sol\":732:914  function mint(address to, uint256 amount) public onlyOwner {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":618:705  function burn(uint256 value) public virtual {... */\n    tag_57:\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":672:698  _burn(_msgSender(), value) */\n      tag_132\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":692:697  value */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":672:677  _burn */\n      tag_134\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":672:698  _burn(_msgSender(), value) */\n      jump\t// in\n    tag_132:\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":618:705  function burn(uint256 value) public virtual {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_64:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_137\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_119\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_137:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      tag_139\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2384:2385  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2375  _transferOwnership */\n      tag_140\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_139:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":1021:1179  function burnFrom(address account, uint256 value) public virtual {... */\n    tag_67:\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":1096:1141  _spendAllowance(account, _msgSender(), value) */\n      tag_142\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":1112:1119  account */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":1135:1140  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":1096:1111  _spendAllowance */\n      tag_113\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":1096:1141  _spendAllowance(account, _msgSender(), value) */\n      jump\t// in\n    tag_142:\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":1151:1172  _burn(account, value) */\n      tag_124\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":1157:1164  account */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":1166:1171  value */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":1151:1156  _burn */\n      tag_134\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":1151:1172  _burn(account, value) */\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2276:2369  function symbol() public view virtual returns (string memory) {... */\n    tag_73:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2323:2336  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2355:2362  _symbol */\n      0x04\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2348:2362  return _symbol */\n      dup1\n      sload\n      tag_98\n      swap1\n      tag_99\n      jump\t// in\n        /* \"contracts/Erc20MNTK.sol\":1013:1517  function transfer(address to, uint value) public virtual override returns(bool) {... */\n    tag_77:\n        /* \"contracts/Erc20MNTK.sol\":1087:1091  bool */\n      0x00\n        /* \"contracts/Erc20MNTK.sol\":1136:1139  100 */\n      0x64\n        /* \"contracts/Erc20MNTK.sol\":1125:1134  5 * value */\n      tag_153\n        /* \"contracts/Erc20MNTK.sol\":1129:1134  value */\n      dup4\n        /* \"contracts/Erc20MNTK.sol\":1125:1126  5 */\n      0x05\n        /* \"contracts/Erc20MNTK.sol\":1125:1134  5 * value */\n      tag_129\n      jump\t// in\n    tag_153:\n        /* \"contracts/Erc20MNTK.sol\":1124:1139  (5 * value)/100 */\n      tag_154\n      swap2\n      swap1\n      tag_155\n      jump\t// in\n    tag_154:\n        /* \"contracts/Erc20MNTK.sol\":1103:1121  currentTaxDeducted */\n      0x07\n        /* \"contracts/Erc20MNTK.sol\":1103:1139  currentTaxDeducted = (5 * value)/100 */\n      dup2\n      swap1\n      sstore\n        /* \"contracts/Erc20MNTK.sol\":1149:1168  uint transferAmount */\n      0x00\n      swap1\n        /* \"contracts/Erc20MNTK.sol\":1171:1197  value - currentTaxDeducted */\n      tag_156\n      swap1\n        /* \"contracts/Erc20MNTK.sol\":1171:1176  value */\n      dup5\n        /* \"contracts/Erc20MNTK.sol\":1171:1197  value - currentTaxDeducted */\n      tag_157\n      jump\t// in\n    tag_156:\n        /* \"contracts/Erc20MNTK.sol\":1149:1197  uint transferAmount = value - currentTaxDeducted */\n      swap1\n      pop\n        /* \"contracts/Erc20MNTK.sol\":1247:1265  currentTaxDeducted */\n      sload(0x07)\n        /* \"contracts/Erc20MNTK.sol\":1227:1244  grossTaxCollected */\n      sload(0x08)\n        /* \"contracts/Erc20MNTK.sol\":1227:1265  grossTaxCollected + currentTaxDeducted */\n      tag_158\n      swap2\n      swap1\n      tag_159\n      jump\t// in\n    tag_158:\n        /* \"contracts/Erc20MNTK.sol\":1207:1224  grossTaxCollected */\n      0x08\n        /* \"contracts/Erc20MNTK.sol\":1207:1265  grossTaxCollected = grossTaxCollected + currentTaxDeducted */\n      sstore\n        /* \"contracts/Erc20MNTK.sol\":1299:1311  taxCollector */\n      sload(0x06)\n        /* \"contracts/Erc20MNTK.sol\":1357:1375  currentTaxDeducted */\n      sload(0x07)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Erc20MNTK.sol\":1299:1311  taxCollector */\n      swap1\n      swap2\n      and\n      swap1\n        /* \"contracts/Erc20MNTK.sol\":1321:1376  _transfer(msg.sender, taxCollector, currentTaxDeducted) */\n      tag_160\n      swap1\n        /* \"contracts/Erc20MNTK.sol\":1331:1341  msg.sender */\n      caller\n      swap1\n        /* \"contracts/Erc20MNTK.sol\":1299:1311  taxCollector */\n      dup4\n      swap1\n        /* \"contracts/Erc20MNTK.sol\":1321:1330  _transfer */\n      tag_115\n        /* \"contracts/Erc20MNTK.sol\":1321:1376  _transfer(msg.sender, taxCollector, currentTaxDeducted) */\n      jump\t// in\n    tag_160:\n        /* \"contracts/Erc20MNTK.sol\":1386:1427  _transfer(msg.sender, to, transferAmount) */\n      tag_161\n        /* \"contracts/Erc20MNTK.sol\":1396:1406  msg.sender */\n      caller\n        /* \"contracts/Erc20MNTK.sol\":1408:1410  to */\n      dup7\n        /* \"contracts/Erc20MNTK.sol\":1412:1426  transferAmount */\n      dup5\n        /* \"contracts/Erc20MNTK.sol\":1386:1395  _transfer */\n      tag_115\n        /* \"contracts/Erc20MNTK.sol\":1386:1427  _transfer(msg.sender, to, transferAmount) */\n      jump\t// in\n    tag_161:\n        /* \"contracts/Erc20MNTK.sol\":1470:1488  currentTaxDeducted */\n      sload(0x07)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Erc20MNTK.sol\":1437:1462  _taxRecord[_taxCollector] */\n      dup1\n      dup4\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/Erc20MNTK.sol\":1437:1447  _taxRecord */\n      0x09\n        /* \"contracts/Erc20MNTK.sol\":1437:1462  _taxRecord[_taxCollector] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"contracts/Erc20MNTK.sol\":1437:1466  _taxRecord[_taxCollector][to] */\n      swap4\n      dup11\n      and\n      dup4\n      mstore\n      swap3\n      swap1\n      mstore\n      swap1\n      dup2\n      keccak256\n        /* \"contracts/Erc20MNTK.sol\":1437:1488  _taxRecord[_taxCollector][to] += currentTaxDeducted */\n      dup1\n      sload\n        /* \"contracts/Erc20MNTK.sol\":1437:1466  _taxRecord[_taxCollector][to] */\n      swap1\n      swap2\n        /* \"contracts/Erc20MNTK.sol\":1437:1462  _taxRecord[_taxCollector] */\n      swap1\n        /* \"contracts/Erc20MNTK.sol\":1437:1488  _taxRecord[_taxCollector][to] += currentTaxDeducted */\n      tag_162\n      swap1\n        /* \"contracts/Erc20MNTK.sol\":1470:1488  currentTaxDeducted */\n      dup5\n      swap1\n        /* \"contracts/Erc20MNTK.sol\":1437:1488  _taxRecord[_taxCollector][to] += currentTaxDeducted */\n      tag_159\n      jump\t// in\n    tag_162:\n      swap1\n      swap2\n      sstore\n      pop\n        /* \"contracts/Erc20MNTK.sol\":1505:1509  true */\n      0x01\n      swap7\n        /* \"contracts/Erc20MNTK.sol\":1013:1517  function transfer(address to, uint value) public virtual override returns(bool) {... */\n      swap6\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_96:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_165\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_119\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_165:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2649  newOwner == address(0) */\n      dup2\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n      tag_167\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2672:2703  OwnableInvalidOwner(address(0)) */\n      mload(0x40)\n      shl(0xe0, 0x1e4fbdf7)\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2700:2701  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2672:2703  OwnableInvalidOwner(address(0)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":2422:2473   */\n      mstore\n        /* \"#utility.yul\":2395:2413   */\n      0x24\n      add\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2672:2703  OwnableInvalidOwner(address(0)) */\n      tag_122\n        /* \"#utility.yul\":2276:2479   */\n      jump\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n    tag_167:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      tag_132\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2742:2750  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2741  _transferOwnership */\n      tag_140\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8989:9117  function _approve(address owner, address spender, uint256 value) internal {... */\n    tag_108:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9073:9110  _approve(owner, spender, value, true) */\n      tag_172\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9082:9087  owner */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9089:9096  spender */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9098:9103  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9105:9109  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9073:9081  _approve */\n      tag_173\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9073:9110  _approve(owner, spender, value, true) */\n      jump\t// in\n    tag_172:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8989:9117  function _approve(address owner, address spender, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10663:11140  function _spendAllowance(address owner, address spender, uint256 value) internal virtual {... */\n    tag_113:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3952:3970  _allowances[owner] */\n      dup4\n      dup2\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10762:10786  uint256 currentAllowance */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3952:3970  _allowances[owner] */\n      swap1\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3952:3963  _allowances */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3952:3970  _allowances[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3952:3979  _allowances[owner][spender] */\n      swap4\n      dup7\n      and\n      dup4\n      mstore\n      swap3\n      swap1\n      mstore\n      keccak256\n      sload\n      not(0x00)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10828:10865  currentAllowance != type(uint256).max */\n      dup2\n      eq\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10824:11134  if (currentAllowance != type(uint256).max) {... */\n      tag_180\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10904:10909  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10885:10901  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10885:10909  currentAllowance < value */\n      lt\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10881:11011  if (currentAllowance < value) {... */\n      iszero\n      tag_177\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10936:10996  ERC20InsufficientAllowance(spender, currentAllowance, value) */\n      mload(0x40)\n      shl(0xe1, 0x7dc7a0d9)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":5879:5911   */\n      dup5\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10936:10996  ERC20InsufficientAllowance(spender, currentAllowance, value) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":5861:5912   */\n      mstore\n        /* \"#utility.yul\":5928:5946   */\n      0x24\n      dup2\n      add\n        /* \"#utility.yul\":5921:5955   */\n      dup3\n      swap1\n      mstore\n        /* \"#utility.yul\":5971:5989   */\n      0x44\n      dup2\n      add\n        /* \"#utility.yul\":5964:5998   */\n      dup4\n      swap1\n      mstore\n        /* \"#utility.yul\":5834:5852   */\n      0x64\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10936:10996  ERC20InsufficientAllowance(spender, currentAllowance, value) */\n      tag_122\n        /* \"#utility.yul\":5659:6004   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10881:11011  if (currentAllowance < value) {... */\n    tag_177:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11052:11109  _approve(owner, spender, currentAllowance - value, false) */\n      tag_180\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11061:11066  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11068:11075  spender */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11096:11101  value */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11077:11093  currentAllowance */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11077:11101  currentAllowance - value */\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11103:11108  false */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11052:11060  _approve */\n      tag_173\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11052:11109  _approve(owner, spender, currentAllowance - value, false) */\n      jump\t// in\n    tag_180:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10752:11140  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10663:11140  function _spendAllowance(address owner, address spender, uint256 value) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5656:5956  function _transfer(address from, address to, uint256 value) internal {... */\n    tag_115:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5739:5757  from == address(0) */\n      dup4\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5735:5821  if (from == address(0)) {... */\n      tag_182\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5780:5810  ERC20InvalidSender(address(0)) */\n      mload(0x40)\n      shl(0xe1, 0x4b637e8f)\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5807:5808  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5780:5810  ERC20InvalidSender(address(0)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":2422:2473   */\n      mstore\n        /* \"#utility.yul\":2395:2413   */\n      0x24\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5780:5810  ERC20InvalidSender(address(0)) */\n      tag_122\n        /* \"#utility.yul\":2276:2479   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5735:5821  if (from == address(0)) {... */\n    tag_182:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5834:5850  to == address(0) */\n      dup3\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5830:5916  if (to == address(0)) {... */\n      tag_184\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5873:5905  ERC20InvalidReceiver(address(0)) */\n      mload(0x40)\n      shl(0xe0, 0xec442f05)\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5902:5903  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5873:5905  ERC20InvalidReceiver(address(0)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":2422:2473   */\n      mstore\n        /* \"#utility.yul\":2395:2413   */\n      0x24\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5873:5905  ERC20InvalidReceiver(address(0)) */\n      tag_122\n        /* \"#utility.yul\":2276:2479   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5830:5916  if (to == address(0)) {... */\n    tag_184:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5925:5949  _update(from, to, value) */\n      tag_172\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5933:5937  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5939:5941  to */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5943:5948  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5925:5932  _update */\n      tag_187\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5925:5949  _update(from, to, value) */\n      jump\t// in\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1796:1958  function _checkOwner() internal view virtual {... */\n    tag_119:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1710:1716  _owner */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x05))\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1878  owner() != _msgSender() */\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1851:1952  if (owner() != _msgSender()) {... */\n      tag_139\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1901:1941  OwnableUnauthorizedAccount(_msgSender()) */\n      mload(0x40)\n      shl(0xe0, 0x118cdaa7)\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1901:1941  OwnableUnauthorizedAccount(_msgSender()) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":2422:2473   */\n      mstore\n        /* \"#utility.yul\":2395:2413   */\n      0x24\n      add\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1901:1941  OwnableUnauthorizedAccount(_msgSender()) */\n      tag_122\n        /* \"#utility.yul\":2276:2479   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7721:7929  function _mint(address account, uint256 value) internal {... */\n    tag_130:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7791:7812  account == address(0) */\n      dup3\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7787:7878  if (account == address(0)) {... */\n      tag_195\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7835:7867  ERC20InvalidReceiver(address(0)) */\n      mload(0x40)\n      shl(0xe0, 0xec442f05)\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7864:7865  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7835:7867  ERC20InvalidReceiver(address(0)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":2422:2473   */\n      mstore\n        /* \"#utility.yul\":2395:2413   */\n      0x24\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7835:7867  ERC20InvalidReceiver(address(0)) */\n      tag_122\n        /* \"#utility.yul\":2276:2479   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7787:7878  if (account == address(0)) {... */\n    tag_195:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7887:7922  _update(address(0), account, value) */\n      tag_124\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7903:7904  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7907:7914  account */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7916:7921  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7887:7894  _update */\n      tag_187\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7887:7922  _update(address(0), account, value) */\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8247:8453  function _burn(address account, uint256 value) internal {... */\n    tag_134:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8317:8338  account == address(0) */\n      dup3\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8313:8402  if (account == address(0)) {... */\n      tag_199\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8361:8391  ERC20InvalidSender(address(0)) */\n      mload(0x40)\n      shl(0xe1, 0x4b637e8f)\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8388:8389  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8361:8391  ERC20InvalidSender(address(0)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":2422:2473   */\n      mstore\n        /* \"#utility.yul\":2395:2413   */\n      0x24\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8361:8391  ERC20InvalidSender(address(0)) */\n      tag_122\n        /* \"#utility.yul\":2276:2479   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8313:8402  if (account == address(0)) {... */\n    tag_199:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8411:8446  _update(account, address(0), value) */\n      tag_124\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8419:8426  account */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8436:8437  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8440:8445  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8411:8418  _update */\n      tag_187\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8411:8446  _update(account, address(0), value) */\n      jump\t// in\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_140:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n      0x05\n      dup1\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n      dup4\n      dup2\n      and\n      not(sub(shl(0xa0, 0x01), 0x01))\n      dup4\n      and\n      dup2\n      or\n      swap1\n      swap4\n      sstore\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      mload(0x40)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n      swap2\n      and\n      swap2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n      swap1\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n      dup3\n      swap1\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      swap1\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n      0x00\n      swap1\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      log3\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2975:3099  {... */\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9949:10381  function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {... */\n    tag_173:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10061:10080  owner == address(0) */\n      dup5\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10057:10146  if (owner == address(0)) {... */\n      tag_204\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10103:10135  ERC20InvalidApprover(address(0)) */\n      mload(0x40)\n      shl(0xe0, 0xe602df05)\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10132:10133  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10103:10135  ERC20InvalidApprover(address(0)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":2422:2473   */\n      mstore\n        /* \"#utility.yul\":2395:2413   */\n      0x24\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10103:10135  ERC20InvalidApprover(address(0)) */\n      tag_122\n        /* \"#utility.yul\":2276:2479   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10057:10146  if (owner == address(0)) {... */\n    tag_204:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10159:10180  spender == address(0) */\n      dup4\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10155:10245  if (spender == address(0)) {... */\n      tag_206\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10203:10234  ERC20InvalidSpender(address(0)) */\n      mload(0x40)\n      shl(0xe1, 0x4a1406b1)\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10231:10232  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10203:10234  ERC20InvalidSpender(address(0)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":2422:2473   */\n      mstore\n        /* \"#utility.yul\":2395:2413   */\n      0x24\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10203:10234  ERC20InvalidSpender(address(0)) */\n      tag_122\n        /* \"#utility.yul\":2276:2479   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10155:10245  if (spender == address(0)) {... */\n    tag_206:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10254:10272  _allowances[owner] */\n      dup1\n      dup6\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10254:10265  _allowances */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10254:10272  _allowances[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10254:10281  _allowances[owner][spender] */\n      swap4\n      dup8\n      and\n      dup4\n      mstore\n      swap3\n      swap1\n      mstore\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10254:10289  _allowances[owner][spender] = value */\n      dup3\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10299:10375  if (emitEvent) {... */\n      dup1\n      iszero\n      tag_180\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10349:10356  spender */\n      dup3\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10333:10364  Approval(owner, spender, value) */\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10342:10347  owner */\n      dup5\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10333:10364  Approval(owner, spender, value) */\n      and\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10358:10363  value */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10333:10364  Approval(owner, spender, value) */\n      mload(0x40)\n      tag_209\n      swap2\n        /* \"#utility.yul\":1342:1367   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1330:1332   */\n      0x20\n        /* \"#utility.yul\":1315:1333   */\n      add\n      swap1\n        /* \"#utility.yul\":1196:1373   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10333:10364  Approval(owner, spender, value) */\n    tag_209:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9949:10381  function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6271:7378  function _update(address from, address to, uint256 value) internal virtual {... */\n    tag_187:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6360:6378  from == address(0) */\n      dup4\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6356:6896  if (from == address(0)) {... */\n      tag_211\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6512:6517  value */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6496:6508  _totalSupply */\n      0x02\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6496:6517  _totalSupply += value */\n      dup3\n      dup3\n      sload\n      tag_212\n      swap2\n      swap1\n      tag_159\n      jump\t// in\n    tag_212:\n      swap1\n      swap2\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6356:6896  if (from == address(0)) {... */\n      tag_213\n      swap1\n      pop\n      jump\n    tag_211:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6570:6585  _balances[from] */\n      dup4\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6548:6567  uint256 fromBalance */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6570:6585  _balances[from] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6603:6622  fromBalance < value */\n      dup2\n      dup2\n      lt\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6599:6714  if (fromBalance < value) {... */\n      iszero\n      tag_214\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6649:6699  ERC20InsufficientBalance(from, fromBalance, value) */\n      mload(0x40)\n      shl(0xe2, 0x391434e3)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":5879:5911   */\n      dup6\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6649:6699  ERC20InsufficientBalance(from, fromBalance, value) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":5861:5912   */\n      mstore\n        /* \"#utility.yul\":5928:5946   */\n      0x24\n      dup2\n      add\n        /* \"#utility.yul\":5921:5955   */\n      dup3\n      swap1\n      mstore\n        /* \"#utility.yul\":5971:5989   */\n      0x44\n      dup2\n      add\n        /* \"#utility.yul\":5964:5998   */\n      dup4\n      swap1\n      mstore\n        /* \"#utility.yul\":5834:5852   */\n      0x64\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6649:6699  ERC20InsufficientBalance(from, fromBalance, value) */\n      tag_122\n        /* \"#utility.yul\":5659:6004   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6599:6714  if (fromBalance < value) {... */\n    tag_214:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6834:6849  _balances[from] */\n      dup5\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6834:6843  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6834:6849  _balances[from] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6852:6871  fromBalance - value */\n      swap1\n      dup3\n      swap1\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6834:6871  _balances[from] = fromBalance - value */\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6356:6896  if (from == address(0)) {... */\n    tag_213:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6910:6926  to == address(0) */\n      dup3\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6906:7331  if (to == address(0)) {... */\n      tag_216\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7073:7085  _totalSupply */\n      0x02\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7073:7094  _totalSupply -= value */\n      dup1\n      sload\n      dup3\n      swap1\n      sub\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6906:7331  if (to == address(0)) {... */\n      jump(tag_217)\n    tag_216:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7284:7297  _balances[to] */\n      dup3\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7284:7293  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7284:7297  _balances[to] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7284:7306  _balances[to] += value */\n      dup1\n      sload\n      dup3\n      add\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6906:7331  if (to == address(0)) {... */\n    tag_217:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7361:7363  to */\n      dup2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7346:7371  Transfer(from, to, value) */\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7355:7359  from */\n      dup4\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7346:7371  Transfer(from, to, value) */\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7365:7370  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7346:7371  Transfer(from, to, value) */\n      mload(0x40)\n      tag_218\n      swap2\n        /* \"#utility.yul\":1342:1367   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1330:1332   */\n      0x20\n        /* \"#utility.yul\":1315:1333   */\n      add\n      swap1\n        /* \"#utility.yul\":1196:1373   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7346:7371  Transfer(from, to, value) */\n    tag_218:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6271:7378  function _update(address from, address to, uint256 value) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14:562   */\n    tag_28:\n        /* \"#utility.yul\":126:130   */\n      0x00\n        /* \"#utility.yul\":155:157   */\n      0x20\n        /* \"#utility.yul\":184:186   */\n      dup1\n        /* \"#utility.yul\":173:182   */\n      dup4\n        /* \"#utility.yul\":166:187   */\n      mstore\n        /* \"#utility.yul\":216:222   */\n      dup4\n        /* \"#utility.yul\":210:223   */\n      mload\n        /* \"#utility.yul\":259:265   */\n      dup1\n        /* \"#utility.yul\":254:256   */\n      0x20\n        /* \"#utility.yul\":243:252   */\n      dup6\n        /* \"#utility.yul\":239:257   */\n      add\n        /* \"#utility.yul\":232:266   */\n      mstore\n        /* \"#utility.yul\":284:285   */\n      0x00\n        /* \"#utility.yul\":294:434   */\n    tag_225:\n        /* \"#utility.yul\":308:314   */\n      dup2\n        /* \"#utility.yul\":305:306   */\n      dup2\n        /* \"#utility.yul\":302:315   */\n      lt\n        /* \"#utility.yul\":294:434   */\n      iszero\n      tag_227\n      jumpi\n        /* \"#utility.yul\":403:417   */\n      dup6\n      dup2\n      add\n        /* \"#utility.yul\":399:422   */\n      dup4\n      add\n        /* \"#utility.yul\":393:423   */\n      mload\n        /* \"#utility.yul\":369:386   */\n      dup6\n      dup3\n      add\n        /* \"#utility.yul\":388:390   */\n      0x40\n        /* \"#utility.yul\":365:391   */\n      add\n        /* \"#utility.yul\":358:424   */\n      mstore\n        /* \"#utility.yul\":323:333   */\n      dup3\n      add\n        /* \"#utility.yul\":294:434   */\n      jump(tag_225)\n    tag_227:\n        /* \"#utility.yul\":298:301   */\n      pop\n        /* \"#utility.yul\":483:484   */\n      0x00\n        /* \"#utility.yul\":478:480   */\n      0x40\n        /* \"#utility.yul\":469:475   */\n      dup3\n        /* \"#utility.yul\":458:467   */\n      dup7\n        /* \"#utility.yul\":454:476   */\n      add\n        /* \"#utility.yul\":450:481   */\n      add\n        /* \"#utility.yul\":443:485   */\n      mstore\n        /* \"#utility.yul\":553:555   */\n      0x40\n        /* \"#utility.yul\":546:548   */\n      0x1f\n        /* \"#utility.yul\":542:549   */\n      not\n        /* \"#utility.yul\":537:539   */\n      0x1f\n        /* \"#utility.yul\":529:535   */\n      dup4\n        /* \"#utility.yul\":525:540   */\n      add\n        /* \"#utility.yul\":521:550   */\n      and\n        /* \"#utility.yul\":510:519   */\n      dup6\n        /* \"#utility.yul\":506:551   */\n      add\n        /* \"#utility.yul\":502:556   */\n      add\n        /* \"#utility.yul\":494:556   */\n      swap3\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":14:562   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":567:740   */\n    tag_219:\n        /* \"#utility.yul\":635:655   */\n      dup1\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":684:715   */\n      dup2\n      and\n        /* \"#utility.yul\":674:716   */\n      dup2\n      eq\n        /* \"#utility.yul\":664:734   */\n      tag_229\n      jumpi\n        /* \"#utility.yul\":730:731   */\n      0x00\n        /* \"#utility.yul\":727:728   */\n      dup1\n        /* \"#utility.yul\":720:732   */\n      revert\n        /* \"#utility.yul\":664:734   */\n    tag_229:\n        /* \"#utility.yul\":567:740   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":745:999   */\n    tag_31:\n        /* \"#utility.yul\":813:819   */\n      0x00\n        /* \"#utility.yul\":821:827   */\n      dup1\n        /* \"#utility.yul\":874:876   */\n      0x40\n        /* \"#utility.yul\":862:871   */\n      dup4\n        /* \"#utility.yul\":853:860   */\n      dup6\n        /* \"#utility.yul\":849:872   */\n      sub\n        /* \"#utility.yul\":845:877   */\n      slt\n        /* \"#utility.yul\":842:894   */\n      iszero\n      tag_231\n      jumpi\n        /* \"#utility.yul\":890:891   */\n      0x00\n        /* \"#utility.yul\":887:888   */\n      dup1\n        /* \"#utility.yul\":880:892   */\n      revert\n        /* \"#utility.yul\":842:894   */\n    tag_231:\n        /* \"#utility.yul\":913:942   */\n      tag_232\n        /* \"#utility.yul\":932:941   */\n      dup4\n        /* \"#utility.yul\":913:942   */\n      tag_219\n      jump\t// in\n    tag_232:\n        /* \"#utility.yul\":903:942   */\n      swap5\n        /* \"#utility.yul\":989:991   */\n      0x20\n        /* \"#utility.yul\":974:992   */\n      swap4\n      swap1\n      swap4\n      add\n        /* \"#utility.yul\":961:993   */\n      calldataload\n      swap4\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":745:999   */\n      jump\t// out\n        /* \"#utility.yul\":1378:1706   */\n    tag_41:\n        /* \"#utility.yul\":1455:1461   */\n      0x00\n        /* \"#utility.yul\":1463:1469   */\n      dup1\n        /* \"#utility.yul\":1471:1477   */\n      0x00\n        /* \"#utility.yul\":1524:1526   */\n      0x60\n        /* \"#utility.yul\":1512:1521   */\n      dup5\n        /* \"#utility.yul\":1503:1510   */\n      dup7\n        /* \"#utility.yul\":1499:1522   */\n      sub\n        /* \"#utility.yul\":1495:1527   */\n      slt\n        /* \"#utility.yul\":1492:1544   */\n      iszero\n      tag_236\n      jumpi\n        /* \"#utility.yul\":1540:1541   */\n      0x00\n        /* \"#utility.yul\":1537:1538   */\n      dup1\n        /* \"#utility.yul\":1530:1542   */\n      revert\n        /* \"#utility.yul\":1492:1544   */\n    tag_236:\n        /* \"#utility.yul\":1563:1592   */\n      tag_237\n        /* \"#utility.yul\":1582:1591   */\n      dup5\n        /* \"#utility.yul\":1563:1592   */\n      tag_219\n      jump\t// in\n    tag_237:\n        /* \"#utility.yul\":1553:1592   */\n      swap3\n      pop\n        /* \"#utility.yul\":1611:1649   */\n      tag_238\n        /* \"#utility.yul\":1645:1647   */\n      0x20\n        /* \"#utility.yul\":1634:1643   */\n      dup6\n        /* \"#utility.yul\":1630:1648   */\n      add\n        /* \"#utility.yul\":1611:1649   */\n      tag_219\n      jump\t// in\n    tag_238:\n        /* \"#utility.yul\":1601:1649   */\n      swap2\n      pop\n        /* \"#utility.yul\":1696:1698   */\n      0x40\n        /* \"#utility.yul\":1685:1694   */\n      dup5\n        /* \"#utility.yul\":1681:1699   */\n      add\n        /* \"#utility.yul\":1668:1700   */\n      calldataload\n        /* \"#utility.yul\":1658:1700   */\n      swap1\n      pop\n        /* \"#utility.yul\":1378:1706   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":1900:2080   */\n    tag_56:\n        /* \"#utility.yul\":1959:1965   */\n      0x00\n        /* \"#utility.yul\":2012:2014   */\n      0x20\n        /* \"#utility.yul\":2000:2009   */\n      dup3\n        /* \"#utility.yul\":1991:1998   */\n      dup5\n        /* \"#utility.yul\":1987:2010   */\n      sub\n        /* \"#utility.yul\":1983:2015   */\n      slt\n        /* \"#utility.yul\":1980:2032   */\n      iszero\n      tag_241\n      jumpi\n        /* \"#utility.yul\":2028:2029   */\n      0x00\n        /* \"#utility.yul\":2025:2026   */\n      dup1\n        /* \"#utility.yul\":2018:2030   */\n      revert\n        /* \"#utility.yul\":1980:2032   */\n    tag_241:\n      pop\n        /* \"#utility.yul\":2051:2074   */\n      calldataload\n      swap2\n        /* \"#utility.yul\":1900:2080   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2085:2271   */\n    tag_60:\n        /* \"#utility.yul\":2144:2150   */\n      0x00\n        /* \"#utility.yul\":2197:2199   */\n      0x20\n        /* \"#utility.yul\":2185:2194   */\n      dup3\n        /* \"#utility.yul\":2176:2183   */\n      dup5\n        /* \"#utility.yul\":2172:2195   */\n      sub\n        /* \"#utility.yul\":2168:2200   */\n      slt\n        /* \"#utility.yul\":2165:2217   */\n      iszero\n      tag_243\n      jumpi\n        /* \"#utility.yul\":2213:2214   */\n      0x00\n        /* \"#utility.yul\":2210:2211   */\n      dup1\n        /* \"#utility.yul\":2203:2215   */\n      revert\n        /* \"#utility.yul\":2165:2217   */\n    tag_243:\n        /* \"#utility.yul\":2236:2265   */\n      tag_244\n        /* \"#utility.yul\":2255:2264   */\n      dup3\n        /* \"#utility.yul\":2236:2265   */\n      tag_219\n      jump\t// in\n    tag_244:\n        /* \"#utility.yul\":2226:2265   */\n      swap4\n        /* \"#utility.yul\":2085:2271   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2484:2744   */\n    tag_81:\n        /* \"#utility.yul\":2552:2558   */\n      0x00\n        /* \"#utility.yul\":2560:2566   */\n      dup1\n        /* \"#utility.yul\":2613:2615   */\n      0x40\n        /* \"#utility.yul\":2601:2610   */\n      dup4\n        /* \"#utility.yul\":2592:2599   */\n      dup6\n        /* \"#utility.yul\":2588:2611   */\n      sub\n        /* \"#utility.yul\":2584:2616   */\n      slt\n        /* \"#utility.yul\":2581:2633   */\n      iszero\n      tag_247\n      jumpi\n        /* \"#utility.yul\":2629:2630   */\n      0x00\n        /* \"#utility.yul\":2626:2627   */\n      dup1\n        /* \"#utility.yul\":2619:2631   */\n      revert\n        /* \"#utility.yul\":2581:2633   */\n    tag_247:\n        /* \"#utility.yul\":2652:2681   */\n      tag_248\n        /* \"#utility.yul\":2671:2680   */\n      dup4\n        /* \"#utility.yul\":2652:2681   */\n      tag_219\n      jump\t// in\n    tag_248:\n        /* \"#utility.yul\":2642:2681   */\n      swap2\n      pop\n        /* \"#utility.yul\":2700:2738   */\n      tag_249\n        /* \"#utility.yul\":2734:2736   */\n      0x20\n        /* \"#utility.yul\":2723:2732   */\n      dup5\n        /* \"#utility.yul\":2719:2737   */\n      add\n        /* \"#utility.yul\":2700:2738   */\n      tag_219\n      jump\t// in\n    tag_249:\n        /* \"#utility.yul\":2690:2738   */\n      swap1\n      pop\n        /* \"#utility.yul\":2484:2744   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2749:3129   */\n    tag_99:\n        /* \"#utility.yul\":2828:2829   */\n      0x01\n        /* \"#utility.yul\":2824:2836   */\n      dup2\n      dup2\n      shr\n      swap1\n        /* \"#utility.yul\":2871:2883   */\n      dup3\n      and\n      dup1\n        /* \"#utility.yul\":2892:2953   */\n      tag_251\n      jumpi\n        /* \"#utility.yul\":2946:2950   */\n      0x7f\n        /* \"#utility.yul\":2938:2944   */\n      dup3\n        /* \"#utility.yul\":2934:2951   */\n      and\n        /* \"#utility.yul\":2924:2951   */\n      swap2\n      pop\n        /* \"#utility.yul\":2892:2953   */\n    tag_251:\n        /* \"#utility.yul\":2999:3001   */\n      0x20\n        /* \"#utility.yul\":2991:2997   */\n      dup3\n        /* \"#utility.yul\":2988:3002   */\n      lt\n        /* \"#utility.yul\":2968:2986   */\n      dup2\n        /* \"#utility.yul\":2965:3003   */\n      sub\n        /* \"#utility.yul\":2962:3123   */\n      tag_252\n      jumpi\n        /* \"#utility.yul\":3045:3055   */\n      0x4e487b71\n        /* \"#utility.yul\":3040:3043   */\n      0xe0\n        /* \"#utility.yul\":3036:3056   */\n      shl\n        /* \"#utility.yul\":3033:3034   */\n      0x00\n        /* \"#utility.yul\":3026:3057   */\n      mstore\n        /* \"#utility.yul\":3080:3084   */\n      0x22\n        /* \"#utility.yul\":3077:3078   */\n      0x04\n        /* \"#utility.yul\":3070:3085   */\n      mstore\n        /* \"#utility.yul\":3108:3112   */\n      0x24\n        /* \"#utility.yul\":3105:3106   */\n      0x00\n        /* \"#utility.yul\":3098:3113   */\n      revert\n        /* \"#utility.yul\":2962:3123   */\n    tag_252:\n      pop\n        /* \"#utility.yul\":2749:3129   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3492:3619   */\n    tag_220:\n        /* \"#utility.yul\":3553:3563   */\n      0x4e487b71\n        /* \"#utility.yul\":3548:3551   */\n      0xe0\n        /* \"#utility.yul\":3544:3564   */\n      shl\n        /* \"#utility.yul\":3541:3542   */\n      0x00\n        /* \"#utility.yul\":3534:3565   */\n      mstore\n        /* \"#utility.yul\":3584:3588   */\n      0x11\n        /* \"#utility.yul\":3581:3582   */\n      0x04\n        /* \"#utility.yul\":3574:3589   */\n      mstore\n        /* \"#utility.yul\":3608:3612   */\n      0x24\n        /* \"#utility.yul\":3605:3606   */\n      0x00\n        /* \"#utility.yul\":3598:3613   */\n      revert\n        /* \"#utility.yul\":3624:4040   */\n    tag_221:\n        /* \"#utility.yul\":3713:3714   */\n      0x01\n        /* \"#utility.yul\":3750:3755   */\n      dup2\n        /* \"#utility.yul\":3713:3714   */\n      dup2\n        /* \"#utility.yul\":3764:4034   */\n    tag_256:\n        /* \"#utility.yul\":3785:3792   */\n      dup1\n        /* \"#utility.yul\":3775:3783   */\n      dup6\n        /* \"#utility.yul\":3772:3793   */\n      gt\n        /* \"#utility.yul\":3764:4034   */\n      iszero\n      tag_258\n      jumpi\n        /* \"#utility.yul\":3844:3848   */\n      dup2\n        /* \"#utility.yul\":3840:3841   */\n      0x00\n        /* \"#utility.yul\":3836:3842   */\n      not\n        /* \"#utility.yul\":3832:3849   */\n      div\n        /* \"#utility.yul\":3826:3830   */\n      dup3\n        /* \"#utility.yul\":3823:3850   */\n      gt\n        /* \"#utility.yul\":3820:3873   */\n      iszero\n      tag_260\n      jumpi\n        /* \"#utility.yul\":3853:3871   */\n      tag_260\n      tag_220\n      jump\t// in\n    tag_260:\n        /* \"#utility.yul\":3903:3910   */\n      dup1\n        /* \"#utility.yul\":3893:3901   */\n      dup6\n        /* \"#utility.yul\":3889:3911   */\n      and\n        /* \"#utility.yul\":3886:3941   */\n      iszero\n      tag_261\n      jumpi\n        /* \"#utility.yul\":3923:3939   */\n      swap2\n      dup2\n      mul\n      swap2\n        /* \"#utility.yul\":3886:3941   */\n    tag_261:\n        /* \"#utility.yul\":4002:4024   */\n      swap4\n      dup5\n      shr\n      swap4\n        /* \"#utility.yul\":3962:3977   */\n      swap1\n      dup1\n      mul\n      swap1\n        /* \"#utility.yul\":3764:4034   */\n      jump(tag_256)\n    tag_258:\n        /* \"#utility.yul\":3768:3771   */\n      pop\n        /* \"#utility.yul\":3624:4040   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4045:4851   */\n    tag_222:\n        /* \"#utility.yul\":4094:4099   */\n      0x00\n        /* \"#utility.yul\":4124:4132   */\n      dup3\n        /* \"#utility.yul\":4114:4194   */\n      tag_263\n      jumpi\n      pop\n        /* \"#utility.yul\":4165:4166   */\n      0x01\n        /* \"#utility.yul\":4179:4184   */\n      jump(tag_104)\n        /* \"#utility.yul\":4114:4194   */\n    tag_263:\n        /* \"#utility.yul\":4213:4217   */\n      dup2\n        /* \"#utility.yul\":4203:4279   */\n      tag_264\n      jumpi\n      pop\n        /* \"#utility.yul\":4250:4251   */\n      0x00\n        /* \"#utility.yul\":4264:4269   */\n      jump(tag_104)\n        /* \"#utility.yul\":4203:4279   */\n    tag_264:\n        /* \"#utility.yul\":4295:4299   */\n      dup2\n        /* \"#utility.yul\":4313:4314   */\n      0x01\n        /* \"#utility.yul\":4308:4367   */\n      dup2\n      eq\n      tag_266\n      jumpi\n        /* \"#utility.yul\":4381:4382   */\n      0x02\n        /* \"#utility.yul\":4376:4506   */\n      dup2\n      eq\n      tag_267\n      jumpi\n        /* \"#utility.yul\":4288:4506   */\n      jump(tag_265)\n        /* \"#utility.yul\":4308:4367   */\n    tag_266:\n        /* \"#utility.yul\":4338:4339   */\n      0x01\n        /* \"#utility.yul\":4329:4339   */\n      swap2\n      pop\n        /* \"#utility.yul\":4352:4357   */\n      pop\n      jump(tag_104)\n        /* \"#utility.yul\":4376:4506   */\n    tag_267:\n        /* \"#utility.yul\":4413:4416   */\n      0xff\n        /* \"#utility.yul\":4403:4411   */\n      dup5\n        /* \"#utility.yul\":4400:4417   */\n      gt\n        /* \"#utility.yul\":4397:4440   */\n      iszero\n      tag_269\n      jumpi\n        /* \"#utility.yul\":4420:4438   */\n      tag_269\n      tag_220\n      jump\t// in\n    tag_269:\n      pop\n      pop\n        /* \"#utility.yul\":4476:4477   */\n      0x01\n        /* \"#utility.yul\":4462:4478   */\n      dup3\n      shl\n        /* \"#utility.yul\":4491:4496   */\n      jump(tag_104)\n        /* \"#utility.yul\":4288:4506   */\n    tag_265:\n      pop\n        /* \"#utility.yul\":4590:4592   */\n      0x20\n        /* \"#utility.yul\":4580:4588   */\n      dup4\n        /* \"#utility.yul\":4577:4593   */\n      lt\n        /* \"#utility.yul\":4571:4574   */\n      0x0133\n        /* \"#utility.yul\":4565:4569   */\n      dup4\n        /* \"#utility.yul\":4562:4575   */\n      lt\n        /* \"#utility.yul\":4558:4594   */\n      and\n        /* \"#utility.yul\":4552:4554   */\n      0x4e\n        /* \"#utility.yul\":4542:4550   */\n      dup5\n        /* \"#utility.yul\":4539:4555   */\n      lt\n        /* \"#utility.yul\":4534:4536   */\n      0x0b\n        /* \"#utility.yul\":4528:4532   */\n      dup5\n        /* \"#utility.yul\":4525:4537   */\n      lt\n        /* \"#utility.yul\":4521:4556   */\n      and\n        /* \"#utility.yul\":4518:4595   */\n      or\n        /* \"#utility.yul\":4515:4674   */\n      iszero\n      tag_270\n      jumpi\n      pop\n        /* \"#utility.yul\":4627:4646   */\n      dup2\n      dup2\n      exp\n        /* \"#utility.yul\":4659:4664   */\n      jump(tag_104)\n        /* \"#utility.yul\":4515:4674   */\n    tag_270:\n        /* \"#utility.yul\":4706:4740   */\n      tag_271\n        /* \"#utility.yul\":4731:4739   */\n      dup4\n        /* \"#utility.yul\":4725:4729   */\n      dup4\n        /* \"#utility.yul\":4706:4740   */\n      tag_221\n      jump\t// in\n    tag_271:\n        /* \"#utility.yul\":4776:4782   */\n      dup1\n        /* \"#utility.yul\":4772:4773   */\n      0x00\n        /* \"#utility.yul\":4768:4774   */\n      not\n        /* \"#utility.yul\":4764:4783   */\n      div\n        /* \"#utility.yul\":4755:4762   */\n      dup3\n        /* \"#utility.yul\":4752:4784   */\n      gt\n        /* \"#utility.yul\":4749:4807   */\n      iszero\n      tag_273\n      jumpi\n        /* \"#utility.yul\":4787:4805   */\n      tag_273\n      tag_220\n      jump\t// in\n    tag_273:\n        /* \"#utility.yul\":4825:4845   */\n      mul\n      swap4\n        /* \"#utility.yul\":4045:4851   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4856:4996   */\n    tag_127:\n        /* \"#utility.yul\":4914:4919   */\n      0x00\n        /* \"#utility.yul\":4943:4990   */\n      tag_244\n        /* \"#utility.yul\":4984:4988   */\n      0xff\n        /* \"#utility.yul\":4974:4982   */\n      dup5\n        /* \"#utility.yul\":4970:4989   */\n      and\n        /* \"#utility.yul\":4964:4968   */\n      dup4\n        /* \"#utility.yul\":4943:4990   */\n      tag_222\n      jump\t// in\n        /* \"#utility.yul\":5001:5169   */\n    tag_129:\n        /* \"#utility.yul\":5074:5083   */\n      dup1\n      dup3\n      mul\n        /* \"#utility.yul\":5105:5114   */\n      dup2\n      iszero\n        /* \"#utility.yul\":5122:5137   */\n      dup3\n      dup3\n      div\n        /* \"#utility.yul\":5116:5138   */\n      dup5\n      eq\n        /* \"#utility.yul\":5102:5139   */\n      or\n        /* \"#utility.yul\":5092:5163   */\n      tag_104\n      jumpi\n        /* \"#utility.yul\":5143:5161   */\n      tag_104\n      tag_220\n      jump\t// in\n        /* \"#utility.yul\":5174:5391   */\n    tag_155:\n        /* \"#utility.yul\":5214:5215   */\n      0x00\n        /* \"#utility.yul\":5240:5241   */\n      dup3\n        /* \"#utility.yul\":5230:5362   */\n      tag_280\n      jumpi\n        /* \"#utility.yul\":5284:5294   */\n      0x4e487b71\n        /* \"#utility.yul\":5279:5282   */\n      0xe0\n        /* \"#utility.yul\":5275:5295   */\n      shl\n        /* \"#utility.yul\":5272:5273   */\n      0x00\n        /* \"#utility.yul\":5265:5296   */\n      mstore\n        /* \"#utility.yul\":5319:5323   */\n      0x12\n        /* \"#utility.yul\":5316:5317   */\n      0x04\n        /* \"#utility.yul\":5309:5324   */\n      mstore\n        /* \"#utility.yul\":5347:5351   */\n      0x24\n        /* \"#utility.yul\":5344:5345   */\n      0x00\n        /* \"#utility.yul\":5337:5352   */\n      revert\n        /* \"#utility.yul\":5230:5362   */\n    tag_280:\n      pop\n        /* \"#utility.yul\":5376:5385   */\n      div\n      swap1\n        /* \"#utility.yul\":5174:5391   */\n      jump\t// out\n        /* \"#utility.yul\":5396:5524   */\n    tag_157:\n        /* \"#utility.yul\":5463:5472   */\n      dup2\n      dup2\n      sub\n        /* \"#utility.yul\":5484:5495   */\n      dup2\n      dup2\n      gt\n        /* \"#utility.yul\":5481:5518   */\n      iszero\n      tag_104\n      jumpi\n        /* \"#utility.yul\":5498:5516   */\n      tag_104\n      tag_220\n      jump\t// in\n        /* \"#utility.yul\":5529:5654   */\n    tag_159:\n        /* \"#utility.yul\":5594:5603   */\n      dup1\n      dup3\n      add\n        /* \"#utility.yul\":5615:5625   */\n      dup1\n      dup3\n      gt\n        /* \"#utility.yul\":5612:5648   */\n      iszero\n      tag_104\n      jumpi\n        /* \"#utility.yul\":5628:5646   */\n      tag_104\n      tag_220\n      jump\t// in\n\n    auxdata: 0xa264697066735822122048bf5e24f5d5c9707227112533536fc041cb860ab255d8dd55c55df24f2dff7d64736f6c63430008170033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_1035": {
									"entryPoint": null,
									"id": 1035,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_336": {
									"entryPoint": null,
									"id": 336,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_50": {
									"entryPoint": null,
									"id": 50,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_mint_639": {
									"entryPoint": 372,
									"id": 639,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_transferOwnership_146": {
									"entryPoint": 291,
									"id": 146,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_update_606": {
									"entryPoint": 432,
									"id": 606,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@decimals_1074": {
									"entryPoint": null,
									"id": 1074,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"abi_decode_address_fromMemory": {
									"entryPoint": 735,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_uint256t_address_fromMemory": {
									"entryPoint": 763,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_dataslot_string_storage": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 1507,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_exp_helper": {
									"entryPoint": 1207,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"checked_exp_t_uint256_t_uint8": {
									"entryPoint": 1458,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_exp_unsigned": {
									"entryPoint": 1279,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 1481,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_string_storage": {
									"entryPoint": 903,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 983,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 845,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 1187,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 825,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:5791:8",
										"nodeType": "YulBlock",
										"src": "0:5791:8",
										"statements": [
											{
												"nativeSrc": "6:3:8",
												"nodeType": "YulBlock",
												"src": "6:3:8",
												"statements": []
											},
											{
												"body": {
													"nativeSrc": "74:117:8",
													"nodeType": "YulBlock",
													"src": "74:117:8",
													"statements": [
														{
															"nativeSrc": "84:22:8",
															"nodeType": "YulAssignment",
															"src": "84:22:8",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "99:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "99:6:8"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "93:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "93:5:8"
																},
																"nativeSrc": "93:13:8",
																"nodeType": "YulFunctionCall",
																"src": "93:13:8"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "84:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "84:5:8"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "169:16:8",
																"nodeType": "YulBlock",
																"src": "169:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "178:1:8",
																					"nodeType": "YulLiteral",
																					"src": "178:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "181:1:8",
																					"nodeType": "YulLiteral",
																					"src": "181:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "171:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "171:6:8"
																			},
																			"nativeSrc": "171:12:8",
																			"nodeType": "YulFunctionCall",
																			"src": "171:12:8"
																		},
																		"nativeSrc": "171:12:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "171:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "128:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "128:5:8"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "139:5:8",
																						"nodeType": "YulIdentifier",
																						"src": "139:5:8"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "154:3:8",
																										"nodeType": "YulLiteral",
																										"src": "154:3:8",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "159:1:8",
																										"nodeType": "YulLiteral",
																										"src": "159:1:8",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nativeSrc": "150:3:8",
																									"nodeType": "YulIdentifier",
																									"src": "150:3:8"
																								},
																								"nativeSrc": "150:11:8",
																								"nodeType": "YulFunctionCall",
																								"src": "150:11:8"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "163:1:8",
																								"nodeType": "YulLiteral",
																								"src": "163:1:8",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nativeSrc": "146:3:8",
																							"nodeType": "YulIdentifier",
																							"src": "146:3:8"
																						},
																						"nativeSrc": "146:19:8",
																						"nodeType": "YulFunctionCall",
																						"src": "146:19:8"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "135:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "135:3:8"
																				},
																				"nativeSrc": "135:31:8",
																				"nodeType": "YulFunctionCall",
																				"src": "135:31:8"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "125:2:8",
																			"nodeType": "YulIdentifier",
																			"src": "125:2:8"
																		},
																		"nativeSrc": "125:42:8",
																		"nodeType": "YulFunctionCall",
																		"src": "125:42:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "118:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "118:6:8"
																},
																"nativeSrc": "118:50:8",
																"nodeType": "YulFunctionCall",
																"src": "118:50:8"
															},
															"nativeSrc": "115:70:8",
															"nodeType": "YulIf",
															"src": "115:70:8"
														}
													]
												},
												"name": "abi_decode_address_fromMemory",
												"nativeSrc": "14:177:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "53:6:8",
														"nodeType": "YulTypedName",
														"src": "53:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "64:5:8",
														"nodeType": "YulTypedName",
														"src": "64:5:8",
														"type": ""
													}
												],
												"src": "14:177:8"
											},
											{
												"body": {
													"nativeSrc": "311:239:8",
													"nodeType": "YulBlock",
													"src": "311:239:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "357:16:8",
																"nodeType": "YulBlock",
																"src": "357:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "366:1:8",
																					"nodeType": "YulLiteral",
																					"src": "366:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "369:1:8",
																					"nodeType": "YulLiteral",
																					"src": "369:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "359:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "359:6:8"
																			},
																			"nativeSrc": "359:12:8",
																			"nodeType": "YulFunctionCall",
																			"src": "359:12:8"
																		},
																		"nativeSrc": "359:12:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "359:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "332:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "332:7:8"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "341:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "341:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "328:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "328:3:8"
																		},
																		"nativeSrc": "328:23:8",
																		"nodeType": "YulFunctionCall",
																		"src": "328:23:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "353:2:8",
																		"nodeType": "YulLiteral",
																		"src": "353:2:8",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "324:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "324:3:8"
																},
																"nativeSrc": "324:32:8",
																"nodeType": "YulFunctionCall",
																"src": "324:32:8"
															},
															"nativeSrc": "321:52:8",
															"nodeType": "YulIf",
															"src": "321:52:8"
														},
														{
															"nativeSrc": "382:50:8",
															"nodeType": "YulAssignment",
															"src": "382:50:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "422:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "422:9:8"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address_fromMemory",
																	"nativeSrc": "392:29:8",
																	"nodeType": "YulIdentifier",
																	"src": "392:29:8"
																},
																"nativeSrc": "392:40:8",
																"nodeType": "YulFunctionCall",
																"src": "392:40:8"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "382:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "382:6:8"
																}
															]
														},
														{
															"nativeSrc": "441:35:8",
															"nodeType": "YulAssignment",
															"src": "441:35:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "461:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "461:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "472:2:8",
																				"nodeType": "YulLiteral",
																				"src": "472:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "457:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "457:3:8"
																		},
																		"nativeSrc": "457:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "457:18:8"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "451:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "451:5:8"
																},
																"nativeSrc": "451:25:8",
																"nodeType": "YulFunctionCall",
																"src": "451:25:8"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "441:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "441:6:8"
																}
															]
														},
														{
															"nativeSrc": "485:59:8",
															"nodeType": "YulAssignment",
															"src": "485:59:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "529:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "529:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "540:2:8",
																				"nodeType": "YulLiteral",
																				"src": "540:2:8",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "525:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "525:3:8"
																		},
																		"nativeSrc": "525:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "525:18:8"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address_fromMemory",
																	"nativeSrc": "495:29:8",
																	"nodeType": "YulIdentifier",
																	"src": "495:29:8"
																},
																"nativeSrc": "495:49:8",
																"nodeType": "YulFunctionCall",
																"src": "495:49:8"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nativeSrc": "485:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "485:6:8"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256t_address_fromMemory",
												"nativeSrc": "196:354:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "261:9:8",
														"nodeType": "YulTypedName",
														"src": "261:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "272:7:8",
														"nodeType": "YulTypedName",
														"src": "272:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "284:6:8",
														"nodeType": "YulTypedName",
														"src": "284:6:8",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "292:6:8",
														"nodeType": "YulTypedName",
														"src": "292:6:8",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "300:6:8",
														"nodeType": "YulTypedName",
														"src": "300:6:8",
														"type": ""
													}
												],
												"src": "196:354:8"
											},
											{
												"body": {
													"nativeSrc": "587:95:8",
													"nodeType": "YulBlock",
													"src": "587:95:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "604:1:8",
																		"nodeType": "YulLiteral",
																		"src": "604:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "611:3:8",
																				"nodeType": "YulLiteral",
																				"src": "611:3:8",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "616:10:8",
																				"nodeType": "YulLiteral",
																				"src": "616:10:8",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "607:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "607:3:8"
																		},
																		"nativeSrc": "607:20:8",
																		"nodeType": "YulFunctionCall",
																		"src": "607:20:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "597:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "597:6:8"
																},
																"nativeSrc": "597:31:8",
																"nodeType": "YulFunctionCall",
																"src": "597:31:8"
															},
															"nativeSrc": "597:31:8",
															"nodeType": "YulExpressionStatement",
															"src": "597:31:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "644:1:8",
																		"nodeType": "YulLiteral",
																		"src": "644:1:8",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "647:4:8",
																		"nodeType": "YulLiteral",
																		"src": "647:4:8",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "637:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "637:6:8"
																},
																"nativeSrc": "637:15:8",
																"nodeType": "YulFunctionCall",
																"src": "637:15:8"
															},
															"nativeSrc": "637:15:8",
															"nodeType": "YulExpressionStatement",
															"src": "637:15:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "668:1:8",
																		"nodeType": "YulLiteral",
																		"src": "668:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "671:4:8",
																		"nodeType": "YulLiteral",
																		"src": "671:4:8",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "661:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "661:6:8"
																},
																"nativeSrc": "661:15:8",
																"nodeType": "YulFunctionCall",
																"src": "661:15:8"
															},
															"nativeSrc": "661:15:8",
															"nodeType": "YulExpressionStatement",
															"src": "661:15:8"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "555:127:8",
												"nodeType": "YulFunctionDefinition",
												"src": "555:127:8"
											},
											{
												"body": {
													"nativeSrc": "742:325:8",
													"nodeType": "YulBlock",
													"src": "742:325:8",
													"statements": [
														{
															"nativeSrc": "752:22:8",
															"nodeType": "YulAssignment",
															"src": "752:22:8",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "766:1:8",
																		"nodeType": "YulLiteral",
																		"src": "766:1:8",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nativeSrc": "769:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "769:4:8"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "762:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "762:3:8"
																},
																"nativeSrc": "762:12:8",
																"nodeType": "YulFunctionCall",
																"src": "762:12:8"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "752:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "752:6:8"
																}
															]
														},
														{
															"nativeSrc": "783:38:8",
															"nodeType": "YulVariableDeclaration",
															"src": "783:38:8",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "813:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "813:4:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "819:1:8",
																		"nodeType": "YulLiteral",
																		"src": "819:1:8",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "809:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "809:3:8"
																},
																"nativeSrc": "809:12:8",
																"nodeType": "YulFunctionCall",
																"src": "809:12:8"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "787:18:8",
																	"nodeType": "YulTypedName",
																	"src": "787:18:8",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "860:31:8",
																"nodeType": "YulBlock",
																"src": "860:31:8",
																"statements": [
																	{
																		"nativeSrc": "862:27:8",
																		"nodeType": "YulAssignment",
																		"src": "862:27:8",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "876:6:8",
																					"nodeType": "YulIdentifier",
																					"src": "876:6:8"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "884:4:8",
																					"nodeType": "YulLiteral",
																					"src": "884:4:8",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "872:3:8",
																				"nodeType": "YulIdentifier",
																				"src": "872:3:8"
																			},
																			"nativeSrc": "872:17:8",
																			"nodeType": "YulFunctionCall",
																			"src": "872:17:8"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "862:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "862:6:8"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "840:18:8",
																		"nodeType": "YulIdentifier",
																		"src": "840:18:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "833:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "833:6:8"
																},
																"nativeSrc": "833:26:8",
																"nodeType": "YulFunctionCall",
																"src": "833:26:8"
															},
															"nativeSrc": "830:61:8",
															"nodeType": "YulIf",
															"src": "830:61:8"
														},
														{
															"body": {
																"nativeSrc": "950:111:8",
																"nodeType": "YulBlock",
																"src": "950:111:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "971:1:8",
																					"nodeType": "YulLiteral",
																					"src": "971:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "978:3:8",
																							"nodeType": "YulLiteral",
																							"src": "978:3:8",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "983:10:8",
																							"nodeType": "YulLiteral",
																							"src": "983:10:8",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nativeSrc": "974:3:8",
																						"nodeType": "YulIdentifier",
																						"src": "974:3:8"
																					},
																					"nativeSrc": "974:20:8",
																					"nodeType": "YulFunctionCall",
																					"src": "974:20:8"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "964:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "964:6:8"
																			},
																			"nativeSrc": "964:31:8",
																			"nodeType": "YulFunctionCall",
																			"src": "964:31:8"
																		},
																		"nativeSrc": "964:31:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "964:31:8"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1015:1:8",
																					"nodeType": "YulLiteral",
																					"src": "1015:1:8",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1018:4:8",
																					"nodeType": "YulLiteral",
																					"src": "1018:4:8",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "1008:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "1008:6:8"
																			},
																			"nativeSrc": "1008:15:8",
																			"nodeType": "YulFunctionCall",
																			"src": "1008:15:8"
																		},
																		"nativeSrc": "1008:15:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "1008:15:8"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1043:1:8",
																					"nodeType": "YulLiteral",
																					"src": "1043:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1046:4:8",
																					"nodeType": "YulLiteral",
																					"src": "1046:4:8",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1036:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "1036:6:8"
																			},
																			"nativeSrc": "1036:15:8",
																			"nodeType": "YulFunctionCall",
																			"src": "1036:15:8"
																		},
																		"nativeSrc": "1036:15:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "1036:15:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "906:18:8",
																		"nodeType": "YulIdentifier",
																		"src": "906:18:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "929:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "929:6:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "937:2:8",
																				"nodeType": "YulLiteral",
																				"src": "937:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "926:2:8",
																			"nodeType": "YulIdentifier",
																			"src": "926:2:8"
																		},
																		"nativeSrc": "926:14:8",
																		"nodeType": "YulFunctionCall",
																		"src": "926:14:8"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "903:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "903:2:8"
																},
																"nativeSrc": "903:38:8",
																"nodeType": "YulFunctionCall",
																"src": "903:38:8"
															},
															"nativeSrc": "900:161:8",
															"nodeType": "YulIf",
															"src": "900:161:8"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "687:380:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "722:4:8",
														"nodeType": "YulTypedName",
														"src": "722:4:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "731:6:8",
														"nodeType": "YulTypedName",
														"src": "731:6:8",
														"type": ""
													}
												],
												"src": "687:380:8"
											},
											{
												"body": {
													"nativeSrc": "1128:65:8",
													"nodeType": "YulBlock",
													"src": "1128:65:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1145:1:8",
																		"nodeType": "YulLiteral",
																		"src": "1145:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nativeSrc": "1148:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "1148:3:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1138:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "1138:6:8"
																},
																"nativeSrc": "1138:14:8",
																"nodeType": "YulFunctionCall",
																"src": "1138:14:8"
															},
															"nativeSrc": "1138:14:8",
															"nodeType": "YulExpressionStatement",
															"src": "1138:14:8"
														},
														{
															"nativeSrc": "1161:26:8",
															"nodeType": "YulAssignment",
															"src": "1161:26:8",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1179:1:8",
																		"nodeType": "YulLiteral",
																		"src": "1179:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1182:4:8",
																		"nodeType": "YulLiteral",
																		"src": "1182:4:8",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nativeSrc": "1169:9:8",
																	"nodeType": "YulIdentifier",
																	"src": "1169:9:8"
																},
																"nativeSrc": "1169:18:8",
																"nodeType": "YulFunctionCall",
																"src": "1169:18:8"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "1161:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "1161:4:8"
																}
															]
														}
													]
												},
												"name": "array_dataslot_string_storage",
												"nativeSrc": "1072:121:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "1111:3:8",
														"nodeType": "YulTypedName",
														"src": "1111:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nativeSrc": "1119:4:8",
														"nodeType": "YulTypedName",
														"src": "1119:4:8",
														"type": ""
													}
												],
												"src": "1072:121:8"
											},
											{
												"body": {
													"nativeSrc": "1279:437:8",
													"nodeType": "YulBlock",
													"src": "1279:437:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "1312:398:8",
																"nodeType": "YulBlock",
																"src": "1312:398:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1333:1:8",
																					"nodeType": "YulLiteral",
																					"src": "1333:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"name": "array",
																					"nativeSrc": "1336:5:8",
																					"nodeType": "YulIdentifier",
																					"src": "1336:5:8"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "1326:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "1326:6:8"
																			},
																			"nativeSrc": "1326:16:8",
																			"nodeType": "YulFunctionCall",
																			"src": "1326:16:8"
																		},
																		"nativeSrc": "1326:16:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "1326:16:8"
																	},
																	{
																		"nativeSrc": "1355:30:8",
																		"nodeType": "YulVariableDeclaration",
																		"src": "1355:30:8",
																		"value": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1377:1:8",
																					"nodeType": "YulLiteral",
																					"src": "1377:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1380:4:8",
																					"nodeType": "YulLiteral",
																					"src": "1380:4:8",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "keccak256",
																				"nativeSrc": "1367:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "1367:9:8"
																			},
																			"nativeSrc": "1367:18:8",
																			"nodeType": "YulFunctionCall",
																			"src": "1367:18:8"
																		},
																		"variables": [
																			{
																				"name": "data",
																				"nativeSrc": "1359:4:8",
																				"nodeType": "YulTypedName",
																				"src": "1359:4:8",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "1398:57:8",
																		"nodeType": "YulVariableDeclaration",
																		"src": "1398:57:8",
																		"value": {
																			"arguments": [
																				{
																					"name": "data",
																					"nativeSrc": "1421:4:8",
																					"nodeType": "YulIdentifier",
																					"src": "1421:4:8"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "1431:1:8",
																							"nodeType": "YulLiteral",
																							"src": "1431:1:8",
																							"type": "",
																							"value": "5"
																						},
																						{
																							"arguments": [
																								{
																									"name": "startIndex",
																									"nativeSrc": "1438:10:8",
																									"nodeType": "YulIdentifier",
																									"src": "1438:10:8"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "1450:2:8",
																									"nodeType": "YulLiteral",
																									"src": "1450:2:8",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "1434:3:8",
																								"nodeType": "YulIdentifier",
																								"src": "1434:3:8"
																							},
																							"nativeSrc": "1434:19:8",
																							"nodeType": "YulFunctionCall",
																							"src": "1434:19:8"
																						}
																					],
																					"functionName": {
																						"name": "shr",
																						"nativeSrc": "1427:3:8",
																						"nodeType": "YulIdentifier",
																						"src": "1427:3:8"
																					},
																					"nativeSrc": "1427:27:8",
																					"nodeType": "YulFunctionCall",
																					"src": "1427:27:8"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "1417:3:8",
																				"nodeType": "YulIdentifier",
																				"src": "1417:3:8"
																			},
																			"nativeSrc": "1417:38:8",
																			"nodeType": "YulFunctionCall",
																			"src": "1417:38:8"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nativeSrc": "1402:11:8",
																				"nodeType": "YulTypedName",
																				"src": "1402:11:8",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "1492:23:8",
																			"nodeType": "YulBlock",
																			"src": "1492:23:8",
																			"statements": [
																				{
																					"nativeSrc": "1494:19:8",
																					"nodeType": "YulAssignment",
																					"src": "1494:19:8",
																					"value": {
																						"name": "data",
																						"nativeSrc": "1509:4:8",
																						"nodeType": "YulIdentifier",
																						"src": "1509:4:8"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nativeSrc": "1494:11:8",
																							"nodeType": "YulIdentifier",
																							"src": "1494:11:8"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nativeSrc": "1474:10:8",
																					"nodeType": "YulIdentifier",
																					"src": "1474:10:8"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1486:4:8",
																					"nodeType": "YulLiteral",
																					"src": "1486:4:8",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nativeSrc": "1471:2:8",
																				"nodeType": "YulIdentifier",
																				"src": "1471:2:8"
																			},
																			"nativeSrc": "1471:20:8",
																			"nodeType": "YulFunctionCall",
																			"src": "1471:20:8"
																		},
																		"nativeSrc": "1468:47:8",
																		"nodeType": "YulIf",
																		"src": "1468:47:8"
																	},
																	{
																		"nativeSrc": "1528:41:8",
																		"nodeType": "YulVariableDeclaration",
																		"src": "1528:41:8",
																		"value": {
																			"arguments": [
																				{
																					"name": "data",
																					"nativeSrc": "1542:4:8",
																					"nodeType": "YulIdentifier",
																					"src": "1542:4:8"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "1552:1:8",
																							"nodeType": "YulLiteral",
																							"src": "1552:1:8",
																							"type": "",
																							"value": "5"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nativeSrc": "1559:3:8",
																									"nodeType": "YulIdentifier",
																									"src": "1559:3:8"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "1564:2:8",
																									"nodeType": "YulLiteral",
																									"src": "1564:2:8",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "1555:3:8",
																								"nodeType": "YulIdentifier",
																								"src": "1555:3:8"
																							},
																							"nativeSrc": "1555:12:8",
																							"nodeType": "YulFunctionCall",
																							"src": "1555:12:8"
																						}
																					],
																					"functionName": {
																						"name": "shr",
																						"nativeSrc": "1548:3:8",
																						"nodeType": "YulIdentifier",
																						"src": "1548:3:8"
																					},
																					"nativeSrc": "1548:20:8",
																					"nodeType": "YulFunctionCall",
																					"src": "1548:20:8"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "1538:3:8",
																				"nodeType": "YulIdentifier",
																				"src": "1538:3:8"
																			},
																			"nativeSrc": "1538:31:8",
																			"nodeType": "YulFunctionCall",
																			"src": "1538:31:8"
																		},
																		"variables": [
																			{
																				"name": "_1",
																				"nativeSrc": "1532:2:8",
																				"nodeType": "YulTypedName",
																				"src": "1532:2:8",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "1582:24:8",
																		"nodeType": "YulVariableDeclaration",
																		"src": "1582:24:8",
																		"value": {
																			"name": "deleteStart",
																			"nativeSrc": "1595:11:8",
																			"nodeType": "YulIdentifier",
																			"src": "1595:11:8"
																		},
																		"variables": [
																			{
																				"name": "start",
																				"nativeSrc": "1586:5:8",
																				"nodeType": "YulTypedName",
																				"src": "1586:5:8",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "1680:20:8",
																			"nodeType": "YulBlock",
																			"src": "1680:20:8",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [
																							{
																								"name": "start",
																								"nativeSrc": "1689:5:8",
																								"nodeType": "YulIdentifier",
																								"src": "1689:5:8"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "1696:1:8",
																								"nodeType": "YulLiteral",
																								"src": "1696:1:8",
																								"type": "",
																								"value": "0"
																							}
																						],
																						"functionName": {
																							"name": "sstore",
																							"nativeSrc": "1682:6:8",
																							"nodeType": "YulIdentifier",
																							"src": "1682:6:8"
																						},
																						"nativeSrc": "1682:16:8",
																						"nodeType": "YulFunctionCall",
																						"src": "1682:16:8"
																					},
																					"nativeSrc": "1682:16:8",
																					"nodeType": "YulExpressionStatement",
																					"src": "1682:16:8"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "1630:5:8",
																					"nodeType": "YulIdentifier",
																					"src": "1630:5:8"
																				},
																				{
																					"name": "_1",
																					"nativeSrc": "1637:2:8",
																					"nodeType": "YulIdentifier",
																					"src": "1637:2:8"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nativeSrc": "1627:2:8",
																				"nodeType": "YulIdentifier",
																				"src": "1627:2:8"
																			},
																			"nativeSrc": "1627:13:8",
																			"nodeType": "YulFunctionCall",
																			"src": "1627:13:8"
																		},
																		"nativeSrc": "1619:81:8",
																		"nodeType": "YulForLoop",
																		"post": {
																			"nativeSrc": "1641:26:8",
																			"nodeType": "YulBlock",
																			"src": "1641:26:8",
																			"statements": [
																				{
																					"nativeSrc": "1643:22:8",
																					"nodeType": "YulAssignment",
																					"src": "1643:22:8",
																					"value": {
																						"arguments": [
																							{
																								"name": "start",
																								"nativeSrc": "1656:5:8",
																								"nodeType": "YulIdentifier",
																								"src": "1656:5:8"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "1663:1:8",
																								"nodeType": "YulLiteral",
																								"src": "1663:1:8",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nativeSrc": "1652:3:8",
																							"nodeType": "YulIdentifier",
																							"src": "1652:3:8"
																						},
																						"nativeSrc": "1652:13:8",
																						"nodeType": "YulFunctionCall",
																						"src": "1652:13:8"
																					},
																					"variableNames": [
																						{
																							"name": "start",
																							"nativeSrc": "1643:5:8",
																							"nodeType": "YulIdentifier",
																							"src": "1643:5:8"
																						}
																					]
																				}
																			]
																		},
																		"pre": {
																			"nativeSrc": "1623:3:8",
																			"nodeType": "YulBlock",
																			"src": "1623:3:8",
																			"statements": []
																		},
																		"src": "1619:81:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nativeSrc": "1295:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "1295:3:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1300:2:8",
																		"nodeType": "YulLiteral",
																		"src": "1300:2:8",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "1292:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "1292:2:8"
																},
																"nativeSrc": "1292:11:8",
																"nodeType": "YulFunctionCall",
																"src": "1292:11:8"
															},
															"nativeSrc": "1289:421:8",
															"nodeType": "YulIf",
															"src": "1289:421:8"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_string_storage",
												"nativeSrc": "1198:518:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nativeSrc": "1251:5:8",
														"nodeType": "YulTypedName",
														"src": "1251:5:8",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "1258:3:8",
														"nodeType": "YulTypedName",
														"src": "1258:3:8",
														"type": ""
													},
													{
														"name": "startIndex",
														"nativeSrc": "1263:10:8",
														"nodeType": "YulTypedName",
														"src": "1263:10:8",
														"type": ""
													}
												],
												"src": "1198:518:8"
											},
											{
												"body": {
													"nativeSrc": "1806:81:8",
													"nodeType": "YulBlock",
													"src": "1806:81:8",
													"statements": [
														{
															"nativeSrc": "1816:65:8",
															"nodeType": "YulAssignment",
															"src": "1816:65:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nativeSrc": "1831:4:8",
																				"nodeType": "YulIdentifier",
																				"src": "1831:4:8"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "1849:1:8",
																										"nodeType": "YulLiteral",
																										"src": "1849:1:8",
																										"type": "",
																										"value": "3"
																									},
																									{
																										"name": "len",
																										"nativeSrc": "1852:3:8",
																										"nodeType": "YulIdentifier",
																										"src": "1852:3:8"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nativeSrc": "1845:3:8",
																									"nodeType": "YulIdentifier",
																									"src": "1845:3:8"
																								},
																								"nativeSrc": "1845:11:8",
																								"nodeType": "YulFunctionCall",
																								"src": "1845:11:8"
																							},
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "1862:1:8",
																										"nodeType": "YulLiteral",
																										"src": "1862:1:8",
																										"type": "",
																										"value": "0"
																									}
																								],
																								"functionName": {
																									"name": "not",
																									"nativeSrc": "1858:3:8",
																									"nodeType": "YulIdentifier",
																									"src": "1858:3:8"
																								},
																								"nativeSrc": "1858:6:8",
																								"nodeType": "YulFunctionCall",
																								"src": "1858:6:8"
																							}
																						],
																						"functionName": {
																							"name": "shr",
																							"nativeSrc": "1841:3:8",
																							"nodeType": "YulIdentifier",
																							"src": "1841:3:8"
																						},
																						"nativeSrc": "1841:24:8",
																						"nodeType": "YulFunctionCall",
																						"src": "1841:24:8"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "1837:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "1837:3:8"
																				},
																				"nativeSrc": "1837:29:8",
																				"nodeType": "YulFunctionCall",
																				"src": "1837:29:8"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "1827:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "1827:3:8"
																		},
																		"nativeSrc": "1827:40:8",
																		"nodeType": "YulFunctionCall",
																		"src": "1827:40:8"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "1873:1:8",
																				"nodeType": "YulLiteral",
																				"src": "1873:1:8",
																				"type": "",
																				"value": "1"
																			},
																			{
																				"name": "len",
																				"nativeSrc": "1876:3:8",
																				"nodeType": "YulIdentifier",
																				"src": "1876:3:8"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "1869:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "1869:3:8"
																		},
																		"nativeSrc": "1869:11:8",
																		"nodeType": "YulFunctionCall",
																		"src": "1869:11:8"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "1824:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "1824:2:8"
																},
																"nativeSrc": "1824:57:8",
																"nodeType": "YulFunctionCall",
																"src": "1824:57:8"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nativeSrc": "1816:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "1816:4:8"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nativeSrc": "1721:166:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "1783:4:8",
														"nodeType": "YulTypedName",
														"src": "1783:4:8",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "1789:3:8",
														"nodeType": "YulTypedName",
														"src": "1789:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nativeSrc": "1797:4:8",
														"nodeType": "YulTypedName",
														"src": "1797:4:8",
														"type": ""
													}
												],
												"src": "1721:166:8"
											},
											{
												"body": {
													"nativeSrc": "1988:1249:8",
													"nodeType": "YulBlock",
													"src": "1988:1249:8",
													"statements": [
														{
															"nativeSrc": "1998:24:8",
															"nodeType": "YulVariableDeclaration",
															"src": "1998:24:8",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "2018:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "2018:3:8"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "2012:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "2012:5:8"
																},
																"nativeSrc": "2012:10:8",
																"nodeType": "YulFunctionCall",
																"src": "2012:10:8"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nativeSrc": "2002:6:8",
																	"nodeType": "YulTypedName",
																	"src": "2002:6:8",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "2065:22:8",
																"nodeType": "YulBlock",
																"src": "2065:22:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "2067:16:8",
																				"nodeType": "YulIdentifier",
																				"src": "2067:16:8"
																			},
																			"nativeSrc": "2067:18:8",
																			"nodeType": "YulFunctionCall",
																			"src": "2067:18:8"
																		},
																		"nativeSrc": "2067:18:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "2067:18:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "2037:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "2037:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "2053:2:8",
																						"nodeType": "YulLiteral",
																						"src": "2053:2:8",
																						"type": "",
																						"value": "64"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "2057:1:8",
																						"nodeType": "YulLiteral",
																						"src": "2057:1:8",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nativeSrc": "2049:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "2049:3:8"
																				},
																				"nativeSrc": "2049:10:8",
																				"nodeType": "YulFunctionCall",
																				"src": "2049:10:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2061:1:8",
																				"nodeType": "YulLiteral",
																				"src": "2061:1:8",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2045:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "2045:3:8"
																		},
																		"nativeSrc": "2045:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "2045:18:8"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "2034:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "2034:2:8"
																},
																"nativeSrc": "2034:30:8",
																"nodeType": "YulFunctionCall",
																"src": "2034:30:8"
															},
															"nativeSrc": "2031:56:8",
															"nodeType": "YulIf",
															"src": "2031:56:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "2140:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "2140:4:8"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nativeSrc": "2178:4:8",
																						"nodeType": "YulIdentifier",
																						"src": "2178:4:8"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nativeSrc": "2172:5:8",
																					"nodeType": "YulIdentifier",
																					"src": "2172:5:8"
																				},
																				"nativeSrc": "2172:11:8",
																				"nodeType": "YulFunctionCall",
																				"src": "2172:11:8"
																			}
																		],
																		"functionName": {
																			"name": "extract_byte_array_length",
																			"nativeSrc": "2146:25:8",
																			"nodeType": "YulIdentifier",
																			"src": "2146:25:8"
																		},
																		"nativeSrc": "2146:38:8",
																		"nodeType": "YulFunctionCall",
																		"src": "2146:38:8"
																	},
																	{
																		"name": "newLen",
																		"nativeSrc": "2186:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "2186:6:8"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_string_storage",
																	"nativeSrc": "2096:43:8",
																	"nodeType": "YulIdentifier",
																	"src": "2096:43:8"
																},
																"nativeSrc": "2096:97:8",
																"nodeType": "YulFunctionCall",
																"src": "2096:97:8"
															},
															"nativeSrc": "2096:97:8",
															"nodeType": "YulExpressionStatement",
															"src": "2096:97:8"
														},
														{
															"nativeSrc": "2202:18:8",
															"nodeType": "YulVariableDeclaration",
															"src": "2202:18:8",
															"value": {
																"kind": "number",
																"nativeSrc": "2219:1:8",
																"nodeType": "YulLiteral",
																"src": "2219:1:8",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "2206:9:8",
																	"nodeType": "YulTypedName",
																	"src": "2206:9:8",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "2229:23:8",
															"nodeType": "YulVariableDeclaration",
															"src": "2229:23:8",
															"value": {
																"kind": "number",
																"nativeSrc": "2248:4:8",
																"nodeType": "YulLiteral",
																"src": "2248:4:8",
																"type": "",
																"value": "0x20"
															},
															"variables": [
																{
																	"name": "srcOffset_1",
																	"nativeSrc": "2233:11:8",
																	"nodeType": "YulTypedName",
																	"src": "2233:11:8",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "2261:17:8",
															"nodeType": "YulAssignment",
															"src": "2261:17:8",
															"value": {
																"kind": "number",
																"nativeSrc": "2274:4:8",
																"nodeType": "YulLiteral",
																"src": "2274:4:8",
																"type": "",
																"value": "0x20"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "2261:9:8",
																	"nodeType": "YulIdentifier",
																	"src": "2261:9:8"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "2324:656:8",
																		"nodeType": "YulBlock",
																		"src": "2324:656:8",
																		"statements": [
																			{
																				"nativeSrc": "2338:35:8",
																				"nodeType": "YulVariableDeclaration",
																				"src": "2338:35:8",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nativeSrc": "2357:6:8",
																							"nodeType": "YulIdentifier",
																							"src": "2357:6:8"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nativeSrc": "2369:2:8",
																									"nodeType": "YulLiteral",
																									"src": "2369:2:8",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nativeSrc": "2365:3:8",
																								"nodeType": "YulIdentifier",
																								"src": "2365:3:8"
																							},
																							"nativeSrc": "2365:7:8",
																							"nodeType": "YulFunctionCall",
																							"src": "2365:7:8"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nativeSrc": "2353:3:8",
																						"nodeType": "YulIdentifier",
																						"src": "2353:3:8"
																					},
																					"nativeSrc": "2353:20:8",
																					"nodeType": "YulFunctionCall",
																					"src": "2353:20:8"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nativeSrc": "2342:7:8",
																						"nodeType": "YulTypedName",
																						"src": "2342:7:8",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "2386:49:8",
																				"nodeType": "YulVariableDeclaration",
																				"src": "2386:49:8",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "2430:4:8",
																							"nodeType": "YulIdentifier",
																							"src": "2430:4:8"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_string_storage",
																						"nativeSrc": "2400:29:8",
																						"nodeType": "YulIdentifier",
																						"src": "2400:29:8"
																					},
																					"nativeSrc": "2400:35:8",
																					"nodeType": "YulFunctionCall",
																					"src": "2400:35:8"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nativeSrc": "2390:6:8",
																						"nodeType": "YulTypedName",
																						"src": "2390:6:8",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "2448:10:8",
																				"nodeType": "YulVariableDeclaration",
																				"src": "2448:10:8",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "2457:1:8",
																					"nodeType": "YulLiteral",
																					"src": "2457:1:8",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nativeSrc": "2452:1:8",
																						"nodeType": "YulTypedName",
																						"src": "2452:1:8",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "2535:172:8",
																					"nodeType": "YulBlock",
																					"src": "2535:172:8",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "2560:6:8",
																										"nodeType": "YulIdentifier",
																										"src": "2560:6:8"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nativeSrc": "2578:3:8",
																														"nodeType": "YulIdentifier",
																														"src": "2578:3:8"
																													},
																													{
																														"name": "srcOffset",
																														"nativeSrc": "2583:9:8",
																														"nodeType": "YulIdentifier",
																														"src": "2583:9:8"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nativeSrc": "2574:3:8",
																													"nodeType": "YulIdentifier",
																													"src": "2574:3:8"
																												},
																												"nativeSrc": "2574:19:8",
																												"nodeType": "YulFunctionCall",
																												"src": "2574:19:8"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nativeSrc": "2568:5:8",
																											"nodeType": "YulIdentifier",
																											"src": "2568:5:8"
																										},
																										"nativeSrc": "2568:26:8",
																										"nodeType": "YulFunctionCall",
																										"src": "2568:26:8"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "2553:6:8",
																									"nodeType": "YulIdentifier",
																									"src": "2553:6:8"
																								},
																								"nativeSrc": "2553:42:8",
																								"nodeType": "YulFunctionCall",
																								"src": "2553:42:8"
																							},
																							"nativeSrc": "2553:42:8",
																							"nodeType": "YulExpressionStatement",
																							"src": "2553:42:8"
																						},
																						{
																							"nativeSrc": "2612:24:8",
																							"nodeType": "YulAssignment",
																							"src": "2612:24:8",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "2626:6:8",
																										"nodeType": "YulIdentifier",
																										"src": "2626:6:8"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "2634:1:8",
																										"nodeType": "YulLiteral",
																										"src": "2634:1:8",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "2622:3:8",
																									"nodeType": "YulIdentifier",
																									"src": "2622:3:8"
																								},
																								"nativeSrc": "2622:14:8",
																								"nodeType": "YulFunctionCall",
																								"src": "2622:14:8"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nativeSrc": "2612:6:8",
																									"nodeType": "YulIdentifier",
																									"src": "2612:6:8"
																								}
																							]
																						},
																						{
																							"nativeSrc": "2653:40:8",
																							"nodeType": "YulAssignment",
																							"src": "2653:40:8",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nativeSrc": "2670:9:8",
																										"nodeType": "YulIdentifier",
																										"src": "2670:9:8"
																									},
																									{
																										"name": "srcOffset_1",
																										"nativeSrc": "2681:11:8",
																										"nodeType": "YulIdentifier",
																										"src": "2681:11:8"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "2666:3:8",
																									"nodeType": "YulIdentifier",
																									"src": "2666:3:8"
																								},
																								"nativeSrc": "2666:27:8",
																								"nodeType": "YulFunctionCall",
																								"src": "2666:27:8"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nativeSrc": "2653:9:8",
																									"nodeType": "YulIdentifier",
																									"src": "2653:9:8"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nativeSrc": "2482:1:8",
																							"nodeType": "YulIdentifier",
																							"src": "2482:1:8"
																						},
																						{
																							"name": "loopEnd",
																							"nativeSrc": "2485:7:8",
																							"nodeType": "YulIdentifier",
																							"src": "2485:7:8"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "2479:2:8",
																						"nodeType": "YulIdentifier",
																						"src": "2479:2:8"
																					},
																					"nativeSrc": "2479:14:8",
																					"nodeType": "YulFunctionCall",
																					"src": "2479:14:8"
																				},
																				"nativeSrc": "2471:236:8",
																				"nodeType": "YulForLoop",
																				"post": {
																					"nativeSrc": "2494:28:8",
																					"nodeType": "YulBlock",
																					"src": "2494:28:8",
																					"statements": [
																						{
																							"nativeSrc": "2496:24:8",
																							"nodeType": "YulAssignment",
																							"src": "2496:24:8",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nativeSrc": "2505:1:8",
																										"nodeType": "YulIdentifier",
																										"src": "2505:1:8"
																									},
																									{
																										"name": "srcOffset_1",
																										"nativeSrc": "2508:11:8",
																										"nodeType": "YulIdentifier",
																										"src": "2508:11:8"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "2501:3:8",
																									"nodeType": "YulIdentifier",
																									"src": "2501:3:8"
																								},
																								"nativeSrc": "2501:19:8",
																								"nodeType": "YulFunctionCall",
																								"src": "2501:19:8"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nativeSrc": "2496:1:8",
																									"nodeType": "YulIdentifier",
																									"src": "2496:1:8"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nativeSrc": "2475:3:8",
																					"nodeType": "YulBlock",
																					"src": "2475:3:8",
																					"statements": []
																				},
																				"src": "2471:236:8"
																			},
																			{
																				"body": {
																					"nativeSrc": "2755:166:8",
																					"nodeType": "YulBlock",
																					"src": "2755:166:8",
																					"statements": [
																						{
																							"nativeSrc": "2773:43:8",
																							"nodeType": "YulVariableDeclaration",
																							"src": "2773:43:8",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "2800:3:8",
																												"nodeType": "YulIdentifier",
																												"src": "2800:3:8"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "2805:9:8",
																												"nodeType": "YulIdentifier",
																												"src": "2805:9:8"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "2796:3:8",
																											"nodeType": "YulIdentifier",
																											"src": "2796:3:8"
																										},
																										"nativeSrc": "2796:19:8",
																										"nodeType": "YulFunctionCall",
																										"src": "2796:19:8"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "2790:5:8",
																									"nodeType": "YulIdentifier",
																									"src": "2790:5:8"
																								},
																								"nativeSrc": "2790:26:8",
																								"nodeType": "YulFunctionCall",
																								"src": "2790:26:8"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nativeSrc": "2777:9:8",
																									"nodeType": "YulTypedName",
																									"src": "2777:9:8",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "2840:6:8",
																										"nodeType": "YulIdentifier",
																										"src": "2840:6:8"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nativeSrc": "2852:9:8",
																												"nodeType": "YulIdentifier",
																												"src": "2852:9:8"
																											},
																											{
																												"arguments": [
																													{
																														"arguments": [
																															{
																																"arguments": [
																																	{
																																		"arguments": [
																																			{
																																				"kind": "number",
																																				"nativeSrc": "2879:1:8",
																																				"nodeType": "YulLiteral",
																																				"src": "2879:1:8",
																																				"type": "",
																																				"value": "3"
																																			},
																																			{
																																				"name": "newLen",
																																				"nativeSrc": "2882:6:8",
																																				"nodeType": "YulIdentifier",
																																				"src": "2882:6:8"
																																			}
																																		],
																																		"functionName": {
																																			"name": "shl",
																																			"nativeSrc": "2875:3:8",
																																			"nodeType": "YulIdentifier",
																																			"src": "2875:3:8"
																																		},
																																		"nativeSrc": "2875:14:8",
																																		"nodeType": "YulFunctionCall",
																																		"src": "2875:14:8"
																																	},
																																	{
																																		"kind": "number",
																																		"nativeSrc": "2891:3:8",
																																		"nodeType": "YulLiteral",
																																		"src": "2891:3:8",
																																		"type": "",
																																		"value": "248"
																																	}
																																],
																																"functionName": {
																																	"name": "and",
																																	"nativeSrc": "2871:3:8",
																																	"nodeType": "YulIdentifier",
																																	"src": "2871:3:8"
																																},
																																"nativeSrc": "2871:24:8",
																																"nodeType": "YulFunctionCall",
																																"src": "2871:24:8"
																															},
																															{
																																"arguments": [
																																	{
																																		"kind": "number",
																																		"nativeSrc": "2901:1:8",
																																		"nodeType": "YulLiteral",
																																		"src": "2901:1:8",
																																		"type": "",
																																		"value": "0"
																																	}
																																],
																																"functionName": {
																																	"name": "not",
																																	"nativeSrc": "2897:3:8",
																																	"nodeType": "YulIdentifier",
																																	"src": "2897:3:8"
																																},
																																"nativeSrc": "2897:6:8",
																																"nodeType": "YulFunctionCall",
																																"src": "2897:6:8"
																															}
																														],
																														"functionName": {
																															"name": "shr",
																															"nativeSrc": "2867:3:8",
																															"nodeType": "YulIdentifier",
																															"src": "2867:3:8"
																														},
																														"nativeSrc": "2867:37:8",
																														"nodeType": "YulFunctionCall",
																														"src": "2867:37:8"
																													}
																												],
																												"functionName": {
																													"name": "not",
																													"nativeSrc": "2863:3:8",
																													"nodeType": "YulIdentifier",
																													"src": "2863:3:8"
																												},
																												"nativeSrc": "2863:42:8",
																												"nodeType": "YulFunctionCall",
																												"src": "2863:42:8"
																											}
																										],
																										"functionName": {
																											"name": "and",
																											"nativeSrc": "2848:3:8",
																											"nodeType": "YulIdentifier",
																											"src": "2848:3:8"
																										},
																										"nativeSrc": "2848:58:8",
																										"nodeType": "YulFunctionCall",
																										"src": "2848:58:8"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "2833:6:8",
																									"nodeType": "YulIdentifier",
																									"src": "2833:6:8"
																								},
																								"nativeSrc": "2833:74:8",
																								"nodeType": "YulFunctionCall",
																								"src": "2833:74:8"
																							},
																							"nativeSrc": "2833:74:8",
																							"nodeType": "YulExpressionStatement",
																							"src": "2833:74:8"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nativeSrc": "2726:7:8",
																							"nodeType": "YulIdentifier",
																							"src": "2726:7:8"
																						},
																						{
																							"name": "newLen",
																							"nativeSrc": "2735:6:8",
																							"nodeType": "YulIdentifier",
																							"src": "2735:6:8"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "2723:2:8",
																						"nodeType": "YulIdentifier",
																						"src": "2723:2:8"
																					},
																					"nativeSrc": "2723:19:8",
																					"nodeType": "YulFunctionCall",
																					"src": "2723:19:8"
																				},
																				"nativeSrc": "2720:201:8",
																				"nodeType": "YulIf",
																				"src": "2720:201:8"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "2941:4:8",
																							"nodeType": "YulIdentifier",
																							"src": "2941:4:8"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"kind": "number",
																											"nativeSrc": "2955:1:8",
																											"nodeType": "YulLiteral",
																											"src": "2955:1:8",
																											"type": "",
																											"value": "1"
																										},
																										{
																											"name": "newLen",
																											"nativeSrc": "2958:6:8",
																											"nodeType": "YulIdentifier",
																											"src": "2958:6:8"
																										}
																									],
																									"functionName": {
																										"name": "shl",
																										"nativeSrc": "2951:3:8",
																										"nodeType": "YulIdentifier",
																										"src": "2951:3:8"
																									},
																									"nativeSrc": "2951:14:8",
																									"nodeType": "YulFunctionCall",
																									"src": "2951:14:8"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "2967:1:8",
																									"nodeType": "YulLiteral",
																									"src": "2967:1:8",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "2947:3:8",
																								"nodeType": "YulIdentifier",
																								"src": "2947:3:8"
																							},
																							"nativeSrc": "2947:22:8",
																							"nodeType": "YulFunctionCall",
																							"src": "2947:22:8"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "2934:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "2934:6:8"
																					},
																					"nativeSrc": "2934:36:8",
																					"nodeType": "YulFunctionCall",
																					"src": "2934:36:8"
																				},
																				"nativeSrc": "2934:36:8",
																				"nodeType": "YulExpressionStatement",
																				"src": "2934:36:8"
																			}
																		]
																	},
																	"nativeSrc": "2317:663:8",
																	"nodeType": "YulCase",
																	"src": "2317:663:8",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2322:1:8",
																		"nodeType": "YulLiteral",
																		"src": "2322:1:8",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "2997:234:8",
																		"nodeType": "YulBlock",
																		"src": "2997:234:8",
																		"statements": [
																			{
																				"nativeSrc": "3011:14:8",
																				"nodeType": "YulVariableDeclaration",
																				"src": "3011:14:8",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "3024:1:8",
																					"nodeType": "YulLiteral",
																					"src": "3024:1:8",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nativeSrc": "3015:5:8",
																						"nodeType": "YulTypedName",
																						"src": "3015:5:8",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "3060:67:8",
																					"nodeType": "YulBlock",
																					"src": "3060:67:8",
																					"statements": [
																						{
																							"nativeSrc": "3078:35:8",
																							"nodeType": "YulAssignment",
																							"src": "3078:35:8",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "3097:3:8",
																												"nodeType": "YulIdentifier",
																												"src": "3097:3:8"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "3102:9:8",
																												"nodeType": "YulIdentifier",
																												"src": "3102:9:8"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "3093:3:8",
																											"nodeType": "YulIdentifier",
																											"src": "3093:3:8"
																										},
																										"nativeSrc": "3093:19:8",
																										"nodeType": "YulFunctionCall",
																										"src": "3093:19:8"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "3087:5:8",
																									"nodeType": "YulIdentifier",
																									"src": "3087:5:8"
																								},
																								"nativeSrc": "3087:26:8",
																								"nodeType": "YulFunctionCall",
																								"src": "3087:26:8"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nativeSrc": "3078:5:8",
																									"nodeType": "YulIdentifier",
																									"src": "3078:5:8"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nativeSrc": "3041:6:8",
																					"nodeType": "YulIdentifier",
																					"src": "3041:6:8"
																				},
																				"nativeSrc": "3038:89:8",
																				"nodeType": "YulIf",
																				"src": "3038:89:8"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "3147:4:8",
																							"nodeType": "YulIdentifier",
																							"src": "3147:4:8"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nativeSrc": "3206:5:8",
																									"nodeType": "YulIdentifier",
																									"src": "3206:5:8"
																								},
																								{
																									"name": "newLen",
																									"nativeSrc": "3213:6:8",
																									"nodeType": "YulIdentifier",
																									"src": "3213:6:8"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nativeSrc": "3153:52:8",
																								"nodeType": "YulIdentifier",
																								"src": "3153:52:8"
																							},
																							"nativeSrc": "3153:67:8",
																							"nodeType": "YulFunctionCall",
																							"src": "3153:67:8"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "3140:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "3140:6:8"
																					},
																					"nativeSrc": "3140:81:8",
																					"nodeType": "YulFunctionCall",
																					"src": "3140:81:8"
																				},
																				"nativeSrc": "3140:81:8",
																				"nodeType": "YulExpressionStatement",
																				"src": "3140:81:8"
																			}
																		]
																	},
																	"nativeSrc": "2989:242:8",
																	"nodeType": "YulCase",
																	"src": "2989:242:8",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "2297:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "2297:6:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2305:2:8",
																		"nodeType": "YulLiteral",
																		"src": "2305:2:8",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "2294:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "2294:2:8"
																},
																"nativeSrc": "2294:14:8",
																"nodeType": "YulFunctionCall",
																"src": "2294:14:8"
															},
															"nativeSrc": "2287:944:8",
															"nodeType": "YulSwitch",
															"src": "2287:944:8"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nativeSrc": "1892:1345:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "1973:4:8",
														"nodeType": "YulTypedName",
														"src": "1973:4:8",
														"type": ""
													},
													{
														"name": "src",
														"nativeSrc": "1979:3:8",
														"nodeType": "YulTypedName",
														"src": "1979:3:8",
														"type": ""
													}
												],
												"src": "1892:1345:8"
											},
											{
												"body": {
													"nativeSrc": "3343:102:8",
													"nodeType": "YulBlock",
													"src": "3343:102:8",
													"statements": [
														{
															"nativeSrc": "3353:26:8",
															"nodeType": "YulAssignment",
															"src": "3353:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3365:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "3365:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3376:2:8",
																		"nodeType": "YulLiteral",
																		"src": "3376:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3361:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "3361:3:8"
																},
																"nativeSrc": "3361:18:8",
																"nodeType": "YulFunctionCall",
																"src": "3361:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3353:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "3353:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3395:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "3395:9:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "3410:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "3410:6:8"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "3426:3:8",
																								"nodeType": "YulLiteral",
																								"src": "3426:3:8",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "3431:1:8",
																								"nodeType": "YulLiteral",
																								"src": "3431:1:8",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "3422:3:8",
																							"nodeType": "YulIdentifier",
																							"src": "3422:3:8"
																						},
																						"nativeSrc": "3422:11:8",
																						"nodeType": "YulFunctionCall",
																						"src": "3422:11:8"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "3435:1:8",
																						"nodeType": "YulLiteral",
																						"src": "3435:1:8",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "3418:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "3418:3:8"
																				},
																				"nativeSrc": "3418:19:8",
																				"nodeType": "YulFunctionCall",
																				"src": "3418:19:8"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "3406:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "3406:3:8"
																		},
																		"nativeSrc": "3406:32:8",
																		"nodeType": "YulFunctionCall",
																		"src": "3406:32:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3388:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "3388:6:8"
																},
																"nativeSrc": "3388:51:8",
																"nodeType": "YulFunctionCall",
																"src": "3388:51:8"
															},
															"nativeSrc": "3388:51:8",
															"nodeType": "YulExpressionStatement",
															"src": "3388:51:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "3242:203:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3312:9:8",
														"nodeType": "YulTypedName",
														"src": "3312:9:8",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3323:6:8",
														"nodeType": "YulTypedName",
														"src": "3323:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3334:4:8",
														"nodeType": "YulTypedName",
														"src": "3334:4:8",
														"type": ""
													}
												],
												"src": "3242:203:8"
											},
											{
												"body": {
													"nativeSrc": "3482:95:8",
													"nodeType": "YulBlock",
													"src": "3482:95:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3499:1:8",
																		"nodeType": "YulLiteral",
																		"src": "3499:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "3506:3:8",
																				"nodeType": "YulLiteral",
																				"src": "3506:3:8",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3511:10:8",
																				"nodeType": "YulLiteral",
																				"src": "3511:10:8",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "3502:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "3502:3:8"
																		},
																		"nativeSrc": "3502:20:8",
																		"nodeType": "YulFunctionCall",
																		"src": "3502:20:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3492:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "3492:6:8"
																},
																"nativeSrc": "3492:31:8",
																"nodeType": "YulFunctionCall",
																"src": "3492:31:8"
															},
															"nativeSrc": "3492:31:8",
															"nodeType": "YulExpressionStatement",
															"src": "3492:31:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3539:1:8",
																		"nodeType": "YulLiteral",
																		"src": "3539:1:8",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3542:4:8",
																		"nodeType": "YulLiteral",
																		"src": "3542:4:8",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3532:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "3532:6:8"
																},
																"nativeSrc": "3532:15:8",
																"nodeType": "YulFunctionCall",
																"src": "3532:15:8"
															},
															"nativeSrc": "3532:15:8",
															"nodeType": "YulExpressionStatement",
															"src": "3532:15:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3563:1:8",
																		"nodeType": "YulLiteral",
																		"src": "3563:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3566:4:8",
																		"nodeType": "YulLiteral",
																		"src": "3566:4:8",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "3556:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "3556:6:8"
																},
																"nativeSrc": "3556:15:8",
																"nodeType": "YulFunctionCall",
																"src": "3556:15:8"
															},
															"nativeSrc": "3556:15:8",
															"nodeType": "YulExpressionStatement",
															"src": "3556:15:8"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "3450:127:8",
												"nodeType": "YulFunctionDefinition",
												"src": "3450:127:8"
											},
											{
												"body": {
													"nativeSrc": "3646:352:8",
													"nodeType": "YulBlock",
													"src": "3646:352:8",
													"statements": [
														{
															"nativeSrc": "3656:16:8",
															"nodeType": "YulVariableDeclaration",
															"src": "3656:16:8",
															"value": {
																"kind": "number",
																"nativeSrc": "3671:1:8",
																"nodeType": "YulLiteral",
																"src": "3671:1:8",
																"type": "",
																"value": "1"
															},
															"variables": [
																{
																	"name": "power_1",
																	"nativeSrc": "3660:7:8",
																	"nodeType": "YulTypedName",
																	"src": "3660:7:8",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "3681:10:8",
															"nodeType": "YulAssignment",
															"src": "3681:10:8",
															"value": {
																"kind": "number",
																"nativeSrc": "3690:1:8",
																"nodeType": "YulLiteral",
																"src": "3690:1:8",
																"type": "",
																"value": "1"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nativeSrc": "3681:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "3681:5:8"
																}
															]
														},
														{
															"nativeSrc": "3700:13:8",
															"nodeType": "YulAssignment",
															"src": "3700:13:8",
															"value": {
																"name": "_base",
																"nativeSrc": "3708:5:8",
																"nodeType": "YulIdentifier",
																"src": "3708:5:8"
															},
															"variableNames": [
																{
																	"name": "base",
																	"nativeSrc": "3700:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "3700:4:8"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "3764:228:8",
																"nodeType": "YulBlock",
																"src": "3764:228:8",
																"statements": [
																	{
																		"body": {
																			"nativeSrc": "3809:22:8",
																			"nodeType": "YulBlock",
																			"src": "3809:22:8",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [],
																						"functionName": {
																							"name": "panic_error_0x11",
																							"nativeSrc": "3811:16:8",
																							"nodeType": "YulIdentifier",
																							"src": "3811:16:8"
																						},
																						"nativeSrc": "3811:18:8",
																						"nodeType": "YulFunctionCall",
																						"src": "3811:18:8"
																					},
																					"nativeSrc": "3811:18:8",
																					"nodeType": "YulExpressionStatement",
																					"src": "3811:18:8"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "base",
																					"nativeSrc": "3784:4:8",
																					"nodeType": "YulIdentifier",
																					"src": "3784:4:8"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nativeSrc": "3798:1:8",
																									"nodeType": "YulLiteral",
																									"src": "3798:1:8",
																									"type": "",
																									"value": "0"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nativeSrc": "3794:3:8",
																								"nodeType": "YulIdentifier",
																								"src": "3794:3:8"
																							},
																							"nativeSrc": "3794:6:8",
																							"nodeType": "YulFunctionCall",
																							"src": "3794:6:8"
																						},
																						{
																							"name": "base",
																							"nativeSrc": "3802:4:8",
																							"nodeType": "YulIdentifier",
																							"src": "3802:4:8"
																						}
																					],
																					"functionName": {
																						"name": "div",
																						"nativeSrc": "3790:3:8",
																						"nodeType": "YulIdentifier",
																						"src": "3790:3:8"
																					},
																					"nativeSrc": "3790:17:8",
																					"nodeType": "YulFunctionCall",
																					"src": "3790:17:8"
																				}
																			],
																			"functionName": {
																				"name": "gt",
																				"nativeSrc": "3781:2:8",
																				"nodeType": "YulIdentifier",
																				"src": "3781:2:8"
																			},
																			"nativeSrc": "3781:27:8",
																			"nodeType": "YulFunctionCall",
																			"src": "3781:27:8"
																		},
																		"nativeSrc": "3778:53:8",
																		"nodeType": "YulIf",
																		"src": "3778:53:8"
																	},
																	{
																		"body": {
																			"nativeSrc": "3870:29:8",
																			"nodeType": "YulBlock",
																			"src": "3870:29:8",
																			"statements": [
																				{
																					"nativeSrc": "3872:25:8",
																					"nodeType": "YulAssignment",
																					"src": "3872:25:8",
																					"value": {
																						"arguments": [
																							{
																								"name": "power",
																								"nativeSrc": "3885:5:8",
																								"nodeType": "YulIdentifier",
																								"src": "3885:5:8"
																							},
																							{
																								"name": "base",
																								"nativeSrc": "3892:4:8",
																								"nodeType": "YulIdentifier",
																								"src": "3892:4:8"
																							}
																						],
																						"functionName": {
																							"name": "mul",
																							"nativeSrc": "3881:3:8",
																							"nodeType": "YulIdentifier",
																							"src": "3881:3:8"
																						},
																						"nativeSrc": "3881:16:8",
																						"nodeType": "YulFunctionCall",
																						"src": "3881:16:8"
																					},
																					"variableNames": [
																						{
																							"name": "power",
																							"nativeSrc": "3872:5:8",
																							"nodeType": "YulIdentifier",
																							"src": "3872:5:8"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "exponent",
																					"nativeSrc": "3851:8:8",
																					"nodeType": "YulIdentifier",
																					"src": "3851:8:8"
																				},
																				{
																					"name": "power_1",
																					"nativeSrc": "3861:7:8",
																					"nodeType": "YulIdentifier",
																					"src": "3861:7:8"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "3847:3:8",
																				"nodeType": "YulIdentifier",
																				"src": "3847:3:8"
																			},
																			"nativeSrc": "3847:22:8",
																			"nodeType": "YulFunctionCall",
																			"src": "3847:22:8"
																		},
																		"nativeSrc": "3844:55:8",
																		"nodeType": "YulIf",
																		"src": "3844:55:8"
																	},
																	{
																		"nativeSrc": "3912:23:8",
																		"nodeType": "YulAssignment",
																		"src": "3912:23:8",
																		"value": {
																			"arguments": [
																				{
																					"name": "base",
																					"nativeSrc": "3924:4:8",
																					"nodeType": "YulIdentifier",
																					"src": "3924:4:8"
																				},
																				{
																					"name": "base",
																					"nativeSrc": "3930:4:8",
																					"nodeType": "YulIdentifier",
																					"src": "3930:4:8"
																				}
																			],
																			"functionName": {
																				"name": "mul",
																				"nativeSrc": "3920:3:8",
																				"nodeType": "YulIdentifier",
																				"src": "3920:3:8"
																			},
																			"nativeSrc": "3920:15:8",
																			"nodeType": "YulFunctionCall",
																			"src": "3920:15:8"
																		},
																		"variableNames": [
																			{
																				"name": "base",
																				"nativeSrc": "3912:4:8",
																				"nodeType": "YulIdentifier",
																				"src": "3912:4:8"
																			}
																		]
																	},
																	{
																		"nativeSrc": "3948:34:8",
																		"nodeType": "YulAssignment",
																		"src": "3948:34:8",
																		"value": {
																			"arguments": [
																				{
																					"name": "power_1",
																					"nativeSrc": "3964:7:8",
																					"nodeType": "YulIdentifier",
																					"src": "3964:7:8"
																				},
																				{
																					"name": "exponent",
																					"nativeSrc": "3973:8:8",
																					"nodeType": "YulIdentifier",
																					"src": "3973:8:8"
																				}
																			],
																			"functionName": {
																				"name": "shr",
																				"nativeSrc": "3960:3:8",
																				"nodeType": "YulIdentifier",
																				"src": "3960:3:8"
																			},
																			"nativeSrc": "3960:22:8",
																			"nodeType": "YulFunctionCall",
																			"src": "3960:22:8"
																		},
																		"variableNames": [
																			{
																				"name": "exponent",
																				"nativeSrc": "3948:8:8",
																				"nodeType": "YulIdentifier",
																				"src": "3948:8:8"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "exponent",
																		"nativeSrc": "3733:8:8",
																		"nodeType": "YulIdentifier",
																		"src": "3733:8:8"
																	},
																	{
																		"name": "power_1",
																		"nativeSrc": "3743:7:8",
																		"nodeType": "YulIdentifier",
																		"src": "3743:7:8"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "3730:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "3730:2:8"
																},
																"nativeSrc": "3730:21:8",
																"nodeType": "YulFunctionCall",
																"src": "3730:21:8"
															},
															"nativeSrc": "3722:270:8",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "3752:3:8",
																"nodeType": "YulBlock",
																"src": "3752:3:8",
																"statements": []
															},
															"pre": {
																"nativeSrc": "3726:3:8",
																"nodeType": "YulBlock",
																"src": "3726:3:8",
																"statements": []
															},
															"src": "3722:270:8"
														}
													]
												},
												"name": "checked_exp_helper",
												"nativeSrc": "3582:416:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "_base",
														"nativeSrc": "3610:5:8",
														"nodeType": "YulTypedName",
														"src": "3610:5:8",
														"type": ""
													},
													{
														"name": "exponent",
														"nativeSrc": "3617:8:8",
														"nodeType": "YulTypedName",
														"src": "3617:8:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "power",
														"nativeSrc": "3630:5:8",
														"nodeType": "YulTypedName",
														"src": "3630:5:8",
														"type": ""
													},
													{
														"name": "base",
														"nativeSrc": "3637:4:8",
														"nodeType": "YulTypedName",
														"src": "3637:4:8",
														"type": ""
													}
												],
												"src": "3582:416:8"
											},
											{
												"body": {
													"nativeSrc": "4062:747:8",
													"nodeType": "YulBlock",
													"src": "4062:747:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "4100:52:8",
																"nodeType": "YulBlock",
																"src": "4100:52:8",
																"statements": [
																	{
																		"nativeSrc": "4114:10:8",
																		"nodeType": "YulAssignment",
																		"src": "4114:10:8",
																		"value": {
																			"kind": "number",
																			"nativeSrc": "4123:1:8",
																			"nodeType": "YulLiteral",
																			"src": "4123:1:8",
																			"type": "",
																			"value": "1"
																		},
																		"variableNames": [
																			{
																				"name": "power",
																				"nativeSrc": "4114:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "4114:5:8"
																			}
																		]
																	},
																	{
																		"nativeSrc": "4137:5:8",
																		"nodeType": "YulLeave",
																		"src": "4137:5:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "exponent",
																		"nativeSrc": "4082:8:8",
																		"nodeType": "YulIdentifier",
																		"src": "4082:8:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "4075:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "4075:6:8"
																},
																"nativeSrc": "4075:16:8",
																"nodeType": "YulFunctionCall",
																"src": "4075:16:8"
															},
															"nativeSrc": "4072:80:8",
															"nodeType": "YulIf",
															"src": "4072:80:8"
														},
														{
															"body": {
																"nativeSrc": "4185:52:8",
																"nodeType": "YulBlock",
																"src": "4185:52:8",
																"statements": [
																	{
																		"nativeSrc": "4199:10:8",
																		"nodeType": "YulAssignment",
																		"src": "4199:10:8",
																		"value": {
																			"kind": "number",
																			"nativeSrc": "4208:1:8",
																			"nodeType": "YulLiteral",
																			"src": "4208:1:8",
																			"type": "",
																			"value": "0"
																		},
																		"variableNames": [
																			{
																				"name": "power",
																				"nativeSrc": "4199:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "4199:5:8"
																			}
																		]
																	},
																	{
																		"nativeSrc": "4222:5:8",
																		"nodeType": "YulLeave",
																		"src": "4222:5:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "base",
																		"nativeSrc": "4171:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "4171:4:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "4164:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "4164:6:8"
																},
																"nativeSrc": "4164:12:8",
																"nodeType": "YulFunctionCall",
																"src": "4164:12:8"
															},
															"nativeSrc": "4161:76:8",
															"nodeType": "YulIf",
															"src": "4161:76:8"
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "4273:52:8",
																		"nodeType": "YulBlock",
																		"src": "4273:52:8",
																		"statements": [
																			{
																				"nativeSrc": "4287:10:8",
																				"nodeType": "YulAssignment",
																				"src": "4287:10:8",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "4296:1:8",
																					"nodeType": "YulLiteral",
																					"src": "4296:1:8",
																					"type": "",
																					"value": "1"
																				},
																				"variableNames": [
																					{
																						"name": "power",
																						"nativeSrc": "4287:5:8",
																						"nodeType": "YulIdentifier",
																						"src": "4287:5:8"
																					}
																				]
																			},
																			{
																				"nativeSrc": "4310:5:8",
																				"nodeType": "YulLeave",
																				"src": "4310:5:8"
																			}
																		]
																	},
																	"nativeSrc": "4266:59:8",
																	"nodeType": "YulCase",
																	"src": "4266:59:8",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4271:1:8",
																		"nodeType": "YulLiteral",
																		"src": "4271:1:8",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "4341:123:8",
																		"nodeType": "YulBlock",
																		"src": "4341:123:8",
																		"statements": [
																			{
																				"body": {
																					"nativeSrc": "4376:22:8",
																					"nodeType": "YulBlock",
																					"src": "4376:22:8",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [],
																								"functionName": {
																									"name": "panic_error_0x11",
																									"nativeSrc": "4378:16:8",
																									"nodeType": "YulIdentifier",
																									"src": "4378:16:8"
																								},
																								"nativeSrc": "4378:18:8",
																								"nodeType": "YulFunctionCall",
																								"src": "4378:18:8"
																							},
																							"nativeSrc": "4378:18:8",
																							"nodeType": "YulExpressionStatement",
																							"src": "4378:18:8"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "exponent",
																							"nativeSrc": "4361:8:8",
																							"nodeType": "YulIdentifier",
																							"src": "4361:8:8"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "4371:3:8",
																							"nodeType": "YulLiteral",
																							"src": "4371:3:8",
																							"type": "",
																							"value": "255"
																						}
																					],
																					"functionName": {
																						"name": "gt",
																						"nativeSrc": "4358:2:8",
																						"nodeType": "YulIdentifier",
																						"src": "4358:2:8"
																					},
																					"nativeSrc": "4358:17:8",
																					"nodeType": "YulFunctionCall",
																					"src": "4358:17:8"
																				},
																				"nativeSrc": "4355:43:8",
																				"nodeType": "YulIf",
																				"src": "4355:43:8"
																			},
																			{
																				"nativeSrc": "4411:25:8",
																				"nodeType": "YulAssignment",
																				"src": "4411:25:8",
																				"value": {
																					"arguments": [
																						{
																							"name": "exponent",
																							"nativeSrc": "4424:8:8",
																							"nodeType": "YulIdentifier",
																							"src": "4424:8:8"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "4434:1:8",
																							"nodeType": "YulLiteral",
																							"src": "4434:1:8",
																							"type": "",
																							"value": "1"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nativeSrc": "4420:3:8",
																						"nodeType": "YulIdentifier",
																						"src": "4420:3:8"
																					},
																					"nativeSrc": "4420:16:8",
																					"nodeType": "YulFunctionCall",
																					"src": "4420:16:8"
																				},
																				"variableNames": [
																					{
																						"name": "power",
																						"nativeSrc": "4411:5:8",
																						"nodeType": "YulIdentifier",
																						"src": "4411:5:8"
																					}
																				]
																			},
																			{
																				"nativeSrc": "4449:5:8",
																				"nodeType": "YulLeave",
																				"src": "4449:5:8"
																			}
																		]
																	},
																	"nativeSrc": "4334:130:8",
																	"nodeType": "YulCase",
																	"src": "4334:130:8",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4339:1:8",
																		"nodeType": "YulLiteral",
																		"src": "4339:1:8",
																		"type": "",
																		"value": "2"
																	}
																}
															],
															"expression": {
																"name": "base",
																"nativeSrc": "4253:4:8",
																"nodeType": "YulIdentifier",
																"src": "4253:4:8"
															},
															"nativeSrc": "4246:218:8",
															"nodeType": "YulSwitch",
															"src": "4246:218:8"
														},
														{
															"body": {
																"nativeSrc": "4562:70:8",
																"nodeType": "YulBlock",
																"src": "4562:70:8",
																"statements": [
																	{
																		"nativeSrc": "4576:28:8",
																		"nodeType": "YulAssignment",
																		"src": "4576:28:8",
																		"value": {
																			"arguments": [
																				{
																					"name": "base",
																					"nativeSrc": "4589:4:8",
																					"nodeType": "YulIdentifier",
																					"src": "4589:4:8"
																				},
																				{
																					"name": "exponent",
																					"nativeSrc": "4595:8:8",
																					"nodeType": "YulIdentifier",
																					"src": "4595:8:8"
																				}
																			],
																			"functionName": {
																				"name": "exp",
																				"nativeSrc": "4585:3:8",
																				"nodeType": "YulIdentifier",
																				"src": "4585:3:8"
																			},
																			"nativeSrc": "4585:19:8",
																			"nodeType": "YulFunctionCall",
																			"src": "4585:19:8"
																		},
																		"variableNames": [
																			{
																				"name": "power",
																				"nativeSrc": "4576:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "4576:5:8"
																			}
																		]
																	},
																	{
																		"nativeSrc": "4617:5:8",
																		"nodeType": "YulLeave",
																		"src": "4617:5:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "base",
																						"nativeSrc": "4486:4:8",
																						"nodeType": "YulIdentifier",
																						"src": "4486:4:8"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "4492:2:8",
																						"nodeType": "YulLiteral",
																						"src": "4492:2:8",
																						"type": "",
																						"value": "11"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "4483:2:8",
																					"nodeType": "YulIdentifier",
																					"src": "4483:2:8"
																				},
																				"nativeSrc": "4483:12:8",
																				"nodeType": "YulFunctionCall",
																				"src": "4483:12:8"
																			},
																			{
																				"arguments": [
																					{
																						"name": "exponent",
																						"nativeSrc": "4500:8:8",
																						"nodeType": "YulIdentifier",
																						"src": "4500:8:8"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "4510:2:8",
																						"nodeType": "YulLiteral",
																						"src": "4510:2:8",
																						"type": "",
																						"value": "78"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "4497:2:8",
																					"nodeType": "YulIdentifier",
																					"src": "4497:2:8"
																				},
																				"nativeSrc": "4497:16:8",
																				"nodeType": "YulFunctionCall",
																				"src": "4497:16:8"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "4479:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "4479:3:8"
																		},
																		"nativeSrc": "4479:35:8",
																		"nodeType": "YulFunctionCall",
																		"src": "4479:35:8"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "base",
																						"nativeSrc": "4523:4:8",
																						"nodeType": "YulIdentifier",
																						"src": "4523:4:8"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "4529:3:8",
																						"nodeType": "YulLiteral",
																						"src": "4529:3:8",
																						"type": "",
																						"value": "307"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "4520:2:8",
																					"nodeType": "YulIdentifier",
																					"src": "4520:2:8"
																				},
																				"nativeSrc": "4520:13:8",
																				"nodeType": "YulFunctionCall",
																				"src": "4520:13:8"
																			},
																			{
																				"arguments": [
																					{
																						"name": "exponent",
																						"nativeSrc": "4538:8:8",
																						"nodeType": "YulIdentifier",
																						"src": "4538:8:8"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "4548:2:8",
																						"nodeType": "YulLiteral",
																						"src": "4548:2:8",
																						"type": "",
																						"value": "32"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "4535:2:8",
																					"nodeType": "YulIdentifier",
																					"src": "4535:2:8"
																				},
																				"nativeSrc": "4535:16:8",
																				"nodeType": "YulFunctionCall",
																				"src": "4535:16:8"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "4516:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "4516:3:8"
																		},
																		"nativeSrc": "4516:36:8",
																		"nodeType": "YulFunctionCall",
																		"src": "4516:36:8"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "4476:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "4476:2:8"
																},
																"nativeSrc": "4476:77:8",
																"nodeType": "YulFunctionCall",
																"src": "4476:77:8"
															},
															"nativeSrc": "4473:159:8",
															"nodeType": "YulIf",
															"src": "4473:159:8"
														},
														{
															"nativeSrc": "4641:57:8",
															"nodeType": "YulVariableDeclaration",
															"src": "4641:57:8",
															"value": {
																"arguments": [
																	{
																		"name": "base",
																		"nativeSrc": "4683:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "4683:4:8"
																	},
																	{
																		"name": "exponent",
																		"nativeSrc": "4689:8:8",
																		"nodeType": "YulIdentifier",
																		"src": "4689:8:8"
																	}
																],
																"functionName": {
																	"name": "checked_exp_helper",
																	"nativeSrc": "4664:18:8",
																	"nodeType": "YulIdentifier",
																	"src": "4664:18:8"
																},
																"nativeSrc": "4664:34:8",
																"nodeType": "YulFunctionCall",
																"src": "4664:34:8"
															},
															"variables": [
																{
																	"name": "power_1",
																	"nativeSrc": "4645:7:8",
																	"nodeType": "YulTypedName",
																	"src": "4645:7:8",
																	"type": ""
																},
																{
																	"name": "base_1",
																	"nativeSrc": "4654:6:8",
																	"nodeType": "YulTypedName",
																	"src": "4654:6:8",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "4743:22:8",
																"nodeType": "YulBlock",
																"src": "4743:22:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "4745:16:8",
																				"nodeType": "YulIdentifier",
																				"src": "4745:16:8"
																			},
																			"nativeSrc": "4745:18:8",
																			"nodeType": "YulFunctionCall",
																			"src": "4745:18:8"
																		},
																		"nativeSrc": "4745:18:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "4745:18:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "power_1",
																		"nativeSrc": "4713:7:8",
																		"nodeType": "YulIdentifier",
																		"src": "4713:7:8"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "4730:1:8",
																						"nodeType": "YulLiteral",
																						"src": "4730:1:8",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "4726:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "4726:3:8"
																				},
																				"nativeSrc": "4726:6:8",
																				"nodeType": "YulFunctionCall",
																				"src": "4726:6:8"
																			},
																			{
																				"name": "base_1",
																				"nativeSrc": "4734:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "4734:6:8"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nativeSrc": "4722:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "4722:3:8"
																		},
																		"nativeSrc": "4722:19:8",
																		"nodeType": "YulFunctionCall",
																		"src": "4722:19:8"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "4710:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "4710:2:8"
																},
																"nativeSrc": "4710:32:8",
																"nodeType": "YulFunctionCall",
																"src": "4710:32:8"
															},
															"nativeSrc": "4707:58:8",
															"nodeType": "YulIf",
															"src": "4707:58:8"
														},
														{
															"nativeSrc": "4774:29:8",
															"nodeType": "YulAssignment",
															"src": "4774:29:8",
															"value": {
																"arguments": [
																	{
																		"name": "power_1",
																		"nativeSrc": "4787:7:8",
																		"nodeType": "YulIdentifier",
																		"src": "4787:7:8"
																	},
																	{
																		"name": "base_1",
																		"nativeSrc": "4796:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "4796:6:8"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "4783:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "4783:3:8"
																},
																"nativeSrc": "4783:20:8",
																"nodeType": "YulFunctionCall",
																"src": "4783:20:8"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nativeSrc": "4774:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "4774:5:8"
																}
															]
														}
													]
												},
												"name": "checked_exp_unsigned",
												"nativeSrc": "4003:806:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "base",
														"nativeSrc": "4033:4:8",
														"nodeType": "YulTypedName",
														"src": "4033:4:8",
														"type": ""
													},
													{
														"name": "exponent",
														"nativeSrc": "4039:8:8",
														"nodeType": "YulTypedName",
														"src": "4039:8:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "power",
														"nativeSrc": "4052:5:8",
														"nodeType": "YulTypedName",
														"src": "4052:5:8",
														"type": ""
													}
												],
												"src": "4003:806:8"
											},
											{
												"body": {
													"nativeSrc": "4882:72:8",
													"nodeType": "YulBlock",
													"src": "4882:72:8",
													"statements": [
														{
															"nativeSrc": "4892:56:8",
															"nodeType": "YulAssignment",
															"src": "4892:56:8",
															"value": {
																"arguments": [
																	{
																		"name": "base",
																		"nativeSrc": "4922:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "4922:4:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "exponent",
																				"nativeSrc": "4932:8:8",
																				"nodeType": "YulIdentifier",
																				"src": "4932:8:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4942:4:8",
																				"nodeType": "YulLiteral",
																				"src": "4942:4:8",
																				"type": "",
																				"value": "0xff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "4928:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "4928:3:8"
																		},
																		"nativeSrc": "4928:19:8",
																		"nodeType": "YulFunctionCall",
																		"src": "4928:19:8"
																	}
																],
																"functionName": {
																	"name": "checked_exp_unsigned",
																	"nativeSrc": "4901:20:8",
																	"nodeType": "YulIdentifier",
																	"src": "4901:20:8"
																},
																"nativeSrc": "4901:47:8",
																"nodeType": "YulFunctionCall",
																"src": "4901:47:8"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nativeSrc": "4892:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "4892:5:8"
																}
															]
														}
													]
												},
												"name": "checked_exp_t_uint256_t_uint8",
												"nativeSrc": "4814:140:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "base",
														"nativeSrc": "4853:4:8",
														"nodeType": "YulTypedName",
														"src": "4853:4:8",
														"type": ""
													},
													{
														"name": "exponent",
														"nativeSrc": "4859:8:8",
														"nodeType": "YulTypedName",
														"src": "4859:8:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "power",
														"nativeSrc": "4872:5:8",
														"nodeType": "YulTypedName",
														"src": "4872:5:8",
														"type": ""
													}
												],
												"src": "4814:140:8"
											},
											{
												"body": {
													"nativeSrc": "5011:116:8",
													"nodeType": "YulBlock",
													"src": "5011:116:8",
													"statements": [
														{
															"nativeSrc": "5021:20:8",
															"nodeType": "YulAssignment",
															"src": "5021:20:8",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "5036:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "5036:1:8"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "5039:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "5039:1:8"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "5032:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "5032:3:8"
																},
																"nativeSrc": "5032:9:8",
																"nodeType": "YulFunctionCall",
																"src": "5032:9:8"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nativeSrc": "5021:7:8",
																	"nodeType": "YulIdentifier",
																	"src": "5021:7:8"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "5099:22:8",
																"nodeType": "YulBlock",
																"src": "5099:22:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "5101:16:8",
																				"nodeType": "YulIdentifier",
																				"src": "5101:16:8"
																			},
																			"nativeSrc": "5101:18:8",
																			"nodeType": "YulFunctionCall",
																			"src": "5101:18:8"
																		},
																		"nativeSrc": "5101:18:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "5101:18:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nativeSrc": "5070:1:8",
																						"nodeType": "YulIdentifier",
																						"src": "5070:1:8"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "5063:6:8",
																					"nodeType": "YulIdentifier",
																					"src": "5063:6:8"
																				},
																				"nativeSrc": "5063:9:8",
																				"nodeType": "YulFunctionCall",
																				"src": "5063:9:8"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nativeSrc": "5077:1:8",
																						"nodeType": "YulIdentifier",
																						"src": "5077:1:8"
																					},
																					{
																						"arguments": [
																							{
																								"name": "product",
																								"nativeSrc": "5084:7:8",
																								"nodeType": "YulIdentifier",
																								"src": "5084:7:8"
																							},
																							{
																								"name": "x",
																								"nativeSrc": "5093:1:8",
																								"nodeType": "YulIdentifier",
																								"src": "5093:1:8"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nativeSrc": "5080:3:8",
																							"nodeType": "YulIdentifier",
																							"src": "5080:3:8"
																						},
																						"nativeSrc": "5080:15:8",
																						"nodeType": "YulFunctionCall",
																						"src": "5080:15:8"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nativeSrc": "5074:2:8",
																					"nodeType": "YulIdentifier",
																					"src": "5074:2:8"
																				},
																				"nativeSrc": "5074:22:8",
																				"nodeType": "YulFunctionCall",
																				"src": "5074:22:8"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nativeSrc": "5060:2:8",
																			"nodeType": "YulIdentifier",
																			"src": "5060:2:8"
																		},
																		"nativeSrc": "5060:37:8",
																		"nodeType": "YulFunctionCall",
																		"src": "5060:37:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "5053:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "5053:6:8"
																},
																"nativeSrc": "5053:45:8",
																"nodeType": "YulFunctionCall",
																"src": "5053:45:8"
															},
															"nativeSrc": "5050:71:8",
															"nodeType": "YulIf",
															"src": "5050:71:8"
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nativeSrc": "4959:168:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "4990:1:8",
														"nodeType": "YulTypedName",
														"src": "4990:1:8",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "4993:1:8",
														"nodeType": "YulTypedName",
														"src": "4993:1:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nativeSrc": "4999:7:8",
														"nodeType": "YulTypedName",
														"src": "4999:7:8",
														"type": ""
													}
												],
												"src": "4959:168:8"
											},
											{
												"body": {
													"nativeSrc": "5180:77:8",
													"nodeType": "YulBlock",
													"src": "5180:77:8",
													"statements": [
														{
															"nativeSrc": "5190:16:8",
															"nodeType": "YulAssignment",
															"src": "5190:16:8",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "5201:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "5201:1:8"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "5204:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "5204:1:8"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5197:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "5197:3:8"
																},
																"nativeSrc": "5197:9:8",
																"nodeType": "YulFunctionCall",
																"src": "5197:9:8"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "5190:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "5190:3:8"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "5229:22:8",
																"nodeType": "YulBlock",
																"src": "5229:22:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "5231:16:8",
																				"nodeType": "YulIdentifier",
																				"src": "5231:16:8"
																			},
																			"nativeSrc": "5231:18:8",
																			"nodeType": "YulFunctionCall",
																			"src": "5231:18:8"
																		},
																		"nativeSrc": "5231:18:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "5231:18:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "5221:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "5221:1:8"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "5224:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "5224:3:8"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "5218:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "5218:2:8"
																},
																"nativeSrc": "5218:10:8",
																"nodeType": "YulFunctionCall",
																"src": "5218:10:8"
															},
															"nativeSrc": "5215:36:8",
															"nodeType": "YulIf",
															"src": "5215:36:8"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "5132:125:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "5163:1:8",
														"nodeType": "YulTypedName",
														"src": "5163:1:8",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "5166:1:8",
														"nodeType": "YulTypedName",
														"src": "5166:1:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "5172:3:8",
														"nodeType": "YulTypedName",
														"src": "5172:3:8",
														"type": ""
													}
												],
												"src": "5132:125:8"
											},
											{
												"body": {
													"nativeSrc": "5419:188:8",
													"nodeType": "YulBlock",
													"src": "5419:188:8",
													"statements": [
														{
															"nativeSrc": "5429:26:8",
															"nodeType": "YulAssignment",
															"src": "5429:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5441:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "5441:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5452:2:8",
																		"nodeType": "YulLiteral",
																		"src": "5452:2:8",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5437:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "5437:3:8"
																},
																"nativeSrc": "5437:18:8",
																"nodeType": "YulFunctionCall",
																"src": "5437:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5429:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "5429:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5471:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "5471:9:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "5486:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "5486:6:8"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "5502:3:8",
																								"nodeType": "YulLiteral",
																								"src": "5502:3:8",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "5507:1:8",
																								"nodeType": "YulLiteral",
																								"src": "5507:1:8",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "5498:3:8",
																							"nodeType": "YulIdentifier",
																							"src": "5498:3:8"
																						},
																						"nativeSrc": "5498:11:8",
																						"nodeType": "YulFunctionCall",
																						"src": "5498:11:8"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "5511:1:8",
																						"nodeType": "YulLiteral",
																						"src": "5511:1:8",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "5494:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "5494:3:8"
																				},
																				"nativeSrc": "5494:19:8",
																				"nodeType": "YulFunctionCall",
																				"src": "5494:19:8"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "5482:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "5482:3:8"
																		},
																		"nativeSrc": "5482:32:8",
																		"nodeType": "YulFunctionCall",
																		"src": "5482:32:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5464:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "5464:6:8"
																},
																"nativeSrc": "5464:51:8",
																"nodeType": "YulFunctionCall",
																"src": "5464:51:8"
															},
															"nativeSrc": "5464:51:8",
															"nodeType": "YulExpressionStatement",
															"src": "5464:51:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5535:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "5535:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5546:2:8",
																				"nodeType": "YulLiteral",
																				"src": "5546:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5531:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "5531:3:8"
																		},
																		"nativeSrc": "5531:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "5531:18:8"
																	},
																	{
																		"name": "value1",
																		"nativeSrc": "5551:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "5551:6:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5524:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "5524:6:8"
																},
																"nativeSrc": "5524:34:8",
																"nodeType": "YulFunctionCall",
																"src": "5524:34:8"
															},
															"nativeSrc": "5524:34:8",
															"nodeType": "YulExpressionStatement",
															"src": "5524:34:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5578:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "5578:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5589:2:8",
																				"nodeType": "YulLiteral",
																				"src": "5589:2:8",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5574:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "5574:3:8"
																		},
																		"nativeSrc": "5574:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "5574:18:8"
																	},
																	{
																		"name": "value2",
																		"nativeSrc": "5594:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "5594:6:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5567:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "5567:6:8"
																},
																"nativeSrc": "5567:34:8",
																"nodeType": "YulFunctionCall",
																"src": "5567:34:8"
															},
															"nativeSrc": "5567:34:8",
															"nodeType": "YulExpressionStatement",
															"src": "5567:34:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "5262:345:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5372:9:8",
														"nodeType": "YulTypedName",
														"src": "5372:9:8",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "5383:6:8",
														"nodeType": "YulTypedName",
														"src": "5383:6:8",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "5391:6:8",
														"nodeType": "YulTypedName",
														"src": "5391:6:8",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "5399:6:8",
														"nodeType": "YulTypedName",
														"src": "5399:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5410:4:8",
														"nodeType": "YulTypedName",
														"src": "5410:4:8",
														"type": ""
													}
												],
												"src": "5262:345:8"
											},
											{
												"body": {
													"nativeSrc": "5713:76:8",
													"nodeType": "YulBlock",
													"src": "5713:76:8",
													"statements": [
														{
															"nativeSrc": "5723:26:8",
															"nodeType": "YulAssignment",
															"src": "5723:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5735:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "5735:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5746:2:8",
																		"nodeType": "YulLiteral",
																		"src": "5746:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5731:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "5731:3:8"
																},
																"nativeSrc": "5731:18:8",
																"nodeType": "YulFunctionCall",
																"src": "5731:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5723:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "5723:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5765:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "5765:9:8"
																	},
																	{
																		"name": "value0",
																		"nativeSrc": "5776:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "5776:6:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5758:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "5758:6:8"
																},
																"nativeSrc": "5758:25:8",
																"nodeType": "YulFunctionCall",
																"src": "5758:25:8"
															},
															"nativeSrc": "5758:25:8",
															"nodeType": "YulExpressionStatement",
															"src": "5758:25:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "5612:177:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5682:9:8",
														"nodeType": "YulTypedName",
														"src": "5682:9:8",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "5693:6:8",
														"nodeType": "YulTypedName",
														"src": "5693:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5704:4:8",
														"nodeType": "YulTypedName",
														"src": "5704:4:8",
														"type": ""
													}
												],
												"src": "5612:177:8"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_address_fromMemory(offset) -> value\n    {\n        value := mload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_uint256t_address_fromMemory(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := abi_decode_address_fromMemory(headStart)\n        value1 := mload(add(headStart, 32))\n        value2 := abi_decode_address_fromMemory(add(headStart, 64))\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function array_dataslot_string_storage(ptr) -> data\n    {\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n    }\n    function clean_up_bytearray_end_slots_string_storage(array, len, startIndex)\n    {\n        if gt(len, 31)\n        {\n            mstore(0, array)\n            let data := keccak256(0, 0x20)\n            let deleteStart := add(data, shr(5, add(startIndex, 31)))\n            if lt(startIndex, 0x20) { deleteStart := data }\n            let _1 := add(data, shr(5, add(len, 31)))\n            let start := deleteStart\n            for { } lt(start, _1) { start := add(start, 1) }\n            { sstore(start, 0) }\n        }\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used\n    {\n        used := or(and(data, not(shr(shl(3, len), not(0)))), shl(1, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src)\n    {\n        let newLen := mload(src)\n        if gt(newLen, sub(shl(64, 1), 1)) { panic_error_0x41() }\n        clean_up_bytearray_end_slots_string_storage(slot, extract_byte_array_length(sload(slot)), newLen)\n        let srcOffset := 0\n        let srcOffset_1 := 0x20\n        srcOffset := 0x20\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(31))\n            let dstPtr := array_dataslot_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, srcOffset_1) }\n            {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, srcOffset_1)\n            }\n            if lt(loopEnd, newLen)\n            {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, and(lastValue, not(shr(and(shl(3, newLen), 248), not(0)))))\n            }\n            sstore(slot, add(shl(1, newLen), 1))\n        }\n        default {\n            let value := 0\n            if newLen\n            {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function checked_exp_helper(_base, exponent) -> power, base\n    {\n        let power_1 := 1\n        power := 1\n        base := _base\n        for { } gt(exponent, power_1) { }\n        {\n            if gt(base, div(not(0), base)) { panic_error_0x11() }\n            if and(exponent, power_1) { power := mul(power, base) }\n            base := mul(base, base)\n            exponent := shr(power_1, exponent)\n        }\n    }\n    function checked_exp_unsigned(base, exponent) -> power\n    {\n        if iszero(exponent)\n        {\n            power := 1\n            leave\n        }\n        if iszero(base)\n        {\n            power := 0\n            leave\n        }\n        switch base\n        case 1 {\n            power := 1\n            leave\n        }\n        case 2 {\n            if gt(exponent, 255) { panic_error_0x11() }\n            power := shl(exponent, 1)\n            leave\n        }\n        if or(and(lt(base, 11), lt(exponent, 78)), and(lt(base, 307), lt(exponent, 32)))\n        {\n            power := exp(base, exponent)\n            leave\n        }\n        let power_1, base_1 := checked_exp_helper(base, exponent)\n        if gt(power_1, div(not(0), base_1)) { panic_error_0x11() }\n        power := mul(power_1, base_1)\n    }\n    function checked_exp_t_uint256_t_uint8(base, exponent) -> power\n    {\n        power := checked_exp_unsigned(base, and(exponent, 0xff))\n    }\n    function checked_mul_t_uint256(x, y) -> product\n    {\n        product := mul(x, y)\n        if iszero(or(iszero(x), eq(y, div(product, x)))) { panic_error_0x11() }\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        sum := add(x, y)\n        if gt(x, sum) { panic_error_0x11() }\n    }\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n}",
									"id": 8,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "608060405234801562000010575f80fd5b5060405162001228380380620012288339810160408190526200003391620002fb565b826040518060400160405280600a81526020016926bca732bbaa37b5b2b760b11b815250604051806040016040528060048152602001634d4e544b60e01b8152508160039081620000859190620003d7565b506004620000948282620003d7565b5050506001600160a01b038116620000c657604051631e4fbdf760e01b81525f60048201526024015b60405180910390fd5b620000d18162000123565b50600680546001600160a01b0319166001600160a01b0383161790556200011a83620000fb600990565b6200010890600a620005b2565b620001149085620005c9565b62000174565b505050620005f9565b600580546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0905f90a35050565b6001600160a01b0382166200019f5760405163ec442f0560e01b81525f6004820152602401620000bd565b620001ac5f8383620001b0565b5050565b6001600160a01b038316620001de578060025f828254620001d29190620005e3565b90915550620002509050565b6001600160a01b0383165f9081526020819052604090205481811015620002325760405163391434e360e21b81526001600160a01b03851660048201526024810182905260448101839052606401620000bd565b6001600160a01b0384165f9081526020819052604090209082900390555b6001600160a01b0382166200026e576002805482900390556200028c565b6001600160a01b0382165f9081526020819052604090208054820190555b816001600160a01b0316836001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051620002d291815260200190565b60405180910390a3505050565b80516001600160a01b0381168114620002f6575f80fd5b919050565b5f805f606084860312156200030e575f80fd5b6200031984620002df565b9250602084015191506200033060408501620002df565b90509250925092565b634e487b7160e01b5f52604160045260245ffd5b600181811c908216806200036257607f821691505b6020821081036200038157634e487b7160e01b5f52602260045260245ffd5b50919050565b601f821115620003d257805f5260205f20601f840160051c81016020851015620003ae5750805b601f840160051c820191505b81811015620003cf575f8155600101620003ba565b50505b505050565b81516001600160401b03811115620003f357620003f362000339565b6200040b816200040484546200034d565b8462000387565b602080601f83116001811462000441575f8415620004295750858301515b5f19600386901b1c1916600185901b1785556200049b565b5f85815260208120601f198616915b82811015620004715788860151825594840194600190910190840162000450565b50858210156200048f57878501515f19600388901b60f8161c191681555b505060018460011b0185555b505050505050565b634e487b7160e01b5f52601160045260245ffd5b600181815b80851115620004f757815f1904821115620004db57620004db620004a3565b80851615620004e957918102915b93841c9390800290620004bc565b509250929050565b5f826200050f57506001620005ac565b816200051d57505f620005ac565b8160018114620005365760028114620005415762000561565b6001915050620005ac565b60ff841115620005555762000555620004a3565b50506001821b620005ac565b5060208310610133831016604e8410600b841016171562000586575081810a620005ac565b620005928383620004b7565b805f1904821115620005a857620005a8620004a3565b0290505b92915050565b5f620005c260ff841683620004ff565b9392505050565b8082028115828204841417620005ac57620005ac620004a3565b80820180821115620005ac57620005ac620004a3565b610c2180620006075f395ff3fe608060405234801561000f575f80fd5b506004361061011c575f3560e01c8063715018a6116100a9578063ac3c93cf1161006e578063ac3c93cf14610249578063bea1dcf814610273578063dd62ed3e14610286578063ee33bc45146102be578063f2fde38b146102c7575f80fd5b8063715018a6146101ee57806379cc6790146101f65780638da5cb5b1461020957806395d89b411461022e578063a9059cbb14610236575f80fd5b80632d44ff23116100ef5780632d44ff2314610186578063313ce5671461018f57806340c10f191461019e57806342966c68146101b357806370a08231146101c6575f80fd5b806306fdde0314610120578063095ea7b31461013e57806318160ddd1461016157806323b872dd14610173575b5f80fd5b6101286102da565b6040516101359190610925565b60405180910390f35b61015161014c36600461098c565b61036a565b6040519015158152602001610135565b6002545b604051908152602001610135565b6101516101813660046109b4565b610383565b61016560075481565b60405160098152602001610135565b6101b16101ac36600461098c565b6103a6565b005b6101b16101c13660046109ed565b61042e565b6101656101d4366004610a04565b6001600160a01b03165f9081526020819052604090205490565b6101b161043b565b6101b161020436600461098c565b61044e565b6005546001600160a01b03165b6040516001600160a01b039091168152602001610135565b610128610463565b61015161024436600461098c565b610472565b610165610257366004610a24565b600960209081525f928352604080842090915290825290205481565b600654610216906001600160a01b031681565b610165610294366004610a24565b6001600160a01b039182165f90815260016020908152604080832093909416825291909152205490565b61016560085481565b6101b16102d5366004610a04565b610523565b6060600380546102e990610a55565b80601f016020809104026020016040519081016040528092919081815260200182805461031590610a55565b80156103605780601f1061033757610100808354040283529160200191610360565b820191905f5260205f20905b81548152906001019060200180831161034357829003601f168201915b5050505050905090565b5f3361037781858561055d565b60019150505b92915050565b5f3361039085828561056f565b61039b8585856105ea565b506001949350505050565b6103ae610647565b6001600160a01b038216331461040b5760405162461bcd60e51b815260206004820152601d60248201527f4d696e74696e6720616c6c6f776564206f6e6c7920746f206f776e657200000060448201526064015b60405180910390fd5b61042a8261041b6009600a610b81565b6104259084610b8f565b610674565b5050565b61043833826106a8565b50565b610443610647565b61044c5f6106dc565b565b61045982338361056f565b61042a82826106a8565b6060600480546102e990610a55565b5f6064610480836005610b8f565b61048a9190610ba6565b60078190555f9061049b9084610bc5565b90506007546008546104ad9190610bd8565b6008556006546007546001600160a01b03909116906104cf90339083906105ea565b6104da3386846105ea565b6007546001600160a01b038083165f908152600960209081526040808320938a1683529290529081208054909190610513908490610bd8565b9091555060019695505050505050565b61052b610647565b6001600160a01b03811661055457604051631e4fbdf760e01b81525f6004820152602401610402565b610438816106dc565b61056a838383600161072d565b505050565b6001600160a01b038381165f908152600160209081526040808320938616835292905220545f1981146105e457818110156105d657604051637dc7a0d960e11b81526001600160a01b03841660048201526024810182905260448101839052606401610402565b6105e484848484035f61072d565b50505050565b6001600160a01b03831661061357604051634b637e8f60e11b81525f6004820152602401610402565b6001600160a01b03821661063c5760405163ec442f0560e01b81525f6004820152602401610402565b61056a8383836107ff565b6005546001600160a01b0316331461044c5760405163118cdaa760e01b8152336004820152602401610402565b6001600160a01b03821661069d5760405163ec442f0560e01b81525f6004820152602401610402565b61042a5f83836107ff565b6001600160a01b0382166106d157604051634b637e8f60e11b81525f6004820152602401610402565b61042a825f836107ff565b600580546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0905f90a35050565b6001600160a01b0384166107565760405163e602df0560e01b81525f6004820152602401610402565b6001600160a01b03831661077f57604051634a1406b160e11b81525f6004820152602401610402565b6001600160a01b038085165f90815260016020908152604080832093871683529290522082905580156105e457826001600160a01b0316846001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925846040516107f191815260200190565b60405180910390a350505050565b6001600160a01b038316610829578060025f82825461081e9190610bd8565b909155506108999050565b6001600160a01b0383165f908152602081905260409020548181101561087b5760405163391434e360e21b81526001600160a01b03851660048201526024810182905260448101839052606401610402565b6001600160a01b0384165f9081526020819052604090209082900390555b6001600160a01b0382166108b5576002805482900390556108d3565b6001600160a01b0382165f9081526020819052604090208054820190555b816001600160a01b0316836001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8360405161091891815260200190565b60405180910390a3505050565b5f602080835283518060208501525f5b8181101561095157858101830151858201604001528201610935565b505f604082860101526040601f19601f8301168501019250505092915050565b80356001600160a01b0381168114610987575f80fd5b919050565b5f806040838503121561099d575f80fd5b6109a683610971565b946020939093013593505050565b5f805f606084860312156109c6575f80fd5b6109cf84610971565b92506109dd60208501610971565b9150604084013590509250925092565b5f602082840312156109fd575f80fd5b5035919050565b5f60208284031215610a14575f80fd5b610a1d82610971565b9392505050565b5f8060408385031215610a35575f80fd5b610a3e83610971565b9150610a4c60208401610971565b90509250929050565b600181811c90821680610a6957607f821691505b602082108103610a8757634e487b7160e01b5f52602260045260245ffd5b50919050565b634e487b7160e01b5f52601160045260245ffd5b600181815b80851115610adb57815f1904821115610ac157610ac1610a8d565b80851615610ace57918102915b93841c9390800290610aa6565b509250929050565b5f82610af15750600161037d565b81610afd57505f61037d565b8160018114610b135760028114610b1d57610b39565b600191505061037d565b60ff841115610b2e57610b2e610a8d565b50506001821b61037d565b5060208310610133831016604e8410600b8410161715610b5c575081810a61037d565b610b668383610aa1565b805f1904821115610b7957610b79610a8d565b029392505050565b5f610a1d60ff841683610ae3565b808202811582820484141761037d5761037d610a8d565b5f82610bc057634e487b7160e01b5f52601260045260245ffd5b500490565b8181038181111561037d5761037d610a8d565b8082018082111561037d5761037d610a8d56fea264697066735822122048bf5e24f5d5c9707227112533536fc041cb860ab255d8dd55c55df24f2dff7d64736f6c63430008170033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x10 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x1228 CODESIZE SUB DUP1 PUSH3 0x1228 DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH3 0x33 SWAP2 PUSH3 0x2FB JUMP JUMPDEST DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xA DUP2 MSTORE PUSH1 0x20 ADD PUSH10 0x26BCA732BBAA37B5B2B7 PUSH1 0xB1 SHL DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x4 DUP2 MSTORE PUSH1 0x20 ADD PUSH4 0x4D4E544B PUSH1 0xE0 SHL DUP2 MSTORE POP DUP2 PUSH1 0x3 SWAP1 DUP2 PUSH3 0x85 SWAP2 SWAP1 PUSH3 0x3D7 JUMP JUMPDEST POP PUSH1 0x4 PUSH3 0x94 DUP3 DUP3 PUSH3 0x3D7 JUMP JUMPDEST POP POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH3 0xC6 JUMPI PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH3 0xD1 DUP2 PUSH3 0x123 JUMP JUMPDEST POP PUSH1 0x6 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND OR SWAP1 SSTORE PUSH3 0x11A DUP4 PUSH3 0xFB PUSH1 0x9 SWAP1 JUMP JUMPDEST PUSH3 0x108 SWAP1 PUSH1 0xA PUSH3 0x5B2 JUMP JUMPDEST PUSH3 0x114 SWAP1 DUP6 PUSH3 0x5C9 JUMP JUMPDEST PUSH3 0x174 JUMP JUMPDEST POP POP POP PUSH3 0x5F9 JUMP JUMPDEST PUSH1 0x5 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP2 SWAP1 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH0 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH3 0x19F JUMPI PUSH1 0x40 MLOAD PUSH4 0xEC442F05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH3 0xBD JUMP JUMPDEST PUSH3 0x1AC PUSH0 DUP4 DUP4 PUSH3 0x1B0 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH3 0x1DE JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH3 0x1D2 SWAP2 SWAP1 PUSH3 0x5E3 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH3 0x250 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH3 0x232 JUMPI PUSH1 0x40 MLOAD PUSH4 0x391434E3 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x64 ADD PUSH3 0xBD JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP1 DUP3 SWAP1 SUB SWAP1 SSTORE JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH3 0x26E JUMPI PUSH1 0x2 DUP1 SLOAD DUP3 SWAP1 SUB SWAP1 SSTORE PUSH3 0x28C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD DUP3 ADD SWAP1 SSTORE JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH3 0x2D2 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH3 0x2F6 JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH3 0x30E JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH3 0x319 DUP5 PUSH3 0x2DF JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP5 ADD MLOAD SWAP2 POP PUSH3 0x330 PUSH1 0x40 DUP6 ADD PUSH3 0x2DF JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH3 0x362 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH3 0x381 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH3 0x3D2 JUMPI DUP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH3 0x3AE JUMPI POP DUP1 JUMPDEST PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP3 ADD SWAP2 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH3 0x3CF JUMPI PUSH0 DUP2 SSTORE PUSH1 0x1 ADD PUSH3 0x3BA JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH3 0x3F3 JUMPI PUSH3 0x3F3 PUSH3 0x339 JUMP JUMPDEST PUSH3 0x40B DUP2 PUSH3 0x404 DUP5 SLOAD PUSH3 0x34D JUMP JUMPDEST DUP5 PUSH3 0x387 JUMP JUMPDEST PUSH1 0x20 DUP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH3 0x441 JUMPI PUSH0 DUP5 ISZERO PUSH3 0x429 JUMPI POP DUP6 DUP4 ADD MLOAD JUMPDEST PUSH0 NOT PUSH1 0x3 DUP7 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP6 SWAP1 SHL OR DUP6 SSTORE PUSH3 0x49B JUMP JUMPDEST PUSH0 DUP6 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F NOT DUP7 AND SWAP2 JUMPDEST DUP3 DUP2 LT ISZERO PUSH3 0x471 JUMPI DUP9 DUP7 ADD MLOAD DUP3 SSTORE SWAP5 DUP5 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 DUP5 ADD PUSH3 0x450 JUMP JUMPDEST POP DUP6 DUP3 LT ISZERO PUSH3 0x48F JUMPI DUP8 DUP6 ADD MLOAD PUSH0 NOT PUSH1 0x3 DUP9 SWAP1 SHL PUSH1 0xF8 AND SHR NOT AND DUP2 SSTORE JUMPDEST POP POP PUSH1 0x1 DUP5 PUSH1 0x1 SHL ADD DUP6 SSTORE JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH1 0x1 DUP2 DUP2 JUMPDEST DUP1 DUP6 GT ISZERO PUSH3 0x4F7 JUMPI DUP2 PUSH0 NOT DIV DUP3 GT ISZERO PUSH3 0x4DB JUMPI PUSH3 0x4DB PUSH3 0x4A3 JUMP JUMPDEST DUP1 DUP6 AND ISZERO PUSH3 0x4E9 JUMPI SWAP2 DUP2 MUL SWAP2 JUMPDEST SWAP4 DUP5 SHR SWAP4 SWAP1 DUP1 MUL SWAP1 PUSH3 0x4BC JUMP JUMPDEST POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 PUSH3 0x50F JUMPI POP PUSH1 0x1 PUSH3 0x5AC JUMP JUMPDEST DUP2 PUSH3 0x51D JUMPI POP PUSH0 PUSH3 0x5AC JUMP JUMPDEST DUP2 PUSH1 0x1 DUP2 EQ PUSH3 0x536 JUMPI PUSH1 0x2 DUP2 EQ PUSH3 0x541 JUMPI PUSH3 0x561 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP PUSH3 0x5AC JUMP JUMPDEST PUSH1 0xFF DUP5 GT ISZERO PUSH3 0x555 JUMPI PUSH3 0x555 PUSH3 0x4A3 JUMP JUMPDEST POP POP PUSH1 0x1 DUP3 SHL PUSH3 0x5AC JUMP JUMPDEST POP PUSH1 0x20 DUP4 LT PUSH2 0x133 DUP4 LT AND PUSH1 0x4E DUP5 LT PUSH1 0xB DUP5 LT AND OR ISZERO PUSH3 0x586 JUMPI POP DUP2 DUP2 EXP PUSH3 0x5AC JUMP JUMPDEST PUSH3 0x592 DUP4 DUP4 PUSH3 0x4B7 JUMP JUMPDEST DUP1 PUSH0 NOT DIV DUP3 GT ISZERO PUSH3 0x5A8 JUMPI PUSH3 0x5A8 PUSH3 0x4A3 JUMP JUMPDEST MUL SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH3 0x5C2 PUSH1 0xFF DUP5 AND DUP4 PUSH3 0x4FF JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP1 DUP3 MUL DUP2 ISZERO DUP3 DUP3 DIV DUP5 EQ OR PUSH3 0x5AC JUMPI PUSH3 0x5AC PUSH3 0x4A3 JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH3 0x5AC JUMPI PUSH3 0x5AC PUSH3 0x4A3 JUMP JUMPDEST PUSH2 0xC21 DUP1 PUSH3 0x607 PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x11C JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x715018A6 GT PUSH2 0xA9 JUMPI DUP1 PUSH4 0xAC3C93CF GT PUSH2 0x6E JUMPI DUP1 PUSH4 0xAC3C93CF EQ PUSH2 0x249 JUMPI DUP1 PUSH4 0xBEA1DCF8 EQ PUSH2 0x273 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x286 JUMPI DUP1 PUSH4 0xEE33BC45 EQ PUSH2 0x2BE JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x2C7 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x715018A6 EQ PUSH2 0x1EE JUMPI DUP1 PUSH4 0x79CC6790 EQ PUSH2 0x1F6 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x209 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x22E JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x236 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x2D44FF23 GT PUSH2 0xEF JUMPI DUP1 PUSH4 0x2D44FF23 EQ PUSH2 0x186 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x18F JUMPI DUP1 PUSH4 0x40C10F19 EQ PUSH2 0x19E JUMPI DUP1 PUSH4 0x42966C68 EQ PUSH2 0x1B3 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x1C6 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x120 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x13E JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x161 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x173 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x128 PUSH2 0x2DA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x135 SWAP2 SWAP1 PUSH2 0x925 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x151 PUSH2 0x14C CALLDATASIZE PUSH1 0x4 PUSH2 0x98C JUMP JUMPDEST PUSH2 0x36A JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x135 JUMP JUMPDEST PUSH1 0x2 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x135 JUMP JUMPDEST PUSH2 0x151 PUSH2 0x181 CALLDATASIZE PUSH1 0x4 PUSH2 0x9B4 JUMP JUMPDEST PUSH2 0x383 JUMP JUMPDEST PUSH2 0x165 PUSH1 0x7 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x9 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x135 JUMP JUMPDEST PUSH2 0x1B1 PUSH2 0x1AC CALLDATASIZE PUSH1 0x4 PUSH2 0x98C JUMP JUMPDEST PUSH2 0x3A6 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1B1 PUSH2 0x1C1 CALLDATASIZE PUSH1 0x4 PUSH2 0x9ED JUMP JUMPDEST PUSH2 0x42E JUMP JUMPDEST PUSH2 0x165 PUSH2 0x1D4 CALLDATASIZE PUSH1 0x4 PUSH2 0xA04 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x1B1 PUSH2 0x43B JUMP JUMPDEST PUSH2 0x1B1 PUSH2 0x204 CALLDATASIZE PUSH1 0x4 PUSH2 0x98C JUMP JUMPDEST PUSH2 0x44E JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x135 JUMP JUMPDEST PUSH2 0x128 PUSH2 0x463 JUMP JUMPDEST PUSH2 0x151 PUSH2 0x244 CALLDATASIZE PUSH1 0x4 PUSH2 0x98C JUMP JUMPDEST PUSH2 0x472 JUMP JUMPDEST PUSH2 0x165 PUSH2 0x257 CALLDATASIZE PUSH1 0x4 PUSH2 0xA24 JUMP JUMPDEST PUSH1 0x9 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH0 SWAP3 DUP4 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 SWAP1 SWAP2 MSTORE SWAP1 DUP3 MSTORE SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH2 0x216 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x165 PUSH2 0x294 CALLDATASIZE PUSH1 0x4 PUSH2 0xA24 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x165 PUSH1 0x8 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x1B1 PUSH2 0x2D5 CALLDATASIZE PUSH1 0x4 PUSH2 0xA04 JUMP JUMPDEST PUSH2 0x523 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x2E9 SWAP1 PUSH2 0xA55 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x315 SWAP1 PUSH2 0xA55 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x360 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x337 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x360 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x343 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 CALLER PUSH2 0x377 DUP2 DUP6 DUP6 PUSH2 0x55D JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 CALLER PUSH2 0x390 DUP6 DUP3 DUP6 PUSH2 0x56F JUMP JUMPDEST PUSH2 0x39B DUP6 DUP6 DUP6 PUSH2 0x5EA JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH2 0x3AE PUSH2 0x647 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND CALLER EQ PUSH2 0x40B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4D696E74696E6720616C6C6F776564206F6E6C7920746F206F776E6572000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x42A DUP3 PUSH2 0x41B PUSH1 0x9 PUSH1 0xA PUSH2 0xB81 JUMP JUMPDEST PUSH2 0x425 SWAP1 DUP5 PUSH2 0xB8F JUMP JUMPDEST PUSH2 0x674 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x438 CALLER DUP3 PUSH2 0x6A8 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x443 PUSH2 0x647 JUMP JUMPDEST PUSH2 0x44C PUSH0 PUSH2 0x6DC JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x459 DUP3 CALLER DUP4 PUSH2 0x56F JUMP JUMPDEST PUSH2 0x42A DUP3 DUP3 PUSH2 0x6A8 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x2E9 SWAP1 PUSH2 0xA55 JUMP JUMPDEST PUSH0 PUSH1 0x64 PUSH2 0x480 DUP4 PUSH1 0x5 PUSH2 0xB8F JUMP JUMPDEST PUSH2 0x48A SWAP2 SWAP1 PUSH2 0xBA6 JUMP JUMPDEST PUSH1 0x7 DUP2 SWAP1 SSTORE PUSH0 SWAP1 PUSH2 0x49B SWAP1 DUP5 PUSH2 0xBC5 JUMP JUMPDEST SWAP1 POP PUSH1 0x7 SLOAD PUSH1 0x8 SLOAD PUSH2 0x4AD SWAP2 SWAP1 PUSH2 0xBD8 JUMP JUMPDEST PUSH1 0x8 SSTORE PUSH1 0x6 SLOAD PUSH1 0x7 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH2 0x4CF SWAP1 CALLER SWAP1 DUP4 SWAP1 PUSH2 0x5EA JUMP JUMPDEST PUSH2 0x4DA CALLER DUP7 DUP5 PUSH2 0x5EA JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP4 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP11 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE SWAP1 DUP2 KECCAK256 DUP1 SLOAD SWAP1 SWAP2 SWAP1 PUSH2 0x513 SWAP1 DUP5 SWAP1 PUSH2 0xBD8 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH1 0x1 SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x52B PUSH2 0x647 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x554 JUMPI PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x402 JUMP JUMPDEST PUSH2 0x438 DUP2 PUSH2 0x6DC JUMP JUMPDEST PUSH2 0x56A DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x72D JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP7 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD PUSH0 NOT DUP2 EQ PUSH2 0x5E4 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x5D6 JUMPI PUSH1 0x40 MLOAD PUSH4 0x7DC7A0D9 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x64 ADD PUSH2 0x402 JUMP JUMPDEST PUSH2 0x5E4 DUP5 DUP5 DUP5 DUP5 SUB PUSH0 PUSH2 0x72D JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x613 JUMPI PUSH1 0x40 MLOAD PUSH4 0x4B637E8F PUSH1 0xE1 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x402 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x63C JUMPI PUSH1 0x40 MLOAD PUSH4 0xEC442F05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x402 JUMP JUMPDEST PUSH2 0x56A DUP4 DUP4 DUP4 PUSH2 0x7FF JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x44C JUMPI PUSH1 0x40 MLOAD PUSH4 0x118CDAA7 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x402 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x69D JUMPI PUSH1 0x40 MLOAD PUSH4 0xEC442F05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x402 JUMP JUMPDEST PUSH2 0x42A PUSH0 DUP4 DUP4 PUSH2 0x7FF JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x6D1 JUMPI PUSH1 0x40 MLOAD PUSH4 0x4B637E8F PUSH1 0xE1 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x402 JUMP JUMPDEST PUSH2 0x42A DUP3 PUSH0 DUP4 PUSH2 0x7FF JUMP JUMPDEST PUSH1 0x5 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP2 SWAP1 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH0 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x756 JUMPI PUSH1 0x40 MLOAD PUSH4 0xE602DF05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x402 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x77F JUMPI PUSH1 0x40 MLOAD PUSH4 0x4A1406B1 PUSH1 0xE1 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x402 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP8 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 DUP3 SWAP1 SSTORE DUP1 ISZERO PUSH2 0x5E4 JUMPI DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0x7F1 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x829 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x81E SWAP2 SWAP1 PUSH2 0xBD8 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH2 0x899 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x87B JUMPI PUSH1 0x40 MLOAD PUSH4 0x391434E3 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x64 ADD PUSH2 0x402 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP1 DUP3 SWAP1 SUB SWAP1 SSTORE JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x8B5 JUMPI PUSH1 0x2 DUP1 SLOAD DUP3 SWAP1 SUB SWAP1 SSTORE PUSH2 0x8D3 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD DUP3 ADD SWAP1 SSTORE JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x918 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 PUSH1 0x20 DUP6 ADD MSTORE PUSH0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x951 JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0x935 JUMP JUMPDEST POP PUSH0 PUSH1 0x40 DUP3 DUP7 ADD ADD MSTORE PUSH1 0x40 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP6 ADD ADD SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x987 JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x99D JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x9A6 DUP4 PUSH2 0x971 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x9C6 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x9CF DUP5 PUSH2 0x971 JUMP JUMPDEST SWAP3 POP PUSH2 0x9DD PUSH1 0x20 DUP6 ADD PUSH2 0x971 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x9FD JUMPI PUSH0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xA14 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xA1D DUP3 PUSH2 0x971 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xA35 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xA3E DUP4 PUSH2 0x971 JUMP JUMPDEST SWAP2 POP PUSH2 0xA4C PUSH1 0x20 DUP5 ADD PUSH2 0x971 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0xA69 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0xA87 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH1 0x1 DUP2 DUP2 JUMPDEST DUP1 DUP6 GT ISZERO PUSH2 0xADB JUMPI DUP2 PUSH0 NOT DIV DUP3 GT ISZERO PUSH2 0xAC1 JUMPI PUSH2 0xAC1 PUSH2 0xA8D JUMP JUMPDEST DUP1 DUP6 AND ISZERO PUSH2 0xACE JUMPI SWAP2 DUP2 MUL SWAP2 JUMPDEST SWAP4 DUP5 SHR SWAP4 SWAP1 DUP1 MUL SWAP1 PUSH2 0xAA6 JUMP JUMPDEST POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 PUSH2 0xAF1 JUMPI POP PUSH1 0x1 PUSH2 0x37D JUMP JUMPDEST DUP2 PUSH2 0xAFD JUMPI POP PUSH0 PUSH2 0x37D JUMP JUMPDEST DUP2 PUSH1 0x1 DUP2 EQ PUSH2 0xB13 JUMPI PUSH1 0x2 DUP2 EQ PUSH2 0xB1D JUMPI PUSH2 0xB39 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP PUSH2 0x37D JUMP JUMPDEST PUSH1 0xFF DUP5 GT ISZERO PUSH2 0xB2E JUMPI PUSH2 0xB2E PUSH2 0xA8D JUMP JUMPDEST POP POP PUSH1 0x1 DUP3 SHL PUSH2 0x37D JUMP JUMPDEST POP PUSH1 0x20 DUP4 LT PUSH2 0x133 DUP4 LT AND PUSH1 0x4E DUP5 LT PUSH1 0xB DUP5 LT AND OR ISZERO PUSH2 0xB5C JUMPI POP DUP2 DUP2 EXP PUSH2 0x37D JUMP JUMPDEST PUSH2 0xB66 DUP4 DUP4 PUSH2 0xAA1 JUMP JUMPDEST DUP1 PUSH0 NOT DIV DUP3 GT ISZERO PUSH2 0xB79 JUMPI PUSH2 0xB79 PUSH2 0xA8D JUMP JUMPDEST MUL SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0xA1D PUSH1 0xFF DUP5 AND DUP4 PUSH2 0xAE3 JUMP JUMPDEST DUP1 DUP3 MUL DUP2 ISZERO DUP3 DUP3 DIV DUP5 EQ OR PUSH2 0x37D JUMPI PUSH2 0x37D PUSH2 0xA8D JUMP JUMPDEST PUSH0 DUP3 PUSH2 0xBC0 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x37D JUMPI PUSH2 0x37D PUSH2 0xA8D JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x37D JUMPI PUSH2 0x37D PUSH2 0xA8D JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 BASEFEE 0xBF 0x5E 0x24 CREATE2 0xD5 0xC9 PUSH17 0x7227112533536FC041CB860AB255D8DD55 0xC5 0x5D CALLCODE 0x4F 0x2D SELFDESTRUCT PUSH30 0x64736F6C6343000817003300000000000000000000000000000000000000 ",
							"sourceMap": "243:1276:7:-:0;;;483:243;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;605:12;1896:113:2;;;;;;;;;;;;;-1:-1:-1;;;1896:113:2;;;;;;;;;;;;;;;;-1:-1:-1;;;1896:113:2;;;1970:5;1962;:13;;;;;;:::i;:::-;-1:-1:-1;1985:7:2;:17;1995:7;1985;:17;:::i;:::-;-1:-1:-1;;;;;;;;1273:26:0;;1269:95;;1322:31;;-1:-1:-1;;;1322:31:0;;1350:1;1322:31;;;3388:51:8;3361:18;;1322:31:0;;;;;;;;1269:95;1373:32;1392:12;1373:18;:32::i;:::-;-1:-1:-1;633:12:7::2;:28:::0;;-1:-1:-1;;;;;;633:28:7::2;-1:-1:-1::0;;;;;633:28:7;::::2;;::::0;;671:48:::2;677:12:::0;706:10:::2;999:1:::0;;920:87;706:10:::2;700:17;::::0;:2:::2;:17;:::i;:::-;690:28;::::0;:6;:28:::2;:::i;:::-;671:5;:48::i;:::-;483:243:::0;;;243:1276;;2912:187:0;3004:6;;;-1:-1:-1;;;;;3020:17:0;;;-1:-1:-1;;;;;;3020:17:0;;;;;;;3052:40;;3004:6;;;3020:17;3004:6;;3052:40;;2985:16;;3052:40;2975:124;2912:187;:::o;7721:208:2:-;-1:-1:-1;;;;;7791:21:2;;7787:91;;7835:32;;-1:-1:-1;;;7835:32:2;;7864:1;7835:32;;;3388:51:8;3361:18;;7835:32:2;3242:203:8;7787:91:2;7887:35;7903:1;7907:7;7916:5;7887:7;:35::i;:::-;7721:208;;:::o;6271:1107::-;-1:-1:-1;;;;;6360:18:2;;6356:540;;6512:5;6496:12;;:21;;;;;;;:::i;:::-;;;;-1:-1:-1;6356:540:2;;-1:-1:-1;6356:540:2;;-1:-1:-1;;;;;6570:15:2;;6548:19;6570:15;;;;;;;;;;;6603:19;;;6599:115;;;6649:50;;-1:-1:-1;;;6649:50:2;;-1:-1:-1;;;;;5482:32:8;;6649:50:2;;;5464:51:8;5531:18;;;5524:34;;;5574:18;;;5567:34;;;5437:18;;6649:50:2;5262:345:8;6599:115:2;-1:-1:-1;;;;;6834:15:2;;:9;:15;;;;;;;;;;6852:19;;;;6834:37;;6356:540;-1:-1:-1;;;;;6910:16:2;;6906:425;;7073:12;:21;;;;;;;6906:425;;;-1:-1:-1;;;;;7284:13:2;;:9;:13;;;;;;;;;;:22;;;;;;6906:425;7361:2;-1:-1:-1;;;;;7346:25:2;7355:4;-1:-1:-1;;;;;7346:25:2;;7365:5;7346:25;;;;5758::8;;5746:2;5731:18;;5612:177;7346:25:2;;;;;;;;6271:1107;;;:::o;14:177:8:-;93:13;;-1:-1:-1;;;;;135:31:8;;125:42;;115:70;;181:1;178;171:12;115:70;14:177;;;:::o;196:354::-;284:6;292;300;353:2;341:9;332:7;328:23;324:32;321:52;;;369:1;366;359:12;321:52;392:40;422:9;392:40;:::i;:::-;382:50;;472:2;461:9;457:18;451:25;441:35;;495:49;540:2;529:9;525:18;495:49;:::i;:::-;485:59;;196:354;;;;;:::o;555:127::-;616:10;611:3;607:20;604:1;597:31;647:4;644:1;637:15;671:4;668:1;661:15;687:380;766:1;762:12;;;;809;;;830:61;;884:4;876:6;872:17;862:27;;830:61;937:2;929:6;926:14;906:18;903:38;900:161;;983:10;978:3;974:20;971:1;964:31;1018:4;1015:1;1008:15;1046:4;1043:1;1036:15;900:161;;687:380;;;:::o;1198:518::-;1300:2;1295:3;1292:11;1289:421;;;1336:5;1333:1;1326:16;1380:4;1377:1;1367:18;1450:2;1438:10;1434:19;1431:1;1427:27;1421:4;1417:38;1486:4;1474:10;1471:20;1468:47;;;-1:-1:-1;1509:4:8;1468:47;1564:2;1559:3;1555:12;1552:1;1548:20;1542:4;1538:31;1528:41;;1619:81;1637:2;1630:5;1627:13;1619:81;;;1696:1;1682:16;;1663:1;1652:13;1619:81;;;1623:3;;1289:421;1198:518;;;:::o;1892:1345::-;2012:10;;-1:-1:-1;;;;;2034:30:8;;2031:56;;;2067:18;;:::i;:::-;2096:97;2186:6;2146:38;2178:4;2172:11;2146:38;:::i;:::-;2140:4;2096:97;:::i;:::-;2248:4;;2305:2;2294:14;;2322:1;2317:663;;;;3024:1;3041:6;3038:89;;;-1:-1:-1;3093:19:8;;;3087:26;3038:89;-1:-1:-1;;1849:1:8;1845:11;;;1841:24;1837:29;1827:40;1873:1;1869:11;;;1824:57;3140:81;;2287:944;;2317:663;1145:1;1138:14;;;1182:4;1169:18;;-1:-1:-1;;2353:20:8;;;2471:236;2485:7;2482:1;2479:14;2471:236;;;2574:19;;;2568:26;2553:42;;2666:27;;;;2634:1;2622:14;;;;2501:19;;2471:236;;;2475:3;2735:6;2726:7;2723:19;2720:201;;;2796:19;;;2790:26;-1:-1:-1;;2879:1:8;2875:14;;;2891:3;2871:24;2867:37;2863:42;2848:58;2833:74;;2720:201;;;2967:1;2958:6;2955:1;2951:14;2947:22;2941:4;2934:36;2287:944;;;;;1892:1345;;:::o;3450:127::-;3511:10;3506:3;3502:20;3499:1;3492:31;3542:4;3539:1;3532:15;3566:4;3563:1;3556:15;3582:416;3671:1;3708:5;3671:1;3722:270;3743:7;3733:8;3730:21;3722:270;;;3802:4;3798:1;3794:6;3790:17;3784:4;3781:27;3778:53;;;3811:18;;:::i;:::-;3861:7;3851:8;3847:22;3844:55;;;3881:16;;;;3844:55;3960:22;;;;3920:15;;;;3722:270;;;3726:3;3582:416;;;;;:::o;4003:806::-;4052:5;4082:8;4072:80;;-1:-1:-1;4123:1:8;4137:5;;4072:80;4171:4;4161:76;;-1:-1:-1;4208:1:8;4222:5;;4161:76;4253:4;4271:1;4266:59;;;;4339:1;4334:130;;;;4246:218;;4266:59;4296:1;4287:10;;4310:5;;;4334:130;4371:3;4361:8;4358:17;4355:43;;;4378:18;;:::i;:::-;-1:-1:-1;;4434:1:8;4420:16;;4449:5;;4246:218;;4548:2;4538:8;4535:16;4529:3;4523:4;4520:13;4516:36;4510:2;4500:8;4497:16;4492:2;4486:4;4483:12;4479:35;4476:77;4473:159;;;-1:-1:-1;4585:19:8;;;4617:5;;4473:159;4664:34;4689:8;4683:4;4664:34;:::i;:::-;4734:6;4730:1;4726:6;4722:19;4713:7;4710:32;4707:58;;;4745:18;;:::i;:::-;4783:20;;-1:-1:-1;4003:806:8;;;;;:::o;4814:140::-;4872:5;4901:47;4942:4;4932:8;4928:19;4922:4;4901:47;:::i;:::-;4892:56;4814:140;-1:-1:-1;;;4814:140:8:o;4959:168::-;5032:9;;;5063;;5080:15;;;5074:22;;5060:37;5050:71;;5101:18;;:::i;5132:125::-;5197:9;;;5218:10;;;5215:36;;;5231:18;;:::i;5612:177::-;243:1276:7;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_approve_690": {
									"entryPoint": 1373,
									"id": 690,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_approve_750": {
									"entryPoint": 1837,
									"id": 750,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_burn_672": {
									"entryPoint": 1704,
									"id": 672,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_checkOwner_84": {
									"entryPoint": 1607,
									"id": 84,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_mint_639": {
									"entryPoint": 1652,
									"id": 639,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_msgSender_961": {
									"entryPoint": null,
									"id": 961,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_spendAllowance_798": {
									"entryPoint": 1391,
									"id": 798,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_taxRecord_1002": {
									"entryPoint": null,
									"id": 1002,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_transferOwnership_146": {
									"entryPoint": 1756,
									"id": 146,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_transfer_529": {
									"entryPoint": 1514,
									"id": 529,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_update_606": {
									"entryPoint": 2047,
									"id": 606,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@allowance_426": {
									"entryPoint": null,
									"id": 426,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@approve_450": {
									"entryPoint": 874,
									"id": 450,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@balanceOf_385": {
									"entryPoint": null,
									"id": 385,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@burnFrom_922": {
									"entryPoint": 1102,
									"id": 922,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@burn_901": {
									"entryPoint": 1070,
									"id": 901,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@currentTaxDeducted_994": {
									"entryPoint": null,
									"id": 994,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@decimals_1074": {
									"entryPoint": null,
									"id": 1074,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@grossTaxCollected_996": {
									"entryPoint": null,
									"id": 996,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@mint_1065": {
									"entryPoint": 934,
									"id": 1065,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@name_345": {
									"entryPoint": 730,
									"id": 345,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@owner_67": {
									"entryPoint": null,
									"id": 67,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@renounceOwnership_98": {
									"entryPoint": 1083,
									"id": 98,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@symbol_354": {
									"entryPoint": 1123,
									"id": 354,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@taxCollector_992": {
									"entryPoint": null,
									"id": 992,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@totalSupply_372": {
									"entryPoint": null,
									"id": 372,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@transferFrom_482": {
									"entryPoint": 899,
									"id": 482,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@transferOwnership_126": {
									"entryPoint": 1315,
									"id": 126,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@transfer_1134": {
									"entryPoint": 1138,
									"id": 1134,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_address": {
									"entryPoint": 2417,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 2564,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 2596,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 2484,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 2444,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 2541,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 2341,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_a29bafda5c460178656603e71f46c7a7e2678699659809e503dcaef8e54424ae__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 3032,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 2982,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_exp_helper": {
									"entryPoint": 2721,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"checked_exp_t_uint256_t_uint8": {
									"entryPoint": 2945,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_exp_unsigned": {
									"entryPoint": 2787,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 2959,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 3013,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 2645,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 2701,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:6006:8",
										"nodeType": "YulBlock",
										"src": "0:6006:8",
										"statements": [
											{
												"nativeSrc": "6:3:8",
												"nodeType": "YulBlock",
												"src": "6:3:8",
												"statements": []
											},
											{
												"body": {
													"nativeSrc": "135:427:8",
													"nodeType": "YulBlock",
													"src": "135:427:8",
													"statements": [
														{
															"nativeSrc": "145:12:8",
															"nodeType": "YulVariableDeclaration",
															"src": "145:12:8",
															"value": {
																"kind": "number",
																"nativeSrc": "155:2:8",
																"nodeType": "YulLiteral",
																"src": "155:2:8",
																"type": "",
																"value": "32"
															},
															"variables": [
																{
																	"name": "_1",
																	"nativeSrc": "149:2:8",
																	"nodeType": "YulTypedName",
																	"src": "149:2:8",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "173:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "173:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "184:2:8",
																		"nodeType": "YulLiteral",
																		"src": "184:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "166:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "166:6:8"
																},
																"nativeSrc": "166:21:8",
																"nodeType": "YulFunctionCall",
																"src": "166:21:8"
															},
															"nativeSrc": "166:21:8",
															"nodeType": "YulExpressionStatement",
															"src": "166:21:8"
														},
														{
															"nativeSrc": "196:27:8",
															"nodeType": "YulVariableDeclaration",
															"src": "196:27:8",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "216:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "216:6:8"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "210:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "210:5:8"
																},
																"nativeSrc": "210:13:8",
																"nodeType": "YulFunctionCall",
																"src": "210:13:8"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "200:6:8",
																	"nodeType": "YulTypedName",
																	"src": "200:6:8",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "243:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "243:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "254:2:8",
																				"nodeType": "YulLiteral",
																				"src": "254:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "239:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "239:3:8"
																		},
																		"nativeSrc": "239:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "239:18:8"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "259:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "259:6:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "232:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "232:6:8"
																},
																"nativeSrc": "232:34:8",
																"nodeType": "YulFunctionCall",
																"src": "232:34:8"
															},
															"nativeSrc": "232:34:8",
															"nodeType": "YulExpressionStatement",
															"src": "232:34:8"
														},
														{
															"nativeSrc": "275:10:8",
															"nodeType": "YulVariableDeclaration",
															"src": "275:10:8",
															"value": {
																"kind": "number",
																"nativeSrc": "284:1:8",
																"nodeType": "YulLiteral",
																"src": "284:1:8",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nativeSrc": "279:1:8",
																	"nodeType": "YulTypedName",
																	"src": "279:1:8",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "344:90:8",
																"nodeType": "YulBlock",
																"src": "344:90:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "headStart",
																									"nativeSrc": "373:9:8",
																									"nodeType": "YulIdentifier",
																									"src": "373:9:8"
																								},
																								{
																									"name": "i",
																									"nativeSrc": "384:1:8",
																									"nodeType": "YulIdentifier",
																									"src": "384:1:8"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "369:3:8",
																								"nodeType": "YulIdentifier",
																								"src": "369:3:8"
																							},
																							"nativeSrc": "369:17:8",
																							"nodeType": "YulFunctionCall",
																							"src": "369:17:8"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "388:2:8",
																							"nodeType": "YulLiteral",
																							"src": "388:2:8",
																							"type": "",
																							"value": "64"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "365:3:8",
																						"nodeType": "YulIdentifier",
																						"src": "365:3:8"
																					},
																					"nativeSrc": "365:26:8",
																					"nodeType": "YulFunctionCall",
																					"src": "365:26:8"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "value0",
																											"nativeSrc": "407:6:8",
																											"nodeType": "YulIdentifier",
																											"src": "407:6:8"
																										},
																										{
																											"name": "i",
																											"nativeSrc": "415:1:8",
																											"nodeType": "YulIdentifier",
																											"src": "415:1:8"
																										}
																									],
																									"functionName": {
																										"name": "add",
																										"nativeSrc": "403:3:8",
																										"nodeType": "YulIdentifier",
																										"src": "403:3:8"
																									},
																									"nativeSrc": "403:14:8",
																									"nodeType": "YulFunctionCall",
																									"src": "403:14:8"
																								},
																								{
																									"name": "_1",
																									"nativeSrc": "419:2:8",
																									"nodeType": "YulIdentifier",
																									"src": "419:2:8"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "399:3:8",
																								"nodeType": "YulIdentifier",
																								"src": "399:3:8"
																							},
																							"nativeSrc": "399:23:8",
																							"nodeType": "YulFunctionCall",
																							"src": "399:23:8"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nativeSrc": "393:5:8",
																						"nodeType": "YulIdentifier",
																						"src": "393:5:8"
																					},
																					"nativeSrc": "393:30:8",
																					"nodeType": "YulFunctionCall",
																					"src": "393:30:8"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "358:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "358:6:8"
																			},
																			"nativeSrc": "358:66:8",
																			"nodeType": "YulFunctionCall",
																			"src": "358:66:8"
																		},
																		"nativeSrc": "358:66:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "358:66:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nativeSrc": "305:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "305:1:8"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "308:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "308:6:8"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "302:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "302:2:8"
																},
																"nativeSrc": "302:13:8",
																"nodeType": "YulFunctionCall",
																"src": "302:13:8"
															},
															"nativeSrc": "294:140:8",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "316:19:8",
																"nodeType": "YulBlock",
																"src": "316:19:8",
																"statements": [
																	{
																		"nativeSrc": "318:15:8",
																		"nodeType": "YulAssignment",
																		"src": "318:15:8",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nativeSrc": "327:1:8",
																					"nodeType": "YulIdentifier",
																					"src": "327:1:8"
																				},
																				{
																					"name": "_1",
																					"nativeSrc": "330:2:8",
																					"nodeType": "YulIdentifier",
																					"src": "330:2:8"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "323:3:8",
																				"nodeType": "YulIdentifier",
																				"src": "323:3:8"
																			},
																			"nativeSrc": "323:10:8",
																			"nodeType": "YulFunctionCall",
																			"src": "323:10:8"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nativeSrc": "318:1:8",
																				"nodeType": "YulIdentifier",
																				"src": "318:1:8"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "298:3:8",
																"nodeType": "YulBlock",
																"src": "298:3:8",
																"statements": []
															},
															"src": "294:140:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "458:9:8",
																						"nodeType": "YulIdentifier",
																						"src": "458:9:8"
																					},
																					{
																						"name": "length",
																						"nativeSrc": "469:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "469:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "454:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "454:3:8"
																				},
																				"nativeSrc": "454:22:8",
																				"nodeType": "YulFunctionCall",
																				"src": "454:22:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "478:2:8",
																				"nodeType": "YulLiteral",
																				"src": "478:2:8",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "450:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "450:3:8"
																		},
																		"nativeSrc": "450:31:8",
																		"nodeType": "YulFunctionCall",
																		"src": "450:31:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "483:1:8",
																		"nodeType": "YulLiteral",
																		"src": "483:1:8",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "443:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "443:6:8"
																},
																"nativeSrc": "443:42:8",
																"nodeType": "YulFunctionCall",
																"src": "443:42:8"
															},
															"nativeSrc": "443:42:8",
															"nodeType": "YulExpressionStatement",
															"src": "443:42:8"
														},
														{
															"nativeSrc": "494:62:8",
															"nodeType": "YulAssignment",
															"src": "494:62:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "510:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "510:9:8"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "length",
																								"nativeSrc": "529:6:8",
																								"nodeType": "YulIdentifier",
																								"src": "529:6:8"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "537:2:8",
																								"nodeType": "YulLiteral",
																								"src": "537:2:8",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nativeSrc": "525:3:8",
																							"nodeType": "YulIdentifier",
																							"src": "525:3:8"
																						},
																						"nativeSrc": "525:15:8",
																						"nodeType": "YulFunctionCall",
																						"src": "525:15:8"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "546:2:8",
																								"nodeType": "YulLiteral",
																								"src": "546:2:8",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nativeSrc": "542:3:8",
																							"nodeType": "YulIdentifier",
																							"src": "542:3:8"
																						},
																						"nativeSrc": "542:7:8",
																						"nodeType": "YulFunctionCall",
																						"src": "542:7:8"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "521:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "521:3:8"
																				},
																				"nativeSrc": "521:29:8",
																				"nodeType": "YulFunctionCall",
																				"src": "521:29:8"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "506:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "506:3:8"
																		},
																		"nativeSrc": "506:45:8",
																		"nodeType": "YulFunctionCall",
																		"src": "506:45:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "553:2:8",
																		"nodeType": "YulLiteral",
																		"src": "553:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "502:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "502:3:8"
																},
																"nativeSrc": "502:54:8",
																"nodeType": "YulFunctionCall",
																"src": "502:54:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "494:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "494:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "14:548:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "104:9:8",
														"nodeType": "YulTypedName",
														"src": "104:9:8",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "115:6:8",
														"nodeType": "YulTypedName",
														"src": "115:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "126:4:8",
														"nodeType": "YulTypedName",
														"src": "126:4:8",
														"type": ""
													}
												],
												"src": "14:548:8"
											},
											{
												"body": {
													"nativeSrc": "616:124:8",
													"nodeType": "YulBlock",
													"src": "616:124:8",
													"statements": [
														{
															"nativeSrc": "626:29:8",
															"nodeType": "YulAssignment",
															"src": "626:29:8",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "648:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "648:6:8"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "635:12:8",
																	"nodeType": "YulIdentifier",
																	"src": "635:12:8"
																},
																"nativeSrc": "635:20:8",
																"nodeType": "YulFunctionCall",
																"src": "635:20:8"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "626:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "626:5:8"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "718:16:8",
																"nodeType": "YulBlock",
																"src": "718:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "727:1:8",
																					"nodeType": "YulLiteral",
																					"src": "727:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "730:1:8",
																					"nodeType": "YulLiteral",
																					"src": "730:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "720:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "720:6:8"
																			},
																			"nativeSrc": "720:12:8",
																			"nodeType": "YulFunctionCall",
																			"src": "720:12:8"
																		},
																		"nativeSrc": "720:12:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "720:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "677:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "677:5:8"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "688:5:8",
																						"nodeType": "YulIdentifier",
																						"src": "688:5:8"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "703:3:8",
																										"nodeType": "YulLiteral",
																										"src": "703:3:8",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "708:1:8",
																										"nodeType": "YulLiteral",
																										"src": "708:1:8",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nativeSrc": "699:3:8",
																									"nodeType": "YulIdentifier",
																									"src": "699:3:8"
																								},
																								"nativeSrc": "699:11:8",
																								"nodeType": "YulFunctionCall",
																								"src": "699:11:8"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "712:1:8",
																								"nodeType": "YulLiteral",
																								"src": "712:1:8",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nativeSrc": "695:3:8",
																							"nodeType": "YulIdentifier",
																							"src": "695:3:8"
																						},
																						"nativeSrc": "695:19:8",
																						"nodeType": "YulFunctionCall",
																						"src": "695:19:8"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "684:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "684:3:8"
																				},
																				"nativeSrc": "684:31:8",
																				"nodeType": "YulFunctionCall",
																				"src": "684:31:8"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "674:2:8",
																			"nodeType": "YulIdentifier",
																			"src": "674:2:8"
																		},
																		"nativeSrc": "674:42:8",
																		"nodeType": "YulFunctionCall",
																		"src": "674:42:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "667:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "667:6:8"
																},
																"nativeSrc": "667:50:8",
																"nodeType": "YulFunctionCall",
																"src": "667:50:8"
															},
															"nativeSrc": "664:70:8",
															"nodeType": "YulIf",
															"src": "664:70:8"
														}
													]
												},
												"name": "abi_decode_address",
												"nativeSrc": "567:173:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "595:6:8",
														"nodeType": "YulTypedName",
														"src": "595:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "606:5:8",
														"nodeType": "YulTypedName",
														"src": "606:5:8",
														"type": ""
													}
												],
												"src": "567:173:8"
											},
											{
												"body": {
													"nativeSrc": "832:167:8",
													"nodeType": "YulBlock",
													"src": "832:167:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "878:16:8",
																"nodeType": "YulBlock",
																"src": "878:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "887:1:8",
																					"nodeType": "YulLiteral",
																					"src": "887:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "890:1:8",
																					"nodeType": "YulLiteral",
																					"src": "890:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "880:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "880:6:8"
																			},
																			"nativeSrc": "880:12:8",
																			"nodeType": "YulFunctionCall",
																			"src": "880:12:8"
																		},
																		"nativeSrc": "880:12:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "880:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "853:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "853:7:8"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "862:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "862:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "849:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "849:3:8"
																		},
																		"nativeSrc": "849:23:8",
																		"nodeType": "YulFunctionCall",
																		"src": "849:23:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "874:2:8",
																		"nodeType": "YulLiteral",
																		"src": "874:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "845:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "845:3:8"
																},
																"nativeSrc": "845:32:8",
																"nodeType": "YulFunctionCall",
																"src": "845:32:8"
															},
															"nativeSrc": "842:52:8",
															"nodeType": "YulIf",
															"src": "842:52:8"
														},
														{
															"nativeSrc": "903:39:8",
															"nodeType": "YulAssignment",
															"src": "903:39:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "932:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "932:9:8"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "913:18:8",
																	"nodeType": "YulIdentifier",
																	"src": "913:18:8"
																},
																"nativeSrc": "913:29:8",
																"nodeType": "YulFunctionCall",
																"src": "913:29:8"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "903:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "903:6:8"
																}
															]
														},
														{
															"nativeSrc": "951:42:8",
															"nodeType": "YulAssignment",
															"src": "951:42:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "978:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "978:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "989:2:8",
																				"nodeType": "YulLiteral",
																				"src": "989:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "974:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "974:3:8"
																		},
																		"nativeSrc": "974:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "974:18:8"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "961:12:8",
																	"nodeType": "YulIdentifier",
																	"src": "961:12:8"
																},
																"nativeSrc": "961:32:8",
																"nodeType": "YulFunctionCall",
																"src": "961:32:8"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "951:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "951:6:8"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nativeSrc": "745:254:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "790:9:8",
														"nodeType": "YulTypedName",
														"src": "790:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "801:7:8",
														"nodeType": "YulTypedName",
														"src": "801:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "813:6:8",
														"nodeType": "YulTypedName",
														"src": "813:6:8",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "821:6:8",
														"nodeType": "YulTypedName",
														"src": "821:6:8",
														"type": ""
													}
												],
												"src": "745:254:8"
											},
											{
												"body": {
													"nativeSrc": "1099:92:8",
													"nodeType": "YulBlock",
													"src": "1099:92:8",
													"statements": [
														{
															"nativeSrc": "1109:26:8",
															"nodeType": "YulAssignment",
															"src": "1109:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1121:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "1121:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1132:2:8",
																		"nodeType": "YulLiteral",
																		"src": "1132:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1117:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "1117:3:8"
																},
																"nativeSrc": "1117:18:8",
																"nodeType": "YulFunctionCall",
																"src": "1117:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1109:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "1109:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1151:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "1151:9:8"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nativeSrc": "1176:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "1176:6:8"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "1169:6:8",
																					"nodeType": "YulIdentifier",
																					"src": "1169:6:8"
																				},
																				"nativeSrc": "1169:14:8",
																				"nodeType": "YulFunctionCall",
																				"src": "1169:14:8"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "1162:6:8",
																			"nodeType": "YulIdentifier",
																			"src": "1162:6:8"
																		},
																		"nativeSrc": "1162:22:8",
																		"nodeType": "YulFunctionCall",
																		"src": "1162:22:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1144:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "1144:6:8"
																},
																"nativeSrc": "1144:41:8",
																"nodeType": "YulFunctionCall",
																"src": "1144:41:8"
															},
															"nativeSrc": "1144:41:8",
															"nodeType": "YulExpressionStatement",
															"src": "1144:41:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nativeSrc": "1004:187:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1068:9:8",
														"nodeType": "YulTypedName",
														"src": "1068:9:8",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1079:6:8",
														"nodeType": "YulTypedName",
														"src": "1079:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1090:4:8",
														"nodeType": "YulTypedName",
														"src": "1090:4:8",
														"type": ""
													}
												],
												"src": "1004:187:8"
											},
											{
												"body": {
													"nativeSrc": "1297:76:8",
													"nodeType": "YulBlock",
													"src": "1297:76:8",
													"statements": [
														{
															"nativeSrc": "1307:26:8",
															"nodeType": "YulAssignment",
															"src": "1307:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1319:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "1319:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1330:2:8",
																		"nodeType": "YulLiteral",
																		"src": "1330:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1315:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "1315:3:8"
																},
																"nativeSrc": "1315:18:8",
																"nodeType": "YulFunctionCall",
																"src": "1315:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1307:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "1307:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1349:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "1349:9:8"
																	},
																	{
																		"name": "value0",
																		"nativeSrc": "1360:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "1360:6:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1342:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "1342:6:8"
																},
																"nativeSrc": "1342:25:8",
																"nodeType": "YulFunctionCall",
																"src": "1342:25:8"
															},
															"nativeSrc": "1342:25:8",
															"nodeType": "YulExpressionStatement",
															"src": "1342:25:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "1196:177:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1266:9:8",
														"nodeType": "YulTypedName",
														"src": "1266:9:8",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1277:6:8",
														"nodeType": "YulTypedName",
														"src": "1277:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1288:4:8",
														"nodeType": "YulTypedName",
														"src": "1288:4:8",
														"type": ""
													}
												],
												"src": "1196:177:8"
											},
											{
												"body": {
													"nativeSrc": "1482:224:8",
													"nodeType": "YulBlock",
													"src": "1482:224:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "1528:16:8",
																"nodeType": "YulBlock",
																"src": "1528:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1537:1:8",
																					"nodeType": "YulLiteral",
																					"src": "1537:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1540:1:8",
																					"nodeType": "YulLiteral",
																					"src": "1540:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1530:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "1530:6:8"
																			},
																			"nativeSrc": "1530:12:8",
																			"nodeType": "YulFunctionCall",
																			"src": "1530:12:8"
																		},
																		"nativeSrc": "1530:12:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "1530:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1503:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "1503:7:8"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1512:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "1512:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1499:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "1499:3:8"
																		},
																		"nativeSrc": "1499:23:8",
																		"nodeType": "YulFunctionCall",
																		"src": "1499:23:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1524:2:8",
																		"nodeType": "YulLiteral",
																		"src": "1524:2:8",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1495:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "1495:3:8"
																},
																"nativeSrc": "1495:32:8",
																"nodeType": "YulFunctionCall",
																"src": "1495:32:8"
															},
															"nativeSrc": "1492:52:8",
															"nodeType": "YulIf",
															"src": "1492:52:8"
														},
														{
															"nativeSrc": "1553:39:8",
															"nodeType": "YulAssignment",
															"src": "1553:39:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1582:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "1582:9:8"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "1563:18:8",
																	"nodeType": "YulIdentifier",
																	"src": "1563:18:8"
																},
																"nativeSrc": "1563:29:8",
																"nodeType": "YulFunctionCall",
																"src": "1563:29:8"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "1553:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "1553:6:8"
																}
															]
														},
														{
															"nativeSrc": "1601:48:8",
															"nodeType": "YulAssignment",
															"src": "1601:48:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1634:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "1634:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1645:2:8",
																				"nodeType": "YulLiteral",
																				"src": "1645:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1630:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "1630:3:8"
																		},
																		"nativeSrc": "1630:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "1630:18:8"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "1611:18:8",
																	"nodeType": "YulIdentifier",
																	"src": "1611:18:8"
																},
																"nativeSrc": "1611:38:8",
																"nodeType": "YulFunctionCall",
																"src": "1611:38:8"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "1601:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "1601:6:8"
																}
															]
														},
														{
															"nativeSrc": "1658:42:8",
															"nodeType": "YulAssignment",
															"src": "1658:42:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1685:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "1685:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1696:2:8",
																				"nodeType": "YulLiteral",
																				"src": "1696:2:8",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1681:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "1681:3:8"
																		},
																		"nativeSrc": "1681:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "1681:18:8"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1668:12:8",
																	"nodeType": "YulIdentifier",
																	"src": "1668:12:8"
																},
																"nativeSrc": "1668:32:8",
																"nodeType": "YulFunctionCall",
																"src": "1668:32:8"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nativeSrc": "1658:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "1658:6:8"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nativeSrc": "1378:328:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1432:9:8",
														"nodeType": "YulTypedName",
														"src": "1432:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1443:7:8",
														"nodeType": "YulTypedName",
														"src": "1443:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1455:6:8",
														"nodeType": "YulTypedName",
														"src": "1455:6:8",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "1463:6:8",
														"nodeType": "YulTypedName",
														"src": "1463:6:8",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "1471:6:8",
														"nodeType": "YulTypedName",
														"src": "1471:6:8",
														"type": ""
													}
												],
												"src": "1378:328:8"
											},
											{
												"body": {
													"nativeSrc": "1808:87:8",
													"nodeType": "YulBlock",
													"src": "1808:87:8",
													"statements": [
														{
															"nativeSrc": "1818:26:8",
															"nodeType": "YulAssignment",
															"src": "1818:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1830:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "1830:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1841:2:8",
																		"nodeType": "YulLiteral",
																		"src": "1841:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1826:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "1826:3:8"
																},
																"nativeSrc": "1826:18:8",
																"nodeType": "YulFunctionCall",
																"src": "1826:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1818:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "1818:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1860:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "1860:9:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "1875:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "1875:6:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1883:4:8",
																				"nodeType": "YulLiteral",
																				"src": "1883:4:8",
																				"type": "",
																				"value": "0xff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "1871:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "1871:3:8"
																		},
																		"nativeSrc": "1871:17:8",
																		"nodeType": "YulFunctionCall",
																		"src": "1871:17:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1853:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "1853:6:8"
																},
																"nativeSrc": "1853:36:8",
																"nodeType": "YulFunctionCall",
																"src": "1853:36:8"
															},
															"nativeSrc": "1853:36:8",
															"nodeType": "YulExpressionStatement",
															"src": "1853:36:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
												"nativeSrc": "1711:184:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1777:9:8",
														"nodeType": "YulTypedName",
														"src": "1777:9:8",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1788:6:8",
														"nodeType": "YulTypedName",
														"src": "1788:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1799:4:8",
														"nodeType": "YulTypedName",
														"src": "1799:4:8",
														"type": ""
													}
												],
												"src": "1711:184:8"
											},
											{
												"body": {
													"nativeSrc": "1970:110:8",
													"nodeType": "YulBlock",
													"src": "1970:110:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "2016:16:8",
																"nodeType": "YulBlock",
																"src": "2016:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2025:1:8",
																					"nodeType": "YulLiteral",
																					"src": "2025:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2028:1:8",
																					"nodeType": "YulLiteral",
																					"src": "2028:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2018:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "2018:6:8"
																			},
																			"nativeSrc": "2018:12:8",
																			"nodeType": "YulFunctionCall",
																			"src": "2018:12:8"
																		},
																		"nativeSrc": "2018:12:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "2018:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1991:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "1991:7:8"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2000:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "2000:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1987:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "1987:3:8"
																		},
																		"nativeSrc": "1987:23:8",
																		"nodeType": "YulFunctionCall",
																		"src": "1987:23:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2012:2:8",
																		"nodeType": "YulLiteral",
																		"src": "2012:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1983:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "1983:3:8"
																},
																"nativeSrc": "1983:32:8",
																"nodeType": "YulFunctionCall",
																"src": "1983:32:8"
															},
															"nativeSrc": "1980:52:8",
															"nodeType": "YulIf",
															"src": "1980:52:8"
														},
														{
															"nativeSrc": "2041:33:8",
															"nodeType": "YulAssignment",
															"src": "2041:33:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2064:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "2064:9:8"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2051:12:8",
																	"nodeType": "YulIdentifier",
																	"src": "2051:12:8"
																},
																"nativeSrc": "2051:23:8",
																"nodeType": "YulFunctionCall",
																"src": "2051:23:8"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "2041:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "2041:6:8"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nativeSrc": "1900:180:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1936:9:8",
														"nodeType": "YulTypedName",
														"src": "1936:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1947:7:8",
														"nodeType": "YulTypedName",
														"src": "1947:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1959:6:8",
														"nodeType": "YulTypedName",
														"src": "1959:6:8",
														"type": ""
													}
												],
												"src": "1900:180:8"
											},
											{
												"body": {
													"nativeSrc": "2155:116:8",
													"nodeType": "YulBlock",
													"src": "2155:116:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "2201:16:8",
																"nodeType": "YulBlock",
																"src": "2201:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2210:1:8",
																					"nodeType": "YulLiteral",
																					"src": "2210:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2213:1:8",
																					"nodeType": "YulLiteral",
																					"src": "2213:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2203:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "2203:6:8"
																			},
																			"nativeSrc": "2203:12:8",
																			"nodeType": "YulFunctionCall",
																			"src": "2203:12:8"
																		},
																		"nativeSrc": "2203:12:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "2203:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2176:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "2176:7:8"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2185:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "2185:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2172:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "2172:3:8"
																		},
																		"nativeSrc": "2172:23:8",
																		"nodeType": "YulFunctionCall",
																		"src": "2172:23:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2197:2:8",
																		"nodeType": "YulLiteral",
																		"src": "2197:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2168:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "2168:3:8"
																},
																"nativeSrc": "2168:32:8",
																"nodeType": "YulFunctionCall",
																"src": "2168:32:8"
															},
															"nativeSrc": "2165:52:8",
															"nodeType": "YulIf",
															"src": "2165:52:8"
														},
														{
															"nativeSrc": "2226:39:8",
															"nodeType": "YulAssignment",
															"src": "2226:39:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2255:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "2255:9:8"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "2236:18:8",
																	"nodeType": "YulIdentifier",
																	"src": "2236:18:8"
																},
																"nativeSrc": "2236:29:8",
																"nodeType": "YulFunctionCall",
																"src": "2236:29:8"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "2226:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "2226:6:8"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "2085:186:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2121:9:8",
														"nodeType": "YulTypedName",
														"src": "2121:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2132:7:8",
														"nodeType": "YulTypedName",
														"src": "2132:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2144:6:8",
														"nodeType": "YulTypedName",
														"src": "2144:6:8",
														"type": ""
													}
												],
												"src": "2085:186:8"
											},
											{
												"body": {
													"nativeSrc": "2377:102:8",
													"nodeType": "YulBlock",
													"src": "2377:102:8",
													"statements": [
														{
															"nativeSrc": "2387:26:8",
															"nodeType": "YulAssignment",
															"src": "2387:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2399:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "2399:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2410:2:8",
																		"nodeType": "YulLiteral",
																		"src": "2410:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2395:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "2395:3:8"
																},
																"nativeSrc": "2395:18:8",
																"nodeType": "YulFunctionCall",
																"src": "2395:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2387:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "2387:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2429:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "2429:9:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "2444:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "2444:6:8"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "2460:3:8",
																								"nodeType": "YulLiteral",
																								"src": "2460:3:8",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "2465:1:8",
																								"nodeType": "YulLiteral",
																								"src": "2465:1:8",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "2456:3:8",
																							"nodeType": "YulIdentifier",
																							"src": "2456:3:8"
																						},
																						"nativeSrc": "2456:11:8",
																						"nodeType": "YulFunctionCall",
																						"src": "2456:11:8"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "2469:1:8",
																						"nodeType": "YulLiteral",
																						"src": "2469:1:8",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "2452:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "2452:3:8"
																				},
																				"nativeSrc": "2452:19:8",
																				"nodeType": "YulFunctionCall",
																				"src": "2452:19:8"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "2440:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "2440:3:8"
																		},
																		"nativeSrc": "2440:32:8",
																		"nodeType": "YulFunctionCall",
																		"src": "2440:32:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2422:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "2422:6:8"
																},
																"nativeSrc": "2422:51:8",
																"nodeType": "YulFunctionCall",
																"src": "2422:51:8"
															},
															"nativeSrc": "2422:51:8",
															"nodeType": "YulExpressionStatement",
															"src": "2422:51:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "2276:203:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2346:9:8",
														"nodeType": "YulTypedName",
														"src": "2346:9:8",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "2357:6:8",
														"nodeType": "YulTypedName",
														"src": "2357:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2368:4:8",
														"nodeType": "YulTypedName",
														"src": "2368:4:8",
														"type": ""
													}
												],
												"src": "2276:203:8"
											},
											{
												"body": {
													"nativeSrc": "2571:173:8",
													"nodeType": "YulBlock",
													"src": "2571:173:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "2617:16:8",
																"nodeType": "YulBlock",
																"src": "2617:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2626:1:8",
																					"nodeType": "YulLiteral",
																					"src": "2626:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2629:1:8",
																					"nodeType": "YulLiteral",
																					"src": "2629:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2619:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "2619:6:8"
																			},
																			"nativeSrc": "2619:12:8",
																			"nodeType": "YulFunctionCall",
																			"src": "2619:12:8"
																		},
																		"nativeSrc": "2619:12:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "2619:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2592:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "2592:7:8"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2601:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "2601:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2588:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "2588:3:8"
																		},
																		"nativeSrc": "2588:23:8",
																		"nodeType": "YulFunctionCall",
																		"src": "2588:23:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2613:2:8",
																		"nodeType": "YulLiteral",
																		"src": "2613:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2584:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "2584:3:8"
																},
																"nativeSrc": "2584:32:8",
																"nodeType": "YulFunctionCall",
																"src": "2584:32:8"
															},
															"nativeSrc": "2581:52:8",
															"nodeType": "YulIf",
															"src": "2581:52:8"
														},
														{
															"nativeSrc": "2642:39:8",
															"nodeType": "YulAssignment",
															"src": "2642:39:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2671:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "2671:9:8"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "2652:18:8",
																	"nodeType": "YulIdentifier",
																	"src": "2652:18:8"
																},
																"nativeSrc": "2652:29:8",
																"nodeType": "YulFunctionCall",
																"src": "2652:29:8"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "2642:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "2642:6:8"
																}
															]
														},
														{
															"nativeSrc": "2690:48:8",
															"nodeType": "YulAssignment",
															"src": "2690:48:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2723:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "2723:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2734:2:8",
																				"nodeType": "YulLiteral",
																				"src": "2734:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2719:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "2719:3:8"
																		},
																		"nativeSrc": "2719:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "2719:18:8"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "2700:18:8",
																	"nodeType": "YulIdentifier",
																	"src": "2700:18:8"
																},
																"nativeSrc": "2700:38:8",
																"nodeType": "YulFunctionCall",
																"src": "2700:38:8"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "2690:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "2690:6:8"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nativeSrc": "2484:260:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2529:9:8",
														"nodeType": "YulTypedName",
														"src": "2529:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2540:7:8",
														"nodeType": "YulTypedName",
														"src": "2540:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2552:6:8",
														"nodeType": "YulTypedName",
														"src": "2552:6:8",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "2560:6:8",
														"nodeType": "YulTypedName",
														"src": "2560:6:8",
														"type": ""
													}
												],
												"src": "2484:260:8"
											},
											{
												"body": {
													"nativeSrc": "2804:325:8",
													"nodeType": "YulBlock",
													"src": "2804:325:8",
													"statements": [
														{
															"nativeSrc": "2814:22:8",
															"nodeType": "YulAssignment",
															"src": "2814:22:8",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2828:1:8",
																		"nodeType": "YulLiteral",
																		"src": "2828:1:8",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nativeSrc": "2831:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "2831:4:8"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "2824:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "2824:3:8"
																},
																"nativeSrc": "2824:12:8",
																"nodeType": "YulFunctionCall",
																"src": "2824:12:8"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "2814:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "2814:6:8"
																}
															]
														},
														{
															"nativeSrc": "2845:38:8",
															"nodeType": "YulVariableDeclaration",
															"src": "2845:38:8",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "2875:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "2875:4:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2881:1:8",
																		"nodeType": "YulLiteral",
																		"src": "2881:1:8",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "2871:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "2871:3:8"
																},
																"nativeSrc": "2871:12:8",
																"nodeType": "YulFunctionCall",
																"src": "2871:12:8"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "2849:18:8",
																	"nodeType": "YulTypedName",
																	"src": "2849:18:8",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "2922:31:8",
																"nodeType": "YulBlock",
																"src": "2922:31:8",
																"statements": [
																	{
																		"nativeSrc": "2924:27:8",
																		"nodeType": "YulAssignment",
																		"src": "2924:27:8",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "2938:6:8",
																					"nodeType": "YulIdentifier",
																					"src": "2938:6:8"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2946:4:8",
																					"nodeType": "YulLiteral",
																					"src": "2946:4:8",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "2934:3:8",
																				"nodeType": "YulIdentifier",
																				"src": "2934:3:8"
																			},
																			"nativeSrc": "2934:17:8",
																			"nodeType": "YulFunctionCall",
																			"src": "2934:17:8"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "2924:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "2924:6:8"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "2902:18:8",
																		"nodeType": "YulIdentifier",
																		"src": "2902:18:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2895:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "2895:6:8"
																},
																"nativeSrc": "2895:26:8",
																"nodeType": "YulFunctionCall",
																"src": "2895:26:8"
															},
															"nativeSrc": "2892:61:8",
															"nodeType": "YulIf",
															"src": "2892:61:8"
														},
														{
															"body": {
																"nativeSrc": "3012:111:8",
																"nodeType": "YulBlock",
																"src": "3012:111:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3033:1:8",
																					"nodeType": "YulLiteral",
																					"src": "3033:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "3040:3:8",
																							"nodeType": "YulLiteral",
																							"src": "3040:3:8",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "3045:10:8",
																							"nodeType": "YulLiteral",
																							"src": "3045:10:8",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nativeSrc": "3036:3:8",
																						"nodeType": "YulIdentifier",
																						"src": "3036:3:8"
																					},
																					"nativeSrc": "3036:20:8",
																					"nodeType": "YulFunctionCall",
																					"src": "3036:20:8"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "3026:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "3026:6:8"
																			},
																			"nativeSrc": "3026:31:8",
																			"nodeType": "YulFunctionCall",
																			"src": "3026:31:8"
																		},
																		"nativeSrc": "3026:31:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "3026:31:8"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3077:1:8",
																					"nodeType": "YulLiteral",
																					"src": "3077:1:8",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3080:4:8",
																					"nodeType": "YulLiteral",
																					"src": "3080:4:8",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "3070:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "3070:6:8"
																			},
																			"nativeSrc": "3070:15:8",
																			"nodeType": "YulFunctionCall",
																			"src": "3070:15:8"
																		},
																		"nativeSrc": "3070:15:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "3070:15:8"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3105:1:8",
																					"nodeType": "YulLiteral",
																					"src": "3105:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3108:4:8",
																					"nodeType": "YulLiteral",
																					"src": "3108:4:8",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "3098:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "3098:6:8"
																			},
																			"nativeSrc": "3098:15:8",
																			"nodeType": "YulFunctionCall",
																			"src": "3098:15:8"
																		},
																		"nativeSrc": "3098:15:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "3098:15:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "2968:18:8",
																		"nodeType": "YulIdentifier",
																		"src": "2968:18:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "2991:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "2991:6:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2999:2:8",
																				"nodeType": "YulLiteral",
																				"src": "2999:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "2988:2:8",
																			"nodeType": "YulIdentifier",
																			"src": "2988:2:8"
																		},
																		"nativeSrc": "2988:14:8",
																		"nodeType": "YulFunctionCall",
																		"src": "2988:14:8"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "2965:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "2965:2:8"
																},
																"nativeSrc": "2965:38:8",
																"nodeType": "YulFunctionCall",
																"src": "2965:38:8"
															},
															"nativeSrc": "2962:161:8",
															"nodeType": "YulIf",
															"src": "2962:161:8"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "2749:380:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "2784:4:8",
														"nodeType": "YulTypedName",
														"src": "2784:4:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "2793:6:8",
														"nodeType": "YulTypedName",
														"src": "2793:6:8",
														"type": ""
													}
												],
												"src": "2749:380:8"
											},
											{
												"body": {
													"nativeSrc": "3308:179:8",
													"nodeType": "YulBlock",
													"src": "3308:179:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3325:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "3325:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3336:2:8",
																		"nodeType": "YulLiteral",
																		"src": "3336:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3318:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "3318:6:8"
																},
																"nativeSrc": "3318:21:8",
																"nodeType": "YulFunctionCall",
																"src": "3318:21:8"
															},
															"nativeSrc": "3318:21:8",
															"nodeType": "YulExpressionStatement",
															"src": "3318:21:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3359:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "3359:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3370:2:8",
																				"nodeType": "YulLiteral",
																				"src": "3370:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3355:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "3355:3:8"
																		},
																		"nativeSrc": "3355:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "3355:18:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3375:2:8",
																		"nodeType": "YulLiteral",
																		"src": "3375:2:8",
																		"type": "",
																		"value": "29"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3348:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "3348:6:8"
																},
																"nativeSrc": "3348:30:8",
																"nodeType": "YulFunctionCall",
																"src": "3348:30:8"
															},
															"nativeSrc": "3348:30:8",
															"nodeType": "YulExpressionStatement",
															"src": "3348:30:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3398:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "3398:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3409:2:8",
																				"nodeType": "YulLiteral",
																				"src": "3409:2:8",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3394:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "3394:3:8"
																		},
																		"nativeSrc": "3394:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "3394:18:8"
																	},
																	{
																		"hexValue": "4d696e74696e6720616c6c6f776564206f6e6c7920746f206f776e6572",
																		"kind": "string",
																		"nativeSrc": "3414:31:8",
																		"nodeType": "YulLiteral",
																		"src": "3414:31:8",
																		"type": "",
																		"value": "Minting allowed only to owner"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3387:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "3387:6:8"
																},
																"nativeSrc": "3387:59:8",
																"nodeType": "YulFunctionCall",
																"src": "3387:59:8"
															},
															"nativeSrc": "3387:59:8",
															"nodeType": "YulExpressionStatement",
															"src": "3387:59:8"
														},
														{
															"nativeSrc": "3455:26:8",
															"nodeType": "YulAssignment",
															"src": "3455:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3467:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "3467:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3478:2:8",
																		"nodeType": "YulLiteral",
																		"src": "3478:2:8",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3463:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "3463:3:8"
																},
																"nativeSrc": "3463:18:8",
																"nodeType": "YulFunctionCall",
																"src": "3463:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3455:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "3455:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_a29bafda5c460178656603e71f46c7a7e2678699659809e503dcaef8e54424ae__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "3134:353:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3285:9:8",
														"nodeType": "YulTypedName",
														"src": "3285:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3299:4:8",
														"nodeType": "YulTypedName",
														"src": "3299:4:8",
														"type": ""
													}
												],
												"src": "3134:353:8"
											},
											{
												"body": {
													"nativeSrc": "3524:95:8",
													"nodeType": "YulBlock",
													"src": "3524:95:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3541:1:8",
																		"nodeType": "YulLiteral",
																		"src": "3541:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "3548:3:8",
																				"nodeType": "YulLiteral",
																				"src": "3548:3:8",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3553:10:8",
																				"nodeType": "YulLiteral",
																				"src": "3553:10:8",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "3544:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "3544:3:8"
																		},
																		"nativeSrc": "3544:20:8",
																		"nodeType": "YulFunctionCall",
																		"src": "3544:20:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3534:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "3534:6:8"
																},
																"nativeSrc": "3534:31:8",
																"nodeType": "YulFunctionCall",
																"src": "3534:31:8"
															},
															"nativeSrc": "3534:31:8",
															"nodeType": "YulExpressionStatement",
															"src": "3534:31:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3581:1:8",
																		"nodeType": "YulLiteral",
																		"src": "3581:1:8",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3584:4:8",
																		"nodeType": "YulLiteral",
																		"src": "3584:4:8",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3574:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "3574:6:8"
																},
																"nativeSrc": "3574:15:8",
																"nodeType": "YulFunctionCall",
																"src": "3574:15:8"
															},
															"nativeSrc": "3574:15:8",
															"nodeType": "YulExpressionStatement",
															"src": "3574:15:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3605:1:8",
																		"nodeType": "YulLiteral",
																		"src": "3605:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3608:4:8",
																		"nodeType": "YulLiteral",
																		"src": "3608:4:8",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "3598:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "3598:6:8"
																},
																"nativeSrc": "3598:15:8",
																"nodeType": "YulFunctionCall",
																"src": "3598:15:8"
															},
															"nativeSrc": "3598:15:8",
															"nodeType": "YulExpressionStatement",
															"src": "3598:15:8"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "3492:127:8",
												"nodeType": "YulFunctionDefinition",
												"src": "3492:127:8"
											},
											{
												"body": {
													"nativeSrc": "3688:352:8",
													"nodeType": "YulBlock",
													"src": "3688:352:8",
													"statements": [
														{
															"nativeSrc": "3698:16:8",
															"nodeType": "YulVariableDeclaration",
															"src": "3698:16:8",
															"value": {
																"kind": "number",
																"nativeSrc": "3713:1:8",
																"nodeType": "YulLiteral",
																"src": "3713:1:8",
																"type": "",
																"value": "1"
															},
															"variables": [
																{
																	"name": "power_1",
																	"nativeSrc": "3702:7:8",
																	"nodeType": "YulTypedName",
																	"src": "3702:7:8",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "3723:10:8",
															"nodeType": "YulAssignment",
															"src": "3723:10:8",
															"value": {
																"kind": "number",
																"nativeSrc": "3732:1:8",
																"nodeType": "YulLiteral",
																"src": "3732:1:8",
																"type": "",
																"value": "1"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nativeSrc": "3723:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "3723:5:8"
																}
															]
														},
														{
															"nativeSrc": "3742:13:8",
															"nodeType": "YulAssignment",
															"src": "3742:13:8",
															"value": {
																"name": "_base",
																"nativeSrc": "3750:5:8",
																"nodeType": "YulIdentifier",
																"src": "3750:5:8"
															},
															"variableNames": [
																{
																	"name": "base",
																	"nativeSrc": "3742:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "3742:4:8"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "3806:228:8",
																"nodeType": "YulBlock",
																"src": "3806:228:8",
																"statements": [
																	{
																		"body": {
																			"nativeSrc": "3851:22:8",
																			"nodeType": "YulBlock",
																			"src": "3851:22:8",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [],
																						"functionName": {
																							"name": "panic_error_0x11",
																							"nativeSrc": "3853:16:8",
																							"nodeType": "YulIdentifier",
																							"src": "3853:16:8"
																						},
																						"nativeSrc": "3853:18:8",
																						"nodeType": "YulFunctionCall",
																						"src": "3853:18:8"
																					},
																					"nativeSrc": "3853:18:8",
																					"nodeType": "YulExpressionStatement",
																					"src": "3853:18:8"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "base",
																					"nativeSrc": "3826:4:8",
																					"nodeType": "YulIdentifier",
																					"src": "3826:4:8"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nativeSrc": "3840:1:8",
																									"nodeType": "YulLiteral",
																									"src": "3840:1:8",
																									"type": "",
																									"value": "0"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nativeSrc": "3836:3:8",
																								"nodeType": "YulIdentifier",
																								"src": "3836:3:8"
																							},
																							"nativeSrc": "3836:6:8",
																							"nodeType": "YulFunctionCall",
																							"src": "3836:6:8"
																						},
																						{
																							"name": "base",
																							"nativeSrc": "3844:4:8",
																							"nodeType": "YulIdentifier",
																							"src": "3844:4:8"
																						}
																					],
																					"functionName": {
																						"name": "div",
																						"nativeSrc": "3832:3:8",
																						"nodeType": "YulIdentifier",
																						"src": "3832:3:8"
																					},
																					"nativeSrc": "3832:17:8",
																					"nodeType": "YulFunctionCall",
																					"src": "3832:17:8"
																				}
																			],
																			"functionName": {
																				"name": "gt",
																				"nativeSrc": "3823:2:8",
																				"nodeType": "YulIdentifier",
																				"src": "3823:2:8"
																			},
																			"nativeSrc": "3823:27:8",
																			"nodeType": "YulFunctionCall",
																			"src": "3823:27:8"
																		},
																		"nativeSrc": "3820:53:8",
																		"nodeType": "YulIf",
																		"src": "3820:53:8"
																	},
																	{
																		"body": {
																			"nativeSrc": "3912:29:8",
																			"nodeType": "YulBlock",
																			"src": "3912:29:8",
																			"statements": [
																				{
																					"nativeSrc": "3914:25:8",
																					"nodeType": "YulAssignment",
																					"src": "3914:25:8",
																					"value": {
																						"arguments": [
																							{
																								"name": "power",
																								"nativeSrc": "3927:5:8",
																								"nodeType": "YulIdentifier",
																								"src": "3927:5:8"
																							},
																							{
																								"name": "base",
																								"nativeSrc": "3934:4:8",
																								"nodeType": "YulIdentifier",
																								"src": "3934:4:8"
																							}
																						],
																						"functionName": {
																							"name": "mul",
																							"nativeSrc": "3923:3:8",
																							"nodeType": "YulIdentifier",
																							"src": "3923:3:8"
																						},
																						"nativeSrc": "3923:16:8",
																						"nodeType": "YulFunctionCall",
																						"src": "3923:16:8"
																					},
																					"variableNames": [
																						{
																							"name": "power",
																							"nativeSrc": "3914:5:8",
																							"nodeType": "YulIdentifier",
																							"src": "3914:5:8"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "exponent",
																					"nativeSrc": "3893:8:8",
																					"nodeType": "YulIdentifier",
																					"src": "3893:8:8"
																				},
																				{
																					"name": "power_1",
																					"nativeSrc": "3903:7:8",
																					"nodeType": "YulIdentifier",
																					"src": "3903:7:8"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "3889:3:8",
																				"nodeType": "YulIdentifier",
																				"src": "3889:3:8"
																			},
																			"nativeSrc": "3889:22:8",
																			"nodeType": "YulFunctionCall",
																			"src": "3889:22:8"
																		},
																		"nativeSrc": "3886:55:8",
																		"nodeType": "YulIf",
																		"src": "3886:55:8"
																	},
																	{
																		"nativeSrc": "3954:23:8",
																		"nodeType": "YulAssignment",
																		"src": "3954:23:8",
																		"value": {
																			"arguments": [
																				{
																					"name": "base",
																					"nativeSrc": "3966:4:8",
																					"nodeType": "YulIdentifier",
																					"src": "3966:4:8"
																				},
																				{
																					"name": "base",
																					"nativeSrc": "3972:4:8",
																					"nodeType": "YulIdentifier",
																					"src": "3972:4:8"
																				}
																			],
																			"functionName": {
																				"name": "mul",
																				"nativeSrc": "3962:3:8",
																				"nodeType": "YulIdentifier",
																				"src": "3962:3:8"
																			},
																			"nativeSrc": "3962:15:8",
																			"nodeType": "YulFunctionCall",
																			"src": "3962:15:8"
																		},
																		"variableNames": [
																			{
																				"name": "base",
																				"nativeSrc": "3954:4:8",
																				"nodeType": "YulIdentifier",
																				"src": "3954:4:8"
																			}
																		]
																	},
																	{
																		"nativeSrc": "3990:34:8",
																		"nodeType": "YulAssignment",
																		"src": "3990:34:8",
																		"value": {
																			"arguments": [
																				{
																					"name": "power_1",
																					"nativeSrc": "4006:7:8",
																					"nodeType": "YulIdentifier",
																					"src": "4006:7:8"
																				},
																				{
																					"name": "exponent",
																					"nativeSrc": "4015:8:8",
																					"nodeType": "YulIdentifier",
																					"src": "4015:8:8"
																				}
																			],
																			"functionName": {
																				"name": "shr",
																				"nativeSrc": "4002:3:8",
																				"nodeType": "YulIdentifier",
																				"src": "4002:3:8"
																			},
																			"nativeSrc": "4002:22:8",
																			"nodeType": "YulFunctionCall",
																			"src": "4002:22:8"
																		},
																		"variableNames": [
																			{
																				"name": "exponent",
																				"nativeSrc": "3990:8:8",
																				"nodeType": "YulIdentifier",
																				"src": "3990:8:8"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "exponent",
																		"nativeSrc": "3775:8:8",
																		"nodeType": "YulIdentifier",
																		"src": "3775:8:8"
																	},
																	{
																		"name": "power_1",
																		"nativeSrc": "3785:7:8",
																		"nodeType": "YulIdentifier",
																		"src": "3785:7:8"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "3772:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "3772:2:8"
																},
																"nativeSrc": "3772:21:8",
																"nodeType": "YulFunctionCall",
																"src": "3772:21:8"
															},
															"nativeSrc": "3764:270:8",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "3794:3:8",
																"nodeType": "YulBlock",
																"src": "3794:3:8",
																"statements": []
															},
															"pre": {
																"nativeSrc": "3768:3:8",
																"nodeType": "YulBlock",
																"src": "3768:3:8",
																"statements": []
															},
															"src": "3764:270:8"
														}
													]
												},
												"name": "checked_exp_helper",
												"nativeSrc": "3624:416:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "_base",
														"nativeSrc": "3652:5:8",
														"nodeType": "YulTypedName",
														"src": "3652:5:8",
														"type": ""
													},
													{
														"name": "exponent",
														"nativeSrc": "3659:8:8",
														"nodeType": "YulTypedName",
														"src": "3659:8:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "power",
														"nativeSrc": "3672:5:8",
														"nodeType": "YulTypedName",
														"src": "3672:5:8",
														"type": ""
													},
													{
														"name": "base",
														"nativeSrc": "3679:4:8",
														"nodeType": "YulTypedName",
														"src": "3679:4:8",
														"type": ""
													}
												],
												"src": "3624:416:8"
											},
											{
												"body": {
													"nativeSrc": "4104:747:8",
													"nodeType": "YulBlock",
													"src": "4104:747:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "4142:52:8",
																"nodeType": "YulBlock",
																"src": "4142:52:8",
																"statements": [
																	{
																		"nativeSrc": "4156:10:8",
																		"nodeType": "YulAssignment",
																		"src": "4156:10:8",
																		"value": {
																			"kind": "number",
																			"nativeSrc": "4165:1:8",
																			"nodeType": "YulLiteral",
																			"src": "4165:1:8",
																			"type": "",
																			"value": "1"
																		},
																		"variableNames": [
																			{
																				"name": "power",
																				"nativeSrc": "4156:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "4156:5:8"
																			}
																		]
																	},
																	{
																		"nativeSrc": "4179:5:8",
																		"nodeType": "YulLeave",
																		"src": "4179:5:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "exponent",
																		"nativeSrc": "4124:8:8",
																		"nodeType": "YulIdentifier",
																		"src": "4124:8:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "4117:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "4117:6:8"
																},
																"nativeSrc": "4117:16:8",
																"nodeType": "YulFunctionCall",
																"src": "4117:16:8"
															},
															"nativeSrc": "4114:80:8",
															"nodeType": "YulIf",
															"src": "4114:80:8"
														},
														{
															"body": {
																"nativeSrc": "4227:52:8",
																"nodeType": "YulBlock",
																"src": "4227:52:8",
																"statements": [
																	{
																		"nativeSrc": "4241:10:8",
																		"nodeType": "YulAssignment",
																		"src": "4241:10:8",
																		"value": {
																			"kind": "number",
																			"nativeSrc": "4250:1:8",
																			"nodeType": "YulLiteral",
																			"src": "4250:1:8",
																			"type": "",
																			"value": "0"
																		},
																		"variableNames": [
																			{
																				"name": "power",
																				"nativeSrc": "4241:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "4241:5:8"
																			}
																		]
																	},
																	{
																		"nativeSrc": "4264:5:8",
																		"nodeType": "YulLeave",
																		"src": "4264:5:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "base",
																		"nativeSrc": "4213:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "4213:4:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "4206:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "4206:6:8"
																},
																"nativeSrc": "4206:12:8",
																"nodeType": "YulFunctionCall",
																"src": "4206:12:8"
															},
															"nativeSrc": "4203:76:8",
															"nodeType": "YulIf",
															"src": "4203:76:8"
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "4315:52:8",
																		"nodeType": "YulBlock",
																		"src": "4315:52:8",
																		"statements": [
																			{
																				"nativeSrc": "4329:10:8",
																				"nodeType": "YulAssignment",
																				"src": "4329:10:8",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "4338:1:8",
																					"nodeType": "YulLiteral",
																					"src": "4338:1:8",
																					"type": "",
																					"value": "1"
																				},
																				"variableNames": [
																					{
																						"name": "power",
																						"nativeSrc": "4329:5:8",
																						"nodeType": "YulIdentifier",
																						"src": "4329:5:8"
																					}
																				]
																			},
																			{
																				"nativeSrc": "4352:5:8",
																				"nodeType": "YulLeave",
																				"src": "4352:5:8"
																			}
																		]
																	},
																	"nativeSrc": "4308:59:8",
																	"nodeType": "YulCase",
																	"src": "4308:59:8",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4313:1:8",
																		"nodeType": "YulLiteral",
																		"src": "4313:1:8",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "4383:123:8",
																		"nodeType": "YulBlock",
																		"src": "4383:123:8",
																		"statements": [
																			{
																				"body": {
																					"nativeSrc": "4418:22:8",
																					"nodeType": "YulBlock",
																					"src": "4418:22:8",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [],
																								"functionName": {
																									"name": "panic_error_0x11",
																									"nativeSrc": "4420:16:8",
																									"nodeType": "YulIdentifier",
																									"src": "4420:16:8"
																								},
																								"nativeSrc": "4420:18:8",
																								"nodeType": "YulFunctionCall",
																								"src": "4420:18:8"
																							},
																							"nativeSrc": "4420:18:8",
																							"nodeType": "YulExpressionStatement",
																							"src": "4420:18:8"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "exponent",
																							"nativeSrc": "4403:8:8",
																							"nodeType": "YulIdentifier",
																							"src": "4403:8:8"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "4413:3:8",
																							"nodeType": "YulLiteral",
																							"src": "4413:3:8",
																							"type": "",
																							"value": "255"
																						}
																					],
																					"functionName": {
																						"name": "gt",
																						"nativeSrc": "4400:2:8",
																						"nodeType": "YulIdentifier",
																						"src": "4400:2:8"
																					},
																					"nativeSrc": "4400:17:8",
																					"nodeType": "YulFunctionCall",
																					"src": "4400:17:8"
																				},
																				"nativeSrc": "4397:43:8",
																				"nodeType": "YulIf",
																				"src": "4397:43:8"
																			},
																			{
																				"nativeSrc": "4453:25:8",
																				"nodeType": "YulAssignment",
																				"src": "4453:25:8",
																				"value": {
																					"arguments": [
																						{
																							"name": "exponent",
																							"nativeSrc": "4466:8:8",
																							"nodeType": "YulIdentifier",
																							"src": "4466:8:8"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "4476:1:8",
																							"nodeType": "YulLiteral",
																							"src": "4476:1:8",
																							"type": "",
																							"value": "1"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nativeSrc": "4462:3:8",
																						"nodeType": "YulIdentifier",
																						"src": "4462:3:8"
																					},
																					"nativeSrc": "4462:16:8",
																					"nodeType": "YulFunctionCall",
																					"src": "4462:16:8"
																				},
																				"variableNames": [
																					{
																						"name": "power",
																						"nativeSrc": "4453:5:8",
																						"nodeType": "YulIdentifier",
																						"src": "4453:5:8"
																					}
																				]
																			},
																			{
																				"nativeSrc": "4491:5:8",
																				"nodeType": "YulLeave",
																				"src": "4491:5:8"
																			}
																		]
																	},
																	"nativeSrc": "4376:130:8",
																	"nodeType": "YulCase",
																	"src": "4376:130:8",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4381:1:8",
																		"nodeType": "YulLiteral",
																		"src": "4381:1:8",
																		"type": "",
																		"value": "2"
																	}
																}
															],
															"expression": {
																"name": "base",
																"nativeSrc": "4295:4:8",
																"nodeType": "YulIdentifier",
																"src": "4295:4:8"
															},
															"nativeSrc": "4288:218:8",
															"nodeType": "YulSwitch",
															"src": "4288:218:8"
														},
														{
															"body": {
																"nativeSrc": "4604:70:8",
																"nodeType": "YulBlock",
																"src": "4604:70:8",
																"statements": [
																	{
																		"nativeSrc": "4618:28:8",
																		"nodeType": "YulAssignment",
																		"src": "4618:28:8",
																		"value": {
																			"arguments": [
																				{
																					"name": "base",
																					"nativeSrc": "4631:4:8",
																					"nodeType": "YulIdentifier",
																					"src": "4631:4:8"
																				},
																				{
																					"name": "exponent",
																					"nativeSrc": "4637:8:8",
																					"nodeType": "YulIdentifier",
																					"src": "4637:8:8"
																				}
																			],
																			"functionName": {
																				"name": "exp",
																				"nativeSrc": "4627:3:8",
																				"nodeType": "YulIdentifier",
																				"src": "4627:3:8"
																			},
																			"nativeSrc": "4627:19:8",
																			"nodeType": "YulFunctionCall",
																			"src": "4627:19:8"
																		},
																		"variableNames": [
																			{
																				"name": "power",
																				"nativeSrc": "4618:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "4618:5:8"
																			}
																		]
																	},
																	{
																		"nativeSrc": "4659:5:8",
																		"nodeType": "YulLeave",
																		"src": "4659:5:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "base",
																						"nativeSrc": "4528:4:8",
																						"nodeType": "YulIdentifier",
																						"src": "4528:4:8"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "4534:2:8",
																						"nodeType": "YulLiteral",
																						"src": "4534:2:8",
																						"type": "",
																						"value": "11"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "4525:2:8",
																					"nodeType": "YulIdentifier",
																					"src": "4525:2:8"
																				},
																				"nativeSrc": "4525:12:8",
																				"nodeType": "YulFunctionCall",
																				"src": "4525:12:8"
																			},
																			{
																				"arguments": [
																					{
																						"name": "exponent",
																						"nativeSrc": "4542:8:8",
																						"nodeType": "YulIdentifier",
																						"src": "4542:8:8"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "4552:2:8",
																						"nodeType": "YulLiteral",
																						"src": "4552:2:8",
																						"type": "",
																						"value": "78"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "4539:2:8",
																					"nodeType": "YulIdentifier",
																					"src": "4539:2:8"
																				},
																				"nativeSrc": "4539:16:8",
																				"nodeType": "YulFunctionCall",
																				"src": "4539:16:8"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "4521:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "4521:3:8"
																		},
																		"nativeSrc": "4521:35:8",
																		"nodeType": "YulFunctionCall",
																		"src": "4521:35:8"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "base",
																						"nativeSrc": "4565:4:8",
																						"nodeType": "YulIdentifier",
																						"src": "4565:4:8"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "4571:3:8",
																						"nodeType": "YulLiteral",
																						"src": "4571:3:8",
																						"type": "",
																						"value": "307"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "4562:2:8",
																					"nodeType": "YulIdentifier",
																					"src": "4562:2:8"
																				},
																				"nativeSrc": "4562:13:8",
																				"nodeType": "YulFunctionCall",
																				"src": "4562:13:8"
																			},
																			{
																				"arguments": [
																					{
																						"name": "exponent",
																						"nativeSrc": "4580:8:8",
																						"nodeType": "YulIdentifier",
																						"src": "4580:8:8"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "4590:2:8",
																						"nodeType": "YulLiteral",
																						"src": "4590:2:8",
																						"type": "",
																						"value": "32"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "4577:2:8",
																					"nodeType": "YulIdentifier",
																					"src": "4577:2:8"
																				},
																				"nativeSrc": "4577:16:8",
																				"nodeType": "YulFunctionCall",
																				"src": "4577:16:8"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "4558:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "4558:3:8"
																		},
																		"nativeSrc": "4558:36:8",
																		"nodeType": "YulFunctionCall",
																		"src": "4558:36:8"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "4518:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "4518:2:8"
																},
																"nativeSrc": "4518:77:8",
																"nodeType": "YulFunctionCall",
																"src": "4518:77:8"
															},
															"nativeSrc": "4515:159:8",
															"nodeType": "YulIf",
															"src": "4515:159:8"
														},
														{
															"nativeSrc": "4683:57:8",
															"nodeType": "YulVariableDeclaration",
															"src": "4683:57:8",
															"value": {
																"arguments": [
																	{
																		"name": "base",
																		"nativeSrc": "4725:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "4725:4:8"
																	},
																	{
																		"name": "exponent",
																		"nativeSrc": "4731:8:8",
																		"nodeType": "YulIdentifier",
																		"src": "4731:8:8"
																	}
																],
																"functionName": {
																	"name": "checked_exp_helper",
																	"nativeSrc": "4706:18:8",
																	"nodeType": "YulIdentifier",
																	"src": "4706:18:8"
																},
																"nativeSrc": "4706:34:8",
																"nodeType": "YulFunctionCall",
																"src": "4706:34:8"
															},
															"variables": [
																{
																	"name": "power_1",
																	"nativeSrc": "4687:7:8",
																	"nodeType": "YulTypedName",
																	"src": "4687:7:8",
																	"type": ""
																},
																{
																	"name": "base_1",
																	"nativeSrc": "4696:6:8",
																	"nodeType": "YulTypedName",
																	"src": "4696:6:8",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "4785:22:8",
																"nodeType": "YulBlock",
																"src": "4785:22:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "4787:16:8",
																				"nodeType": "YulIdentifier",
																				"src": "4787:16:8"
																			},
																			"nativeSrc": "4787:18:8",
																			"nodeType": "YulFunctionCall",
																			"src": "4787:18:8"
																		},
																		"nativeSrc": "4787:18:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "4787:18:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "power_1",
																		"nativeSrc": "4755:7:8",
																		"nodeType": "YulIdentifier",
																		"src": "4755:7:8"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "4772:1:8",
																						"nodeType": "YulLiteral",
																						"src": "4772:1:8",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "4768:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "4768:3:8"
																				},
																				"nativeSrc": "4768:6:8",
																				"nodeType": "YulFunctionCall",
																				"src": "4768:6:8"
																			},
																			{
																				"name": "base_1",
																				"nativeSrc": "4776:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "4776:6:8"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nativeSrc": "4764:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "4764:3:8"
																		},
																		"nativeSrc": "4764:19:8",
																		"nodeType": "YulFunctionCall",
																		"src": "4764:19:8"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "4752:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "4752:2:8"
																},
																"nativeSrc": "4752:32:8",
																"nodeType": "YulFunctionCall",
																"src": "4752:32:8"
															},
															"nativeSrc": "4749:58:8",
															"nodeType": "YulIf",
															"src": "4749:58:8"
														},
														{
															"nativeSrc": "4816:29:8",
															"nodeType": "YulAssignment",
															"src": "4816:29:8",
															"value": {
																"arguments": [
																	{
																		"name": "power_1",
																		"nativeSrc": "4829:7:8",
																		"nodeType": "YulIdentifier",
																		"src": "4829:7:8"
																	},
																	{
																		"name": "base_1",
																		"nativeSrc": "4838:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "4838:6:8"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "4825:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "4825:3:8"
																},
																"nativeSrc": "4825:20:8",
																"nodeType": "YulFunctionCall",
																"src": "4825:20:8"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nativeSrc": "4816:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "4816:5:8"
																}
															]
														}
													]
												},
												"name": "checked_exp_unsigned",
												"nativeSrc": "4045:806:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "base",
														"nativeSrc": "4075:4:8",
														"nodeType": "YulTypedName",
														"src": "4075:4:8",
														"type": ""
													},
													{
														"name": "exponent",
														"nativeSrc": "4081:8:8",
														"nodeType": "YulTypedName",
														"src": "4081:8:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "power",
														"nativeSrc": "4094:5:8",
														"nodeType": "YulTypedName",
														"src": "4094:5:8",
														"type": ""
													}
												],
												"src": "4045:806:8"
											},
											{
												"body": {
													"nativeSrc": "4924:72:8",
													"nodeType": "YulBlock",
													"src": "4924:72:8",
													"statements": [
														{
															"nativeSrc": "4934:56:8",
															"nodeType": "YulAssignment",
															"src": "4934:56:8",
															"value": {
																"arguments": [
																	{
																		"name": "base",
																		"nativeSrc": "4964:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "4964:4:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "exponent",
																				"nativeSrc": "4974:8:8",
																				"nodeType": "YulIdentifier",
																				"src": "4974:8:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4984:4:8",
																				"nodeType": "YulLiteral",
																				"src": "4984:4:8",
																				"type": "",
																				"value": "0xff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "4970:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "4970:3:8"
																		},
																		"nativeSrc": "4970:19:8",
																		"nodeType": "YulFunctionCall",
																		"src": "4970:19:8"
																	}
																],
																"functionName": {
																	"name": "checked_exp_unsigned",
																	"nativeSrc": "4943:20:8",
																	"nodeType": "YulIdentifier",
																	"src": "4943:20:8"
																},
																"nativeSrc": "4943:47:8",
																"nodeType": "YulFunctionCall",
																"src": "4943:47:8"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nativeSrc": "4934:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "4934:5:8"
																}
															]
														}
													]
												},
												"name": "checked_exp_t_uint256_t_uint8",
												"nativeSrc": "4856:140:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "base",
														"nativeSrc": "4895:4:8",
														"nodeType": "YulTypedName",
														"src": "4895:4:8",
														"type": ""
													},
													{
														"name": "exponent",
														"nativeSrc": "4901:8:8",
														"nodeType": "YulTypedName",
														"src": "4901:8:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "power",
														"nativeSrc": "4914:5:8",
														"nodeType": "YulTypedName",
														"src": "4914:5:8",
														"type": ""
													}
												],
												"src": "4856:140:8"
											},
											{
												"body": {
													"nativeSrc": "5053:116:8",
													"nodeType": "YulBlock",
													"src": "5053:116:8",
													"statements": [
														{
															"nativeSrc": "5063:20:8",
															"nodeType": "YulAssignment",
															"src": "5063:20:8",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "5078:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "5078:1:8"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "5081:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "5081:1:8"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "5074:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "5074:3:8"
																},
																"nativeSrc": "5074:9:8",
																"nodeType": "YulFunctionCall",
																"src": "5074:9:8"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nativeSrc": "5063:7:8",
																	"nodeType": "YulIdentifier",
																	"src": "5063:7:8"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "5141:22:8",
																"nodeType": "YulBlock",
																"src": "5141:22:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "5143:16:8",
																				"nodeType": "YulIdentifier",
																				"src": "5143:16:8"
																			},
																			"nativeSrc": "5143:18:8",
																			"nodeType": "YulFunctionCall",
																			"src": "5143:18:8"
																		},
																		"nativeSrc": "5143:18:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "5143:18:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nativeSrc": "5112:1:8",
																						"nodeType": "YulIdentifier",
																						"src": "5112:1:8"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "5105:6:8",
																					"nodeType": "YulIdentifier",
																					"src": "5105:6:8"
																				},
																				"nativeSrc": "5105:9:8",
																				"nodeType": "YulFunctionCall",
																				"src": "5105:9:8"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nativeSrc": "5119:1:8",
																						"nodeType": "YulIdentifier",
																						"src": "5119:1:8"
																					},
																					{
																						"arguments": [
																							{
																								"name": "product",
																								"nativeSrc": "5126:7:8",
																								"nodeType": "YulIdentifier",
																								"src": "5126:7:8"
																							},
																							{
																								"name": "x",
																								"nativeSrc": "5135:1:8",
																								"nodeType": "YulIdentifier",
																								"src": "5135:1:8"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nativeSrc": "5122:3:8",
																							"nodeType": "YulIdentifier",
																							"src": "5122:3:8"
																						},
																						"nativeSrc": "5122:15:8",
																						"nodeType": "YulFunctionCall",
																						"src": "5122:15:8"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nativeSrc": "5116:2:8",
																					"nodeType": "YulIdentifier",
																					"src": "5116:2:8"
																				},
																				"nativeSrc": "5116:22:8",
																				"nodeType": "YulFunctionCall",
																				"src": "5116:22:8"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nativeSrc": "5102:2:8",
																			"nodeType": "YulIdentifier",
																			"src": "5102:2:8"
																		},
																		"nativeSrc": "5102:37:8",
																		"nodeType": "YulFunctionCall",
																		"src": "5102:37:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "5095:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "5095:6:8"
																},
																"nativeSrc": "5095:45:8",
																"nodeType": "YulFunctionCall",
																"src": "5095:45:8"
															},
															"nativeSrc": "5092:71:8",
															"nodeType": "YulIf",
															"src": "5092:71:8"
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nativeSrc": "5001:168:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "5032:1:8",
														"nodeType": "YulTypedName",
														"src": "5032:1:8",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "5035:1:8",
														"nodeType": "YulTypedName",
														"src": "5035:1:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nativeSrc": "5041:7:8",
														"nodeType": "YulTypedName",
														"src": "5041:7:8",
														"type": ""
													}
												],
												"src": "5001:168:8"
											},
											{
												"body": {
													"nativeSrc": "5220:171:8",
													"nodeType": "YulBlock",
													"src": "5220:171:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "5251:111:8",
																"nodeType": "YulBlock",
																"src": "5251:111:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "5272:1:8",
																					"nodeType": "YulLiteral",
																					"src": "5272:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "5279:3:8",
																							"nodeType": "YulLiteral",
																							"src": "5279:3:8",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "5284:10:8",
																							"nodeType": "YulLiteral",
																							"src": "5284:10:8",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nativeSrc": "5275:3:8",
																						"nodeType": "YulIdentifier",
																						"src": "5275:3:8"
																					},
																					"nativeSrc": "5275:20:8",
																					"nodeType": "YulFunctionCall",
																					"src": "5275:20:8"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "5265:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "5265:6:8"
																			},
																			"nativeSrc": "5265:31:8",
																			"nodeType": "YulFunctionCall",
																			"src": "5265:31:8"
																		},
																		"nativeSrc": "5265:31:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "5265:31:8"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "5316:1:8",
																					"nodeType": "YulLiteral",
																					"src": "5316:1:8",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "5319:4:8",
																					"nodeType": "YulLiteral",
																					"src": "5319:4:8",
																					"type": "",
																					"value": "0x12"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "5309:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "5309:6:8"
																			},
																			"nativeSrc": "5309:15:8",
																			"nodeType": "YulFunctionCall",
																			"src": "5309:15:8"
																		},
																		"nativeSrc": "5309:15:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "5309:15:8"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "5344:1:8",
																					"nodeType": "YulLiteral",
																					"src": "5344:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "5347:4:8",
																					"nodeType": "YulLiteral",
																					"src": "5347:4:8",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "5337:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "5337:6:8"
																			},
																			"nativeSrc": "5337:15:8",
																			"nodeType": "YulFunctionCall",
																			"src": "5337:15:8"
																		},
																		"nativeSrc": "5337:15:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "5337:15:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "5240:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "5240:1:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "5233:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "5233:6:8"
																},
																"nativeSrc": "5233:9:8",
																"nodeType": "YulFunctionCall",
																"src": "5233:9:8"
															},
															"nativeSrc": "5230:132:8",
															"nodeType": "YulIf",
															"src": "5230:132:8"
														},
														{
															"nativeSrc": "5371:14:8",
															"nodeType": "YulAssignment",
															"src": "5371:14:8",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "5380:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "5380:1:8"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "5383:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "5383:1:8"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "5376:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "5376:3:8"
																},
																"nativeSrc": "5376:9:8",
																"nodeType": "YulFunctionCall",
																"src": "5376:9:8"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nativeSrc": "5371:1:8",
																	"nodeType": "YulIdentifier",
																	"src": "5371:1:8"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nativeSrc": "5174:217:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "5205:1:8",
														"nodeType": "YulTypedName",
														"src": "5205:1:8",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "5208:1:8",
														"nodeType": "YulTypedName",
														"src": "5208:1:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nativeSrc": "5214:1:8",
														"nodeType": "YulTypedName",
														"src": "5214:1:8",
														"type": ""
													}
												],
												"src": "5174:217:8"
											},
											{
												"body": {
													"nativeSrc": "5445:79:8",
													"nodeType": "YulBlock",
													"src": "5445:79:8",
													"statements": [
														{
															"nativeSrc": "5455:17:8",
															"nodeType": "YulAssignment",
															"src": "5455:17:8",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "5467:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "5467:1:8"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "5470:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "5470:1:8"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nativeSrc": "5463:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "5463:3:8"
																},
																"nativeSrc": "5463:9:8",
																"nodeType": "YulFunctionCall",
																"src": "5463:9:8"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nativeSrc": "5455:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "5455:4:8"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "5496:22:8",
																"nodeType": "YulBlock",
																"src": "5496:22:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "5498:16:8",
																				"nodeType": "YulIdentifier",
																				"src": "5498:16:8"
																			},
																			"nativeSrc": "5498:18:8",
																			"nodeType": "YulFunctionCall",
																			"src": "5498:18:8"
																		},
																		"nativeSrc": "5498:18:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "5498:18:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "diff",
																		"nativeSrc": "5487:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "5487:4:8"
																	},
																	{
																		"name": "x",
																		"nativeSrc": "5493:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "5493:1:8"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "5484:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "5484:2:8"
																},
																"nativeSrc": "5484:11:8",
																"nodeType": "YulFunctionCall",
																"src": "5484:11:8"
															},
															"nativeSrc": "5481:37:8",
															"nodeType": "YulIf",
															"src": "5481:37:8"
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nativeSrc": "5396:128:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "5427:1:8",
														"nodeType": "YulTypedName",
														"src": "5427:1:8",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "5430:1:8",
														"nodeType": "YulTypedName",
														"src": "5430:1:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nativeSrc": "5436:4:8",
														"nodeType": "YulTypedName",
														"src": "5436:4:8",
														"type": ""
													}
												],
												"src": "5396:128:8"
											},
											{
												"body": {
													"nativeSrc": "5577:77:8",
													"nodeType": "YulBlock",
													"src": "5577:77:8",
													"statements": [
														{
															"nativeSrc": "5587:16:8",
															"nodeType": "YulAssignment",
															"src": "5587:16:8",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "5598:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "5598:1:8"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "5601:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "5601:1:8"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5594:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "5594:3:8"
																},
																"nativeSrc": "5594:9:8",
																"nodeType": "YulFunctionCall",
																"src": "5594:9:8"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "5587:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "5587:3:8"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "5626:22:8",
																"nodeType": "YulBlock",
																"src": "5626:22:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "5628:16:8",
																				"nodeType": "YulIdentifier",
																				"src": "5628:16:8"
																			},
																			"nativeSrc": "5628:18:8",
																			"nodeType": "YulFunctionCall",
																			"src": "5628:18:8"
																		},
																		"nativeSrc": "5628:18:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "5628:18:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "5618:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "5618:1:8"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "5621:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "5621:3:8"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "5615:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "5615:2:8"
																},
																"nativeSrc": "5615:10:8",
																"nodeType": "YulFunctionCall",
																"src": "5615:10:8"
															},
															"nativeSrc": "5612:36:8",
															"nodeType": "YulIf",
															"src": "5612:36:8"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "5529:125:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "5560:1:8",
														"nodeType": "YulTypedName",
														"src": "5560:1:8",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "5563:1:8",
														"nodeType": "YulTypedName",
														"src": "5563:1:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "5569:3:8",
														"nodeType": "YulTypedName",
														"src": "5569:3:8",
														"type": ""
													}
												],
												"src": "5529:125:8"
											},
											{
												"body": {
													"nativeSrc": "5816:188:8",
													"nodeType": "YulBlock",
													"src": "5816:188:8",
													"statements": [
														{
															"nativeSrc": "5826:26:8",
															"nodeType": "YulAssignment",
															"src": "5826:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5838:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "5838:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5849:2:8",
																		"nodeType": "YulLiteral",
																		"src": "5849:2:8",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5834:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "5834:3:8"
																},
																"nativeSrc": "5834:18:8",
																"nodeType": "YulFunctionCall",
																"src": "5834:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5826:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "5826:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5868:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "5868:9:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "5883:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "5883:6:8"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "5899:3:8",
																								"nodeType": "YulLiteral",
																								"src": "5899:3:8",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "5904:1:8",
																								"nodeType": "YulLiteral",
																								"src": "5904:1:8",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "5895:3:8",
																							"nodeType": "YulIdentifier",
																							"src": "5895:3:8"
																						},
																						"nativeSrc": "5895:11:8",
																						"nodeType": "YulFunctionCall",
																						"src": "5895:11:8"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "5908:1:8",
																						"nodeType": "YulLiteral",
																						"src": "5908:1:8",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "5891:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "5891:3:8"
																				},
																				"nativeSrc": "5891:19:8",
																				"nodeType": "YulFunctionCall",
																				"src": "5891:19:8"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "5879:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "5879:3:8"
																		},
																		"nativeSrc": "5879:32:8",
																		"nodeType": "YulFunctionCall",
																		"src": "5879:32:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5861:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "5861:6:8"
																},
																"nativeSrc": "5861:51:8",
																"nodeType": "YulFunctionCall",
																"src": "5861:51:8"
															},
															"nativeSrc": "5861:51:8",
															"nodeType": "YulExpressionStatement",
															"src": "5861:51:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5932:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "5932:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5943:2:8",
																				"nodeType": "YulLiteral",
																				"src": "5943:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5928:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "5928:3:8"
																		},
																		"nativeSrc": "5928:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "5928:18:8"
																	},
																	{
																		"name": "value1",
																		"nativeSrc": "5948:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "5948:6:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5921:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "5921:6:8"
																},
																"nativeSrc": "5921:34:8",
																"nodeType": "YulFunctionCall",
																"src": "5921:34:8"
															},
															"nativeSrc": "5921:34:8",
															"nodeType": "YulExpressionStatement",
															"src": "5921:34:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5975:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "5975:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5986:2:8",
																				"nodeType": "YulLiteral",
																				"src": "5986:2:8",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5971:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "5971:3:8"
																		},
																		"nativeSrc": "5971:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "5971:18:8"
																	},
																	{
																		"name": "value2",
																		"nativeSrc": "5991:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "5991:6:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5964:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "5964:6:8"
																},
																"nativeSrc": "5964:34:8",
																"nodeType": "YulFunctionCall",
																"src": "5964:34:8"
															},
															"nativeSrc": "5964:34:8",
															"nodeType": "YulExpressionStatement",
															"src": "5964:34:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "5659:345:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5769:9:8",
														"nodeType": "YulTypedName",
														"src": "5769:9:8",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "5780:6:8",
														"nodeType": "YulTypedName",
														"src": "5780:6:8",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "5788:6:8",
														"nodeType": "YulTypedName",
														"src": "5788:6:8",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "5796:6:8",
														"nodeType": "YulTypedName",
														"src": "5796:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5807:4:8",
														"nodeType": "YulTypedName",
														"src": "5807:4:8",
														"type": ""
													}
												],
												"src": "5659:345:8"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        let _1 := 32\n        mstore(headStart, 32)\n        let length := mload(value0)\n        mstore(add(headStart, 32), length)\n        let i := 0\n        for { } lt(i, length) { i := add(i, _1) }\n        {\n            mstore(add(add(headStart, i), 64), mload(add(add(value0, i), _1)))\n        }\n        mstore(add(add(headStart, length), 64), 0)\n        tail := add(add(headStart, and(add(length, 31), not(31))), 64)\n    }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n    }\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xff))\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function abi_encode_tuple_t_stringliteral_a29bafda5c460178656603e71f46c7a7e2678699659809e503dcaef8e54424ae__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 29)\n        mstore(add(headStart, 64), \"Minting allowed only to owner\")\n        tail := add(headStart, 96)\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function checked_exp_helper(_base, exponent) -> power, base\n    {\n        let power_1 := 1\n        power := 1\n        base := _base\n        for { } gt(exponent, power_1) { }\n        {\n            if gt(base, div(not(0), base)) { panic_error_0x11() }\n            if and(exponent, power_1) { power := mul(power, base) }\n            base := mul(base, base)\n            exponent := shr(power_1, exponent)\n        }\n    }\n    function checked_exp_unsigned(base, exponent) -> power\n    {\n        if iszero(exponent)\n        {\n            power := 1\n            leave\n        }\n        if iszero(base)\n        {\n            power := 0\n            leave\n        }\n        switch base\n        case 1 {\n            power := 1\n            leave\n        }\n        case 2 {\n            if gt(exponent, 255) { panic_error_0x11() }\n            power := shl(exponent, 1)\n            leave\n        }\n        if or(and(lt(base, 11), lt(exponent, 78)), and(lt(base, 307), lt(exponent, 32)))\n        {\n            power := exp(base, exponent)\n            leave\n        }\n        let power_1, base_1 := checked_exp_helper(base, exponent)\n        if gt(power_1, div(not(0), base_1)) { panic_error_0x11() }\n        power := mul(power_1, base_1)\n    }\n    function checked_exp_t_uint256_t_uint8(base, exponent) -> power\n    {\n        power := checked_exp_unsigned(base, and(exponent, 0xff))\n    }\n    function checked_mul_t_uint256(x, y) -> product\n    {\n        product := mul(x, y)\n        if iszero(or(iszero(x), eq(y, div(product, x)))) { panic_error_0x11() }\n    }\n    function checked_div_t_uint256(x, y) -> r\n    {\n        if iszero(y)\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x12)\n            revert(0, 0x24)\n        }\n        r := div(x, y)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        diff := sub(x, y)\n        if gt(diff, x) { panic_error_0x11() }\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        sum := add(x, y)\n        if gt(x, sum) { panic_error_0x11() }\n    }\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n    }\n}",
									"id": 8,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b506004361061011c575f3560e01c8063715018a6116100a9578063ac3c93cf1161006e578063ac3c93cf14610249578063bea1dcf814610273578063dd62ed3e14610286578063ee33bc45146102be578063f2fde38b146102c7575f80fd5b8063715018a6146101ee57806379cc6790146101f65780638da5cb5b1461020957806395d89b411461022e578063a9059cbb14610236575f80fd5b80632d44ff23116100ef5780632d44ff2314610186578063313ce5671461018f57806340c10f191461019e57806342966c68146101b357806370a08231146101c6575f80fd5b806306fdde0314610120578063095ea7b31461013e57806318160ddd1461016157806323b872dd14610173575b5f80fd5b6101286102da565b6040516101359190610925565b60405180910390f35b61015161014c36600461098c565b61036a565b6040519015158152602001610135565b6002545b604051908152602001610135565b6101516101813660046109b4565b610383565b61016560075481565b60405160098152602001610135565b6101b16101ac36600461098c565b6103a6565b005b6101b16101c13660046109ed565b61042e565b6101656101d4366004610a04565b6001600160a01b03165f9081526020819052604090205490565b6101b161043b565b6101b161020436600461098c565b61044e565b6005546001600160a01b03165b6040516001600160a01b039091168152602001610135565b610128610463565b61015161024436600461098c565b610472565b610165610257366004610a24565b600960209081525f928352604080842090915290825290205481565b600654610216906001600160a01b031681565b610165610294366004610a24565b6001600160a01b039182165f90815260016020908152604080832093909416825291909152205490565b61016560085481565b6101b16102d5366004610a04565b610523565b6060600380546102e990610a55565b80601f016020809104026020016040519081016040528092919081815260200182805461031590610a55565b80156103605780601f1061033757610100808354040283529160200191610360565b820191905f5260205f20905b81548152906001019060200180831161034357829003601f168201915b5050505050905090565b5f3361037781858561055d565b60019150505b92915050565b5f3361039085828561056f565b61039b8585856105ea565b506001949350505050565b6103ae610647565b6001600160a01b038216331461040b5760405162461bcd60e51b815260206004820152601d60248201527f4d696e74696e6720616c6c6f776564206f6e6c7920746f206f776e657200000060448201526064015b60405180910390fd5b61042a8261041b6009600a610b81565b6104259084610b8f565b610674565b5050565b61043833826106a8565b50565b610443610647565b61044c5f6106dc565b565b61045982338361056f565b61042a82826106a8565b6060600480546102e990610a55565b5f6064610480836005610b8f565b61048a9190610ba6565b60078190555f9061049b9084610bc5565b90506007546008546104ad9190610bd8565b6008556006546007546001600160a01b03909116906104cf90339083906105ea565b6104da3386846105ea565b6007546001600160a01b038083165f908152600960209081526040808320938a1683529290529081208054909190610513908490610bd8565b9091555060019695505050505050565b61052b610647565b6001600160a01b03811661055457604051631e4fbdf760e01b81525f6004820152602401610402565b610438816106dc565b61056a838383600161072d565b505050565b6001600160a01b038381165f908152600160209081526040808320938616835292905220545f1981146105e457818110156105d657604051637dc7a0d960e11b81526001600160a01b03841660048201526024810182905260448101839052606401610402565b6105e484848484035f61072d565b50505050565b6001600160a01b03831661061357604051634b637e8f60e11b81525f6004820152602401610402565b6001600160a01b03821661063c5760405163ec442f0560e01b81525f6004820152602401610402565b61056a8383836107ff565b6005546001600160a01b0316331461044c5760405163118cdaa760e01b8152336004820152602401610402565b6001600160a01b03821661069d5760405163ec442f0560e01b81525f6004820152602401610402565b61042a5f83836107ff565b6001600160a01b0382166106d157604051634b637e8f60e11b81525f6004820152602401610402565b61042a825f836107ff565b600580546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0905f90a35050565b6001600160a01b0384166107565760405163e602df0560e01b81525f6004820152602401610402565b6001600160a01b03831661077f57604051634a1406b160e11b81525f6004820152602401610402565b6001600160a01b038085165f90815260016020908152604080832093871683529290522082905580156105e457826001600160a01b0316846001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925846040516107f191815260200190565b60405180910390a350505050565b6001600160a01b038316610829578060025f82825461081e9190610bd8565b909155506108999050565b6001600160a01b0383165f908152602081905260409020548181101561087b5760405163391434e360e21b81526001600160a01b03851660048201526024810182905260448101839052606401610402565b6001600160a01b0384165f9081526020819052604090209082900390555b6001600160a01b0382166108b5576002805482900390556108d3565b6001600160a01b0382165f9081526020819052604090208054820190555b816001600160a01b0316836001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8360405161091891815260200190565b60405180910390a3505050565b5f602080835283518060208501525f5b8181101561095157858101830151858201604001528201610935565b505f604082860101526040601f19601f8301168501019250505092915050565b80356001600160a01b0381168114610987575f80fd5b919050565b5f806040838503121561099d575f80fd5b6109a683610971565b946020939093013593505050565b5f805f606084860312156109c6575f80fd5b6109cf84610971565b92506109dd60208501610971565b9150604084013590509250925092565b5f602082840312156109fd575f80fd5b5035919050565b5f60208284031215610a14575f80fd5b610a1d82610971565b9392505050565b5f8060408385031215610a35575f80fd5b610a3e83610971565b9150610a4c60208401610971565b90509250929050565b600181811c90821680610a6957607f821691505b602082108103610a8757634e487b7160e01b5f52602260045260245ffd5b50919050565b634e487b7160e01b5f52601160045260245ffd5b600181815b80851115610adb57815f1904821115610ac157610ac1610a8d565b80851615610ace57918102915b93841c9390800290610aa6565b509250929050565b5f82610af15750600161037d565b81610afd57505f61037d565b8160018114610b135760028114610b1d57610b39565b600191505061037d565b60ff841115610b2e57610b2e610a8d565b50506001821b61037d565b5060208310610133831016604e8410600b8410161715610b5c575081810a61037d565b610b668383610aa1565b805f1904821115610b7957610b79610a8d565b029392505050565b5f610a1d60ff841683610ae3565b808202811582820484141761037d5761037d610a8d565b5f82610bc057634e487b7160e01b5f52601260045260245ffd5b500490565b8181038181111561037d5761037d610a8d565b8082018082111561037d5761037d610a8d56fea264697066735822122048bf5e24f5d5c9707227112533536fc041cb860ab255d8dd55c55df24f2dff7d64736f6c63430008170033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x11C JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x715018A6 GT PUSH2 0xA9 JUMPI DUP1 PUSH4 0xAC3C93CF GT PUSH2 0x6E JUMPI DUP1 PUSH4 0xAC3C93CF EQ PUSH2 0x249 JUMPI DUP1 PUSH4 0xBEA1DCF8 EQ PUSH2 0x273 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x286 JUMPI DUP1 PUSH4 0xEE33BC45 EQ PUSH2 0x2BE JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x2C7 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x715018A6 EQ PUSH2 0x1EE JUMPI DUP1 PUSH4 0x79CC6790 EQ PUSH2 0x1F6 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x209 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x22E JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x236 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x2D44FF23 GT PUSH2 0xEF JUMPI DUP1 PUSH4 0x2D44FF23 EQ PUSH2 0x186 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x18F JUMPI DUP1 PUSH4 0x40C10F19 EQ PUSH2 0x19E JUMPI DUP1 PUSH4 0x42966C68 EQ PUSH2 0x1B3 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x1C6 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x120 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x13E JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x161 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x173 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x128 PUSH2 0x2DA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x135 SWAP2 SWAP1 PUSH2 0x925 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x151 PUSH2 0x14C CALLDATASIZE PUSH1 0x4 PUSH2 0x98C JUMP JUMPDEST PUSH2 0x36A JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x135 JUMP JUMPDEST PUSH1 0x2 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x135 JUMP JUMPDEST PUSH2 0x151 PUSH2 0x181 CALLDATASIZE PUSH1 0x4 PUSH2 0x9B4 JUMP JUMPDEST PUSH2 0x383 JUMP JUMPDEST PUSH2 0x165 PUSH1 0x7 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x9 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x135 JUMP JUMPDEST PUSH2 0x1B1 PUSH2 0x1AC CALLDATASIZE PUSH1 0x4 PUSH2 0x98C JUMP JUMPDEST PUSH2 0x3A6 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1B1 PUSH2 0x1C1 CALLDATASIZE PUSH1 0x4 PUSH2 0x9ED JUMP JUMPDEST PUSH2 0x42E JUMP JUMPDEST PUSH2 0x165 PUSH2 0x1D4 CALLDATASIZE PUSH1 0x4 PUSH2 0xA04 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x1B1 PUSH2 0x43B JUMP JUMPDEST PUSH2 0x1B1 PUSH2 0x204 CALLDATASIZE PUSH1 0x4 PUSH2 0x98C JUMP JUMPDEST PUSH2 0x44E JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x135 JUMP JUMPDEST PUSH2 0x128 PUSH2 0x463 JUMP JUMPDEST PUSH2 0x151 PUSH2 0x244 CALLDATASIZE PUSH1 0x4 PUSH2 0x98C JUMP JUMPDEST PUSH2 0x472 JUMP JUMPDEST PUSH2 0x165 PUSH2 0x257 CALLDATASIZE PUSH1 0x4 PUSH2 0xA24 JUMP JUMPDEST PUSH1 0x9 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH0 SWAP3 DUP4 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 SWAP1 SWAP2 MSTORE SWAP1 DUP3 MSTORE SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH2 0x216 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x165 PUSH2 0x294 CALLDATASIZE PUSH1 0x4 PUSH2 0xA24 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x165 PUSH1 0x8 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x1B1 PUSH2 0x2D5 CALLDATASIZE PUSH1 0x4 PUSH2 0xA04 JUMP JUMPDEST PUSH2 0x523 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x2E9 SWAP1 PUSH2 0xA55 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x315 SWAP1 PUSH2 0xA55 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x360 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x337 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x360 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x343 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 CALLER PUSH2 0x377 DUP2 DUP6 DUP6 PUSH2 0x55D JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 CALLER PUSH2 0x390 DUP6 DUP3 DUP6 PUSH2 0x56F JUMP JUMPDEST PUSH2 0x39B DUP6 DUP6 DUP6 PUSH2 0x5EA JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH2 0x3AE PUSH2 0x647 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND CALLER EQ PUSH2 0x40B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4D696E74696E6720616C6C6F776564206F6E6C7920746F206F776E6572000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x42A DUP3 PUSH2 0x41B PUSH1 0x9 PUSH1 0xA PUSH2 0xB81 JUMP JUMPDEST PUSH2 0x425 SWAP1 DUP5 PUSH2 0xB8F JUMP JUMPDEST PUSH2 0x674 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x438 CALLER DUP3 PUSH2 0x6A8 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x443 PUSH2 0x647 JUMP JUMPDEST PUSH2 0x44C PUSH0 PUSH2 0x6DC JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x459 DUP3 CALLER DUP4 PUSH2 0x56F JUMP JUMPDEST PUSH2 0x42A DUP3 DUP3 PUSH2 0x6A8 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x2E9 SWAP1 PUSH2 0xA55 JUMP JUMPDEST PUSH0 PUSH1 0x64 PUSH2 0x480 DUP4 PUSH1 0x5 PUSH2 0xB8F JUMP JUMPDEST PUSH2 0x48A SWAP2 SWAP1 PUSH2 0xBA6 JUMP JUMPDEST PUSH1 0x7 DUP2 SWAP1 SSTORE PUSH0 SWAP1 PUSH2 0x49B SWAP1 DUP5 PUSH2 0xBC5 JUMP JUMPDEST SWAP1 POP PUSH1 0x7 SLOAD PUSH1 0x8 SLOAD PUSH2 0x4AD SWAP2 SWAP1 PUSH2 0xBD8 JUMP JUMPDEST PUSH1 0x8 SSTORE PUSH1 0x6 SLOAD PUSH1 0x7 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH2 0x4CF SWAP1 CALLER SWAP1 DUP4 SWAP1 PUSH2 0x5EA JUMP JUMPDEST PUSH2 0x4DA CALLER DUP7 DUP5 PUSH2 0x5EA JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP4 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP11 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE SWAP1 DUP2 KECCAK256 DUP1 SLOAD SWAP1 SWAP2 SWAP1 PUSH2 0x513 SWAP1 DUP5 SWAP1 PUSH2 0xBD8 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH1 0x1 SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x52B PUSH2 0x647 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x554 JUMPI PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x402 JUMP JUMPDEST PUSH2 0x438 DUP2 PUSH2 0x6DC JUMP JUMPDEST PUSH2 0x56A DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x72D JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP7 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD PUSH0 NOT DUP2 EQ PUSH2 0x5E4 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x5D6 JUMPI PUSH1 0x40 MLOAD PUSH4 0x7DC7A0D9 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x64 ADD PUSH2 0x402 JUMP JUMPDEST PUSH2 0x5E4 DUP5 DUP5 DUP5 DUP5 SUB PUSH0 PUSH2 0x72D JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x613 JUMPI PUSH1 0x40 MLOAD PUSH4 0x4B637E8F PUSH1 0xE1 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x402 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x63C JUMPI PUSH1 0x40 MLOAD PUSH4 0xEC442F05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x402 JUMP JUMPDEST PUSH2 0x56A DUP4 DUP4 DUP4 PUSH2 0x7FF JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x44C JUMPI PUSH1 0x40 MLOAD PUSH4 0x118CDAA7 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x402 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x69D JUMPI PUSH1 0x40 MLOAD PUSH4 0xEC442F05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x402 JUMP JUMPDEST PUSH2 0x42A PUSH0 DUP4 DUP4 PUSH2 0x7FF JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x6D1 JUMPI PUSH1 0x40 MLOAD PUSH4 0x4B637E8F PUSH1 0xE1 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x402 JUMP JUMPDEST PUSH2 0x42A DUP3 PUSH0 DUP4 PUSH2 0x7FF JUMP JUMPDEST PUSH1 0x5 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP2 SWAP1 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH0 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x756 JUMPI PUSH1 0x40 MLOAD PUSH4 0xE602DF05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x402 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x77F JUMPI PUSH1 0x40 MLOAD PUSH4 0x4A1406B1 PUSH1 0xE1 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x402 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP8 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 DUP3 SWAP1 SSTORE DUP1 ISZERO PUSH2 0x5E4 JUMPI DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0x7F1 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x829 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x81E SWAP2 SWAP1 PUSH2 0xBD8 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH2 0x899 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x87B JUMPI PUSH1 0x40 MLOAD PUSH4 0x391434E3 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x64 ADD PUSH2 0x402 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP1 DUP3 SWAP1 SUB SWAP1 SSTORE JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x8B5 JUMPI PUSH1 0x2 DUP1 SLOAD DUP3 SWAP1 SUB SWAP1 SSTORE PUSH2 0x8D3 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD DUP3 ADD SWAP1 SSTORE JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x918 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 PUSH1 0x20 DUP6 ADD MSTORE PUSH0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x951 JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0x935 JUMP JUMPDEST POP PUSH0 PUSH1 0x40 DUP3 DUP7 ADD ADD MSTORE PUSH1 0x40 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP6 ADD ADD SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x987 JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x99D JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x9A6 DUP4 PUSH2 0x971 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x9C6 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x9CF DUP5 PUSH2 0x971 JUMP JUMPDEST SWAP3 POP PUSH2 0x9DD PUSH1 0x20 DUP6 ADD PUSH2 0x971 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x9FD JUMPI PUSH0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xA14 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xA1D DUP3 PUSH2 0x971 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xA35 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xA3E DUP4 PUSH2 0x971 JUMP JUMPDEST SWAP2 POP PUSH2 0xA4C PUSH1 0x20 DUP5 ADD PUSH2 0x971 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0xA69 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0xA87 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH1 0x1 DUP2 DUP2 JUMPDEST DUP1 DUP6 GT ISZERO PUSH2 0xADB JUMPI DUP2 PUSH0 NOT DIV DUP3 GT ISZERO PUSH2 0xAC1 JUMPI PUSH2 0xAC1 PUSH2 0xA8D JUMP JUMPDEST DUP1 DUP6 AND ISZERO PUSH2 0xACE JUMPI SWAP2 DUP2 MUL SWAP2 JUMPDEST SWAP4 DUP5 SHR SWAP4 SWAP1 DUP1 MUL SWAP1 PUSH2 0xAA6 JUMP JUMPDEST POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 PUSH2 0xAF1 JUMPI POP PUSH1 0x1 PUSH2 0x37D JUMP JUMPDEST DUP2 PUSH2 0xAFD JUMPI POP PUSH0 PUSH2 0x37D JUMP JUMPDEST DUP2 PUSH1 0x1 DUP2 EQ PUSH2 0xB13 JUMPI PUSH1 0x2 DUP2 EQ PUSH2 0xB1D JUMPI PUSH2 0xB39 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP PUSH2 0x37D JUMP JUMPDEST PUSH1 0xFF DUP5 GT ISZERO PUSH2 0xB2E JUMPI PUSH2 0xB2E PUSH2 0xA8D JUMP JUMPDEST POP POP PUSH1 0x1 DUP3 SHL PUSH2 0x37D JUMP JUMPDEST POP PUSH1 0x20 DUP4 LT PUSH2 0x133 DUP4 LT AND PUSH1 0x4E DUP5 LT PUSH1 0xB DUP5 LT AND OR ISZERO PUSH2 0xB5C JUMPI POP DUP2 DUP2 EXP PUSH2 0x37D JUMP JUMPDEST PUSH2 0xB66 DUP4 DUP4 PUSH2 0xAA1 JUMP JUMPDEST DUP1 PUSH0 NOT DIV DUP3 GT ISZERO PUSH2 0xB79 JUMPI PUSH2 0xB79 PUSH2 0xA8D JUMP JUMPDEST MUL SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0xA1D PUSH1 0xFF DUP5 AND DUP4 PUSH2 0xAE3 JUMP JUMPDEST DUP1 DUP3 MUL DUP2 ISZERO DUP3 DUP3 DIV DUP5 EQ OR PUSH2 0x37D JUMPI PUSH2 0x37D PUSH2 0xA8D JUMP JUMPDEST PUSH0 DUP3 PUSH2 0xBC0 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x37D JUMPI PUSH2 0x37D PUSH2 0xA8D JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x37D JUMPI PUSH2 0x37D PUSH2 0xA8D JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 BASEFEE 0xBF 0x5E 0x24 CREATE2 0xD5 0xC9 PUSH17 0x7227112533536FC041CB860AB255D8DD55 0xC5 0x5D CALLCODE 0x4F 0x2D SELFDESTRUCT PUSH30 0x64736F6C6343000817003300000000000000000000000000000000000000 ",
							"sourceMap": "243:1276:7:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2074:89:2;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4293:186;;;;;;:::i;:::-;;:::i;:::-;;;1169:14:8;;1162:22;1144:41;;1132:2;1117:18;4293:186:2;1004:187:8;3144:97:2;3222:12;;3144:97;;;1342:25:8;;;1330:2;1315:18;3144:97:2;1196:177:8;5039:244:2;;;;;;:::i;:::-;;:::i;335:33:7:-;;;;;;920:87;;;999:1;1853:36:8;;1841:2;1826:18;920:87:7;1711:184:8;732:182:7;;;;;;:::i;:::-;;:::i;:::-;;618:87:4;;;;;;:::i;:::-;;:::i;3299:116:2:-;;;;;;:::i;:::-;-1:-1:-1;;;;;3390:18:2;3364:7;3390:18;;;;;;;;;;;;3299:116;2293:101:0;;;:::i;1021:158:4:-;;;;;;:::i;:::-;;:::i;1638:85:0:-;1710:6;;-1:-1:-1;;;;;1710:6:0;1638:85;;;-1:-1:-1;;;;;2440:32:8;;;2422:51;;2410:2;2395:18;1638:85:0;2276:203:8;:93:2;;;:::i;1013:504:7:-;;;;;;:::i;:::-;;:::i;413:64::-;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;302:27;;;;;-1:-1:-1;;;;;302:27:7;;;3846:140:2;;;;;;:::i;:::-;-1:-1:-1;;;;;3952:18:2;;;3926:7;3952:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;3846:140;374:32:7;;;;;;2543:215:0;;;;;;:::i;:::-;;:::i;2074:89:2:-;2119:13;2151:5;2144:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2074:89;:::o;4293:186::-;4366:4;735:10:6;4420:31:2;735:10:6;4436:7:2;4445:5;4420:8;:31::i;:::-;4468:4;4461:11;;;4293:186;;;;;:::o;5039:244::-;5126:4;735:10:6;5182:37:2;5198:4;735:10:6;5213:5:2;5182:15;:37::i;:::-;5229:26;5239:4;5245:2;5249:5;5229:9;:26::i;:::-;-1:-1:-1;5272:4:2;;5039:244;-1:-1:-1;;;;5039:244:2:o;732:182:7:-;1531:13:0;:11;:13::i;:::-;-1:-1:-1;;;;;809:16:7;::::1;815:10;809:16;801:58;;;::::0;-1:-1:-1;;;801:58:7;;3336:2:8;801:58:7::1;::::0;::::1;3318:21:8::0;3375:2;3355:18;;;3348:30;3414:31;3394:18;;;3387:59;3463:18;;801:58:7::1;;;;;;;;;869:38;875:2:::0;888:17:::1;999:1:::0;888:2:::1;:17;:::i;:::-;878:28;::::0;:6;:28:::1;:::i;:::-;869:5;:38::i;:::-;732:182:::0;;:::o;618:87:4:-;672:26;735:10:6;692:5:4;672;:26::i;:::-;618:87;:::o;2293:101:0:-;1531:13;:11;:13::i;:::-;2357:30:::1;2384:1;2357:18;:30::i;:::-;2293:101::o:0;1021:158:4:-;1096:45;1112:7;735:10:6;1135:5:4;1096:15;:45::i;:::-;1151:21;1157:7;1166:5;1151;:21::i;2276:93:2:-;2323:13;2355:7;2348:14;;;;;:::i;1013:504:7:-;1087:4;1136:3;1125:9;1129:5;1125:1;:9;:::i;:::-;1124:15;;;;:::i;:::-;1103:18;:36;;;1149:19;;1171:26;;:5;:26;:::i;:::-;1149:48;;1247:18;;1227:17;;:38;;;;:::i;:::-;1207:17;:58;1299:12;;1357:18;;-1:-1:-1;;;;;1299:12:7;;;;1321:55;;1331:10;;1299:12;;1321:9;:55::i;:::-;1386:41;1396:10;1408:2;1412:14;1386:9;:41::i;:::-;1470:18;;-1:-1:-1;;;;;1437:25:7;;;;;;;:10;:25;;;;;;;;:29;;;;;;;;;;;:51;;:29;;:25;:51;;1470:18;;1437:51;:::i;:::-;;;;-1:-1:-1;1505:4:7;;1013:504;-1:-1:-1;;;;;;1013:504:7:o;2543:215:0:-;1531:13;:11;:13::i;:::-;-1:-1:-1;;;;;2627:22:0;::::1;2623:91;;2672:31;::::0;-1:-1:-1;;;2672:31:0;;2700:1:::1;2672:31;::::0;::::1;2422:51:8::0;2395:18;;2672:31:0::1;2276:203:8::0;2623:91:0::1;2723:28;2742:8;2723:18;:28::i;8989:128:2:-:0;9073:37;9082:5;9089:7;9098:5;9105:4;9073:8;:37::i;:::-;8989:128;;;:::o;10663:477::-;-1:-1:-1;;;;;3952:18:2;;;10762:24;3952:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;-1:-1:-1;;10828:37:2;;10824:310;;10904:5;10885:16;:24;10881:130;;;10936:60;;-1:-1:-1;;;10936:60:2;;-1:-1:-1;;;;;5879:32:8;;10936:60:2;;;5861:51:8;5928:18;;;5921:34;;;5971:18;;;5964:34;;;5834:18;;10936:60:2;5659:345:8;10881:130:2;11052:57;11061:5;11068:7;11096:5;11077:16;:24;11103:5;11052:8;:57::i;:::-;10752:388;10663:477;;;:::o;5656:300::-;-1:-1:-1;;;;;5739:18:2;;5735:86;;5780:30;;-1:-1:-1;;;5780:30:2;;5807:1;5780:30;;;2422:51:8;2395:18;;5780:30:2;2276:203:8;5735:86:2;-1:-1:-1;;;;;5834:16:2;;5830:86;;5873:32;;-1:-1:-1;;;5873:32:2;;5902:1;5873:32;;;2422:51:8;2395:18;;5873:32:2;2276:203:8;5830:86:2;5925:24;5933:4;5939:2;5943:5;5925:7;:24::i;1796:162:0:-;1710:6;;-1:-1:-1;;;;;1710:6:0;735:10:6;1855:23:0;1851:101;;1901:40;;-1:-1:-1;;;1901:40:0;;735:10:6;1901:40:0;;;2422:51:8;2395:18;;1901:40:0;2276:203:8;7721:208:2;-1:-1:-1;;;;;7791:21:2;;7787:91;;7835:32;;-1:-1:-1;;;7835:32:2;;7864:1;7835:32;;;2422:51:8;2395:18;;7835:32:2;2276:203:8;7787:91:2;7887:35;7903:1;7907:7;7916:5;7887:7;:35::i;8247:206::-;-1:-1:-1;;;;;8317:21:2;;8313:89;;8361:30;;-1:-1:-1;;;8361:30:2;;8388:1;8361:30;;;2422:51:8;2395:18;;8361:30:2;2276:203:8;8313:89:2;8411:35;8419:7;8436:1;8440:5;8411:7;:35::i;2912:187:0:-;3004:6;;;-1:-1:-1;;;;;3020:17:0;;;-1:-1:-1;;;;;;3020:17:0;;;;;;;3052:40;;3004:6;;;3020:17;3004:6;;3052:40;;2985:16;;3052:40;2975:124;2912:187;:::o;9949:432:2:-;-1:-1:-1;;;;;10061:19:2;;10057:89;;10103:32;;-1:-1:-1;;;10103:32:2;;10132:1;10103:32;;;2422:51:8;2395:18;;10103:32:2;2276:203:8;10057:89:2;-1:-1:-1;;;;;10159:21:2;;10155:90;;10203:31;;-1:-1:-1;;;10203:31:2;;10231:1;10203:31;;;2422:51:8;2395:18;;10203:31:2;2276:203:8;10155:90:2;-1:-1:-1;;;;;10254:18:2;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;:35;;;10299:76;;;;10349:7;-1:-1:-1;;;;;10333:31:2;10342:5;-1:-1:-1;;;;;10333:31:2;;10358:5;10333:31;;;;1342:25:8;;1330:2;1315:18;;1196:177;10333:31:2;;;;;;;;9949:432;;;;:::o;6271:1107::-;-1:-1:-1;;;;;6360:18:2;;6356:540;;6512:5;6496:12;;:21;;;;;;;:::i;:::-;;;;-1:-1:-1;6356:540:2;;-1:-1:-1;6356:540:2;;-1:-1:-1;;;;;6570:15:2;;6548:19;6570:15;;;;;;;;;;;6603:19;;;6599:115;;;6649:50;;-1:-1:-1;;;6649:50:2;;-1:-1:-1;;;;;5879:32:8;;6649:50:2;;;5861:51:8;5928:18;;;5921:34;;;5971:18;;;5964:34;;;5834:18;;6649:50:2;5659:345:8;6599:115:2;-1:-1:-1;;;;;6834:15:2;;:9;:15;;;;;;;;;;6852:19;;;;6834:37;;6356:540;-1:-1:-1;;;;;6910:16:2;;6906:425;;7073:12;:21;;;;;;;6906:425;;;-1:-1:-1;;;;;7284:13:2;;:9;:13;;;;;;;;;;:22;;;;;;6906:425;7361:2;-1:-1:-1;;;;;7346:25:2;7355:4;-1:-1:-1;;;;;7346:25:2;;7365:5;7346:25;;;;1342::8;;1330:2;1315:18;;1196:177;7346:25:2;;;;;;;;6271:1107;;;:::o;14:548:8:-;126:4;155:2;184;173:9;166:21;216:6;210:13;259:6;254:2;243:9;239:18;232:34;284:1;294:140;308:6;305:1;302:13;294:140;;;403:14;;;399:23;;393:30;369:17;;;388:2;365:26;358:66;323:10;;294:140;;;298:3;483:1;478:2;469:6;458:9;454:22;450:31;443:42;553:2;546;542:7;537:2;529:6;525:15;521:29;510:9;506:45;502:54;494:62;;;;14:548;;;;:::o;567:173::-;635:20;;-1:-1:-1;;;;;684:31:8;;674:42;;664:70;;730:1;727;720:12;664:70;567:173;;;:::o;745:254::-;813:6;821;874:2;862:9;853:7;849:23;845:32;842:52;;;890:1;887;880:12;842:52;913:29;932:9;913:29;:::i;:::-;903:39;989:2;974:18;;;;961:32;;-1:-1:-1;;;745:254:8:o;1378:328::-;1455:6;1463;1471;1524:2;1512:9;1503:7;1499:23;1495:32;1492:52;;;1540:1;1537;1530:12;1492:52;1563:29;1582:9;1563:29;:::i;:::-;1553:39;;1611:38;1645:2;1634:9;1630:18;1611:38;:::i;:::-;1601:48;;1696:2;1685:9;1681:18;1668:32;1658:42;;1378:328;;;;;:::o;1900:180::-;1959:6;2012:2;2000:9;1991:7;1987:23;1983:32;1980:52;;;2028:1;2025;2018:12;1980:52;-1:-1:-1;2051:23:8;;1900:180;-1:-1:-1;1900:180:8:o;2085:186::-;2144:6;2197:2;2185:9;2176:7;2172:23;2168:32;2165:52;;;2213:1;2210;2203:12;2165:52;2236:29;2255:9;2236:29;:::i;:::-;2226:39;2085:186;-1:-1:-1;;;2085:186:8:o;2484:260::-;2552:6;2560;2613:2;2601:9;2592:7;2588:23;2584:32;2581:52;;;2629:1;2626;2619:12;2581:52;2652:29;2671:9;2652:29;:::i;:::-;2642:39;;2700:38;2734:2;2723:9;2719:18;2700:38;:::i;:::-;2690:48;;2484:260;;;;;:::o;2749:380::-;2828:1;2824:12;;;;2871;;;2892:61;;2946:4;2938:6;2934:17;2924:27;;2892:61;2999:2;2991:6;2988:14;2968:18;2965:38;2962:161;;3045:10;3040:3;3036:20;3033:1;3026:31;3080:4;3077:1;3070:15;3108:4;3105:1;3098:15;2962:161;;2749:380;;;:::o;3492:127::-;3553:10;3548:3;3544:20;3541:1;3534:31;3584:4;3581:1;3574:15;3608:4;3605:1;3598:15;3624:416;3713:1;3750:5;3713:1;3764:270;3785:7;3775:8;3772:21;3764:270;;;3844:4;3840:1;3836:6;3832:17;3826:4;3823:27;3820:53;;;3853:18;;:::i;:::-;3903:7;3893:8;3889:22;3886:55;;;3923:16;;;;3886:55;4002:22;;;;3962:15;;;;3764:270;;;3768:3;3624:416;;;;;:::o;4045:806::-;4094:5;4124:8;4114:80;;-1:-1:-1;4165:1:8;4179:5;;4114:80;4213:4;4203:76;;-1:-1:-1;4250:1:8;4264:5;;4203:76;4295:4;4313:1;4308:59;;;;4381:1;4376:130;;;;4288:218;;4308:59;4338:1;4329:10;;4352:5;;;4376:130;4413:3;4403:8;4400:17;4397:43;;;4420:18;;:::i;:::-;-1:-1:-1;;4476:1:8;4462:16;;4491:5;;4288:218;;4590:2;4580:8;4577:16;4571:3;4565:4;4562:13;4558:36;4552:2;4542:8;4539:16;4534:2;4528:4;4525:12;4521:35;4518:77;4515:159;;;-1:-1:-1;4627:19:8;;;4659:5;;4515:159;4706:34;4731:8;4725:4;4706:34;:::i;:::-;4776:6;4772:1;4768:6;4764:19;4755:7;4752:32;4749:58;;;4787:18;;:::i;:::-;4825:20;;4045:806;-1:-1:-1;;;4045:806:8:o;4856:140::-;4914:5;4943:47;4984:4;4974:8;4970:19;4964:4;4943:47;:::i;5001:168::-;5074:9;;;5105;;5122:15;;;5116:22;;5102:37;5092:71;;5143:18;;:::i;5174:217::-;5214:1;5240;5230:132;;5284:10;5279:3;5275:20;5272:1;5265:31;5319:4;5316:1;5309:15;5347:4;5344:1;5337:15;5230:132;-1:-1:-1;5376:9:8;;5174:217::o;5396:128::-;5463:9;;;5484:11;;;5481:37;;;5498:18;;:::i;5529:125::-;5594:9;;;5615:10;;;5612:36;;;5628:18;;:::i"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "621000",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"_taxRecord(address,address)": "infinite",
								"allowance(address,address)": "infinite",
								"approve(address,uint256)": "24758",
								"balanceOf(address)": "2648",
								"burn(uint256)": "51005",
								"burnFrom(address,uint256)": "infinite",
								"currentTaxDeducted()": "2317",
								"decimals()": "221",
								"grossTaxCollected()": "2382",
								"mint(address,uint256)": "infinite",
								"name()": "infinite",
								"owner()": "2386",
								"renounceOwnership()": "infinite",
								"symbol()": "infinite",
								"taxCollector()": "2380",
								"totalSupply()": "2348",
								"transfer(address,uint256)": "infinite",
								"transferFrom(address,address,uint256)": "infinite",
								"transferOwnership(address)": "28443"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 243,
									"end": 1519,
									"name": "PUSH",
									"source": 7,
									"value": "80"
								},
								{
									"begin": 243,
									"end": 1519,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 243,
									"end": 1519,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 483,
									"end": 726,
									"name": "CALLVALUE",
									"source": 7
								},
								{
									"begin": 483,
									"end": 726,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 483,
									"end": 726,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 483,
									"end": 726,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 483,
									"end": 726,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 483,
									"end": 726,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 483,
									"end": 726,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 483,
									"end": 726,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 483,
									"end": 726,
									"name": "tag",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 483,
									"end": 726,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 483,
									"end": 726,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 483,
									"end": 726,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 483,
									"end": 726,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 483,
									"end": 726,
									"name": "PUSHSIZE",
									"source": 7
								},
								{
									"begin": 483,
									"end": 726,
									"name": "CODESIZE",
									"source": 7
								},
								{
									"begin": 483,
									"end": 726,
									"name": "SUB",
									"source": 7
								},
								{
									"begin": 483,
									"end": 726,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 483,
									"end": 726,
									"name": "PUSHSIZE",
									"source": 7
								},
								{
									"begin": 483,
									"end": 726,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 483,
									"end": 726,
									"name": "CODECOPY",
									"source": 7
								},
								{
									"begin": 483,
									"end": 726,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 483,
									"end": 726,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 483,
									"end": 726,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 483,
									"end": 726,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 483,
									"end": 726,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 483,
									"end": 726,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 483,
									"end": 726,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "2"
								},
								{
									"begin": 483,
									"end": 726,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 483,
									"end": 726,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "3"
								},
								{
									"begin": 483,
									"end": 726,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 483,
									"end": 726,
									"name": "tag",
									"source": 7,
									"value": "2"
								},
								{
									"begin": 483,
									"end": 726,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 605,
									"end": 617,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 2,
									"value": "A"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "26BCA732BBAA37B5B2B7"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "B1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4D4E544B"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1970,
									"end": 1975,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1962,
									"end": 1967,
									"name": "PUSH",
									"source": 2,
									"value": "3"
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "8"
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "9"
								},
								{
									"begin": 1962,
									"end": 1975,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "tag",
									"source": 2,
									"value": "8"
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1985,
									"end": 1992,
									"name": "PUSH",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "10"
								},
								{
									"begin": 1995,
									"end": 2002,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 1985,
									"end": 1992,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "9"
								},
								{
									"begin": 1985,
									"end": 2002,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "tag",
									"source": 2,
									"value": "10"
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1E4FBDF7"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1350,
									"end": 1351,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 3388,
									"end": 3439,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 3361,
									"end": 3379,
									"name": "PUSH",
									"source": 8,
									"value": "24"
								},
								{
									"begin": 3361,
									"end": 3379,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "tag",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "tag",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "15"
								},
								{
									"begin": 1392,
									"end": 1404,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "16"
								},
								{
									"begin": 1373,
									"end": 1405,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "tag",
									"source": 0,
									"value": "15"
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 633,
									"end": 645,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "6"
								},
								{
									"begin": 633,
									"end": 661,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 633,
									"end": 661,
									"name": "SLOAD",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 633,
									"end": 661,
									"modifierDepth": 2,
									"name": "AND",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 633,
									"end": 661,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 633,
									"end": 661,
									"modifierDepth": 2,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 633,
									"end": 661,
									"modifierDepth": 2,
									"name": "OR",
									"source": 7
								},
								{
									"begin": 633,
									"end": 661,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 633,
									"end": 661,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 671,
									"end": 719,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "18"
								},
								{
									"begin": 677,
									"end": 689,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 706,
									"end": 716,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "19"
								},
								{
									"begin": 999,
									"end": 1000,
									"name": "PUSH",
									"source": 7,
									"value": "9"
								},
								{
									"begin": 999,
									"end": 1000,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 920,
									"end": 1007,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 706,
									"end": 716,
									"modifierDepth": 2,
									"name": "tag",
									"source": 7,
									"value": "19"
								},
								{
									"begin": 706,
									"end": 716,
									"modifierDepth": 2,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 700,
									"end": 717,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "21"
								},
								{
									"begin": 700,
									"end": 717,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 700,
									"end": 702,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 7,
									"value": "A"
								},
								{
									"begin": 700,
									"end": 717,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "22"
								},
								{
									"begin": 700,
									"end": 717,
									"jumpType": "[in]",
									"modifierDepth": 2,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 700,
									"end": 717,
									"modifierDepth": 2,
									"name": "tag",
									"source": 7,
									"value": "21"
								},
								{
									"begin": 700,
									"end": 717,
									"modifierDepth": 2,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 690,
									"end": 718,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "23"
								},
								{
									"begin": 690,
									"end": 718,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 690,
									"end": 696,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 690,
									"end": 718,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "24"
								},
								{
									"begin": 690,
									"end": 718,
									"jumpType": "[in]",
									"modifierDepth": 2,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 690,
									"end": 718,
									"modifierDepth": 2,
									"name": "tag",
									"source": 7,
									"value": "23"
								},
								{
									"begin": 690,
									"end": 718,
									"modifierDepth": 2,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 671,
									"end": 676,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "25"
								},
								{
									"begin": 671,
									"end": 719,
									"jumpType": "[in]",
									"modifierDepth": 2,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 671,
									"end": 719,
									"modifierDepth": 2,
									"name": "tag",
									"source": 7,
									"value": "18"
								},
								{
									"begin": 671,
									"end": 719,
									"modifierDepth": 2,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 483,
									"end": 726,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 483,
									"end": 726,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 483,
									"end": 726,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 243,
									"end": 1519,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "55"
								},
								{
									"begin": 243,
									"end": 1519,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "tag",
									"source": 0,
									"value": "16"
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SWAP4",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3001,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2985,
									"end": 3001,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 2975,
									"end": 3099,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2912,
									"end": 3099,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 7721,
									"end": 7929,
									"name": "tag",
									"source": 2,
									"value": "25"
								},
								{
									"begin": 7721,
									"end": 7929,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 7791,
									"end": 7812,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 7791,
									"end": 7812,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 7787,
									"end": 7878,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "30"
								},
								{
									"begin": 7787,
									"end": 7878,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "EC442F05"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 7864,
									"end": 7865,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "PUSH",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 3388,
									"end": 3439,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 3361,
									"end": 3379,
									"name": "PUSH",
									"source": 8,
									"value": "24"
								},
								{
									"begin": 3361,
									"end": 3379,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "13"
								},
								{
									"begin": 3242,
									"end": 3445,
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 7787,
									"end": 7878,
									"name": "tag",
									"source": 2,
									"value": "30"
								},
								{
									"begin": 7787,
									"end": 7878,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 7887,
									"end": 7922,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "32"
								},
								{
									"begin": 7903,
									"end": 7904,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 7907,
									"end": 7914,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 7916,
									"end": 7921,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 7887,
									"end": 7894,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "33"
								},
								{
									"begin": 7887,
									"end": 7922,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 7887,
									"end": 7922,
									"name": "tag",
									"source": 2,
									"value": "32"
								},
								{
									"begin": 7887,
									"end": 7922,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 7721,
									"end": 7929,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 7721,
									"end": 7929,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 7721,
									"end": 7929,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 6271,
									"end": 7378,
									"name": "tag",
									"source": 2,
									"value": "33"
								},
								{
									"begin": 6271,
									"end": 7378,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 6360,
									"end": 6378,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 6360,
									"end": 6378,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 6356,
									"end": 6896,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "35"
								},
								{
									"begin": 6356,
									"end": 6896,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 6512,
									"end": 6517,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 6496,
									"end": 6508,
									"name": "PUSH",
									"source": 2,
									"value": "2"
								},
								{
									"begin": 6496,
									"end": 6508,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "36"
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "37"
								},
								{
									"begin": 6496,
									"end": 6517,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "tag",
									"source": 2,
									"value": "36"
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 6356,
									"end": 6896,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "38"
								},
								{
									"begin": 6356,
									"end": 6896,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 6356,
									"end": 6896,
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 6356,
									"end": 6896,
									"name": "tag",
									"source": 2,
									"value": "35"
								},
								{
									"begin": 6356,
									"end": 6896,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 6548,
									"end": 6567,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "KECCAK256",
									"source": 2
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": 6603,
									"end": 6622,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6603,
									"end": 6622,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6603,
									"end": 6622,
									"name": "LT",
									"source": 2
								},
								{
									"begin": 6599,
									"end": 6714,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 6599,
									"end": 6714,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "39"
								},
								{
									"begin": 6599,
									"end": 6714,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "391434E3"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E2"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 5482,
									"end": 5514,
									"name": "DUP6",
									"source": 8
								},
								{
									"begin": 5482,
									"end": 5514,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "PUSH",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 5464,
									"end": 5515,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 5531,
									"end": 5549,
									"name": "PUSH",
									"source": 8,
									"value": "24"
								},
								{
									"begin": 5531,
									"end": 5549,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 5531,
									"end": 5549,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 5524,
									"end": 5558,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 5524,
									"end": 5558,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 5524,
									"end": 5558,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 5574,
									"end": 5592,
									"name": "PUSH",
									"source": 8,
									"value": "44"
								},
								{
									"begin": 5574,
									"end": 5592,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 5574,
									"end": 5592,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 5567,
									"end": 5601,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 5567,
									"end": 5601,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 5567,
									"end": 5601,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 5437,
									"end": 5455,
									"name": "PUSH",
									"source": 8,
									"value": "64"
								},
								{
									"begin": 5437,
									"end": 5455,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "13"
								},
								{
									"begin": 5262,
									"end": 5607,
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 6599,
									"end": 6714,
									"name": "tag",
									"source": 2,
									"value": "39"
								},
								{
									"begin": 6599,
									"end": 6714,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "DUP5",
									"source": 2
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 6834,
									"end": 6843,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "KECCAK256",
									"source": 2
								},
								{
									"begin": 6852,
									"end": 6871,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6852,
									"end": 6871,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 6852,
									"end": 6871,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6852,
									"end": 6871,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 6834,
									"end": 6871,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6834,
									"end": 6871,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 6356,
									"end": 6896,
									"name": "tag",
									"source": 2,
									"value": "38"
								},
								{
									"begin": 6356,
									"end": 6896,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 6910,
									"end": 6926,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 6910,
									"end": 6926,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 6906,
									"end": 7331,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "42"
								},
								{
									"begin": 6906,
									"end": 7331,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 7073,
									"end": 7085,
									"name": "PUSH",
									"source": 2,
									"value": "2"
								},
								{
									"begin": 7073,
									"end": 7094,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 7073,
									"end": 7094,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": 7073,
									"end": 7094,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 7073,
									"end": 7094,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 7073,
									"end": 7094,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 7073,
									"end": 7094,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 7073,
									"end": 7094,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 6906,
									"end": 7331,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "43"
								},
								{
									"begin": 6906,
									"end": 7331,
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 6906,
									"end": 7331,
									"name": "tag",
									"source": 2,
									"value": "42"
								},
								{
									"begin": 6906,
									"end": 7331,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 7284,
									"end": 7293,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "KECCAK256",
									"source": 2
								},
								{
									"begin": 7284,
									"end": 7306,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 7284,
									"end": 7306,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": 7284,
									"end": 7306,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 7284,
									"end": 7306,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 7284,
									"end": 7306,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 7284,
									"end": 7306,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 6906,
									"end": 7331,
									"name": "tag",
									"source": 2,
									"value": "43"
								},
								{
									"begin": 6906,
									"end": 7331,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 7361,
									"end": 7363,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 7355,
									"end": 7359,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "PUSH",
									"source": 2,
									"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
								},
								{
									"begin": 7365,
									"end": 7370,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "44"
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 5758,
									"end": 5783,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 5758,
									"end": 5783,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 5746,
									"end": 5748,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 5731,
									"end": 5749,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 5731,
									"end": 5749,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 5612,
									"end": 5789,
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "tag",
									"source": 2,
									"value": "44"
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "LOG3",
									"source": 2
								},
								{
									"begin": 6271,
									"end": 7378,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6271,
									"end": 7378,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6271,
									"end": 7378,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6271,
									"end": 7378,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 14,
									"end": 191,
									"name": "tag",
									"source": 8,
									"value": "46"
								},
								{
									"begin": 14,
									"end": 191,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 93,
									"end": 106,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 93,
									"end": 106,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 135,
									"end": 166,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 135,
									"end": 166,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 125,
									"end": 167,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 125,
									"end": 167,
									"name": "EQ",
									"source": 8
								},
								{
									"begin": 115,
									"end": 185,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "57"
								},
								{
									"begin": 115,
									"end": 185,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 181,
									"end": 182,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 178,
									"end": 179,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 171,
									"end": 183,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 115,
									"end": 185,
									"name": "tag",
									"source": 8,
									"value": "57"
								},
								{
									"begin": 115,
									"end": 185,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 14,
									"end": 191,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 14,
									"end": 191,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 14,
									"end": 191,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 14,
									"end": 191,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 196,
									"end": 550,
									"name": "tag",
									"source": 8,
									"value": "3"
								},
								{
									"begin": 196,
									"end": 550,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 284,
									"end": 290,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 292,
									"end": 298,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 300,
									"end": 306,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 353,
									"end": 355,
									"name": "PUSH",
									"source": 8,
									"value": "60"
								},
								{
									"begin": 341,
									"end": 350,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 332,
									"end": 339,
									"name": "DUP7",
									"source": 8
								},
								{
									"begin": 328,
									"end": 351,
									"name": "SUB",
									"source": 8
								},
								{
									"begin": 324,
									"end": 356,
									"name": "SLT",
									"source": 8
								},
								{
									"begin": 321,
									"end": 373,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 321,
									"end": 373,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "59"
								},
								{
									"begin": 321,
									"end": 373,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 369,
									"end": 370,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 366,
									"end": 367,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 359,
									"end": 371,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 321,
									"end": 373,
									"name": "tag",
									"source": 8,
									"value": "59"
								},
								{
									"begin": 321,
									"end": 373,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 392,
									"end": 432,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "60"
								},
								{
									"begin": 422,
									"end": 431,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 392,
									"end": 432,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "46"
								},
								{
									"begin": 392,
									"end": 432,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 392,
									"end": 432,
									"name": "tag",
									"source": 8,
									"value": "60"
								},
								{
									"begin": 392,
									"end": 432,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 382,
									"end": 432,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 382,
									"end": 432,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 472,
									"end": 474,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 461,
									"end": 470,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 457,
									"end": 475,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 451,
									"end": 476,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 441,
									"end": 476,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 441,
									"end": 476,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 495,
									"end": 544,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "61"
								},
								{
									"begin": 540,
									"end": 542,
									"name": "PUSH",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 529,
									"end": 538,
									"name": "DUP6",
									"source": 8
								},
								{
									"begin": 525,
									"end": 543,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 495,
									"end": 544,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "46"
								},
								{
									"begin": 495,
									"end": 544,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 495,
									"end": 544,
									"name": "tag",
									"source": 8,
									"value": "61"
								},
								{
									"begin": 495,
									"end": 544,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 485,
									"end": 544,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 485,
									"end": 544,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 196,
									"end": 550,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 196,
									"end": 550,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 196,
									"end": 550,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 196,
									"end": 550,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 196,
									"end": 550,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 196,
									"end": 550,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 555,
									"end": 682,
									"name": "tag",
									"source": 8,
									"value": "47"
								},
								{
									"begin": 555,
									"end": 682,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 616,
									"end": 626,
									"name": "PUSH",
									"source": 8,
									"value": "4E487B71"
								},
								{
									"begin": 611,
									"end": 614,
									"name": "PUSH",
									"source": 8,
									"value": "E0"
								},
								{
									"begin": 607,
									"end": 627,
									"name": "SHL",
									"source": 8
								},
								{
									"begin": 604,
									"end": 605,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 597,
									"end": 628,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 647,
									"end": 651,
									"name": "PUSH",
									"source": 8,
									"value": "41"
								},
								{
									"begin": 644,
									"end": 645,
									"name": "PUSH",
									"source": 8,
									"value": "4"
								},
								{
									"begin": 637,
									"end": 652,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 671,
									"end": 675,
									"name": "PUSH",
									"source": 8,
									"value": "24"
								},
								{
									"begin": 668,
									"end": 669,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 661,
									"end": 676,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 687,
									"end": 1067,
									"name": "tag",
									"source": 8,
									"value": "48"
								},
								{
									"begin": 687,
									"end": 1067,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 766,
									"end": 767,
									"name": "PUSH",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 762,
									"end": 774,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 762,
									"end": 774,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 762,
									"end": 774,
									"name": "SHR",
									"source": 8
								},
								{
									"begin": 762,
									"end": 774,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 809,
									"end": 821,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 809,
									"end": 821,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 809,
									"end": 821,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 830,
									"end": 891,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "64"
								},
								{
									"begin": 830,
									"end": 891,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 884,
									"end": 888,
									"name": "PUSH",
									"source": 8,
									"value": "7F"
								},
								{
									"begin": 876,
									"end": 882,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 872,
									"end": 889,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 862,
									"end": 889,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 862,
									"end": 889,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 830,
									"end": 891,
									"name": "tag",
									"source": 8,
									"value": "64"
								},
								{
									"begin": 830,
									"end": 891,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 937,
									"end": 939,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 929,
									"end": 935,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 926,
									"end": 940,
									"name": "LT",
									"source": 8
								},
								{
									"begin": 906,
									"end": 924,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 903,
									"end": 941,
									"name": "SUB",
									"source": 8
								},
								{
									"begin": 900,
									"end": 1061,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "65"
								},
								{
									"begin": 900,
									"end": 1061,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 983,
									"end": 993,
									"name": "PUSH",
									"source": 8,
									"value": "4E487B71"
								},
								{
									"begin": 978,
									"end": 981,
									"name": "PUSH",
									"source": 8,
									"value": "E0"
								},
								{
									"begin": 974,
									"end": 994,
									"name": "SHL",
									"source": 8
								},
								{
									"begin": 971,
									"end": 972,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 964,
									"end": 995,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 1018,
									"end": 1022,
									"name": "PUSH",
									"source": 8,
									"value": "22"
								},
								{
									"begin": 1015,
									"end": 1016,
									"name": "PUSH",
									"source": 8,
									"value": "4"
								},
								{
									"begin": 1008,
									"end": 1023,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 1046,
									"end": 1050,
									"name": "PUSH",
									"source": 8,
									"value": "24"
								},
								{
									"begin": 1043,
									"end": 1044,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 1036,
									"end": 1051,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 900,
									"end": 1061,
									"name": "tag",
									"source": 8,
									"value": "65"
								},
								{
									"begin": 900,
									"end": 1061,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 900,
									"end": 1061,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 687,
									"end": 1067,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 687,
									"end": 1067,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 687,
									"end": 1067,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 687,
									"end": 1067,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 1198,
									"end": 1716,
									"name": "tag",
									"source": 8,
									"value": "50"
								},
								{
									"begin": 1198,
									"end": 1716,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1300,
									"end": 1302,
									"name": "PUSH",
									"source": 8,
									"value": "1F"
								},
								{
									"begin": 1295,
									"end": 1298,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 1292,
									"end": 1303,
									"name": "GT",
									"source": 8
								},
								{
									"begin": 1289,
									"end": 1710,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 1289,
									"end": 1710,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "68"
								},
								{
									"begin": 1289,
									"end": 1710,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 1336,
									"end": 1341,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 1333,
									"end": 1334,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 1326,
									"end": 1342,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 1380,
									"end": 1384,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 1377,
									"end": 1378,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 1367,
									"end": 1385,
									"name": "KECCAK256",
									"source": 8
								},
								{
									"begin": 1450,
									"end": 1452,
									"name": "PUSH",
									"source": 8,
									"value": "1F"
								},
								{
									"begin": 1438,
									"end": 1448,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 1434,
									"end": 1453,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 1431,
									"end": 1432,
									"name": "PUSH",
									"source": 8,
									"value": "5"
								},
								{
									"begin": 1427,
									"end": 1454,
									"name": "SHR",
									"source": 8
								},
								{
									"begin": 1421,
									"end": 1425,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 1417,
									"end": 1455,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 1486,
									"end": 1490,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 1474,
									"end": 1484,
									"name": "DUP6",
									"source": 8
								},
								{
									"begin": 1471,
									"end": 1491,
									"name": "LT",
									"source": 8
								},
								{
									"begin": 1468,
									"end": 1515,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 1468,
									"end": 1515,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "69"
								},
								{
									"begin": 1468,
									"end": 1515,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1509,
									"end": 1513,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 1468,
									"end": 1515,
									"name": "tag",
									"source": 8,
									"value": "69"
								},
								{
									"begin": 1468,
									"end": 1515,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1564,
									"end": 1566,
									"name": "PUSH",
									"source": 8,
									"value": "1F"
								},
								{
									"begin": 1559,
									"end": 1562,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 1555,
									"end": 1567,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 1552,
									"end": 1553,
									"name": "PUSH",
									"source": 8,
									"value": "5"
								},
								{
									"begin": 1548,
									"end": 1568,
									"name": "SHR",
									"source": 8
								},
								{
									"begin": 1542,
									"end": 1546,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 1538,
									"end": 1569,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 1528,
									"end": 1569,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 1528,
									"end": 1569,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1619,
									"end": 1700,
									"name": "tag",
									"source": 8,
									"value": "70"
								},
								{
									"begin": 1619,
									"end": 1700,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1637,
									"end": 1639,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 1630,
									"end": 1635,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 1627,
									"end": 1640,
									"name": "LT",
									"source": 8
								},
								{
									"begin": 1619,
									"end": 1700,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 1619,
									"end": 1700,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "72"
								},
								{
									"begin": 1619,
									"end": 1700,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 1696,
									"end": 1697,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 1682,
									"end": 1698,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 1682,
									"end": 1698,
									"name": "SSTORE",
									"source": 8
								},
								{
									"begin": 1663,
									"end": 1664,
									"name": "PUSH",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 1652,
									"end": 1665,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 1619,
									"end": 1700,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "70"
								},
								{
									"begin": 1619,
									"end": 1700,
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 1619,
									"end": 1700,
									"name": "tag",
									"source": 8,
									"value": "72"
								},
								{
									"begin": 1619,
									"end": 1700,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1623,
									"end": 1626,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1623,
									"end": 1626,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1289,
									"end": 1710,
									"name": "tag",
									"source": 8,
									"value": "68"
								},
								{
									"begin": 1289,
									"end": 1710,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1198,
									"end": 1716,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1198,
									"end": 1716,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1198,
									"end": 1716,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1198,
									"end": 1716,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 1892,
									"end": 3237,
									"name": "tag",
									"source": 8,
									"value": "9"
								},
								{
									"begin": 1892,
									"end": 3237,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 2012,
									"end": 2022,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 2012,
									"end": 2022,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 2034,
									"end": 2064,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 2034,
									"end": 2064,
									"name": "GT",
									"source": 8
								},
								{
									"begin": 2031,
									"end": 2087,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 2031,
									"end": 2087,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "76"
								},
								{
									"begin": 2031,
									"end": 2087,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 2067,
									"end": 2085,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "76"
								},
								{
									"begin": 2067,
									"end": 2085,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "47"
								},
								{
									"begin": 2067,
									"end": 2085,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 2067,
									"end": 2085,
									"name": "tag",
									"source": 8,
									"value": "76"
								},
								{
									"begin": 2067,
									"end": 2085,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 2096,
									"end": 2193,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "77"
								},
								{
									"begin": 2186,
									"end": 2192,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 2146,
									"end": 2184,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "78"
								},
								{
									"begin": 2178,
									"end": 2182,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 2172,
									"end": 2183,
									"name": "SLOAD",
									"source": 8
								},
								{
									"begin": 2146,
									"end": 2184,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "48"
								},
								{
									"begin": 2146,
									"end": 2184,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 2146,
									"end": 2184,
									"name": "tag",
									"source": 8,
									"value": "78"
								},
								{
									"begin": 2146,
									"end": 2184,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 2140,
									"end": 2144,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 2096,
									"end": 2193,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "50"
								},
								{
									"begin": 2096,
									"end": 2193,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 2096,
									"end": 2193,
									"name": "tag",
									"source": 8,
									"value": "77"
								},
								{
									"begin": 2096,
									"end": 2193,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 2248,
									"end": 2252,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 2248,
									"end": 2252,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 2305,
									"end": 2307,
									"name": "PUSH",
									"source": 8,
									"value": "1F"
								},
								{
									"begin": 2294,
									"end": 2308,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 2294,
									"end": 2308,
									"name": "GT",
									"source": 8
								},
								{
									"begin": 2322,
									"end": 2323,
									"name": "PUSH",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 2317,
									"end": 2980,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 2317,
									"end": 2980,
									"name": "EQ",
									"source": 8
								},
								{
									"begin": 2317,
									"end": 2980,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "80"
								},
								{
									"begin": 2317,
									"end": 2980,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 3024,
									"end": 3025,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 3041,
									"end": 3047,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 3038,
									"end": 3127,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 3038,
									"end": 3127,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "81"
								},
								{
									"begin": 3038,
									"end": 3127,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 3093,
									"end": 3112,
									"name": "DUP6",
									"source": 8
								},
								{
									"begin": 3093,
									"end": 3112,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 3093,
									"end": 3112,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 3087,
									"end": 3113,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 3038,
									"end": 3127,
									"name": "tag",
									"source": 8,
									"value": "81"
								},
								{
									"begin": 3038,
									"end": 3127,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 1849,
									"end": 1850,
									"name": "PUSH",
									"source": 8,
									"value": "3"
								},
								{
									"begin": 1845,
									"end": 1856,
									"name": "DUP7",
									"source": 8
								},
								{
									"begin": 1845,
									"end": 1856,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 1845,
									"end": 1856,
									"name": "SHL",
									"source": 8
								},
								{
									"begin": 1841,
									"end": 1865,
									"name": "SHR",
									"source": 8
								},
								{
									"begin": 1837,
									"end": 1866,
									"name": "NOT",
									"source": 8
								},
								{
									"begin": 1827,
									"end": 1867,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 1873,
									"end": 1874,
									"name": "PUSH",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 1869,
									"end": 1880,
									"name": "DUP6",
									"source": 8
								},
								{
									"begin": 1869,
									"end": 1880,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 1869,
									"end": 1880,
									"name": "SHL",
									"source": 8
								},
								{
									"begin": 1824,
									"end": 1881,
									"name": "OR",
									"source": 8
								},
								{
									"begin": 3140,
									"end": 3221,
									"name": "DUP6",
									"source": 8
								},
								{
									"begin": 3140,
									"end": 3221,
									"name": "SSTORE",
									"source": 8
								},
								{
									"begin": 2287,
									"end": 3231,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "79"
								},
								{
									"begin": 2287,
									"end": 3231,
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 2317,
									"end": 2980,
									"name": "tag",
									"source": 8,
									"value": "80"
								},
								{
									"begin": 2317,
									"end": 2980,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1145,
									"end": 1146,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 1138,
									"end": 1152,
									"name": "DUP6",
									"source": 8
								},
								{
									"begin": 1138,
									"end": 1152,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 1138,
									"end": 1152,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 1182,
									"end": 1186,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 1169,
									"end": 1187,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 1169,
									"end": 1187,
									"name": "KECCAK256",
									"source": 8
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1F"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 2353,
									"end": 2373,
									"name": "DUP7",
									"source": 8
								},
								{
									"begin": 2353,
									"end": 2373,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 2353,
									"end": 2373,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 2471,
									"end": 2707,
									"name": "tag",
									"source": 8,
									"value": "84"
								},
								{
									"begin": 2471,
									"end": 2707,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 2485,
									"end": 2492,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 2482,
									"end": 2483,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 2479,
									"end": 2493,
									"name": "LT",
									"source": 8
								},
								{
									"begin": 2471,
									"end": 2707,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 2471,
									"end": 2707,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "86"
								},
								{
									"begin": 2471,
									"end": 2707,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 2574,
									"end": 2593,
									"name": "DUP9",
									"source": 8
								},
								{
									"begin": 2574,
									"end": 2593,
									"name": "DUP7",
									"source": 8
								},
								{
									"begin": 2574,
									"end": 2593,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 2568,
									"end": 2594,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 2553,
									"end": 2595,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 2553,
									"end": 2595,
									"name": "SSTORE",
									"source": 8
								},
								{
									"begin": 2666,
									"end": 2693,
									"name": "SWAP5",
									"source": 8
								},
								{
									"begin": 2666,
									"end": 2693,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 2666,
									"end": 2693,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 2666,
									"end": 2693,
									"name": "SWAP5",
									"source": 8
								},
								{
									"begin": 2634,
									"end": 2635,
									"name": "PUSH",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 2622,
									"end": 2636,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 2622,
									"end": 2636,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 2622,
									"end": 2636,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 2622,
									"end": 2636,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 2501,
									"end": 2520,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 2501,
									"end": 2520,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 2471,
									"end": 2707,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "84"
								},
								{
									"begin": 2471,
									"end": 2707,
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 2471,
									"end": 2707,
									"name": "tag",
									"source": 8,
									"value": "86"
								},
								{
									"begin": 2471,
									"end": 2707,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 2475,
									"end": 2478,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2735,
									"end": 2741,
									"name": "DUP6",
									"source": 8
								},
								{
									"begin": 2726,
									"end": 2733,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 2723,
									"end": 2742,
									"name": "LT",
									"source": 8
								},
								{
									"begin": 2720,
									"end": 2921,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 2720,
									"end": 2921,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "87"
								},
								{
									"begin": 2720,
									"end": 2921,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 2796,
									"end": 2815,
									"name": "DUP8",
									"source": 8
								},
								{
									"begin": 2796,
									"end": 2815,
									"name": "DUP6",
									"source": 8
								},
								{
									"begin": 2796,
									"end": 2815,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 2790,
									"end": 2816,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 2879,
									"end": 2880,
									"name": "PUSH",
									"source": 8,
									"value": "3"
								},
								{
									"begin": 2875,
									"end": 2889,
									"name": "DUP9",
									"source": 8
								},
								{
									"begin": 2875,
									"end": 2889,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 2875,
									"end": 2889,
									"name": "SHL",
									"source": 8
								},
								{
									"begin": 2891,
									"end": 2894,
									"name": "PUSH",
									"source": 8,
									"value": "F8"
								},
								{
									"begin": 2871,
									"end": 2895,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 2867,
									"end": 2904,
									"name": "SHR",
									"source": 8
								},
								{
									"begin": 2863,
									"end": 2905,
									"name": "NOT",
									"source": 8
								},
								{
									"begin": 2848,
									"end": 2906,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 2833,
									"end": 2907,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 2833,
									"end": 2907,
									"name": "SSTORE",
									"source": 8
								},
								{
									"begin": 2720,
									"end": 2921,
									"name": "tag",
									"source": 8,
									"value": "87"
								},
								{
									"begin": 2720,
									"end": 2921,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 2720,
									"end": 2921,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2720,
									"end": 2921,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2967,
									"end": 2968,
									"name": "PUSH",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 2958,
									"end": 2964,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 2955,
									"end": 2956,
									"name": "PUSH",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 2951,
									"end": 2965,
									"name": "SHL",
									"source": 8
								},
								{
									"begin": 2947,
									"end": 2969,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 2941,
									"end": 2945,
									"name": "DUP6",
									"source": 8
								},
								{
									"begin": 2934,
									"end": 2970,
									"name": "SSTORE",
									"source": 8
								},
								{
									"begin": 2287,
									"end": 3231,
									"name": "tag",
									"source": 8,
									"value": "79"
								},
								{
									"begin": 2287,
									"end": 3231,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 2287,
									"end": 3231,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2287,
									"end": 3231,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2287,
									"end": 3231,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2287,
									"end": 3231,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1892,
									"end": 3237,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1892,
									"end": 3237,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1892,
									"end": 3237,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 3450,
									"end": 3577,
									"name": "tag",
									"source": 8,
									"value": "52"
								},
								{
									"begin": 3450,
									"end": 3577,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 3511,
									"end": 3521,
									"name": "PUSH",
									"source": 8,
									"value": "4E487B71"
								},
								{
									"begin": 3506,
									"end": 3509,
									"name": "PUSH",
									"source": 8,
									"value": "E0"
								},
								{
									"begin": 3502,
									"end": 3522,
									"name": "SHL",
									"source": 8
								},
								{
									"begin": 3499,
									"end": 3500,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 3492,
									"end": 3523,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 3542,
									"end": 3546,
									"name": "PUSH",
									"source": 8,
									"value": "11"
								},
								{
									"begin": 3539,
									"end": 3540,
									"name": "PUSH",
									"source": 8,
									"value": "4"
								},
								{
									"begin": 3532,
									"end": 3547,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 3566,
									"end": 3570,
									"name": "PUSH",
									"source": 8,
									"value": "24"
								},
								{
									"begin": 3563,
									"end": 3564,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 3556,
									"end": 3571,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 3582,
									"end": 3998,
									"name": "tag",
									"source": 8,
									"value": "53"
								},
								{
									"begin": 3582,
									"end": 3998,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 3671,
									"end": 3672,
									"name": "PUSH",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 3708,
									"end": 3713,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 3671,
									"end": 3672,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 3722,
									"end": 3992,
									"name": "tag",
									"source": 8,
									"value": "91"
								},
								{
									"begin": 3722,
									"end": 3992,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 3743,
									"end": 3750,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 3733,
									"end": 3741,
									"name": "DUP6",
									"source": 8
								},
								{
									"begin": 3730,
									"end": 3751,
									"name": "GT",
									"source": 8
								},
								{
									"begin": 3722,
									"end": 3992,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 3722,
									"end": 3992,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "93"
								},
								{
									"begin": 3722,
									"end": 3992,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 3802,
									"end": 3806,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 3798,
									"end": 3799,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 3794,
									"end": 3800,
									"name": "NOT",
									"source": 8
								},
								{
									"begin": 3790,
									"end": 3807,
									"name": "DIV",
									"source": 8
								},
								{
									"begin": 3784,
									"end": 3788,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 3781,
									"end": 3808,
									"name": "GT",
									"source": 8
								},
								{
									"begin": 3778,
									"end": 3831,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 3778,
									"end": 3831,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "95"
								},
								{
									"begin": 3778,
									"end": 3831,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 3811,
									"end": 3829,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "95"
								},
								{
									"begin": 3811,
									"end": 3829,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "52"
								},
								{
									"begin": 3811,
									"end": 3829,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 3811,
									"end": 3829,
									"name": "tag",
									"source": 8,
									"value": "95"
								},
								{
									"begin": 3811,
									"end": 3829,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 3861,
									"end": 3868,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 3851,
									"end": 3859,
									"name": "DUP6",
									"source": 8
								},
								{
									"begin": 3847,
									"end": 3869,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 3844,
									"end": 3899,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 3844,
									"end": 3899,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "96"
								},
								{
									"begin": 3844,
									"end": 3899,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 3881,
									"end": 3897,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 3881,
									"end": 3897,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 3881,
									"end": 3897,
									"name": "MUL",
									"source": 8
								},
								{
									"begin": 3881,
									"end": 3897,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 3844,
									"end": 3899,
									"name": "tag",
									"source": 8,
									"value": "96"
								},
								{
									"begin": 3844,
									"end": 3899,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 3960,
									"end": 3982,
									"name": "SWAP4",
									"source": 8
								},
								{
									"begin": 3960,
									"end": 3982,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 3960,
									"end": 3982,
									"name": "SHR",
									"source": 8
								},
								{
									"begin": 3960,
									"end": 3982,
									"name": "SWAP4",
									"source": 8
								},
								{
									"begin": 3920,
									"end": 3935,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 3920,
									"end": 3935,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 3920,
									"end": 3935,
									"name": "MUL",
									"source": 8
								},
								{
									"begin": 3920,
									"end": 3935,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 3722,
									"end": 3992,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "91"
								},
								{
									"begin": 3722,
									"end": 3992,
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 3722,
									"end": 3992,
									"name": "tag",
									"source": 8,
									"value": "93"
								},
								{
									"begin": 3722,
									"end": 3992,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 3726,
									"end": 3729,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 3582,
									"end": 3998,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 3582,
									"end": 3998,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 3582,
									"end": 3998,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 3582,
									"end": 3998,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 3582,
									"end": 3998,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 3582,
									"end": 3998,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 4003,
									"end": 4809,
									"name": "tag",
									"source": 8,
									"value": "54"
								},
								{
									"begin": 4003,
									"end": 4809,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 4052,
									"end": 4057,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 4082,
									"end": 4090,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 4072,
									"end": 4152,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "98"
								},
								{
									"begin": 4072,
									"end": 4152,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 4123,
									"end": 4124,
									"name": "PUSH",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 4137,
									"end": 4142,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "97"
								},
								{
									"begin": 4137,
									"end": 4142,
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 4072,
									"end": 4152,
									"name": "tag",
									"source": 8,
									"value": "98"
								},
								{
									"begin": 4072,
									"end": 4152,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 4171,
									"end": 4175,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 4161,
									"end": 4237,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "99"
								},
								{
									"begin": 4161,
									"end": 4237,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 4208,
									"end": 4209,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 4222,
									"end": 4227,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "97"
								},
								{
									"begin": 4222,
									"end": 4227,
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 4161,
									"end": 4237,
									"name": "tag",
									"source": 8,
									"value": "99"
								},
								{
									"begin": 4161,
									"end": 4237,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 4253,
									"end": 4257,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 4271,
									"end": 4272,
									"name": "PUSH",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 4266,
									"end": 4325,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 4266,
									"end": 4325,
									"name": "EQ",
									"source": 8
								},
								{
									"begin": 4266,
									"end": 4325,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "101"
								},
								{
									"begin": 4266,
									"end": 4325,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 4339,
									"end": 4340,
									"name": "PUSH",
									"source": 8,
									"value": "2"
								},
								{
									"begin": 4334,
									"end": 4464,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 4334,
									"end": 4464,
									"name": "EQ",
									"source": 8
								},
								{
									"begin": 4334,
									"end": 4464,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "102"
								},
								{
									"begin": 4334,
									"end": 4464,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 4246,
									"end": 4464,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "100"
								},
								{
									"begin": 4246,
									"end": 4464,
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 4266,
									"end": 4325,
									"name": "tag",
									"source": 8,
									"value": "101"
								},
								{
									"begin": 4266,
									"end": 4325,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 4296,
									"end": 4297,
									"name": "PUSH",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 4287,
									"end": 4297,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 4287,
									"end": 4297,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 4310,
									"end": 4315,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 4310,
									"end": 4315,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "97"
								},
								{
									"begin": 4310,
									"end": 4315,
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 4334,
									"end": 4464,
									"name": "tag",
									"source": 8,
									"value": "102"
								},
								{
									"begin": 4334,
									"end": 4464,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 4371,
									"end": 4374,
									"name": "PUSH",
									"source": 8,
									"value": "FF"
								},
								{
									"begin": 4361,
									"end": 4369,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 4358,
									"end": 4375,
									"name": "GT",
									"source": 8
								},
								{
									"begin": 4355,
									"end": 4398,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 4355,
									"end": 4398,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "104"
								},
								{
									"begin": 4355,
									"end": 4398,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 4378,
									"end": 4396,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "104"
								},
								{
									"begin": 4378,
									"end": 4396,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "52"
								},
								{
									"begin": 4378,
									"end": 4396,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 4378,
									"end": 4396,
									"name": "tag",
									"source": 8,
									"value": "104"
								},
								{
									"begin": 4378,
									"end": 4396,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 4434,
									"end": 4435,
									"name": "PUSH",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 4420,
									"end": 4436,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 4420,
									"end": 4436,
									"name": "SHL",
									"source": 8
								},
								{
									"begin": 4449,
									"end": 4454,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "97"
								},
								{
									"begin": 4449,
									"end": 4454,
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 4246,
									"end": 4464,
									"name": "tag",
									"source": 8,
									"value": "100"
								},
								{
									"begin": 4246,
									"end": 4464,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 4246,
									"end": 4464,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 4548,
									"end": 4550,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 4538,
									"end": 4546,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 4535,
									"end": 4551,
									"name": "LT",
									"source": 8
								},
								{
									"begin": 4529,
									"end": 4532,
									"name": "PUSH",
									"source": 8,
									"value": "133"
								},
								{
									"begin": 4523,
									"end": 4527,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 4520,
									"end": 4533,
									"name": "LT",
									"source": 8
								},
								{
									"begin": 4516,
									"end": 4552,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 4510,
									"end": 4512,
									"name": "PUSH",
									"source": 8,
									"value": "4E"
								},
								{
									"begin": 4500,
									"end": 4508,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 4497,
									"end": 4513,
									"name": "LT",
									"source": 8
								},
								{
									"begin": 4492,
									"end": 4494,
									"name": "PUSH",
									"source": 8,
									"value": "B"
								},
								{
									"begin": 4486,
									"end": 4490,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 4483,
									"end": 4495,
									"name": "LT",
									"source": 8
								},
								{
									"begin": 4479,
									"end": 4514,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 4476,
									"end": 4553,
									"name": "OR",
									"source": 8
								},
								{
									"begin": 4473,
									"end": 4632,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 4473,
									"end": 4632,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "105"
								},
								{
									"begin": 4473,
									"end": 4632,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 4585,
									"end": 4604,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 4585,
									"end": 4604,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 4585,
									"end": 4604,
									"name": "EXP",
									"source": 8
								},
								{
									"begin": 4617,
									"end": 4622,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "97"
								},
								{
									"begin": 4617,
									"end": 4622,
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 4473,
									"end": 4632,
									"name": "tag",
									"source": 8,
									"value": "105"
								},
								{
									"begin": 4473,
									"end": 4632,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 4664,
									"end": 4698,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "106"
								},
								{
									"begin": 4689,
									"end": 4697,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 4683,
									"end": 4687,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 4664,
									"end": 4698,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "53"
								},
								{
									"begin": 4664,
									"end": 4698,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 4664,
									"end": 4698,
									"name": "tag",
									"source": 8,
									"value": "106"
								},
								{
									"begin": 4664,
									"end": 4698,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 4734,
									"end": 4740,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 4730,
									"end": 4731,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 4726,
									"end": 4732,
									"name": "NOT",
									"source": 8
								},
								{
									"begin": 4722,
									"end": 4741,
									"name": "DIV",
									"source": 8
								},
								{
									"begin": 4713,
									"end": 4720,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 4710,
									"end": 4742,
									"name": "GT",
									"source": 8
								},
								{
									"begin": 4707,
									"end": 4765,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 4707,
									"end": 4765,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "108"
								},
								{
									"begin": 4707,
									"end": 4765,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 4745,
									"end": 4763,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "108"
								},
								{
									"begin": 4745,
									"end": 4763,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "52"
								},
								{
									"begin": 4745,
									"end": 4763,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 4745,
									"end": 4763,
									"name": "tag",
									"source": 8,
									"value": "108"
								},
								{
									"begin": 4745,
									"end": 4763,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 4783,
									"end": 4803,
									"name": "MUL",
									"source": 8
								},
								{
									"begin": 4783,
									"end": 4803,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 4003,
									"end": 4809,
									"name": "tag",
									"source": 8,
									"value": "97"
								},
								{
									"begin": 4003,
									"end": 4809,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 4003,
									"end": 4809,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 4003,
									"end": 4809,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 4003,
									"end": 4809,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 4003,
									"end": 4809,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 4003,
									"end": 4809,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 4814,
									"end": 4954,
									"name": "tag",
									"source": 8,
									"value": "22"
								},
								{
									"begin": 4814,
									"end": 4954,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 4872,
									"end": 4877,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 4901,
									"end": 4948,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "110"
								},
								{
									"begin": 4942,
									"end": 4946,
									"name": "PUSH",
									"source": 8,
									"value": "FF"
								},
								{
									"begin": 4932,
									"end": 4940,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 4928,
									"end": 4947,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 4922,
									"end": 4926,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 4901,
									"end": 4948,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "54"
								},
								{
									"begin": 4901,
									"end": 4948,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 4901,
									"end": 4948,
									"name": "tag",
									"source": 8,
									"value": "110"
								},
								{
									"begin": 4901,
									"end": 4948,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 4892,
									"end": 4948,
									"name": "SWAP4",
									"source": 8
								},
								{
									"begin": 4814,
									"end": 4954,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 4814,
									"end": 4954,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 4959,
									"end": 5127,
									"name": "tag",
									"source": 8,
									"value": "24"
								},
								{
									"begin": 4959,
									"end": 5127,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 5032,
									"end": 5041,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 5032,
									"end": 5041,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 5032,
									"end": 5041,
									"name": "MUL",
									"source": 8
								},
								{
									"begin": 5063,
									"end": 5072,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 5063,
									"end": 5072,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 5080,
									"end": 5095,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 5080,
									"end": 5095,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 5080,
									"end": 5095,
									"name": "DIV",
									"source": 8
								},
								{
									"begin": 5074,
									"end": 5096,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 5074,
									"end": 5096,
									"name": "EQ",
									"source": 8
								},
								{
									"begin": 5060,
									"end": 5097,
									"name": "OR",
									"source": 8
								},
								{
									"begin": 5050,
									"end": 5121,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "97"
								},
								{
									"begin": 5050,
									"end": 5121,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 5101,
									"end": 5119,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "97"
								},
								{
									"begin": 5101,
									"end": 5119,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "52"
								},
								{
									"begin": 5101,
									"end": 5119,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 5132,
									"end": 5257,
									"name": "tag",
									"source": 8,
									"value": "37"
								},
								{
									"begin": 5132,
									"end": 5257,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 5197,
									"end": 5206,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 5197,
									"end": 5206,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 5197,
									"end": 5206,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 5218,
									"end": 5228,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 5218,
									"end": 5228,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 5218,
									"end": 5228,
									"name": "GT",
									"source": 8
								},
								{
									"begin": 5215,
									"end": 5251,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 5215,
									"end": 5251,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "97"
								},
								{
									"begin": 5215,
									"end": 5251,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 5231,
									"end": 5249,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "97"
								},
								{
									"begin": 5231,
									"end": 5249,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "52"
								},
								{
									"begin": 5231,
									"end": 5249,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 5612,
									"end": 5789,
									"name": "tag",
									"source": 8,
									"value": "55"
								},
								{
									"begin": 5612,
									"end": 5789,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 243,
									"end": 1519,
									"name": "PUSH #[$]",
									"source": 7,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 243,
									"end": 1519,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 243,
									"end": 1519,
									"name": "PUSH [$]",
									"source": 7,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 243,
									"end": 1519,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 243,
									"end": 1519,
									"name": "CODECOPY",
									"source": 7
								},
								{
									"begin": 243,
									"end": 1519,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 243,
									"end": 1519,
									"name": "RETURN",
									"source": 7
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122048bf5e24f5d5c9707227112533536fc041cb860ab255d8dd55c55df24f2dff7d64736f6c63430008170033",
									".code": [
										{
											"begin": 243,
											"end": 1519,
											"name": "PUSH",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 243,
											"end": 1519,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 243,
											"end": 1519,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 243,
											"end": 1519,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 243,
											"end": 1519,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 243,
											"end": 1519,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 243,
											"end": 1519,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 243,
											"end": 1519,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 243,
											"end": 1519,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 243,
											"end": 1519,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 243,
											"end": 1519,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 243,
											"end": 1519,
											"name": "tag",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 243,
											"end": 1519,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 243,
											"end": 1519,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 243,
											"end": 1519,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 243,
											"end": 1519,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 243,
											"end": 1519,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 243,
											"end": 1519,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 243,
											"end": 1519,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 243,
											"end": 1519,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 243,
											"end": 1519,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 243,
											"end": 1519,
											"name": "PUSH",
											"source": 7,
											"value": "E0"
										},
										{
											"begin": 243,
											"end": 1519,
											"name": "SHR",
											"source": 7
										},
										{
											"begin": 243,
											"end": 1519,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 243,
											"end": 1519,
											"name": "PUSH",
											"source": 7,
											"value": "715018A6"
										},
										{
											"begin": 243,
											"end": 1519,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 243,
											"end": 1519,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "22"
										},
										{
											"begin": 243,
											"end": 1519,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 243,
											"end": 1519,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 243,
											"end": 1519,
											"name": "PUSH",
											"source": 7,
											"value": "AC3C93CF"
										},
										{
											"begin": 243,
											"end": 1519,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 243,
											"end": 1519,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "23"
										},
										{
											"begin": 243,
											"end": 1519,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 243,
											"end": 1519,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 243,
											"end": 1519,
											"name": "PUSH",
											"source": 7,
											"value": "AC3C93CF"
										},
										{
											"begin": 243,
											"end": 1519,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 243,
											"end": 1519,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "17"
										},
										{
											"begin": 243,
											"end": 1519,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 243,
											"end": 1519,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 243,
											"end": 1519,
											"name": "PUSH",
											"source": 7,
											"value": "BEA1DCF8"
										},
										{
											"begin": 243,
											"end": 1519,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 243,
											"end": 1519,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "18"
										},
										{
											"begin": 243,
											"end": 1519,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 243,
											"end": 1519,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 243,
											"end": 1519,
											"name": "PUSH",
											"source": 7,
											"value": "DD62ED3E"
										},
										{
											"begin": 243,
											"end": 1519,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 243,
											"end": 1519,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "19"
										},
										{
											"begin": 243,
											"end": 1519,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 243,
											"end": 1519,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 243,
											"end": 1519,
											"name": "PUSH",
											"source": 7,
											"value": "EE33BC45"
										},
										{
											"begin": 243,
											"end": 1519,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 243,
											"end": 1519,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 243,
											"end": 1519,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 243,
											"end": 1519,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 243,
											"end": 1519,
											"name": "PUSH",
											"source": 7,
											"value": "F2FDE38B"
										},
										{
											"begin": 243,
											"end": 1519,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 243,
											"end": 1519,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "21"
										},
										{
											"begin": 243,
											"end": 1519,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 243,
											"end": 1519,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 243,
											"end": 1519,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 243,
											"end": 1519,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 243,
											"end": 1519,
											"name": "tag",
											"source": 7,
											"value": "23"
										},
										{
											"begin": 243,
											"end": 1519,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 243,
											"end": 1519,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 243,
											"end": 1519,
											"name": "PUSH",
											"source": 7,
											"value": "715018A6"
										},
										{
											"begin": 243,
											"end": 1519,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 243,
											"end": 1519,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "12"
										},
										{
											"begin": 243,
											"end": 1519,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 243,
											"end": 1519,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 243,
											"end": 1519,
											"name": "PUSH",
											"source": 7,
											"value": "79CC6790"
										},
										{
											"begin": 243,
											"end": 1519,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 243,
											"end": 1519,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "13"
										},
										{
											"begin": 243,
											"end": 1519,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 243,
											"end": 1519,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 243,
											"end": 1519,
											"name": "PUSH",
											"source": 7,
											"value": "8DA5CB5B"
										},
										{
											"begin": 243,
											"end": 1519,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 243,
											"end": 1519,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "14"
										},
										{
											"begin": 243,
											"end": 1519,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 243,
											"end": 1519,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 243,
											"end": 1519,
											"name": "PUSH",
											"source": 7,
											"value": "95D89B41"
										},
										{
											"begin": 243,
											"end": 1519,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 243,
											"end": 1519,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "15"
										},
										{
											"begin": 243,
											"end": 1519,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 243,
											"end": 1519,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 243,
											"end": 1519,
											"name": "PUSH",
											"source": 7,
											"value": "A9059CBB"
										},
										{
											"begin": 243,
											"end": 1519,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 243,
											"end": 1519,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "16"
										},
										{
											"begin": 243,
											"end": 1519,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 243,
											"end": 1519,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 243,
											"end": 1519,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 243,
											"end": 1519,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 243,
											"end": 1519,
											"name": "tag",
											"source": 7,
											"value": "22"
										},
										{
											"begin": 243,
											"end": 1519,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 243,
											"end": 1519,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 243,
											"end": 1519,
											"name": "PUSH",
											"source": 7,
											"value": "2D44FF23"
										},
										{
											"begin": 243,
											"end": 1519,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 243,
											"end": 1519,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 243,
											"end": 1519,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 243,
											"end": 1519,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 243,
											"end": 1519,
											"name": "PUSH",
											"source": 7,
											"value": "2D44FF23"
										},
										{
											"begin": 243,
											"end": 1519,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 243,
											"end": 1519,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "7"
										},
										{
											"begin": 243,
											"end": 1519,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 243,
											"end": 1519,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 243,
											"end": 1519,
											"name": "PUSH",
											"source": 7,
											"value": "313CE567"
										},
										{
											"begin": 243,
											"end": 1519,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 243,
											"end": 1519,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "8"
										},
										{
											"begin": 243,
											"end": 1519,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 243,
											"end": 1519,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 243,
											"end": 1519,
											"name": "PUSH",
											"source": 7,
											"value": "40C10F19"
										},
										{
											"begin": 243,
											"end": 1519,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 243,
											"end": 1519,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "9"
										},
										{
											"begin": 243,
											"end": 1519,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 243,
											"end": 1519,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 243,
											"end": 1519,
											"name": "PUSH",
											"source": 7,
											"value": "42966C68"
										},
										{
											"begin": 243,
											"end": 1519,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 243,
											"end": 1519,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "10"
										},
										{
											"begin": 243,
											"end": 1519,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 243,
											"end": 1519,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 243,
											"end": 1519,
											"name": "PUSH",
											"source": 7,
											"value": "70A08231"
										},
										{
											"begin": 243,
											"end": 1519,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 243,
											"end": 1519,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "11"
										},
										{
											"begin": 243,
											"end": 1519,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 243,
											"end": 1519,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 243,
											"end": 1519,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 243,
											"end": 1519,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 243,
											"end": 1519,
											"name": "tag",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 243,
											"end": 1519,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 243,
											"end": 1519,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 243,
											"end": 1519,
											"name": "PUSH",
											"source": 7,
											"value": "6FDDE03"
										},
										{
											"begin": 243,
											"end": 1519,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 243,
											"end": 1519,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 243,
											"end": 1519,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 243,
											"end": 1519,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 243,
											"end": 1519,
											"name": "PUSH",
											"source": 7,
											"value": "95EA7B3"
										},
										{
											"begin": 243,
											"end": 1519,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 243,
											"end": 1519,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 243,
											"end": 1519,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 243,
											"end": 1519,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 243,
											"end": 1519,
											"name": "PUSH",
											"source": 7,
											"value": "18160DDD"
										},
										{
											"begin": 243,
											"end": 1519,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 243,
											"end": 1519,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "5"
										},
										{
											"begin": 243,
											"end": 1519,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 243,
											"end": 1519,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 243,
											"end": 1519,
											"name": "PUSH",
											"source": 7,
											"value": "23B872DD"
										},
										{
											"begin": 243,
											"end": 1519,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 243,
											"end": 1519,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "6"
										},
										{
											"begin": 243,
											"end": 1519,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 243,
											"end": 1519,
											"name": "tag",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 243,
											"end": 1519,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 243,
											"end": 1519,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 243,
											"end": 1519,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 243,
											"end": 1519,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "tag",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "26"
										},
										{
											"begin": 2074,
											"end": 2163,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "tag",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "27"
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "28"
										},
										{
											"begin": 2074,
											"end": 2163,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "tag",
											"source": 2,
											"value": "27"
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "tag",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "29"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "30"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 4293,
											"end": 4479,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "tag",
											"source": 2,
											"value": "30"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 4293,
											"end": 4479,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "tag",
											"source": 2,
											"value": "29"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1169,
											"end": 1183,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1169,
											"end": 1183,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1162,
											"end": 1184,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1144,
											"end": 1185,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1144,
											"end": 1185,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1132,
											"end": 1134,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1117,
											"end": 1135,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "27"
										},
										{
											"begin": 1004,
											"end": 1191,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "tag",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3222,
											"end": 3234,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 3222,
											"end": 3234,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "tag",
											"source": 2,
											"value": "35"
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1342,
											"end": 1367,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1342,
											"end": 1367,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1342,
											"end": 1367,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1330,
											"end": 1332,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1315,
											"end": 1333,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "27"
										},
										{
											"begin": 1196,
											"end": 1373,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "tag",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "29"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "41"
										},
										{
											"begin": 5039,
											"end": 5283,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "tag",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "42"
										},
										{
											"begin": 5039,
											"end": 5283,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 335,
											"end": 368,
											"name": "tag",
											"source": 7,
											"value": "7"
										},
										{
											"begin": 335,
											"end": 368,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 335,
											"end": 368,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "35"
										},
										{
											"begin": 335,
											"end": 368,
											"name": "PUSH",
											"source": 7,
											"value": "7"
										},
										{
											"begin": 335,
											"end": 368,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 335,
											"end": 368,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 335,
											"end": 368,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 920,
											"end": 1007,
											"name": "tag",
											"source": 7,
											"value": "8"
										},
										{
											"begin": 920,
											"end": 1007,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 920,
											"end": 1007,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 920,
											"end": 1007,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 999,
											"end": 1000,
											"name": "PUSH",
											"source": 7,
											"value": "9"
										},
										{
											"begin": 1853,
											"end": 1889,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1853,
											"end": 1889,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1841,
											"end": 1843,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1826,
											"end": 1844,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 920,
											"end": 1007,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "27"
										},
										{
											"begin": 1711,
											"end": 1895,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 732,
											"end": 914,
											"name": "tag",
											"source": 7,
											"value": "9"
										},
										{
											"begin": 732,
											"end": 914,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 732,
											"end": 914,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "51"
										},
										{
											"begin": 732,
											"end": 914,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "52"
										},
										{
											"begin": 732,
											"end": 914,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 732,
											"end": 914,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 732,
											"end": 914,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "31"
										},
										{
											"begin": 732,
											"end": 914,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 732,
											"end": 914,
											"name": "tag",
											"source": 7,
											"value": "52"
										},
										{
											"begin": 732,
											"end": 914,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 732,
											"end": 914,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "53"
										},
										{
											"begin": 732,
											"end": 914,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 732,
											"end": 914,
											"name": "tag",
											"source": 7,
											"value": "51"
										},
										{
											"begin": 732,
											"end": 914,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 732,
											"end": 914,
											"name": "STOP",
											"source": 7
										},
										{
											"begin": 618,
											"end": 705,
											"name": "tag",
											"source": 4,
											"value": "10"
										},
										{
											"begin": 618,
											"end": 705,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 618,
											"end": 705,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "51"
										},
										{
											"begin": 618,
											"end": 705,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "55"
										},
										{
											"begin": 618,
											"end": 705,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 618,
											"end": 705,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 618,
											"end": 705,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "56"
										},
										{
											"begin": 618,
											"end": 705,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 618,
											"end": 705,
											"name": "tag",
											"source": 4,
											"value": "55"
										},
										{
											"begin": 618,
											"end": 705,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 618,
											"end": 705,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "57"
										},
										{
											"begin": 618,
											"end": 705,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "tag",
											"source": 2,
											"value": "11"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "35"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "59"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 3299,
											"end": 3415,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "tag",
											"source": 2,
											"value": "59"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3364,
											"end": 3371,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 2293,
											"end": 2394,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "tag",
											"source": 4,
											"value": "13"
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "51"
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "66"
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "31"
										},
										{
											"begin": 1021,
											"end": 1179,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "tag",
											"source": 4,
											"value": "66"
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "67"
										},
										{
											"begin": 1021,
											"end": 1179,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2440,
											"end": 2472,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2440,
											"end": 2472,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2440,
											"end": 2472,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2422,
											"end": 2473,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2422,
											"end": 2473,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2410,
											"end": 2412,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2395,
											"end": 2413,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 2276,
											"end": 2479,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "tag",
											"source": 2,
											"value": "15"
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "73"
										},
										{
											"begin": 2276,
											"end": 2369,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1013,
											"end": 1517,
											"name": "tag",
											"source": 7,
											"value": "16"
										},
										{
											"begin": 1013,
											"end": 1517,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1013,
											"end": 1517,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "29"
										},
										{
											"begin": 1013,
											"end": 1517,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "76"
										},
										{
											"begin": 1013,
											"end": 1517,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 1013,
											"end": 1517,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 1013,
											"end": 1517,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "31"
										},
										{
											"begin": 1013,
											"end": 1517,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1013,
											"end": 1517,
											"name": "tag",
											"source": 7,
											"value": "76"
										},
										{
											"begin": 1013,
											"end": 1517,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1013,
											"end": 1517,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "77"
										},
										{
											"begin": 1013,
											"end": 1517,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 413,
											"end": 477,
											"name": "tag",
											"source": 7,
											"value": "17"
										},
										{
											"begin": 413,
											"end": 477,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 413,
											"end": 477,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "35"
										},
										{
											"begin": 413,
											"end": 477,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 413,
											"end": 477,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 413,
											"end": 477,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 413,
											"end": 477,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "81"
										},
										{
											"begin": 413,
											"end": 477,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 413,
											"end": 477,
											"name": "tag",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 413,
											"end": 477,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 413,
											"end": 477,
											"name": "PUSH",
											"source": 7,
											"value": "9"
										},
										{
											"begin": 413,
											"end": 477,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 413,
											"end": 477,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 413,
											"end": 477,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 413,
											"end": 477,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 413,
											"end": 477,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 413,
											"end": 477,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 413,
											"end": 477,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 413,
											"end": 477,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 413,
											"end": 477,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 413,
											"end": 477,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 413,
											"end": 477,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 413,
											"end": 477,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 413,
											"end": 477,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 413,
											"end": 477,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 413,
											"end": 477,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 413,
											"end": 477,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 413,
											"end": 477,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 413,
											"end": 477,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 413,
											"end": 477,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 413,
											"end": 477,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 413,
											"end": 477,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 413,
											"end": 477,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 413,
											"end": 477,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 302,
											"end": 329,
											"name": "tag",
											"source": 7,
											"value": "18"
										},
										{
											"begin": 302,
											"end": 329,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 302,
											"end": 329,
											"name": "PUSH",
											"source": 7,
											"value": "6"
										},
										{
											"begin": 302,
											"end": 329,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 302,
											"end": 329,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "68"
										},
										{
											"begin": 302,
											"end": 329,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 302,
											"end": 329,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 302,
											"end": 329,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 302,
											"end": 329,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "tag",
											"source": 2,
											"value": "19"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "35"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "88"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "81"
										},
										{
											"begin": 3846,
											"end": 3986,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "tag",
											"source": 2,
											"value": "88"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3926,
											"end": 3933,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3963,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 374,
											"end": 406,
											"name": "tag",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 374,
											"end": 406,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 374,
											"end": 406,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "35"
										},
										{
											"begin": 374,
											"end": 406,
											"name": "PUSH",
											"source": 7,
											"value": "8"
										},
										{
											"begin": 374,
											"end": 406,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 374,
											"end": 406,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 374,
											"end": 406,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "tag",
											"source": 2,
											"value": "26"
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2119,
											"end": 2132,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 2151,
											"end": 2156,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "98"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "99"
										},
										{
											"begin": 2144,
											"end": 2156,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "tag",
											"source": 2,
											"value": "98"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "99"
										},
										{
											"begin": 2144,
											"end": 2156,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "tag",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "101"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "102"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "101"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "tag",
											"source": 2,
											"value": "102"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "tag",
											"source": 2,
											"value": "103"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "103"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "tag",
											"source": 2,
											"value": "101"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2163,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "tag",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4366,
											"end": 4370,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 4420,
											"end": 4451,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "107"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4436,
											"end": 4443,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4445,
											"end": 4450,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4420,
											"end": 4428,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "108"
										},
										{
											"begin": 4420,
											"end": 4451,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4420,
											"end": 4451,
											"name": "tag",
											"source": 2,
											"value": "107"
										},
										{
											"begin": 4420,
											"end": 4451,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4468,
											"end": 4472,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 4461,
											"end": 4472,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4461,
											"end": 4472,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4461,
											"end": 4472,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "tag",
											"source": 2,
											"value": "104"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "tag",
											"source": 2,
											"value": "42"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5126,
											"end": 5130,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 5182,
											"end": 5219,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "112"
										},
										{
											"begin": 5198,
											"end": 5202,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 735,
											"end": 745,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5213,
											"end": 5218,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 5182,
											"end": 5197,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "113"
										},
										{
											"begin": 5182,
											"end": 5219,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5182,
											"end": 5219,
											"name": "tag",
											"source": 2,
											"value": "112"
										},
										{
											"begin": 5182,
											"end": 5219,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5229,
											"end": 5255,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "114"
										},
										{
											"begin": 5239,
											"end": 5243,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 5245,
											"end": 5247,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 5249,
											"end": 5254,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 5229,
											"end": 5238,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "115"
										},
										{
											"begin": 5229,
											"end": 5255,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5229,
											"end": 5255,
											"name": "tag",
											"source": 2,
											"value": "114"
										},
										{
											"begin": 5229,
											"end": 5255,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5272,
											"end": 5276,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 5272,
											"end": 5276,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5039,
											"end": 5283,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 732,
											"end": 914,
											"name": "tag",
											"source": 7,
											"value": "53"
										},
										{
											"begin": 732,
											"end": 914,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "118"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "118"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 809,
											"end": 825,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 809,
											"end": 825,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 815,
											"end": 825,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 809,
											"end": 825,
											"modifierDepth": 1,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 801,
											"end": 859,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "121"
										},
										{
											"begin": 801,
											"end": 859,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 801,
											"end": 859,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 801,
											"end": 859,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 801,
											"end": 859,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 801,
											"end": 859,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3336,
											"end": 3338,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 801,
											"end": 859,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 801,
											"end": 859,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 801,
											"end": 859,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3318,
											"end": 3339,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3375,
											"end": 3377,
											"name": "PUSH",
											"source": 8,
											"value": "1D"
										},
										{
											"begin": 3355,
											"end": 3373,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 3355,
											"end": 3373,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3355,
											"end": 3373,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3348,
											"end": 3378,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3414,
											"end": 3445,
											"name": "PUSH",
											"source": 8,
											"value": "4D696E74696E6720616C6C6F776564206F6E6C7920746F206F776E6572000000"
										},
										{
											"begin": 3394,
											"end": 3412,
											"name": "PUSH",
											"source": 8,
											"value": "44"
										},
										{
											"begin": 3394,
											"end": 3412,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3394,
											"end": 3412,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3387,
											"end": 3446,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3463,
											"end": 3481,
											"name": "PUSH",
											"source": 8,
											"value": "64"
										},
										{
											"begin": 3463,
											"end": 3481,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 801,
											"end": 859,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "122"
										},
										{
											"begin": 801,
											"end": 859,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 801,
											"end": 859,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 801,
											"end": 859,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 801,
											"end": 859,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 801,
											"end": 859,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 801,
											"end": 859,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 801,
											"end": 859,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 801,
											"end": 859,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 801,
											"end": 859,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "121"
										},
										{
											"begin": 801,
											"end": 859,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 869,
											"end": 907,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "124"
										},
										{
											"begin": 875,
											"end": 877,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 888,
											"end": 905,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "126"
										},
										{
											"begin": 999,
											"end": 1000,
											"name": "PUSH",
											"source": 7,
											"value": "9"
										},
										{
											"begin": 888,
											"end": 890,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "A"
										},
										{
											"begin": 888,
											"end": 905,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "127"
										},
										{
											"begin": 888,
											"end": 905,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 888,
											"end": 905,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "126"
										},
										{
											"begin": 888,
											"end": 905,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 878,
											"end": 906,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "128"
										},
										{
											"begin": 878,
											"end": 906,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 878,
											"end": 884,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 878,
											"end": 906,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "129"
										},
										{
											"begin": 878,
											"end": 906,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 878,
											"end": 906,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "128"
										},
										{
											"begin": 878,
											"end": 906,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 869,
											"end": 874,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "130"
										},
										{
											"begin": 869,
											"end": 907,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 869,
											"end": 907,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "124"
										},
										{
											"begin": 869,
											"end": 907,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 732,
											"end": 914,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 732,
											"end": 914,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 732,
											"end": 914,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 618,
											"end": 705,
											"name": "tag",
											"source": 4,
											"value": "57"
										},
										{
											"begin": 618,
											"end": 705,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 672,
											"end": 698,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "132"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 692,
											"end": 697,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 672,
											"end": 677,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "134"
										},
										{
											"begin": 672,
											"end": 698,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 672,
											"end": 698,
											"name": "tag",
											"source": 4,
											"value": "132"
										},
										{
											"begin": 672,
											"end": 698,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 618,
											"end": 705,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 618,
											"end": 705,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "137"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "137"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "139"
										},
										{
											"begin": 2384,
											"end": 2385,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2357,
											"end": 2375,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "140"
										},
										{
											"begin": 2357,
											"end": 2387,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "139"
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "tag",
											"source": 4,
											"value": "67"
										},
										{
											"begin": 1021,
											"end": 1179,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1096,
											"end": 1141,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "142"
										},
										{
											"begin": 1112,
											"end": 1119,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 1135,
											"end": 1140,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1096,
											"end": 1111,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "113"
										},
										{
											"begin": 1096,
											"end": 1141,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1096,
											"end": 1141,
											"name": "tag",
											"source": 4,
											"value": "142"
										},
										{
											"begin": 1096,
											"end": 1141,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1151,
											"end": 1172,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "124"
										},
										{
											"begin": 1157,
											"end": 1164,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1166,
											"end": 1171,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1151,
											"end": 1156,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "134"
										},
										{
											"begin": 1151,
											"end": 1172,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "tag",
											"source": 2,
											"value": "73"
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2323,
											"end": 2336,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 2355,
											"end": 2362,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "98"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "99"
										},
										{
											"begin": 2348,
											"end": 2362,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1013,
											"end": 1517,
											"name": "tag",
											"source": 7,
											"value": "77"
										},
										{
											"begin": 1013,
											"end": 1517,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1087,
											"end": 1091,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1136,
											"end": 1139,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 1125,
											"end": 1134,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "153"
										},
										{
											"begin": 1129,
											"end": 1134,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 1125,
											"end": 1126,
											"name": "PUSH",
											"source": 7,
											"value": "5"
										},
										{
											"begin": 1125,
											"end": 1134,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "129"
										},
										{
											"begin": 1125,
											"end": 1134,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1125,
											"end": 1134,
											"name": "tag",
											"source": 7,
											"value": "153"
										},
										{
											"begin": 1125,
											"end": 1134,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1124,
											"end": 1139,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "154"
										},
										{
											"begin": 1124,
											"end": 1139,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1124,
											"end": 1139,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1124,
											"end": 1139,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "155"
										},
										{
											"begin": 1124,
											"end": 1139,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1124,
											"end": 1139,
											"name": "tag",
											"source": 7,
											"value": "154"
										},
										{
											"begin": 1124,
											"end": 1139,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1103,
											"end": 1121,
											"name": "PUSH",
											"source": 7,
											"value": "7"
										},
										{
											"begin": 1103,
											"end": 1139,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1103,
											"end": 1139,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1103,
											"end": 1139,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 1149,
											"end": 1168,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1149,
											"end": 1168,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1171,
											"end": 1197,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "156"
										},
										{
											"begin": 1171,
											"end": 1197,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1171,
											"end": 1176,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 1171,
											"end": 1197,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "157"
										},
										{
											"begin": 1171,
											"end": 1197,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1171,
											"end": 1197,
											"name": "tag",
											"source": 7,
											"value": "156"
										},
										{
											"begin": 1171,
											"end": 1197,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1149,
											"end": 1197,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1149,
											"end": 1197,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1247,
											"end": 1265,
											"name": "PUSH",
											"source": 7,
											"value": "7"
										},
										{
											"begin": 1247,
											"end": 1265,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 1227,
											"end": 1244,
											"name": "PUSH",
											"source": 7,
											"value": "8"
										},
										{
											"begin": 1227,
											"end": 1244,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 1227,
											"end": 1265,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "158"
										},
										{
											"begin": 1227,
											"end": 1265,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1227,
											"end": 1265,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1227,
											"end": 1265,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "159"
										},
										{
											"begin": 1227,
											"end": 1265,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1227,
											"end": 1265,
											"name": "tag",
											"source": 7,
											"value": "158"
										},
										{
											"begin": 1227,
											"end": 1265,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1207,
											"end": 1224,
											"name": "PUSH",
											"source": 7,
											"value": "8"
										},
										{
											"begin": 1207,
											"end": 1265,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 1299,
											"end": 1311,
											"name": "PUSH",
											"source": 7,
											"value": "6"
										},
										{
											"begin": 1299,
											"end": 1311,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 1357,
											"end": 1375,
											"name": "PUSH",
											"source": 7,
											"value": "7"
										},
										{
											"begin": 1357,
											"end": 1375,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1299,
											"end": 1311,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1299,
											"end": 1311,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1299,
											"end": 1311,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1299,
											"end": 1311,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1321,
											"end": 1376,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "160"
										},
										{
											"begin": 1321,
											"end": 1376,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1331,
											"end": 1341,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 1331,
											"end": 1341,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1299,
											"end": 1311,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 1299,
											"end": 1311,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1321,
											"end": 1330,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "115"
										},
										{
											"begin": 1321,
											"end": 1376,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1321,
											"end": 1376,
											"name": "tag",
											"source": 7,
											"value": "160"
										},
										{
											"begin": 1321,
											"end": 1376,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1386,
											"end": 1427,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "161"
										},
										{
											"begin": 1396,
											"end": 1406,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 1408,
											"end": 1410,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 1412,
											"end": 1426,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 1386,
											"end": 1395,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "115"
										},
										{
											"begin": 1386,
											"end": 1427,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1386,
											"end": 1427,
											"name": "tag",
											"source": 7,
											"value": "161"
										},
										{
											"begin": 1386,
											"end": 1427,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1470,
											"end": 1488,
											"name": "PUSH",
											"source": 7,
											"value": "7"
										},
										{
											"begin": 1470,
											"end": 1488,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1437,
											"end": 1462,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1437,
											"end": 1462,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 1437,
											"end": 1462,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1437,
											"end": 1462,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1437,
											"end": 1462,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1437,
											"end": 1462,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1437,
											"end": 1462,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1437,
											"end": 1447,
											"name": "PUSH",
											"source": 7,
											"value": "9"
										},
										{
											"begin": 1437,
											"end": 1462,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1437,
											"end": 1462,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1437,
											"end": 1462,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1437,
											"end": 1462,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1437,
											"end": 1462,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1437,
											"end": 1462,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1437,
											"end": 1462,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 1437,
											"end": 1462,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 1437,
											"end": 1466,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 1437,
											"end": 1466,
											"name": "DUP11",
											"source": 7
										},
										{
											"begin": 1437,
											"end": 1466,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1437,
											"end": 1466,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 1437,
											"end": 1466,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1437,
											"end": 1466,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 1437,
											"end": 1466,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1437,
											"end": 1466,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1437,
											"end": 1466,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1437,
											"end": 1466,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1437,
											"end": 1466,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 1437,
											"end": 1488,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1437,
											"end": 1488,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 1437,
											"end": 1466,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1437,
											"end": 1466,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1437,
											"end": 1462,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1437,
											"end": 1488,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "162"
										},
										{
											"begin": 1437,
											"end": 1488,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1470,
											"end": 1488,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 1470,
											"end": 1488,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1437,
											"end": 1488,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "159"
										},
										{
											"begin": 1437,
											"end": 1488,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1437,
											"end": 1488,
											"name": "tag",
											"source": 7,
											"value": "162"
										},
										{
											"begin": 1437,
											"end": 1488,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1437,
											"end": 1488,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1437,
											"end": 1488,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1437,
											"end": 1488,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1505,
											"end": 1509,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 1505,
											"end": 1509,
											"name": "SWAP7",
											"source": 7
										},
										{
											"begin": 1013,
											"end": 1517,
											"name": "SWAP6",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1013,
											"end": 1517,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "165"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "165"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2627,
											"end": 2649,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "167"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2672,
											"end": 2703,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1E4FBDF7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2672,
											"end": 2703,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2700,
											"end": 2701,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2672,
											"end": 2703,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2422,
											"end": 2473,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2395,
											"end": 2413,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 2395,
											"end": 2413,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 2276,
											"end": 2479,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "167"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 2742,
											"end": 2750,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2741,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "140"
										},
										{
											"begin": 2723,
											"end": 2751,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 8989,
											"end": 9117,
											"name": "tag",
											"source": 2,
											"value": "108"
										},
										{
											"begin": 8989,
											"end": 9117,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9073,
											"end": 9110,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "172"
										},
										{
											"begin": 9082,
											"end": 9087,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 9089,
											"end": 9096,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 9098,
											"end": 9103,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 9105,
											"end": 9109,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 9073,
											"end": 9081,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "173"
										},
										{
											"begin": 9073,
											"end": 9110,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 9073,
											"end": 9110,
											"name": "tag",
											"source": 2,
											"value": "172"
										},
										{
											"begin": 9073,
											"end": 9110,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8989,
											"end": 9117,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8989,
											"end": 9117,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8989,
											"end": 9117,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8989,
											"end": 9117,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 10663,
											"end": 11140,
											"name": "tag",
											"source": 2,
											"value": "113"
										},
										{
											"begin": 10663,
											"end": 11140,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10762,
											"end": 10786,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3963,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 10828,
											"end": 10865,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10828,
											"end": 10865,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 10824,
											"end": 11134,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "180"
										},
										{
											"begin": 10824,
											"end": 11134,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 10904,
											"end": 10909,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10885,
											"end": 10901,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10885,
											"end": 10909,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 10881,
											"end": 11011,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 10881,
											"end": 11011,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "177"
										},
										{
											"begin": 10881,
											"end": 11011,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "7DC7A0D9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5879,
											"end": 5911,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 5879,
											"end": 5911,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5861,
											"end": 5912,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 5928,
											"end": 5946,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 5928,
											"end": 5946,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5928,
											"end": 5946,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5921,
											"end": 5955,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5921,
											"end": 5955,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5921,
											"end": 5955,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 5971,
											"end": 5989,
											"name": "PUSH",
											"source": 8,
											"value": "44"
										},
										{
											"begin": 5971,
											"end": 5989,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5971,
											"end": 5989,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5964,
											"end": 5998,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 5964,
											"end": 5998,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5964,
											"end": 5998,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 5834,
											"end": 5852,
											"name": "PUSH",
											"source": 8,
											"value": "64"
										},
										{
											"begin": 5834,
											"end": 5852,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "122"
										},
										{
											"begin": 5659,
											"end": 6004,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 10881,
											"end": 11011,
											"name": "tag",
											"source": 2,
											"value": "177"
										},
										{
											"begin": 10881,
											"end": 11011,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 11052,
											"end": 11109,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "180"
										},
										{
											"begin": 11061,
											"end": 11066,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 11068,
											"end": 11075,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 11096,
											"end": 11101,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 11077,
											"end": 11093,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 11077,
											"end": 11101,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 11103,
											"end": 11108,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 11052,
											"end": 11060,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "173"
										},
										{
											"begin": 11052,
											"end": 11109,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 11052,
											"end": 11109,
											"name": "tag",
											"source": 2,
											"value": "180"
										},
										{
											"begin": 11052,
											"end": 11109,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10752,
											"end": 11140,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10663,
											"end": 11140,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10663,
											"end": 11140,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10663,
											"end": 11140,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10663,
											"end": 11140,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5656,
											"end": 5956,
											"name": "tag",
											"source": 2,
											"value": "115"
										},
										{
											"begin": 5656,
											"end": 5956,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5739,
											"end": 5757,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5739,
											"end": 5757,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5735,
											"end": 5821,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "182"
										},
										{
											"begin": 5735,
											"end": 5821,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4B637E8F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5807,
											"end": 5808,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2422,
											"end": 2473,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2395,
											"end": 2413,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 2395,
											"end": 2413,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "122"
										},
										{
											"begin": 2276,
											"end": 2479,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5735,
											"end": 5821,
											"name": "tag",
											"source": 2,
											"value": "182"
										},
										{
											"begin": 5735,
											"end": 5821,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5834,
											"end": 5850,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5834,
											"end": 5850,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5830,
											"end": 5916,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "184"
										},
										{
											"begin": 5830,
											"end": 5916,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "EC442F05"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5902,
											"end": 5903,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2422,
											"end": 2473,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2395,
											"end": 2413,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 2395,
											"end": 2413,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "122"
										},
										{
											"begin": 2276,
											"end": 2479,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5830,
											"end": 5916,
											"name": "tag",
											"source": 2,
											"value": "184"
										},
										{
											"begin": 5830,
											"end": 5916,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5925,
											"end": 5949,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "172"
										},
										{
											"begin": 5933,
											"end": 5937,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5939,
											"end": 5941,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5943,
											"end": 5948,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5925,
											"end": 5932,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "187"
										},
										{
											"begin": 5925,
											"end": 5949,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "tag",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "139"
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "118CDAA7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2422,
											"end": 2473,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2395,
											"end": 2413,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 2395,
											"end": 2413,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 2276,
											"end": 2479,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7721,
											"end": 7929,
											"name": "tag",
											"source": 2,
											"value": "130"
										},
										{
											"begin": 7721,
											"end": 7929,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7791,
											"end": 7812,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7791,
											"end": 7812,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7787,
											"end": 7878,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "195"
										},
										{
											"begin": 7787,
											"end": 7878,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "EC442F05"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7864,
											"end": 7865,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2422,
											"end": 2473,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2395,
											"end": 2413,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 2395,
											"end": 2413,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "122"
										},
										{
											"begin": 2276,
											"end": 2479,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7787,
											"end": 7878,
											"name": "tag",
											"source": 2,
											"value": "195"
										},
										{
											"begin": 7787,
											"end": 7878,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7887,
											"end": 7922,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "124"
										},
										{
											"begin": 7903,
											"end": 7904,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7907,
											"end": 7914,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7916,
											"end": 7921,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7887,
											"end": 7894,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "187"
										},
										{
											"begin": 7887,
											"end": 7922,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 8247,
											"end": 8453,
											"name": "tag",
											"source": 2,
											"value": "134"
										},
										{
											"begin": 8247,
											"end": 8453,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8317,
											"end": 8338,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 8317,
											"end": 8338,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 8313,
											"end": 8402,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "199"
										},
										{
											"begin": 8313,
											"end": 8402,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4B637E8F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 8388,
											"end": 8389,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2422,
											"end": 2473,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2395,
											"end": 2413,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 2395,
											"end": 2413,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "122"
										},
										{
											"begin": 2276,
											"end": 2479,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8313,
											"end": 8402,
											"name": "tag",
											"source": 2,
											"value": "199"
										},
										{
											"begin": 8313,
											"end": 8402,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8411,
											"end": 8446,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "124"
										},
										{
											"begin": 8419,
											"end": 8426,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 8436,
											"end": 8437,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 8440,
											"end": 8445,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 8411,
											"end": 8418,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "187"
										},
										{
											"begin": 8411,
											"end": 8446,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "tag",
											"source": 0,
											"value": "140"
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3001,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2985,
											"end": 3001,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 2975,
											"end": 3099,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 9949,
											"end": 10381,
											"name": "tag",
											"source": 2,
											"value": "173"
										},
										{
											"begin": 9949,
											"end": 10381,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10061,
											"end": 10080,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 10061,
											"end": 10080,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10057,
											"end": 10146,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "204"
										},
										{
											"begin": 10057,
											"end": 10146,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E602DF05"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10132,
											"end": 10133,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2422,
											"end": 2473,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2395,
											"end": 2413,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 2395,
											"end": 2413,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "122"
										},
										{
											"begin": 2276,
											"end": 2479,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 10057,
											"end": 10146,
											"name": "tag",
											"source": 2,
											"value": "204"
										},
										{
											"begin": 10057,
											"end": 10146,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10159,
											"end": 10180,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 10159,
											"end": 10180,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10155,
											"end": 10245,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "206"
										},
										{
											"begin": 10155,
											"end": 10245,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4A1406B1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10231,
											"end": 10232,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2422,
											"end": 2473,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2395,
											"end": 2413,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 2395,
											"end": 2413,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "122"
										},
										{
											"begin": 2276,
											"end": 2479,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 10155,
											"end": 10245,
											"name": "tag",
											"source": 2,
											"value": "206"
										},
										{
											"begin": 10155,
											"end": 10245,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10265,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10289,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10289,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10289,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 10299,
											"end": 10375,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10299,
											"end": 10375,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 10299,
											"end": 10375,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "180"
										},
										{
											"begin": 10299,
											"end": 10375,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 10349,
											"end": 10356,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10342,
											"end": 10347,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "PUSH",
											"source": 2,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 10358,
											"end": 10363,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "209"
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1342,
											"end": 1367,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1342,
											"end": 1367,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1330,
											"end": 1332,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1315,
											"end": 1333,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1315,
											"end": 1333,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1196,
											"end": 1373,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "tag",
											"source": 2,
											"value": "209"
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "LOG3",
											"source": 2
										},
										{
											"begin": 9949,
											"end": 10381,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9949,
											"end": 10381,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9949,
											"end": 10381,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9949,
											"end": 10381,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9949,
											"end": 10381,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6271,
											"end": 7378,
											"name": "tag",
											"source": 2,
											"value": "187"
										},
										{
											"begin": 6271,
											"end": 7378,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6360,
											"end": 6378,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6360,
											"end": 6378,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6356,
											"end": 6896,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "211"
										},
										{
											"begin": 6356,
											"end": 6896,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 6512,
											"end": 6517,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6496,
											"end": 6508,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 6496,
											"end": 6508,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "212"
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "159"
										},
										{
											"begin": 6496,
											"end": 6517,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "tag",
											"source": 2,
											"value": "212"
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6356,
											"end": 6896,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "213"
										},
										{
											"begin": 6356,
											"end": 6896,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6356,
											"end": 6896,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6356,
											"end": 6896,
											"name": "tag",
											"source": 2,
											"value": "211"
										},
										{
											"begin": 6356,
											"end": 6896,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6548,
											"end": 6567,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 6603,
											"end": 6622,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6603,
											"end": 6622,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6603,
											"end": 6622,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 6599,
											"end": 6714,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 6599,
											"end": 6714,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "214"
										},
										{
											"begin": 6599,
											"end": 6714,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "391434E3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5879,
											"end": 5911,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 5879,
											"end": 5911,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5861,
											"end": 5912,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 5928,
											"end": 5946,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 5928,
											"end": 5946,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5928,
											"end": 5946,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5921,
											"end": 5955,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5921,
											"end": 5955,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5921,
											"end": 5955,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 5971,
											"end": 5989,
											"name": "PUSH",
											"source": 8,
											"value": "44"
										},
										{
											"begin": 5971,
											"end": 5989,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5971,
											"end": 5989,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5964,
											"end": 5998,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 5964,
											"end": 5998,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5964,
											"end": 5998,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 5834,
											"end": 5852,
											"name": "PUSH",
											"source": 8,
											"value": "64"
										},
										{
											"begin": 5834,
											"end": 5852,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "122"
										},
										{
											"begin": 5659,
											"end": 6004,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6599,
											"end": 6714,
											"name": "tag",
											"source": 2,
											"value": "214"
										},
										{
											"begin": 6599,
											"end": 6714,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6834,
											"end": 6843,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 6852,
											"end": 6871,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6852,
											"end": 6871,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6852,
											"end": 6871,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6852,
											"end": 6871,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 6834,
											"end": 6871,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6834,
											"end": 6871,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 6356,
											"end": 6896,
											"name": "tag",
											"source": 2,
											"value": "213"
										},
										{
											"begin": 6356,
											"end": 6896,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6910,
											"end": 6926,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6910,
											"end": 6926,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6906,
											"end": 7331,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "216"
										},
										{
											"begin": 6906,
											"end": 7331,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 7073,
											"end": 7085,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 6906,
											"end": 7331,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "217"
										},
										{
											"begin": 6906,
											"end": 7331,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6906,
											"end": 7331,
											"name": "tag",
											"source": 2,
											"value": "216"
										},
										{
											"begin": 6906,
											"end": 7331,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7293,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 6906,
											"end": 7331,
											"name": "tag",
											"source": 2,
											"value": "217"
										},
										{
											"begin": 6906,
											"end": 7331,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7361,
											"end": 7363,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7355,
											"end": 7359,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "PUSH",
											"source": 2,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 7365,
											"end": 7370,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "218"
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1342,
											"end": 1367,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1342,
											"end": 1367,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1330,
											"end": 1332,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1315,
											"end": 1333,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1315,
											"end": 1333,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1196,
											"end": 1373,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "tag",
											"source": 2,
											"value": "218"
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "LOG3",
											"source": 2
										},
										{
											"begin": 6271,
											"end": 7378,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6271,
											"end": 7378,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6271,
											"end": 7378,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6271,
											"end": 7378,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 14,
											"end": 562,
											"name": "tag",
											"source": 8,
											"value": "28"
										},
										{
											"begin": 14,
											"end": 562,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 126,
											"end": 130,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 155,
											"end": 157,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 184,
											"end": 186,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 173,
											"end": 182,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 166,
											"end": 187,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 216,
											"end": 222,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 210,
											"end": 223,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 259,
											"end": 265,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 254,
											"end": 256,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 243,
											"end": 252,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 239,
											"end": 257,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 232,
											"end": 266,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 284,
											"end": 285,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 294,
											"end": 434,
											"name": "tag",
											"source": 8,
											"value": "225"
										},
										{
											"begin": 294,
											"end": 434,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 308,
											"end": 314,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 305,
											"end": 306,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 302,
											"end": 315,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 294,
											"end": 434,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 294,
											"end": 434,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "227"
										},
										{
											"begin": 294,
											"end": 434,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 403,
											"end": 417,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 403,
											"end": 417,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 403,
											"end": 417,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 399,
											"end": 422,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 399,
											"end": 422,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 393,
											"end": 423,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 369,
											"end": 386,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 369,
											"end": 386,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 369,
											"end": 386,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 388,
											"end": 390,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 365,
											"end": 391,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 358,
											"end": 424,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 323,
											"end": 333,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 323,
											"end": 333,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 294,
											"end": 434,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "225"
										},
										{
											"begin": 294,
											"end": 434,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 294,
											"end": 434,
											"name": "tag",
											"source": 8,
											"value": "227"
										},
										{
											"begin": 294,
											"end": 434,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 298,
											"end": 301,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 483,
											"end": 484,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 478,
											"end": 480,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 469,
											"end": 475,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 458,
											"end": 467,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 454,
											"end": 476,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 450,
											"end": 481,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 443,
											"end": 485,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 553,
											"end": 555,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 546,
											"end": 548,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 542,
											"end": 549,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 537,
											"end": 539,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 529,
											"end": 535,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 525,
											"end": 540,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 521,
											"end": 550,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 510,
											"end": 519,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 506,
											"end": 551,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 502,
											"end": 556,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 494,
											"end": 556,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 494,
											"end": 556,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 494,
											"end": 556,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 494,
											"end": 556,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 14,
											"end": 562,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 14,
											"end": 562,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 14,
											"end": 562,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 14,
											"end": 562,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 14,
											"end": 562,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 567,
											"end": 740,
											"name": "tag",
											"source": 8,
											"value": "219"
										},
										{
											"begin": 567,
											"end": 740,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 635,
											"end": 655,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 635,
											"end": 655,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 684,
											"end": 715,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 684,
											"end": 715,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 674,
											"end": 716,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 674,
											"end": 716,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 664,
											"end": 734,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "229"
										},
										{
											"begin": 664,
											"end": 734,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 730,
											"end": 731,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 727,
											"end": 728,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 720,
											"end": 732,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 664,
											"end": 734,
											"name": "tag",
											"source": 8,
											"value": "229"
										},
										{
											"begin": 664,
											"end": 734,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 567,
											"end": 740,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 567,
											"end": 740,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 567,
											"end": 740,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 567,
											"end": 740,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 745,
											"end": 999,
											"name": "tag",
											"source": 8,
											"value": "31"
										},
										{
											"begin": 745,
											"end": 999,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 813,
											"end": 819,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 821,
											"end": 827,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 874,
											"end": 876,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 862,
											"end": 871,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 853,
											"end": 860,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 849,
											"end": 872,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 845,
											"end": 877,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 842,
											"end": 894,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 842,
											"end": 894,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "231"
										},
										{
											"begin": 842,
											"end": 894,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 890,
											"end": 891,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 887,
											"end": 888,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 880,
											"end": 892,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 842,
											"end": 894,
											"name": "tag",
											"source": 8,
											"value": "231"
										},
										{
											"begin": 842,
											"end": 894,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 913,
											"end": 942,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "232"
										},
										{
											"begin": 932,
											"end": 941,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 913,
											"end": 942,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "219"
										},
										{
											"begin": 913,
											"end": 942,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 913,
											"end": 942,
											"name": "tag",
											"source": 8,
											"value": "232"
										},
										{
											"begin": 913,
											"end": 942,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 903,
											"end": 942,
											"name": "SWAP5",
											"source": 8
										},
										{
											"begin": 989,
											"end": 991,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 974,
											"end": 992,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 974,
											"end": 992,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 974,
											"end": 992,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 974,
											"end": 992,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 961,
											"end": 993,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 961,
											"end": 993,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 745,
											"end": 999,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1378,
											"end": 1706,
											"name": "tag",
											"source": 8,
											"value": "41"
										},
										{
											"begin": 1378,
											"end": 1706,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1455,
											"end": 1461,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1463,
											"end": 1469,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1471,
											"end": 1477,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1524,
											"end": 1526,
											"name": "PUSH",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 1512,
											"end": 1521,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 1503,
											"end": 1510,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 1499,
											"end": 1522,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 1495,
											"end": 1527,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 1492,
											"end": 1544,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1492,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "236"
										},
										{
											"begin": 1492,
											"end": 1544,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1540,
											"end": 1541,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1537,
											"end": 1538,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1530,
											"end": 1542,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 1492,
											"end": 1544,
											"name": "tag",
											"source": 8,
											"value": "236"
										},
										{
											"begin": 1492,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1563,
											"end": 1592,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "237"
										},
										{
											"begin": 1582,
											"end": 1591,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 1563,
											"end": 1592,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "219"
										},
										{
											"begin": 1563,
											"end": 1592,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1563,
											"end": 1592,
											"name": "tag",
											"source": 8,
											"value": "237"
										},
										{
											"begin": 1563,
											"end": 1592,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1553,
											"end": 1592,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 1553,
											"end": 1592,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1611,
											"end": 1649,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "238"
										},
										{
											"begin": 1645,
											"end": 1647,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1634,
											"end": 1643,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 1630,
											"end": 1648,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1611,
											"end": 1649,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "219"
										},
										{
											"begin": 1611,
											"end": 1649,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1611,
											"end": 1649,
											"name": "tag",
											"source": 8,
											"value": "238"
										},
										{
											"begin": 1611,
											"end": 1649,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1601,
											"end": 1649,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1601,
											"end": 1649,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1696,
											"end": 1698,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1685,
											"end": 1694,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 1681,
											"end": 1699,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1668,
											"end": 1700,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 1658,
											"end": 1700,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1658,
											"end": 1700,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1378,
											"end": 1706,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 1378,
											"end": 1706,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1378,
											"end": 1706,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 1378,
											"end": 1706,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1378,
											"end": 1706,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 1378,
											"end": 1706,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1900,
											"end": 2080,
											"name": "tag",
											"source": 8,
											"value": "56"
										},
										{
											"begin": 1900,
											"end": 2080,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1959,
											"end": 1965,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2012,
											"end": 2014,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2000,
											"end": 2009,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1991,
											"end": 1998,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 1987,
											"end": 2010,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 1983,
											"end": 2015,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 1980,
											"end": 2032,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1980,
											"end": 2032,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "241"
										},
										{
											"begin": 1980,
											"end": 2032,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2028,
											"end": 2029,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2025,
											"end": 2026,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2018,
											"end": 2030,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 1980,
											"end": 2032,
											"name": "tag",
											"source": 8,
											"value": "241"
										},
										{
											"begin": 1980,
											"end": 2032,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2051,
											"end": 2074,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 2051,
											"end": 2074,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1900,
											"end": 2080,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1900,
											"end": 2080,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2085,
											"end": 2271,
											"name": "tag",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 2085,
											"end": 2271,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2144,
											"end": 2150,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2197,
											"end": 2199,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2185,
											"end": 2194,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2176,
											"end": 2183,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 2172,
											"end": 2195,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 2168,
											"end": 2200,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 2165,
											"end": 2217,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 2165,
											"end": 2217,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "243"
										},
										{
											"begin": 2165,
											"end": 2217,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2213,
											"end": 2214,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2210,
											"end": 2211,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2203,
											"end": 2215,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 2165,
											"end": 2217,
											"name": "tag",
											"source": 8,
											"value": "243"
										},
										{
											"begin": 2165,
											"end": 2217,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2236,
											"end": 2265,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "244"
										},
										{
											"begin": 2255,
											"end": 2264,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2236,
											"end": 2265,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "219"
										},
										{
											"begin": 2236,
											"end": 2265,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2236,
											"end": 2265,
											"name": "tag",
											"source": 8,
											"value": "244"
										},
										{
											"begin": 2236,
											"end": 2265,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2226,
											"end": 2265,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 2085,
											"end": 2271,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2085,
											"end": 2271,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2484,
											"end": 2744,
											"name": "tag",
											"source": 8,
											"value": "81"
										},
										{
											"begin": 2484,
											"end": 2744,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2552,
											"end": 2558,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2560,
											"end": 2566,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2613,
											"end": 2615,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2601,
											"end": 2610,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 2592,
											"end": 2599,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 2588,
											"end": 2611,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 2584,
											"end": 2616,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 2581,
											"end": 2633,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 2581,
											"end": 2633,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "247"
										},
										{
											"begin": 2581,
											"end": 2633,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2629,
											"end": 2630,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2626,
											"end": 2627,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2619,
											"end": 2631,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 2581,
											"end": 2633,
											"name": "tag",
											"source": 8,
											"value": "247"
										},
										{
											"begin": 2581,
											"end": 2633,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2652,
											"end": 2681,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "248"
										},
										{
											"begin": 2671,
											"end": 2680,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 2652,
											"end": 2681,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "219"
										},
										{
											"begin": 2652,
											"end": 2681,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2652,
											"end": 2681,
											"name": "tag",
											"source": 8,
											"value": "248"
										},
										{
											"begin": 2652,
											"end": 2681,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2642,
											"end": 2681,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2642,
											"end": 2681,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2700,
											"end": 2738,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "249"
										},
										{
											"begin": 2734,
											"end": 2736,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2723,
											"end": 2732,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 2719,
											"end": 2737,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2700,
											"end": 2738,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "219"
										},
										{
											"begin": 2700,
											"end": 2738,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2700,
											"end": 2738,
											"name": "tag",
											"source": 8,
											"value": "249"
										},
										{
											"begin": 2700,
											"end": 2738,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2690,
											"end": 2738,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2690,
											"end": 2738,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2484,
											"end": 2744,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 2484,
											"end": 2744,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2484,
											"end": 2744,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 2484,
											"end": 2744,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2484,
											"end": 2744,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2484,
											"end": 2744,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2749,
											"end": 3129,
											"name": "tag",
											"source": 8,
											"value": "99"
										},
										{
											"begin": 2749,
											"end": 3129,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2828,
											"end": 2829,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 2824,
											"end": 2836,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2824,
											"end": 2836,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2824,
											"end": 2836,
											"name": "SHR",
											"source": 8
										},
										{
											"begin": 2824,
											"end": 2836,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2871,
											"end": 2883,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2871,
											"end": 2883,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2871,
											"end": 2883,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2892,
											"end": 2953,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "251"
										},
										{
											"begin": 2892,
											"end": 2953,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2946,
											"end": 2950,
											"name": "PUSH",
											"source": 8,
											"value": "7F"
										},
										{
											"begin": 2938,
											"end": 2944,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2934,
											"end": 2951,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2924,
											"end": 2951,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2924,
											"end": 2951,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2892,
											"end": 2953,
											"name": "tag",
											"source": 8,
											"value": "251"
										},
										{
											"begin": 2892,
											"end": 2953,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2999,
											"end": 3001,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2991,
											"end": 2997,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2988,
											"end": 3002,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 2968,
											"end": 2986,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2965,
											"end": 3003,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 2962,
											"end": 3123,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "252"
										},
										{
											"begin": 2962,
											"end": 3123,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 3045,
											"end": 3055,
											"name": "PUSH",
											"source": 8,
											"value": "4E487B71"
										},
										{
											"begin": 3040,
											"end": 3043,
											"name": "PUSH",
											"source": 8,
											"value": "E0"
										},
										{
											"begin": 3036,
											"end": 3056,
											"name": "SHL",
											"source": 8
										},
										{
											"begin": 3033,
											"end": 3034,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3026,
											"end": 3057,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3080,
											"end": 3084,
											"name": "PUSH",
											"source": 8,
											"value": "22"
										},
										{
											"begin": 3077,
											"end": 3078,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 3070,
											"end": 3085,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3108,
											"end": 3112,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 3105,
											"end": 3106,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3098,
											"end": 3113,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 2962,
											"end": 3123,
											"name": "tag",
											"source": 8,
											"value": "252"
										},
										{
											"begin": 2962,
											"end": 3123,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2962,
											"end": 3123,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2749,
											"end": 3129,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2749,
											"end": 3129,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2749,
											"end": 3129,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2749,
											"end": 3129,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3492,
											"end": 3619,
											"name": "tag",
											"source": 8,
											"value": "220"
										},
										{
											"begin": 3492,
											"end": 3619,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3553,
											"end": 3563,
											"name": "PUSH",
											"source": 8,
											"value": "4E487B71"
										},
										{
											"begin": 3548,
											"end": 3551,
											"name": "PUSH",
											"source": 8,
											"value": "E0"
										},
										{
											"begin": 3544,
											"end": 3564,
											"name": "SHL",
											"source": 8
										},
										{
											"begin": 3541,
											"end": 3542,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3534,
											"end": 3565,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3584,
											"end": 3588,
											"name": "PUSH",
											"source": 8,
											"value": "11"
										},
										{
											"begin": 3581,
											"end": 3582,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 3574,
											"end": 3589,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3608,
											"end": 3612,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 3605,
											"end": 3606,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3598,
											"end": 3613,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 3624,
											"end": 4040,
											"name": "tag",
											"source": 8,
											"value": "221"
										},
										{
											"begin": 3624,
											"end": 4040,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3713,
											"end": 3714,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 3750,
											"end": 3755,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3713,
											"end": 3714,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3764,
											"end": 4034,
											"name": "tag",
											"source": 8,
											"value": "256"
										},
										{
											"begin": 3764,
											"end": 4034,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3785,
											"end": 3792,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3775,
											"end": 3783,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 3772,
											"end": 3793,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 3764,
											"end": 4034,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 3764,
											"end": 4034,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "258"
										},
										{
											"begin": 3764,
											"end": 4034,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 3844,
											"end": 3848,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3840,
											"end": 3841,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3836,
											"end": 3842,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 3832,
											"end": 3849,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 3826,
											"end": 3830,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3823,
											"end": 3850,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 3820,
											"end": 3873,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 3820,
											"end": 3873,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "260"
										},
										{
											"begin": 3820,
											"end": 3873,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 3853,
											"end": 3871,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "260"
										},
										{
											"begin": 3853,
											"end": 3871,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "220"
										},
										{
											"begin": 3853,
											"end": 3871,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3853,
											"end": 3871,
											"name": "tag",
											"source": 8,
											"value": "260"
										},
										{
											"begin": 3853,
											"end": 3871,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3903,
											"end": 3910,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3893,
											"end": 3901,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 3889,
											"end": 3911,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 3886,
											"end": 3941,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 3886,
											"end": 3941,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "261"
										},
										{
											"begin": 3886,
											"end": 3941,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 3923,
											"end": 3939,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3923,
											"end": 3939,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3923,
											"end": 3939,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 3923,
											"end": 3939,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3886,
											"end": 3941,
											"name": "tag",
											"source": 8,
											"value": "261"
										},
										{
											"begin": 3886,
											"end": 3941,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4002,
											"end": 4024,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 4002,
											"end": 4024,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 4002,
											"end": 4024,
											"name": "SHR",
											"source": 8
										},
										{
											"begin": 4002,
											"end": 4024,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 3962,
											"end": 3977,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3962,
											"end": 3977,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3962,
											"end": 3977,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 3962,
											"end": 3977,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3764,
											"end": 4034,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "256"
										},
										{
											"begin": 3764,
											"end": 4034,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3764,
											"end": 4034,
											"name": "tag",
											"source": 8,
											"value": "258"
										},
										{
											"begin": 3764,
											"end": 4034,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3768,
											"end": 3771,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3624,
											"end": 4040,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 3624,
											"end": 4040,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3624,
											"end": 4040,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 3624,
											"end": 4040,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3624,
											"end": 4040,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3624,
											"end": 4040,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4045,
											"end": 4851,
											"name": "tag",
											"source": 8,
											"value": "222"
										},
										{
											"begin": 4045,
											"end": 4851,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4094,
											"end": 4099,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4124,
											"end": 4132,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4114,
											"end": 4194,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "263"
										},
										{
											"begin": 4114,
											"end": 4194,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4165,
											"end": 4166,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 4179,
											"end": 4184,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "104"
										},
										{
											"begin": 4179,
											"end": 4184,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4114,
											"end": 4194,
											"name": "tag",
											"source": 8,
											"value": "263"
										},
										{
											"begin": 4114,
											"end": 4194,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4213,
											"end": 4217,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4203,
											"end": 4279,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "264"
										},
										{
											"begin": 4203,
											"end": 4279,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4250,
											"end": 4251,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4264,
											"end": 4269,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "104"
										},
										{
											"begin": 4264,
											"end": 4269,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4203,
											"end": 4279,
											"name": "tag",
											"source": 8,
											"value": "264"
										},
										{
											"begin": 4203,
											"end": 4279,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4295,
											"end": 4299,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4313,
											"end": 4314,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 4308,
											"end": 4367,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4308,
											"end": 4367,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 4308,
											"end": 4367,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "266"
										},
										{
											"begin": 4308,
											"end": 4367,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 4381,
											"end": 4382,
											"name": "PUSH",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 4376,
											"end": 4506,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4376,
											"end": 4506,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 4376,
											"end": 4506,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "267"
										},
										{
											"begin": 4376,
											"end": 4506,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 4288,
											"end": 4506,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "265"
										},
										{
											"begin": 4288,
											"end": 4506,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4308,
											"end": 4367,
											"name": "tag",
											"source": 8,
											"value": "266"
										},
										{
											"begin": 4308,
											"end": 4367,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4338,
											"end": 4339,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 4329,
											"end": 4339,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4329,
											"end": 4339,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4352,
											"end": 4357,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4352,
											"end": 4357,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "104"
										},
										{
											"begin": 4352,
											"end": 4357,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4376,
											"end": 4506,
											"name": "tag",
											"source": 8,
											"value": "267"
										},
										{
											"begin": 4376,
											"end": 4506,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4413,
											"end": 4416,
											"name": "PUSH",
											"source": 8,
											"value": "FF"
										},
										{
											"begin": 4403,
											"end": 4411,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 4400,
											"end": 4417,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 4397,
											"end": 4440,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 4397,
											"end": 4440,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "269"
										},
										{
											"begin": 4397,
											"end": 4440,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 4420,
											"end": 4438,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "269"
										},
										{
											"begin": 4420,
											"end": 4438,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "220"
										},
										{
											"begin": 4420,
											"end": 4438,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4420,
											"end": 4438,
											"name": "tag",
											"source": 8,
											"value": "269"
										},
										{
											"begin": 4420,
											"end": 4438,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4476,
											"end": 4477,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 4462,
											"end": 4478,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4462,
											"end": 4478,
											"name": "SHL",
											"source": 8
										},
										{
											"begin": 4491,
											"end": 4496,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "104"
										},
										{
											"begin": 4491,
											"end": 4496,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4288,
											"end": 4506,
											"name": "tag",
											"source": 8,
											"value": "265"
										},
										{
											"begin": 4288,
											"end": 4506,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4288,
											"end": 4506,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4590,
											"end": 4592,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 4580,
											"end": 4588,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 4577,
											"end": 4593,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 4571,
											"end": 4574,
											"name": "PUSH",
											"source": 8,
											"value": "133"
										},
										{
											"begin": 4565,
											"end": 4569,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 4562,
											"end": 4575,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 4558,
											"end": 4594,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 4552,
											"end": 4554,
											"name": "PUSH",
											"source": 8,
											"value": "4E"
										},
										{
											"begin": 4542,
											"end": 4550,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 4539,
											"end": 4555,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 4534,
											"end": 4536,
											"name": "PUSH",
											"source": 8,
											"value": "B"
										},
										{
											"begin": 4528,
											"end": 4532,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 4525,
											"end": 4537,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 4521,
											"end": 4556,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 4518,
											"end": 4595,
											"name": "OR",
											"source": 8
										},
										{
											"begin": 4515,
											"end": 4674,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 4515,
											"end": 4674,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "270"
										},
										{
											"begin": 4515,
											"end": 4674,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4627,
											"end": 4646,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4627,
											"end": 4646,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4627,
											"end": 4646,
											"name": "EXP",
											"source": 8
										},
										{
											"begin": 4659,
											"end": 4664,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "104"
										},
										{
											"begin": 4659,
											"end": 4664,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4515,
											"end": 4674,
											"name": "tag",
											"source": 8,
											"value": "270"
										},
										{
											"begin": 4515,
											"end": 4674,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4706,
											"end": 4740,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "271"
										},
										{
											"begin": 4731,
											"end": 4739,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 4725,
											"end": 4729,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 4706,
											"end": 4740,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "221"
										},
										{
											"begin": 4706,
											"end": 4740,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4706,
											"end": 4740,
											"name": "tag",
											"source": 8,
											"value": "271"
										},
										{
											"begin": 4706,
											"end": 4740,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4776,
											"end": 4782,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4772,
											"end": 4773,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4768,
											"end": 4774,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 4764,
											"end": 4783,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 4755,
											"end": 4762,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4752,
											"end": 4784,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 4749,
											"end": 4807,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 4749,
											"end": 4807,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "273"
										},
										{
											"begin": 4749,
											"end": 4807,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 4787,
											"end": 4805,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "273"
										},
										{
											"begin": 4787,
											"end": 4805,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "220"
										},
										{
											"begin": 4787,
											"end": 4805,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4787,
											"end": 4805,
											"name": "tag",
											"source": 8,
											"value": "273"
										},
										{
											"begin": 4787,
											"end": 4805,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4825,
											"end": 4845,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 4825,
											"end": 4845,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 4045,
											"end": 4851,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4045,
											"end": 4851,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4856,
											"end": 4996,
											"name": "tag",
											"source": 8,
											"value": "127"
										},
										{
											"begin": 4856,
											"end": 4996,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4914,
											"end": 4919,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4943,
											"end": 4990,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "244"
										},
										{
											"begin": 4984,
											"end": 4988,
											"name": "PUSH",
											"source": 8,
											"value": "FF"
										},
										{
											"begin": 4974,
											"end": 4982,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 4970,
											"end": 4989,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 4964,
											"end": 4968,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 4943,
											"end": 4990,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "222"
										},
										{
											"begin": 4943,
											"end": 4990,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5001,
											"end": 5169,
											"name": "tag",
											"source": 8,
											"value": "129"
										},
										{
											"begin": 5001,
											"end": 5169,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5074,
											"end": 5083,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 5074,
											"end": 5083,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5074,
											"end": 5083,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 5105,
											"end": 5114,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5105,
											"end": 5114,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 5122,
											"end": 5137,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5122,
											"end": 5137,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5122,
											"end": 5137,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 5116,
											"end": 5138,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 5116,
											"end": 5138,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 5102,
											"end": 5139,
											"name": "OR",
											"source": 8
										},
										{
											"begin": 5092,
											"end": 5163,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "104"
										},
										{
											"begin": 5092,
											"end": 5163,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 5143,
											"end": 5161,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "104"
										},
										{
											"begin": 5143,
											"end": 5161,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "220"
										},
										{
											"begin": 5143,
											"end": 5161,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5174,
											"end": 5391,
											"name": "tag",
											"source": 8,
											"value": "155"
										},
										{
											"begin": 5174,
											"end": 5391,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5214,
											"end": 5215,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5240,
											"end": 5241,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5230,
											"end": 5362,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "280"
										},
										{
											"begin": 5230,
											"end": 5362,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 5284,
											"end": 5294,
											"name": "PUSH",
											"source": 8,
											"value": "4E487B71"
										},
										{
											"begin": 5279,
											"end": 5282,
											"name": "PUSH",
											"source": 8,
											"value": "E0"
										},
										{
											"begin": 5275,
											"end": 5295,
											"name": "SHL",
											"source": 8
										},
										{
											"begin": 5272,
											"end": 5273,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5265,
											"end": 5296,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 5319,
											"end": 5323,
											"name": "PUSH",
											"source": 8,
											"value": "12"
										},
										{
											"begin": 5316,
											"end": 5317,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 5309,
											"end": 5324,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 5347,
											"end": 5351,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 5344,
											"end": 5345,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5337,
											"end": 5352,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 5230,
											"end": 5362,
											"name": "tag",
											"source": 8,
											"value": "280"
										},
										{
											"begin": 5230,
											"end": 5362,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5376,
											"end": 5385,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 5376,
											"end": 5385,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5174,
											"end": 5391,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5396,
											"end": 5524,
											"name": "tag",
											"source": 8,
											"value": "157"
										},
										{
											"begin": 5396,
											"end": 5524,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5463,
											"end": 5472,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5463,
											"end": 5472,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5463,
											"end": 5472,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 5484,
											"end": 5495,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5484,
											"end": 5495,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5484,
											"end": 5495,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 5481,
											"end": 5518,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 5481,
											"end": 5518,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "104"
										},
										{
											"begin": 5481,
											"end": 5518,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 5498,
											"end": 5516,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "104"
										},
										{
											"begin": 5498,
											"end": 5516,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "220"
										},
										{
											"begin": 5498,
											"end": 5516,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5529,
											"end": 5654,
											"name": "tag",
											"source": 8,
											"value": "159"
										},
										{
											"begin": 5529,
											"end": 5654,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5594,
											"end": 5603,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 5594,
											"end": 5603,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5594,
											"end": 5603,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5615,
											"end": 5625,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 5615,
											"end": 5625,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5615,
											"end": 5625,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 5612,
											"end": 5648,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 5612,
											"end": 5648,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "104"
										},
										{
											"begin": 5612,
											"end": 5648,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 5628,
											"end": 5646,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "104"
										},
										{
											"begin": 5628,
											"end": 5646,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "220"
										},
										{
											"begin": 5628,
											"end": 5646,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/token/ERC20/ERC20.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"contracts/Erc20MNTK.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"_taxRecord(address,address)": "ac3c93cf",
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"burn(uint256)": "42966c68",
							"burnFrom(address,uint256)": "79cc6790",
							"currentTaxDeducted()": "2d44ff23",
							"decimals()": "313ce567",
							"grossTaxCollected()": "ee33bc45",
							"mint(address,uint256)": "40c10f19",
							"name()": "06fdde03",
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"symbol()": "95d89b41",
							"taxCollector()": "bea1dcf8",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"initialOwner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_taxCollector\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"_taxRecord\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"burnFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"currentTaxDeducted\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"grossTaxCollected\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"taxCollector\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"burn(uint256)\":{\"details\":\"Destroys a `value` amount of tokens from the caller. See {ERC20-_burn}.\"},\"burnFrom(address,uint256)\":{\"details\":\"Destroys a `value` amount of tokens from `account`, deducting from the caller's allowance. See {ERC20-_burn} and {ERC20-allowance}. Requirements: - the caller must have allowance for ``accounts``'s tokens of at least `value`.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Erc20MNTK.sol\":\"MyNewToken\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xc3e1fa9d1987f8d349dfb4d6fe93bf2ca014b52ba335cfac30bfe71e357e6f80\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5703ccdeb7b1d685e375ed719117e9edf2ab4bc544f24f23b0d50ec82257229\",\"dweb:/ipfs/QmTdwkbQq7owpCiyuzE7eh5LrD2ddrBCZ5WHVsWPi1RrTS\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":{\"keccak256\":\"0x2659248df25e34000ed214b3dc8da2160bc39874c992b477d9e2b1b3283dc073\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c345af1b0e7ea28d1216d6a04ab28f5534a5229b9edf9ca3cd0e84950ae58d26\",\"dweb:/ipfs/QmY63jtSrYpLRe8Gj1ep2vMDCKxGNNG3hnNVKBVnrs2nmA\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ad7c8d4d08938c8dfc43d75a148863fb324b80cf53e0a36f7e5a4ac29008850\",\"dweb:/ipfs/QmcrhfPgVNf5mkdhQvy1pMv51TFokD3Y4Wa5WZhFqVh8UV\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"contracts/Erc20MNTK.sol\":{\"keccak256\":\"0x5758d856f5f8afc935f5a41f3ab994e453ead9e8179263c196b7f460967e640f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://63108a4736a6c14645718e892c036a5a21fad17c4168c1c784157b4ee3750792\",\"dweb:/ipfs/QmWRqy3A2SZ9C3zFtfio1WLSaDxcxWQe81ywUfJJ6M3sdR\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 307,
								"contract": "contracts/Erc20MNTK.sol:MyNewToken",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 313,
								"contract": "contracts/Erc20MNTK.sol:MyNewToken",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 315,
								"contract": "contracts/Erc20MNTK.sol:MyNewToken",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 317,
								"contract": "contracts/Erc20MNTK.sol:MyNewToken",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 319,
								"contract": "contracts/Erc20MNTK.sol:MyNewToken",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							},
							{
								"astId": 8,
								"contract": "contracts/Erc20MNTK.sol:MyNewToken",
								"label": "_owner",
								"offset": 0,
								"slot": "5",
								"type": "t_address"
							},
							{
								"astId": 992,
								"contract": "contracts/Erc20MNTK.sol:MyNewToken",
								"label": "taxCollector",
								"offset": 0,
								"slot": "6",
								"type": "t_address"
							},
							{
								"astId": 994,
								"contract": "contracts/Erc20MNTK.sol:MyNewToken",
								"label": "currentTaxDeducted",
								"offset": 0,
								"slot": "7",
								"type": "t_uint256"
							},
							{
								"astId": 996,
								"contract": "contracts/Erc20MNTK.sol:MyNewToken",
								"label": "grossTaxCollected",
								"offset": 0,
								"slot": "8",
								"type": "t_uint256"
							},
							{
								"astId": 1002,
								"contract": "contracts/Erc20MNTK.sol:MyNewToken",
								"label": "_taxRecord",
								"offset": 0,
								"slot": "9",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
					"exportedSymbols": {
						"Context": [
							979
						],
						"Ownable": [
							147
						]
					},
					"id": 148,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "102:24:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 148,
							"sourceUnit": 980,
							"src": "128:45:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 979,
										"src": "136:7:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 5,
										"name": "Context",
										"nameLocations": [
											"692:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 979,
										"src": "692:7:0"
									},
									"id": 6,
									"nodeType": "InheritanceSpecifier",
									"src": "692:7:0"
								}
							],
							"canonicalName": "Ownable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 4,
								"nodeType": "StructuredDocumentation",
								"src": "175:487:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 147,
							"linearizedBaseContracts": [
								147,
								979
							],
							"name": "Ownable",
							"nameLocation": "681:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 8,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "722:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 147,
									"src": "706:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 7,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "706:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 9,
										"nodeType": "StructuredDocumentation",
										"src": "735:85:0",
										"text": " @dev The caller account is not authorized to perform an operation."
									},
									"errorSelector": "118cdaa7",
									"id": 13,
									"name": "OwnableUnauthorizedAccount",
									"nameLocation": "831:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 11,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "866:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "858:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 10,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "858:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "857:17:0"
									},
									"src": "825:50:0"
								},
								{
									"documentation": {
										"id": 14,
										"nodeType": "StructuredDocumentation",
										"src": "881:82:0",
										"text": " @dev The owner is not a valid owner account. (eg. `address(0)`)"
									},
									"errorSelector": "1e4fbdf7",
									"id": 18,
									"name": "OwnableInvalidOwner",
									"nameLocation": "974:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 17,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 16,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1002:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 18,
												"src": "994:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 15,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "994:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "993:15:0"
									},
									"src": "968:41:0"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 24,
									"name": "OwnershipTransferred",
									"nameLocation": "1021:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 23,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 20,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "1058:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1042:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 19,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1042:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 22,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "1089:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1073:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 21,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1073:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1041:57:0"
									},
									"src": "1015:84:0"
								},
								{
									"body": {
										"id": 49,
										"nodeType": "Block",
										"src": "1259:153:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 35,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 30,
														"name": "initialOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 27,
														"src": "1273:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 33,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1297:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 32,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1289:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 31,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "1289:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 34,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1289:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1273:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 44,
												"nodeType": "IfStatement",
												"src": "1269:95:0",
												"trueBody": {
													"id": 43,
													"nodeType": "Block",
													"src": "1301:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 39,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "1350:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 38,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "1342:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 37,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "1342:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 40,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1342:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 36,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "1322:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 41,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1322:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 42,
															"nodeType": "RevertStatement",
															"src": "1315:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 46,
															"name": "initialOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 27,
															"src": "1392:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 45,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "1373:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 47,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1373:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 48,
												"nodeType": "ExpressionStatement",
												"src": "1373:32:0"
											}
										]
									},
									"documentation": {
										"id": 25,
										"nodeType": "StructuredDocumentation",
										"src": "1105:115:0",
										"text": " @dev Initializes the contract setting the address provided by the deployer as the initial owner."
									},
									"id": 50,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 28,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 27,
												"mutability": "mutable",
												"name": "initialOwner",
												"nameLocation": "1245:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 50,
												"src": "1237:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 26,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1237:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1236:22:0"
									},
									"returnParameters": {
										"id": 29,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1259:0:0"
									},
									"scope": 147,
									"src": "1225:187:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 57,
										"nodeType": "Block",
										"src": "1521:41:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 53,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 84,
														"src": "1531:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 54,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1531:13:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 55,
												"nodeType": "ExpressionStatement",
												"src": "1531:13:0"
											},
											{
												"id": 56,
												"nodeType": "PlaceholderStatement",
												"src": "1554:1:0"
											}
										]
									},
									"documentation": {
										"id": 51,
										"nodeType": "StructuredDocumentation",
										"src": "1418:77:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 58,
									"name": "onlyOwner",
									"nameLocation": "1509:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 52,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1518:2:0"
									},
									"src": "1500:62:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 66,
										"nodeType": "Block",
										"src": "1693:30:0",
										"statements": [
											{
												"expression": {
													"id": 64,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "1710:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 63,
												"id": 65,
												"nodeType": "Return",
												"src": "1703:13:0"
											}
										]
									},
									"documentation": {
										"id": 59,
										"nodeType": "StructuredDocumentation",
										"src": "1568:65:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 67,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "1647:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1652:2:0"
									},
									"returnParameters": {
										"id": 63,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 62,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 67,
												"src": "1684:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 61,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1684:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1683:9:0"
									},
									"scope": 147,
									"src": "1638:85:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 83,
										"nodeType": "Block",
										"src": "1841:117:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 75,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 71,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 67,
															"src": "1855:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 72,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1855:7:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 73,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 961,
															"src": "1866:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 74,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1866:12:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1855:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 82,
												"nodeType": "IfStatement",
												"src": "1851:101:0",
												"trueBody": {
													"id": 81,
													"nodeType": "Block",
													"src": "1880:72:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 77,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 961,
																			"src": "1928:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 78,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1928:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 76,
																	"name": "OwnableUnauthorizedAccount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 13,
																	"src": "1901:26:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 79,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1901:40:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 80,
															"nodeType": "RevertStatement",
															"src": "1894:47:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 68,
										"nodeType": "StructuredDocumentation",
										"src": "1729:62:0",
										"text": " @dev Throws if the sender is not the owner."
									},
									"id": 84,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nameLocation": "1805:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 69,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1816:2:0"
									},
									"returnParameters": {
										"id": 70,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1841:0:0"
									},
									"scope": 147,
									"src": "1796:162:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 97,
										"nodeType": "Block",
										"src": "2347:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 93,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2384:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 92,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2376:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 91,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2376:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 94,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2376:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 90,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "2357:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 95,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2357:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 96,
												"nodeType": "ExpressionStatement",
												"src": "2357:30:0"
											}
										]
									},
									"documentation": {
										"id": 85,
										"nodeType": "StructuredDocumentation",
										"src": "1964:324:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 98,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 88,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 87,
												"name": "onlyOwner",
												"nameLocations": [
													"2337:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2337:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2337:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "2302:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 86,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2319:2:0"
									},
									"returnParameters": {
										"id": 89,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2347:0:0"
									},
									"scope": 147,
									"src": "2293:101:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 125,
										"nodeType": "Block",
										"src": "2613:145:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 111,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 106,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 101,
														"src": "2627:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 109,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2647:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 108,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2639:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 107,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2639:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 110,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2639:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2627:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 120,
												"nodeType": "IfStatement",
												"src": "2623:91:0",
												"trueBody": {
													"id": 119,
													"nodeType": "Block",
													"src": "2651:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 115,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2700:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 114,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "2692:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 113,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "2692:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 116,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2692:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 112,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "2672:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 117,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2672:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 118,
															"nodeType": "RevertStatement",
															"src": "2665:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 122,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 101,
															"src": "2742:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 121,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "2723:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 123,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2723:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 124,
												"nodeType": "ExpressionStatement",
												"src": "2723:28:0"
											}
										]
									},
									"documentation": {
										"id": 99,
										"nodeType": "StructuredDocumentation",
										"src": "2400:138:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 126,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 104,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 103,
												"name": "onlyOwner",
												"nameLocations": [
													"2603:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2603:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2603:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "2552:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 102,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 101,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2578:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 126,
												"src": "2570:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 100,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2570:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2569:18:0"
									},
									"returnParameters": {
										"id": 105,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2613:0:0"
									},
									"scope": 147,
									"src": "2543:215:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 145,
										"nodeType": "Block",
										"src": "2975:124:0",
										"statements": [
											{
												"assignments": [
													133
												],
												"declarations": [
													{
														"constant": false,
														"id": 133,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "2993:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 145,
														"src": "2985:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 132,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2985:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 135,
												"initialValue": {
													"id": 134,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "3004:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2985:25:0"
											},
											{
												"expression": {
													"id": 138,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 136,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 8,
														"src": "3020:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 137,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 129,
														"src": "3029:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3020:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 139,
												"nodeType": "ExpressionStatement",
												"src": "3020:17:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 141,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 133,
															"src": "3073:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 142,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 129,
															"src": "3083:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 140,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 24,
														"src": "3052:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 143,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3052:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 144,
												"nodeType": "EmitStatement",
												"src": "3047:45:0"
											}
										]
									},
									"documentation": {
										"id": 127,
										"nodeType": "StructuredDocumentation",
										"src": "2764:143:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 146,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "2921:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 130,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 129,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2948:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 146,
												"src": "2940:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 128,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2940:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2939:18:0"
									},
									"returnParameters": {
										"id": 131,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2975:0:0"
									},
									"scope": 147,
									"src": "2912:187:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 148,
							"src": "663:2438:0",
							"usedErrors": [
								13,
								18
							],
							"usedEvents": [
								24
							]
						}
					],
					"src": "102:3000:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
					"exportedSymbols": {
						"IERC1155Errors": [
							284
						],
						"IERC20Errors": [
							189
						],
						"IERC721Errors": [
							237
						]
					},
					"id": 285,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 149,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "112:24:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 150,
								"nodeType": "StructuredDocumentation",
								"src": "138:139:1",
								"text": " @dev Standard ERC20 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens."
							},
							"fullyImplemented": true,
							"id": 189,
							"linearizedBaseContracts": [
								189
							],
							"name": "IERC20Errors",
							"nameLocation": "288:12:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 151,
										"nodeType": "StructuredDocumentation",
										"src": "307:309:1",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "e450d38c",
									"id": 159,
									"name": "ERC20InsufficientBalance",
									"nameLocation": "627:24:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 158,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 153,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "660:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "652:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 152,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "652:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 155,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "676:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "668:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 154,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "668:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 157,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "693:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "685:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 156,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "685:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "651:49:1"
									},
									"src": "621:80:1"
								},
								{
									"documentation": {
										"id": 160,
										"nodeType": "StructuredDocumentation",
										"src": "707:152:1",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "96c6fd1e",
									"id": 164,
									"name": "ERC20InvalidSender",
									"nameLocation": "870:18:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 163,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 162,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "897:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 164,
												"src": "889:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 161,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "889:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "888:16:1"
									},
									"src": "864:41:1"
								},
								{
									"documentation": {
										"id": 165,
										"nodeType": "StructuredDocumentation",
										"src": "911:159:1",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "ec442f05",
									"id": 169,
									"name": "ERC20InvalidReceiver",
									"nameLocation": "1081:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 168,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 167,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "1110:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 169,
												"src": "1102:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 166,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1102:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1101:18:1"
									},
									"src": "1075:45:1"
								},
								{
									"documentation": {
										"id": 170,
										"nodeType": "StructuredDocumentation",
										"src": "1126:345:1",
										"text": " @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n @param spender Address that may be allowed to operate on tokens without being their owner.\n @param allowance Amount of tokens a `spender` is allowed to operate with.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "fb8f41b2",
									"id": 178,
									"name": "ERC20InsufficientAllowance",
									"nameLocation": "1482:26:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 177,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 172,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1517:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 178,
												"src": "1509:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 171,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1509:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 174,
												"mutability": "mutable",
												"name": "allowance",
												"nameLocation": "1534:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 178,
												"src": "1526:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 173,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1526:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 176,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "1553:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 178,
												"src": "1545:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 175,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1545:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1508:52:1"
									},
									"src": "1476:85:1"
								},
								{
									"documentation": {
										"id": 179,
										"nodeType": "StructuredDocumentation",
										"src": "1567:174:1",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "e602df05",
									"id": 183,
									"name": "ERC20InvalidApprover",
									"nameLocation": "1752:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 182,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 181,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "1781:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 183,
												"src": "1773:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 180,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1773:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1772:18:1"
									},
									"src": "1746:45:1"
								},
								{
									"documentation": {
										"id": 184,
										"nodeType": "StructuredDocumentation",
										"src": "1797:195:1",
										"text": " @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n @param spender Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "94280d62",
									"id": 188,
									"name": "ERC20InvalidSpender",
									"nameLocation": "2003:19:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 187,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 186,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2031:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 188,
												"src": "2023:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 185,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2023:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2022:17:1"
									},
									"src": "1997:43:1"
								}
							],
							"scope": 285,
							"src": "278:1764:1",
							"usedErrors": [
								159,
								164,
								169,
								178,
								183,
								188
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC721Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 190,
								"nodeType": "StructuredDocumentation",
								"src": "2044:141:1",
								"text": " @dev Standard ERC721 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens."
							},
							"fullyImplemented": true,
							"id": 237,
							"linearizedBaseContracts": [
								237
							],
							"name": "IERC721Errors",
							"nameLocation": "2196:13:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 191,
										"nodeType": "StructuredDocumentation",
										"src": "2216:219:1",
										"text": " @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\n Used in balance queries.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "89c62b64",
									"id": 195,
									"name": "ERC721InvalidOwner",
									"nameLocation": "2446:18:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 194,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 193,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2473:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 195,
												"src": "2465:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 192,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2465:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2464:15:1"
									},
									"src": "2440:40:1"
								},
								{
									"documentation": {
										"id": 196,
										"nodeType": "StructuredDocumentation",
										"src": "2486:132:1",
										"text": " @dev Indicates a `tokenId` whose `owner` is the zero address.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "7e273289",
									"id": 200,
									"name": "ERC721NonexistentToken",
									"nameLocation": "2629:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 199,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 198,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2660:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 200,
												"src": "2652:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 197,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2652:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2651:17:1"
									},
									"src": "2623:46:1"
								},
								{
									"documentation": {
										"id": 201,
										"nodeType": "StructuredDocumentation",
										"src": "2675:289:1",
										"text": " @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param tokenId Identifier number of a token.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "64283d7b",
									"id": 209,
									"name": "ERC721IncorrectOwner",
									"nameLocation": "2975:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 208,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 203,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3004:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 209,
												"src": "2996:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 202,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2996:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 205,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3020:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 209,
												"src": "3012:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 204,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3012:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 207,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3037:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 209,
												"src": "3029:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 206,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3029:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2995:48:1"
									},
									"src": "2969:75:1"
								},
								{
									"documentation": {
										"id": 210,
										"nodeType": "StructuredDocumentation",
										"src": "3050:152:1",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "73c6ac6e",
									"id": 214,
									"name": "ERC721InvalidSender",
									"nameLocation": "3213:19:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 213,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 212,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3241:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 214,
												"src": "3233:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 211,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3233:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3232:16:1"
									},
									"src": "3207:42:1"
								},
								{
									"documentation": {
										"id": 215,
										"nodeType": "StructuredDocumentation",
										"src": "3255:159:1",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "64a0ae92",
									"id": 219,
									"name": "ERC721InvalidReceiver",
									"nameLocation": "3425:21:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 218,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 217,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "3455:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 219,
												"src": "3447:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 216,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3447:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3446:18:1"
									},
									"src": "3419:46:1"
								},
								{
									"documentation": {
										"id": 220,
										"nodeType": "StructuredDocumentation",
										"src": "3471:247:1",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "177e802f",
									"id": 226,
									"name": "ERC721InsufficientApproval",
									"nameLocation": "3729:26:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 225,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 222,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "3764:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 226,
												"src": "3756:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 221,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3756:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 224,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3782:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 226,
												"src": "3774:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 223,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3774:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3755:35:1"
									},
									"src": "3723:68:1"
								},
								{
									"documentation": {
										"id": 227,
										"nodeType": "StructuredDocumentation",
										"src": "3797:174:1",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "a9fbf51f",
									"id": 231,
									"name": "ERC721InvalidApprover",
									"nameLocation": "3982:21:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 230,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 229,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "4012:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 231,
												"src": "4004:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 228,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4004:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4003:18:1"
									},
									"src": "3976:46:1"
								},
								{
									"documentation": {
										"id": 232,
										"nodeType": "StructuredDocumentation",
										"src": "4028:197:1",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "5b08ba18",
									"id": 236,
									"name": "ERC721InvalidOperator",
									"nameLocation": "4236:21:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 235,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 234,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4266:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 236,
												"src": "4258:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 233,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4258:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4257:18:1"
									},
									"src": "4230:46:1"
								}
							],
							"scope": 285,
							"src": "2186:2092:1",
							"usedErrors": [
								195,
								200,
								209,
								214,
								219,
								226,
								231,
								236
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC1155Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 238,
								"nodeType": "StructuredDocumentation",
								"src": "4280:143:1",
								"text": " @dev Standard ERC1155 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens."
							},
							"fullyImplemented": true,
							"id": 284,
							"linearizedBaseContracts": [
								284
							],
							"name": "IERC1155Errors",
							"nameLocation": "4434:14:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 239,
										"nodeType": "StructuredDocumentation",
										"src": "4455:361:1",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "03dee4c5",
									"id": 249,
									"name": "ERC1155InsufficientBalance",
									"nameLocation": "4827:26:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 248,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 241,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "4862:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "4854:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 240,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4854:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 243,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "4878:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "4870:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 242,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4870:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 245,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "4895:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "4887:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 244,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4887:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 247,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4911:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "4903:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 246,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4903:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4853:66:1"
									},
									"src": "4821:99:1"
								},
								{
									"documentation": {
										"id": 250,
										"nodeType": "StructuredDocumentation",
										"src": "4926:152:1",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "01a83514",
									"id": 254,
									"name": "ERC1155InvalidSender",
									"nameLocation": "5089:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 253,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 252,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "5118:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 254,
												"src": "5110:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 251,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5110:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5109:16:1"
									},
									"src": "5083:43:1"
								},
								{
									"documentation": {
										"id": 255,
										"nodeType": "StructuredDocumentation",
										"src": "5132:159:1",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "57f447ce",
									"id": 259,
									"name": "ERC1155InvalidReceiver",
									"nameLocation": "5302:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 258,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 257,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "5333:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 259,
												"src": "5325:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 256,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5325:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5324:18:1"
									},
									"src": "5296:47:1"
								},
								{
									"documentation": {
										"id": 260,
										"nodeType": "StructuredDocumentation",
										"src": "5349:256:1",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "e237d922",
									"id": 266,
									"name": "ERC1155MissingApprovalForAll",
									"nameLocation": "5616:28:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 265,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 262,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "5653:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 266,
												"src": "5645:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 261,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5645:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 264,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "5671:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 266,
												"src": "5663:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 263,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5663:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5644:33:1"
									},
									"src": "5610:68:1"
								},
								{
									"documentation": {
										"id": 267,
										"nodeType": "StructuredDocumentation",
										"src": "5684:174:1",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "3e31884e",
									"id": 271,
									"name": "ERC1155InvalidApprover",
									"nameLocation": "5869:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 270,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 269,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "5900:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 271,
												"src": "5892:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 268,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5892:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5891:18:1"
									},
									"src": "5863:47:1"
								},
								{
									"documentation": {
										"id": 272,
										"nodeType": "StructuredDocumentation",
										"src": "5916:197:1",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "ced3e100",
									"id": 276,
									"name": "ERC1155InvalidOperator",
									"nameLocation": "6124:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 275,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 274,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "6155:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 276,
												"src": "6147:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 273,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6147:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6146:18:1"
									},
									"src": "6118:47:1"
								},
								{
									"documentation": {
										"id": 277,
										"nodeType": "StructuredDocumentation",
										"src": "6171:280:1",
										"text": " @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n Used in batch transfers.\n @param idsLength Length of the array of token identifiers\n @param valuesLength Length of the array of token amounts"
									},
									"errorSelector": "5b059991",
									"id": 283,
									"name": "ERC1155InvalidArrayLength",
									"nameLocation": "6462:25:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 282,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 279,
												"mutability": "mutable",
												"name": "idsLength",
												"nameLocation": "6496:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 283,
												"src": "6488:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 278,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6488:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 281,
												"mutability": "mutable",
												"name": "valuesLength",
												"nameLocation": "6515:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 283,
												"src": "6507:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 280,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6507:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6487:41:1"
									},
									"src": "6456:73:1"
								}
							],
							"scope": 285,
							"src": "4424:2107:1",
							"usedErrors": [
								249,
								254,
								259,
								266,
								271,
								276,
								283
							],
							"usedEvents": []
						}
					],
					"src": "112:6420:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
					"exportedSymbols": {
						"Context": [
							979
						],
						"ERC20": [
							799
						],
						"IERC20": [
							877
						],
						"IERC20Errors": [
							189
						],
						"IERC20Metadata": [
							949
						]
					},
					"id": 800,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 286,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "105:24:2"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "./IERC20.sol",
							"id": 288,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 800,
							"sourceUnit": 878,
							"src": "131:36:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 287,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 877,
										"src": "139:6:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
							"file": "./extensions/IERC20Metadata.sol",
							"id": 290,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 800,
							"sourceUnit": 950,
							"src": "168:63:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 289,
										"name": "IERC20Metadata",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 949,
										"src": "176:14:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../../utils/Context.sol",
							"id": 292,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 800,
							"sourceUnit": 980,
							"src": "232:48:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 291,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 979,
										"src": "240:7:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
							"file": "../../interfaces/draft-IERC6093.sol",
							"id": 294,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 800,
							"sourceUnit": 285,
							"src": "281:65:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 293,
										"name": "IERC20Errors",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 189,
										"src": "289:12:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 296,
										"name": "Context",
										"nameLocations": [
											"1428:7:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 979,
										"src": "1428:7:2"
									},
									"id": 297,
									"nodeType": "InheritanceSpecifier",
									"src": "1428:7:2"
								},
								{
									"baseName": {
										"id": 298,
										"name": "IERC20",
										"nameLocations": [
											"1437:6:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 877,
										"src": "1437:6:2"
									},
									"id": 299,
									"nodeType": "InheritanceSpecifier",
									"src": "1437:6:2"
								},
								{
									"baseName": {
										"id": 300,
										"name": "IERC20Metadata",
										"nameLocations": [
											"1445:14:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 949,
										"src": "1445:14:2"
									},
									"id": 301,
									"nodeType": "InheritanceSpecifier",
									"src": "1445:14:2"
								},
								{
									"baseName": {
										"id": 302,
										"name": "IERC20Errors",
										"nameLocations": [
											"1461:12:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 189,
										"src": "1461:12:2"
									},
									"id": 303,
									"nodeType": "InheritanceSpecifier",
									"src": "1461:12:2"
								}
							],
							"canonicalName": "ERC20",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 295,
								"nodeType": "StructuredDocumentation",
								"src": "348:1052:2",
								"text": " @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n TIP: For a detailed writeup see our guide\n https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n The default value of {decimals} is 18. To change this, you should override\n this function so it returns a different value.\n We have followed general OpenZeppelin Contracts guidelines: functions revert\n instead returning `false` on failure. This behavior is nonetheless\n conventional and does not conflict with the expectations of ERC20\n applications.\n Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n This allows applications to reconstruct the allowance for all accounts just\n by listening to said events. Other implementations of the EIP may not emit\n these events, as it isn't required by the specification."
							},
							"fullyImplemented": true,
							"id": 799,
							"linearizedBaseContracts": [
								799,
								189,
								949,
								877,
								979
							],
							"name": "ERC20",
							"nameLocation": "1419:5:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 307,
									"mutability": "mutable",
									"name": "_balances",
									"nameLocation": "1524:9:2",
									"nodeType": "VariableDeclaration",
									"scope": 799,
									"src": "1480:53:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 306,
										"keyName": "account",
										"keyNameLocation": "1496:7:2",
										"keyType": {
											"id": 304,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1488:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1480:35:2",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 305,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1507:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 313,
									"mutability": "mutable",
									"name": "_allowances",
									"nameLocation": "1612:11:2",
									"nodeType": "VariableDeclaration",
									"scope": 799,
									"src": "1540:83:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 312,
										"keyName": "account",
										"keyNameLocation": "1556:7:2",
										"keyType": {
											"id": 308,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1548:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1540:63:2",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 311,
											"keyName": "spender",
											"keyNameLocation": "1583:7:2",
											"keyType": {
												"id": 309,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1575:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "1567:35:2",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 310,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1594:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 315,
									"mutability": "mutable",
									"name": "_totalSupply",
									"nameLocation": "1646:12:2",
									"nodeType": "VariableDeclaration",
									"scope": 799,
									"src": "1630:28:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 314,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1630:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 317,
									"mutability": "mutable",
									"name": "_name",
									"nameLocation": "1680:5:2",
									"nodeType": "VariableDeclaration",
									"scope": 799,
									"src": "1665:20:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 316,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1665:6:2",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 319,
									"mutability": "mutable",
									"name": "_symbol",
									"nameLocation": "1706:7:2",
									"nodeType": "VariableDeclaration",
									"scope": 799,
									"src": "1691:22:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 318,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1691:6:2",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 335,
										"nodeType": "Block",
										"src": "1952:57:2",
										"statements": [
											{
												"expression": {
													"id": 329,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 327,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 317,
														"src": "1962:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 328,
														"name": "name_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 322,
														"src": "1970:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1962:13:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 330,
												"nodeType": "ExpressionStatement",
												"src": "1962:13:2"
											},
											{
												"expression": {
													"id": 333,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 331,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 319,
														"src": "1985:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 332,
														"name": "symbol_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 324,
														"src": "1995:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1985:17:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 334,
												"nodeType": "ExpressionStatement",
												"src": "1985:17:2"
											}
										]
									},
									"documentation": {
										"id": 320,
										"nodeType": "StructuredDocumentation",
										"src": "1720:171:2",
										"text": " @dev Sets the values for {name} and {symbol}.\n All two of these values are immutable: they can only be set once during\n construction."
									},
									"id": 336,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 325,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 322,
												"mutability": "mutable",
												"name": "name_",
												"nameLocation": "1922:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 336,
												"src": "1908:19:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 321,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1908:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 324,
												"mutability": "mutable",
												"name": "symbol_",
												"nameLocation": "1943:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 336,
												"src": "1929:21:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 323,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1929:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1907:44:2"
									},
									"returnParameters": {
										"id": 326,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1952:0:2"
									},
									"scope": 799,
									"src": "1896:113:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										936
									],
									"body": {
										"id": 344,
										"nodeType": "Block",
										"src": "2134:29:2",
										"statements": [
											{
												"expression": {
													"id": 342,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 317,
													"src": "2151:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 341,
												"id": 343,
												"nodeType": "Return",
												"src": "2144:12:2"
											}
										]
									},
									"documentation": {
										"id": 337,
										"nodeType": "StructuredDocumentation",
										"src": "2015:54:2",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 345,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "2083:4:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 338,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2087:2:2"
									},
									"returnParameters": {
										"id": 341,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 340,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 345,
												"src": "2119:13:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 339,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2119:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2118:15:2"
									},
									"scope": 799,
									"src": "2074:89:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										942
									],
									"body": {
										"id": 353,
										"nodeType": "Block",
										"src": "2338:31:2",
										"statements": [
											{
												"expression": {
													"id": 351,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 319,
													"src": "2355:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 350,
												"id": 352,
												"nodeType": "Return",
												"src": "2348:14:2"
											}
										]
									},
									"documentation": {
										"id": 346,
										"nodeType": "StructuredDocumentation",
										"src": "2169:102:2",
										"text": " @dev Returns the symbol of the token, usually a shorter version of the\n name."
									},
									"functionSelector": "95d89b41",
									"id": 354,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "2285:6:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 347,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2291:2:2"
									},
									"returnParameters": {
										"id": 350,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 349,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 354,
												"src": "2323:13:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 348,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2323:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2322:15:2"
									},
									"scope": 799,
									"src": "2276:93:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										948
									],
									"body": {
										"id": 362,
										"nodeType": "Block",
										"src": "3058:26:2",
										"statements": [
											{
												"expression": {
													"hexValue": "3138",
													"id": 360,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3075:2:2",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_18_by_1",
														"typeString": "int_const 18"
													},
													"value": "18"
												},
												"functionReturnParameters": 359,
												"id": 361,
												"nodeType": "Return",
												"src": "3068:9:2"
											}
										]
									},
									"documentation": {
										"id": 355,
										"nodeType": "StructuredDocumentation",
										"src": "2375:622:2",
										"text": " @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the default value returned by this function, unless\n it's overridden.\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."
									},
									"functionSelector": "313ce567",
									"id": 363,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "3011:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 356,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3019:2:2"
									},
									"returnParameters": {
										"id": 359,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 358,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 363,
												"src": "3051:5:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 357,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "3051:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3050:7:2"
									},
									"scope": 799,
									"src": "3002:82:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										826
									],
									"body": {
										"id": 371,
										"nodeType": "Block",
										"src": "3205:36:2",
										"statements": [
											{
												"expression": {
													"id": 369,
													"name": "_totalSupply",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 315,
													"src": "3222:12:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 368,
												"id": 370,
												"nodeType": "Return",
												"src": "3215:19:2"
											}
										]
									},
									"documentation": {
										"id": 364,
										"nodeType": "StructuredDocumentation",
										"src": "3090:49:2",
										"text": " @dev See {IERC20-totalSupply}."
									},
									"functionSelector": "18160ddd",
									"id": 372,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "3153:11:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 365,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3164:2:2"
									},
									"returnParameters": {
										"id": 368,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 367,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 372,
												"src": "3196:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 366,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3196:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3195:9:2"
									},
									"scope": 799,
									"src": "3144:97:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										834
									],
									"body": {
										"id": 384,
										"nodeType": "Block",
										"src": "3373:42:2",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 380,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 307,
														"src": "3390:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 382,
													"indexExpression": {
														"id": 381,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 375,
														"src": "3400:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3390:18:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 379,
												"id": 383,
												"nodeType": "Return",
												"src": "3383:25:2"
											}
										]
									},
									"documentation": {
										"id": 373,
										"nodeType": "StructuredDocumentation",
										"src": "3247:47:2",
										"text": " @dev See {IERC20-balanceOf}."
									},
									"functionSelector": "70a08231",
									"id": 385,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "3308:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 376,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 375,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "3326:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 385,
												"src": "3318:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 374,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3318:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3317:17:2"
									},
									"returnParameters": {
										"id": 379,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 378,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 385,
												"src": "3364:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 377,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3364:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3363:9:2"
									},
									"scope": 799,
									"src": "3299:116:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										844
									],
									"body": {
										"id": 408,
										"nodeType": "Block",
										"src": "3685:103:2",
										"statements": [
											{
												"assignments": [
													396
												],
												"declarations": [
													{
														"constant": false,
														"id": 396,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "3703:5:2",
														"nodeType": "VariableDeclaration",
														"scope": 408,
														"src": "3695:13:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 395,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "3695:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 399,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 397,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 961,
														"src": "3711:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 398,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3711:12:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3695:28:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 401,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 396,
															"src": "3743:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 402,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 388,
															"src": "3750:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 403,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 390,
															"src": "3754:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 400,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 529,
														"src": "3733:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 404,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3733:27:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 405,
												"nodeType": "ExpressionStatement",
												"src": "3733:27:2"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 406,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3777:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 394,
												"id": 407,
												"nodeType": "Return",
												"src": "3770:11:2"
											}
										]
									},
									"documentation": {
										"id": 386,
										"nodeType": "StructuredDocumentation",
										"src": "3421:184:2",
										"text": " @dev See {IERC20-transfer}.\n Requirements:\n - `to` cannot be the zero address.\n - the caller must have a balance of at least `value`."
									},
									"functionSelector": "a9059cbb",
									"id": 409,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "3619:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 391,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 388,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3636:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 409,
												"src": "3628:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 387,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3628:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 390,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3648:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 409,
												"src": "3640:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 389,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3640:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3627:27:2"
									},
									"returnParameters": {
										"id": 394,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 393,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 409,
												"src": "3679:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 392,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3679:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3678:6:2"
									},
									"scope": 799,
									"src": "3610:178:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										854
									],
									"body": {
										"id": 425,
										"nodeType": "Block",
										"src": "3935:51:2",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 419,
															"name": "_allowances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 313,
															"src": "3952:11:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 421,
														"indexExpression": {
															"id": 420,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 412,
															"src": "3964:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "3952:18:2",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 423,
													"indexExpression": {
														"id": 422,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 414,
														"src": "3971:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3952:27:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 418,
												"id": 424,
												"nodeType": "Return",
												"src": "3945:34:2"
											}
										]
									},
									"documentation": {
										"id": 410,
										"nodeType": "StructuredDocumentation",
										"src": "3794:47:2",
										"text": " @dev See {IERC20-allowance}."
									},
									"functionSelector": "dd62ed3e",
									"id": 426,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "3855:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 415,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 412,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3873:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 426,
												"src": "3865:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 411,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3865:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 414,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3888:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 426,
												"src": "3880:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 413,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3880:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3864:32:2"
									},
									"returnParameters": {
										"id": 418,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 417,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 426,
												"src": "3926:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 416,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3926:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3925:9:2"
									},
									"scope": 799,
									"src": "3846:140:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										864
									],
									"body": {
										"id": 449,
										"nodeType": "Block",
										"src": "4372:107:2",
										"statements": [
											{
												"assignments": [
													437
												],
												"declarations": [
													{
														"constant": false,
														"id": 437,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "4390:5:2",
														"nodeType": "VariableDeclaration",
														"scope": 449,
														"src": "4382:13:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 436,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4382:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 440,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 438,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 961,
														"src": "4398:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 439,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4398:12:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4382:28:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 442,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 437,
															"src": "4429:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 443,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 429,
															"src": "4436:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 444,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 431,
															"src": "4445:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 441,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															690,
															750
														],
														"referencedDeclaration": 690,
														"src": "4420:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 445,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4420:31:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 446,
												"nodeType": "ExpressionStatement",
												"src": "4420:31:2"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 447,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4468:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 435,
												"id": 448,
												"nodeType": "Return",
												"src": "4461:11:2"
											}
										]
									},
									"documentation": {
										"id": 427,
										"nodeType": "StructuredDocumentation",
										"src": "3992:296:2",
										"text": " @dev See {IERC20-approve}.\n NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n `transferFrom`. This is semantically equivalent to an infinite approval.\n Requirements:\n - `spender` cannot be the zero address."
									},
									"functionSelector": "095ea7b3",
									"id": 450,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "4302:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 432,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 429,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4318:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 450,
												"src": "4310:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 428,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4310:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 431,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4335:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 450,
												"src": "4327:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 430,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4327:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4309:32:2"
									},
									"returnParameters": {
										"id": 435,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 434,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 450,
												"src": "4366:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 433,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4366:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4365:6:2"
									},
									"scope": 799,
									"src": "4293:186:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										876
									],
									"body": {
										"id": 481,
										"nodeType": "Block",
										"src": "5132:151:2",
										"statements": [
											{
												"assignments": [
													463
												],
												"declarations": [
													{
														"constant": false,
														"id": 463,
														"mutability": "mutable",
														"name": "spender",
														"nameLocation": "5150:7:2",
														"nodeType": "VariableDeclaration",
														"scope": 481,
														"src": "5142:15:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 462,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "5142:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 466,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 464,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 961,
														"src": "5160:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 465,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5160:12:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5142:30:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 468,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 453,
															"src": "5198:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 469,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 463,
															"src": "5204:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 470,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 457,
															"src": "5213:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 467,
														"name": "_spendAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 798,
														"src": "5182:15:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 471,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5182:37:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 472,
												"nodeType": "ExpressionStatement",
												"src": "5182:37:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 474,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 453,
															"src": "5239:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 475,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 455,
															"src": "5245:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 476,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 457,
															"src": "5249:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 473,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 529,
														"src": "5229:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 477,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5229:26:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 478,
												"nodeType": "ExpressionStatement",
												"src": "5229:26:2"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 479,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "5272:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 461,
												"id": 480,
												"nodeType": "Return",
												"src": "5265:11:2"
											}
										]
									},
									"documentation": {
										"id": 451,
										"nodeType": "StructuredDocumentation",
										"src": "4485:549:2",
										"text": " @dev See {IERC20-transferFrom}.\n Emits an {Approval} event indicating the updated allowance. This is not\n required by the EIP. See the note at the beginning of {ERC20}.\n NOTE: Does not update the allowance if the current allowance\n is the maximum `uint256`.\n Requirements:\n - `from` and `to` cannot be the zero address.\n - `from` must have a balance of at least `value`.\n - the caller must have allowance for ``from``'s tokens of at least\n `value`."
									},
									"functionSelector": "23b872dd",
									"id": 482,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "5048:12:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 458,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 453,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5069:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 482,
												"src": "5061:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 452,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5061:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 455,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5083:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 482,
												"src": "5075:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 454,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5075:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 457,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5095:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 482,
												"src": "5087:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 456,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5087:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5060:41:2"
									},
									"returnParameters": {
										"id": 461,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 460,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 482,
												"src": "5126:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 459,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5126:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5125:6:2"
									},
									"scope": 799,
									"src": "5039:244:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 528,
										"nodeType": "Block",
										"src": "5725:231:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 497,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 492,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 485,
														"src": "5739:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 495,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5755:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 494,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5747:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 493,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5747:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 496,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5747:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5739:18:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 506,
												"nodeType": "IfStatement",
												"src": "5735:86:2",
												"trueBody": {
													"id": 505,
													"nodeType": "Block",
													"src": "5759:62:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 501,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "5807:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 500,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "5799:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 499,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "5799:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 502,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5799:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 498,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 164,
																	"src": "5780:18:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 503,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5780:30:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 504,
															"nodeType": "RevertStatement",
															"src": "5773:37:2"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 512,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 507,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 487,
														"src": "5834:2:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 510,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5848:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 509,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5840:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 508,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5840:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 511,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5840:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5834:16:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 521,
												"nodeType": "IfStatement",
												"src": "5830:86:2",
												"trueBody": {
													"id": 520,
													"nodeType": "Block",
													"src": "5852:64:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 516,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "5902:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 515,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "5894:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 514,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "5894:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 517,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5894:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 513,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 169,
																	"src": "5873:20:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 518,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5873:32:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 519,
															"nodeType": "RevertStatement",
															"src": "5866:39:2"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 523,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 485,
															"src": "5933:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 524,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 487,
															"src": "5939:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 525,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 489,
															"src": "5943:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 522,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 606,
														"src": "5925:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 526,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5925:24:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 527,
												"nodeType": "ExpressionStatement",
												"src": "5925:24:2"
											}
										]
									},
									"documentation": {
										"id": 483,
										"nodeType": "StructuredDocumentation",
										"src": "5289:362:2",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 529,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nameLocation": "5665:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 490,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 485,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5683:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 529,
												"src": "5675:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 484,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5675:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 487,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5697:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 529,
												"src": "5689:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 486,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5689:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 489,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5709:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 529,
												"src": "5701:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 488,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5701:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5674:41:2"
									},
									"returnParameters": {
										"id": 491,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5725:0:2"
									},
									"scope": 799,
									"src": "5656:300:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 605,
										"nodeType": "Block",
										"src": "6346:1032:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 544,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 539,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 532,
														"src": "6360:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 542,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6376:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 541,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6368:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 540,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6368:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 543,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6368:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6360:18:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 576,
													"nodeType": "Block",
													"src": "6534:362:2",
													"statements": [
														{
															"assignments": [
																551
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 551,
																	"mutability": "mutable",
																	"name": "fromBalance",
																	"nameLocation": "6556:11:2",
																	"nodeType": "VariableDeclaration",
																	"scope": 576,
																	"src": "6548:19:2",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 550,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "6548:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 555,
															"initialValue": {
																"baseExpression": {
																	"id": 552,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 307,
																	"src": "6570:9:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 554,
																"indexExpression": {
																	"id": 553,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 532,
																	"src": "6580:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "6570:15:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "6548:37:2"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 558,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 556,
																	"name": "fromBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 551,
																	"src": "6603:11:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 557,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 536,
																	"src": "6617:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6603:19:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 566,
															"nodeType": "IfStatement",
															"src": "6599:115:2",
															"trueBody": {
																"id": 565,
																"nodeType": "Block",
																"src": "6624:90:2",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 560,
																					"name": "from",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 532,
																					"src": "6674:4:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 561,
																					"name": "fromBalance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 551,
																					"src": "6680:11:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 562,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 536,
																					"src": "6693:5:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 559,
																				"name": "ERC20InsufficientBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 159,
																				"src": "6649:24:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
																					"typeString": "function (address,uint256,uint256) pure"
																				}
																			},
																			"id": 563,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "6649:50:2",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 564,
																		"nodeType": "RevertStatement",
																		"src": "6642:57:2"
																	}
																]
															}
														},
														{
															"id": 575,
															"nodeType": "UncheckedBlock",
															"src": "6727:159:2",
															"statements": [
																{
																	"expression": {
																		"id": 573,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 567,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 307,
																				"src": "6834:9:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 569,
																			"indexExpression": {
																				"id": 568,
																				"name": "from",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 532,
																				"src": "6844:4:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "6834:15:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 572,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 570,
																				"name": "fromBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 551,
																				"src": "6852:11:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"id": 571,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 536,
																				"src": "6866:5:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "6852:19:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6834:37:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 574,
																	"nodeType": "ExpressionStatement",
																	"src": "6834:37:2"
																}
															]
														}
													]
												},
												"id": 577,
												"nodeType": "IfStatement",
												"src": "6356:540:2",
												"trueBody": {
													"id": 549,
													"nodeType": "Block",
													"src": "6380:148:2",
													"statements": [
														{
															"expression": {
																"id": 547,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 545,
																	"name": "_totalSupply",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 315,
																	"src": "6496:12:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"id": 546,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 536,
																	"src": "6512:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6496:21:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 548,
															"nodeType": "ExpressionStatement",
															"src": "6496:21:2"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 583,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 578,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 534,
														"src": "6910:2:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 581,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6924:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 580,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6916:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 579,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6916:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 582,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6916:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6910:16:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 597,
													"nodeType": "Block",
													"src": "7125:206:2",
													"statements": [
														{
															"id": 596,
															"nodeType": "UncheckedBlock",
															"src": "7139:182:2",
															"statements": [
																{
																	"expression": {
																		"id": 594,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 590,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 307,
																				"src": "7284:9:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 592,
																			"indexExpression": {
																				"id": 591,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 534,
																				"src": "7294:2:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "7284:13:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"id": 593,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 536,
																			"src": "7301:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "7284:22:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 595,
																	"nodeType": "ExpressionStatement",
																	"src": "7284:22:2"
																}
															]
														}
													]
												},
												"id": 598,
												"nodeType": "IfStatement",
												"src": "6906:425:2",
												"trueBody": {
													"id": 589,
													"nodeType": "Block",
													"src": "6928:191:2",
													"statements": [
														{
															"id": 588,
															"nodeType": "UncheckedBlock",
															"src": "6942:167:2",
															"statements": [
																{
																	"expression": {
																		"id": 586,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 584,
																			"name": "_totalSupply",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 315,
																			"src": "7073:12:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "-=",
																		"rightHandSide": {
																			"id": 585,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 536,
																			"src": "7089:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "7073:21:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 587,
																	"nodeType": "ExpressionStatement",
																	"src": "7073:21:2"
																}
															]
														}
													]
												}
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 600,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 532,
															"src": "7355:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 601,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 534,
															"src": "7361:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 602,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 536,
															"src": "7365:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 599,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 811,
														"src": "7346:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 603,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7346:25:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 604,
												"nodeType": "EmitStatement",
												"src": "7341:30:2"
											}
										]
									},
									"documentation": {
										"id": 530,
										"nodeType": "StructuredDocumentation",
										"src": "5962:304:2",
										"text": " @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n this function.\n Emits a {Transfer} event."
									},
									"id": 606,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_update",
									"nameLocation": "6280:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 537,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 532,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "6296:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 606,
												"src": "6288:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 531,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6288:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 534,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "6310:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 606,
												"src": "6302:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 533,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6302:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 536,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "6322:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 606,
												"src": "6314:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 535,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6314:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6287:41:2"
									},
									"returnParameters": {
										"id": 538,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6346:0:2"
									},
									"scope": 799,
									"src": "6271:1107:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 638,
										"nodeType": "Block",
										"src": "7777:152:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 619,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 614,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 609,
														"src": "7791:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 617,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7810:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 616,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "7802:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 615,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "7802:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 618,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7802:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "7791:21:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 628,
												"nodeType": "IfStatement",
												"src": "7787:91:2",
												"trueBody": {
													"id": 627,
													"nodeType": "Block",
													"src": "7814:64:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 623,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "7864:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 622,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "7856:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 621,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "7856:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 624,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "7856:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 620,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 169,
																	"src": "7835:20:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 625,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7835:32:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 626,
															"nodeType": "RevertStatement",
															"src": "7828:39:2"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 632,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7903:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 631,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "7895:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 630,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "7895:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 633,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7895:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 634,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 609,
															"src": "7907:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 635,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 611,
															"src": "7916:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 629,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 606,
														"src": "7887:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 636,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7887:35:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 637,
												"nodeType": "ExpressionStatement",
												"src": "7887:35:2"
											}
										]
									},
									"documentation": {
										"id": 607,
										"nodeType": "StructuredDocumentation",
										"src": "7384:332:2",
										"text": " @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n Relies on the `_update` mechanism\n Emits a {Transfer} event with `from` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 639,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "7730:5:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 612,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 609,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "7744:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 639,
												"src": "7736:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 608,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7736:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 611,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "7761:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 639,
												"src": "7753:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 610,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7753:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7735:32:2"
									},
									"returnParameters": {
										"id": 613,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7777:0:2"
									},
									"scope": 799,
									"src": "7721:208:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 671,
										"nodeType": "Block",
										"src": "8303:150:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 652,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 647,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 642,
														"src": "8317:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 650,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8336:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 649,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "8328:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 648,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "8328:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 651,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8328:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "8317:21:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 661,
												"nodeType": "IfStatement",
												"src": "8313:89:2",
												"trueBody": {
													"id": 660,
													"nodeType": "Block",
													"src": "8340:62:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 656,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "8388:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 655,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "8380:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 654,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "8380:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 657,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "8380:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 653,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 164,
																	"src": "8361:18:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 658,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8361:30:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 659,
															"nodeType": "RevertStatement",
															"src": "8354:37:2"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 663,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 642,
															"src": "8419:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 666,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8436:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 665,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8428:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 664,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8428:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 667,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8428:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 668,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 644,
															"src": "8440:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 662,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 606,
														"src": "8411:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 669,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8411:35:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 670,
												"nodeType": "ExpressionStatement",
												"src": "8411:35:2"
											}
										]
									},
									"documentation": {
										"id": 640,
										"nodeType": "StructuredDocumentation",
										"src": "7935:307:2",
										"text": " @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n Relies on the `_update` mechanism.\n Emits a {Transfer} event with `to` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead"
									},
									"id": 672,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "8256:5:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 645,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 642,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "8270:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 672,
												"src": "8262:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 641,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8262:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 644,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8287:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 672,
												"src": "8279:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 643,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8279:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8261:32:2"
									},
									"returnParameters": {
										"id": 646,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8303:0:2"
									},
									"scope": 799,
									"src": "8247:206:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 689,
										"nodeType": "Block",
										"src": "9063:54:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 683,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 675,
															"src": "9082:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 684,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 677,
															"src": "9089:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 685,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 679,
															"src": "9098:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "74727565",
															"id": 686,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9105:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 682,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															690,
															750
														],
														"referencedDeclaration": 750,
														"src": "9073:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
															"typeString": "function (address,address,uint256,bool)"
														}
													},
													"id": 687,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9073:37:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 688,
												"nodeType": "ExpressionStatement",
												"src": "9073:37:2"
											}
										]
									},
									"documentation": {
										"id": 673,
										"nodeType": "StructuredDocumentation",
										"src": "8459:525:2",
										"text": " @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address.\n Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument."
									},
									"id": 690,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "8998:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 680,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 675,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "9015:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 690,
												"src": "9007:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 674,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9007:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 677,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "9030:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 690,
												"src": "9022:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 676,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9022:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 679,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "9047:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 690,
												"src": "9039:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 678,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9039:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9006:47:2"
									},
									"returnParameters": {
										"id": 681,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9063:0:2"
									},
									"scope": 799,
									"src": "8989:128:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 749,
										"nodeType": "Block",
										"src": "10047:334:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 707,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 702,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 693,
														"src": "10061:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 705,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10078:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 704,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "10070:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 703,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "10070:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 706,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "10070:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "10061:19:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 716,
												"nodeType": "IfStatement",
												"src": "10057:89:2",
												"trueBody": {
													"id": 715,
													"nodeType": "Block",
													"src": "10082:64:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 711,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10132:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 710,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "10124:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 709,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "10124:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 712,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "10124:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 708,
																	"name": "ERC20InvalidApprover",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 183,
																	"src": "10103:20:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 713,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10103:32:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 714,
															"nodeType": "RevertStatement",
															"src": "10096:39:2"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 722,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 717,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 695,
														"src": "10159:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 720,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10178:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 719,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "10170:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 718,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "10170:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 721,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "10170:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "10159:21:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 731,
												"nodeType": "IfStatement",
												"src": "10155:90:2",
												"trueBody": {
													"id": 730,
													"nodeType": "Block",
													"src": "10182:63:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 726,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10231:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 725,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "10223:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 724,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "10223:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 727,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "10223:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 723,
																	"name": "ERC20InvalidSpender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 188,
																	"src": "10203:19:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 728,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10203:31:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 729,
															"nodeType": "RevertStatement",
															"src": "10196:38:2"
														}
													]
												}
											},
											{
												"expression": {
													"id": 738,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 732,
																"name": "_allowances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 313,
																"src": "10254:11:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 735,
															"indexExpression": {
																"id": 733,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 693,
																"src": "10266:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "10254:18:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 736,
														"indexExpression": {
															"id": 734,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 695,
															"src": "10273:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "10254:27:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 737,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 697,
														"src": "10284:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10254:35:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 739,
												"nodeType": "ExpressionStatement",
												"src": "10254:35:2"
											},
											{
												"condition": {
													"id": 740,
													"name": "emitEvent",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 699,
													"src": "10303:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 748,
												"nodeType": "IfStatement",
												"src": "10299:76:2",
												"trueBody": {
													"id": 747,
													"nodeType": "Block",
													"src": "10314:61:2",
													"statements": [
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 742,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 693,
																		"src": "10342:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 743,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 695,
																		"src": "10349:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 744,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 697,
																		"src": "10358:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 741,
																	"name": "Approval",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 820,
																	"src": "10333:8:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256)"
																	}
																},
																"id": 745,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10333:31:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 746,
															"nodeType": "EmitStatement",
															"src": "10328:36:2"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 691,
										"nodeType": "StructuredDocumentation",
										"src": "9123:821:2",
										"text": " @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n `Approval` event during `transferFrom` operations.\n Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n true using the following override:\n ```\n function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     super._approve(owner, spender, value, true);\n }\n ```\n Requirements are the same as {_approve}."
									},
									"id": 750,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "9958:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 700,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 693,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "9975:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 750,
												"src": "9967:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 692,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9967:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 695,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "9990:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 750,
												"src": "9982:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 694,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9982:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 697,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10007:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 750,
												"src": "9999:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 696,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9999:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 699,
												"mutability": "mutable",
												"name": "emitEvent",
												"nameLocation": "10019:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 750,
												"src": "10014:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 698,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "10014:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9966:63:2"
									},
									"returnParameters": {
										"id": 701,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10047:0:2"
									},
									"scope": 799,
									"src": "9949:432:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 797,
										"nodeType": "Block",
										"src": "10752:388:2",
										"statements": [
											{
												"assignments": [
													761
												],
												"declarations": [
													{
														"constant": false,
														"id": 761,
														"mutability": "mutable",
														"name": "currentAllowance",
														"nameLocation": "10770:16:2",
														"nodeType": "VariableDeclaration",
														"scope": 797,
														"src": "10762:24:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 760,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "10762:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 766,
												"initialValue": {
													"arguments": [
														{
															"id": 763,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 753,
															"src": "10799:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 764,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 755,
															"src": "10806:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 762,
														"name": "allowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 426,
														"src": "10789:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view returns (uint256)"
														}
													},
													"id": 765,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10789:25:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10762:52:2"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 773,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 767,
														"name": "currentAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 761,
														"src": "10828:16:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 770,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "10853:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	},
																	"typeName": {
																		"id": 769,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "10853:7:2",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	}
																],
																"id": 768,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "10848:4:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 771,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10848:13:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint256",
																"typeString": "type(uint256)"
															}
														},
														"id": 772,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "10862:3:2",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "10848:17:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10828:37:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 796,
												"nodeType": "IfStatement",
												"src": "10824:310:2",
												"trueBody": {
													"id": 795,
													"nodeType": "Block",
													"src": "10867:267:2",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 776,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 774,
																	"name": "currentAllowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 761,
																	"src": "10885:16:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 775,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 757,
																	"src": "10904:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "10885:24:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 784,
															"nodeType": "IfStatement",
															"src": "10881:130:2",
															"trueBody": {
																"id": 783,
																"nodeType": "Block",
																"src": "10911:100:2",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 778,
																					"name": "spender",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 755,
																					"src": "10963:7:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 779,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 761,
																					"src": "10972:16:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 780,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 757,
																					"src": "10990:5:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 777,
																				"name": "ERC20InsufficientAllowance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 178,
																				"src": "10936:26:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
																					"typeString": "function (address,uint256,uint256) pure"
																				}
																			},
																			"id": 781,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "10936:60:2",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 782,
																		"nodeType": "RevertStatement",
																		"src": "10929:67:2"
																	}
																]
															}
														},
														{
															"id": 794,
															"nodeType": "UncheckedBlock",
															"src": "11024:100:2",
															"statements": [
																{
																	"expression": {
																		"arguments": [
																			{
																				"id": 786,
																				"name": "owner",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 753,
																				"src": "11061:5:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 787,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 755,
																				"src": "11068:7:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 790,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 788,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 761,
																					"src": "11077:16:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"id": 789,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 757,
																					"src": "11096:5:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "11077:24:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"hexValue": "66616c7365",
																				"id": 791,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "bool",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "11103:5:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				},
																				"value": "false"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			],
																			"id": 785,
																			"name": "_approve",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [
																				690,
																				750
																			],
																			"referencedDeclaration": 750,
																			"src": "11052:8:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
																				"typeString": "function (address,address,uint256,bool)"
																			}
																		},
																		"id": 792,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "11052:57:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 793,
																	"nodeType": "ExpressionStatement",
																	"src": "11052:57:2"
																}
															]
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 751,
										"nodeType": "StructuredDocumentation",
										"src": "10387:271:2",
										"text": " @dev Updates `owner` s allowance for `spender` based on spent `value`.\n Does not update the allowance value in case of infinite allowance.\n Revert if not enough allowance is available.\n Does not emit an {Approval} event."
									},
									"id": 798,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_spendAllowance",
									"nameLocation": "10672:15:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 758,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 753,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "10696:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 798,
												"src": "10688:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 752,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10688:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 755,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "10711:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 798,
												"src": "10703:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 754,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10703:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 757,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10728:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 798,
												"src": "10720:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 756,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10720:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10687:47:2"
									},
									"returnParameters": {
										"id": 759,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10752:0:2"
									},
									"scope": 799,
									"src": "10663:477:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 800,
							"src": "1401:9741:2",
							"usedErrors": [
								159,
								164,
								169,
								178,
								183,
								188
							],
							"usedEvents": [
								811,
								820
							]
						}
					],
					"src": "105:11038:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							877
						]
					},
					"id": 878,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 801,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "106:24:3"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 802,
								"nodeType": "StructuredDocumentation",
								"src": "132:70:3",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 877,
							"linearizedBaseContracts": [
								877
							],
							"name": "IERC20",
							"nameLocation": "213:6:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 803,
										"nodeType": "StructuredDocumentation",
										"src": "226:158:3",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 811,
									"name": "Transfer",
									"nameLocation": "395:8:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 810,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 805,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "420:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 811,
												"src": "404:20:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 804,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "404:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 807,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "442:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 811,
												"src": "426:18:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 806,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "426:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 809,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "454:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 811,
												"src": "446:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 808,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "446:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "403:57:3"
									},
									"src": "389:72:3"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 812,
										"nodeType": "StructuredDocumentation",
										"src": "467:148:3",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 820,
									"name": "Approval",
									"nameLocation": "626:8:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 819,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 814,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "651:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 820,
												"src": "635:21:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 813,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "635:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 816,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "674:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 820,
												"src": "658:23:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 815,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "658:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 818,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "691:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 820,
												"src": "683:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 817,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "683:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "634:63:3"
									},
									"src": "620:78:3"
								},
								{
									"documentation": {
										"id": 821,
										"nodeType": "StructuredDocumentation",
										"src": "704:65:3",
										"text": " @dev Returns the value of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 826,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "783:11:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 822,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "794:2:3"
									},
									"returnParameters": {
										"id": 825,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 824,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 826,
												"src": "820:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 823,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "820:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "819:9:3"
									},
									"scope": 877,
									"src": "774:55:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 827,
										"nodeType": "StructuredDocumentation",
										"src": "835:71:3",
										"text": " @dev Returns the value of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 834,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "920:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 830,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 829,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "938:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 834,
												"src": "930:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 828,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "930:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "929:17:3"
									},
									"returnParameters": {
										"id": 833,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 832,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 834,
												"src": "970:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 831,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "970:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "969:9:3"
									},
									"scope": 877,
									"src": "911:68:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 835,
										"nodeType": "StructuredDocumentation",
										"src": "985:213:3",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 844,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1212:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 840,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 837,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1229:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 844,
												"src": "1221:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 836,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1221:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 839,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1241:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 844,
												"src": "1233:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 838,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1233:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1220:27:3"
									},
									"returnParameters": {
										"id": 843,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 842,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 844,
												"src": "1266:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 841,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1266:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1265:6:3"
									},
									"scope": 877,
									"src": "1203:69:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 845,
										"nodeType": "StructuredDocumentation",
										"src": "1278:264:3",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 854,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1556:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 850,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 847,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1574:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 854,
												"src": "1566:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 846,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1566:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 849,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1589:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 854,
												"src": "1581:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 848,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1581:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1565:32:3"
									},
									"returnParameters": {
										"id": 853,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 852,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 854,
												"src": "1621:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 851,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1621:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1620:9:3"
									},
									"scope": 877,
									"src": "1547:83:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 855,
										"nodeType": "StructuredDocumentation",
										"src": "1636:667:3",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 864,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2317:7:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 860,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 857,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2333:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 864,
												"src": "2325:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 856,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2325:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 859,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2350:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 864,
												"src": "2342:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 858,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2342:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2324:32:3"
									},
									"returnParameters": {
										"id": 863,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 862,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 864,
												"src": "2375:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 861,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2375:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2374:6:3"
									},
									"scope": 877,
									"src": "2308:73:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 865,
										"nodeType": "StructuredDocumentation",
										"src": "2387:297:3",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 876,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2698:12:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 872,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 867,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2719:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 876,
												"src": "2711:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 866,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2711:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 869,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2733:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 876,
												"src": "2725:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 868,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2725:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 871,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2745:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 876,
												"src": "2737:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 870,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2737:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2710:41:3"
									},
									"returnParameters": {
										"id": 875,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 874,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 876,
												"src": "2770:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 873,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2770:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2769:6:3"
									},
									"scope": 877,
									"src": "2689:87:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 878,
							"src": "203:2575:3",
							"usedErrors": [],
							"usedEvents": [
								811,
								820
							]
						}
					],
					"src": "106:2673:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol",
					"exportedSymbols": {
						"Context": [
							979
						],
						"ERC20": [
							799
						],
						"ERC20Burnable": [
							923
						]
					},
					"id": 924,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 879,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "124:24:4"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
							"file": "../ERC20.sol",
							"id": 881,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 924,
							"sourceUnit": 800,
							"src": "150:35:4",
							"symbolAliases": [
								{
									"foreign": {
										"id": 880,
										"name": "ERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 799,
										"src": "158:5:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../../../utils/Context.sol",
							"id": 883,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 924,
							"sourceUnit": 980,
							"src": "186:51:4",
							"symbolAliases": [
								{
									"foreign": {
										"id": 882,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 979,
										"src": "194:7:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 885,
										"name": "Context",
										"nameLocations": [
											"483:7:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 979,
										"src": "483:7:4"
									},
									"id": 886,
									"nodeType": "InheritanceSpecifier",
									"src": "483:7:4"
								},
								{
									"baseName": {
										"id": 887,
										"name": "ERC20",
										"nameLocations": [
											"492:5:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 799,
										"src": "492:5:4"
									},
									"id": 888,
									"nodeType": "InheritanceSpecifier",
									"src": "492:5:4"
								}
							],
							"canonicalName": "ERC20Burnable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 884,
								"nodeType": "StructuredDocumentation",
								"src": "239:208:4",
								"text": " @dev Extension of {ERC20} that allows token holders to destroy both their own\n tokens and those that they have an allowance for, in a way that can be\n recognized off-chain (via event analysis)."
							},
							"fullyImplemented": true,
							"id": 923,
							"linearizedBaseContracts": [
								923,
								799,
								189,
								949,
								877,
								979
							],
							"name": "ERC20Burnable",
							"nameLocation": "466:13:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 900,
										"nodeType": "Block",
										"src": "662:43:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 895,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 961,
																"src": "678:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 896,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "678:12:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 897,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 891,
															"src": "692:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 894,
														"name": "_burn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 672,
														"src": "672:5:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 898,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "672:26:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 899,
												"nodeType": "ExpressionStatement",
												"src": "672:26:4"
											}
										]
									},
									"documentation": {
										"id": 889,
										"nodeType": "StructuredDocumentation",
										"src": "504:109:4",
										"text": " @dev Destroys a `value` amount of tokens from the caller.\n See {ERC20-_burn}."
									},
									"functionSelector": "42966c68",
									"id": 901,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "burn",
									"nameLocation": "627:4:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 892,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 891,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "640:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 901,
												"src": "632:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 890,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "632:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "631:15:4"
									},
									"returnParameters": {
										"id": 893,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "662:0:4"
									},
									"scope": 923,
									"src": "618:87:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 921,
										"nodeType": "Block",
										"src": "1086:93:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 910,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 904,
															"src": "1112:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 911,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 961,
																"src": "1121:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 912,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1121:12:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 913,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 906,
															"src": "1135:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 909,
														"name": "_spendAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 798,
														"src": "1096:15:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 914,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1096:45:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 915,
												"nodeType": "ExpressionStatement",
												"src": "1096:45:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 917,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 904,
															"src": "1157:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 918,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 906,
															"src": "1166:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 916,
														"name": "_burn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 672,
														"src": "1151:5:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 919,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1151:21:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 920,
												"nodeType": "ExpressionStatement",
												"src": "1151:21:4"
											}
										]
									},
									"documentation": {
										"id": 902,
										"nodeType": "StructuredDocumentation",
										"src": "711:305:4",
										"text": " @dev Destroys a `value` amount of tokens from `account`, deducting from\n the caller's allowance.\n See {ERC20-_burn} and {ERC20-allowance}.\n Requirements:\n - the caller must have allowance for ``accounts``'s tokens of at least\n `value`."
									},
									"functionSelector": "79cc6790",
									"id": 922,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "burnFrom",
									"nameLocation": "1030:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 907,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 904,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1047:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 922,
												"src": "1039:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 903,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1039:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 906,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1064:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 922,
												"src": "1056:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 905,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1056:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1038:32:4"
									},
									"returnParameters": {
										"id": 908,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1086:0:4"
									},
									"scope": 923,
									"src": "1021:158:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								}
							],
							"scope": 924,
							"src": "448:733:4",
							"usedErrors": [
								159,
								164,
								169,
								178,
								183,
								188
							],
							"usedEvents": [
								811,
								820
							]
						}
					],
					"src": "124:1058:4"
				},
				"id": 4
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
					"exportedSymbols": {
						"IERC20": [
							877
						],
						"IERC20Metadata": [
							949
						]
					},
					"id": 950,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 925,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "125:24:5"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "../IERC20.sol",
							"id": 927,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 950,
							"sourceUnit": 878,
							"src": "151:37:5",
							"symbolAliases": [
								{
									"foreign": {
										"id": 926,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 877,
										"src": "159:6:5",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 929,
										"name": "IERC20",
										"nameLocations": [
											"305:6:5"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 877,
										"src": "305:6:5"
									},
									"id": 930,
									"nodeType": "InheritanceSpecifier",
									"src": "305:6:5"
								}
							],
							"canonicalName": "IERC20Metadata",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 928,
								"nodeType": "StructuredDocumentation",
								"src": "190:86:5",
								"text": " @dev Interface for the optional metadata functions from the ERC20 standard."
							},
							"fullyImplemented": false,
							"id": 949,
							"linearizedBaseContracts": [
								949,
								877
							],
							"name": "IERC20Metadata",
							"nameLocation": "287:14:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 931,
										"nodeType": "StructuredDocumentation",
										"src": "318:54:5",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 936,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "386:4:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 932,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "390:2:5"
									},
									"returnParameters": {
										"id": 935,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 934,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 936,
												"src": "416:13:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 933,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "416:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "415:15:5"
									},
									"scope": 949,
									"src": "377:54:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 937,
										"nodeType": "StructuredDocumentation",
										"src": "437:56:5",
										"text": " @dev Returns the symbol of the token."
									},
									"functionSelector": "95d89b41",
									"id": 942,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "507:6:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 938,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "513:2:5"
									},
									"returnParameters": {
										"id": 941,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 940,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 942,
												"src": "539:13:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 939,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "539:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "538:15:5"
									},
									"scope": 949,
									"src": "498:56:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 943,
										"nodeType": "StructuredDocumentation",
										"src": "560:65:5",
										"text": " @dev Returns the decimals places of the token."
									},
									"functionSelector": "313ce567",
									"id": 948,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "639:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 944,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "647:2:5"
									},
									"returnParameters": {
										"id": 947,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 946,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 948,
												"src": "673:5:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 945,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "673:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "672:7:5"
									},
									"scope": 949,
									"src": "630:50:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 950,
							"src": "277:405:5",
							"usedErrors": [],
							"usedEvents": [
								811,
								820
							]
						}
					],
					"src": "125:558:5"
				},
				"id": 5
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							979
						]
					},
					"id": 980,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 951,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:6"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 952,
								"nodeType": "StructuredDocumentation",
								"src": "127:496:6",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 979,
							"linearizedBaseContracts": [
								979
							],
							"name": "Context",
							"nameLocation": "642:7:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 960,
										"nodeType": "Block",
										"src": "718:34:6",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 957,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "735:3:6",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 958,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "739:6:6",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "735:10:6",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 956,
												"id": 959,
												"nodeType": "Return",
												"src": "728:17:6"
											}
										]
									},
									"id": 961,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "665:10:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 953,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "675:2:6"
									},
									"returnParameters": {
										"id": 956,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 955,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 961,
												"src": "709:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 954,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "709:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "708:9:6"
									},
									"scope": 979,
									"src": "656:96:6",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 969,
										"nodeType": "Block",
										"src": "825:32:6",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 966,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "842:3:6",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 967,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "846:4:6",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "842:8:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 965,
												"id": 968,
												"nodeType": "Return",
												"src": "835:15:6"
											}
										]
									},
									"id": 970,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "767:8:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 962,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "775:2:6"
									},
									"returnParameters": {
										"id": 965,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 964,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 970,
												"src": "809:14:6",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 963,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "809:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "808:16:6"
									},
									"scope": 979,
									"src": "758:99:6",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 977,
										"nodeType": "Block",
										"src": "935:25:6",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 975,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "952:1:6",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 974,
												"id": 976,
												"nodeType": "Return",
												"src": "945:8:6"
											}
										]
									},
									"id": 978,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "872:20:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 971,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "892:2:6"
									},
									"returnParameters": {
										"id": 974,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 973,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 978,
												"src": "926:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 972,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "926:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "925:9:6"
									},
									"scope": 979,
									"src": "863:97:6",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 980,
							"src": "624:338:6",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "101:862:6"
				},
				"id": 6
			},
			"contracts/Erc20MNTK.sol": {
				"ast": {
					"absolutePath": "contracts/Erc20MNTK.sol",
					"exportedSymbols": {
						"Context": [
							979
						],
						"ERC20": [
							799
						],
						"ERC20Burnable": [
							923
						],
						"IERC20": [
							877
						],
						"IERC20Errors": [
							189
						],
						"IERC20Metadata": [
							949
						],
						"MyNewToken": [
							1135
						],
						"Ownable": [
							147
						]
					},
					"id": 1136,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 981,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "32:24:7"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
							"id": 982,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1136,
							"sourceUnit": 800,
							"src": "58:55:7",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol",
							"file": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol",
							"id": 983,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1136,
							"sourceUnit": 924,
							"src": "114:74:7",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
							"file": "@openzeppelin/contracts/access/Ownable.sol",
							"id": 984,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1136,
							"sourceUnit": 148,
							"src": "189:52:7",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 985,
										"name": "ERC20",
										"nameLocations": [
											"266:5:7"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 799,
										"src": "266:5:7"
									},
									"id": 986,
									"nodeType": "InheritanceSpecifier",
									"src": "266:5:7"
								},
								{
									"baseName": {
										"id": 987,
										"name": "ERC20Burnable",
										"nameLocations": [
											"273:13:7"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 923,
										"src": "273:13:7"
									},
									"id": 988,
									"nodeType": "InheritanceSpecifier",
									"src": "273:13:7"
								},
								{
									"baseName": {
										"id": 989,
										"name": "Ownable",
										"nameLocations": [
											"288:7:7"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 147,
										"src": "288:7:7"
									},
									"id": 990,
									"nodeType": "InheritanceSpecifier",
									"src": "288:7:7"
								}
							],
							"canonicalName": "MyNewToken",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 1135,
							"linearizedBaseContracts": [
								1135,
								147,
								923,
								799,
								189,
								949,
								877,
								979
							],
							"name": "MyNewToken",
							"nameLocation": "252:10:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"functionSelector": "bea1dcf8",
									"id": 992,
									"mutability": "mutable",
									"name": "taxCollector",
									"nameLocation": "317:12:7",
									"nodeType": "VariableDeclaration",
									"scope": 1135,
									"src": "302:27:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 991,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "302:7:7",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "2d44ff23",
									"id": 994,
									"mutability": "mutable",
									"name": "currentTaxDeducted",
									"nameLocation": "350:18:7",
									"nodeType": "VariableDeclaration",
									"scope": 1135,
									"src": "335:33:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 993,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "335:7:7",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "ee33bc45",
									"id": 996,
									"mutability": "mutable",
									"name": "grossTaxCollected",
									"nameLocation": "389:17:7",
									"nodeType": "VariableDeclaration",
									"scope": 1135,
									"src": "374:32:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 995,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "374:7:7",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "ac3c93cf",
									"id": 1002,
									"mutability": "mutable",
									"name": "_taxRecord",
									"nameLocation": "467:10:7",
									"nodeType": "VariableDeclaration",
									"scope": 1135,
									"src": "413:64:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 1001,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 997,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "421:7:7",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "413:47:7",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 1000,
											"keyName": "",
											"keyNameLocation": "-1:-1:-1",
											"keyType": {
												"id": 998,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "440:7:7",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "432:27:7",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 999,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "451:7:7",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 1034,
										"nodeType": "Block",
										"src": "623:103:7",
										"statements": [
											{
												"expression": {
													"id": 1020,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1018,
														"name": "taxCollector",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 992,
														"src": "633:12:7",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1019,
														"name": "_taxCollector",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1008,
														"src": "648:13:7",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "633:28:7",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1021,
												"nodeType": "ExpressionStatement",
												"src": "633:28:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1023,
															"name": "initialOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1004,
															"src": "677:12:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1031,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1024,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1006,
																"src": "690:6:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1029,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"hexValue": "3130",
																			"id": 1025,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "700:2:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10_by_1",
																				"typeString": "int_const 10"
																			},
																			"value": "10"
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "**",
																		"rightExpression": {
																			"components": [
																				{
																					"arguments": [],
																					"expression": {
																						"argumentTypes": [],
																						"id": 1026,
																						"name": "decimals",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [
																							1074
																						],
																						"referencedDeclaration": 1074,
																						"src": "706:8:7",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_internal_view$__$returns$_t_uint8_$",
																							"typeString": "function () view returns (uint8)"
																						}
																					},
																					"id": 1027,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "706:10:7",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint8",
																						"typeString": "uint8"
																					}
																				}
																			],
																			"id": 1028,
																			"isConstant": false,
																			"isInlineArray": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "TupleExpression",
																			"src": "705:12:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint8",
																				"typeString": "uint8"
																			}
																		},
																		"src": "700:17:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 1030,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "699:19:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "690:28:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1022,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 639,
														"src": "671:5:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1032,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "671:48:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1033,
												"nodeType": "ExpressionStatement",
												"src": "671:48:7"
											}
										]
									},
									"id": 1035,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"hexValue": "4d794e6577546f6b656e",
													"id": 1011,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "567:12:7",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_579ceea9ef08c69b137b9abaa64b4ca16bf007efb2753364acf6ef1302d67f78",
														"typeString": "literal_string \"MyNewToken\""
													},
													"value": "MyNewToken"
												},
												{
													"hexValue": "4d4e544b",
													"id": 1012,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "581:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_dc622026cfca4f1677879b14c8a0558fedc623418429926a6e797e3d184732fa",
														"typeString": "literal_string \"MNTK\""
													},
													"value": "MNTK"
												}
											],
											"id": 1013,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 1010,
												"name": "ERC20",
												"nameLocations": [
													"561:5:7"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 799,
												"src": "561:5:7"
											},
											"nodeType": "ModifierInvocation",
											"src": "561:27:7"
										},
										{
											"arguments": [
												{
													"id": 1015,
													"name": "initialOwner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1004,
													"src": "605:12:7",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"id": 1016,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 1014,
												"name": "Ownable",
												"nameLocations": [
													"597:7:7"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 147,
												"src": "597:7:7"
											},
											"nodeType": "ModifierInvocation",
											"src": "597:21:7"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1009,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1004,
												"mutability": "mutable",
												"name": "initialOwner",
												"nameLocation": "503:12:7",
												"nodeType": "VariableDeclaration",
												"scope": 1035,
												"src": "495:20:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1003,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "495:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1006,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "522:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1035,
												"src": "517:11:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1005,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "517:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1008,
												"mutability": "mutable",
												"name": "_taxCollector",
												"nameLocation": "538:13:7",
												"nodeType": "VariableDeclaration",
												"scope": 1035,
												"src": "530:21:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1007,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "530:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "494:58:7"
									},
									"returnParameters": {
										"id": 1017,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "623:0:7"
									},
									"scope": 1135,
									"src": "483:243:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1064,
										"nodeType": "Block",
										"src": "791:123:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1048,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1045,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1037,
																"src": "809:2:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"id": 1046,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "815:3:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 1047,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "819:6:7",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "815:10:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "809:16:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4d696e74696e6720616c6c6f776564206f6e6c7920746f206f776e6572",
															"id": 1049,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "827:31:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_a29bafda5c460178656603e71f46c7a7e2678699659809e503dcaef8e54424ae",
																"typeString": "literal_string \"Minting allowed only to owner\""
															},
															"value": "Minting allowed only to owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_a29bafda5c460178656603e71f46c7a7e2678699659809e503dcaef8e54424ae",
																"typeString": "literal_string \"Minting allowed only to owner\""
															}
														],
														"id": 1044,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "801:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1050,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "801:58:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1051,
												"nodeType": "ExpressionStatement",
												"src": "801:58:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1053,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1037,
															"src": "875:2:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1061,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1054,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1039,
																"src": "878:6:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1059,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"hexValue": "3130",
																			"id": 1055,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "888:2:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10_by_1",
																				"typeString": "int_const 10"
																			},
																			"value": "10"
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "**",
																		"rightExpression": {
																			"components": [
																				{
																					"arguments": [],
																					"expression": {
																						"argumentTypes": [],
																						"id": 1056,
																						"name": "decimals",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [
																							1074
																						],
																						"referencedDeclaration": 1074,
																						"src": "894:8:7",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_internal_view$__$returns$_t_uint8_$",
																							"typeString": "function () view returns (uint8)"
																						}
																					},
																					"id": 1057,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "894:10:7",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint8",
																						"typeString": "uint8"
																					}
																				}
																			],
																			"id": 1058,
																			"isConstant": false,
																			"isInlineArray": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "TupleExpression",
																			"src": "893:12:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint8",
																				"typeString": "uint8"
																			}
																		},
																		"src": "888:17:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 1060,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "887:19:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "878:28:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1052,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 639,
														"src": "869:5:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1062,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "869:38:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1063,
												"nodeType": "ExpressionStatement",
												"src": "869:38:7"
											}
										]
									},
									"functionSelector": "40c10f19",
									"id": 1065,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1042,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1041,
												"name": "onlyOwner",
												"nameLocations": [
													"781:9:7"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "781:9:7"
											},
											"nodeType": "ModifierInvocation",
											"src": "781:9:7"
										}
									],
									"name": "mint",
									"nameLocation": "741:4:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1040,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1037,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "754:2:7",
												"nodeType": "VariableDeclaration",
												"scope": 1065,
												"src": "746:10:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1036,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "746:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1039,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "766:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1065,
												"src": "758:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1038,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "758:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "745:28:7"
									},
									"returnParameters": {
										"id": 1043,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "791:0:7"
									},
									"scope": 1135,
									"src": "732:182:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										363
									],
									"body": {
										"id": 1073,
										"nodeType": "Block",
										"src": "982:25:7",
										"statements": [
											{
												"expression": {
													"hexValue": "39",
													"id": 1071,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "999:1:7",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_9_by_1",
														"typeString": "int_const 9"
													},
													"value": "9"
												},
												"functionReturnParameters": 1070,
												"id": 1072,
												"nodeType": "Return",
												"src": "992:8:7"
											}
										]
									},
									"functionSelector": "313ce567",
									"id": 1074,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "929:8:7",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1067,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "959:8:7"
									},
									"parameters": {
										"id": 1066,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "937:2:7"
									},
									"returnParameters": {
										"id": 1070,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1069,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1074,
												"src": "976:5:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 1068,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "976:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "975:7:7"
									},
									"scope": 1135,
									"src": "920:87:7",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										409
									],
									"body": {
										"id": 1133,
										"nodeType": "Block",
										"src": "1093:424:7",
										"statements": [
											{
												"expression": {
													"id": 1091,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1084,
														"name": "currentTaxDeducted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 994,
														"src": "1103:18:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1090,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1087,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"hexValue": "35",
																		"id": 1085,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1125:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_5_by_1",
																			"typeString": "int_const 5"
																		},
																		"value": "5"
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 1086,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1078,
																		"src": "1129:5:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "1125:9:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1088,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1124:11:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"hexValue": "313030",
															"id": 1089,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1136:3:7",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_100_by_1",
																"typeString": "int_const 100"
															},
															"value": "100"
														},
														"src": "1124:15:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1103:36:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1092,
												"nodeType": "ExpressionStatement",
												"src": "1103:36:7"
											},
											{
												"assignments": [
													1094
												],
												"declarations": [
													{
														"constant": false,
														"id": 1094,
														"mutability": "mutable",
														"name": "transferAmount",
														"nameLocation": "1154:14:7",
														"nodeType": "VariableDeclaration",
														"scope": 1133,
														"src": "1149:19:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1093,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "1149:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1098,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1097,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1095,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1078,
														"src": "1171:5:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"id": 1096,
														"name": "currentTaxDeducted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 994,
														"src": "1179:18:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1171:26:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1149:48:7"
											},
											{
												"expression": {
													"id": 1103,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1099,
														"name": "grossTaxCollected",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 996,
														"src": "1207:17:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1102,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1100,
															"name": "grossTaxCollected",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 996,
															"src": "1227:17:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"id": 1101,
															"name": "currentTaxDeducted",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 994,
															"src": "1247:18:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "1227:38:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1207:58:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1104,
												"nodeType": "ExpressionStatement",
												"src": "1207:58:7"
											},
											{
												"assignments": [
													1106
												],
												"declarations": [
													{
														"constant": false,
														"id": 1106,
														"mutability": "mutable",
														"name": "_taxCollector",
														"nameLocation": "1283:13:7",
														"nodeType": "VariableDeclaration",
														"scope": 1133,
														"src": "1275:21:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1105,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "1275:7:7",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1108,
												"initialValue": {
													"id": 1107,
													"name": "taxCollector",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 992,
													"src": "1299:12:7",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1275:36:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1110,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1331:3:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1111,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1335:6:7",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1331:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1112,
															"name": "taxCollector",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 992,
															"src": "1343:12:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1113,
															"name": "currentTaxDeducted",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 994,
															"src": "1357:18:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1109,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 529,
														"src": "1321:9:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1114,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1321:55:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1115,
												"nodeType": "ExpressionStatement",
												"src": "1321:55:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1117,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1396:3:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1118,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1400:6:7",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1396:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1119,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1076,
															"src": "1408:2:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1120,
															"name": "transferAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1094,
															"src": "1412:14:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1116,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 529,
														"src": "1386:9:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1121,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1386:41:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1122,
												"nodeType": "ExpressionStatement",
												"src": "1386:41:7"
											},
											{
												"expression": {
													"id": 1129,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 1123,
																"name": "_taxRecord",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1002,
																"src": "1437:10:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 1126,
															"indexExpression": {
																"id": 1124,
																"name": "_taxCollector",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1106,
																"src": "1448:13:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "1437:25:7",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1127,
														"indexExpression": {
															"id": 1125,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1076,
															"src": "1463:2:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1437:29:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 1128,
														"name": "currentTaxDeducted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 994,
														"src": "1470:18:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1437:51:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1130,
												"nodeType": "ExpressionStatement",
												"src": "1437:51:7"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 1131,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "1505:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 1083,
												"id": 1132,
												"nodeType": "Return",
												"src": "1498:11:7"
											}
										]
									},
									"functionSelector": "a9059cbb",
									"id": 1134,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1022:8:7",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1080,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "1070:8:7"
									},
									"parameters": {
										"id": 1079,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1076,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1039:2:7",
												"nodeType": "VariableDeclaration",
												"scope": 1134,
												"src": "1031:10:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1075,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1031:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1078,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1048:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 1134,
												"src": "1043:10:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1077,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1043:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1030:24:7"
									},
									"returnParameters": {
										"id": 1083,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1082,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1134,
												"src": "1087:4:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1081,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1087:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1086:6:7"
									},
									"scope": 1135,
									"src": "1013:504:7",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								}
							],
							"scope": 1136,
							"src": "243:1276:7",
							"usedErrors": [
								13,
								18,
								159,
								164,
								169,
								178,
								183,
								188
							],
							"usedEvents": [
								24,
								811,
								820
							]
						}
					],
					"src": "32:1487:7"
				},
				"id": 7
			}
		}
	}
}