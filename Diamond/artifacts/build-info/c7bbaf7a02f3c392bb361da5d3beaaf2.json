{
	"id": "c7bbaf7a02f3c392bb361da5d3beaaf2",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.9",
	"solcLongVersion": "0.8.9+commit.e5eed63a",
	"input": {
		"language": "Solidity",
		"sources": {
			"Diamond/DiamondCounter.sol": {
				"content": "//SPDX-License-Identifier:MIT\npragma solidity ^0.8.0;\n\ncontract DiamondCounter {\n    uint256 private i;\n    bytes4 public functionSelector;\n    constructor() {\n        functionSelector = bytes4(keccak256(\"increment\"));\n    }\n    function increment() public {\n        i++;\n    }\n\n    function get() public view returns (uint256) {\n        return i;\n    }\n     \n}\n\ncontract Diamond {\n    bytes32 constant DIAMOND_STORAGE_POSITION =\n        keccak256(\"diamond.standard.diamond.storage\");\n\n    struct FacetCut {\n        address facetAddress;\n        bytes4 functionSelectors;\n    }\n\n    struct FacetAddressAndPosition {\n        address facetAddress;\n        uint256 functionSelectorPosition;\n    }\n\n    struct FacetFunctionSelectors {\n        bytes4 functionSelectors;\n        uint256 facetAddressPosition;\n    }\n    uint256 public id;\n\n    function diamondCut(bytes4 _bytes, address _address) public {\n        require(\n            diamondStorage().selectorToFacetAndPosition[_bytes].facetAddress ==\n                address(0),\n            \"facet already added\"\n        );\n        id = id + 1;\n        FacetCut memory newFacetCut;\n        FacetAddressAndPosition memory newFacetAddressAndPosition;\n        FacetFunctionSelectors memory newFacetFunctionSelectors;\n        newFacetCut.facetAddress = _address;\n        newFacetCut.functionSelectors = _bytes;\n        newFacetAddressAndPosition.facetAddress = _address;\n        newFacetAddressAndPosition.functionSelectorPosition = id;\n        newFacetFunctionSelectors.functionSelectors = _bytes;\n        newFacetFunctionSelectors.facetAddressPosition = id;\n        diamondStorage().selectorToFacetAndPosition[_bytes] = newFacetAddressAndPosition;\n        diamondStorage().facetFunctionSelectors[_address] = newFacetFunctionSelectors;\n        diamondStorage().facetAddresses.push(_address);\n        diamondStorage().contractOwner = msg.sender;\n    }\n    \n    struct DiamondStorage {\n        mapping(bytes4 => FacetAddressAndPosition) selectorToFacetAndPosition;\n        mapping(address => FacetFunctionSelectors) facetFunctionSelectors;\n        address[] facetAddresses;\n        address contractOwner;\n    }\n\n    function diamondStorage()\n        internal\n        pure\n        returns (DiamondStorage storage ds)\n    {\n        bytes32 position = DIAMOND_STORAGE_POSITION;\n        assembly {\n            ds.slot := position\n        }\n    }\n\n    fallback() external payable {\n        address facet = diamondStorage().selectorToFacetAndPosition[msg.sig].facetAddress;\n        require(facet != address(0), \"Diamond doesn't exist\");\n\n        assembly {\n            calldatacopy(0,0,calldatasize())\n            let result := delegatecall(gas(), facet, 0, calldatasize(), 0, 0)\n            returndatacopy(0, 0, returndatasize())\n            switch result \n            case 0 {\n                revert (0, returndatasize())\n            } default {\n                return (0, returndatasize())\n            }\n        }\n     }\n    receive() external payable { }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 900
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"Diamond/DiamondCounter.sol": {
				"Diamond": {
					"abi": [
						{
							"stateMutability": "payable",
							"type": "fallback"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "_bytes",
									"type": "bytes4"
								},
								{
									"internalType": "address",
									"name": "_address",
									"type": "address"
								}
							],
							"name": "diamondCut",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "id",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"stateMutability": "payable",
							"type": "receive"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"Diamond/DiamondCounter.sol\":363:2994  contract Diamond {... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"Diamond/DiamondCounter.sol\":363:2994  contract Diamond {... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0xaf640d0f\n      eq\n      tag_3\n      jumpi\n      dup1\n      0xe3fddac4\n      eq\n      tag_4\n      jumpi\n      jump(tag_2)\n    tag_1:\n      jumpi(tag_2, calldatasize)\n      stop\n    tag_2:\n        /* \"Diamond/DiamondCounter.sol\":2425:2438  address facet */\n      0x00\n        /* \"Diamond/DiamondCounter.sol\":2485:2492  msg.sig */\n      dup1\n      calldataload\n      not(sub(shl(0xe0, 0x01), 0x01))\n      and\n        /* \"Diamond/DiamondCounter.sol\":2441:2493  diamondStorage().selectorToFacetAndPosition[msg.sig] */\n      dup2\n      mstore\n        /* \"Diamond/DiamondCounter.sol\":438:483  keccak256(\"diamond.standard.diamond.storage\") */\n      0xc8fcad8db84d3cc18b4c41d551ea0ee66dd599cde068d998e57d5e09332c131c\n        /* \"Diamond/DiamondCounter.sol\":2441:2493  diamondStorage().selectorToFacetAndPosition[msg.sig] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"Diamond/DiamondCounter.sol\":2441:2506  diamondStorage().selectorToFacetAndPosition[msg.sig].facetAddress */\n      sload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup1\n        /* \"Diamond/DiamondCounter.sol\":2516:2569  require(facet != address(0), \"Diamond doesn't exist\") */\n      tag_11\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":216:218   */\n      0x20\n        /* \"Diamond/DiamondCounter.sol\":2516:2569  require(facet != address(0), \"Diamond doesn't exist\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":198:219   */\n      mstore\n        /* \"#utility.yul\":255:257   */\n      0x15\n        /* \"#utility.yul\":235:253   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":228:258   */\n      mstore\n        /* \"#utility.yul\":294:317   */\n      0x4469616d6f6e6420646f65736e27742065786973740000000000000000000000\n        /* \"#utility.yul\":274:292   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":267:318   */\n      mstore\n        /* \"#utility.yul\":335:353   */\n      0x64\n      add\n        /* \"Diamond/DiamondCounter.sol\":2516:2569  require(facet != address(0), \"Diamond doesn't exist\") */\n    tag_12:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_11:\n        /* \"Diamond/DiamondCounter.sol\":2620:2634  calldatasize() */\n      calldatasize\n        /* \"Diamond/DiamondCounter.sol\":2618:2619  0 */\n      0x00\n        /* \"Diamond/DiamondCounter.sol\":2616:2617  0 */\n      dup1\n        /* \"Diamond/DiamondCounter.sol\":2603:2635  calldatacopy(0,0,calldatasize()) */\n      calldatacopy\n        /* \"Diamond/DiamondCounter.sol\":2711:2712  0 */\n      0x00\n        /* \"Diamond/DiamondCounter.sol\":2708:2709  0 */\n      dup1\n        /* \"Diamond/DiamondCounter.sol\":2692:2706  calldatasize() */\n      calldatasize\n        /* \"Diamond/DiamondCounter.sol\":2689:2690  0 */\n      0x00\n        /* \"Diamond/DiamondCounter.sol\":2682:2687  facet */\n      dup5\n        /* \"Diamond/DiamondCounter.sol\":2675:2680  gas() */\n      gas\n        /* \"Diamond/DiamondCounter.sol\":2662:2713  delegatecall(gas(), facet, 0, calldatasize(), 0, 0) */\n      delegatecall\n        /* \"Diamond/DiamondCounter.sol\":2747:2763  returndatasize() */\n      returndatasize\n        /* \"Diamond/DiamondCounter.sol\":2744:2745  0 */\n      0x00\n        /* \"Diamond/DiamondCounter.sol\":2741:2742  0 */\n      dup1\n        /* \"Diamond/DiamondCounter.sol\":2726:2764  returndatacopy(0, 0, returndatasize()) */\n      returndatacopy\n        /* \"Diamond/DiamondCounter.sol\":2784:2790  result */\n      dup1\n        /* \"Diamond/DiamondCounter.sol\":2804:2871  case 0 {... */\n      dup1\n      iszero\n      tag_15\n      jumpi\n        /* \"Diamond/DiamondCounter.sol\":2909:2925  returndatasize() */\n      returndatasize\n        /* \"Diamond/DiamondCounter.sol\":2906:2907  0 */\n      0x00\n        /* \"Diamond/DiamondCounter.sol\":2898:2926  return (0, returndatasize()) */\n      return\n        /* \"Diamond/DiamondCounter.sol\":2804:2871  case 0 {... */\n    tag_15:\n        /* \"Diamond/DiamondCounter.sol\":2840:2856  returndatasize() */\n      returndatasize\n        /* \"Diamond/DiamondCounter.sol\":2837:2838  0 */\n      0x00\n        /* \"Diamond/DiamondCounter.sol\":2829:2857  revert (0, returndatasize()) */\n      revert\n        /* \"Diamond/DiamondCounter.sol\":813:830  uint256 public id */\n    tag_3:\n      callvalue\n      dup1\n      iszero\n      tag_16\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_16:\n      pop\n      tag_17\n      sload(0x00)\n      dup2\n      jump\n    tag_17:\n      mload(0x40)\n        /* \"#utility.yul\":510:535   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":498:500   */\n      0x20\n        /* \"#utility.yul\":483:501   */\n      add\n        /* \"Diamond/DiamondCounter.sol\":813:830  uint256 public id */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Diamond/DiamondCounter.sol\":837:1892  function diamondCut(bytes4 _bytes, address _address) public {... */\n    tag_4:\n      callvalue\n      dup1\n      iszero\n      tag_21\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_21:\n      pop\n      tag_22\n      tag_23\n      calldatasize\n      0x04\n      tag_24\n      jump\t// in\n    tag_23:\n      tag_25\n      jump\t// in\n    tag_22:\n      stop\n    tag_25:\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"Diamond/DiamondCounter.sol\":928:979  diamondStorage().selectorToFacetAndPosition[_bytes] */\n      dup3\n      and\n        /* \"Diamond/DiamondCounter.sol\":1020:1021  0 */\n      0x00\n        /* \"Diamond/DiamondCounter.sol\":928:979  diamondStorage().selectorToFacetAndPosition[_bytes] */\n      swap1\n      dup2\n      mstore\n        /* \"Diamond/DiamondCounter.sol\":438:483  keccak256(\"diamond.standard.diamond.storage\") */\n      0xc8fcad8db84d3cc18b4c41d551ea0ee66dd599cde068d998e57d5e09332c131c\n        /* \"Diamond/DiamondCounter.sol\":928:979  diamondStorage().selectorToFacetAndPosition[_bytes] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"Diamond/DiamondCounter.sol\":928:992  diamondStorage().selectorToFacetAndPosition[_bytes].facetAddress */\n      sload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Diamond/DiamondCounter.sol\":928:1022  diamondStorage().selectorToFacetAndPosition[_bytes].facetAddress ==... */\n      iszero\n        /* \"Diamond/DiamondCounter.sol\":907:1067  require(... */\n      tag_29\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":1290:1292   */\n      0x20\n        /* \"Diamond/DiamondCounter.sol\":907:1067  require(... */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":1272:1293   */\n      mstore\n        /* \"#utility.yul\":1329:1331   */\n      0x13\n        /* \"#utility.yul\":1309:1327   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":1302:1332   */\n      mstore\n        /* \"#utility.yul\":1368:1389   */\n      0x666163657420616c726561647920616464656400000000000000000000000000\n        /* \"#utility.yul\":1348:1366   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":1341:1390   */\n      mstore\n        /* \"#utility.yul\":1407:1425   */\n      0x64\n      add\n        /* \"Diamond/DiamondCounter.sol\":907:1067  require(... */\n      tag_12\n        /* \"#utility.yul\":1088:1431   */\n      jump\n        /* \"Diamond/DiamondCounter.sol\":907:1067  require(... */\n    tag_29:\n        /* \"Diamond/DiamondCounter.sol\":1082:1084  id */\n      sload(0x00)\n        /* \"Diamond/DiamondCounter.sol\":1082:1088  id + 1 */\n      tag_32\n      swap1\n        /* \"Diamond/DiamondCounter.sol\":1087:1088  1 */\n      0x01\n        /* \"Diamond/DiamondCounter.sol\":1082:1088  id + 1 */\n      tag_33\n      jump\t// in\n    tag_32:\n        /* \"Diamond/DiamondCounter.sol\":1077:1079  id */\n      0x00\n        /* \"Diamond/DiamondCounter.sol\":1077:1088  id = id + 1 */\n      dup2\n      dup2\n      sstore\n      0x40\n      dup1\n      mload\n      dup1\n      dup3\n      add\n      dup3\n      mstore\n      dup3\n      dup2\n      mstore\n      0x20\n      dup1\n      dup3\n      add\n      dup5\n      dup2\n      mstore\n      dup4\n      mload\n      dup1\n      dup6\n      add\n      dup6\n      mstore\n      dup6\n      dup2\n      mstore\n      dup1\n      dup4\n      add\n      dup7\n      dup2\n      mstore\n      dup6\n      mload\n      dup1\n      dup8\n      add\n      dup8\n      mstore\n        /* \"Diamond/DiamondCounter.sol\":1267:1302  newFacetCut.facetAddress = _address */\n      0xffffffffffffffffffffffffffffffffffffffff\n      swap10\n      dup11\n      and\n      swap6\n      dup7\n      swap1\n      mstore\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"Diamond/DiamondCounter.sol\":1312:1350  newFacetCut.functionSelectors = _bytes */\n      swap11\n      swap1\n      swap11\n      and\n      swap3\n      dup4\n      swap1\n      mstore\n        /* \"Diamond/DiamondCounter.sol\":1360:1410  newFacetAddressAndPosition.facetAddress = _address */\n      dup5\n      dup3\n      mstore\n        /* \"Diamond/DiamondCounter.sol\":1420:1476  newFacetAddressAndPosition.functionSelectorPosition = id */\n      dup8\n      dup2\n      mstore\n        /* \"Diamond/DiamondCounter.sol\":1486:1538  newFacetFunctionSelectors.functionSelectors = _bytes */\n      dup3\n      dup11\n      mstore\n      dup10\n      dup5\n      add\n        /* \"Diamond/DiamondCounter.sol\":1548:1599  newFacetFunctionSelectors.facetAddressPosition = id */\n      swap8\n      dup9\n      mstore\n        /* \"Diamond/DiamondCounter.sol\":1609:1660  diamondStorage().selectorToFacetAndPosition[_bytes] */\n      swap2\n      dup7\n      mstore\n        /* \"Diamond/DiamondCounter.sol\":438:483  keccak256(\"diamond.standard.diamond.storage\") */\n      0xc8fcad8db84d3cc18b4c41d551ea0ee66dd599cde068d998e57d5e09332c131c\n        /* \"Diamond/DiamondCounter.sol\":1609:1660  diamondStorage().selectorToFacetAndPosition[_bytes] */\n      dup4\n      mstore\n      dup5\n      dup7\n      keccak256\n        /* \"Diamond/DiamondCounter.sol\":1609:1689  diamondStorage().selectorToFacetAndPosition[_bytes] = newFacetAddressAndPosition */\n      swap1\n      mload\n      dup2\n      sload\n      swap9\n      and\n      0xffffffffffffffffffffffff0000000000000000000000000000000000000000\n      swap9\n      dup10\n      and\n      or\n      dup2\n      sstore\n      swap1\n      mload\n      0x01\n      swap2\n      dup3\n      add\n      sstore\n        /* \"Diamond/DiamondCounter.sol\":1699:1748  diamondStorage().facetFunctionSelectors[_address] */\n      dup3\n      dup6\n      mstore\n        /* \"Diamond/DiamondCounter.sol\":1699:1738  diamondStorage().facetFunctionSelectors */\n      0xc8fcad8db84d3cc18b4c41d551ea0ee66dd599cde068d998e57d5e09332c131d\n        /* \"Diamond/DiamondCounter.sol\":1699:1748  diamondStorage().facetFunctionSelectors[_address] */\n      swap1\n      swap2\n      mstore\n      swap2\n      dup4\n      keccak256\n        /* \"Diamond/DiamondCounter.sol\":1699:1776  diamondStorage().facetFunctionSelectors[_address] = newFacetFunctionSelectors */\n      swap6\n      mload\n      dup7\n      sload\n      0xe0\n      swap2\n      swap1\n      swap2\n      shr\n      not(0xffffffff)\n      swap1\n      swap2\n      and\n      or\n      dup7\n      sstore\n      swap3\n      mload\n      swap5\n      dup2\n      add\n      swap5\n      swap1\n      swap5\n      sstore\n        /* \"Diamond/DiamondCounter.sol\":1786:1817  diamondStorage().facetAddresses */\n      0xc8fcad8db84d3cc18b4c41d551ea0ee66dd599cde068d998e57d5e09332c131e\n        /* \"Diamond/DiamondCounter.sol\":1786:1832  diamondStorage().facetAddresses.push(_address) */\n      dup1\n      sload\n      swap5\n      dup6\n      add\n      dup2\n      sstore\n      swap1\n      mstore\n      0xb5c239a29faf02594141bbc5e6982a9b85ba2b4d59c3ed3baaf4cb8e5e11cbef\n      swap1\n      swap3\n      add\n      dup1\n      sload\n      dup3\n      and\n      swap1\n      swap3\n      or\n      swap1\n      swap2\n      sstore\n        /* \"Diamond/DiamondCounter.sol\":1842:1872  diamondStorage().contractOwner */\n      0xc8fcad8db84d3cc18b4c41d551ea0ee66dd599cde068d998e57d5e09332c131f\n        /* \"Diamond/DiamondCounter.sol\":1842:1885  diamondStorage().contractOwner = msg.sender */\n      dup1\n      sload\n      swap1\n      swap2\n      and\n        /* \"Diamond/DiamondCounter.sol\":1875:1885  msg.sender */\n      caller\n        /* \"Diamond/DiamondCounter.sol\":1842:1885  diamondStorage().contractOwner = msg.sender */\n      or\n      swap1\n      sstore\n        /* \"Diamond/DiamondCounter.sol\":837:1892  function diamondCut(bytes4 _bytes, address _address) public {... */\n      jump\t// out\n        /* \"#utility.yul\":546:1083   */\n    tag_24:\n        /* \"#utility.yul\":613:619   */\n      0x00\n        /* \"#utility.yul\":621:627   */\n      dup1\n        /* \"#utility.yul\":674:676   */\n      0x40\n        /* \"#utility.yul\":662:671   */\n      dup4\n        /* \"#utility.yul\":653:660   */\n      dup6\n        /* \"#utility.yul\":649:672   */\n      sub\n        /* \"#utility.yul\":645:677   */\n      slt\n        /* \"#utility.yul\":642:694   */\n      iszero\n      tag_49\n      jumpi\n        /* \"#utility.yul\":690:691   */\n      0x00\n        /* \"#utility.yul\":687:688   */\n      dup1\n        /* \"#utility.yul\":680:692   */\n      revert\n        /* \"#utility.yul\":642:694   */\n    tag_49:\n        /* \"#utility.yul\":729:738   */\n      dup3\n        /* \"#utility.yul\":716:739   */\n      calldataload\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"#utility.yul\":772:777   */\n      dup2\n        /* \"#utility.yul\":768:846   */\n      and\n        /* \"#utility.yul\":761:766   */\n      dup2\n        /* \"#utility.yul\":758:847   */\n      eq\n        /* \"#utility.yul\":748:865   */\n      tag_50\n      jumpi\n        /* \"#utility.yul\":861:862   */\n      0x00\n        /* \"#utility.yul\":858:859   */\n      dup1\n        /* \"#utility.yul\":851:863   */\n      revert\n        /* \"#utility.yul\":748:865   */\n    tag_50:\n        /* \"#utility.yul\":884:889   */\n      swap2\n      pop\n        /* \"#utility.yul\":941:943   */\n      0x20\n        /* \"#utility.yul\":926:944   */\n      dup4\n      add\n        /* \"#utility.yul\":913:945   */\n      calldataload\n        /* \"#utility.yul\":989:1031   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":976:1032   */\n      dup2\n      and\n        /* \"#utility.yul\":964:1033   */\n      dup2\n      eq\n        /* \"#utility.yul\":954:1051   */\n      tag_51\n      jumpi\n        /* \"#utility.yul\":1047:1048   */\n      0x00\n        /* \"#utility.yul\":1044:1045   */\n      dup1\n        /* \"#utility.yul\":1037:1049   */\n      revert\n        /* \"#utility.yul\":954:1051   */\n    tag_51:\n        /* \"#utility.yul\":1070:1077   */\n      dup1\n        /* \"#utility.yul\":1060:1077   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":546:1083   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1436:1718   */\n    tag_33:\n        /* \"#utility.yul\":1476:1479   */\n      0x00\n        /* \"#utility.yul\":1507:1508   */\n      dup3\n        /* \"#utility.yul\":1503:1509   */\n      not\n        /* \"#utility.yul\":1500:1501   */\n      dup3\n        /* \"#utility.yul\":1497:1510   */\n      gt\n        /* \"#utility.yul\":1494:1687   */\n      iszero\n      tag_54\n      jumpi\n        /* \"#utility.yul\":1543:1620   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":1540:1541   */\n      0x00\n        /* \"#utility.yul\":1533:1621   */\n      mstore\n        /* \"#utility.yul\":1644:1648   */\n      0x11\n        /* \"#utility.yul\":1641:1642   */\n      0x04\n        /* \"#utility.yul\":1634:1649   */\n      mstore\n        /* \"#utility.yul\":1672:1676   */\n      0x24\n        /* \"#utility.yul\":1669:1670   */\n      0x00\n        /* \"#utility.yul\":1662:1677   */\n      revert\n        /* \"#utility.yul\":1494:1687   */\n    tag_54:\n      pop\n        /* \"#utility.yul\":1703:1712   */\n      add\n      swap1\n        /* \"#utility.yul\":1436:1718   */\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220b2a55a1f0e57fa1235c2394be18ae68b54dbd681e0968bbff81b6bc62b357c4464736f6c63430008090033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50610458806100206000396000f3fe60806040526004361061002d5760003560e01c8063af640d0f146100f9578063e3fddac41461012157610034565b3661003457005b600080356001600160e01b03191681527fc8fcad8db84d3cc18b4c41d551ea0ee66dd599cde068d998e57d5e09332c131c602052604090205473ffffffffffffffffffffffffffffffffffffffff16806100d55760405162461bcd60e51b815260206004820152601560248201527f4469616d6f6e6420646f65736e2774206578697374000000000000000000000060448201526064015b60405180910390fd5b3660008037600080366000845af43d6000803e8080156100f4573d6000f35b3d6000fd5b34801561010557600080fd5b5061010f60005481565b60405190815260200160405180910390f35b34801561012d57600080fd5b5061014161013c366004610384565b610143565b005b6001600160e01b0319821660009081527fc8fcad8db84d3cc18b4c41d551ea0ee66dd599cde068d998e57d5e09332c131c602052604090205473ffffffffffffffffffffffffffffffffffffffff16156101df5760405162461bcd60e51b815260206004820152601360248201527f666163657420616c72656164792061646465640000000000000000000000000060448201526064016100cc565b6000546101ed9060016103e3565b60008181556040805180820182528281526020808201848152835180850185528581528083018681528551808701875273ffffffffffffffffffffffffffffffffffffffff998a16958690526001600160e01b03199a909a1692839052848252878152828a528984019788529186527fc8fcad8db84d3cc18b4c41d551ea0ee66dd599cde068d998e57d5e09332c131c83528486209051815498167fffffffffffffffffffffffff000000000000000000000000000000000000000098891617815590516001918201558285527fc8fcad8db84d3cc18b4c41d551ea0ee66dd599cde068d998e57d5e09332c131d9091529183209551865460e09190911c63ffffffff199091161786559251948101949094557fc8fcad8db84d3cc18b4c41d551ea0ee66dd599cde068d998e57d5e09332c131e8054948501815590527fb5c239a29faf02594141bbc5e6982a9b85ba2b4d59c3ed3baaf4cb8e5e11cbef909201805482169092179091557fc8fcad8db84d3cc18b4c41d551ea0ee66dd599cde068d998e57d5e09332c131f805490911633179055565b6000806040838503121561039757600080fd5b82356001600160e01b0319811681146103af57600080fd5b9150602083013573ffffffffffffffffffffffffffffffffffffffff811681146103d857600080fd5b809150509250929050565b6000821982111561041d577f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b50019056fea2646970667358221220b2a55a1f0e57fa1235c2394be18ae68b54dbd681e0968bbff81b6bc62b357c4464736f6c63430008090033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x458 DUP1 PUSH2 0x20 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x2D JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xAF640D0F EQ PUSH2 0xF9 JUMPI DUP1 PUSH4 0xE3FDDAC4 EQ PUSH2 0x121 JUMPI PUSH2 0x34 JUMP JUMPDEST CALLDATASIZE PUSH2 0x34 JUMPI STOP JUMPDEST PUSH1 0x0 DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND DUP2 MSTORE PUSH32 0xC8FCAD8DB84D3CC18B4C41D551EA0EE66DD599CDE068D998E57D5E09332C131C PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP1 PUSH2 0xD5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4469616D6F6E6420646F65736E27742065786973740000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST CALLDATASIZE PUSH1 0x0 DUP1 CALLDATACOPY PUSH1 0x0 DUP1 CALLDATASIZE PUSH1 0x0 DUP5 GAS DELEGATECALL RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY DUP1 DUP1 ISZERO PUSH2 0xF4 JUMPI RETURNDATASIZE PUSH1 0x0 RETURN JUMPDEST RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x105 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x10F PUSH1 0x0 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x12D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x141 PUSH2 0x13C CALLDATASIZE PUSH1 0x4 PUSH2 0x384 JUMP JUMPDEST PUSH2 0x143 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH32 0xC8FCAD8DB84D3CC18B4C41D551EA0EE66DD599CDE068D998E57D5E09332C131C PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND ISZERO PUSH2 0x1DF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x666163657420616C726561647920616464656400000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xCC JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x1ED SWAP1 PUSH1 0x1 PUSH2 0x3E3 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 SSTORE PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD DUP3 MSTORE DUP3 DUP2 MSTORE PUSH1 0x20 DUP1 DUP3 ADD DUP5 DUP2 MSTORE DUP4 MLOAD DUP1 DUP6 ADD DUP6 MSTORE DUP6 DUP2 MSTORE DUP1 DUP4 ADD DUP7 DUP2 MSTORE DUP6 MLOAD DUP1 DUP8 ADD DUP8 MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP10 DUP11 AND SWAP6 DUP7 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT SWAP11 SWAP1 SWAP11 AND SWAP3 DUP4 SWAP1 MSTORE DUP5 DUP3 MSTORE DUP8 DUP2 MSTORE DUP3 DUP11 MSTORE DUP10 DUP5 ADD SWAP8 DUP9 MSTORE SWAP2 DUP7 MSTORE PUSH32 0xC8FCAD8DB84D3CC18B4C41D551EA0EE66DD599CDE068D998E57D5E09332C131C DUP4 MSTORE DUP5 DUP7 KECCAK256 SWAP1 MLOAD DUP2 SLOAD SWAP9 AND PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 SWAP9 DUP10 AND OR DUP2 SSTORE SWAP1 MLOAD PUSH1 0x1 SWAP2 DUP3 ADD SSTORE DUP3 DUP6 MSTORE PUSH32 0xC8FCAD8DB84D3CC18B4C41D551EA0EE66DD599CDE068D998E57D5E09332C131D SWAP1 SWAP2 MSTORE SWAP2 DUP4 KECCAK256 SWAP6 MLOAD DUP7 SLOAD PUSH1 0xE0 SWAP2 SWAP1 SWAP2 SHR PUSH4 0xFFFFFFFF NOT SWAP1 SWAP2 AND OR DUP7 SSTORE SWAP3 MLOAD SWAP5 DUP2 ADD SWAP5 SWAP1 SWAP5 SSTORE PUSH32 0xC8FCAD8DB84D3CC18B4C41D551EA0EE66DD599CDE068D998E57D5E09332C131E DUP1 SLOAD SWAP5 DUP6 ADD DUP2 SSTORE SWAP1 MSTORE PUSH32 0xB5C239A29FAF02594141BBC5E6982A9B85BA2B4D59C3ED3BAAF4CB8E5E11CBEF SWAP1 SWAP3 ADD DUP1 SLOAD DUP3 AND SWAP1 SWAP3 OR SWAP1 SWAP2 SSTORE PUSH32 0xC8FCAD8DB84D3CC18B4C41D551EA0EE66DD599CDE068D998E57D5E09332C131F DUP1 SLOAD SWAP1 SWAP2 AND CALLER OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x397 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0x3AF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND DUP2 EQ PUSH2 0x3D8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x41D JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP ADD SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB2 0xA5 GAS 0x1F 0xE JUMPI STATICCALL SLT CALLDATALOAD 0xC2 CODECOPY 0x4B 0xE1 DUP11 0xE6 DUP12 SLOAD 0xDB 0xD6 DUP2 0xE0 SWAP7 DUP12 0xBF 0xF8 SHL PUSH12 0xC62B357C4464736F6C634300 ADDMOD MULMOD STOP CALLER ",
							"sourceMap": "363:2631:0:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_216": {
									"entryPoint": null,
									"id": 216,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_220": {
									"entryPoint": null,
									"id": 220,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@diamondCut_163": {
									"entryPoint": 323,
									"id": 163,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@diamondStorage_191": {
									"entryPoint": null,
									"id": 191,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@id_56": {
									"entryPoint": null,
									"id": 56,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_decode_tuple_t_bytes4t_address": {
									"entryPoint": 900,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encode_tuple_t_stringliteral_abafc7bf1aedc5cbb8be31dcbef55c10de87a9bd6aea036399bd32dfb916f380__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_c0fb255f57e2efe07aa0283c494e42d125205749c412924b8dff6e4826cdfa5b__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 995,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:1720:1",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:1",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "188:171:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "205:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "216:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "198:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "198:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "198:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "239:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "250:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "235:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "235:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "255:2:1",
																		"type": "",
																		"value": "21"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "228:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "228:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "228:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "278:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "289:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "274:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "274:18:1"
																	},
																	{
																		"hexValue": "4469616d6f6e6420646f65736e2774206578697374",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "294:23:1",
																		"type": "",
																		"value": "Diamond doesn't exist"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "267:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "267:51:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "267:51:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "327:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "339:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "350:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "335:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "335:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "327:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_c0fb255f57e2efe07aa0283c494e42d125205749c412924b8dff6e4826cdfa5b__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "165:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "179:4:1",
														"type": ""
													}
												],
												"src": "14:345:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "465:76:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "475:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "487:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "498:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "483:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "483:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "475:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "517:9:1"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "528:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "510:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "510:25:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "510:25:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "434:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "445:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "456:4:1",
														"type": ""
													}
												],
												"src": "364:177:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "632:451:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "678:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "687:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "690:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "680:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "680:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "680:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "653:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "662:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "649:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "649:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "674:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "645:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "645:32:1"
															},
															"nodeType": "YulIf",
															"src": "642:52:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "703:36:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "729:9:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "716:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "716:23:1"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "707:5:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "849:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "858:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "861:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "851:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "851:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "851:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "761:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "772:5:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "779:66:1",
																						"type": "",
																						"value": "0xffffffff00000000000000000000000000000000000000000000000000000000"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "768:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "768:78:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "758:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "758:89:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "751:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "751:97:1"
															},
															"nodeType": "YulIf",
															"src": "748:117:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "874:15:1",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "884:5:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "874:6:1"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "898:47:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "930:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "941:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "926:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "926:18:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "913:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "913:32:1"
															},
															"variables": [
																{
																	"name": "value_1",
																	"nodeType": "YulTypedName",
																	"src": "902:7:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1035:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1044:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1047:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1037:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1037:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1037:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value_1",
																				"nodeType": "YulIdentifier",
																				"src": "967:7:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value_1",
																						"nodeType": "YulIdentifier",
																						"src": "980:7:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "989:42:1",
																						"type": "",
																						"value": "0xffffffffffffffffffffffffffffffffffffffff"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "976:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "976:56:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "964:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "964:69:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "957:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "957:77:1"
															},
															"nodeType": "YulIf",
															"src": "954:97:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1060:17:1",
															"value": {
																"name": "value_1",
																"nodeType": "YulIdentifier",
																"src": "1070:7:1"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "1060:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes4t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "590:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "601:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "613:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "621:6:1",
														"type": ""
													}
												],
												"src": "546:537:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1262:169:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1279:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1290:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1272:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1272:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1272:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1313:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1324:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1309:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1309:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1329:2:1",
																		"type": "",
																		"value": "19"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1302:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1302:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1302:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1352:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1363:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1348:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1348:18:1"
																	},
																	{
																		"hexValue": "666163657420616c7265616479206164646564",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "1368:21:1",
																		"type": "",
																		"value": "facet already added"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1341:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1341:49:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1341:49:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1399:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1411:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1422:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1407:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1407:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1399:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_abafc7bf1aedc5cbb8be31dcbef55c10de87a9bd6aea036399bd32dfb916f380__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1239:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1253:4:1",
														"type": ""
													}
												],
												"src": "1088:343:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1484:234:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1519:168:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1540:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1543:77:1",
																					"type": "",
																					"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1533:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1533:88:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1533:88:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1641:1:1",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1644:4:1",
																					"type": "",
																					"value": "0x11"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1634:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1634:15:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1634:15:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1669:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1672:4:1",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1662:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1662:15:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1662:15:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "1500:1:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "1507:1:1"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "1503:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1503:6:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1497:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1497:13:1"
															},
															"nodeType": "YulIf",
															"src": "1494:193:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1696:16:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "1707:1:1"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "1710:1:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1703:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1703:9:1"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "1696:3:1"
																}
															]
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "1467:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "1470:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "1476:3:1",
														"type": ""
													}
												],
												"src": "1436:282:1"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_encode_tuple_t_stringliteral_c0fb255f57e2efe07aa0283c494e42d125205749c412924b8dff6e4826cdfa5b__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 21)\n        mstore(add(headStart, 64), \"Diamond doesn't exist\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_bytes4t_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let value := calldataload(headStart)\n        if iszero(eq(value, and(value, 0xffffffff00000000000000000000000000000000000000000000000000000000))) { revert(0, 0) }\n        value0 := value\n        let value_1 := calldataload(add(headStart, 32))\n        if iszero(eq(value_1, and(value_1, 0xffffffffffffffffffffffffffffffffffffffff))) { revert(0, 0) }\n        value1 := value_1\n    }\n    function abi_encode_tuple_t_stringliteral_abafc7bf1aedc5cbb8be31dcbef55c10de87a9bd6aea036399bd32dfb916f380__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 19)\n        mstore(add(headStart, 64), \"facet already added\")\n        tail := add(headStart, 96)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        if gt(x, not(y))\n        {\n            mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n            mstore(4, 0x11)\n            revert(0, 0x24)\n        }\n        sum := add(x, y)\n    }\n}",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "60806040526004361061002d5760003560e01c8063af640d0f146100f9578063e3fddac41461012157610034565b3661003457005b600080356001600160e01b03191681527fc8fcad8db84d3cc18b4c41d551ea0ee66dd599cde068d998e57d5e09332c131c602052604090205473ffffffffffffffffffffffffffffffffffffffff16806100d55760405162461bcd60e51b815260206004820152601560248201527f4469616d6f6e6420646f65736e2774206578697374000000000000000000000060448201526064015b60405180910390fd5b3660008037600080366000845af43d6000803e8080156100f4573d6000f35b3d6000fd5b34801561010557600080fd5b5061010f60005481565b60405190815260200160405180910390f35b34801561012d57600080fd5b5061014161013c366004610384565b610143565b005b6001600160e01b0319821660009081527fc8fcad8db84d3cc18b4c41d551ea0ee66dd599cde068d998e57d5e09332c131c602052604090205473ffffffffffffffffffffffffffffffffffffffff16156101df5760405162461bcd60e51b815260206004820152601360248201527f666163657420616c72656164792061646465640000000000000000000000000060448201526064016100cc565b6000546101ed9060016103e3565b60008181556040805180820182528281526020808201848152835180850185528581528083018681528551808701875273ffffffffffffffffffffffffffffffffffffffff998a16958690526001600160e01b03199a909a1692839052848252878152828a528984019788529186527fc8fcad8db84d3cc18b4c41d551ea0ee66dd599cde068d998e57d5e09332c131c83528486209051815498167fffffffffffffffffffffffff000000000000000000000000000000000000000098891617815590516001918201558285527fc8fcad8db84d3cc18b4c41d551ea0ee66dd599cde068d998e57d5e09332c131d9091529183209551865460e09190911c63ffffffff199091161786559251948101949094557fc8fcad8db84d3cc18b4c41d551ea0ee66dd599cde068d998e57d5e09332c131e8054948501815590527fb5c239a29faf02594141bbc5e6982a9b85ba2b4d59c3ed3baaf4cb8e5e11cbef909201805482169092179091557fc8fcad8db84d3cc18b4c41d551ea0ee66dd599cde068d998e57d5e09332c131f805490911633179055565b6000806040838503121561039757600080fd5b82356001600160e01b0319811681146103af57600080fd5b9150602083013573ffffffffffffffffffffffffffffffffffffffff811681146103d857600080fd5b809150509250929050565b6000821982111561041d577f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b50019056fea2646970667358221220b2a55a1f0e57fa1235c2394be18ae68b54dbd681e0968bbff81b6bc62b357c4464736f6c63430008090033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x2D JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xAF640D0F EQ PUSH2 0xF9 JUMPI DUP1 PUSH4 0xE3FDDAC4 EQ PUSH2 0x121 JUMPI PUSH2 0x34 JUMP JUMPDEST CALLDATASIZE PUSH2 0x34 JUMPI STOP JUMPDEST PUSH1 0x0 DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND DUP2 MSTORE PUSH32 0xC8FCAD8DB84D3CC18B4C41D551EA0EE66DD599CDE068D998E57D5E09332C131C PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP1 PUSH2 0xD5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4469616D6F6E6420646F65736E27742065786973740000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST CALLDATASIZE PUSH1 0x0 DUP1 CALLDATACOPY PUSH1 0x0 DUP1 CALLDATASIZE PUSH1 0x0 DUP5 GAS DELEGATECALL RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY DUP1 DUP1 ISZERO PUSH2 0xF4 JUMPI RETURNDATASIZE PUSH1 0x0 RETURN JUMPDEST RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x105 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x10F PUSH1 0x0 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x12D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x141 PUSH2 0x13C CALLDATASIZE PUSH1 0x4 PUSH2 0x384 JUMP JUMPDEST PUSH2 0x143 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH32 0xC8FCAD8DB84D3CC18B4C41D551EA0EE66DD599CDE068D998E57D5E09332C131C PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND ISZERO PUSH2 0x1DF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x666163657420616C726561647920616464656400000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xCC JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x1ED SWAP1 PUSH1 0x1 PUSH2 0x3E3 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 SSTORE PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD DUP3 MSTORE DUP3 DUP2 MSTORE PUSH1 0x20 DUP1 DUP3 ADD DUP5 DUP2 MSTORE DUP4 MLOAD DUP1 DUP6 ADD DUP6 MSTORE DUP6 DUP2 MSTORE DUP1 DUP4 ADD DUP7 DUP2 MSTORE DUP6 MLOAD DUP1 DUP8 ADD DUP8 MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP10 DUP11 AND SWAP6 DUP7 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT SWAP11 SWAP1 SWAP11 AND SWAP3 DUP4 SWAP1 MSTORE DUP5 DUP3 MSTORE DUP8 DUP2 MSTORE DUP3 DUP11 MSTORE DUP10 DUP5 ADD SWAP8 DUP9 MSTORE SWAP2 DUP7 MSTORE PUSH32 0xC8FCAD8DB84D3CC18B4C41D551EA0EE66DD599CDE068D998E57D5E09332C131C DUP4 MSTORE DUP5 DUP7 KECCAK256 SWAP1 MLOAD DUP2 SLOAD SWAP9 AND PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 SWAP9 DUP10 AND OR DUP2 SSTORE SWAP1 MLOAD PUSH1 0x1 SWAP2 DUP3 ADD SSTORE DUP3 DUP6 MSTORE PUSH32 0xC8FCAD8DB84D3CC18B4C41D551EA0EE66DD599CDE068D998E57D5E09332C131D SWAP1 SWAP2 MSTORE SWAP2 DUP4 KECCAK256 SWAP6 MLOAD DUP7 SLOAD PUSH1 0xE0 SWAP2 SWAP1 SWAP2 SHR PUSH4 0xFFFFFFFF NOT SWAP1 SWAP2 AND OR DUP7 SSTORE SWAP3 MLOAD SWAP5 DUP2 ADD SWAP5 SWAP1 SWAP5 SSTORE PUSH32 0xC8FCAD8DB84D3CC18B4C41D551EA0EE66DD599CDE068D998E57D5E09332C131E DUP1 SLOAD SWAP5 DUP6 ADD DUP2 SSTORE SWAP1 MSTORE PUSH32 0xB5C239A29FAF02594141BBC5E6982A9B85BA2B4D59C3ED3BAAF4CB8E5E11CBEF SWAP1 SWAP3 ADD DUP1 SLOAD DUP3 AND SWAP1 SWAP3 OR SWAP1 SWAP2 SSTORE PUSH32 0xC8FCAD8DB84D3CC18B4C41D551EA0EE66DD599CDE068D998E57D5E09332C131F DUP1 SLOAD SWAP1 SWAP2 AND CALLER OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x397 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0x3AF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND DUP2 EQ PUSH2 0x3D8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x41D JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP ADD SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB2 0xA5 GAS 0x1F 0xE JUMPI STATICCALL SLT CALLDATALOAD 0xC2 CODECOPY 0x4B 0xE1 DUP11 0xE6 DUP12 SLOAD 0xDB 0xD6 DUP2 0xE0 SWAP7 DUP12 0xBF 0xF8 SHL PUSH12 0xC62B357C4464736F6C634300 ADDMOD MULMOD STOP CALLER ",
							"sourceMap": "363:2631:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2425:13;2485:7;;-1:-1:-1;;;;;;2485:7:0;2441:52;;438:45;2441:52;;;;;:65;;;;2516:53;;;;-1:-1:-1;;;2516:53:0;;216:2:1;2516:53:0;;;198:21:1;255:2;235:18;;;228:30;294:23;274:18;;;267:51;335:18;;2516:53:0;;;;;;;;;2620:14;2618:1;2616;2603:32;2711:1;2708;2692:14;2689:1;2682:5;2675;2662:51;2747:16;2744:1;2741;2726:38;2784:6;2804:67;;;;2909:16;2906:1;2898:28;2804:67;2840:16;2837:1;2829:28;813:17;;;;;;;;;;;;;;;;;;;510:25:1;;;498:2;483:18;813:17:0;;;;;;;837:1055;;;;;;;;;;-1:-1:-1;837:1055:0;;;;;:::i;:::-;;:::i;:::-;;;-1:-1:-1;;;;;;928:51:0;;1020:1;928:51;;;438:45;928:51;;;;;:64;;;:94;907:160;;;;-1:-1:-1;;;907:160:0;;1290:2:1;907:160:0;;;1272:21:1;1329:2;1309:18;;;1302:30;1368:21;1348:18;;;1341:49;1407:18;;907:160:0;1088:343:1;907:160:0;1082:2;;:6;;1087:1;1082:6;:::i;:::-;1077:2;:11;;;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1267:35:0;;;;;;;;-1:-1:-1;;;;;;1312:38:0;;;;;;;;1360:50;;;1420:56;;;1486:52;;;-1:-1:-1;;;1548:51:0;;;1609;;;438:45;1609:51;;;;;:80;;;;;;;;;;;;;;;-1:-1:-1;1609:80:0;;;;1699:49;;;:39;:49;;;;;;:77;;;;;;;;;-1:-1:-1;;1699:77:0;;;;;;;;;;;;;;;1786:31;:46;;;;;;;;;;;;;;;;;;;;;;;1842:30;:43;;;;;1875:10;1842:43;;;837:1055::o;546:537:1:-;613:6;621;674:2;662:9;653:7;649:23;645:32;642:52;;;690:1;687;680:12;642:52;729:9;716:23;-1:-1:-1;;;;;;772:5:1;768:78;761:5;758:89;748:117;;861:1;858;851:12;748:117;884:5;-1:-1:-1;941:2:1;926:18;;913:32;989:42;976:56;;964:69;;954:97;;1047:1;1044;1037:12;954:97;1070:7;1060:17;;;546:537;;;;;:::o;1436:282::-;1476:3;1507:1;1503:6;1500:1;1497:13;1494:193;;;1543:77;1540:1;1533:88;1644:4;1641:1;1634:15;1672:4;1669:1;1662:15;1494:193;-1:-1:-1;1703:9:1;;1436:282::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "222400",
								"executionCost": "263",
								"totalCost": "222663"
							},
							"external": {
								"": "infinite",
								"diamondCut(bytes4,address)": "192621",
								"id()": "2261"
							},
							"internal": {
								"diamondStorage()": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 363,
									"end": 2994,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 363,
									"end": 2994,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 363,
									"end": 2994,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 363,
									"end": 2994,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 363,
									"end": 2994,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 363,
									"end": 2994,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 363,
									"end": 2994,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 363,
									"end": 2994,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 363,
									"end": 2994,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 363,
									"end": 2994,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 363,
									"end": 2994,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 363,
									"end": 2994,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 363,
									"end": 2994,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 363,
									"end": 2994,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 363,
									"end": 2994,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 363,
									"end": 2994,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 363,
									"end": 2994,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 363,
									"end": 2994,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 363,
									"end": 2994,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 363,
									"end": 2994,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 363,
									"end": 2994,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220b2a55a1f0e57fa1235c2394be18ae68b54dbd681e0968bbff81b6bc62b357c4464736f6c63430008090033",
									".code": [
										{
											"begin": 363,
											"end": 2994,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 363,
											"end": 2994,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 363,
											"end": 2994,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 363,
											"end": 2994,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 363,
											"end": 2994,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 363,
											"end": 2994,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 363,
											"end": 2994,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 363,
											"end": 2994,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 363,
											"end": 2994,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 363,
											"end": 2994,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 363,
											"end": 2994,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 363,
											"end": 2994,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 363,
											"end": 2994,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 363,
											"end": 2994,
											"name": "PUSH",
											"source": 0,
											"value": "AF640D0F"
										},
										{
											"begin": 363,
											"end": 2994,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 363,
											"end": 2994,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 363,
											"end": 2994,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 363,
											"end": 2994,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 363,
											"end": 2994,
											"name": "PUSH",
											"source": 0,
											"value": "E3FDDAC4"
										},
										{
											"begin": 363,
											"end": 2994,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 363,
											"end": 2994,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 363,
											"end": 2994,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 363,
											"end": 2994,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 363,
											"end": 2994,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 363,
											"end": 2994,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 363,
											"end": 2994,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 363,
											"end": 2994,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 363,
											"end": 2994,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 363,
											"end": 2994,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 363,
											"end": 2994,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 363,
											"end": 2994,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 363,
											"end": 2994,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2425,
											"end": 2438,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2485,
											"end": 2492,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2485,
											"end": 2492,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2485,
											"end": 2492,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2493,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2493,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 438,
											"end": 483,
											"name": "PUSH",
											"source": 0,
											"value": "C8FCAD8DB84D3CC18B4C41D551EA0EE66DD599CDE068D998E57D5E09332C131C"
										},
										{
											"begin": 2441,
											"end": 2493,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2441,
											"end": 2493,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2493,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2441,
											"end": 2493,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2493,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2506,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2506,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2441,
											"end": 2506,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2506,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2516,
											"end": 2569,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 2516,
											"end": 2569,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2516,
											"end": 2569,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2516,
											"end": 2569,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2516,
											"end": 2569,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2516,
											"end": 2569,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 216,
											"end": 218,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2516,
											"end": 2569,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2516,
											"end": 2569,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2516,
											"end": 2569,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 198,
											"end": 219,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 255,
											"end": 257,
											"name": "PUSH",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 235,
											"end": 253,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 235,
											"end": 253,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 235,
											"end": 253,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 228,
											"end": 258,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 294,
											"end": 317,
											"name": "PUSH",
											"source": 1,
											"value": "4469616D6F6E6420646F65736E27742065786973740000000000000000000000"
										},
										{
											"begin": 274,
											"end": 292,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 274,
											"end": 292,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 274,
											"end": 292,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 267,
											"end": 318,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 335,
											"end": 353,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 335,
											"end": 353,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2516,
											"end": 2569,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 2516,
											"end": 2569,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2516,
											"end": 2569,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2516,
											"end": 2569,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2516,
											"end": 2569,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2516,
											"end": 2569,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2516,
											"end": 2569,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2516,
											"end": 2569,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2516,
											"end": 2569,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2516,
											"end": 2569,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 2516,
											"end": 2569,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2620,
											"end": 2634,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2618,
											"end": 2619,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2616,
											"end": 2617,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2603,
											"end": 2635,
											"name": "CALLDATACOPY",
											"source": 0
										},
										{
											"begin": 2711,
											"end": 2712,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2708,
											"end": 2709,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2692,
											"end": 2706,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2689,
											"end": 2690,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2682,
											"end": 2687,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 2675,
											"end": 2680,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 2662,
											"end": 2713,
											"name": "DELEGATECALL",
											"source": 0
										},
										{
											"begin": 2747,
											"end": 2763,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 2744,
											"end": 2745,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2741,
											"end": 2742,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2726,
											"end": 2764,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 2784,
											"end": 2790,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2804,
											"end": 2871,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2804,
											"end": 2871,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2804,
											"end": 2871,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 2804,
											"end": 2871,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2909,
											"end": 2925,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 2906,
											"end": 2907,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2898,
											"end": 2926,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 2804,
											"end": 2871,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 2804,
											"end": 2871,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2840,
											"end": 2856,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 2837,
											"end": 2838,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2829,
											"end": 2857,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 813,
											"end": 830,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 813,
											"end": 830,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 813,
											"end": 830,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 813,
											"end": 830,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 813,
											"end": 830,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 813,
											"end": 830,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 813,
											"end": 830,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 813,
											"end": 830,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 813,
											"end": 830,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 813,
											"end": 830,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 813,
											"end": 830,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 813,
											"end": 830,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 813,
											"end": 830,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 813,
											"end": 830,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 813,
											"end": 830,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 813,
											"end": 830,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 813,
											"end": 830,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 813,
											"end": 830,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 813,
											"end": 830,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 813,
											"end": 830,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 813,
											"end": 830,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 813,
											"end": 830,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 510,
											"end": 535,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 510,
											"end": 535,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 510,
											"end": 535,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 498,
											"end": 500,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 483,
											"end": 501,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 813,
											"end": 830,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 813,
											"end": 830,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 813,
											"end": 830,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 813,
											"end": 830,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 813,
											"end": 830,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 813,
											"end": 830,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 813,
											"end": 830,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 837,
											"end": 1892,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 837,
											"end": 1892,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 837,
											"end": 1892,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 837,
											"end": 1892,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 837,
											"end": 1892,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 837,
											"end": 1892,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 837,
											"end": 1892,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 837,
											"end": 1892,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 837,
											"end": 1892,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 837,
											"end": 1892,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 837,
											"end": 1892,
											"name": "tag",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 837,
											"end": 1892,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 837,
											"end": 1892,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 837,
											"end": 1892,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 837,
											"end": 1892,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 837,
											"end": 1892,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 837,
											"end": 1892,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 837,
											"end": 1892,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 837,
											"end": 1892,
											"name": "tag",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 837,
											"end": 1892,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 837,
											"end": 1892,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 837,
											"end": 1892,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 837,
											"end": 1892,
											"name": "tag",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 837,
											"end": 1892,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 837,
											"end": 1892,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 837,
											"end": 1892,
											"name": "tag",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 837,
											"end": 1892,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 928,
											"end": 979,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 928,
											"end": 979,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1020,
											"end": 1021,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 928,
											"end": 979,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 928,
											"end": 979,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 928,
											"end": 979,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 438,
											"end": 483,
											"name": "PUSH",
											"source": 0,
											"value": "C8FCAD8DB84D3CC18B4C41D551EA0EE66DD599CDE068D998E57D5E09332C131C"
										},
										{
											"begin": 928,
											"end": 979,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 928,
											"end": 979,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 928,
											"end": 979,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 928,
											"end": 979,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 928,
											"end": 979,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 928,
											"end": 992,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 928,
											"end": 992,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 928,
											"end": 992,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 928,
											"end": 1022,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 907,
											"end": 1067,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 907,
											"end": 1067,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 907,
											"end": 1067,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 907,
											"end": 1067,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 907,
											"end": 1067,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 907,
											"end": 1067,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1290,
											"end": 1292,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 907,
											"end": 1067,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 907,
											"end": 1067,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 907,
											"end": 1067,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1272,
											"end": 1293,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1329,
											"end": 1331,
											"name": "PUSH",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 1309,
											"end": 1327,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 1309,
											"end": 1327,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1309,
											"end": 1327,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1302,
											"end": 1332,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1368,
											"end": 1389,
											"name": "PUSH",
											"source": 1,
											"value": "666163657420616C726561647920616464656400000000000000000000000000"
										},
										{
											"begin": 1348,
											"end": 1366,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 1348,
											"end": 1366,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1348,
											"end": 1366,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1341,
											"end": 1390,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1407,
											"end": 1425,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 1407,
											"end": 1425,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 907,
											"end": 1067,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 1088,
											"end": 1431,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 907,
											"end": 1067,
											"name": "tag",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 907,
											"end": 1067,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1082,
											"end": 1084,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1082,
											"end": 1084,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1082,
											"end": 1088,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 1082,
											"end": 1088,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1087,
											"end": 1088,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1082,
											"end": 1088,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 1082,
											"end": 1088,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1082,
											"end": 1088,
											"name": "tag",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 1082,
											"end": 1088,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1077,
											"end": 1079,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1077,
											"end": 1088,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1077,
											"end": 1088,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1077,
											"end": 1088,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP5",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP6",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP6",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP6",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP7",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP6",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP8",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP8",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 1267,
											"end": 1302,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1267,
											"end": 1302,
											"name": "SWAP10",
											"source": 0
										},
										{
											"begin": 1267,
											"end": 1302,
											"name": "DUP11",
											"source": 0
										},
										{
											"begin": 1267,
											"end": 1302,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1267,
											"end": 1302,
											"name": "SWAP6",
											"source": 0
										},
										{
											"begin": 1267,
											"end": 1302,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 1267,
											"end": 1302,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1267,
											"end": 1302,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1312,
											"end": 1350,
											"name": "SWAP11",
											"source": 0
										},
										{
											"begin": 1312,
											"end": 1350,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1312,
											"end": 1350,
											"name": "SWAP11",
											"source": 0
										},
										{
											"begin": 1312,
											"end": 1350,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1312,
											"end": 1350,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 1312,
											"end": 1350,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1312,
											"end": 1350,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1312,
											"end": 1350,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1360,
											"end": 1410,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 1360,
											"end": 1410,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1360,
											"end": 1410,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1420,
											"end": 1476,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 1420,
											"end": 1476,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1420,
											"end": 1476,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1486,
											"end": 1538,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1486,
											"end": 1538,
											"name": "DUP11",
											"source": 0
										},
										{
											"begin": 1486,
											"end": 1538,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP10",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP5",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 1548,
											"end": 1599,
											"name": "SWAP8",
											"source": 0
										},
										{
											"begin": 1548,
											"end": 1599,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 1548,
											"end": 1599,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1609,
											"end": 1660,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1609,
											"end": 1660,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 1609,
											"end": 1660,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 438,
											"end": 483,
											"name": "PUSH",
											"source": 0,
											"value": "C8FCAD8DB84D3CC18B4C41D551EA0EE66DD599CDE068D998E57D5E09332C131C"
										},
										{
											"begin": 1609,
											"end": 1660,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1609,
											"end": 1660,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1609,
											"end": 1660,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 1609,
											"end": 1660,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 1609,
											"end": 1660,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 1609,
											"end": 1689,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1609,
											"end": 1689,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1609,
											"end": 1689,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1609,
											"end": 1689,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1609,
											"end": 1689,
											"name": "SWAP9",
											"source": 0
										},
										{
											"begin": 1609,
											"end": 1689,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1609,
											"end": 1689,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000"
										},
										{
											"begin": 1609,
											"end": 1689,
											"name": "SWAP9",
											"source": 0
										},
										{
											"begin": 1609,
											"end": 1689,
											"name": "DUP10",
											"source": 0
										},
										{
											"begin": 1609,
											"end": 1689,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1609,
											"end": 1689,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 1609,
											"end": 1689,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1609,
											"end": 1689,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 1609,
											"end": 1689,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1609,
											"end": 1689,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": 1609,
											"end": 1689,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1609,
											"end": 1689,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1609,
											"end": 1689,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1609,
											"end": 1689,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 1699,
											"end": 1748,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1699,
											"end": 1748,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 1699,
											"end": 1748,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1699,
											"end": 1738,
											"name": "PUSH",
											"source": 0,
											"value": "C8FCAD8DB84D3CC18B4C41D551EA0EE66DD599CDE068D998E57D5E09332C131D"
										},
										{
											"begin": 1699,
											"end": 1748,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1699,
											"end": 1748,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1699,
											"end": 1748,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1699,
											"end": 1748,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1699,
											"end": 1748,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1699,
											"end": 1748,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 1699,
											"end": 1776,
											"name": "SWAP6",
											"source": 0
										},
										{
											"begin": 1699,
											"end": 1776,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1699,
											"end": 1776,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 1699,
											"end": 1776,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1699,
											"end": 1776,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 1699,
											"end": 1776,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1699,
											"end": 1776,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1699,
											"end": 1776,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1699,
											"end": 1776,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FFFFFFFF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1699,
											"end": 1776,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1699,
											"end": 1776,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1699,
											"end": 1776,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1699,
											"end": 1776,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 1699,
											"end": 1776,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 1699,
											"end": 1776,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 1699,
											"end": 1776,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 1699,
											"end": 1776,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1699,
											"end": 1776,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 1699,
											"end": 1776,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1699,
											"end": 1776,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1699,
											"end": 1776,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 1699,
											"end": 1776,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1699,
											"end": 1776,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 1699,
											"end": 1776,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 1786,
											"end": 1817,
											"name": "PUSH",
											"source": 0,
											"value": "C8FCAD8DB84D3CC18B4C41D551EA0EE66DD599CDE068D998E57D5E09332C131E"
										},
										{
											"begin": 1786,
											"end": 1832,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1786,
											"end": 1832,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1786,
											"end": 1832,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 1786,
											"end": 1832,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 1786,
											"end": 1832,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1786,
											"end": 1832,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1786,
											"end": 1832,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 1786,
											"end": 1832,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1786,
											"end": 1832,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1786,
											"end": 1832,
											"name": "PUSH",
											"source": 0,
											"value": "B5C239A29FAF02594141BBC5E6982A9B85BA2B4D59C3ED3BAAF4CB8E5E11CBEF"
										},
										{
											"begin": 1786,
											"end": 1832,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1786,
											"end": 1832,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 1786,
											"end": 1832,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1786,
											"end": 1832,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1786,
											"end": 1832,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1786,
											"end": 1832,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1786,
											"end": 1832,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1786,
											"end": 1832,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1786,
											"end": 1832,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 1786,
											"end": 1832,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 1786,
											"end": 1832,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1786,
											"end": 1832,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1786,
											"end": 1832,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 1842,
											"end": 1872,
											"name": "PUSH",
											"source": 0,
											"value": "C8FCAD8DB84D3CC18B4C41D551EA0EE66DD599CDE068D998E57D5E09332C131F"
										},
										{
											"begin": 1842,
											"end": 1885,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1842,
											"end": 1885,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1842,
											"end": 1885,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1842,
											"end": 1885,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1842,
											"end": 1885,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1875,
											"end": 1885,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 1842,
											"end": 1885,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 1842,
											"end": 1885,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1842,
											"end": 1885,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 837,
											"end": 1892,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 546,
											"end": 1083,
											"name": "tag",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 546,
											"end": 1083,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 613,
											"end": 619,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 621,
											"end": 627,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 674,
											"end": 676,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 662,
											"end": 671,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 653,
											"end": 660,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 649,
											"end": 672,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 645,
											"end": 677,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 642,
											"end": 694,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 642,
											"end": 694,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "49"
										},
										{
											"begin": 642,
											"end": 694,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 690,
											"end": 691,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 687,
											"end": 688,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 680,
											"end": 692,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 642,
											"end": 694,
											"name": "tag",
											"source": 1,
											"value": "49"
										},
										{
											"begin": 642,
											"end": 694,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 729,
											"end": 738,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 716,
											"end": 739,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 772,
											"end": 777,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 768,
											"end": 846,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 761,
											"end": 766,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 758,
											"end": 847,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 748,
											"end": 865,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "50"
										},
										{
											"begin": 748,
											"end": 865,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 861,
											"end": 862,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 858,
											"end": 859,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 851,
											"end": 863,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 748,
											"end": 865,
											"name": "tag",
											"source": 1,
											"value": "50"
										},
										{
											"begin": 748,
											"end": 865,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 884,
											"end": 889,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 941,
											"end": 943,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 926,
											"end": 944,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 926,
											"end": 944,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 913,
											"end": 945,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 989,
											"end": 1031,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 976,
											"end": 1032,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 976,
											"end": 1032,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 964,
											"end": 1033,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 964,
											"end": 1033,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 954,
											"end": 1051,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "51"
										},
										{
											"begin": 954,
											"end": 1051,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1047,
											"end": 1048,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1044,
											"end": 1045,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1037,
											"end": 1049,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 954,
											"end": 1051,
											"name": "tag",
											"source": 1,
											"value": "51"
										},
										{
											"begin": 954,
											"end": 1051,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1070,
											"end": 1077,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1060,
											"end": 1077,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1060,
											"end": 1077,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1060,
											"end": 1077,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 546,
											"end": 1083,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 546,
											"end": 1083,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 546,
											"end": 1083,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 546,
											"end": 1083,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 546,
											"end": 1083,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 546,
											"end": 1083,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1436,
											"end": 1718,
											"name": "tag",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 1436,
											"end": 1718,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1476,
											"end": 1479,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1507,
											"end": 1508,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1503,
											"end": 1509,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 1500,
											"end": 1501,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1497,
											"end": 1510,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 1494,
											"end": 1687,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1494,
											"end": 1687,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "54"
										},
										{
											"begin": 1494,
											"end": 1687,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1543,
											"end": 1620,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1540,
											"end": 1541,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1533,
											"end": 1621,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1644,
											"end": 1648,
											"name": "PUSH",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 1641,
											"end": 1642,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1634,
											"end": 1649,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1672,
											"end": 1676,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 1669,
											"end": 1670,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1662,
											"end": 1677,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1494,
											"end": 1687,
											"name": "tag",
											"source": 1,
											"value": "54"
										},
										{
											"begin": 1494,
											"end": 1687,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1703,
											"end": 1712,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1703,
											"end": 1712,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1436,
											"end": 1718,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"diamondCut(bytes4,address)": "e3fddac4",
							"id()": "af640d0f"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"_bytes\",\"type\":\"bytes4\"},{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"diamondCut\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"id\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Diamond/DiamondCounter.sol\":\"Diamond\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":900},\"remappings\":[]},\"sources\":{\"Diamond/DiamondCounter.sol\":{\"keccak256\":\"0xacd1994113a2694cbac403f4b03d0644cea1ec6f251fa35f9f46cee56088a2e9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a4a3ec30415344c0926825ad2fa1cb27e9e293a8d36fd378aea2de51681b612b\",\"dweb:/ipfs/QmYpthJLyDLxar57JzysTyUMCM4yzrJCy5hzrdBxu4NiUR\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 56,
								"contract": "Diamond/DiamondCounter.sol:Diamond",
								"label": "id",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"DiamondCounter": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [],
							"name": "functionSelector",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "",
									"type": "bytes4"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "get",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "increment",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"Diamond/DiamondCounter.sol\":55:361  contract DiamondCounter {... */\n  mstore(0x40, 0x80)\n    /* \"Diamond/DiamondCounter.sol\":144:224  constructor() {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n    /* \"Diamond/DiamondCounter.sol\":168:184  functionSelector */\n  0x01\n    /* \"Diamond/DiamondCounter.sol\":168:217  functionSelector = bytes4(keccak256(\"increment\")) */\n  dup1\n  sload\n  not(0xffffffff)\n  and\n  0xe07a44dd\n  or\n  swap1\n  sstore\n    /* \"Diamond/DiamondCounter.sol\":55:361  contract DiamondCounter {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"Diamond/DiamondCounter.sol\":55:361  contract DiamondCounter {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x6d4ce63c\n      eq\n      tag_3\n      jumpi\n      dup1\n      0xd09de08a\n      eq\n      tag_4\n      jumpi\n      dup1\n      0xe13cf0f0\n      eq\n      tag_5\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"Diamond/DiamondCounter.sol\":283:353  function get() public view returns (uint256) {... */\n    tag_3:\n        /* \"Diamond/DiamondCounter.sol\":319:326  uint256 */\n      0x00\n        /* \"Diamond/DiamondCounter.sol\":345:346  i */\n      sload\n        /* \"Diamond/DiamondCounter.sol\":283:353  function get() public view returns (uint256) {... */\n      mload(0x40)\n        /* \"#utility.yul\":160:185   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":148:150   */\n      0x20\n        /* \"#utility.yul\":133:151   */\n      add\n        /* \"Diamond/DiamondCounter.sol\":283:353  function get() public view returns (uint256) {... */\n    tag_8:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Diamond/DiamondCounter.sol\":229:277  function increment() public {... */\n    tag_4:\n      tag_10\n      tag_11\n      jump\t// in\n    tag_10:\n      stop\n        /* \"Diamond/DiamondCounter.sol\":108:138  bytes4 public functionSelector */\n    tag_5:\n      sload(0x01)\n      tag_12\n      swap1\n      0xe0\n      shl\n      dup2\n      jump\n    tag_12:\n      mload(0x40)\n        /* \"#utility.yul\":370:436   */\n      0xffffffff00000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":358:437   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":340:438   */\n      dup2\n      mstore\n        /* \"#utility.yul\":328:330   */\n      0x20\n        /* \"#utility.yul\":313:331   */\n      add\n        /* \"Diamond/DiamondCounter.sol\":108:138  bytes4 public functionSelector */\n      tag_8\n        /* \"#utility.yul\":196:444   */\n      jump\n        /* \"Diamond/DiamondCounter.sol\":229:277  function increment() public {... */\n    tag_11:\n        /* \"Diamond/DiamondCounter.sol\":267:268  i */\n      0x00\n        /* \"Diamond/DiamondCounter.sol\":267:270  i++ */\n      dup1\n      sload\n      swap1\n        /* \"Diamond/DiamondCounter.sol\":267:268  i */\n      dup1\n        /* \"Diamond/DiamondCounter.sol\":267:270  i++ */\n      tag_18\n      dup4\n      tag_19\n      jump\t// in\n    tag_18:\n      swap2\n      swap1\n      pop\n      sstore\n      pop\n        /* \"Diamond/DiamondCounter.sol\":229:277  function increment() public {... */\n      jump\t// out\n        /* \"#utility.yul\":449:738   */\n    tag_19:\n        /* \"#utility.yul\":488:491   */\n      0x00\n      not(0x00)\n        /* \"#utility.yul\":509:526   */\n      dup3\n      eq\n        /* \"#utility.yul\":506:703   */\n      iszero\n      tag_24\n      jumpi\n        /* \"#utility.yul\":559:636   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":556:557   */\n      0x00\n        /* \"#utility.yul\":549:637   */\n      mstore\n        /* \"#utility.yul\":660:664   */\n      0x11\n        /* \"#utility.yul\":657:658   */\n      0x04\n        /* \"#utility.yul\":650:665   */\n      mstore\n        /* \"#utility.yul\":688:692   */\n      0x24\n        /* \"#utility.yul\":685:686   */\n      0x00\n        /* \"#utility.yul\":678:693   */\n      revert\n        /* \"#utility.yul\":506:703   */\n    tag_24:\n      pop\n        /* \"#utility.yul\":730:731   */\n      0x01\n        /* \"#utility.yul\":719:732   */\n      add\n      swap1\n        /* \"#utility.yul\":449:738   */\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220a7bd22aee5540b15a67bf439f915a13821b40b8addd9c7d7cc704439e6565e9464736f6c63430008090033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_18": {
									"entryPoint": null,
									"id": 18,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [],
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b506001805463ffffffff191663e07a44dd179055610126806100336000396000f3fe6080604052348015600f57600080fd5b5060043610603c5760003560e01c80636d4ce63c146041578063d09de08a146057578063e13cf0f014605f575b600080fd5b6000546040519081526020015b60405180910390f35b605d609b565b005b600154606b9060e01b81565b6040517fffffffff000000000000000000000000000000000000000000000000000000009091168152602001604e565b60008054908060a88360af565b9190505550565b600060001982141560e9577f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b506001019056fea2646970667358221220a7bd22aee5540b15a67bf439f915a13821b40b8addd9c7d7cc704439e6565e9464736f6c63430008090033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 DUP1 SLOAD PUSH4 0xFFFFFFFF NOT AND PUSH4 0xE07A44DD OR SWAP1 SSTORE PUSH2 0x126 DUP1 PUSH2 0x33 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH1 0x3C JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6D4CE63C EQ PUSH1 0x41 JUMPI DUP1 PUSH4 0xD09DE08A EQ PUSH1 0x57 JUMPI DUP1 PUSH4 0xE13CF0F0 EQ PUSH1 0x5F JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x5D PUSH1 0x9B JUMP JUMPDEST STOP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x6B SWAP1 PUSH1 0xE0 SHL DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x4E JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 DUP1 PUSH1 0xA8 DUP4 PUSH1 0xAF JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x0 NOT DUP3 EQ ISZERO PUSH1 0xE9 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xA7 0xBD 0x22 0xAE 0xE5 SLOAD SIGNEXTEND ISZERO 0xA6 PUSH28 0xF439F915A13821B40B8ADDD9C7D7CC704439E6565E9464736F6C6343 STOP ADDMOD MULMOD STOP CALLER ",
							"sourceMap": "55:306:0:-:0;;;144:80;;;;;;;;;-1:-1:-1;168:16:0;:49;;-1:-1:-1;;168:49:0;;;;;55:306;;;-1:-1:-1;55:306:0;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@functionSelector_5": {
									"entryPoint": null,
									"id": 5,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@get_33": {
									"entryPoint": null,
									"id": 33,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@increment_25": {
									"entryPoint": 155,
									"id": 25,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_bytes4__to_t_bytes4__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"increment_t_uint256": {
									"entryPoint": 175,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:740:1",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:1",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "115:76:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "125:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "137:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "148:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "133:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "133:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "125:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "167:9:1"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "178:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "160:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "160:25:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "160:25:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "84:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "95:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "106:4:1",
														"type": ""
													}
												],
												"src": "14:177:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "295:149:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "305:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "317:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "328:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "313:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "313:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "305:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "347:9:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "362:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "370:66:1",
																				"type": "",
																				"value": "0xffffffff00000000000000000000000000000000000000000000000000000000"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "358:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "358:79:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "340:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "340:98:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "340:98:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes4__to_t_bytes4__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "264:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "275:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "286:4:1",
														"type": ""
													}
												],
												"src": "196:248:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "496:242:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "535:168:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "556:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "559:77:1",
																					"type": "",
																					"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "549:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "549:88:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "549:88:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "657:1:1",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "660:4:1",
																					"type": "",
																					"value": "0x11"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "650:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "650:15:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "650:15:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "685:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "688:4:1",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "678:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "678:15:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "678:15:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "512:5:1"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "523:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "519:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "519:6:1"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "509:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "509:17:1"
															},
															"nodeType": "YulIf",
															"src": "506:197:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "712:20:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "723:5:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "730:1:1",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "719:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "719:13:1"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "712:3:1"
																}
															]
														}
													]
												},
												"name": "increment_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "478:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "488:3:1",
														"type": ""
													}
												],
												"src": "449:289:1"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_bytes4__to_t_bytes4__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffffffff00000000000000000000000000000000000000000000000000000000))\n    }\n    function increment_t_uint256(value) -> ret\n    {\n        if eq(value, not(0))\n        {\n            mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n            mstore(4, 0x11)\n            revert(0, 0x24)\n        }\n        ret := add(value, 1)\n    }\n}",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "6080604052348015600f57600080fd5b5060043610603c5760003560e01c80636d4ce63c146041578063d09de08a146057578063e13cf0f014605f575b600080fd5b6000546040519081526020015b60405180910390f35b605d609b565b005b600154606b9060e01b81565b6040517fffffffff000000000000000000000000000000000000000000000000000000009091168152602001604e565b60008054908060a88360af565b9190505550565b600060001982141560e9577f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b506001019056fea2646970667358221220a7bd22aee5540b15a67bf439f915a13821b40b8addd9c7d7cc704439e6565e9464736f6c63430008090033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH1 0x3C JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6D4CE63C EQ PUSH1 0x41 JUMPI DUP1 PUSH4 0xD09DE08A EQ PUSH1 0x57 JUMPI DUP1 PUSH4 0xE13CF0F0 EQ PUSH1 0x5F JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x5D PUSH1 0x9B JUMP JUMPDEST STOP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x6B SWAP1 PUSH1 0xE0 SHL DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x4E JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 DUP1 PUSH1 0xA8 DUP4 PUSH1 0xAF JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x0 NOT DUP3 EQ ISZERO PUSH1 0xE9 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xA7 0xBD 0x22 0xAE 0xE5 SLOAD SIGNEXTEND ISZERO 0xA6 PUSH28 0xF439F915A13821B40B8ADDD9C7D7CC704439E6565E9464736F6C6343 STOP ADDMOD MULMOD STOP CALLER ",
							"sourceMap": "55:306:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;283:70;319:7;345:1;283:70;;160:25:1;;;148:2;133:18;283:70:0;;;;;;;;229:48;;;:::i;:::-;;108:30;;;;;;;;;;;;370:66:1;358:79;;;340:98;;328:2;313:18;108:30:0;196:248:1;229:48:0;267:1;:3;;;:1;:3;;;:::i;:::-;;;;;;229:48::o;449:289:1:-;488:3;-1:-1:-1;;509:17:1;;506:197;;;559:77;556:1;549:88;660:4;657:1;650:15;688:4;685:1;678:15;506:197;-1:-1:-1;730:1:1;719:13;;449:289::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "58800",
								"executionCost": "24335",
								"totalCost": "83135"
							},
							"external": {
								"functionSelector()": "2335",
								"get()": "2247",
								"increment()": "24436"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 55,
									"end": 361,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 55,
									"end": 361,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 55,
									"end": 361,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 144,
									"end": 224,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 144,
									"end": 224,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 144,
									"end": 224,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 144,
									"end": 224,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 144,
									"end": 224,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 144,
									"end": 224,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 144,
									"end": 224,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 144,
									"end": 224,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 144,
									"end": 224,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 144,
									"end": 224,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 168,
									"end": 184,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 168,
									"end": 217,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 168,
									"end": 217,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "FFFFFFFF"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 168,
									"end": 217,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 168,
									"end": 217,
									"name": "PUSH",
									"source": 0,
									"value": "E07A44DD"
								},
								{
									"begin": 168,
									"end": 217,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 168,
									"end": 217,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 168,
									"end": 217,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 55,
									"end": 361,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 55,
									"end": 361,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 55,
									"end": 361,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": 55,
									"end": 361,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 55,
									"end": 361,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 55,
									"end": 361,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220a7bd22aee5540b15a67bf439f915a13821b40b8addd9c7d7cc704439e6565e9464736f6c63430008090033",
									".code": [
										{
											"begin": 55,
											"end": 361,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 55,
											"end": 361,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 55,
											"end": 361,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 55,
											"end": 361,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 55,
											"end": 361,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 55,
											"end": 361,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 55,
											"end": 361,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 55,
											"end": 361,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 55,
											"end": 361,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 55,
											"end": 361,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 55,
											"end": 361,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 55,
											"end": 361,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 55,
											"end": 361,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 55,
											"end": 361,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 55,
											"end": 361,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 55,
											"end": 361,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 55,
											"end": 361,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 55,
											"end": 361,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 55,
											"end": 361,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 55,
											"end": 361,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 55,
											"end": 361,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 55,
											"end": 361,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 55,
											"end": 361,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 55,
											"end": 361,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 55,
											"end": 361,
											"name": "PUSH",
											"source": 0,
											"value": "6D4CE63C"
										},
										{
											"begin": 55,
											"end": 361,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 55,
											"end": 361,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 55,
											"end": 361,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 55,
											"end": 361,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 55,
											"end": 361,
											"name": "PUSH",
											"source": 0,
											"value": "D09DE08A"
										},
										{
											"begin": 55,
											"end": 361,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 55,
											"end": 361,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 55,
											"end": 361,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 55,
											"end": 361,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 55,
											"end": 361,
											"name": "PUSH",
											"source": 0,
											"value": "E13CF0F0"
										},
										{
											"begin": 55,
											"end": 361,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 55,
											"end": 361,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 55,
											"end": 361,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 55,
											"end": 361,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 55,
											"end": 361,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 55,
											"end": 361,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 55,
											"end": 361,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 55,
											"end": 361,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 283,
											"end": 353,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 283,
											"end": 353,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 319,
											"end": 326,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 345,
											"end": 346,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 283,
											"end": 353,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 283,
											"end": 353,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 160,
											"end": 185,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 160,
											"end": 185,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 160,
											"end": 185,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 148,
											"end": 150,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 133,
											"end": 151,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 283,
											"end": 353,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 283,
											"end": 353,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 283,
											"end": 353,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 283,
											"end": 353,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 283,
											"end": 353,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 283,
											"end": 353,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 283,
											"end": 353,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 283,
											"end": 353,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 283,
											"end": 353,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 229,
											"end": 277,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 229,
											"end": 277,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 229,
											"end": 277,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 229,
											"end": 277,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 229,
											"end": 277,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 229,
											"end": 277,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 229,
											"end": 277,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 229,
											"end": 277,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 108,
											"end": 138,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 108,
											"end": 138,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 108,
											"end": 138,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 108,
											"end": 138,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 108,
											"end": 138,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 108,
											"end": 138,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 108,
											"end": 138,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 108,
											"end": 138,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 108,
											"end": 138,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 108,
											"end": 138,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 108,
											"end": 138,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 108,
											"end": 138,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 108,
											"end": 138,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 108,
											"end": 138,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 370,
											"end": 436,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 358,
											"end": 437,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 358,
											"end": 437,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 358,
											"end": 437,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 340,
											"end": 438,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 340,
											"end": 438,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 328,
											"end": 330,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 313,
											"end": 331,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 108,
											"end": 138,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 196,
											"end": 444,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 229,
											"end": 277,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 229,
											"end": 277,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 267,
											"end": 268,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 267,
											"end": 270,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 267,
											"end": 270,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 267,
											"end": 270,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 267,
											"end": 268,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 267,
											"end": 270,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 267,
											"end": 270,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 267,
											"end": 270,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 267,
											"end": 270,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 267,
											"end": 270,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 267,
											"end": 270,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 267,
											"end": 270,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 267,
											"end": 270,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 267,
											"end": 270,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 267,
											"end": 270,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 267,
											"end": 270,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 229,
											"end": 277,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 449,
											"end": 738,
											"name": "tag",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 449,
											"end": 738,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 488,
											"end": 491,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 509,
											"end": 526,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 509,
											"end": 526,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 506,
											"end": 703,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 506,
											"end": 703,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 506,
											"end": 703,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 559,
											"end": 636,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 556,
											"end": 557,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 549,
											"end": 637,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 660,
											"end": 664,
											"name": "PUSH",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 657,
											"end": 658,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 650,
											"end": 665,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 688,
											"end": 692,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 685,
											"end": 686,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 678,
											"end": 693,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 506,
											"end": 703,
											"name": "tag",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 506,
											"end": 703,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 730,
											"end": 731,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 719,
											"end": 732,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 719,
											"end": 732,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 449,
											"end": 738,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"functionSelector()": "e13cf0f0",
							"get()": "6d4ce63c",
							"increment()": "d09de08a"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"functionSelector\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"get\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"increment\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Diamond/DiamondCounter.sol\":\"DiamondCounter\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":900},\"remappings\":[]},\"sources\":{\"Diamond/DiamondCounter.sol\":{\"keccak256\":\"0xacd1994113a2694cbac403f4b03d0644cea1ec6f251fa35f9f46cee56088a2e9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a4a3ec30415344c0926825ad2fa1cb27e9e293a8d36fd378aea2de51681b612b\",\"dweb:/ipfs/QmYpthJLyDLxar57JzysTyUMCM4yzrJCy5hzrdBxu4NiUR\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 3,
								"contract": "Diamond/DiamondCounter.sol:DiamondCounter",
								"label": "i",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							},
							{
								"astId": 5,
								"contract": "Diamond/DiamondCounter.sol:DiamondCounter",
								"label": "functionSelector",
								"offset": 0,
								"slot": "1",
								"type": "t_bytes4"
							}
						],
						"types": {
							"t_bytes4": {
								"encoding": "inplace",
								"label": "bytes4",
								"numberOfBytes": "4"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"Diamond/DiamondCounter.sol": {
				"ast": {
					"absolutePath": "Diamond/DiamondCounter.sol",
					"exportedSymbols": {
						"Diamond": [
							221
						],
						"DiamondCounter": [
							34
						]
					},
					"id": 222,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "30:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "DiamondCounter",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 34,
							"linearizedBaseContracts": [
								34
							],
							"name": "DiamondCounter",
							"nameLocation": "64:14:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 3,
									"mutability": "mutable",
									"name": "i",
									"nameLocation": "101:1:0",
									"nodeType": "VariableDeclaration",
									"scope": 34,
									"src": "85:17:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 2,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "85:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"functionSelector": "e13cf0f0",
									"id": 5,
									"mutability": "mutable",
									"name": "functionSelector",
									"nameLocation": "122:16:0",
									"nodeType": "VariableDeclaration",
									"scope": 34,
									"src": "108:30:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes4",
										"typeString": "bytes4"
									},
									"typeName": {
										"id": 4,
										"name": "bytes4",
										"nodeType": "ElementaryTypeName",
										"src": "108:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes4",
											"typeString": "bytes4"
										}
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 17,
										"nodeType": "Block",
										"src": "158:66:0",
										"statements": [
											{
												"expression": {
													"id": 15,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 8,
														"name": "functionSelector",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 5,
														"src": "168:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"arguments": [
																	{
																		"hexValue": "696e6372656d656e74",
																		"id": 12,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "204:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_e07a44dde9fea32737a5cf3f9683b3235138654aa2d189f6fe44af37a61dc60d",
																			"typeString": "literal_string \"increment\""
																		},
																		"value": "increment"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_stringliteral_e07a44dde9fea32737a5cf3f9683b3235138654aa2d189f6fe44af37a61dc60d",
																			"typeString": "literal_string \"increment\""
																		}
																	],
																	"id": 11,
																	"name": "keccak256",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967288,
																	"src": "194:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																		"typeString": "function (bytes memory) pure returns (bytes32)"
																	}
																},
																"id": 13,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "194:22:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															],
															"id": 10,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "187:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_bytes4_$",
																"typeString": "type(bytes4)"
															},
															"typeName": {
																"id": 9,
																"name": "bytes4",
																"nodeType": "ElementaryTypeName",
																"src": "187:6:0",
																"typeDescriptions": {}
															}
														},
														"id": 14,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "187:30:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"src": "168:49:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"id": 16,
												"nodeType": "ExpressionStatement",
												"src": "168:49:0"
											}
										]
									},
									"id": 18,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 6,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "155:2:0"
									},
									"returnParameters": {
										"id": 7,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "158:0:0"
									},
									"scope": 34,
									"src": "144:80:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 24,
										"nodeType": "Block",
										"src": "257:20:0",
										"statements": [
											{
												"expression": {
													"id": 22,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "++",
													"prefix": false,
													"src": "267:3:0",
													"subExpression": {
														"id": 21,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3,
														"src": "267:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 23,
												"nodeType": "ExpressionStatement",
												"src": "267:3:0"
											}
										]
									},
									"functionSelector": "d09de08a",
									"id": 25,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "increment",
									"nameLocation": "238:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 19,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "247:2:0"
									},
									"returnParameters": {
										"id": 20,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "257:0:0"
									},
									"scope": 34,
									"src": "229:48:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 32,
										"nodeType": "Block",
										"src": "328:25:0",
										"statements": [
											{
												"expression": {
													"id": 30,
													"name": "i",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 3,
													"src": "345:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 29,
												"id": 31,
												"nodeType": "Return",
												"src": "338:8:0"
											}
										]
									},
									"functionSelector": "6d4ce63c",
									"id": 33,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "get",
									"nameLocation": "292:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 26,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "295:2:0"
									},
									"returnParameters": {
										"id": 29,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 28,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 33,
												"src": "319:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 27,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "319:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "318:9:0"
									},
									"scope": 34,
									"src": "283:70:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 222,
							"src": "55:306:0",
							"usedErrors": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Diamond",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 221,
							"linearizedBaseContracts": [
								221
							],
							"name": "Diamond",
							"nameLocation": "372:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 39,
									"mutability": "constant",
									"name": "DIAMOND_STORAGE_POSITION",
									"nameLocation": "403:24:0",
									"nodeType": "VariableDeclaration",
									"scope": 221,
									"src": "386:97:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 35,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "386:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"arguments": [
											{
												"hexValue": "6469616d6f6e642e7374616e646172642e6469616d6f6e642e73746f72616765",
												"id": 37,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "string",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "448:34:0",
												"typeDescriptions": {
													"typeIdentifier": "t_stringliteral_c8fcad8db84d3cc18b4c41d551ea0ee66dd599cde068d998e57d5e09332c131c",
													"typeString": "literal_string \"diamond.standard.diamond.storage\""
												},
												"value": "diamond.standard.diamond.storage"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_stringliteral_c8fcad8db84d3cc18b4c41d551ea0ee66dd599cde068d998e57d5e09332c131c",
													"typeString": "literal_string \"diamond.standard.diamond.storage\""
												}
											],
											"id": 36,
											"name": "keccak256",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 4294967288,
											"src": "438:9:0",
											"typeDescriptions": {
												"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
												"typeString": "function (bytes memory) pure returns (bytes32)"
											}
										},
										"id": 38,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "functionCall",
										"lValueRequested": false,
										"names": [],
										"nodeType": "FunctionCall",
										"src": "438:45:0",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"visibility": "internal"
								},
								{
									"canonicalName": "Diamond.FacetCut",
									"id": 44,
									"members": [
										{
											"constant": false,
											"id": 41,
											"mutability": "mutable",
											"name": "facetAddress",
											"nameLocation": "524:12:0",
											"nodeType": "VariableDeclaration",
											"scope": 44,
											"src": "516:20:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 40,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "516:7:0",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 43,
											"mutability": "mutable",
											"name": "functionSelectors",
											"nameLocation": "553:17:0",
											"nodeType": "VariableDeclaration",
											"scope": 44,
											"src": "546:24:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes4",
												"typeString": "bytes4"
											},
											"typeName": {
												"id": 42,
												"name": "bytes4",
												"nodeType": "ElementaryTypeName",
												"src": "546:6:0",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "FacetCut",
									"nameLocation": "497:8:0",
									"nodeType": "StructDefinition",
									"scope": 221,
									"src": "490:87:0",
									"visibility": "public"
								},
								{
									"canonicalName": "Diamond.FacetAddressAndPosition",
									"id": 49,
									"members": [
										{
											"constant": false,
											"id": 46,
											"mutability": "mutable",
											"name": "facetAddress",
											"nameLocation": "632:12:0",
											"nodeType": "VariableDeclaration",
											"scope": 49,
											"src": "624:20:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 45,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "624:7:0",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 48,
											"mutability": "mutable",
											"name": "functionSelectorPosition",
											"nameLocation": "662:24:0",
											"nodeType": "VariableDeclaration",
											"scope": 49,
											"src": "654:32:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 47,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "654:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "FacetAddressAndPosition",
									"nameLocation": "590:23:0",
									"nodeType": "StructDefinition",
									"scope": 221,
									"src": "583:110:0",
									"visibility": "public"
								},
								{
									"canonicalName": "Diamond.FacetFunctionSelectors",
									"id": 54,
									"members": [
										{
											"constant": false,
											"id": 51,
											"mutability": "mutable",
											"name": "functionSelectors",
											"nameLocation": "746:17:0",
											"nodeType": "VariableDeclaration",
											"scope": 54,
											"src": "739:24:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes4",
												"typeString": "bytes4"
											},
											"typeName": {
												"id": 50,
												"name": "bytes4",
												"nodeType": "ElementaryTypeName",
												"src": "739:6:0",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 53,
											"mutability": "mutable",
											"name": "facetAddressPosition",
											"nameLocation": "781:20:0",
											"nodeType": "VariableDeclaration",
											"scope": 54,
											"src": "773:28:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 52,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "773:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "FacetFunctionSelectors",
									"nameLocation": "706:22:0",
									"nodeType": "StructDefinition",
									"scope": 221,
									"src": "699:109:0",
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "af640d0f",
									"id": 56,
									"mutability": "mutable",
									"name": "id",
									"nameLocation": "828:2:0",
									"nodeType": "VariableDeclaration",
									"scope": 221,
									"src": "813:17:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 55,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "813:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 162,
										"nodeType": "Block",
										"src": "897:995:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 74,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"baseExpression": {
																		"expression": {
																			"arguments": [],
																			"expression": {
																				"argumentTypes": [],
																				"id": 64,
																				"name": "diamondStorage",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 191,
																				"src": "928:14:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_DiamondStorage_$179_storage_ptr_$",
																					"typeString": "function () pure returns (struct Diamond.DiamondStorage storage pointer)"
																				}
																			},
																			"id": 65,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "928:16:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_DiamondStorage_$179_storage_ptr",
																				"typeString": "struct Diamond.DiamondStorage storage pointer"
																			}
																		},
																		"id": 66,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "selectorToFacetAndPosition",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 168,
																		"src": "928:43:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_bytes4_$_t_struct$_FacetAddressAndPosition_$49_storage_$",
																			"typeString": "mapping(bytes4 => struct Diamond.FacetAddressAndPosition storage ref)"
																		}
																	},
																	"id": 68,
																	"indexExpression": {
																		"id": 67,
																		"name": "_bytes",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 58,
																		"src": "972:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes4",
																			"typeString": "bytes4"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "928:51:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_FacetAddressAndPosition_$49_storage",
																		"typeString": "struct Diamond.FacetAddressAndPosition storage ref"
																	}
																},
																"id": 69,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "facetAddress",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 46,
																"src": "928:64:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 72,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1020:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 71,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "1012:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 70,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "1012:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 73,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1012:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "928:94:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "666163657420616c7265616479206164646564",
															"id": 75,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1036:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_abafc7bf1aedc5cbb8be31dcbef55c10de87a9bd6aea036399bd32dfb916f380",
																"typeString": "literal_string \"facet already added\""
															},
															"value": "facet already added"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_abafc7bf1aedc5cbb8be31dcbef55c10de87a9bd6aea036399bd32dfb916f380",
																"typeString": "literal_string \"facet already added\""
															}
														],
														"id": 63,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "907:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 76,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "907:160:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 77,
												"nodeType": "ExpressionStatement",
												"src": "907:160:0"
											},
											{
												"expression": {
													"id": 82,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 78,
														"name": "id",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 56,
														"src": "1077:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 81,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 79,
															"name": "id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 56,
															"src": "1082:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"hexValue": "31",
															"id": 80,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1087:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "1082:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1077:11:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 83,
												"nodeType": "ExpressionStatement",
												"src": "1077:11:0"
											},
											{
												"assignments": [
													86
												],
												"declarations": [
													{
														"constant": false,
														"id": 86,
														"mutability": "mutable",
														"name": "newFacetCut",
														"nameLocation": "1114:11:0",
														"nodeType": "VariableDeclaration",
														"scope": 162,
														"src": "1098:27:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_FacetCut_$44_memory_ptr",
															"typeString": "struct Diamond.FacetCut"
														},
														"typeName": {
															"id": 85,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 84,
																"name": "FacetCut",
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 44,
																"src": "1098:8:0"
															},
															"referencedDeclaration": 44,
															"src": "1098:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_FacetCut_$44_storage_ptr",
																"typeString": "struct Diamond.FacetCut"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 87,
												"nodeType": "VariableDeclarationStatement",
												"src": "1098:27:0"
											},
											{
												"assignments": [
													90
												],
												"declarations": [
													{
														"constant": false,
														"id": 90,
														"mutability": "mutable",
														"name": "newFacetAddressAndPosition",
														"nameLocation": "1166:26:0",
														"nodeType": "VariableDeclaration",
														"scope": 162,
														"src": "1135:57:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_FacetAddressAndPosition_$49_memory_ptr",
															"typeString": "struct Diamond.FacetAddressAndPosition"
														},
														"typeName": {
															"id": 89,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 88,
																"name": "FacetAddressAndPosition",
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 49,
																"src": "1135:23:0"
															},
															"referencedDeclaration": 49,
															"src": "1135:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_FacetAddressAndPosition_$49_storage_ptr",
																"typeString": "struct Diamond.FacetAddressAndPosition"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 91,
												"nodeType": "VariableDeclarationStatement",
												"src": "1135:57:0"
											},
											{
												"assignments": [
													94
												],
												"declarations": [
													{
														"constant": false,
														"id": 94,
														"mutability": "mutable",
														"name": "newFacetFunctionSelectors",
														"nameLocation": "1232:25:0",
														"nodeType": "VariableDeclaration",
														"scope": 162,
														"src": "1202:55:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_FacetFunctionSelectors_$54_memory_ptr",
															"typeString": "struct Diamond.FacetFunctionSelectors"
														},
														"typeName": {
															"id": 93,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 92,
																"name": "FacetFunctionSelectors",
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 54,
																"src": "1202:22:0"
															},
															"referencedDeclaration": 54,
															"src": "1202:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_FacetFunctionSelectors_$54_storage_ptr",
																"typeString": "struct Diamond.FacetFunctionSelectors"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 95,
												"nodeType": "VariableDeclarationStatement",
												"src": "1202:55:0"
											},
											{
												"expression": {
													"id": 100,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 96,
															"name": "newFacetCut",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 86,
															"src": "1267:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_FacetCut_$44_memory_ptr",
																"typeString": "struct Diamond.FacetCut memory"
															}
														},
														"id": 98,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "facetAddress",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 41,
														"src": "1267:24:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 99,
														"name": "_address",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 60,
														"src": "1294:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1267:35:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 101,
												"nodeType": "ExpressionStatement",
												"src": "1267:35:0"
											},
											{
												"expression": {
													"id": 106,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 102,
															"name": "newFacetCut",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 86,
															"src": "1312:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_FacetCut_$44_memory_ptr",
																"typeString": "struct Diamond.FacetCut memory"
															}
														},
														"id": 104,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "functionSelectors",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 43,
														"src": "1312:29:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 105,
														"name": "_bytes",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 58,
														"src": "1344:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"src": "1312:38:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"id": 107,
												"nodeType": "ExpressionStatement",
												"src": "1312:38:0"
											},
											{
												"expression": {
													"id": 112,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 108,
															"name": "newFacetAddressAndPosition",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 90,
															"src": "1360:26:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_FacetAddressAndPosition_$49_memory_ptr",
																"typeString": "struct Diamond.FacetAddressAndPosition memory"
															}
														},
														"id": 110,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "facetAddress",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 46,
														"src": "1360:39:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 111,
														"name": "_address",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 60,
														"src": "1402:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1360:50:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 113,
												"nodeType": "ExpressionStatement",
												"src": "1360:50:0"
											},
											{
												"expression": {
													"id": 118,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 114,
															"name": "newFacetAddressAndPosition",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 90,
															"src": "1420:26:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_FacetAddressAndPosition_$49_memory_ptr",
																"typeString": "struct Diamond.FacetAddressAndPosition memory"
															}
														},
														"id": 116,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "functionSelectorPosition",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 48,
														"src": "1420:51:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 117,
														"name": "id",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 56,
														"src": "1474:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1420:56:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 119,
												"nodeType": "ExpressionStatement",
												"src": "1420:56:0"
											},
											{
												"expression": {
													"id": 124,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 120,
															"name": "newFacetFunctionSelectors",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 94,
															"src": "1486:25:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_FacetFunctionSelectors_$54_memory_ptr",
																"typeString": "struct Diamond.FacetFunctionSelectors memory"
															}
														},
														"id": 122,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "functionSelectors",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 51,
														"src": "1486:43:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 123,
														"name": "_bytes",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 58,
														"src": "1532:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"src": "1486:52:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"id": 125,
												"nodeType": "ExpressionStatement",
												"src": "1486:52:0"
											},
											{
												"expression": {
													"id": 130,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 126,
															"name": "newFacetFunctionSelectors",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 94,
															"src": "1548:25:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_FacetFunctionSelectors_$54_memory_ptr",
																"typeString": "struct Diamond.FacetFunctionSelectors memory"
															}
														},
														"id": 128,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "facetAddressPosition",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 53,
														"src": "1548:46:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 129,
														"name": "id",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 56,
														"src": "1597:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1548:51:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 131,
												"nodeType": "ExpressionStatement",
												"src": "1548:51:0"
											},
											{
												"expression": {
													"id": 138,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"expression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 132,
																	"name": "diamondStorage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 191,
																	"src": "1609:14:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_DiamondStorage_$179_storage_ptr_$",
																		"typeString": "function () pure returns (struct Diamond.DiamondStorage storage pointer)"
																	}
																},
																"id": 133,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1609:16:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_DiamondStorage_$179_storage_ptr",
																	"typeString": "struct Diamond.DiamondStorage storage pointer"
																}
															},
															"id": 134,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "selectorToFacetAndPosition",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 168,
															"src": "1609:43:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_bytes4_$_t_struct$_FacetAddressAndPosition_$49_storage_$",
																"typeString": "mapping(bytes4 => struct Diamond.FacetAddressAndPosition storage ref)"
															}
														},
														"id": 136,
														"indexExpression": {
															"id": 135,
															"name": "_bytes",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 58,
															"src": "1653:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1609:51:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_FacetAddressAndPosition_$49_storage",
															"typeString": "struct Diamond.FacetAddressAndPosition storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 137,
														"name": "newFacetAddressAndPosition",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 90,
														"src": "1663:26:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_FacetAddressAndPosition_$49_memory_ptr",
															"typeString": "struct Diamond.FacetAddressAndPosition memory"
														}
													},
													"src": "1609:80:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_FacetAddressAndPosition_$49_storage",
														"typeString": "struct Diamond.FacetAddressAndPosition storage ref"
													}
												},
												"id": 139,
												"nodeType": "ExpressionStatement",
												"src": "1609:80:0"
											},
											{
												"expression": {
													"id": 146,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"expression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 140,
																	"name": "diamondStorage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 191,
																	"src": "1699:14:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_DiamondStorage_$179_storage_ptr_$",
																		"typeString": "function () pure returns (struct Diamond.DiamondStorage storage pointer)"
																	}
																},
																"id": 141,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1699:16:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_DiamondStorage_$179_storage_ptr",
																	"typeString": "struct Diamond.DiamondStorage storage pointer"
																}
															},
															"id": 142,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "facetFunctionSelectors",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 173,
															"src": "1699:39:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_struct$_FacetFunctionSelectors_$54_storage_$",
																"typeString": "mapping(address => struct Diamond.FacetFunctionSelectors storage ref)"
															}
														},
														"id": 144,
														"indexExpression": {
															"id": 143,
															"name": "_address",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 60,
															"src": "1739:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1699:49:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_FacetFunctionSelectors_$54_storage",
															"typeString": "struct Diamond.FacetFunctionSelectors storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 145,
														"name": "newFacetFunctionSelectors",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 94,
														"src": "1751:25:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_FacetFunctionSelectors_$54_memory_ptr",
															"typeString": "struct Diamond.FacetFunctionSelectors memory"
														}
													},
													"src": "1699:77:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_FacetFunctionSelectors_$54_storage",
														"typeString": "struct Diamond.FacetFunctionSelectors storage ref"
													}
												},
												"id": 147,
												"nodeType": "ExpressionStatement",
												"src": "1699:77:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 152,
															"name": "_address",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 60,
															"src": "1823:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"expression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 148,
																	"name": "diamondStorage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 191,
																	"src": "1786:14:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_DiamondStorage_$179_storage_ptr_$",
																		"typeString": "function () pure returns (struct Diamond.DiamondStorage storage pointer)"
																	}
																},
																"id": 149,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1786:16:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_DiamondStorage_$179_storage_ptr",
																	"typeString": "struct Diamond.DiamondStorage storage pointer"
																}
															},
															"id": 150,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "facetAddresses",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 176,
															"src": "1786:31:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_storage",
																"typeString": "address[] storage ref"
															}
														},
														"id": 151,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "push",
														"nodeType": "MemberAccess",
														"src": "1786:36:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$_t_address_$returns$__$bound_to$_t_array$_t_address_$dyn_storage_ptr_$",
															"typeString": "function (address[] storage pointer,address)"
														}
													},
													"id": 153,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1786:46:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 154,
												"nodeType": "ExpressionStatement",
												"src": "1786:46:0"
											},
											{
												"expression": {
													"id": 160,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 155,
																"name": "diamondStorage",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 191,
																"src": "1842:14:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_DiamondStorage_$179_storage_ptr_$",
																	"typeString": "function () pure returns (struct Diamond.DiamondStorage storage pointer)"
																}
															},
															"id": 156,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1842:16:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_DiamondStorage_$179_storage_ptr",
																"typeString": "struct Diamond.DiamondStorage storage pointer"
															}
														},
														"id": 157,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "contractOwner",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 178,
														"src": "1842:30:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 158,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "1875:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 159,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "1875:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1842:43:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 161,
												"nodeType": "ExpressionStatement",
												"src": "1842:43:0"
											}
										]
									},
									"functionSelector": "e3fddac4",
									"id": 163,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "diamondCut",
									"nameLocation": "846:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 61,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 58,
												"mutability": "mutable",
												"name": "_bytes",
												"nameLocation": "864:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 163,
												"src": "857:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 57,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "857:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 60,
												"mutability": "mutable",
												"name": "_address",
												"nameLocation": "880:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 163,
												"src": "872:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 59,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "872:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "856:33:0"
									},
									"returnParameters": {
										"id": 62,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "897:0:0"
									},
									"scope": 221,
									"src": "837:1055:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"canonicalName": "Diamond.DiamondStorage",
									"id": 179,
									"members": [
										{
											"constant": false,
											"id": 168,
											"mutability": "mutable",
											"name": "selectorToFacetAndPosition",
											"nameLocation": "1977:26:0",
											"nodeType": "VariableDeclaration",
											"scope": 179,
											"src": "1934:69:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_bytes4_$_t_struct$_FacetAddressAndPosition_$49_storage_$",
												"typeString": "mapping(bytes4 => struct Diamond.FacetAddressAndPosition)"
											},
											"typeName": {
												"id": 167,
												"keyType": {
													"id": 164,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "1942:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"nodeType": "Mapping",
												"src": "1934:42:0",
												"typeDescriptions": {
													"typeIdentifier": "t_mapping$_t_bytes4_$_t_struct$_FacetAddressAndPosition_$49_storage_$",
													"typeString": "mapping(bytes4 => struct Diamond.FacetAddressAndPosition)"
												},
												"valueType": {
													"id": 166,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 165,
														"name": "FacetAddressAndPosition",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 49,
														"src": "1952:23:0"
													},
													"referencedDeclaration": 49,
													"src": "1952:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_FacetAddressAndPosition_$49_storage_ptr",
														"typeString": "struct Diamond.FacetAddressAndPosition"
													}
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 173,
											"mutability": "mutable",
											"name": "facetFunctionSelectors",
											"nameLocation": "2056:22:0",
											"nodeType": "VariableDeclaration",
											"scope": 179,
											"src": "2013:65:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_struct$_FacetFunctionSelectors_$54_storage_$",
												"typeString": "mapping(address => struct Diamond.FacetFunctionSelectors)"
											},
											"typeName": {
												"id": 172,
												"keyType": {
													"id": 169,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2021:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "Mapping",
												"src": "2013:42:0",
												"typeDescriptions": {
													"typeIdentifier": "t_mapping$_t_address_$_t_struct$_FacetFunctionSelectors_$54_storage_$",
													"typeString": "mapping(address => struct Diamond.FacetFunctionSelectors)"
												},
												"valueType": {
													"id": 171,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 170,
														"name": "FacetFunctionSelectors",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 54,
														"src": "2032:22:0"
													},
													"referencedDeclaration": 54,
													"src": "2032:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_FacetFunctionSelectors_$54_storage_ptr",
														"typeString": "struct Diamond.FacetFunctionSelectors"
													}
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 176,
											"mutability": "mutable",
											"name": "facetAddresses",
											"nameLocation": "2098:14:0",
											"nodeType": "VariableDeclaration",
											"scope": 179,
											"src": "2088:24:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
												"typeString": "address[]"
											},
											"typeName": {
												"baseType": {
													"id": 174,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2088:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 175,
												"nodeType": "ArrayTypeName",
												"src": "2088:9:0",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
													"typeString": "address[]"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 178,
											"mutability": "mutable",
											"name": "contractOwner",
											"nameLocation": "2130:13:0",
											"nodeType": "VariableDeclaration",
											"scope": 179,
											"src": "2122:21:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 177,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "2122:7:0",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "DiamondStorage",
									"nameLocation": "1909:14:0",
									"nodeType": "StructDefinition",
									"scope": 221,
									"src": "1902:248:0",
									"visibility": "public"
								},
								{
									"body": {
										"id": 190,
										"nodeType": "Block",
										"src": "2260:121:0",
										"statements": [
											{
												"assignments": [
													186
												],
												"declarations": [
													{
														"constant": false,
														"id": 186,
														"mutability": "mutable",
														"name": "position",
														"nameLocation": "2278:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 190,
														"src": "2270:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 185,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "2270:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 188,
												"initialValue": {
													"id": 187,
													"name": "DIAMOND_STORAGE_POSITION",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 39,
													"src": "2289:24:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2270:43:0"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "2332:43:0",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2346:19:0",
															"value": {
																"name": "position",
																"nodeType": "YulIdentifier",
																"src": "2357:8:0"
															},
															"variableNames": [
																{
																	"name": "ds.slot",
																	"nodeType": "YulIdentifier",
																	"src": "2346:7:0"
																}
															]
														}
													]
												},
												"evmVersion": "london",
												"externalReferences": [
													{
														"declaration": 183,
														"isOffset": false,
														"isSlot": true,
														"src": "2346:7:0",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 186,
														"isOffset": false,
														"isSlot": false,
														"src": "2357:8:0",
														"valueSize": 1
													}
												],
												"id": 189,
												"nodeType": "InlineAssembly",
												"src": "2323:52:0"
											}
										]
									},
									"id": 191,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "diamondStorage",
									"nameLocation": "2165:14:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 180,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2179:2:0"
									},
									"returnParameters": {
										"id": 184,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 183,
												"mutability": "mutable",
												"name": "ds",
												"nameLocation": "2252:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 191,
												"src": "2229:25:0",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_DiamondStorage_$179_storage_ptr",
													"typeString": "struct Diamond.DiamondStorage"
												},
												"typeName": {
													"id": 182,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 181,
														"name": "DiamondStorage",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 179,
														"src": "2229:14:0"
													},
													"referencedDeclaration": 179,
													"src": "2229:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_DiamondStorage_$179_storage_ptr",
														"typeString": "struct Diamond.DiamondStorage"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2228:27:0"
									},
									"scope": 221,
									"src": "2156:225:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 215,
										"nodeType": "Block",
										"src": "2415:542:0",
										"statements": [
											{
												"assignments": [
													195
												],
												"declarations": [
													{
														"constant": false,
														"id": 195,
														"mutability": "mutable",
														"name": "facet",
														"nameLocation": "2433:5:0",
														"nodeType": "VariableDeclaration",
														"scope": 215,
														"src": "2425:13:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 194,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2425:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 203,
												"initialValue": {
													"expression": {
														"baseExpression": {
															"expression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 196,
																	"name": "diamondStorage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 191,
																	"src": "2441:14:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_DiamondStorage_$179_storage_ptr_$",
																		"typeString": "function () pure returns (struct Diamond.DiamondStorage storage pointer)"
																	}
																},
																"id": 197,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2441:16:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_DiamondStorage_$179_storage_ptr",
																	"typeString": "struct Diamond.DiamondStorage storage pointer"
																}
															},
															"id": 198,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "selectorToFacetAndPosition",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 168,
															"src": "2441:43:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_bytes4_$_t_struct$_FacetAddressAndPosition_$49_storage_$",
																"typeString": "mapping(bytes4 => struct Diamond.FacetAddressAndPosition storage ref)"
															}
														},
														"id": 201,
														"indexExpression": {
															"expression": {
																"id": 199,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2485:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 200,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sig",
															"nodeType": "MemberAccess",
															"src": "2485:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "2441:52:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_FacetAddressAndPosition_$49_storage",
															"typeString": "struct Diamond.FacetAddressAndPosition storage ref"
														}
													},
													"id": 202,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "facetAddress",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 46,
													"src": "2441:65:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2425:81:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 210,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 205,
																"name": "facet",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 195,
																"src": "2524:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 208,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2541:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 207,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2533:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 206,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2533:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 209,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2533:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2524:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4469616d6f6e6420646f65736e2774206578697374",
															"id": 211,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2545:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c0fb255f57e2efe07aa0283c494e42d125205749c412924b8dff6e4826cdfa5b",
																"typeString": "literal_string \"Diamond doesn't exist\""
															},
															"value": "Diamond doesn't exist"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c0fb255f57e2efe07aa0283c494e42d125205749c412924b8dff6e4826cdfa5b",
																"typeString": "literal_string \"Diamond doesn't exist\""
															}
														],
														"id": 204,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2516:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 212,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2516:53:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 213,
												"nodeType": "ExpressionStatement",
												"src": "2516:53:0"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "2589:361:0",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2616:1:0",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2618:1:0",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [],
																		"functionName": {
																			"name": "calldatasize",
																			"nodeType": "YulIdentifier",
																			"src": "2620:12:0"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2620:14:0"
																	}
																],
																"functionName": {
																	"name": "calldatacopy",
																	"nodeType": "YulIdentifier",
																	"src": "2603:12:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "2603:32:0"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2603:32:0"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2648:65:0",
															"value": {
																"arguments": [
																	{
																		"arguments": [],
																		"functionName": {
																			"name": "gas",
																			"nodeType": "YulIdentifier",
																			"src": "2675:3:0"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2675:5:0"
																	},
																	{
																		"name": "facet",
																		"nodeType": "YulIdentifier",
																		"src": "2682:5:0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2689:1:0",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [],
																		"functionName": {
																			"name": "calldatasize",
																			"nodeType": "YulIdentifier",
																			"src": "2692:12:0"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2692:14:0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2708:1:0",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2711:1:0",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "delegatecall",
																	"nodeType": "YulIdentifier",
																	"src": "2662:12:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "2662:51:0"
															},
															"variables": [
																{
																	"name": "result",
																	"nodeType": "YulTypedName",
																	"src": "2652:6:0",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2741:1:0",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2744:1:0",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [],
																		"functionName": {
																			"name": "returndatasize",
																			"nodeType": "YulIdentifier",
																			"src": "2747:14:0"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2747:16:0"
																	}
																],
																"functionName": {
																	"name": "returndatacopy",
																	"nodeType": "YulIdentifier",
																	"src": "2726:14:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "2726:38:0"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2726:38:0"
														},
														{
															"cases": [
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "2811:60:0",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "2837:1:0",
																							"type": "",
																							"value": "0"
																						},
																						{
																							"arguments": [],
																							"functionName": {
																								"name": "returndatasize",
																								"nodeType": "YulIdentifier",
																								"src": "2840:14:0"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "2840:16:0"
																						}
																					],
																					"functionName": {
																						"name": "revert",
																						"nodeType": "YulIdentifier",
																						"src": "2829:6:0"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2829:28:0"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "2829:28:0"
																			}
																		]
																	},
																	"nodeType": "YulCase",
																	"src": "2804:67:0",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2809:1:0",
																		"type": "",
																		"value": "0"
																	}
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "2880:60:0",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "2906:1:0",
																							"type": "",
																							"value": "0"
																						},
																						{
																							"arguments": [],
																							"functionName": {
																								"name": "returndatasize",
																								"nodeType": "YulIdentifier",
																								"src": "2909:14:0"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "2909:16:0"
																						}
																					],
																					"functionName": {
																						"name": "return",
																						"nodeType": "YulIdentifier",
																						"src": "2898:6:0"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2898:28:0"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "2898:28:0"
																			}
																		]
																	},
																	"nodeType": "YulCase",
																	"src": "2872:68:0",
																	"value": "default"
																}
															],
															"expression": {
																"name": "result",
																"nodeType": "YulIdentifier",
																"src": "2784:6:0"
															},
															"nodeType": "YulSwitch",
															"src": "2777:163:0"
														}
													]
												},
												"evmVersion": "london",
												"externalReferences": [
													{
														"declaration": 195,
														"isOffset": false,
														"isSlot": false,
														"src": "2682:5:0",
														"valueSize": 1
													}
												],
												"id": 214,
												"nodeType": "InlineAssembly",
												"src": "2580:370:0"
											}
										]
									},
									"id": 216,
									"implemented": true,
									"kind": "fallback",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 192,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2395:2:0"
									},
									"returnParameters": {
										"id": 193,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2415:0:0"
									},
									"scope": 221,
									"src": "2387:570:0",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 219,
										"nodeType": "Block",
										"src": "2989:3:0",
										"statements": []
									},
									"id": 220,
									"implemented": true,
									"kind": "receive",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 217,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2969:2:0"
									},
									"returnParameters": {
										"id": 218,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2989:0:0"
									},
									"scope": 221,
									"src": "2962:30:0",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 222,
							"src": "363:2631:0",
							"usedErrors": []
						}
					],
					"src": "30:2965:0"
				},
				"id": 0
			}
		}
	}
}