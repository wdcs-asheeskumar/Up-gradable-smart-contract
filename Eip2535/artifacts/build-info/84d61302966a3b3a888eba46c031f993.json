{
	"id": "84d61302966a3b3a888eba46c031f993",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.24",
	"solcLongVersion": "0.8.24+commit.e11b9ed9",
	"input": {
		"language": "Solidity",
		"sources": {
			"Eip2535/EIp2535Diamond.sol": {
				"content": "//SPDX-License-Identifier:MIT\npragma solidity ^0.8.0;\n\nimport \"@solidstate/contracts/proxy/diamond/SolidStateDiamond.sol\";\n\ninterface IDiamond {\n    enum FacetCutAction {\n        Add,\n        Replace,\n        Remove\n    }\n    struct FacetCut {\n        address facetAddress;\n        FacetCutAction action;\n        bytes4 functionSelector;\n        // uint256 gaslimit;\n    }\n\n    // mapping(bytes4 => address) functionSelectorCode;\n    event DiamondCut(FacetCut[] _diamondCut, address _init, bytes _calldata);\n\n    event CandidateAdded(\n        string _nameOfCandidate,\n        uint256 indexed _voterCardNo,\n        string _partyName\n    );\n    event VoteCasted(\n        address _voterAddress,\n        uint256 indexed _voterCardNo,\n        uint256 _partyNumber\n    );\n\n    function diamondCut(\n        FacetCut[] calldata _diamondCut,\n        address _init,\n        bytes calldata _calldata\n    ) external;\n\n    // function setOwner(address _owner) external;\n\n    function addCandidateDetails(\n        string memory _nameOfCandidate,\n        uint256 _voterCardNo,\n        string memory _partyName\n    ) external;\n\n    function addVoterDetails(\n        address _voterAddress,\n        uint256 _voterCardNo,\n        uint256 _partyNUmber\n    ) external;\n}\n\ncontract Eip2535VotingContract {\n    struct VoterDetails {\n        address voterAddress;\n        uint256 partyNumber;\n    }\n\n    struct CandidateDetails {\n        string nameOfCandidate;\n        bytes32 voterCardNo;\n        string partyName;\n        uint256 totalVotes;\n    }\n\n    mapping(bytes32 => VoterDetails) public voterDetails;\n    mapping(uint256 => CandidateDetails) public candidateDetails;\n    mapping(bytes32 => bool) public hasVoted;\n    mapping(bytes32 => bool) public hasRegistered;\n\n    uint256 public partyCounter;\n    uint256 public voterCounter;\n    string[] public listOfParties;\n    string public winner;\n\n    event CandidateAdded(\n        string _nameOfCandidate,\n        uint256 indexed _voterCardNo,\n        string _partyName\n    );\n\n    event VoteCasted(\n        address _voterAddress,\n        uint256 indexed _voterCardNo,\n        uint256 _partyNumber\n    );\n\n    function addCandidateDetails(\n        string memory _nameOfCandidate,\n        uint256 _voterCardNo,\n        string memory _partyName\n    ) public {\n        bytes32 voterCard = keccak256(abi.encodePacked(_voterCardNo));\n        require(\n            hasRegistered[voterCard] == false,\n            \"Candidate has already been registered\"\n        );\n        uint256 _partyNumber = partyCounter;\n        candidateDetails[_partyNumber].nameOfCandidate = _nameOfCandidate;\n        candidateDetails[_partyNumber].voterCardNo = voterCard;\n        candidateDetails[_partyNumber].partyName = _partyName;\n        hasRegistered[voterCard] = true;\n        listOfParties.push(_partyName);\n        partyCounter = partyCounter + 1;\n\n        emit CandidateAdded(_nameOfCandidate, _voterCardNo, _partyName);\n    }\n\n    function checkCandidateStatus(uint256 _voterCardNo)\n        public\n        view\n        returns (bool)\n    {\n        bytes32 voterCard = keccak256(abi.encodePacked(_voterCardNo));\n        return hasRegistered[voterCard];\n    }\n\n    function addVoterDetails(\n        address _voterAddress,\n        uint256 _voterCardNo,\n        uint256 _partyNumber\n    ) public {\n        voterCounter = voterCounter + 1;\n        bytes32 voterCard = keccak256(abi.encodePacked(_voterCardNo));\n        require(hasVoted[voterCard] == false, \"Candidate has already voted\");\n        require(\n            listOfParties.length >= 2,\n            \"There can't be election with a single party\"\n        );\n        voterDetails[voterCard].voterAddress = _voterAddress;\n        voterDetails[voterCard].partyNumber = _partyNumber;\n        candidateDetails[_partyNumber].totalVotes += 1;\n        hasVoted[voterCard] = true;\n        emit VoteCasted(_voterAddress, _voterCardNo, _partyNumber);\n    }\n\n    function checkVoterStatus(uint256 _voterCardNo) public view returns (bool) {\n        bytes32 voterCard = keccak256(abi.encodePacked(_voterCardNo));\n        return hasVoted[voterCard];\n    }\n\n    function result() public returns (string memory) {\n        uint256 temp;\n        uint256 count;\n        for (uint256 i = 0; i < listOfParties.length; i++) {\n            if (temp < candidateDetails[i].totalVotes) {\n                temp = candidateDetails[i].totalVotes;\n                count = i;\n            }\n        }\n\n        winner = candidateDetails[count].nameOfCandidate;\n        return winner;\n    }\n}\n\n// contract Eip2535AdminFacet {\n//     address public owner;\n//     address public diamond;\n\n//     constructor(address _diamond) {\n//         owner = msg.sender;\n//         diamond = _diamond;\n//     }\n\n//     function addFacet(address _facet) external {\n//         IDiamond.FacetCut[] memory _facetCuts = new IDiamond.FacetCut[](1);\n//         _facetCuts[0] = IDiamond.FacetCut({\n//             facetAddress: _facet,\n//             action: IDiamond.FacetCutAction.Add,\n//             functionSelector: bytes4(\n//                 keccak256(\"addCandidateDetails(string,utin256,string)\")\n//             )\n//             // gaslimit: 100000\n//         });\n//         IDiamond(diamond).diamondCut(_facetCuts, address(0), \"\"); //(bytes,)\n//     }\n// }\n\ncontract Eip2535Diamond is IDiamond {\n    address public owner;\n\n    constructor() {\n        owner = msg.sender;\n    }\n\n    function addFacet(address _facet) external {\n        IDiamond.FacetCut[] memory _facetCuts = new IDiamond.FacetCut[](1);\n        _facetCuts[0] = IDiamond.FacetCut({\n            facetAddress: _facet,\n            action: IDiamond.FacetCutAction.Add,\n            functionSelector: bytes4(\n                keccak256(\"addCandidateDetails(string,utin256,string)\")\n            )\n        });\n        IDiamond(address(this)).diamondCut(_facetCuts, address(0), \"\"); //(bytes,)\n    }\n\n    function diamondCut(\n        FacetCut[] calldata _diamondCut,\n        address _init,\n        bytes calldata _calldata\n    ) external {\n        for (uint256 i; i < _diamondCut.length; i++) {\n            if (_diamondCut[i].facetAddress == address(0)) {\n                require(_init != address(0), \"Invalid initialize address\");\n                _init.delegatecall(_calldata);\n            } else {\n                (bool success, ) = _diamondCut[i].facetAddress.delegatecall(\n                    abi.encodePacked(\n                        _diamondCut[i].functionSelector,\n                        abi.encode(_diamondCut[i], address(0), _calldata)\n                    )\n                );\n                require(success, \"Facet modification failed\");\n                emit DiamondCut(_diamondCut, _init, _calldata);\n            }\n        }\n    }\n\n    function addCandidateDetails(\n        string memory _nameOfCandidate,\n        uint256 _voterCardNo,\n        string memory _partyName\n    ) external {\n        emit CandidateAdded(_nameOfCandidate, _voterCardNo, _partyName);\n    }\n\n    function addVoterDetails(\n        address _voterAddress,\n        uint256 _voterCardNo,\n        uint256 _partyNumber\n    ) public {\n        emit VoteCasted(_voterAddress, _voterCardNo, _partyNumber);\n    }\n}\n"
			},
			"@solidstate/contracts/proxy/diamond/SolidStateDiamond.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.18;\n\nimport { IOwnable, Ownable, OwnableInternal } from '../../access/ownable/Ownable.sol';\nimport { ISafeOwnable, SafeOwnable } from '../../access/ownable/SafeOwnable.sol';\nimport { IERC165 } from '../../interfaces/IERC165.sol';\nimport { IERC173 } from '../../interfaces/IERC173.sol';\nimport { IERC2535DiamondCut } from '../../interfaces/IERC2535DiamondCut.sol';\nimport { IERC2535DiamondLoupe } from '../../interfaces/IERC2535DiamondLoupe.sol';\nimport { ERC165Base, ERC165BaseStorage } from '../../introspection/ERC165/base/ERC165Base.sol';\nimport { DiamondBase } from './base/DiamondBase.sol';\nimport { DiamondFallback, IDiamondFallback } from './fallback/DiamondFallback.sol';\nimport { DiamondReadable } from './readable/DiamondReadable.sol';\nimport { DiamondWritable } from './writable/DiamondWritable.sol';\nimport { ISolidStateDiamond } from './ISolidStateDiamond.sol';\n\n/**\n * @title SolidState \"Diamond\" proxy reference implementation\n */\nabstract contract SolidStateDiamond is\n    ISolidStateDiamond,\n    DiamondBase,\n    DiamondFallback,\n    DiamondReadable,\n    DiamondWritable,\n    SafeOwnable,\n    ERC165Base\n{\n    constructor() {\n        bytes4[] memory selectors = new bytes4[](12);\n        uint256 selectorIndex;\n\n        // register DiamondFallback\n\n        selectors[selectorIndex++] = IDiamondFallback\n            .getFallbackAddress\n            .selector;\n        selectors[selectorIndex++] = IDiamondFallback\n            .setFallbackAddress\n            .selector;\n\n        _setSupportsInterface(type(IDiamondFallback).interfaceId, true);\n\n        // register DiamondWritable\n\n        selectors[selectorIndex++] = IERC2535DiamondCut.diamondCut.selector;\n\n        _setSupportsInterface(type(IERC2535DiamondCut).interfaceId, true);\n\n        // register DiamondReadable\n\n        selectors[selectorIndex++] = IERC2535DiamondLoupe.facets.selector;\n        selectors[selectorIndex++] = IERC2535DiamondLoupe\n            .facetFunctionSelectors\n            .selector;\n        selectors[selectorIndex++] = IERC2535DiamondLoupe\n            .facetAddresses\n            .selector;\n        selectors[selectorIndex++] = IERC2535DiamondLoupe.facetAddress.selector;\n\n        _setSupportsInterface(type(IERC2535DiamondLoupe).interfaceId, true);\n\n        // register ERC165\n\n        selectors[selectorIndex++] = IERC165.supportsInterface.selector;\n\n        _setSupportsInterface(type(IERC165).interfaceId, true);\n\n        // register SafeOwnable\n\n        selectors[selectorIndex++] = Ownable.owner.selector;\n        selectors[selectorIndex++] = SafeOwnable.nomineeOwner.selector;\n        selectors[selectorIndex++] = Ownable.transferOwnership.selector;\n        selectors[selectorIndex++] = SafeOwnable.acceptOwnership.selector;\n\n        _setSupportsInterface(type(IERC173).interfaceId, true);\n\n        // diamond cut\n\n        FacetCut[] memory facetCuts = new FacetCut[](1);\n\n        facetCuts[0] = FacetCut({\n            target: address(this),\n            action: FacetCutAction.ADD,\n            selectors: selectors\n        });\n\n        _diamondCut(facetCuts, address(0), '');\n\n        // set owner\n\n        _setOwner(msg.sender);\n    }\n\n    receive() external payable {}\n\n    function _transferOwnership(\n        address account\n    ) internal virtual override(OwnableInternal, SafeOwnable) {\n        super._transferOwnership(account);\n    }\n\n    /**\n     * @inheritdoc DiamondFallback\n     */\n    function _getImplementation()\n        internal\n        view\n        override(DiamondBase, DiamondFallback)\n        returns (address implementation)\n    {\n        implementation = super._getImplementation();\n    }\n}\n"
			},
			"@solidstate/contracts/proxy/diamond/ISolidStateDiamond.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.18;\n\nimport { ISafeOwnable } from '../../access/ownable/ISafeOwnable.sol';\nimport { IERC165 } from '../../interfaces/IERC165.sol';\nimport { IDiamondBase } from './base/IDiamondBase.sol';\nimport { IDiamondFallback } from './fallback/IDiamondFallback.sol';\nimport { IDiamondReadable } from './readable/IDiamondReadable.sol';\nimport { IDiamondWritable } from './writable/IDiamondWritable.sol';\n\ninterface ISolidStateDiamond is\n    IDiamondBase,\n    IDiamondFallback,\n    IDiamondReadable,\n    IDiamondWritable,\n    ISafeOwnable,\n    IERC165\n{\n    receive() external payable;\n}\n"
			},
			"@solidstate/contracts/proxy/diamond/writable/DiamondWritable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.18;\n\nimport { IERC2535DiamondCut } from '../../../interfaces/IERC2535DiamondCut.sol';\nimport { OwnableInternal } from '../../../access/ownable/OwnableInternal.sol';\nimport { IDiamondWritable } from './IDiamondWritable.sol';\nimport { DiamondWritableInternal } from './DiamondWritableInternal.sol';\n\n/**\n * @title EIP-2535 \"Diamond\" proxy update contract\n */\nabstract contract DiamondWritable is\n    IDiamondWritable,\n    DiamondWritableInternal,\n    OwnableInternal\n{\n    /**\n     * @inheritdoc IERC2535DiamondCut\n     */\n    function diamondCut(\n        FacetCut[] calldata facetCuts,\n        address target,\n        bytes calldata data\n    ) external onlyOwner {\n        _diamondCut(facetCuts, target, data);\n    }\n}\n"
			},
			"@solidstate/contracts/proxy/diamond/readable/DiamondReadable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.18;\n\nimport { IERC2535DiamondLoupe } from '../../../interfaces/IERC2535DiamondLoupe.sol';\nimport { DiamondBaseStorage } from '../base/DiamondBaseStorage.sol';\nimport { IDiamondReadable } from './IDiamondReadable.sol';\nimport { DiamondReadableInternal } from './DiamondReadableInternal.sol';\n\n/**\n * @title EIP-2535 \"Diamond\" proxy introspection contract\n * @dev derived from https://github.com/mudgen/diamond-2 (MIT license)\n */\nabstract contract DiamondReadable is IDiamondReadable, DiamondReadableInternal {\n    /**\n     * @inheritdoc IERC2535DiamondLoupe\n     */\n    function facets() external view returns (Facet[] memory diamondFacets) {\n        diamondFacets = _facets();\n    }\n\n    /**\n     * @inheritdoc IERC2535DiamondLoupe\n     */\n    function facetFunctionSelectors(\n        address facet\n    ) external view returns (bytes4[] memory selectors) {\n        selectors = _facetFunctionSelectors(facet);\n    }\n\n    /**\n     * @inheritdoc IERC2535DiamondLoupe\n     */\n    function facetAddresses()\n        external\n        view\n        returns (address[] memory addresses)\n    {\n        addresses = _facetAddresses();\n    }\n\n    /**\n     * @inheritdoc IERC2535DiamondLoupe\n     */\n    function facetAddress(\n        bytes4 selector\n    ) external view returns (address facet) {\n        facet = _facetAddress(selector);\n    }\n}\n"
			},
			"@solidstate/contracts/proxy/diamond/fallback/DiamondFallback.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.18;\n\nimport { OwnableInternal } from '../../../access/ownable/OwnableInternal.sol';\nimport { DiamondBase } from '../base/DiamondBase.sol';\nimport { DiamondBaseStorage } from '../base/DiamondBaseStorage.sol';\nimport { IDiamondFallback } from './IDiamondFallback.sol';\n\n/**\n * @title Fallback feature for EIP-2535 \"Diamond\" proxy\n */\nabstract contract DiamondFallback is\n    IDiamondFallback,\n    OwnableInternal,\n    DiamondBase\n{\n    /**\n     * @inheritdoc IDiamondFallback\n     */\n    function getFallbackAddress()\n        external\n        view\n        returns (address fallbackAddress)\n    {\n        fallbackAddress = _getFallbackAddress();\n    }\n\n    /**\n     * @inheritdoc IDiamondFallback\n     */\n    function setFallbackAddress(address fallbackAddress) external onlyOwner {\n        _setFallbackAddress(fallbackAddress);\n    }\n\n    /**\n     * @inheritdoc DiamondBase\n     * @notice query custom fallback address is no implementation is found\n     */\n    function _getImplementation()\n        internal\n        view\n        virtual\n        override\n        returns (address implementation)\n    {\n        implementation = super._getImplementation();\n\n        if (implementation == address(0)) {\n            implementation = _getFallbackAddress();\n        }\n    }\n\n    /**\n     * @notice query the address of the fallback implementation\n     * @return fallbackAddress address of fallback implementation\n     */\n    function _getFallbackAddress()\n        internal\n        view\n        virtual\n        returns (address fallbackAddress)\n    {\n        fallbackAddress = DiamondBaseStorage.layout().fallbackAddress;\n    }\n\n    /**\n     * @notice set the address of the fallback implementation\n     * @param fallbackAddress address of fallback implementation\n     */\n    function _setFallbackAddress(address fallbackAddress) internal virtual {\n        DiamondBaseStorage.layout().fallbackAddress = fallbackAddress;\n    }\n}\n"
			},
			"@solidstate/contracts/proxy/diamond/base/DiamondBase.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.18;\n\nimport { Proxy } from '../../Proxy.sol';\nimport { IDiamondBase } from './IDiamondBase.sol';\nimport { DiamondBaseStorage } from './DiamondBaseStorage.sol';\n\n/**\n * @title EIP-2535 \"Diamond\" proxy base contract\n * @dev see https://eips.ethereum.org/EIPS/eip-2535\n * @dev note that for EIP-2535 compliance this base contract must also include the DiamondReadable functions (either within the same deployment or by proxy)\n */\nabstract contract DiamondBase is IDiamondBase, Proxy {\n    /**\n     * @inheritdoc Proxy\n     */\n    function _getImplementation()\n        internal\n        view\n        virtual\n        override\n        returns (address implementation)\n    {\n        // inline storage layout retrieval uses less gas\n        DiamondBaseStorage.Layout storage l;\n        bytes32 slot = DiamondBaseStorage.STORAGE_SLOT;\n        assembly {\n            l.slot := slot\n        }\n\n        implementation = address(bytes20(l.facets[msg.sig]));\n    }\n}\n"
			},
			"@solidstate/contracts/introspection/ERC165/base/ERC165Base.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.18;\n\nimport { IERC165 } from '../../../interfaces/IERC165.sol';\nimport { IERC165Base } from './IERC165Base.sol';\nimport { ERC165BaseInternal } from './ERC165BaseInternal.sol';\nimport { ERC165BaseStorage } from './ERC165BaseStorage.sol';\n\n/**\n * @title ERC165 implementation\n */\nabstract contract ERC165Base is IERC165Base, ERC165BaseInternal {\n    /**\n     * @inheritdoc IERC165\n     */\n    function supportsInterface(bytes4 interfaceId) public view returns (bool) {\n        return _supportsInterface(interfaceId);\n    }\n}\n"
			},
			"@solidstate/contracts/interfaces/IERC2535DiamondLoupe.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.18;\n\nimport { IERC2535DiamondLoupeInternal } from './IERC2535DiamondLoupeInternal.sol';\n\n/**\n * @title ERC2535 read interface\n * @dev see https://eips.ethereum.org/EIPS/eip-2535\n */\ninterface IERC2535DiamondLoupe is IERC2535DiamondLoupeInternal {\n    /**\n     * @notice get all facets and their selectors\n     * @return diamondFacets array of structured facet data\n     */\n    function facets() external view returns (Facet[] memory diamondFacets);\n\n    /**\n     * @notice get all selectors for given facet address\n     * @param facet address of facet to query\n     * @return selectors array of function selectors\n     */\n    function facetFunctionSelectors(\n        address facet\n    ) external view returns (bytes4[] memory selectors);\n\n    /**\n     * @notice get addresses of all facets used by diamond\n     * @return addresses array of facet addresses\n     */\n    function facetAddresses()\n        external\n        view\n        returns (address[] memory addresses);\n\n    /**\n     * @notice get the address of the facet associated with given selector\n     * @param selector function selector to query\n     * @return facet facet address (zero address if not found)\n     */\n    function facetAddress(\n        bytes4 selector\n    ) external view returns (address facet);\n}\n"
			},
			"@solidstate/contracts/interfaces/IERC2535DiamondCut.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.18;\n\nimport { IERC2535DiamondCutInternal } from './IERC2535DiamondCutInternal.sol';\n\n/**\n * @title ERC2535 write interface\n * @dev see https://eips.ethereum.org/EIPS/eip-2535\n */\ninterface IERC2535DiamondCut is IERC2535DiamondCutInternal {\n    /**\n     * @notice update diamond facets and optionally execute arbitrary initialization function\n     * @param facetCuts array of structured Diamond facet update data\n     * @param target optional target of initialization delegatecall\n     * @param data optional initialization function call data\n     */\n    function diamondCut(\n        FacetCut[] calldata facetCuts,\n        address target,\n        bytes calldata data\n    ) external;\n}\n"
			},
			"@solidstate/contracts/interfaces/IERC173.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.18;\n\nimport { IERC173Internal } from './IERC173Internal.sol';\n\n/**\n * @title Contract ownership standard interface\n * @dev see https://eips.ethereum.org/EIPS/eip-173\n */\ninterface IERC173 is IERC173Internal {\n    /**\n     * @notice get the ERC173 contract owner\n     * @return contract owner\n     */\n    function owner() external view returns (address);\n\n    /**\n     * @notice transfer contract ownership to new account\n     * @param account address of new owner\n     */\n    function transferOwnership(address account) external;\n}\n"
			},
			"@solidstate/contracts/interfaces/IERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.18;\n\nimport { IERC165Internal } from './IERC165Internal.sol';\n\n/**\n * @title ERC165 interface registration interface\n * @dev see https://eips.ethereum.org/EIPS/eip-165\n */\ninterface IERC165 is IERC165Internal {\n    /**\n     * @notice query whether contract has registered support for given interface\n     * @param interfaceId interface id\n     * @return bool whether interface is supported\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"
			},
			"@solidstate/contracts/access/ownable/SafeOwnable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.18;\n\nimport { Ownable } from './Ownable.sol';\nimport { ISafeOwnable } from './ISafeOwnable.sol';\nimport { OwnableInternal } from './OwnableInternal.sol';\nimport { SafeOwnableInternal } from './SafeOwnableInternal.sol';\n\n/**\n * @title Ownership access control based on ERC173 with ownership transfer safety check\n */\nabstract contract SafeOwnable is ISafeOwnable, Ownable, SafeOwnableInternal {\n    /**\n     * @inheritdoc ISafeOwnable\n     */\n    function nomineeOwner() public view virtual returns (address) {\n        return _nomineeOwner();\n    }\n\n    /**\n     * @inheritdoc ISafeOwnable\n     */\n    function acceptOwnership() public virtual onlyNomineeOwner {\n        _acceptOwnership();\n    }\n\n    function _transferOwnership(\n        address account\n    ) internal virtual override(OwnableInternal, SafeOwnableInternal) {\n        super._transferOwnership(account);\n    }\n}\n"
			},
			"@solidstate/contracts/access/ownable/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.18;\n\nimport { IERC173 } from '../../interfaces/IERC173.sol';\nimport { IOwnable } from './IOwnable.sol';\nimport { OwnableInternal } from './OwnableInternal.sol';\n\n/**\n * @title Ownership access control based on ERC173\n */\nabstract contract Ownable is IOwnable, OwnableInternal {\n    /**\n     * @inheritdoc IERC173\n     */\n    function owner() public view virtual returns (address) {\n        return _owner();\n    }\n\n    /**\n     * @inheritdoc IERC173\n     */\n    function transferOwnership(address account) public virtual onlyOwner {\n        _transferOwnership(account);\n    }\n}\n"
			},
			"@solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.18;\n\nimport { AddressUtils } from '../../../utils/AddressUtils.sol';\nimport { DiamondBaseStorage } from '../base/DiamondBaseStorage.sol';\nimport { IDiamondWritableInternal } from './IDiamondWritableInternal.sol';\n\nabstract contract DiamondWritableInternal is IDiamondWritableInternal {\n    using AddressUtils for address;\n\n    bytes32 private constant CLEAR_ADDRESS_MASK =\n        bytes32(uint256(0xffffffffffffffffffffffff));\n    bytes32 private constant CLEAR_SELECTOR_MASK =\n        bytes32(uint256(0xffffffff << 224));\n\n    /**\n     * @notice update functions callable on Diamond proxy\n     * @param facetCuts array of structured Diamond facet update data\n     * @param target optional recipient of initialization delegatecall\n     * @param data optional initialization call data\n     */\n    function _diamondCut(\n        FacetCut[] memory facetCuts,\n        address target,\n        bytes memory data\n    ) internal virtual {\n        DiamondBaseStorage.Layout storage l = DiamondBaseStorage.layout();\n\n        unchecked {\n            uint256 originalSelectorCount = l.selectorCount;\n            uint256 selectorCount = originalSelectorCount;\n            bytes32 selectorSlot;\n\n            // Check if last selector slot is not full\n            if (selectorCount & 7 > 0) {\n                // get last selectorSlot\n                selectorSlot = l.selectorSlots[selectorCount >> 3];\n            }\n\n            for (uint256 i; i < facetCuts.length; i++) {\n                FacetCut memory facetCut = facetCuts[i];\n                FacetCutAction action = facetCut.action;\n\n                if (facetCut.selectors.length == 0)\n                    revert DiamondWritable__SelectorNotSpecified();\n\n                if (action == FacetCutAction.ADD) {\n                    (selectorCount, selectorSlot) = _addFacetSelectors(\n                        l,\n                        selectorCount,\n                        selectorSlot,\n                        facetCut\n                    );\n                } else if (action == FacetCutAction.REPLACE) {\n                    _replaceFacetSelectors(l, facetCut);\n                } else if (action == FacetCutAction.REMOVE) {\n                    (selectorCount, selectorSlot) = _removeFacetSelectors(\n                        l,\n                        selectorCount,\n                        selectorSlot,\n                        facetCut\n                    );\n                }\n            }\n\n            if (selectorCount != originalSelectorCount) {\n                l.selectorCount = uint16(selectorCount);\n            }\n\n            // If last selector slot is not full\n            if (selectorCount & 7 > 0) {\n                l.selectorSlots[selectorCount >> 3] = selectorSlot;\n            }\n\n            emit DiamondCut(facetCuts, target, data);\n            _initialize(target, data);\n        }\n    }\n\n    function _addFacetSelectors(\n        DiamondBaseStorage.Layout storage l,\n        uint256 selectorCount,\n        bytes32 selectorSlot,\n        FacetCut memory facetCut\n    ) internal returns (uint256, bytes32) {\n        unchecked {\n            if (facetCut.target.isContract()) {\n                if (facetCut.target == address(this)) {\n                    revert DiamondWritable__SelectorIsImmutable();\n                }\n            } else if (facetCut.target != address(this)) {\n                revert DiamondWritable__TargetHasNoCode();\n            }\n\n            for (uint256 i; i < facetCut.selectors.length; i++) {\n                bytes4 selector = facetCut.selectors[i];\n                bytes32 oldFacet = l.facets[selector];\n\n                if (address(bytes20(oldFacet)) != address(0))\n                    revert DiamondWritable__SelectorAlreadyAdded();\n\n                // add facet for selector\n                l.facets[selector] =\n                    bytes20(facetCut.target) |\n                    bytes32(selectorCount);\n                uint256 selectorInSlotPosition = (selectorCount & 7) << 5;\n\n                // clear selector position in slot and add selector\n                selectorSlot =\n                    (selectorSlot &\n                        ~(CLEAR_SELECTOR_MASK >> selectorInSlotPosition)) |\n                    (bytes32(selector) >> selectorInSlotPosition);\n\n                // if slot is full then write it to storage\n                if (selectorInSlotPosition == 224) {\n                    l.selectorSlots[selectorCount >> 3] = selectorSlot;\n                    selectorSlot = 0;\n                }\n\n                selectorCount++;\n            }\n\n            return (selectorCount, selectorSlot);\n        }\n    }\n\n    function _removeFacetSelectors(\n        DiamondBaseStorage.Layout storage l,\n        uint256 selectorCount,\n        bytes32 selectorSlot,\n        FacetCut memory facetCut\n    ) internal returns (uint256, bytes32) {\n        unchecked {\n            if (facetCut.target != address(0))\n                revert DiamondWritable__RemoveTargetNotZeroAddress();\n\n            uint256 selectorSlotCount = selectorCount >> 3;\n            uint256 selectorInSlotIndex = selectorCount & 7;\n\n            for (uint256 i; i < facetCut.selectors.length; i++) {\n                bytes4 selector = facetCut.selectors[i];\n                bytes32 oldFacet = l.facets[selector];\n\n                if (address(bytes20(oldFacet)) == address(0))\n                    revert DiamondWritable__SelectorNotFound();\n\n                if (address(bytes20(oldFacet)) == address(this))\n                    revert DiamondWritable__SelectorIsImmutable();\n\n                if (selectorSlot == 0) {\n                    selectorSlotCount--;\n                    selectorSlot = l.selectorSlots[selectorSlotCount];\n                    selectorInSlotIndex = 7;\n                } else {\n                    selectorInSlotIndex--;\n                }\n\n                bytes4 lastSelector;\n                uint256 oldSelectorsSlotCount;\n                uint256 oldSelectorInSlotPosition;\n\n                // adding a block here prevents stack too deep error\n                {\n                    // replace selector with last selector in l.facets\n                    lastSelector = bytes4(\n                        selectorSlot << (selectorInSlotIndex << 5)\n                    );\n\n                    if (lastSelector != selector) {\n                        // update last selector slot position info\n                        l.facets[lastSelector] =\n                            (oldFacet & CLEAR_ADDRESS_MASK) |\n                            bytes20(l.facets[lastSelector]);\n                    }\n\n                    delete l.facets[selector];\n                    uint256 oldSelectorCount = uint16(uint256(oldFacet));\n                    oldSelectorsSlotCount = oldSelectorCount >> 3;\n                    oldSelectorInSlotPosition = (oldSelectorCount & 7) << 5;\n                }\n\n                if (oldSelectorsSlotCount != selectorSlotCount) {\n                    bytes32 oldSelectorSlot = l.selectorSlots[\n                        oldSelectorsSlotCount\n                    ];\n\n                    // clears the selector we are deleting and puts the last selector in its place.\n                    oldSelectorSlot =\n                        (oldSelectorSlot &\n                            ~(CLEAR_SELECTOR_MASK >>\n                                oldSelectorInSlotPosition)) |\n                        (bytes32(lastSelector) >> oldSelectorInSlotPosition);\n\n                    // update storage with the modified slot\n                    l.selectorSlots[oldSelectorsSlotCount] = oldSelectorSlot;\n                } else {\n                    // clears the selector we are deleting and puts the last selector in its place.\n                    selectorSlot =\n                        (selectorSlot &\n                            ~(CLEAR_SELECTOR_MASK >>\n                                oldSelectorInSlotPosition)) |\n                        (bytes32(lastSelector) >> oldSelectorInSlotPosition);\n                }\n\n                if (selectorInSlotIndex == 0) {\n                    delete l.selectorSlots[selectorSlotCount];\n                    selectorSlot = 0;\n                }\n            }\n\n            selectorCount = (selectorSlotCount << 3) | selectorInSlotIndex;\n\n            return (selectorCount, selectorSlot);\n        }\n    }\n\n    function _replaceFacetSelectors(\n        DiamondBaseStorage.Layout storage l,\n        FacetCut memory facetCut\n    ) internal {\n        unchecked {\n            if (!facetCut.target.isContract())\n                revert DiamondWritable__TargetHasNoCode();\n\n            for (uint256 i; i < facetCut.selectors.length; i++) {\n                bytes4 selector = facetCut.selectors[i];\n                bytes32 oldFacet = l.facets[selector];\n                address oldFacetAddress = address(bytes20(oldFacet));\n\n                if (oldFacetAddress == address(0))\n                    revert DiamondWritable__SelectorNotFound();\n                if (oldFacetAddress == address(this))\n                    revert DiamondWritable__SelectorIsImmutable();\n                if (oldFacetAddress == facetCut.target)\n                    revert DiamondWritable__ReplaceTargetIsIdentical();\n\n                // replace old facet address\n                l.facets[selector] =\n                    (oldFacet & CLEAR_ADDRESS_MASK) |\n                    bytes20(facetCut.target);\n            }\n        }\n    }\n\n    function _initialize(address target, bytes memory data) private {\n        if ((target == address(0)) != (data.length == 0))\n            revert DiamondWritable__InvalidInitializationParameters();\n\n        if (target != address(0)) {\n            if (target != address(this)) {\n                if (!target.isContract())\n                    revert DiamondWritable__TargetHasNoCode();\n            }\n\n            (bool success, ) = target.delegatecall(data);\n\n            if (!success) {\n                assembly {\n                    returndatacopy(0, 0, returndatasize())\n                    revert(0, returndatasize())\n                }\n            }\n        }\n    }\n}\n"
			},
			"@solidstate/contracts/proxy/diamond/writable/IDiamondWritable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.18;\n\nimport { IERC2535DiamondCut } from '../../../interfaces/IERC2535DiamondCut.sol';\nimport { IDiamondWritableInternal } from './IDiamondWritableInternal.sol';\n\n/**\n * @title Diamond proxy upgrade interface\n * @dev see https://eips.ethereum.org/EIPS/eip-2535\n */\ninterface IDiamondWritable is IERC2535DiamondCut, IDiamondWritableInternal {\n\n}\n"
			},
			"@solidstate/contracts/access/ownable/OwnableInternal.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.18;\n\nimport { IERC173 } from '../../interfaces/IERC173.sol';\nimport { AddressUtils } from '../../utils/AddressUtils.sol';\nimport { IOwnableInternal } from './IOwnableInternal.sol';\nimport { OwnableStorage } from './OwnableStorage.sol';\n\nabstract contract OwnableInternal is IOwnableInternal {\n    using AddressUtils for address;\n\n    modifier onlyOwner() {\n        if (msg.sender != _owner()) revert Ownable__NotOwner();\n        _;\n    }\n\n    modifier onlyTransitiveOwner() {\n        if (msg.sender != _transitiveOwner())\n            revert Ownable__NotTransitiveOwner();\n        _;\n    }\n\n    function _owner() internal view virtual returns (address) {\n        return OwnableStorage.layout().owner;\n    }\n\n    function _transitiveOwner() internal view virtual returns (address owner) {\n        owner = _owner();\n\n        while (owner.isContract()) {\n            try IERC173(owner).owner() returns (address transitiveOwner) {\n                owner = transitiveOwner;\n            } catch {\n                break;\n            }\n        }\n    }\n\n    function _transferOwnership(address account) internal virtual {\n        _setOwner(account);\n    }\n\n    function _setOwner(address account) internal virtual {\n        OwnableStorage.Layout storage l = OwnableStorage.layout();\n        emit OwnershipTransferred(l.owner, account);\n        l.owner = account;\n    }\n}\n"
			},
			"@solidstate/contracts/proxy/diamond/readable/DiamondReadableInternal.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.18;\n\nimport { DiamondBaseStorage } from '../base/DiamondBaseStorage.sol';\nimport { IDiamondReadableInternal } from './IDiamondReadableInternal.sol';\n\n/**\n * @title EIP-2535 \"Diamond\" proxy introspection contract internal functions\n * @dev derived from https://github.com/mudgen/diamond-2 (MIT license)\n */\nabstract contract DiamondReadableInternal is IDiamondReadableInternal {\n    /**\n     * @notice get all facets and their selectors\n     * @return diamondFacets array of structured facet data\n     */\n    function _facets() internal view returns (Facet[] memory diamondFacets) {\n        DiamondBaseStorage.Layout storage l = DiamondBaseStorage.layout();\n\n        diamondFacets = new Facet[](l.selectorCount);\n\n        uint8[] memory numFacetSelectors = new uint8[](l.selectorCount);\n        uint256 numFacets;\n        uint256 selectorIndex;\n\n        // loop through function selectors\n        for (uint256 slotIndex; selectorIndex < l.selectorCount; slotIndex++) {\n            bytes32 slot = l.selectorSlots[slotIndex];\n\n            for (\n                uint256 selectorSlotIndex;\n                selectorSlotIndex < 8;\n                selectorSlotIndex++\n            ) {\n                selectorIndex++;\n\n                if (selectorIndex > l.selectorCount) {\n                    break;\n                }\n\n                bytes4 selector = bytes4(slot << (selectorSlotIndex << 5));\n                address facet = address(bytes20(l.facets[selector]));\n\n                bool continueLoop;\n\n                for (uint256 facetIndex; facetIndex < numFacets; facetIndex++) {\n                    if (diamondFacets[facetIndex].target == facet) {\n                        diamondFacets[facetIndex].selectors[\n                            numFacetSelectors[facetIndex]\n                        ] = selector;\n                        // probably will never have more than 256 functions from one facet contract\n                        require(numFacetSelectors[facetIndex] < 255);\n                        numFacetSelectors[facetIndex]++;\n                        continueLoop = true;\n                        break;\n                    }\n                }\n\n                if (continueLoop) {\n                    continue;\n                }\n\n                diamondFacets[numFacets].target = facet;\n                diamondFacets[numFacets].selectors = new bytes4[](\n                    l.selectorCount\n                );\n                diamondFacets[numFacets].selectors[0] = selector;\n                numFacetSelectors[numFacets] = 1;\n                numFacets++;\n            }\n        }\n\n        for (uint256 facetIndex; facetIndex < numFacets; facetIndex++) {\n            uint256 numSelectors = numFacetSelectors[facetIndex];\n            bytes4[] memory selectors = diamondFacets[facetIndex].selectors;\n\n            // setting the number of selectors\n            assembly {\n                mstore(selectors, numSelectors)\n            }\n        }\n\n        // setting the number of facets\n        assembly {\n            mstore(diamondFacets, numFacets)\n        }\n    }\n\n    /**\n     * @notice get all selectors for given facet address\n     * @param facet address of facet to query\n     * @return selectors array of function selectors\n     */\n    function _facetFunctionSelectors(\n        address facet\n    ) internal view returns (bytes4[] memory selectors) {\n        DiamondBaseStorage.Layout storage l = DiamondBaseStorage.layout();\n\n        selectors = new bytes4[](l.selectorCount);\n\n        uint256 numSelectors;\n        uint256 selectorIndex;\n\n        // loop through function selectors\n        for (uint256 slotIndex; selectorIndex < l.selectorCount; slotIndex++) {\n            bytes32 slot = l.selectorSlots[slotIndex];\n\n            for (\n                uint256 selectorSlotIndex;\n                selectorSlotIndex < 8;\n                selectorSlotIndex++\n            ) {\n                selectorIndex++;\n\n                if (selectorIndex > l.selectorCount) {\n                    break;\n                }\n\n                bytes4 selector = bytes4(slot << (selectorSlotIndex << 5));\n\n                if (facet == address(bytes20(l.facets[selector]))) {\n                    selectors[numSelectors] = selector;\n                    numSelectors++;\n                }\n            }\n        }\n\n        // set the number of selectors in the array\n        assembly {\n            mstore(selectors, numSelectors)\n        }\n    }\n\n    /**\n     * @notice get addresses of all facets used by diamond\n     * @return addresses array of facet addresses\n     */\n    function _facetAddresses()\n        internal\n        view\n        returns (address[] memory addresses)\n    {\n        DiamondBaseStorage.Layout storage l = DiamondBaseStorage.layout();\n\n        addresses = new address[](l.selectorCount);\n        uint256 numFacets;\n        uint256 selectorIndex;\n\n        for (uint256 slotIndex; selectorIndex < l.selectorCount; slotIndex++) {\n            bytes32 slot = l.selectorSlots[slotIndex];\n\n            for (\n                uint256 selectorSlotIndex;\n                selectorSlotIndex < 8;\n                selectorSlotIndex++\n            ) {\n                selectorIndex++;\n\n                if (selectorIndex > l.selectorCount) {\n                    break;\n                }\n\n                bytes4 selector = bytes4(slot << (selectorSlotIndex << 5));\n                address facet = address(bytes20(l.facets[selector]));\n\n                bool continueLoop;\n\n                for (uint256 facetIndex; facetIndex < numFacets; facetIndex++) {\n                    if (facet == addresses[facetIndex]) {\n                        continueLoop = true;\n                        break;\n                    }\n                }\n\n                if (continueLoop) {\n                    continue;\n                }\n\n                addresses[numFacets] = facet;\n                numFacets++;\n            }\n        }\n\n        // set the number of facet addresses in the array\n        assembly {\n            mstore(addresses, numFacets)\n        }\n    }\n\n    /**\n     * @notice get the address of the facet associated with given selector\n     * @param selector function selector to query\n     * @return facet facet address (zero address if not found)\n     */\n    function _facetAddress(\n        bytes4 selector\n    ) internal view returns (address facet) {\n        facet = address(bytes20(DiamondBaseStorage.layout().facets[selector]));\n    }\n}\n"
			},
			"@solidstate/contracts/proxy/diamond/readable/IDiamondReadable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.18;\n\nimport { IERC2535DiamondLoupe } from '../../../interfaces/IERC2535DiamondLoupe.sol';\nimport { IDiamondReadableInternal } from './IDiamondReadableInternal.sol';\n\n/**\n * @title Diamond proxy introspection interface\n * @dev see https://eips.ethereum.org/EIPS/eip-2535\n */\ninterface IDiamondReadable is IERC2535DiamondLoupe, IDiamondReadableInternal {\n\n}\n"
			},
			"@solidstate/contracts/proxy/diamond/base/DiamondBaseStorage.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.18;\n\n/**\n * @dev derived from https://github.com/mudgen/diamond-2 (MIT license)\n */\nlibrary DiamondBaseStorage {\n    struct Layout {\n        // function selector => (facet address, selector slot position)\n        mapping(bytes4 => bytes32) facets;\n        // total number of selectors registered\n        uint16 selectorCount;\n        // array of selector slots with 8 selectors per slot\n        mapping(uint256 => bytes32) selectorSlots;\n        address fallbackAddress;\n    }\n\n    bytes32 internal constant STORAGE_SLOT =\n        keccak256('solidstate.contracts.storage.DiamondBase');\n\n    function layout() internal pure returns (Layout storage l) {\n        bytes32 slot = STORAGE_SLOT;\n        assembly {\n            l.slot := slot\n        }\n    }\n}\n"
			},
			"@solidstate/contracts/proxy/diamond/fallback/IDiamondFallback.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.18;\n\nimport { IDiamondBase } from '../base/IDiamondBase.sol';\n\ninterface IDiamondFallback is IDiamondBase {\n    /**\n     * @notice query the address of the fallback implementation\n     * @return fallbackAddress address of fallback implementation\n     */\n    function getFallbackAddress()\n        external\n        view\n        returns (address fallbackAddress);\n\n    /**\n     * @notice set the address of the fallback implementation\n     * @param fallbackAddress address of fallback implementation\n     */\n    function setFallbackAddress(address fallbackAddress) external;\n}\n"
			},
			"@solidstate/contracts/proxy/diamond/base/IDiamondBase.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.18;\n\nimport { IProxy } from '../../IProxy.sol';\n\ninterface IDiamondBase is IProxy {}\n"
			},
			"@solidstate/contracts/proxy/Proxy.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.18;\n\nimport { AddressUtils } from '../utils/AddressUtils.sol';\nimport { IProxy } from './IProxy.sol';\n\n/**\n * @title Base proxy contract\n */\nabstract contract Proxy is IProxy {\n    using AddressUtils for address;\n\n    /**\n     * @notice delegate all calls to implementation contract\n     * @dev reverts if implementation address contains no code, for compatibility with metamorphic contracts\n     * @dev memory location in use by assembly may be unsafe in other contexts\n     */\n    fallback() external payable virtual {\n        address implementation = _getImplementation();\n\n        if (!implementation.isContract())\n            revert Proxy__ImplementationIsNotContract();\n\n        assembly {\n            calldatacopy(0, 0, calldatasize())\n            let result := delegatecall(\n                gas(),\n                implementation,\n                0,\n                calldatasize(),\n                0,\n                0\n            )\n            returndatacopy(0, 0, returndatasize())\n\n            switch result\n            case 0 {\n                revert(0, returndatasize())\n            }\n            default {\n                return(0, returndatasize())\n            }\n        }\n    }\n\n    /**\n     * @notice get logic implementation address\n     * @return implementation address\n     */\n    function _getImplementation() internal virtual returns (address);\n}\n"
			},
			"@solidstate/contracts/access/ownable/ISafeOwnable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.18;\n\nimport { IOwnable } from './IOwnable.sol';\nimport { ISafeOwnableInternal } from './ISafeOwnableInternal.sol';\n\ninterface ISafeOwnable is ISafeOwnableInternal, IOwnable {\n    /**\n     * @notice get the nominated owner who has permission to call acceptOwnership\n     */\n    function nomineeOwner() external view returns (address);\n\n    /**\n     * @notice accept transfer of contract ownership\n     */\n    function acceptOwnership() external;\n}\n"
			},
			"@solidstate/contracts/introspection/ERC165/base/ERC165BaseStorage.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.18;\n\nlibrary ERC165BaseStorage {\n    struct Layout {\n        mapping(bytes4 => bool) supportedInterfaces;\n    }\n\n    bytes32 internal constant STORAGE_SLOT =\n        keccak256('solidstate.contracts.storage.ERC165Base');\n\n    function layout() internal pure returns (Layout storage l) {\n        bytes32 slot = STORAGE_SLOT;\n        assembly {\n            l.slot := slot\n        }\n    }\n}\n"
			},
			"@solidstate/contracts/introspection/ERC165/base/ERC165BaseInternal.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.18;\n\nimport { IERC165BaseInternal } from './IERC165BaseInternal.sol';\nimport { ERC165BaseStorage } from './ERC165BaseStorage.sol';\n\n/**\n * @title ERC165 implementation\n */\nabstract contract ERC165BaseInternal is IERC165BaseInternal {\n    /**\n     * @notice indicates whether an interface is already supported based on the interfaceId\n     * @param interfaceId id of interface to check\n     * @return bool indicating whether interface is supported\n     */\n    function _supportsInterface(\n        bytes4 interfaceId\n    ) internal view virtual returns (bool) {\n        return ERC165BaseStorage.layout().supportedInterfaces[interfaceId];\n    }\n\n    /**\n     * @notice sets status of interface support\n     * @param interfaceId id of interface to set status for\n     * @param status boolean indicating whether interface will be set as supported\n     */\n    function _setSupportsInterface(\n        bytes4 interfaceId,\n        bool status\n    ) internal virtual {\n        if (interfaceId == 0xffffffff) revert ERC165Base__InvalidInterfaceId();\n        ERC165BaseStorage.layout().supportedInterfaces[interfaceId] = status;\n    }\n}\n"
			},
			"@solidstate/contracts/introspection/ERC165/base/IERC165Base.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.18;\n\nimport { IERC165 } from '../../../interfaces/IERC165.sol';\nimport { IERC165BaseInternal } from './IERC165BaseInternal.sol';\n\ninterface IERC165Base is IERC165, IERC165BaseInternal {}\n"
			},
			"@solidstate/contracts/interfaces/IERC2535DiamondLoupeInternal.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.18;\n\n/**\n * @title ERC2535 read interface for internal functions\n * @dev see https://eips.ethereum.org/EIPS/eip-2535\n */\ninterface IERC2535DiamondLoupeInternal {\n    struct Facet {\n        address target;\n        bytes4[] selectors;\n    }\n}\n"
			},
			"@solidstate/contracts/interfaces/IERC2535DiamondCutInternal.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.18;\n\n/**\n * @title ERC2535 write interface for internal functions\n * @dev see https://eips.ethereum.org/EIPS/eip-2535\n */\ninterface IERC2535DiamondCutInternal {\n    enum FacetCutAction {\n        ADD,\n        REPLACE,\n        REMOVE\n    }\n\n    struct FacetCut {\n        address target;\n        FacetCutAction action;\n        bytes4[] selectors;\n    }\n\n    event DiamondCut(FacetCut[] facetCuts, address target, bytes data);\n}\n"
			},
			"@solidstate/contracts/interfaces/IERC173Internal.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.18;\n\n/**\n * @title Partial ERC173 interface needed by internal functions\n */\ninterface IERC173Internal {\n    event OwnershipTransferred(\n        address indexed previousOwner,\n        address indexed newOwner\n    );\n}\n"
			},
			"@solidstate/contracts/interfaces/IERC165Internal.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.18;\n\n/**\n * @title ERC165 interface registration interface\n */\ninterface IERC165Internal {\n\n}\n"
			},
			"@solidstate/contracts/access/ownable/SafeOwnableInternal.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.18;\n\nimport { ISafeOwnableInternal } from './ISafeOwnableInternal.sol';\nimport { OwnableInternal } from './OwnableInternal.sol';\nimport { SafeOwnableStorage } from './SafeOwnableStorage.sol';\n\nabstract contract SafeOwnableInternal is ISafeOwnableInternal, OwnableInternal {\n    modifier onlyNomineeOwner() {\n        if (msg.sender != _nomineeOwner())\n            revert SafeOwnable__NotNomineeOwner();\n        _;\n    }\n\n    /**\n     * @notice get the nominated owner who has permission to call acceptOwnership\n     */\n    function _nomineeOwner() internal view virtual returns (address) {\n        return SafeOwnableStorage.layout().nomineeOwner;\n    }\n\n    /**\n     * @notice accept transfer of contract ownership\n     */\n    function _acceptOwnership() internal virtual {\n        _setOwner(msg.sender);\n        delete SafeOwnableStorage.layout().nomineeOwner;\n    }\n\n    /**\n     * @notice grant permission to given address to claim contract ownership\n     */\n    function _transferOwnership(address account) internal virtual override {\n        _setNomineeOwner(account);\n    }\n\n    /**\n     * @notice set nominee owner\n     */\n    function _setNomineeOwner(address account) internal virtual {\n        SafeOwnableStorage.layout().nomineeOwner = account;\n    }\n}\n"
			},
			"@solidstate/contracts/access/ownable/IOwnable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.18;\n\nimport { IERC173 } from '../../interfaces/IERC173.sol';\nimport { IOwnableInternal } from './IOwnableInternal.sol';\n\ninterface IOwnable is IOwnableInternal, IERC173 {}\n"
			},
			"@solidstate/contracts/proxy/diamond/writable/IDiamondWritableInternal.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.18;\n\nimport { IERC2535DiamondCutInternal } from '../../../interfaces/IERC2535DiamondCutInternal.sol';\n\ninterface IDiamondWritableInternal is IERC2535DiamondCutInternal {\n    error DiamondWritable__InvalidInitializationParameters();\n    error DiamondWritable__RemoveTargetNotZeroAddress();\n    error DiamondWritable__ReplaceTargetIsIdentical();\n    error DiamondWritable__SelectorAlreadyAdded();\n    error DiamondWritable__SelectorIsImmutable();\n    error DiamondWritable__SelectorNotFound();\n    error DiamondWritable__SelectorNotSpecified();\n    error DiamondWritable__TargetHasNoCode();\n}\n"
			},
			"@solidstate/contracts/utils/AddressUtils.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.18;\n\nimport { UintUtils } from './UintUtils.sol';\n\nlibrary AddressUtils {\n    using UintUtils for uint256;\n\n    error AddressUtils__InsufficientBalance();\n    error AddressUtils__NotContract();\n    error AddressUtils__SendValueFailed();\n\n    function toString(address account) internal pure returns (string memory) {\n        return uint256(uint160(account)).toHexString(20);\n    }\n\n    function isContract(address account) internal view returns (bool) {\n        uint256 size;\n        assembly {\n            size := extcodesize(account)\n        }\n        return size > 0;\n    }\n\n    function sendValue(address payable account, uint256 amount) internal {\n        (bool success, ) = account.call{ value: amount }('');\n        if (!success) revert AddressUtils__SendValueFailed();\n    }\n\n    function functionCall(\n        address target,\n        bytes memory data\n    ) internal returns (bytes memory) {\n        return\n            functionCall(target, data, 'AddressUtils: failed low-level call');\n    }\n\n    function functionCall(\n        address target,\n        bytes memory data,\n        string memory error\n    ) internal returns (bytes memory) {\n        return _functionCallWithValue(target, data, 0, error);\n    }\n\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value\n    ) internal returns (bytes memory) {\n        return\n            functionCallWithValue(\n                target,\n                data,\n                value,\n                'AddressUtils: failed low-level call with value'\n            );\n    }\n\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value,\n        string memory error\n    ) internal returns (bytes memory) {\n        if (value > address(this).balance)\n            revert AddressUtils__InsufficientBalance();\n        return _functionCallWithValue(target, data, value, error);\n    }\n\n    /**\n     * @notice execute arbitrary external call with limited gas usage and amount of copied return data\n     * @dev derived from https://github.com/nomad-xyz/ExcessivelySafeCall (MIT License)\n     * @param target recipient of call\n     * @param gasAmount gas allowance for call\n     * @param value native token value to include in call\n     * @param maxCopy maximum number of bytes to copy from return data\n     * @param data encoded call data\n     * @return success whether call is successful\n     * @return returnData copied return data\n     */\n    function excessivelySafeCall(\n        address target,\n        uint256 gasAmount,\n        uint256 value,\n        uint16 maxCopy,\n        bytes memory data\n    ) internal returns (bool success, bytes memory returnData) {\n        returnData = new bytes(maxCopy);\n\n        assembly {\n            // execute external call via assembly to avoid automatic copying of return data\n            success := call(\n                gasAmount,\n                target,\n                value,\n                add(data, 0x20),\n                mload(data),\n                0,\n                0\n            )\n\n            // determine whether to limit amount of data to copy\n            let toCopy := returndatasize()\n\n            if gt(toCopy, maxCopy) {\n                toCopy := maxCopy\n            }\n\n            // store the length of the copied bytes\n            mstore(returnData, toCopy)\n\n            // copy the bytes from returndata[0:toCopy]\n            returndatacopy(add(returnData, 0x20), 0, toCopy)\n        }\n    }\n\n    function _functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value,\n        string memory error\n    ) private returns (bytes memory) {\n        if (!isContract(target)) revert AddressUtils__NotContract();\n\n        (bool success, bytes memory returnData) = target.call{ value: value }(\n            data\n        );\n\n        if (success) {\n            return returnData;\n        } else if (returnData.length > 0) {\n            assembly {\n                let returnData_size := mload(returnData)\n                revert(add(32, returnData), returnData_size)\n            }\n        } else {\n            revert(error);\n        }\n    }\n}\n"
			},
			"@solidstate/contracts/proxy/diamond/readable/IDiamondReadableInternal.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.18;\n\nimport { IERC2535DiamondLoupeInternal } from '../../../interfaces/IERC2535DiamondLoupeInternal.sol';\n\n/**\n * @title Diamond proxy introspection interface needed for internal functions\n * @dev see https://eips.ethereum.org/EIPS/eip-2535\n */\ninterface IDiamondReadableInternal is IERC2535DiamondLoupeInternal {\n\n}\n"
			},
			"@solidstate/contracts/proxy/IProxy.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.18;\n\ninterface IProxy {\n    error Proxy__ImplementationIsNotContract();\n\n    fallback() external payable;\n}\n"
			},
			"@solidstate/contracts/introspection/ERC165/base/IERC165BaseInternal.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.18;\n\nimport { IERC165Internal } from '../../../interfaces/IERC165Internal.sol';\n\ninterface IERC165BaseInternal is IERC165Internal {\n    error ERC165Base__InvalidInterfaceId();\n}\n"
			},
			"@solidstate/contracts/access/ownable/SafeOwnableStorage.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.18;\n\nlibrary SafeOwnableStorage {\n    struct Layout {\n        address nomineeOwner;\n    }\n\n    bytes32 internal constant STORAGE_SLOT =\n        keccak256('solidstate.contracts.storage.SafeOwnable');\n\n    function layout() internal pure returns (Layout storage l) {\n        bytes32 slot = STORAGE_SLOT;\n        assembly {\n            l.slot := slot\n        }\n    }\n}\n"
			},
			"@solidstate/contracts/access/ownable/ISafeOwnableInternal.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.18;\n\nimport { IOwnableInternal } from './IOwnableInternal.sol';\n\ninterface ISafeOwnableInternal is IOwnableInternal {\n    error SafeOwnable__NotNomineeOwner();\n}\n"
			},
			"@solidstate/contracts/access/ownable/OwnableStorage.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.18;\n\nlibrary OwnableStorage {\n    struct Layout {\n        address owner;\n    }\n\n    bytes32 internal constant STORAGE_SLOT =\n        keccak256('solidstate.contracts.storage.Ownable');\n\n    function layout() internal pure returns (Layout storage l) {\n        bytes32 slot = STORAGE_SLOT;\n        assembly {\n            l.slot := slot\n        }\n    }\n}\n"
			},
			"@solidstate/contracts/access/ownable/IOwnableInternal.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.18;\n\nimport { IERC173Internal } from '../../interfaces/IERC173Internal.sol';\n\ninterface IOwnableInternal is IERC173Internal {\n    error Ownable__NotOwner();\n    error Ownable__NotTransitiveOwner();\n}\n"
			},
			"@solidstate/contracts/utils/UintUtils.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.18;\n\n/**\n * @title utility functions for uint256 operations\n * @dev derived from https://github.com/OpenZeppelin/openzeppelin-contracts/ (MIT license)\n */\nlibrary UintUtils {\n    error UintUtils__InsufficientPadding();\n    error UintUtils__InvalidBase();\n\n    bytes16 private constant HEX_SYMBOLS = '0123456789abcdef';\n\n    function add(uint256 a, int256 b) internal pure returns (uint256) {\n        return b < 0 ? sub(a, -b) : a + uint256(b);\n    }\n\n    function sub(uint256 a, int256 b) internal pure returns (uint256) {\n        return b < 0 ? add(a, -b) : a - uint256(b);\n    }\n\n    /**\n     * @notice output the string representation of a number in a given radix\n     * @dev radix must be between 2 and 36 (inclusive)\n     * @param value number to format as string\n     * @param radix numerical base to use\n     * @return output formatted string\n     */\n    function toString(\n        uint256 value,\n        uint256 radix\n    ) internal pure returns (string memory output) {\n        // this check is repeated in the internal call to #toString(uint256,uint256,uint256)\n        // but is still needed here to avoid zero division (radix = 0) or infinite loop (radix = 1)\n        if (radix < 2) {\n            revert UintUtils__InvalidBase();\n        }\n\n        uint256 length;\n        uint256 temp = value;\n\n        do {\n            unchecked {\n                length++;\n            }\n            temp /= radix;\n        } while (temp != 0);\n\n        output = toString(value, radix, length);\n    }\n\n    /**\n     * @notice output the string representation of a number in a given radix and padded to given length\n     * @dev radix must be between 2 and 36 (inclusive)\n     * @param value number to format as string\n     * @param radix numerical base to use\n     * @param length size to which output should be zero padded\n     * @return output formatted string\n     */\n    function toString(\n        uint256 value,\n        uint256 radix,\n        uint256 length\n    ) internal pure returns (string memory output) {\n        if (radix < 2 || radix > 36) {\n            revert UintUtils__InvalidBase();\n        }\n\n        bytes memory buffer = new bytes(length);\n\n        while (length != 0) {\n            unchecked {\n                length--;\n            }\n\n            uint256 char = value % radix;\n\n            if (char < 10) {\n                // for numeral characters, shift 48 places through ASCII character set\n                // 48 can be added using bitwise-or because its binary is 00110000\n                char |= 48;\n            } else {\n                // for alphabetical characters, shift 87 places through ASCII character set\n                unchecked {\n                    char += 87;\n                }\n            }\n\n            buffer[length] = bytes1(uint8(char));\n            value /= radix;\n        }\n\n        if (value != 0) revert UintUtils__InsufficientPadding();\n\n        output = string(buffer);\n    }\n\n    /**\n     * @notice output the 0b-prefixed binary string representation of a number\n     * @param value number to format as string\n     * @return output formatted string\n     */\n    function toBinString(\n        uint256 value\n    ) internal pure returns (string memory output) {\n        uint256 length;\n        uint256 temp = value;\n\n        do {\n            unchecked {\n                length++;\n            }\n            temp >>= 1;\n        } while (temp != 0);\n\n        output = toBinString(value, length);\n    }\n\n    /**\n     * @notice output the 0b-prefixed binary string representation of a number padded to given length\n     * @param value number to format as string\n     * @param length size to which output should be zero padded (not including prefix)\n     * @return output formatted string\n     */\n    function toBinString(\n        uint256 value,\n        uint256 length\n    ) internal pure returns (string memory output) {\n        // add two to length for the leading \"0b\"\n        length += 2;\n\n        bytes memory buffer = new bytes(length);\n        buffer[0] = '0';\n        buffer[1] = 'b';\n\n        while (length > 2) {\n            unchecked {\n                length--;\n            }\n\n            buffer[length] = HEX_SYMBOLS[value & 1];\n            value >>= 1;\n        }\n\n        if (value != 0) revert UintUtils__InsufficientPadding();\n\n        output = string(buffer);\n    }\n\n    /**\n     * @notice output the 0o-prefixed octal string representation of a number\n     * @param value number to format as string\n     * @return output formatted string\n     */\n    function toOctString(\n        uint256 value\n    ) internal pure returns (string memory output) {\n        uint256 length;\n        uint256 temp = value;\n\n        do {\n            unchecked {\n                length++;\n            }\n            temp >>= 3;\n        } while (temp != 0);\n\n        output = toOctString(value, length);\n    }\n\n    /**\n     * @notice output the 0o-prefixed octal string representation of a number padded to given length\n     * @param value number to format as string\n     * @param length size to which output should be zero padded (not including prefix)\n     * @return output formatted string\n     */\n    function toOctString(\n        uint256 value,\n        uint256 length\n    ) internal pure returns (string memory output) {\n        // add two to length for the leading \"0o\"\n        length += 2;\n\n        bytes memory buffer = new bytes(length);\n        buffer[0] = '0';\n        buffer[1] = 'o';\n\n        while (length > 2) {\n            unchecked {\n                length--;\n            }\n\n            buffer[length] = HEX_SYMBOLS[value & 7];\n            value >>= 3;\n        }\n\n        if (value != 0) revert UintUtils__InsufficientPadding();\n\n        output = string(buffer);\n    }\n\n    /**\n     * @notice output the decimal string representation of a number\n     * @param value number to format as string\n     * @return output formatted string\n     */\n    function toDecString(\n        uint256 value\n    ) internal pure returns (string memory output) {\n        output = toString(value, 10);\n    }\n\n    /**\n     * @notice output the decimal string representation of a number padded to given length\n     * @param value number to format as string\n     * @param length size to which output should be zero padded\n     * @return output formatted string\n     */\n    function toDecString(\n        uint256 value,\n        uint256 length\n    ) internal pure returns (string memory output) {\n        output = toString(value, 10, length);\n    }\n\n    /**\n     * @notice output the 0x-prefixed hexadecimal string representation of a number\n     * @dev calculated string length will always be even to prevent splitting of bytes\n     * @param value number to format as string\n     * @return output formatted string\n     */\n    function toHexString(\n        uint256 value\n    ) internal pure returns (string memory output) {\n        uint256 length;\n        uint256 temp = value;\n\n        do {\n            unchecked {\n                length++;\n            }\n            temp >>= 8;\n        } while (temp != 0);\n\n        output = toHexString(value, length);\n    }\n\n    /**\n     * @notice output the 0x-prefixed hexadecimal string representation of a number padded to given length\n     * @dev calculated string length will always be even to prevent splitting of bytes\n     * @param value number to format as string\n     * @param length size (in bytes) to which output should be zero padded (not including prefix)\n     * @return output formatted string\n     */\n    function toHexString(\n        uint256 value,\n        uint256 length\n    ) internal pure returns (string memory output) {\n        // convert byte length to character length and add two to length for the leading \"0x\"\n        unchecked {\n            length = (length << 1) + 2;\n        }\n\n        bytes memory buffer = new bytes(length);\n        buffer[0] = '0';\n        buffer[1] = 'x';\n\n        while (length > 2) {\n            unchecked {\n                length--;\n            }\n\n            buffer[length] = HEX_SYMBOLS[value & 15];\n            value >>= 4;\n        }\n\n        if (value != 0) revert UintUtils__InsufficientPadding();\n\n        output = string(buffer);\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 900
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"@solidstate/contracts/access/ownable/IOwnable.sol": {
				"IOwnable": {
					"abi": [
						{
							"inputs": [],
							"name": "Ownable__NotOwner",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "Ownable__NotTransitiveOwner",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"owner()": {
								"returns": {
									"_0": "contract owner"
								}
							},
							"transferOwnership(address)": {
								"params": {
									"account": "address of new owner"
								}
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"Ownable__NotOwner\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Ownable__NotTransitiveOwner\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"returns\":{\"_0\":\"contract owner\"}},\"transferOwnership(address)\":{\"params\":{\"account\":\"address of new owner\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"owner()\":{\"notice\":\"get the ERC173 contract owner\"},\"transferOwnership(address)\":{\"notice\":\"transfer contract ownership to new account\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@solidstate/contracts/access/ownable/IOwnable.sol\":\"IOwnable\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":900},\"remappings\":[]},\"sources\":{\"@solidstate/contracts/access/ownable/IOwnable.sol\":{\"keccak256\":\"0x11d21dc54925e813f796ac5f09abbf2a561fd8796268941d9f0b39abd8a917c7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://70d3e007838a1ce8dacab8e6ff6cc2505d97b56ad44fb35cf1af5c9c0a2e9033\",\"dweb:/ipfs/QmT2zFUbiHfQeyhcCMAPTHe7Xk2s4ABAJKeCeAYQcDXGjd\"]},\"@solidstate/contracts/access/ownable/IOwnableInternal.sol\":{\"keccak256\":\"0x4cd447859a063c235aa56dcb017012f3c7ad6c54a399d6cdfef8045c78820f90\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fecba3866ae33c19144357b5aa3a43b8d9b84728a124443a87471409d90507ff\",\"dweb:/ipfs/QmZzkdVbNp4Zv7vHPxeBkoFP3od1sRVXVdWA4j6v9TTSAa\"]},\"@solidstate/contracts/interfaces/IERC173.sol\":{\"keccak256\":\"0x1dcf85abc1fa1871fd31e6cf54ba539c6cb93342fae91466550940ad49ad08f7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://666470e1f5e26f114d35608a4cce2885f044cfb01fe5b11db0ed32edd5d68750\",\"dweb:/ipfs/Qma5iVmjnWAjkbxs2y62PYdLGCQAef2Q6KsbMUHaQp6bUV\"]},\"@solidstate/contracts/interfaces/IERC173Internal.sol\":{\"keccak256\":\"0x411c4c66a220f9eb25a29c2553fa9e6cac22a948a8645507d20fe5e7876dc8d1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://36c60312ab789ba0b1aa3d5129fffa911bee346937f6a5662cbd2c2e97b8ccec\",\"dweb:/ipfs/QmZJV8DgbcKs2Nws8gYQWuPdfEKFJSBj9BMfqmPxtNYF8z\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"owner()": {
								"notice": "get the ERC173 contract owner"
							},
							"transferOwnership(address)": {
								"notice": "transfer contract ownership to new account"
							}
						},
						"version": 1
					}
				}
			},
			"@solidstate/contracts/access/ownable/IOwnableInternal.sol": {
				"IOwnableInternal": {
					"abi": [
						{
							"inputs": [],
							"name": "Ownable__NotOwner",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "Ownable__NotTransitiveOwner",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"Ownable__NotOwner\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Ownable__NotTransitiveOwner\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@solidstate/contracts/access/ownable/IOwnableInternal.sol\":\"IOwnableInternal\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":900},\"remappings\":[]},\"sources\":{\"@solidstate/contracts/access/ownable/IOwnableInternal.sol\":{\"keccak256\":\"0x4cd447859a063c235aa56dcb017012f3c7ad6c54a399d6cdfef8045c78820f90\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fecba3866ae33c19144357b5aa3a43b8d9b84728a124443a87471409d90507ff\",\"dweb:/ipfs/QmZzkdVbNp4Zv7vHPxeBkoFP3od1sRVXVdWA4j6v9TTSAa\"]},\"@solidstate/contracts/interfaces/IERC173Internal.sol\":{\"keccak256\":\"0x411c4c66a220f9eb25a29c2553fa9e6cac22a948a8645507d20fe5e7876dc8d1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://36c60312ab789ba0b1aa3d5129fffa911bee346937f6a5662cbd2c2e97b8ccec\",\"dweb:/ipfs/QmZJV8DgbcKs2Nws8gYQWuPdfEKFJSBj9BMfqmPxtNYF8z\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@solidstate/contracts/access/ownable/ISafeOwnable.sol": {
				"ISafeOwnable": {
					"abi": [
						{
							"inputs": [],
							"name": "Ownable__NotOwner",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "Ownable__NotTransitiveOwner",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "SafeOwnable__NotNomineeOwner",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "acceptOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "nomineeOwner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"owner()": {
								"returns": {
									"_0": "contract owner"
								}
							},
							"transferOwnership(address)": {
								"params": {
									"account": "address of new owner"
								}
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"acceptOwnership()": "79ba5097",
							"nomineeOwner()": "8ab5150a",
							"owner()": "8da5cb5b",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"Ownable__NotOwner\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Ownable__NotTransitiveOwner\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"SafeOwnable__NotNomineeOwner\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"acceptOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"nomineeOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"returns\":{\"_0\":\"contract owner\"}},\"transferOwnership(address)\":{\"params\":{\"account\":\"address of new owner\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"acceptOwnership()\":{\"notice\":\"accept transfer of contract ownership\"},\"nomineeOwner()\":{\"notice\":\"get the nominated owner who has permission to call acceptOwnership\"},\"owner()\":{\"notice\":\"get the ERC173 contract owner\"},\"transferOwnership(address)\":{\"notice\":\"transfer contract ownership to new account\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@solidstate/contracts/access/ownable/ISafeOwnable.sol\":\"ISafeOwnable\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":900},\"remappings\":[]},\"sources\":{\"@solidstate/contracts/access/ownable/IOwnable.sol\":{\"keccak256\":\"0x11d21dc54925e813f796ac5f09abbf2a561fd8796268941d9f0b39abd8a917c7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://70d3e007838a1ce8dacab8e6ff6cc2505d97b56ad44fb35cf1af5c9c0a2e9033\",\"dweb:/ipfs/QmT2zFUbiHfQeyhcCMAPTHe7Xk2s4ABAJKeCeAYQcDXGjd\"]},\"@solidstate/contracts/access/ownable/IOwnableInternal.sol\":{\"keccak256\":\"0x4cd447859a063c235aa56dcb017012f3c7ad6c54a399d6cdfef8045c78820f90\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fecba3866ae33c19144357b5aa3a43b8d9b84728a124443a87471409d90507ff\",\"dweb:/ipfs/QmZzkdVbNp4Zv7vHPxeBkoFP3od1sRVXVdWA4j6v9TTSAa\"]},\"@solidstate/contracts/access/ownable/ISafeOwnable.sol\":{\"keccak256\":\"0xf5f4f16883ab1df6352732885160b2b8c82d147f83b3a2c4ecf3d1f7bed13263\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://37a02bc456355b3878074aba4ab8b077ba4e0c8af7d2284a3aaef2dd57f3310c\",\"dweb:/ipfs/QmdSU9M7i7W9h26iFYuZzukmGWA464xgNEk4FAnS9ErRYP\"]},\"@solidstate/contracts/access/ownable/ISafeOwnableInternal.sol\":{\"keccak256\":\"0x371b9fed15ae2760b52eb9391e7ceefcbaaacc73b4cf2dcdd3c12e13db829cd6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d3244dbd25a5b5a6cf7740ddfb3ff9acd14cc54bde74750de20c629154567e39\",\"dweb:/ipfs/Qmd9d1CfMuPH7hsUjEur1P1cU8ZDxYKVvf4SHqHqj9K1dT\"]},\"@solidstate/contracts/interfaces/IERC173.sol\":{\"keccak256\":\"0x1dcf85abc1fa1871fd31e6cf54ba539c6cb93342fae91466550940ad49ad08f7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://666470e1f5e26f114d35608a4cce2885f044cfb01fe5b11db0ed32edd5d68750\",\"dweb:/ipfs/Qma5iVmjnWAjkbxs2y62PYdLGCQAef2Q6KsbMUHaQp6bUV\"]},\"@solidstate/contracts/interfaces/IERC173Internal.sol\":{\"keccak256\":\"0x411c4c66a220f9eb25a29c2553fa9e6cac22a948a8645507d20fe5e7876dc8d1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://36c60312ab789ba0b1aa3d5129fffa911bee346937f6a5662cbd2c2e97b8ccec\",\"dweb:/ipfs/QmZJV8DgbcKs2Nws8gYQWuPdfEKFJSBj9BMfqmPxtNYF8z\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"acceptOwnership()": {
								"notice": "accept transfer of contract ownership"
							},
							"nomineeOwner()": {
								"notice": "get the nominated owner who has permission to call acceptOwnership"
							},
							"owner()": {
								"notice": "get the ERC173 contract owner"
							},
							"transferOwnership(address)": {
								"notice": "transfer contract ownership to new account"
							}
						},
						"version": 1
					}
				}
			},
			"@solidstate/contracts/access/ownable/ISafeOwnableInternal.sol": {
				"ISafeOwnableInternal": {
					"abi": [
						{
							"inputs": [],
							"name": "Ownable__NotOwner",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "Ownable__NotTransitiveOwner",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "SafeOwnable__NotNomineeOwner",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"Ownable__NotOwner\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Ownable__NotTransitiveOwner\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"SafeOwnable__NotNomineeOwner\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@solidstate/contracts/access/ownable/ISafeOwnableInternal.sol\":\"ISafeOwnableInternal\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":900},\"remappings\":[]},\"sources\":{\"@solidstate/contracts/access/ownable/IOwnableInternal.sol\":{\"keccak256\":\"0x4cd447859a063c235aa56dcb017012f3c7ad6c54a399d6cdfef8045c78820f90\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fecba3866ae33c19144357b5aa3a43b8d9b84728a124443a87471409d90507ff\",\"dweb:/ipfs/QmZzkdVbNp4Zv7vHPxeBkoFP3od1sRVXVdWA4j6v9TTSAa\"]},\"@solidstate/contracts/access/ownable/ISafeOwnableInternal.sol\":{\"keccak256\":\"0x371b9fed15ae2760b52eb9391e7ceefcbaaacc73b4cf2dcdd3c12e13db829cd6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d3244dbd25a5b5a6cf7740ddfb3ff9acd14cc54bde74750de20c629154567e39\",\"dweb:/ipfs/Qmd9d1CfMuPH7hsUjEur1P1cU8ZDxYKVvf4SHqHqj9K1dT\"]},\"@solidstate/contracts/interfaces/IERC173Internal.sol\":{\"keccak256\":\"0x411c4c66a220f9eb25a29c2553fa9e6cac22a948a8645507d20fe5e7876dc8d1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://36c60312ab789ba0b1aa3d5129fffa911bee346937f6a5662cbd2c2e97b8ccec\",\"dweb:/ipfs/QmZJV8DgbcKs2Nws8gYQWuPdfEKFJSBj9BMfqmPxtNYF8z\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@solidstate/contracts/access/ownable/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"inputs": [],
							"name": "Ownable__NotOwner",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "Ownable__NotTransitiveOwner",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"owner()": {
								"returns": {
									"_0": "contract owner"
								}
							},
							"transferOwnership(address)": {
								"params": {
									"account": "address of new owner"
								}
							}
						},
						"title": "Ownership access control based on ERC173",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"Ownable__NotOwner\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Ownable__NotTransitiveOwner\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"returns\":{\"_0\":\"contract owner\"}},\"transferOwnership(address)\":{\"params\":{\"account\":\"address of new owner\"}}},\"title\":\"Ownership access control based on ERC173\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"owner()\":{\"notice\":\"get the ERC173 contract owner\"},\"transferOwnership(address)\":{\"notice\":\"transfer contract ownership to new account\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@solidstate/contracts/access/ownable/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":900},\"remappings\":[]},\"sources\":{\"@solidstate/contracts/access/ownable/IOwnable.sol\":{\"keccak256\":\"0x11d21dc54925e813f796ac5f09abbf2a561fd8796268941d9f0b39abd8a917c7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://70d3e007838a1ce8dacab8e6ff6cc2505d97b56ad44fb35cf1af5c9c0a2e9033\",\"dweb:/ipfs/QmT2zFUbiHfQeyhcCMAPTHe7Xk2s4ABAJKeCeAYQcDXGjd\"]},\"@solidstate/contracts/access/ownable/IOwnableInternal.sol\":{\"keccak256\":\"0x4cd447859a063c235aa56dcb017012f3c7ad6c54a399d6cdfef8045c78820f90\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fecba3866ae33c19144357b5aa3a43b8d9b84728a124443a87471409d90507ff\",\"dweb:/ipfs/QmZzkdVbNp4Zv7vHPxeBkoFP3od1sRVXVdWA4j6v9TTSAa\"]},\"@solidstate/contracts/access/ownable/Ownable.sol\":{\"keccak256\":\"0x6863983e4048a1c0f65c048af9b9381b0c02c230c763d8136bb16abd1c972e68\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://72a94ccda4287bd598330a663125bba83dde9f4133a13190c922cfb24ac600c7\",\"dweb:/ipfs/QmVcsaFFHBYB4e69tTYqBdCfwWszKRuxrRy1tDrHUh13t5\"]},\"@solidstate/contracts/access/ownable/OwnableInternal.sol\":{\"keccak256\":\"0x68e9c133cdc3a3cdbed72c63f682d428e4533f2c8095d57410653430f69f225c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2f24f167ce2396a880db1b8c8745dbd98d48ee29583784ccb8126547ac81f042\",\"dweb:/ipfs/QmW5r1s5QoV2ENh3Qx2WRhcsbyD9cKC1gBbk2JMFM4YbcR\"]},\"@solidstate/contracts/access/ownable/OwnableStorage.sol\":{\"keccak256\":\"0xdd830eb11d93432c1219d28f1758d1e1e260e09f64152f34e0cab7861a567acb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4beb423fff82203ce963d2fa005b9a26e489dc22efc183e6c68d912cb65ee291\",\"dweb:/ipfs/QmakghQzG8UJ2uwkR8peYxXB7KCMKGrjB9c5r9JSyoB6kw\"]},\"@solidstate/contracts/interfaces/IERC173.sol\":{\"keccak256\":\"0x1dcf85abc1fa1871fd31e6cf54ba539c6cb93342fae91466550940ad49ad08f7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://666470e1f5e26f114d35608a4cce2885f044cfb01fe5b11db0ed32edd5d68750\",\"dweb:/ipfs/Qma5iVmjnWAjkbxs2y62PYdLGCQAef2Q6KsbMUHaQp6bUV\"]},\"@solidstate/contracts/interfaces/IERC173Internal.sol\":{\"keccak256\":\"0x411c4c66a220f9eb25a29c2553fa9e6cac22a948a8645507d20fe5e7876dc8d1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://36c60312ab789ba0b1aa3d5129fffa911bee346937f6a5662cbd2c2e97b8ccec\",\"dweb:/ipfs/QmZJV8DgbcKs2Nws8gYQWuPdfEKFJSBj9BMfqmPxtNYF8z\"]},\"@solidstate/contracts/utils/AddressUtils.sol\":{\"keccak256\":\"0x73b8727aeb8d6a984dfb279cf64eb867cb0f5c42527b877f87dcbe1a37f3e433\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://21599c6853d978762bd6db8e70720ba7de6394bf6e1b66d32a936c074c160135\",\"dweb:/ipfs/QmekH1Vro4JrwfSpJUBVRofaCMsxAj8huDbujYBgGsHm63\"]},\"@solidstate/contracts/utils/UintUtils.sol\":{\"keccak256\":\"0x1dbd4a2d25d6d3511018319bb752e2fe72b934cbcf31b18e47a286229ce36f1f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e339115b07880370eef2b22f5529050fcf863a34bab9e8ac81be570ae7deb2be\",\"dweb:/ipfs/QmU9KsZQTMffVUnHUGHkf78Yg5orQF9TSk9n1uSgQnkak2\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"owner()": {
								"notice": "get the ERC173 contract owner"
							},
							"transferOwnership(address)": {
								"notice": "transfer contract ownership to new account"
							}
						},
						"version": 1
					}
				}
			},
			"@solidstate/contracts/access/ownable/OwnableInternal.sol": {
				"OwnableInternal": {
					"abi": [
						{
							"inputs": [],
							"name": "Ownable__NotOwner",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "Ownable__NotTransitiveOwner",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"Ownable__NotOwner\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Ownable__NotTransitiveOwner\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@solidstate/contracts/access/ownable/OwnableInternal.sol\":\"OwnableInternal\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":900},\"remappings\":[]},\"sources\":{\"@solidstate/contracts/access/ownable/IOwnableInternal.sol\":{\"keccak256\":\"0x4cd447859a063c235aa56dcb017012f3c7ad6c54a399d6cdfef8045c78820f90\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fecba3866ae33c19144357b5aa3a43b8d9b84728a124443a87471409d90507ff\",\"dweb:/ipfs/QmZzkdVbNp4Zv7vHPxeBkoFP3od1sRVXVdWA4j6v9TTSAa\"]},\"@solidstate/contracts/access/ownable/OwnableInternal.sol\":{\"keccak256\":\"0x68e9c133cdc3a3cdbed72c63f682d428e4533f2c8095d57410653430f69f225c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2f24f167ce2396a880db1b8c8745dbd98d48ee29583784ccb8126547ac81f042\",\"dweb:/ipfs/QmW5r1s5QoV2ENh3Qx2WRhcsbyD9cKC1gBbk2JMFM4YbcR\"]},\"@solidstate/contracts/access/ownable/OwnableStorage.sol\":{\"keccak256\":\"0xdd830eb11d93432c1219d28f1758d1e1e260e09f64152f34e0cab7861a567acb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4beb423fff82203ce963d2fa005b9a26e489dc22efc183e6c68d912cb65ee291\",\"dweb:/ipfs/QmakghQzG8UJ2uwkR8peYxXB7KCMKGrjB9c5r9JSyoB6kw\"]},\"@solidstate/contracts/interfaces/IERC173.sol\":{\"keccak256\":\"0x1dcf85abc1fa1871fd31e6cf54ba539c6cb93342fae91466550940ad49ad08f7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://666470e1f5e26f114d35608a4cce2885f044cfb01fe5b11db0ed32edd5d68750\",\"dweb:/ipfs/Qma5iVmjnWAjkbxs2y62PYdLGCQAef2Q6KsbMUHaQp6bUV\"]},\"@solidstate/contracts/interfaces/IERC173Internal.sol\":{\"keccak256\":\"0x411c4c66a220f9eb25a29c2553fa9e6cac22a948a8645507d20fe5e7876dc8d1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://36c60312ab789ba0b1aa3d5129fffa911bee346937f6a5662cbd2c2e97b8ccec\",\"dweb:/ipfs/QmZJV8DgbcKs2Nws8gYQWuPdfEKFJSBj9BMfqmPxtNYF8z\"]},\"@solidstate/contracts/utils/AddressUtils.sol\":{\"keccak256\":\"0x73b8727aeb8d6a984dfb279cf64eb867cb0f5c42527b877f87dcbe1a37f3e433\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://21599c6853d978762bd6db8e70720ba7de6394bf6e1b66d32a936c074c160135\",\"dweb:/ipfs/QmekH1Vro4JrwfSpJUBVRofaCMsxAj8huDbujYBgGsHm63\"]},\"@solidstate/contracts/utils/UintUtils.sol\":{\"keccak256\":\"0x1dbd4a2d25d6d3511018319bb752e2fe72b934cbcf31b18e47a286229ce36f1f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e339115b07880370eef2b22f5529050fcf863a34bab9e8ac81be570ae7deb2be\",\"dweb:/ipfs/QmU9KsZQTMffVUnHUGHkf78Yg5orQF9TSk9n1uSgQnkak2\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@solidstate/contracts/access/ownable/OwnableStorage.sol": {
				"OwnableStorage": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@solidstate/contracts/access/ownable/OwnableStorage.sol\":59:404  library OwnableStorage {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@solidstate/contracts/access/ownable/OwnableStorage.sol\":59:404  library OwnableStorage {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa264697066735822122090a67c8890d4ea7cd0725e285ab230c25beda3e33ee1a5ef48491f870596112564736f6c63430008180033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60556032600b8282823980515f1a607314602657634e487b7160e01b5f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea264697066735822122090a67c8890d4ea7cd0725e285ab230c25beda3e33ee1a5ef48491f870596112564736f6c63430008180033",
							"opcodes": "PUSH1 0x55 PUSH1 0x32 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x26 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP1 0xA6 PUSH29 0x8890D4EA7CD0725E285AB230C25BEDA3E33EE1A5EF48491F8705961125 PUSH5 0x736F6C6343 STOP ADDMOD XOR STOP CALLER ",
							"sourceMap": "59:345:6:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;59:345:6;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea264697066735822122090a67c8890d4ea7cd0725e285ab230c25beda3e33ee1a5ef48491f870596112564736f6c63430008180033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP1 0xA6 PUSH29 0x8890D4EA7CD0725E285AB230C25BEDA3E33EE1A5EF48491F8705961125 PUSH5 0x736F6C6343 STOP ADDMOD XOR STOP CALLER ",
							"sourceMap": "59:345:6:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "96",
								"totalCost": "17096"
							},
							"internal": {
								"layout()": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 59,
									"end": 404,
									"name": "PUSH #[$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 59,
									"end": 404,
									"name": "PUSH [$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 59,
									"end": 404,
									"name": "PUSH",
									"source": 6,
									"value": "B"
								},
								{
									"begin": 59,
									"end": 404,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 59,
									"end": 404,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 59,
									"end": 404,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 59,
									"end": 404,
									"name": "CODECOPY",
									"source": 6
								},
								{
									"begin": 59,
									"end": 404,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 59,
									"end": 404,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 59,
									"end": 404,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 59,
									"end": 404,
									"name": "BYTE",
									"source": 6
								},
								{
									"begin": 59,
									"end": 404,
									"name": "PUSH",
									"source": 6,
									"value": "73"
								},
								{
									"begin": 59,
									"end": 404,
									"name": "EQ",
									"source": 6
								},
								{
									"begin": 59,
									"end": 404,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 59,
									"end": 404,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 59,
									"end": 404,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 59,
									"end": 404,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 59,
									"end": 404,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 59,
									"end": 404,
									"name": "PUSH",
									"source": 6,
									"value": "4"
								},
								{
									"begin": 59,
									"end": 404,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 59,
									"end": 404,
									"name": "PUSH",
									"source": 6,
									"value": "24"
								},
								{
									"begin": 59,
									"end": 404,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 59,
									"end": 404,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 59,
									"end": 404,
									"name": "tag",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 59,
									"end": 404,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 59,
									"end": 404,
									"name": "ADDRESS",
									"source": 6
								},
								{
									"begin": 59,
									"end": 404,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 59,
									"end": 404,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 59,
									"end": 404,
									"name": "PUSH",
									"source": 6,
									"value": "73"
								},
								{
									"begin": 59,
									"end": 404,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 59,
									"end": 404,
									"name": "MSTORE8",
									"source": 6
								},
								{
									"begin": 59,
									"end": 404,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 59,
									"end": 404,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 59,
									"end": 404,
									"name": "RETURN",
									"source": 6
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122090a67c8890d4ea7cd0725e285ab230c25beda3e33ee1a5ef48491f870596112564736f6c63430008180033",
									".code": [
										{
											"begin": 59,
											"end": 404,
											"name": "PUSHDEPLOYADDRESS",
											"source": 6
										},
										{
											"begin": 59,
											"end": 404,
											"name": "ADDRESS",
											"source": 6
										},
										{
											"begin": 59,
											"end": 404,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 59,
											"end": 404,
											"name": "PUSH",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 59,
											"end": 404,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 59,
											"end": 404,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 59,
											"end": 404,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 59,
											"end": 404,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 59,
											"end": 404,
											"name": "REVERT",
											"source": 6
										}
									]
								}
							},
							"sourceList": [
								"@solidstate/contracts/access/ownable/IOwnable.sol",
								"@solidstate/contracts/access/ownable/IOwnableInternal.sol",
								"@solidstate/contracts/access/ownable/ISafeOwnable.sol",
								"@solidstate/contracts/access/ownable/ISafeOwnableInternal.sol",
								"@solidstate/contracts/access/ownable/Ownable.sol",
								"@solidstate/contracts/access/ownable/OwnableInternal.sol",
								"@solidstate/contracts/access/ownable/OwnableStorage.sol",
								"@solidstate/contracts/access/ownable/SafeOwnable.sol",
								"@solidstate/contracts/access/ownable/SafeOwnableInternal.sol",
								"@solidstate/contracts/access/ownable/SafeOwnableStorage.sol",
								"@solidstate/contracts/interfaces/IERC165.sol",
								"@solidstate/contracts/interfaces/IERC165Internal.sol",
								"@solidstate/contracts/interfaces/IERC173.sol",
								"@solidstate/contracts/interfaces/IERC173Internal.sol",
								"@solidstate/contracts/interfaces/IERC2535DiamondCut.sol",
								"@solidstate/contracts/interfaces/IERC2535DiamondCutInternal.sol",
								"@solidstate/contracts/interfaces/IERC2535DiamondLoupe.sol",
								"@solidstate/contracts/interfaces/IERC2535DiamondLoupeInternal.sol",
								"@solidstate/contracts/introspection/ERC165/base/ERC165Base.sol",
								"@solidstate/contracts/introspection/ERC165/base/ERC165BaseInternal.sol",
								"@solidstate/contracts/introspection/ERC165/base/ERC165BaseStorage.sol",
								"@solidstate/contracts/introspection/ERC165/base/IERC165Base.sol",
								"@solidstate/contracts/introspection/ERC165/base/IERC165BaseInternal.sol",
								"@solidstate/contracts/proxy/IProxy.sol",
								"@solidstate/contracts/proxy/Proxy.sol",
								"@solidstate/contracts/proxy/diamond/ISolidStateDiamond.sol",
								"@solidstate/contracts/proxy/diamond/SolidStateDiamond.sol",
								"@solidstate/contracts/proxy/diamond/base/DiamondBase.sol",
								"@solidstate/contracts/proxy/diamond/base/DiamondBaseStorage.sol",
								"@solidstate/contracts/proxy/diamond/base/IDiamondBase.sol",
								"@solidstate/contracts/proxy/diamond/fallback/DiamondFallback.sol",
								"@solidstate/contracts/proxy/diamond/fallback/IDiamondFallback.sol",
								"@solidstate/contracts/proxy/diamond/readable/DiamondReadable.sol",
								"@solidstate/contracts/proxy/diamond/readable/DiamondReadableInternal.sol",
								"@solidstate/contracts/proxy/diamond/readable/IDiamondReadable.sol",
								"@solidstate/contracts/proxy/diamond/readable/IDiamondReadableInternal.sol",
								"@solidstate/contracts/proxy/diamond/writable/DiamondWritable.sol",
								"@solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol",
								"@solidstate/contracts/proxy/diamond/writable/IDiamondWritable.sol",
								"@solidstate/contracts/proxy/diamond/writable/IDiamondWritableInternal.sol",
								"@solidstate/contracts/utils/AddressUtils.sol",
								"@solidstate/contracts/utils/UintUtils.sol",
								"Eip2535/EIp2535Diamond.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@solidstate/contracts/access/ownable/OwnableStorage.sol\":\"OwnableStorage\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":900},\"remappings\":[]},\"sources\":{\"@solidstate/contracts/access/ownable/OwnableStorage.sol\":{\"keccak256\":\"0xdd830eb11d93432c1219d28f1758d1e1e260e09f64152f34e0cab7861a567acb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4beb423fff82203ce963d2fa005b9a26e489dc22efc183e6c68d912cb65ee291\",\"dweb:/ipfs/QmakghQzG8UJ2uwkR8peYxXB7KCMKGrjB9c5r9JSyoB6kw\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@solidstate/contracts/access/ownable/SafeOwnable.sol": {
				"SafeOwnable": {
					"abi": [
						{
							"inputs": [],
							"name": "Ownable__NotOwner",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "Ownable__NotTransitiveOwner",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "SafeOwnable__NotNomineeOwner",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "acceptOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "nomineeOwner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"owner()": {
								"returns": {
									"_0": "contract owner"
								}
							},
							"transferOwnership(address)": {
								"params": {
									"account": "address of new owner"
								}
							}
						},
						"title": "Ownership access control based on ERC173 with ownership transfer safety check",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"acceptOwnership()": "79ba5097",
							"nomineeOwner()": "8ab5150a",
							"owner()": "8da5cb5b",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"Ownable__NotOwner\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Ownable__NotTransitiveOwner\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"SafeOwnable__NotNomineeOwner\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"acceptOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"nomineeOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"returns\":{\"_0\":\"contract owner\"}},\"transferOwnership(address)\":{\"params\":{\"account\":\"address of new owner\"}}},\"title\":\"Ownership access control based on ERC173 with ownership transfer safety check\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"acceptOwnership()\":{\"notice\":\"accept transfer of contract ownership\"},\"nomineeOwner()\":{\"notice\":\"get the nominated owner who has permission to call acceptOwnership\"},\"owner()\":{\"notice\":\"get the ERC173 contract owner\"},\"transferOwnership(address)\":{\"notice\":\"transfer contract ownership to new account\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@solidstate/contracts/access/ownable/SafeOwnable.sol\":\"SafeOwnable\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":900},\"remappings\":[]},\"sources\":{\"@solidstate/contracts/access/ownable/IOwnable.sol\":{\"keccak256\":\"0x11d21dc54925e813f796ac5f09abbf2a561fd8796268941d9f0b39abd8a917c7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://70d3e007838a1ce8dacab8e6ff6cc2505d97b56ad44fb35cf1af5c9c0a2e9033\",\"dweb:/ipfs/QmT2zFUbiHfQeyhcCMAPTHe7Xk2s4ABAJKeCeAYQcDXGjd\"]},\"@solidstate/contracts/access/ownable/IOwnableInternal.sol\":{\"keccak256\":\"0x4cd447859a063c235aa56dcb017012f3c7ad6c54a399d6cdfef8045c78820f90\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fecba3866ae33c19144357b5aa3a43b8d9b84728a124443a87471409d90507ff\",\"dweb:/ipfs/QmZzkdVbNp4Zv7vHPxeBkoFP3od1sRVXVdWA4j6v9TTSAa\"]},\"@solidstate/contracts/access/ownable/ISafeOwnable.sol\":{\"keccak256\":\"0xf5f4f16883ab1df6352732885160b2b8c82d147f83b3a2c4ecf3d1f7bed13263\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://37a02bc456355b3878074aba4ab8b077ba4e0c8af7d2284a3aaef2dd57f3310c\",\"dweb:/ipfs/QmdSU9M7i7W9h26iFYuZzukmGWA464xgNEk4FAnS9ErRYP\"]},\"@solidstate/contracts/access/ownable/ISafeOwnableInternal.sol\":{\"keccak256\":\"0x371b9fed15ae2760b52eb9391e7ceefcbaaacc73b4cf2dcdd3c12e13db829cd6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d3244dbd25a5b5a6cf7740ddfb3ff9acd14cc54bde74750de20c629154567e39\",\"dweb:/ipfs/Qmd9d1CfMuPH7hsUjEur1P1cU8ZDxYKVvf4SHqHqj9K1dT\"]},\"@solidstate/contracts/access/ownable/Ownable.sol\":{\"keccak256\":\"0x6863983e4048a1c0f65c048af9b9381b0c02c230c763d8136bb16abd1c972e68\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://72a94ccda4287bd598330a663125bba83dde9f4133a13190c922cfb24ac600c7\",\"dweb:/ipfs/QmVcsaFFHBYB4e69tTYqBdCfwWszKRuxrRy1tDrHUh13t5\"]},\"@solidstate/contracts/access/ownable/OwnableInternal.sol\":{\"keccak256\":\"0x68e9c133cdc3a3cdbed72c63f682d428e4533f2c8095d57410653430f69f225c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2f24f167ce2396a880db1b8c8745dbd98d48ee29583784ccb8126547ac81f042\",\"dweb:/ipfs/QmW5r1s5QoV2ENh3Qx2WRhcsbyD9cKC1gBbk2JMFM4YbcR\"]},\"@solidstate/contracts/access/ownable/OwnableStorage.sol\":{\"keccak256\":\"0xdd830eb11d93432c1219d28f1758d1e1e260e09f64152f34e0cab7861a567acb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4beb423fff82203ce963d2fa005b9a26e489dc22efc183e6c68d912cb65ee291\",\"dweb:/ipfs/QmakghQzG8UJ2uwkR8peYxXB7KCMKGrjB9c5r9JSyoB6kw\"]},\"@solidstate/contracts/access/ownable/SafeOwnable.sol\":{\"keccak256\":\"0x1ccd51daadb5633dd0d6bcdf333f290637844560f081e442ba750ab48b64db13\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b593dc55bea11dd27c360026e8241c2de30c61967342418e11cbded07e103db4\",\"dweb:/ipfs/Qmc2gaaRB6VnyHtJw7yQJdZaCKEQQUyKBGdm8hxuVunNeh\"]},\"@solidstate/contracts/access/ownable/SafeOwnableInternal.sol\":{\"keccak256\":\"0x35b21e71d1bf6bfd1d7b224bd972ea699a0c94e44c4d00ba29a1dd712f5e5e12\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ceaa2c8f431ef3b729eab5e91ab8f62bf0f370083a1d71f67b17aeb8d7c9af63\",\"dweb:/ipfs/QmZK6GToi8YBGg9XU6Lcf2h5EfNQUPgBSt1rPchw8cFgQA\"]},\"@solidstate/contracts/access/ownable/SafeOwnableStorage.sol\":{\"keccak256\":\"0x435612f25379c285743b73e6bd8e22653230ee619d82007d9b2c8860a5de88d7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://57017de792c526a2cd6c4308d21fa08ec362c259e83afeb947b5dcca46c2a6f8\",\"dweb:/ipfs/Qmcqj6hSQbWvyJzGMMi8EJNnU5AfBTJf6gLjYYS4RkaEqX\"]},\"@solidstate/contracts/interfaces/IERC173.sol\":{\"keccak256\":\"0x1dcf85abc1fa1871fd31e6cf54ba539c6cb93342fae91466550940ad49ad08f7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://666470e1f5e26f114d35608a4cce2885f044cfb01fe5b11db0ed32edd5d68750\",\"dweb:/ipfs/Qma5iVmjnWAjkbxs2y62PYdLGCQAef2Q6KsbMUHaQp6bUV\"]},\"@solidstate/contracts/interfaces/IERC173Internal.sol\":{\"keccak256\":\"0x411c4c66a220f9eb25a29c2553fa9e6cac22a948a8645507d20fe5e7876dc8d1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://36c60312ab789ba0b1aa3d5129fffa911bee346937f6a5662cbd2c2e97b8ccec\",\"dweb:/ipfs/QmZJV8DgbcKs2Nws8gYQWuPdfEKFJSBj9BMfqmPxtNYF8z\"]},\"@solidstate/contracts/utils/AddressUtils.sol\":{\"keccak256\":\"0x73b8727aeb8d6a984dfb279cf64eb867cb0f5c42527b877f87dcbe1a37f3e433\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://21599c6853d978762bd6db8e70720ba7de6394bf6e1b66d32a936c074c160135\",\"dweb:/ipfs/QmekH1Vro4JrwfSpJUBVRofaCMsxAj8huDbujYBgGsHm63\"]},\"@solidstate/contracts/utils/UintUtils.sol\":{\"keccak256\":\"0x1dbd4a2d25d6d3511018319bb752e2fe72b934cbcf31b18e47a286229ce36f1f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e339115b07880370eef2b22f5529050fcf863a34bab9e8ac81be570ae7deb2be\",\"dweb:/ipfs/QmU9KsZQTMffVUnHUGHkf78Yg5orQF9TSk9n1uSgQnkak2\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"acceptOwnership()": {
								"notice": "accept transfer of contract ownership"
							},
							"nomineeOwner()": {
								"notice": "get the nominated owner who has permission to call acceptOwnership"
							},
							"owner()": {
								"notice": "get the ERC173 contract owner"
							},
							"transferOwnership(address)": {
								"notice": "transfer contract ownership to new account"
							}
						},
						"version": 1
					}
				}
			},
			"@solidstate/contracts/access/ownable/SafeOwnableInternal.sol": {
				"SafeOwnableInternal": {
					"abi": [
						{
							"inputs": [],
							"name": "Ownable__NotOwner",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "Ownable__NotTransitiveOwner",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "SafeOwnable__NotNomineeOwner",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"Ownable__NotOwner\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Ownable__NotTransitiveOwner\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"SafeOwnable__NotNomineeOwner\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@solidstate/contracts/access/ownable/SafeOwnableInternal.sol\":\"SafeOwnableInternal\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":900},\"remappings\":[]},\"sources\":{\"@solidstate/contracts/access/ownable/IOwnableInternal.sol\":{\"keccak256\":\"0x4cd447859a063c235aa56dcb017012f3c7ad6c54a399d6cdfef8045c78820f90\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fecba3866ae33c19144357b5aa3a43b8d9b84728a124443a87471409d90507ff\",\"dweb:/ipfs/QmZzkdVbNp4Zv7vHPxeBkoFP3od1sRVXVdWA4j6v9TTSAa\"]},\"@solidstate/contracts/access/ownable/ISafeOwnableInternal.sol\":{\"keccak256\":\"0x371b9fed15ae2760b52eb9391e7ceefcbaaacc73b4cf2dcdd3c12e13db829cd6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d3244dbd25a5b5a6cf7740ddfb3ff9acd14cc54bde74750de20c629154567e39\",\"dweb:/ipfs/Qmd9d1CfMuPH7hsUjEur1P1cU8ZDxYKVvf4SHqHqj9K1dT\"]},\"@solidstate/contracts/access/ownable/OwnableInternal.sol\":{\"keccak256\":\"0x68e9c133cdc3a3cdbed72c63f682d428e4533f2c8095d57410653430f69f225c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2f24f167ce2396a880db1b8c8745dbd98d48ee29583784ccb8126547ac81f042\",\"dweb:/ipfs/QmW5r1s5QoV2ENh3Qx2WRhcsbyD9cKC1gBbk2JMFM4YbcR\"]},\"@solidstate/contracts/access/ownable/OwnableStorage.sol\":{\"keccak256\":\"0xdd830eb11d93432c1219d28f1758d1e1e260e09f64152f34e0cab7861a567acb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4beb423fff82203ce963d2fa005b9a26e489dc22efc183e6c68d912cb65ee291\",\"dweb:/ipfs/QmakghQzG8UJ2uwkR8peYxXB7KCMKGrjB9c5r9JSyoB6kw\"]},\"@solidstate/contracts/access/ownable/SafeOwnableInternal.sol\":{\"keccak256\":\"0x35b21e71d1bf6bfd1d7b224bd972ea699a0c94e44c4d00ba29a1dd712f5e5e12\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ceaa2c8f431ef3b729eab5e91ab8f62bf0f370083a1d71f67b17aeb8d7c9af63\",\"dweb:/ipfs/QmZK6GToi8YBGg9XU6Lcf2h5EfNQUPgBSt1rPchw8cFgQA\"]},\"@solidstate/contracts/access/ownable/SafeOwnableStorage.sol\":{\"keccak256\":\"0x435612f25379c285743b73e6bd8e22653230ee619d82007d9b2c8860a5de88d7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://57017de792c526a2cd6c4308d21fa08ec362c259e83afeb947b5dcca46c2a6f8\",\"dweb:/ipfs/Qmcqj6hSQbWvyJzGMMi8EJNnU5AfBTJf6gLjYYS4RkaEqX\"]},\"@solidstate/contracts/interfaces/IERC173.sol\":{\"keccak256\":\"0x1dcf85abc1fa1871fd31e6cf54ba539c6cb93342fae91466550940ad49ad08f7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://666470e1f5e26f114d35608a4cce2885f044cfb01fe5b11db0ed32edd5d68750\",\"dweb:/ipfs/Qma5iVmjnWAjkbxs2y62PYdLGCQAef2Q6KsbMUHaQp6bUV\"]},\"@solidstate/contracts/interfaces/IERC173Internal.sol\":{\"keccak256\":\"0x411c4c66a220f9eb25a29c2553fa9e6cac22a948a8645507d20fe5e7876dc8d1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://36c60312ab789ba0b1aa3d5129fffa911bee346937f6a5662cbd2c2e97b8ccec\",\"dweb:/ipfs/QmZJV8DgbcKs2Nws8gYQWuPdfEKFJSBj9BMfqmPxtNYF8z\"]},\"@solidstate/contracts/utils/AddressUtils.sol\":{\"keccak256\":\"0x73b8727aeb8d6a984dfb279cf64eb867cb0f5c42527b877f87dcbe1a37f3e433\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://21599c6853d978762bd6db8e70720ba7de6394bf6e1b66d32a936c074c160135\",\"dweb:/ipfs/QmekH1Vro4JrwfSpJUBVRofaCMsxAj8huDbujYBgGsHm63\"]},\"@solidstate/contracts/utils/UintUtils.sol\":{\"keccak256\":\"0x1dbd4a2d25d6d3511018319bb752e2fe72b934cbcf31b18e47a286229ce36f1f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e339115b07880370eef2b22f5529050fcf863a34bab9e8ac81be570ae7deb2be\",\"dweb:/ipfs/QmU9KsZQTMffVUnHUGHkf78Yg5orQF9TSk9n1uSgQnkak2\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@solidstate/contracts/access/ownable/SafeOwnableStorage.sol": {
				"SafeOwnableStorage": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@solidstate/contracts/access/ownable/SafeOwnableStorage.sol\":59:419  library SafeOwnableStorage {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@solidstate/contracts/access/ownable/SafeOwnableStorage.sol\":59:419  library SafeOwnableStorage {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa264697066735822122043361a83d8fbccde5864895e3c87f157e524031b29b8d2a8e5937e1c7d3a5e6b64736f6c63430008180033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60556032600b8282823980515f1a607314602657634e487b7160e01b5f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea264697066735822122043361a83d8fbccde5864895e3c87f157e524031b29b8d2a8e5937e1c7d3a5e6b64736f6c63430008180033",
							"opcodes": "PUSH1 0x55 PUSH1 0x32 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x26 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 NUMBER CALLDATASIZE BYTE DUP4 0xD8 0xFB 0xCC 0xDE PC PUSH5 0x895E3C87F1 JUMPI 0xE5 0x24 SUB SHL 0x29 0xB8 0xD2 0xA8 0xE5 SWAP4 PUSH31 0x1C7D3A5E6B64736F6C63430008180033000000000000000000000000000000 ",
							"sourceMap": "59:360:9:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;59:360:9;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea264697066735822122043361a83d8fbccde5864895e3c87f157e524031b29b8d2a8e5937e1c7d3a5e6b64736f6c63430008180033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 NUMBER CALLDATASIZE BYTE DUP4 0xD8 0xFB 0xCC 0xDE PC PUSH5 0x895E3C87F1 JUMPI 0xE5 0x24 SUB SHL 0x29 0xB8 0xD2 0xA8 0xE5 SWAP4 PUSH31 0x1C7D3A5E6B64736F6C63430008180033000000000000000000000000000000 ",
							"sourceMap": "59:360:9:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "96",
								"totalCost": "17096"
							},
							"internal": {
								"layout()": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 59,
									"end": 419,
									"name": "PUSH #[$]",
									"source": 9,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 59,
									"end": 419,
									"name": "PUSH [$]",
									"source": 9,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 59,
									"end": 419,
									"name": "PUSH",
									"source": 9,
									"value": "B"
								},
								{
									"begin": 59,
									"end": 419,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 59,
									"end": 419,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 59,
									"end": 419,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 59,
									"end": 419,
									"name": "CODECOPY",
									"source": 9
								},
								{
									"begin": 59,
									"end": 419,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 59,
									"end": 419,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 59,
									"end": 419,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 59,
									"end": 419,
									"name": "BYTE",
									"source": 9
								},
								{
									"begin": 59,
									"end": 419,
									"name": "PUSH",
									"source": 9,
									"value": "73"
								},
								{
									"begin": 59,
									"end": 419,
									"name": "EQ",
									"source": 9
								},
								{
									"begin": 59,
									"end": 419,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 59,
									"end": 419,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 59,
									"end": 419,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 59,
									"end": 419,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 59,
									"end": 419,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 59,
									"end": 419,
									"name": "PUSH",
									"source": 9,
									"value": "4"
								},
								{
									"begin": 59,
									"end": 419,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 59,
									"end": 419,
									"name": "PUSH",
									"source": 9,
									"value": "24"
								},
								{
									"begin": 59,
									"end": 419,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 59,
									"end": 419,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 59,
									"end": 419,
									"name": "tag",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 59,
									"end": 419,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 59,
									"end": 419,
									"name": "ADDRESS",
									"source": 9
								},
								{
									"begin": 59,
									"end": 419,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 59,
									"end": 419,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 59,
									"end": 419,
									"name": "PUSH",
									"source": 9,
									"value": "73"
								},
								{
									"begin": 59,
									"end": 419,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 59,
									"end": 419,
									"name": "MSTORE8",
									"source": 9
								},
								{
									"begin": 59,
									"end": 419,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 59,
									"end": 419,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 59,
									"end": 419,
									"name": "RETURN",
									"source": 9
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122043361a83d8fbccde5864895e3c87f157e524031b29b8d2a8e5937e1c7d3a5e6b64736f6c63430008180033",
									".code": [
										{
											"begin": 59,
											"end": 419,
											"name": "PUSHDEPLOYADDRESS",
											"source": 9
										},
										{
											"begin": 59,
											"end": 419,
											"name": "ADDRESS",
											"source": 9
										},
										{
											"begin": 59,
											"end": 419,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 59,
											"end": 419,
											"name": "PUSH",
											"source": 9,
											"value": "80"
										},
										{
											"begin": 59,
											"end": 419,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 59,
											"end": 419,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 59,
											"end": 419,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 59,
											"end": 419,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 59,
											"end": 419,
											"name": "REVERT",
											"source": 9
										}
									]
								}
							},
							"sourceList": [
								"@solidstate/contracts/access/ownable/IOwnable.sol",
								"@solidstate/contracts/access/ownable/IOwnableInternal.sol",
								"@solidstate/contracts/access/ownable/ISafeOwnable.sol",
								"@solidstate/contracts/access/ownable/ISafeOwnableInternal.sol",
								"@solidstate/contracts/access/ownable/Ownable.sol",
								"@solidstate/contracts/access/ownable/OwnableInternal.sol",
								"@solidstate/contracts/access/ownable/OwnableStorage.sol",
								"@solidstate/contracts/access/ownable/SafeOwnable.sol",
								"@solidstate/contracts/access/ownable/SafeOwnableInternal.sol",
								"@solidstate/contracts/access/ownable/SafeOwnableStorage.sol",
								"@solidstate/contracts/interfaces/IERC165.sol",
								"@solidstate/contracts/interfaces/IERC165Internal.sol",
								"@solidstate/contracts/interfaces/IERC173.sol",
								"@solidstate/contracts/interfaces/IERC173Internal.sol",
								"@solidstate/contracts/interfaces/IERC2535DiamondCut.sol",
								"@solidstate/contracts/interfaces/IERC2535DiamondCutInternal.sol",
								"@solidstate/contracts/interfaces/IERC2535DiamondLoupe.sol",
								"@solidstate/contracts/interfaces/IERC2535DiamondLoupeInternal.sol",
								"@solidstate/contracts/introspection/ERC165/base/ERC165Base.sol",
								"@solidstate/contracts/introspection/ERC165/base/ERC165BaseInternal.sol",
								"@solidstate/contracts/introspection/ERC165/base/ERC165BaseStorage.sol",
								"@solidstate/contracts/introspection/ERC165/base/IERC165Base.sol",
								"@solidstate/contracts/introspection/ERC165/base/IERC165BaseInternal.sol",
								"@solidstate/contracts/proxy/IProxy.sol",
								"@solidstate/contracts/proxy/Proxy.sol",
								"@solidstate/contracts/proxy/diamond/ISolidStateDiamond.sol",
								"@solidstate/contracts/proxy/diamond/SolidStateDiamond.sol",
								"@solidstate/contracts/proxy/diamond/base/DiamondBase.sol",
								"@solidstate/contracts/proxy/diamond/base/DiamondBaseStorage.sol",
								"@solidstate/contracts/proxy/diamond/base/IDiamondBase.sol",
								"@solidstate/contracts/proxy/diamond/fallback/DiamondFallback.sol",
								"@solidstate/contracts/proxy/diamond/fallback/IDiamondFallback.sol",
								"@solidstate/contracts/proxy/diamond/readable/DiamondReadable.sol",
								"@solidstate/contracts/proxy/diamond/readable/DiamondReadableInternal.sol",
								"@solidstate/contracts/proxy/diamond/readable/IDiamondReadable.sol",
								"@solidstate/contracts/proxy/diamond/readable/IDiamondReadableInternal.sol",
								"@solidstate/contracts/proxy/diamond/writable/DiamondWritable.sol",
								"@solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol",
								"@solidstate/contracts/proxy/diamond/writable/IDiamondWritable.sol",
								"@solidstate/contracts/proxy/diamond/writable/IDiamondWritableInternal.sol",
								"@solidstate/contracts/utils/AddressUtils.sol",
								"@solidstate/contracts/utils/UintUtils.sol",
								"Eip2535/EIp2535Diamond.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@solidstate/contracts/access/ownable/SafeOwnableStorage.sol\":\"SafeOwnableStorage\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":900},\"remappings\":[]},\"sources\":{\"@solidstate/contracts/access/ownable/SafeOwnableStorage.sol\":{\"keccak256\":\"0x435612f25379c285743b73e6bd8e22653230ee619d82007d9b2c8860a5de88d7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://57017de792c526a2cd6c4308d21fa08ec362c259e83afeb947b5dcca46c2a6f8\",\"dweb:/ipfs/Qmcqj6hSQbWvyJzGMMi8EJNnU5AfBTJf6gLjYYS4RkaEqX\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@solidstate/contracts/interfaces/IERC165.sol": {
				"IERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "see https://eips.ethereum.org/EIPS/eip-165",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"params": {
									"interfaceId": "interface id"
								},
								"returns": {
									"_0": "bool whether interface is supported"
								}
							}
						},
						"title": "ERC165 interface registration interface",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"see https://eips.ethereum.org/EIPS/eip-165\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"params\":{\"interfaceId\":\"interface id\"},\"returns\":{\"_0\":\"bool whether interface is supported\"}}},\"title\":\"ERC165 interface registration interface\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"supportsInterface(bytes4)\":{\"notice\":\"query whether contract has registered support for given interface\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@solidstate/contracts/interfaces/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":900},\"remappings\":[]},\"sources\":{\"@solidstate/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0x05652eb09f7108b0ded5234ee56ccbdadd259e7801da27c484959b01bd0ef97e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://280cf3914c409430d3d3dfb36c82e3404cd056803eed8c6642eab59851d1596c\",\"dweb:/ipfs/QmZiv8jbJYEkic6mMdATRSCfRBfzQjDFfWY4xbSEnHjCvB\"]},\"@solidstate/contracts/interfaces/IERC165Internal.sol\":{\"keccak256\":\"0xbf2681def388e5bfda27e98c258bdd0fa547c233f2f7c44dd316d12252634fce\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://184a68e115babf0ed2b99e80e127950a8c44b6baef9c81a71cc9f48894f3bc43\",\"dweb:/ipfs/QmZCYdyk9PStUQYbuZZf2wNwkwpwFUfdp44YVx9SvLokwz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"supportsInterface(bytes4)": {
								"notice": "query whether contract has registered support for given interface"
							}
						},
						"version": 1
					}
				}
			},
			"@solidstate/contracts/interfaces/IERC165Internal.sol": {
				"IERC165Internal": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"title": "ERC165 interface registration interface",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"title\":\"ERC165 interface registration interface\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@solidstate/contracts/interfaces/IERC165Internal.sol\":\"IERC165Internal\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":900},\"remappings\":[]},\"sources\":{\"@solidstate/contracts/interfaces/IERC165Internal.sol\":{\"keccak256\":\"0xbf2681def388e5bfda27e98c258bdd0fa547c233f2f7c44dd316d12252634fce\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://184a68e115babf0ed2b99e80e127950a8c44b6baef9c81a71cc9f48894f3bc43\",\"dweb:/ipfs/QmZCYdyk9PStUQYbuZZf2wNwkwpwFUfdp44YVx9SvLokwz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@solidstate/contracts/interfaces/IERC173.sol": {
				"IERC173": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "see https://eips.ethereum.org/EIPS/eip-173",
						"kind": "dev",
						"methods": {
							"owner()": {
								"returns": {
									"_0": "contract owner"
								}
							},
							"transferOwnership(address)": {
								"params": {
									"account": "address of new owner"
								}
							}
						},
						"title": "Contract ownership standard interface",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"see https://eips.ethereum.org/EIPS/eip-173\",\"kind\":\"dev\",\"methods\":{\"owner()\":{\"returns\":{\"_0\":\"contract owner\"}},\"transferOwnership(address)\":{\"params\":{\"account\":\"address of new owner\"}}},\"title\":\"Contract ownership standard interface\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"owner()\":{\"notice\":\"get the ERC173 contract owner\"},\"transferOwnership(address)\":{\"notice\":\"transfer contract ownership to new account\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@solidstate/contracts/interfaces/IERC173.sol\":\"IERC173\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":900},\"remappings\":[]},\"sources\":{\"@solidstate/contracts/interfaces/IERC173.sol\":{\"keccak256\":\"0x1dcf85abc1fa1871fd31e6cf54ba539c6cb93342fae91466550940ad49ad08f7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://666470e1f5e26f114d35608a4cce2885f044cfb01fe5b11db0ed32edd5d68750\",\"dweb:/ipfs/Qma5iVmjnWAjkbxs2y62PYdLGCQAef2Q6KsbMUHaQp6bUV\"]},\"@solidstate/contracts/interfaces/IERC173Internal.sol\":{\"keccak256\":\"0x411c4c66a220f9eb25a29c2553fa9e6cac22a948a8645507d20fe5e7876dc8d1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://36c60312ab789ba0b1aa3d5129fffa911bee346937f6a5662cbd2c2e97b8ccec\",\"dweb:/ipfs/QmZJV8DgbcKs2Nws8gYQWuPdfEKFJSBj9BMfqmPxtNYF8z\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"owner()": {
								"notice": "get the ERC173 contract owner"
							},
							"transferOwnership(address)": {
								"notice": "transfer contract ownership to new account"
							}
						},
						"version": 1
					}
				}
			},
			"@solidstate/contracts/interfaces/IERC173Internal.sol": {
				"IERC173Internal": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"title": "Partial ERC173 interface needed by internal functions",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"title\":\"Partial ERC173 interface needed by internal functions\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@solidstate/contracts/interfaces/IERC173Internal.sol\":\"IERC173Internal\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":900},\"remappings\":[]},\"sources\":{\"@solidstate/contracts/interfaces/IERC173Internal.sol\":{\"keccak256\":\"0x411c4c66a220f9eb25a29c2553fa9e6cac22a948a8645507d20fe5e7876dc8d1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://36c60312ab789ba0b1aa3d5129fffa911bee346937f6a5662cbd2c2e97b8ccec\",\"dweb:/ipfs/QmZJV8DgbcKs2Nws8gYQWuPdfEKFJSBj9BMfqmPxtNYF8z\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@solidstate/contracts/interfaces/IERC2535DiamondCut.sol": {
				"IERC2535DiamondCut": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"components": [
										{
											"internalType": "address",
											"name": "target",
											"type": "address"
										},
										{
											"internalType": "enum IERC2535DiamondCutInternal.FacetCutAction",
											"name": "action",
											"type": "uint8"
										},
										{
											"internalType": "bytes4[]",
											"name": "selectors",
											"type": "bytes4[]"
										}
									],
									"indexed": false,
									"internalType": "struct IERC2535DiamondCutInternal.FacetCut[]",
									"name": "facetCuts",
									"type": "tuple[]"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "target",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "DiamondCut",
							"type": "event"
						},
						{
							"inputs": [
								{
									"components": [
										{
											"internalType": "address",
											"name": "target",
											"type": "address"
										},
										{
											"internalType": "enum IERC2535DiamondCutInternal.FacetCutAction",
											"name": "action",
											"type": "uint8"
										},
										{
											"internalType": "bytes4[]",
											"name": "selectors",
											"type": "bytes4[]"
										}
									],
									"internalType": "struct IERC2535DiamondCutInternal.FacetCut[]",
									"name": "facetCuts",
									"type": "tuple[]"
								},
								{
									"internalType": "address",
									"name": "target",
									"type": "address"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "diamondCut",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "see https://eips.ethereum.org/EIPS/eip-2535",
						"kind": "dev",
						"methods": {
							"diamondCut((address,uint8,bytes4[])[],address,bytes)": {
								"params": {
									"data": "optional initialization function call data",
									"facetCuts": "array of structured Diamond facet update data",
									"target": "optional target of initialization delegatecall"
								}
							}
						},
						"title": "ERC2535 write interface",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"diamondCut((address,uint8,bytes4[])[],address,bytes)": "1f931c1c"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"enum IERC2535DiamondCutInternal.FacetCutAction\",\"name\":\"action\",\"type\":\"uint8\"},{\"internalType\":\"bytes4[]\",\"name\":\"selectors\",\"type\":\"bytes4[]\"}],\"indexed\":false,\"internalType\":\"struct IERC2535DiamondCutInternal.FacetCut[]\",\"name\":\"facetCuts\",\"type\":\"tuple[]\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"DiamondCut\",\"type\":\"event\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"enum IERC2535DiamondCutInternal.FacetCutAction\",\"name\":\"action\",\"type\":\"uint8\"},{\"internalType\":\"bytes4[]\",\"name\":\"selectors\",\"type\":\"bytes4[]\"}],\"internalType\":\"struct IERC2535DiamondCutInternal.FacetCut[]\",\"name\":\"facetCuts\",\"type\":\"tuple[]\"},{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"diamondCut\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"see https://eips.ethereum.org/EIPS/eip-2535\",\"kind\":\"dev\",\"methods\":{\"diamondCut((address,uint8,bytes4[])[],address,bytes)\":{\"params\":{\"data\":\"optional initialization function call data\",\"facetCuts\":\"array of structured Diamond facet update data\",\"target\":\"optional target of initialization delegatecall\"}}},\"title\":\"ERC2535 write interface\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"diamondCut((address,uint8,bytes4[])[],address,bytes)\":{\"notice\":\"update diamond facets and optionally execute arbitrary initialization function\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@solidstate/contracts/interfaces/IERC2535DiamondCut.sol\":\"IERC2535DiamondCut\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":900},\"remappings\":[]},\"sources\":{\"@solidstate/contracts/interfaces/IERC2535DiamondCut.sol\":{\"keccak256\":\"0xe2bc83d555c3b406a74ab0736d93da6435d197850a2504e0645dea7606055e4f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f4020f04ddf277326e647d25aeb6113bd1f65d62f02d6cabb479c646ceca5619\",\"dweb:/ipfs/QmU3snuS4Nu4FyxrpTm4Y63DtrqMQDDG2dYQ4wAu1i5npi\"]},\"@solidstate/contracts/interfaces/IERC2535DiamondCutInternal.sol\":{\"keccak256\":\"0xc59ed1d101485d637a4cc0b4717723a11cfae824734b169b310994e2ca8cf8ee\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bf0851d1129744467b98e5aff7a24a0c0cb6c78126b8caa7c312ce1bfb4ed83c\",\"dweb:/ipfs/QmdZKYETmRhk2ucWCmfBH16u1vN8WRsdAj7fam3topYj7L\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"diamondCut((address,uint8,bytes4[])[],address,bytes)": {
								"notice": "update diamond facets and optionally execute arbitrary initialization function"
							}
						},
						"version": 1
					}
				}
			},
			"@solidstate/contracts/interfaces/IERC2535DiamondCutInternal.sol": {
				"IERC2535DiamondCutInternal": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"components": [
										{
											"internalType": "address",
											"name": "target",
											"type": "address"
										},
										{
											"internalType": "enum IERC2535DiamondCutInternal.FacetCutAction",
											"name": "action",
											"type": "uint8"
										},
										{
											"internalType": "bytes4[]",
											"name": "selectors",
											"type": "bytes4[]"
										}
									],
									"indexed": false,
									"internalType": "struct IERC2535DiamondCutInternal.FacetCut[]",
									"name": "facetCuts",
									"type": "tuple[]"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "target",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "DiamondCut",
							"type": "event"
						}
					],
					"devdoc": {
						"details": "see https://eips.ethereum.org/EIPS/eip-2535",
						"kind": "dev",
						"methods": {},
						"title": "ERC2535 write interface for internal functions",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"enum IERC2535DiamondCutInternal.FacetCutAction\",\"name\":\"action\",\"type\":\"uint8\"},{\"internalType\":\"bytes4[]\",\"name\":\"selectors\",\"type\":\"bytes4[]\"}],\"indexed\":false,\"internalType\":\"struct IERC2535DiamondCutInternal.FacetCut[]\",\"name\":\"facetCuts\",\"type\":\"tuple[]\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"DiamondCut\",\"type\":\"event\"}],\"devdoc\":{\"details\":\"see https://eips.ethereum.org/EIPS/eip-2535\",\"kind\":\"dev\",\"methods\":{},\"title\":\"ERC2535 write interface for internal functions\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@solidstate/contracts/interfaces/IERC2535DiamondCutInternal.sol\":\"IERC2535DiamondCutInternal\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":900},\"remappings\":[]},\"sources\":{\"@solidstate/contracts/interfaces/IERC2535DiamondCutInternal.sol\":{\"keccak256\":\"0xc59ed1d101485d637a4cc0b4717723a11cfae824734b169b310994e2ca8cf8ee\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bf0851d1129744467b98e5aff7a24a0c0cb6c78126b8caa7c312ce1bfb4ed83c\",\"dweb:/ipfs/QmdZKYETmRhk2ucWCmfBH16u1vN8WRsdAj7fam3topYj7L\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@solidstate/contracts/interfaces/IERC2535DiamondLoupe.sol": {
				"IERC2535DiamondLoupe": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "selector",
									"type": "bytes4"
								}
							],
							"name": "facetAddress",
							"outputs": [
								{
									"internalType": "address",
									"name": "facet",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "facetAddresses",
							"outputs": [
								{
									"internalType": "address[]",
									"name": "addresses",
									"type": "address[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "facet",
									"type": "address"
								}
							],
							"name": "facetFunctionSelectors",
							"outputs": [
								{
									"internalType": "bytes4[]",
									"name": "selectors",
									"type": "bytes4[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "facets",
							"outputs": [
								{
									"components": [
										{
											"internalType": "address",
											"name": "target",
											"type": "address"
										},
										{
											"internalType": "bytes4[]",
											"name": "selectors",
											"type": "bytes4[]"
										}
									],
									"internalType": "struct IERC2535DiamondLoupeInternal.Facet[]",
									"name": "diamondFacets",
									"type": "tuple[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "see https://eips.ethereum.org/EIPS/eip-2535",
						"kind": "dev",
						"methods": {
							"facetAddress(bytes4)": {
								"params": {
									"selector": "function selector to query"
								},
								"returns": {
									"facet": "facet address (zero address if not found)"
								}
							},
							"facetAddresses()": {
								"returns": {
									"addresses": "array of facet addresses"
								}
							},
							"facetFunctionSelectors(address)": {
								"params": {
									"facet": "address of facet to query"
								},
								"returns": {
									"selectors": "array of function selectors"
								}
							},
							"facets()": {
								"returns": {
									"diamondFacets": "array of structured facet data"
								}
							}
						},
						"title": "ERC2535 read interface",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"facetAddress(bytes4)": "cdffacc6",
							"facetAddresses()": "52ef6b2c",
							"facetFunctionSelectors(address)": "adfca15e",
							"facets()": "7a0ed627"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"selector\",\"type\":\"bytes4\"}],\"name\":\"facetAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"facet\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"facetAddresses\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"addresses\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"facet\",\"type\":\"address\"}],\"name\":\"facetFunctionSelectors\",\"outputs\":[{\"internalType\":\"bytes4[]\",\"name\":\"selectors\",\"type\":\"bytes4[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"facets\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"bytes4[]\",\"name\":\"selectors\",\"type\":\"bytes4[]\"}],\"internalType\":\"struct IERC2535DiamondLoupeInternal.Facet[]\",\"name\":\"diamondFacets\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"see https://eips.ethereum.org/EIPS/eip-2535\",\"kind\":\"dev\",\"methods\":{\"facetAddress(bytes4)\":{\"params\":{\"selector\":\"function selector to query\"},\"returns\":{\"facet\":\"facet address (zero address if not found)\"}},\"facetAddresses()\":{\"returns\":{\"addresses\":\"array of facet addresses\"}},\"facetFunctionSelectors(address)\":{\"params\":{\"facet\":\"address of facet to query\"},\"returns\":{\"selectors\":\"array of function selectors\"}},\"facets()\":{\"returns\":{\"diamondFacets\":\"array of structured facet data\"}}},\"title\":\"ERC2535 read interface\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"facetAddress(bytes4)\":{\"notice\":\"get the address of the facet associated with given selector\"},\"facetAddresses()\":{\"notice\":\"get addresses of all facets used by diamond\"},\"facetFunctionSelectors(address)\":{\"notice\":\"get all selectors for given facet address\"},\"facets()\":{\"notice\":\"get all facets and their selectors\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@solidstate/contracts/interfaces/IERC2535DiamondLoupe.sol\":\"IERC2535DiamondLoupe\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":900},\"remappings\":[]},\"sources\":{\"@solidstate/contracts/interfaces/IERC2535DiamondLoupe.sol\":{\"keccak256\":\"0x26c32fd85a01de39974f3ff9c025e6bdc6c87b9d3d4a33abe06bdace2711d3c3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1fd3d5df9bea6a5738c5f59042e61015cc4dd65c5bc2587399efa2e1ac1479ac\",\"dweb:/ipfs/QmXMwJ86oCpy6JysW4TzDHDv84TSaVtfyYH8s9TdMjYkdq\"]},\"@solidstate/contracts/interfaces/IERC2535DiamondLoupeInternal.sol\":{\"keccak256\":\"0xf53530cc00621f951debec10349ad6209173a4e37519f9329061c33178319c54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://944813649502424d16a37dff3ca41d9d7393458508576e43289e49b876414851\",\"dweb:/ipfs/QmXmdY3XqPQRC6iVEAa82jydXisTnAJAzwTc1z7YcZJ4dy\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"facetAddress(bytes4)": {
								"notice": "get the address of the facet associated with given selector"
							},
							"facetAddresses()": {
								"notice": "get addresses of all facets used by diamond"
							},
							"facetFunctionSelectors(address)": {
								"notice": "get all selectors for given facet address"
							},
							"facets()": {
								"notice": "get all facets and their selectors"
							}
						},
						"version": 1
					}
				}
			},
			"@solidstate/contracts/interfaces/IERC2535DiamondLoupeInternal.sol": {
				"IERC2535DiamondLoupeInternal": {
					"abi": [],
					"devdoc": {
						"details": "see https://eips.ethereum.org/EIPS/eip-2535",
						"kind": "dev",
						"methods": {},
						"title": "ERC2535 read interface for internal functions",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"see https://eips.ethereum.org/EIPS/eip-2535\",\"kind\":\"dev\",\"methods\":{},\"title\":\"ERC2535 read interface for internal functions\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@solidstate/contracts/interfaces/IERC2535DiamondLoupeInternal.sol\":\"IERC2535DiamondLoupeInternal\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":900},\"remappings\":[]},\"sources\":{\"@solidstate/contracts/interfaces/IERC2535DiamondLoupeInternal.sol\":{\"keccak256\":\"0xf53530cc00621f951debec10349ad6209173a4e37519f9329061c33178319c54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://944813649502424d16a37dff3ca41d9d7393458508576e43289e49b876414851\",\"dweb:/ipfs/QmXmdY3XqPQRC6iVEAa82jydXisTnAJAzwTc1z7YcZJ4dy\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@solidstate/contracts/introspection/ERC165/base/ERC165Base.sol": {
				"ERC165Base": {
					"abi": [
						{
							"inputs": [],
							"name": "ERC165Base__InvalidInterfaceId",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"params": {
									"interfaceId": "interface id"
								},
								"returns": {
									"_0": "bool whether interface is supported"
								}
							}
						},
						"title": "ERC165 implementation",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"ERC165Base__InvalidInterfaceId\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"params\":{\"interfaceId\":\"interface id\"},\"returns\":{\"_0\":\"bool whether interface is supported\"}}},\"title\":\"ERC165 implementation\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"supportsInterface(bytes4)\":{\"notice\":\"query whether contract has registered support for given interface\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@solidstate/contracts/introspection/ERC165/base/ERC165Base.sol\":\"ERC165Base\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":900},\"remappings\":[]},\"sources\":{\"@solidstate/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0x05652eb09f7108b0ded5234ee56ccbdadd259e7801da27c484959b01bd0ef97e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://280cf3914c409430d3d3dfb36c82e3404cd056803eed8c6642eab59851d1596c\",\"dweb:/ipfs/QmZiv8jbJYEkic6mMdATRSCfRBfzQjDFfWY4xbSEnHjCvB\"]},\"@solidstate/contracts/interfaces/IERC165Internal.sol\":{\"keccak256\":\"0xbf2681def388e5bfda27e98c258bdd0fa547c233f2f7c44dd316d12252634fce\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://184a68e115babf0ed2b99e80e127950a8c44b6baef9c81a71cc9f48894f3bc43\",\"dweb:/ipfs/QmZCYdyk9PStUQYbuZZf2wNwkwpwFUfdp44YVx9SvLokwz\"]},\"@solidstate/contracts/introspection/ERC165/base/ERC165Base.sol\":{\"keccak256\":\"0x4a8e6e515570725ae96e6e21c7144f27fdc101bfcd19f74c912474615f007e16\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://702de9b29334e76ac73e98be1555599968f16d29d9c6d0a2d8bd3ed1cf8d3454\",\"dweb:/ipfs/Qmbrbb1NoKHu84igojGCUaDarNGE1CpsfmmxW2EtAoUqUP\"]},\"@solidstate/contracts/introspection/ERC165/base/ERC165BaseInternal.sol\":{\"keccak256\":\"0xd2900ce01bce0dde2a848949b189c0345a4155900bf4c6401c0317ad41ee8740\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2f0f1ae8d514b6575d0a08f63b4264aeeb4ee8555774c4ebdbc4a40e89789ef8\",\"dweb:/ipfs/QmZ8DvFtDv1DFcb3gtXa33Ygzkr3ppBELfGLyx8nyJk6TP\"]},\"@solidstate/contracts/introspection/ERC165/base/ERC165BaseStorage.sol\":{\"keccak256\":\"0x90b7e081bb06e2ea5b2ccdde30d174d72ced4a3683c44a46f92b8e0c98eec52f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0b977c181a83790d3799f5ff29c81c9fc7461cb96f75375a279e8f60c1eba28c\",\"dweb:/ipfs/QmYTfZtWxkUnVn67hGtyySW2HkYA5hF5f2dMKcjqJHAuQS\"]},\"@solidstate/contracts/introspection/ERC165/base/IERC165Base.sol\":{\"keccak256\":\"0xf651a6e6c267cb908a3c66592a5b4b2e5cc571cd44e129d8fd653fa05c025e0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ffd390fb94ced75514fd104601019396d85a35c6ff6df71873815b773e825b80\",\"dweb:/ipfs/QmWg5R8hS1ekuWm2q86ZQiNRzHy3sS9z9671udXLwA2TpA\"]},\"@solidstate/contracts/introspection/ERC165/base/IERC165BaseInternal.sol\":{\"keccak256\":\"0xb3eccf8d895692a5824e73d59aecfbe938dd39a57fee2cef43d5caeba0155266\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d8a039f793a32839f33098ccc3be5f226c83529236b7d387399884afea045360\",\"dweb:/ipfs/QmRD9UWYAF64KpaXjRUjTFjoW3Z71HnE8a4p4Sj7yWvioh\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"supportsInterface(bytes4)": {
								"notice": "query whether contract has registered support for given interface"
							}
						},
						"version": 1
					}
				}
			},
			"@solidstate/contracts/introspection/ERC165/base/ERC165BaseInternal.sol": {
				"ERC165BaseInternal": {
					"abi": [
						{
							"inputs": [],
							"name": "ERC165Base__InvalidInterfaceId",
							"type": "error"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"title": "ERC165 implementation",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"ERC165Base__InvalidInterfaceId\",\"type\":\"error\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"title\":\"ERC165 implementation\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@solidstate/contracts/introspection/ERC165/base/ERC165BaseInternal.sol\":\"ERC165BaseInternal\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":900},\"remappings\":[]},\"sources\":{\"@solidstate/contracts/interfaces/IERC165Internal.sol\":{\"keccak256\":\"0xbf2681def388e5bfda27e98c258bdd0fa547c233f2f7c44dd316d12252634fce\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://184a68e115babf0ed2b99e80e127950a8c44b6baef9c81a71cc9f48894f3bc43\",\"dweb:/ipfs/QmZCYdyk9PStUQYbuZZf2wNwkwpwFUfdp44YVx9SvLokwz\"]},\"@solidstate/contracts/introspection/ERC165/base/ERC165BaseInternal.sol\":{\"keccak256\":\"0xd2900ce01bce0dde2a848949b189c0345a4155900bf4c6401c0317ad41ee8740\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2f0f1ae8d514b6575d0a08f63b4264aeeb4ee8555774c4ebdbc4a40e89789ef8\",\"dweb:/ipfs/QmZ8DvFtDv1DFcb3gtXa33Ygzkr3ppBELfGLyx8nyJk6TP\"]},\"@solidstate/contracts/introspection/ERC165/base/ERC165BaseStorage.sol\":{\"keccak256\":\"0x90b7e081bb06e2ea5b2ccdde30d174d72ced4a3683c44a46f92b8e0c98eec52f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0b977c181a83790d3799f5ff29c81c9fc7461cb96f75375a279e8f60c1eba28c\",\"dweb:/ipfs/QmYTfZtWxkUnVn67hGtyySW2HkYA5hF5f2dMKcjqJHAuQS\"]},\"@solidstate/contracts/introspection/ERC165/base/IERC165BaseInternal.sol\":{\"keccak256\":\"0xb3eccf8d895692a5824e73d59aecfbe938dd39a57fee2cef43d5caeba0155266\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d8a039f793a32839f33098ccc3be5f226c83529236b7d387399884afea045360\",\"dweb:/ipfs/QmRD9UWYAF64KpaXjRUjTFjoW3Z71HnE8a4p4Sj7yWvioh\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@solidstate/contracts/introspection/ERC165/base/ERC165BaseStorage.sol": {
				"ERC165BaseStorage": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@solidstate/contracts/introspection/ERC165/base/ERC165BaseStorage.sol\":59:440  library ERC165BaseStorage {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@solidstate/contracts/introspection/ERC165/base/ERC165BaseStorage.sol\":59:440  library ERC165BaseStorage {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220899ebf249a7225a75ee1f718b09f271c8baf86fad90b46ea01d7292b90f5b6c264736f6c63430008180033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60556032600b8282823980515f1a607314602657634e487b7160e01b5f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220899ebf249a7225a75ee1f718b09f271c8baf86fad90b46ea01d7292b90f5b6c264736f6c63430008180033",
							"opcodes": "PUSH1 0x55 PUSH1 0x32 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x26 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP10 SWAP15 0xBF 0x24 SWAP11 PUSH19 0x25A75EE1F718B09F271C8BAF86FAD90B46EA01 0xD7 0x29 0x2B SWAP1 CREATE2 0xB6 0xC2 PUSH5 0x736F6C6343 STOP ADDMOD XOR STOP CALLER ",
							"sourceMap": "59:381:20:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;59:381:20;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220899ebf249a7225a75ee1f718b09f271c8baf86fad90b46ea01d7292b90f5b6c264736f6c63430008180033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP10 SWAP15 0xBF 0x24 SWAP11 PUSH19 0x25A75EE1F718B09F271C8BAF86FAD90B46EA01 0xD7 0x29 0x2B SWAP1 CREATE2 0xB6 0xC2 PUSH5 0x736F6C6343 STOP ADDMOD XOR STOP CALLER ",
							"sourceMap": "59:381:20:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "96",
								"totalCost": "17096"
							},
							"internal": {
								"layout()": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 59,
									"end": 440,
									"name": "PUSH #[$]",
									"source": 20,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 59,
									"end": 440,
									"name": "PUSH [$]",
									"source": 20,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 59,
									"end": 440,
									"name": "PUSH",
									"source": 20,
									"value": "B"
								},
								{
									"begin": 59,
									"end": 440,
									"name": "DUP3",
									"source": 20
								},
								{
									"begin": 59,
									"end": 440,
									"name": "DUP3",
									"source": 20
								},
								{
									"begin": 59,
									"end": 440,
									"name": "DUP3",
									"source": 20
								},
								{
									"begin": 59,
									"end": 440,
									"name": "CODECOPY",
									"source": 20
								},
								{
									"begin": 59,
									"end": 440,
									"name": "DUP1",
									"source": 20
								},
								{
									"begin": 59,
									"end": 440,
									"name": "MLOAD",
									"source": 20
								},
								{
									"begin": 59,
									"end": 440,
									"name": "PUSH",
									"source": 20,
									"value": "0"
								},
								{
									"begin": 59,
									"end": 440,
									"name": "BYTE",
									"source": 20
								},
								{
									"begin": 59,
									"end": 440,
									"name": "PUSH",
									"source": 20,
									"value": "73"
								},
								{
									"begin": 59,
									"end": 440,
									"name": "EQ",
									"source": 20
								},
								{
									"begin": 59,
									"end": 440,
									"name": "PUSH [tag]",
									"source": 20,
									"value": "1"
								},
								{
									"begin": 59,
									"end": 440,
									"name": "JUMPI",
									"source": 20
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 59,
									"end": 440,
									"name": "PUSH",
									"source": 20,
									"value": "0"
								},
								{
									"begin": 59,
									"end": 440,
									"name": "MSTORE",
									"source": 20
								},
								{
									"begin": 59,
									"end": 440,
									"name": "PUSH",
									"source": 20,
									"value": "0"
								},
								{
									"begin": 59,
									"end": 440,
									"name": "PUSH",
									"source": 20,
									"value": "4"
								},
								{
									"begin": 59,
									"end": 440,
									"name": "MSTORE",
									"source": 20
								},
								{
									"begin": 59,
									"end": 440,
									"name": "PUSH",
									"source": 20,
									"value": "24"
								},
								{
									"begin": 59,
									"end": 440,
									"name": "PUSH",
									"source": 20,
									"value": "0"
								},
								{
									"begin": 59,
									"end": 440,
									"name": "REVERT",
									"source": 20
								},
								{
									"begin": 59,
									"end": 440,
									"name": "tag",
									"source": 20,
									"value": "1"
								},
								{
									"begin": 59,
									"end": 440,
									"name": "JUMPDEST",
									"source": 20
								},
								{
									"begin": 59,
									"end": 440,
									"name": "ADDRESS",
									"source": 20
								},
								{
									"begin": 59,
									"end": 440,
									"name": "PUSH",
									"source": 20,
									"value": "0"
								},
								{
									"begin": 59,
									"end": 440,
									"name": "MSTORE",
									"source": 20
								},
								{
									"begin": 59,
									"end": 440,
									"name": "PUSH",
									"source": 20,
									"value": "73"
								},
								{
									"begin": 59,
									"end": 440,
									"name": "DUP2",
									"source": 20
								},
								{
									"begin": 59,
									"end": 440,
									"name": "MSTORE8",
									"source": 20
								},
								{
									"begin": 59,
									"end": 440,
									"name": "DUP3",
									"source": 20
								},
								{
									"begin": 59,
									"end": 440,
									"name": "DUP2",
									"source": 20
								},
								{
									"begin": 59,
									"end": 440,
									"name": "RETURN",
									"source": 20
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220899ebf249a7225a75ee1f718b09f271c8baf86fad90b46ea01d7292b90f5b6c264736f6c63430008180033",
									".code": [
										{
											"begin": 59,
											"end": 440,
											"name": "PUSHDEPLOYADDRESS",
											"source": 20
										},
										{
											"begin": 59,
											"end": 440,
											"name": "ADDRESS",
											"source": 20
										},
										{
											"begin": 59,
											"end": 440,
											"name": "EQ",
											"source": 20
										},
										{
											"begin": 59,
											"end": 440,
											"name": "PUSH",
											"source": 20,
											"value": "80"
										},
										{
											"begin": 59,
											"end": 440,
											"name": "PUSH",
											"source": 20,
											"value": "40"
										},
										{
											"begin": 59,
											"end": 440,
											"name": "MSTORE",
											"source": 20
										},
										{
											"begin": 59,
											"end": 440,
											"name": "PUSH",
											"source": 20,
											"value": "0"
										},
										{
											"begin": 59,
											"end": 440,
											"name": "DUP1",
											"source": 20
										},
										{
											"begin": 59,
											"end": 440,
											"name": "REVERT",
											"source": 20
										}
									]
								}
							},
							"sourceList": [
								"@solidstate/contracts/access/ownable/IOwnable.sol",
								"@solidstate/contracts/access/ownable/IOwnableInternal.sol",
								"@solidstate/contracts/access/ownable/ISafeOwnable.sol",
								"@solidstate/contracts/access/ownable/ISafeOwnableInternal.sol",
								"@solidstate/contracts/access/ownable/Ownable.sol",
								"@solidstate/contracts/access/ownable/OwnableInternal.sol",
								"@solidstate/contracts/access/ownable/OwnableStorage.sol",
								"@solidstate/contracts/access/ownable/SafeOwnable.sol",
								"@solidstate/contracts/access/ownable/SafeOwnableInternal.sol",
								"@solidstate/contracts/access/ownable/SafeOwnableStorage.sol",
								"@solidstate/contracts/interfaces/IERC165.sol",
								"@solidstate/contracts/interfaces/IERC165Internal.sol",
								"@solidstate/contracts/interfaces/IERC173.sol",
								"@solidstate/contracts/interfaces/IERC173Internal.sol",
								"@solidstate/contracts/interfaces/IERC2535DiamondCut.sol",
								"@solidstate/contracts/interfaces/IERC2535DiamondCutInternal.sol",
								"@solidstate/contracts/interfaces/IERC2535DiamondLoupe.sol",
								"@solidstate/contracts/interfaces/IERC2535DiamondLoupeInternal.sol",
								"@solidstate/contracts/introspection/ERC165/base/ERC165Base.sol",
								"@solidstate/contracts/introspection/ERC165/base/ERC165BaseInternal.sol",
								"@solidstate/contracts/introspection/ERC165/base/ERC165BaseStorage.sol",
								"@solidstate/contracts/introspection/ERC165/base/IERC165Base.sol",
								"@solidstate/contracts/introspection/ERC165/base/IERC165BaseInternal.sol",
								"@solidstate/contracts/proxy/IProxy.sol",
								"@solidstate/contracts/proxy/Proxy.sol",
								"@solidstate/contracts/proxy/diamond/ISolidStateDiamond.sol",
								"@solidstate/contracts/proxy/diamond/SolidStateDiamond.sol",
								"@solidstate/contracts/proxy/diamond/base/DiamondBase.sol",
								"@solidstate/contracts/proxy/diamond/base/DiamondBaseStorage.sol",
								"@solidstate/contracts/proxy/diamond/base/IDiamondBase.sol",
								"@solidstate/contracts/proxy/diamond/fallback/DiamondFallback.sol",
								"@solidstate/contracts/proxy/diamond/fallback/IDiamondFallback.sol",
								"@solidstate/contracts/proxy/diamond/readable/DiamondReadable.sol",
								"@solidstate/contracts/proxy/diamond/readable/DiamondReadableInternal.sol",
								"@solidstate/contracts/proxy/diamond/readable/IDiamondReadable.sol",
								"@solidstate/contracts/proxy/diamond/readable/IDiamondReadableInternal.sol",
								"@solidstate/contracts/proxy/diamond/writable/DiamondWritable.sol",
								"@solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol",
								"@solidstate/contracts/proxy/diamond/writable/IDiamondWritable.sol",
								"@solidstate/contracts/proxy/diamond/writable/IDiamondWritableInternal.sol",
								"@solidstate/contracts/utils/AddressUtils.sol",
								"@solidstate/contracts/utils/UintUtils.sol",
								"Eip2535/EIp2535Diamond.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@solidstate/contracts/introspection/ERC165/base/ERC165BaseStorage.sol\":\"ERC165BaseStorage\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":900},\"remappings\":[]},\"sources\":{\"@solidstate/contracts/introspection/ERC165/base/ERC165BaseStorage.sol\":{\"keccak256\":\"0x90b7e081bb06e2ea5b2ccdde30d174d72ced4a3683c44a46f92b8e0c98eec52f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0b977c181a83790d3799f5ff29c81c9fc7461cb96f75375a279e8f60c1eba28c\",\"dweb:/ipfs/QmYTfZtWxkUnVn67hGtyySW2HkYA5hF5f2dMKcjqJHAuQS\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@solidstate/contracts/introspection/ERC165/base/IERC165Base.sol": {
				"IERC165Base": {
					"abi": [
						{
							"inputs": [],
							"name": "ERC165Base__InvalidInterfaceId",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"params": {
									"interfaceId": "interface id"
								},
								"returns": {
									"_0": "bool whether interface is supported"
								}
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"ERC165Base__InvalidInterfaceId\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"params\":{\"interfaceId\":\"interface id\"},\"returns\":{\"_0\":\"bool whether interface is supported\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"supportsInterface(bytes4)\":{\"notice\":\"query whether contract has registered support for given interface\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@solidstate/contracts/introspection/ERC165/base/IERC165Base.sol\":\"IERC165Base\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":900},\"remappings\":[]},\"sources\":{\"@solidstate/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0x05652eb09f7108b0ded5234ee56ccbdadd259e7801da27c484959b01bd0ef97e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://280cf3914c409430d3d3dfb36c82e3404cd056803eed8c6642eab59851d1596c\",\"dweb:/ipfs/QmZiv8jbJYEkic6mMdATRSCfRBfzQjDFfWY4xbSEnHjCvB\"]},\"@solidstate/contracts/interfaces/IERC165Internal.sol\":{\"keccak256\":\"0xbf2681def388e5bfda27e98c258bdd0fa547c233f2f7c44dd316d12252634fce\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://184a68e115babf0ed2b99e80e127950a8c44b6baef9c81a71cc9f48894f3bc43\",\"dweb:/ipfs/QmZCYdyk9PStUQYbuZZf2wNwkwpwFUfdp44YVx9SvLokwz\"]},\"@solidstate/contracts/introspection/ERC165/base/IERC165Base.sol\":{\"keccak256\":\"0xf651a6e6c267cb908a3c66592a5b4b2e5cc571cd44e129d8fd653fa05c025e0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ffd390fb94ced75514fd104601019396d85a35c6ff6df71873815b773e825b80\",\"dweb:/ipfs/QmWg5R8hS1ekuWm2q86ZQiNRzHy3sS9z9671udXLwA2TpA\"]},\"@solidstate/contracts/introspection/ERC165/base/IERC165BaseInternal.sol\":{\"keccak256\":\"0xb3eccf8d895692a5824e73d59aecfbe938dd39a57fee2cef43d5caeba0155266\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d8a039f793a32839f33098ccc3be5f226c83529236b7d387399884afea045360\",\"dweb:/ipfs/QmRD9UWYAF64KpaXjRUjTFjoW3Z71HnE8a4p4Sj7yWvioh\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"supportsInterface(bytes4)": {
								"notice": "query whether contract has registered support for given interface"
							}
						},
						"version": 1
					}
				}
			},
			"@solidstate/contracts/introspection/ERC165/base/IERC165BaseInternal.sol": {
				"IERC165BaseInternal": {
					"abi": [
						{
							"inputs": [],
							"name": "ERC165Base__InvalidInterfaceId",
							"type": "error"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"ERC165Base__InvalidInterfaceId\",\"type\":\"error\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@solidstate/contracts/introspection/ERC165/base/IERC165BaseInternal.sol\":\"IERC165BaseInternal\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":900},\"remappings\":[]},\"sources\":{\"@solidstate/contracts/interfaces/IERC165Internal.sol\":{\"keccak256\":\"0xbf2681def388e5bfda27e98c258bdd0fa547c233f2f7c44dd316d12252634fce\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://184a68e115babf0ed2b99e80e127950a8c44b6baef9c81a71cc9f48894f3bc43\",\"dweb:/ipfs/QmZCYdyk9PStUQYbuZZf2wNwkwpwFUfdp44YVx9SvLokwz\"]},\"@solidstate/contracts/introspection/ERC165/base/IERC165BaseInternal.sol\":{\"keccak256\":\"0xb3eccf8d895692a5824e73d59aecfbe938dd39a57fee2cef43d5caeba0155266\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d8a039f793a32839f33098ccc3be5f226c83529236b7d387399884afea045360\",\"dweb:/ipfs/QmRD9UWYAF64KpaXjRUjTFjoW3Z71HnE8a4p4Sj7yWvioh\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@solidstate/contracts/proxy/IProxy.sol": {
				"IProxy": {
					"abi": [
						{
							"inputs": [],
							"name": "Proxy__ImplementationIsNotContract",
							"type": "error"
						},
						{
							"stateMutability": "payable",
							"type": "fallback"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"Proxy__ImplementationIsNotContract\",\"type\":\"error\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@solidstate/contracts/proxy/IProxy.sol\":\"IProxy\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":900},\"remappings\":[]},\"sources\":{\"@solidstate/contracts/proxy/IProxy.sol\":{\"keccak256\":\"0x48d7f3fe133c1c8a9388eab6cda5060966af9bbd47a6d24a198e1a970fe9ee9f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b8f5e7dcea26eb4bfe4f8cb04704cf51ece7988409647e3387e483f65dd32954\",\"dweb:/ipfs/QmdKfjkDEXJGtDZ24tD4G9ro6AbMgJNN3Kwg9qGyPRRLQB\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@solidstate/contracts/proxy/Proxy.sol": {
				"Proxy": {
					"abi": [
						{
							"inputs": [],
							"name": "Proxy__ImplementationIsNotContract",
							"type": "error"
						},
						{
							"stateMutability": "payable",
							"type": "fallback"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"title": "Base proxy contract",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"Proxy__ImplementationIsNotContract\",\"type\":\"error\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"title\":\"Base proxy contract\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@solidstate/contracts/proxy/Proxy.sol\":\"Proxy\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":900},\"remappings\":[]},\"sources\":{\"@solidstate/contracts/proxy/IProxy.sol\":{\"keccak256\":\"0x48d7f3fe133c1c8a9388eab6cda5060966af9bbd47a6d24a198e1a970fe9ee9f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b8f5e7dcea26eb4bfe4f8cb04704cf51ece7988409647e3387e483f65dd32954\",\"dweb:/ipfs/QmdKfjkDEXJGtDZ24tD4G9ro6AbMgJNN3Kwg9qGyPRRLQB\"]},\"@solidstate/contracts/proxy/Proxy.sol\":{\"keccak256\":\"0x40b3f644b893b536b316dec6d45d5787490144aeab259494118b337814c38cd3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8705f59bfdbf4d98b4bc0bfc81cc68edaa6e23ec21c7eb099af4f84cc21ff6b5\",\"dweb:/ipfs/QmaNmduvuLkY7R4iuYE4ME96J13UuzZ4Mm6PjUD9Lc8hAa\"]},\"@solidstate/contracts/utils/AddressUtils.sol\":{\"keccak256\":\"0x73b8727aeb8d6a984dfb279cf64eb867cb0f5c42527b877f87dcbe1a37f3e433\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://21599c6853d978762bd6db8e70720ba7de6394bf6e1b66d32a936c074c160135\",\"dweb:/ipfs/QmekH1Vro4JrwfSpJUBVRofaCMsxAj8huDbujYBgGsHm63\"]},\"@solidstate/contracts/utils/UintUtils.sol\":{\"keccak256\":\"0x1dbd4a2d25d6d3511018319bb752e2fe72b934cbcf31b18e47a286229ce36f1f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e339115b07880370eef2b22f5529050fcf863a34bab9e8ac81be570ae7deb2be\",\"dweb:/ipfs/QmU9KsZQTMffVUnHUGHkf78Yg5orQF9TSk9n1uSgQnkak2\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@solidstate/contracts/proxy/diamond/ISolidStateDiamond.sol": {
				"ISolidStateDiamond": {
					"abi": [
						{
							"inputs": [],
							"name": "DiamondWritable__InvalidInitializationParameters",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "DiamondWritable__RemoveTargetNotZeroAddress",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "DiamondWritable__ReplaceTargetIsIdentical",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "DiamondWritable__SelectorAlreadyAdded",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "DiamondWritable__SelectorIsImmutable",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "DiamondWritable__SelectorNotFound",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "DiamondWritable__SelectorNotSpecified",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "DiamondWritable__TargetHasNoCode",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "Ownable__NotOwner",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "Ownable__NotTransitiveOwner",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "Proxy__ImplementationIsNotContract",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "SafeOwnable__NotNomineeOwner",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"components": [
										{
											"internalType": "address",
											"name": "target",
											"type": "address"
										},
										{
											"internalType": "enum IERC2535DiamondCutInternal.FacetCutAction",
											"name": "action",
											"type": "uint8"
										},
										{
											"internalType": "bytes4[]",
											"name": "selectors",
											"type": "bytes4[]"
										}
									],
									"indexed": false,
									"internalType": "struct IERC2535DiamondCutInternal.FacetCut[]",
									"name": "facetCuts",
									"type": "tuple[]"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "target",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "DiamondCut",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"stateMutability": "payable",
							"type": "fallback"
						},
						{
							"inputs": [],
							"name": "acceptOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"components": [
										{
											"internalType": "address",
											"name": "target",
											"type": "address"
										},
										{
											"internalType": "enum IERC2535DiamondCutInternal.FacetCutAction",
											"name": "action",
											"type": "uint8"
										},
										{
											"internalType": "bytes4[]",
											"name": "selectors",
											"type": "bytes4[]"
										}
									],
									"internalType": "struct IERC2535DiamondCutInternal.FacetCut[]",
									"name": "facetCuts",
									"type": "tuple[]"
								},
								{
									"internalType": "address",
									"name": "target",
									"type": "address"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "diamondCut",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "selector",
									"type": "bytes4"
								}
							],
							"name": "facetAddress",
							"outputs": [
								{
									"internalType": "address",
									"name": "facet",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "facetAddresses",
							"outputs": [
								{
									"internalType": "address[]",
									"name": "addresses",
									"type": "address[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "facet",
									"type": "address"
								}
							],
							"name": "facetFunctionSelectors",
							"outputs": [
								{
									"internalType": "bytes4[]",
									"name": "selectors",
									"type": "bytes4[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "facets",
							"outputs": [
								{
									"components": [
										{
											"internalType": "address",
											"name": "target",
											"type": "address"
										},
										{
											"internalType": "bytes4[]",
											"name": "selectors",
											"type": "bytes4[]"
										}
									],
									"internalType": "struct IERC2535DiamondLoupeInternal.Facet[]",
									"name": "diamondFacets",
									"type": "tuple[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getFallbackAddress",
							"outputs": [
								{
									"internalType": "address",
									"name": "fallbackAddress",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "nomineeOwner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "fallbackAddress",
									"type": "address"
								}
							],
							"name": "setFallbackAddress",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"stateMutability": "payable",
							"type": "receive"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"diamondCut((address,uint8,bytes4[])[],address,bytes)": {
								"params": {
									"data": "optional initialization function call data",
									"facetCuts": "array of structured Diamond facet update data",
									"target": "optional target of initialization delegatecall"
								}
							},
							"facetAddress(bytes4)": {
								"params": {
									"selector": "function selector to query"
								},
								"returns": {
									"facet": "facet address (zero address if not found)"
								}
							},
							"facetAddresses()": {
								"returns": {
									"addresses": "array of facet addresses"
								}
							},
							"facetFunctionSelectors(address)": {
								"params": {
									"facet": "address of facet to query"
								},
								"returns": {
									"selectors": "array of function selectors"
								}
							},
							"facets()": {
								"returns": {
									"diamondFacets": "array of structured facet data"
								}
							},
							"getFallbackAddress()": {
								"returns": {
									"fallbackAddress": "address of fallback implementation"
								}
							},
							"owner()": {
								"returns": {
									"_0": "contract owner"
								}
							},
							"setFallbackAddress(address)": {
								"params": {
									"fallbackAddress": "address of fallback implementation"
								}
							},
							"supportsInterface(bytes4)": {
								"params": {
									"interfaceId": "interface id"
								},
								"returns": {
									"_0": "bool whether interface is supported"
								}
							},
							"transferOwnership(address)": {
								"params": {
									"account": "address of new owner"
								}
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"acceptOwnership()": "79ba5097",
							"diamondCut((address,uint8,bytes4[])[],address,bytes)": "1f931c1c",
							"facetAddress(bytes4)": "cdffacc6",
							"facetAddresses()": "52ef6b2c",
							"facetFunctionSelectors(address)": "adfca15e",
							"facets()": "7a0ed627",
							"getFallbackAddress()": "2c408059",
							"nomineeOwner()": "8ab5150a",
							"owner()": "8da5cb5b",
							"setFallbackAddress(address)": "91423765",
							"supportsInterface(bytes4)": "01ffc9a7",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"DiamondWritable__InvalidInitializationParameters\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"DiamondWritable__RemoveTargetNotZeroAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"DiamondWritable__ReplaceTargetIsIdentical\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"DiamondWritable__SelectorAlreadyAdded\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"DiamondWritable__SelectorIsImmutable\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"DiamondWritable__SelectorNotFound\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"DiamondWritable__SelectorNotSpecified\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"DiamondWritable__TargetHasNoCode\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Ownable__NotOwner\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Ownable__NotTransitiveOwner\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Proxy__ImplementationIsNotContract\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"SafeOwnable__NotNomineeOwner\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"enum IERC2535DiamondCutInternal.FacetCutAction\",\"name\":\"action\",\"type\":\"uint8\"},{\"internalType\":\"bytes4[]\",\"name\":\"selectors\",\"type\":\"bytes4[]\"}],\"indexed\":false,\"internalType\":\"struct IERC2535DiamondCutInternal.FacetCut[]\",\"name\":\"facetCuts\",\"type\":\"tuple[]\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"DiamondCut\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[],\"name\":\"acceptOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"enum IERC2535DiamondCutInternal.FacetCutAction\",\"name\":\"action\",\"type\":\"uint8\"},{\"internalType\":\"bytes4[]\",\"name\":\"selectors\",\"type\":\"bytes4[]\"}],\"internalType\":\"struct IERC2535DiamondCutInternal.FacetCut[]\",\"name\":\"facetCuts\",\"type\":\"tuple[]\"},{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"diamondCut\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"selector\",\"type\":\"bytes4\"}],\"name\":\"facetAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"facet\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"facetAddresses\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"addresses\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"facet\",\"type\":\"address\"}],\"name\":\"facetFunctionSelectors\",\"outputs\":[{\"internalType\":\"bytes4[]\",\"name\":\"selectors\",\"type\":\"bytes4[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"facets\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"bytes4[]\",\"name\":\"selectors\",\"type\":\"bytes4[]\"}],\"internalType\":\"struct IERC2535DiamondLoupeInternal.Facet[]\",\"name\":\"diamondFacets\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getFallbackAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"fallbackAddress\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"nomineeOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"fallbackAddress\",\"type\":\"address\"}],\"name\":\"setFallbackAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"diamondCut((address,uint8,bytes4[])[],address,bytes)\":{\"params\":{\"data\":\"optional initialization function call data\",\"facetCuts\":\"array of structured Diamond facet update data\",\"target\":\"optional target of initialization delegatecall\"}},\"facetAddress(bytes4)\":{\"params\":{\"selector\":\"function selector to query\"},\"returns\":{\"facet\":\"facet address (zero address if not found)\"}},\"facetAddresses()\":{\"returns\":{\"addresses\":\"array of facet addresses\"}},\"facetFunctionSelectors(address)\":{\"params\":{\"facet\":\"address of facet to query\"},\"returns\":{\"selectors\":\"array of function selectors\"}},\"facets()\":{\"returns\":{\"diamondFacets\":\"array of structured facet data\"}},\"getFallbackAddress()\":{\"returns\":{\"fallbackAddress\":\"address of fallback implementation\"}},\"owner()\":{\"returns\":{\"_0\":\"contract owner\"}},\"setFallbackAddress(address)\":{\"params\":{\"fallbackAddress\":\"address of fallback implementation\"}},\"supportsInterface(bytes4)\":{\"params\":{\"interfaceId\":\"interface id\"},\"returns\":{\"_0\":\"bool whether interface is supported\"}},\"transferOwnership(address)\":{\"params\":{\"account\":\"address of new owner\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"acceptOwnership()\":{\"notice\":\"accept transfer of contract ownership\"},\"diamondCut((address,uint8,bytes4[])[],address,bytes)\":{\"notice\":\"update diamond facets and optionally execute arbitrary initialization function\"},\"facetAddress(bytes4)\":{\"notice\":\"get the address of the facet associated with given selector\"},\"facetAddresses()\":{\"notice\":\"get addresses of all facets used by diamond\"},\"facetFunctionSelectors(address)\":{\"notice\":\"get all selectors for given facet address\"},\"facets()\":{\"notice\":\"get all facets and their selectors\"},\"getFallbackAddress()\":{\"notice\":\"query the address of the fallback implementation\"},\"nomineeOwner()\":{\"notice\":\"get the nominated owner who has permission to call acceptOwnership\"},\"owner()\":{\"notice\":\"get the ERC173 contract owner\"},\"setFallbackAddress(address)\":{\"notice\":\"set the address of the fallback implementation\"},\"supportsInterface(bytes4)\":{\"notice\":\"query whether contract has registered support for given interface\"},\"transferOwnership(address)\":{\"notice\":\"transfer contract ownership to new account\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@solidstate/contracts/proxy/diamond/ISolidStateDiamond.sol\":\"ISolidStateDiamond\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":900},\"remappings\":[]},\"sources\":{\"@solidstate/contracts/access/ownable/IOwnable.sol\":{\"keccak256\":\"0x11d21dc54925e813f796ac5f09abbf2a561fd8796268941d9f0b39abd8a917c7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://70d3e007838a1ce8dacab8e6ff6cc2505d97b56ad44fb35cf1af5c9c0a2e9033\",\"dweb:/ipfs/QmT2zFUbiHfQeyhcCMAPTHe7Xk2s4ABAJKeCeAYQcDXGjd\"]},\"@solidstate/contracts/access/ownable/IOwnableInternal.sol\":{\"keccak256\":\"0x4cd447859a063c235aa56dcb017012f3c7ad6c54a399d6cdfef8045c78820f90\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fecba3866ae33c19144357b5aa3a43b8d9b84728a124443a87471409d90507ff\",\"dweb:/ipfs/QmZzkdVbNp4Zv7vHPxeBkoFP3od1sRVXVdWA4j6v9TTSAa\"]},\"@solidstate/contracts/access/ownable/ISafeOwnable.sol\":{\"keccak256\":\"0xf5f4f16883ab1df6352732885160b2b8c82d147f83b3a2c4ecf3d1f7bed13263\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://37a02bc456355b3878074aba4ab8b077ba4e0c8af7d2284a3aaef2dd57f3310c\",\"dweb:/ipfs/QmdSU9M7i7W9h26iFYuZzukmGWA464xgNEk4FAnS9ErRYP\"]},\"@solidstate/contracts/access/ownable/ISafeOwnableInternal.sol\":{\"keccak256\":\"0x371b9fed15ae2760b52eb9391e7ceefcbaaacc73b4cf2dcdd3c12e13db829cd6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d3244dbd25a5b5a6cf7740ddfb3ff9acd14cc54bde74750de20c629154567e39\",\"dweb:/ipfs/Qmd9d1CfMuPH7hsUjEur1P1cU8ZDxYKVvf4SHqHqj9K1dT\"]},\"@solidstate/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0x05652eb09f7108b0ded5234ee56ccbdadd259e7801da27c484959b01bd0ef97e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://280cf3914c409430d3d3dfb36c82e3404cd056803eed8c6642eab59851d1596c\",\"dweb:/ipfs/QmZiv8jbJYEkic6mMdATRSCfRBfzQjDFfWY4xbSEnHjCvB\"]},\"@solidstate/contracts/interfaces/IERC165Internal.sol\":{\"keccak256\":\"0xbf2681def388e5bfda27e98c258bdd0fa547c233f2f7c44dd316d12252634fce\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://184a68e115babf0ed2b99e80e127950a8c44b6baef9c81a71cc9f48894f3bc43\",\"dweb:/ipfs/QmZCYdyk9PStUQYbuZZf2wNwkwpwFUfdp44YVx9SvLokwz\"]},\"@solidstate/contracts/interfaces/IERC173.sol\":{\"keccak256\":\"0x1dcf85abc1fa1871fd31e6cf54ba539c6cb93342fae91466550940ad49ad08f7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://666470e1f5e26f114d35608a4cce2885f044cfb01fe5b11db0ed32edd5d68750\",\"dweb:/ipfs/Qma5iVmjnWAjkbxs2y62PYdLGCQAef2Q6KsbMUHaQp6bUV\"]},\"@solidstate/contracts/interfaces/IERC173Internal.sol\":{\"keccak256\":\"0x411c4c66a220f9eb25a29c2553fa9e6cac22a948a8645507d20fe5e7876dc8d1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://36c60312ab789ba0b1aa3d5129fffa911bee346937f6a5662cbd2c2e97b8ccec\",\"dweb:/ipfs/QmZJV8DgbcKs2Nws8gYQWuPdfEKFJSBj9BMfqmPxtNYF8z\"]},\"@solidstate/contracts/interfaces/IERC2535DiamondCut.sol\":{\"keccak256\":\"0xe2bc83d555c3b406a74ab0736d93da6435d197850a2504e0645dea7606055e4f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f4020f04ddf277326e647d25aeb6113bd1f65d62f02d6cabb479c646ceca5619\",\"dweb:/ipfs/QmU3snuS4Nu4FyxrpTm4Y63DtrqMQDDG2dYQ4wAu1i5npi\"]},\"@solidstate/contracts/interfaces/IERC2535DiamondCutInternal.sol\":{\"keccak256\":\"0xc59ed1d101485d637a4cc0b4717723a11cfae824734b169b310994e2ca8cf8ee\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bf0851d1129744467b98e5aff7a24a0c0cb6c78126b8caa7c312ce1bfb4ed83c\",\"dweb:/ipfs/QmdZKYETmRhk2ucWCmfBH16u1vN8WRsdAj7fam3topYj7L\"]},\"@solidstate/contracts/interfaces/IERC2535DiamondLoupe.sol\":{\"keccak256\":\"0x26c32fd85a01de39974f3ff9c025e6bdc6c87b9d3d4a33abe06bdace2711d3c3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1fd3d5df9bea6a5738c5f59042e61015cc4dd65c5bc2587399efa2e1ac1479ac\",\"dweb:/ipfs/QmXMwJ86oCpy6JysW4TzDHDv84TSaVtfyYH8s9TdMjYkdq\"]},\"@solidstate/contracts/interfaces/IERC2535DiamondLoupeInternal.sol\":{\"keccak256\":\"0xf53530cc00621f951debec10349ad6209173a4e37519f9329061c33178319c54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://944813649502424d16a37dff3ca41d9d7393458508576e43289e49b876414851\",\"dweb:/ipfs/QmXmdY3XqPQRC6iVEAa82jydXisTnAJAzwTc1z7YcZJ4dy\"]},\"@solidstate/contracts/proxy/IProxy.sol\":{\"keccak256\":\"0x48d7f3fe133c1c8a9388eab6cda5060966af9bbd47a6d24a198e1a970fe9ee9f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b8f5e7dcea26eb4bfe4f8cb04704cf51ece7988409647e3387e483f65dd32954\",\"dweb:/ipfs/QmdKfjkDEXJGtDZ24tD4G9ro6AbMgJNN3Kwg9qGyPRRLQB\"]},\"@solidstate/contracts/proxy/diamond/ISolidStateDiamond.sol\":{\"keccak256\":\"0xac7569f320832aa6ee5b9e5f6de17fea33009ba8dcdd56aad687487b8ae6fc92\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cfdebf2293222ceec328d09a317bd9bc76ba65f563055fba58a37369e4ce7979\",\"dweb:/ipfs/QmRK745EuARnBFEdMVk3LkZoXG2xSGd7LuNQZWUex9xhgK\"]},\"@solidstate/contracts/proxy/diamond/base/IDiamondBase.sol\":{\"keccak256\":\"0x00cad88b32dd925b1a6e5ad740811741f0f59fccba47d3e70b4488305a3fab78\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fa284f987966ddd735cd66d55d206f4a3ef161175df1f867e3930d60b62bba76\",\"dweb:/ipfs/QmSymhtgta9xnTg8xcHWMe6TzwnG5X2g7u9QnZZvVSzFrS\"]},\"@solidstate/contracts/proxy/diamond/fallback/IDiamondFallback.sol\":{\"keccak256\":\"0x299eb396c7716208795faf3822c304de0719acdc47b94c29b87b69a85505f84c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ae6cda79e1b66f7726f633f2367586e6d1b5571ae781b69a186a707586cd5e9f\",\"dweb:/ipfs/QmY3Jxm48NGi2pmhDcjA4QP3UX9nY9NHQx7goUGSguvSza\"]},\"@solidstate/contracts/proxy/diamond/readable/IDiamondReadable.sol\":{\"keccak256\":\"0xb2a4f085ace4eeb45e9e34096cc54d08d289a4e0cd2d570c8fef5424d4989925\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://dc63d50f2fa14338954819d4e054b204d4a217f13f5e100f114405ef7d27ddd8\",\"dweb:/ipfs/QmZL9VKfNwwfscekLyyTh6JJELDMusQgQkrWeP2whM8yKb\"]},\"@solidstate/contracts/proxy/diamond/readable/IDiamondReadableInternal.sol\":{\"keccak256\":\"0x04f52dd1ded535ec471866b39455e9879ddd5b5265adee8d4b32a06b4a718790\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a2ba06128f57b5bda17b3b1de7490880c21c2d68ada6b36dc3049398a6de8bff\",\"dweb:/ipfs/Qmf9QAjygj4mPHKuh8RjVGMwZDNVajcerqH7pPnQR3r8cN\"]},\"@solidstate/contracts/proxy/diamond/writable/IDiamondWritable.sol\":{\"keccak256\":\"0x5b93ab2500c62bf37ff8a81927356c1e9251ea6a52c8165abb2f9c770410f572\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f2ec9e41faee654c99591f8d6e5d437b2bbfc67c4b7a58bb7d6bb764f7a4cf3d\",\"dweb:/ipfs/QmNVrDk1T4wh1PkvhXQtazQpZuKRiuRifJTANnhMfaFjpn\"]},\"@solidstate/contracts/proxy/diamond/writable/IDiamondWritableInternal.sol\":{\"keccak256\":\"0x84808f6a171f5ff30b0bc2f02a0c327c16c123530aeb36a4f88c1b5322a5d159\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://579c4f9b2597c7cff29309846749596a962cb491557ee5865fe74759ca65f8f4\",\"dweb:/ipfs/QmZeuV14qUg2sEy3EdvbzpYjDzMjuV2CCpwCFZvyTd2v6B\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"acceptOwnership()": {
								"notice": "accept transfer of contract ownership"
							},
							"diamondCut((address,uint8,bytes4[])[],address,bytes)": {
								"notice": "update diamond facets and optionally execute arbitrary initialization function"
							},
							"facetAddress(bytes4)": {
								"notice": "get the address of the facet associated with given selector"
							},
							"facetAddresses()": {
								"notice": "get addresses of all facets used by diamond"
							},
							"facetFunctionSelectors(address)": {
								"notice": "get all selectors for given facet address"
							},
							"facets()": {
								"notice": "get all facets and their selectors"
							},
							"getFallbackAddress()": {
								"notice": "query the address of the fallback implementation"
							},
							"nomineeOwner()": {
								"notice": "get the nominated owner who has permission to call acceptOwnership"
							},
							"owner()": {
								"notice": "get the ERC173 contract owner"
							},
							"setFallbackAddress(address)": {
								"notice": "set the address of the fallback implementation"
							},
							"supportsInterface(bytes4)": {
								"notice": "query whether contract has registered support for given interface"
							},
							"transferOwnership(address)": {
								"notice": "transfer contract ownership to new account"
							}
						},
						"version": 1
					}
				}
			},
			"@solidstate/contracts/proxy/diamond/SolidStateDiamond.sol": {
				"SolidStateDiamond": {
					"abi": [
						{
							"inputs": [],
							"name": "DiamondWritable__InvalidInitializationParameters",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "DiamondWritable__RemoveTargetNotZeroAddress",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "DiamondWritable__ReplaceTargetIsIdentical",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "DiamondWritable__SelectorAlreadyAdded",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "DiamondWritable__SelectorIsImmutable",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "DiamondWritable__SelectorNotFound",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "DiamondWritable__SelectorNotSpecified",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "DiamondWritable__TargetHasNoCode",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "ERC165Base__InvalidInterfaceId",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "Ownable__NotOwner",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "Ownable__NotTransitiveOwner",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "Proxy__ImplementationIsNotContract",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "SafeOwnable__NotNomineeOwner",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"components": [
										{
											"internalType": "address",
											"name": "target",
											"type": "address"
										},
										{
											"internalType": "enum IERC2535DiamondCutInternal.FacetCutAction",
											"name": "action",
											"type": "uint8"
										},
										{
											"internalType": "bytes4[]",
											"name": "selectors",
											"type": "bytes4[]"
										}
									],
									"indexed": false,
									"internalType": "struct IERC2535DiamondCutInternal.FacetCut[]",
									"name": "facetCuts",
									"type": "tuple[]"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "target",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "DiamondCut",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"stateMutability": "payable",
							"type": "fallback"
						},
						{
							"inputs": [],
							"name": "acceptOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"components": [
										{
											"internalType": "address",
											"name": "target",
											"type": "address"
										},
										{
											"internalType": "enum IERC2535DiamondCutInternal.FacetCutAction",
											"name": "action",
											"type": "uint8"
										},
										{
											"internalType": "bytes4[]",
											"name": "selectors",
											"type": "bytes4[]"
										}
									],
									"internalType": "struct IERC2535DiamondCutInternal.FacetCut[]",
									"name": "facetCuts",
									"type": "tuple[]"
								},
								{
									"internalType": "address",
									"name": "target",
									"type": "address"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "diamondCut",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "selector",
									"type": "bytes4"
								}
							],
							"name": "facetAddress",
							"outputs": [
								{
									"internalType": "address",
									"name": "facet",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "facetAddresses",
							"outputs": [
								{
									"internalType": "address[]",
									"name": "addresses",
									"type": "address[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "facet",
									"type": "address"
								}
							],
							"name": "facetFunctionSelectors",
							"outputs": [
								{
									"internalType": "bytes4[]",
									"name": "selectors",
									"type": "bytes4[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "facets",
							"outputs": [
								{
									"components": [
										{
											"internalType": "address",
											"name": "target",
											"type": "address"
										},
										{
											"internalType": "bytes4[]",
											"name": "selectors",
											"type": "bytes4[]"
										}
									],
									"internalType": "struct IERC2535DiamondLoupeInternal.Facet[]",
									"name": "diamondFacets",
									"type": "tuple[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getFallbackAddress",
							"outputs": [
								{
									"internalType": "address",
									"name": "fallbackAddress",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "nomineeOwner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "fallbackAddress",
									"type": "address"
								}
							],
							"name": "setFallbackAddress",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"stateMutability": "payable",
							"type": "receive"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"diamondCut((address,uint8,bytes4[])[],address,bytes)": {
								"params": {
									"data": "optional initialization function call data",
									"facetCuts": "array of structured Diamond facet update data",
									"target": "optional target of initialization delegatecall"
								}
							},
							"facetAddress(bytes4)": {
								"params": {
									"selector": "function selector to query"
								},
								"returns": {
									"facet": "facet address (zero address if not found)"
								}
							},
							"facetAddresses()": {
								"returns": {
									"addresses": "array of facet addresses"
								}
							},
							"facetFunctionSelectors(address)": {
								"params": {
									"facet": "address of facet to query"
								},
								"returns": {
									"selectors": "array of function selectors"
								}
							},
							"facets()": {
								"returns": {
									"diamondFacets": "array of structured facet data"
								}
							},
							"getFallbackAddress()": {
								"returns": {
									"fallbackAddress": "address of fallback implementation"
								}
							},
							"owner()": {
								"returns": {
									"_0": "contract owner"
								}
							},
							"setFallbackAddress(address)": {
								"params": {
									"fallbackAddress": "address of fallback implementation"
								}
							},
							"supportsInterface(bytes4)": {
								"params": {
									"interfaceId": "interface id"
								},
								"returns": {
									"_0": "bool whether interface is supported"
								}
							},
							"transferOwnership(address)": {
								"params": {
									"account": "address of new owner"
								}
							}
						},
						"title": "SolidState \"Diamond\" proxy reference implementation",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"acceptOwnership()": "79ba5097",
							"diamondCut((address,uint8,bytes4[])[],address,bytes)": "1f931c1c",
							"facetAddress(bytes4)": "cdffacc6",
							"facetAddresses()": "52ef6b2c",
							"facetFunctionSelectors(address)": "adfca15e",
							"facets()": "7a0ed627",
							"getFallbackAddress()": "2c408059",
							"nomineeOwner()": "8ab5150a",
							"owner()": "8da5cb5b",
							"setFallbackAddress(address)": "91423765",
							"supportsInterface(bytes4)": "01ffc9a7",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"DiamondWritable__InvalidInitializationParameters\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"DiamondWritable__RemoveTargetNotZeroAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"DiamondWritable__ReplaceTargetIsIdentical\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"DiamondWritable__SelectorAlreadyAdded\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"DiamondWritable__SelectorIsImmutable\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"DiamondWritable__SelectorNotFound\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"DiamondWritable__SelectorNotSpecified\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"DiamondWritable__TargetHasNoCode\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ERC165Base__InvalidInterfaceId\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Ownable__NotOwner\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Ownable__NotTransitiveOwner\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Proxy__ImplementationIsNotContract\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"SafeOwnable__NotNomineeOwner\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"enum IERC2535DiamondCutInternal.FacetCutAction\",\"name\":\"action\",\"type\":\"uint8\"},{\"internalType\":\"bytes4[]\",\"name\":\"selectors\",\"type\":\"bytes4[]\"}],\"indexed\":false,\"internalType\":\"struct IERC2535DiamondCutInternal.FacetCut[]\",\"name\":\"facetCuts\",\"type\":\"tuple[]\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"DiamondCut\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[],\"name\":\"acceptOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"enum IERC2535DiamondCutInternal.FacetCutAction\",\"name\":\"action\",\"type\":\"uint8\"},{\"internalType\":\"bytes4[]\",\"name\":\"selectors\",\"type\":\"bytes4[]\"}],\"internalType\":\"struct IERC2535DiamondCutInternal.FacetCut[]\",\"name\":\"facetCuts\",\"type\":\"tuple[]\"},{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"diamondCut\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"selector\",\"type\":\"bytes4\"}],\"name\":\"facetAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"facet\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"facetAddresses\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"addresses\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"facet\",\"type\":\"address\"}],\"name\":\"facetFunctionSelectors\",\"outputs\":[{\"internalType\":\"bytes4[]\",\"name\":\"selectors\",\"type\":\"bytes4[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"facets\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"bytes4[]\",\"name\":\"selectors\",\"type\":\"bytes4[]\"}],\"internalType\":\"struct IERC2535DiamondLoupeInternal.Facet[]\",\"name\":\"diamondFacets\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getFallbackAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"fallbackAddress\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"nomineeOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"fallbackAddress\",\"type\":\"address\"}],\"name\":\"setFallbackAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"diamondCut((address,uint8,bytes4[])[],address,bytes)\":{\"params\":{\"data\":\"optional initialization function call data\",\"facetCuts\":\"array of structured Diamond facet update data\",\"target\":\"optional target of initialization delegatecall\"}},\"facetAddress(bytes4)\":{\"params\":{\"selector\":\"function selector to query\"},\"returns\":{\"facet\":\"facet address (zero address if not found)\"}},\"facetAddresses()\":{\"returns\":{\"addresses\":\"array of facet addresses\"}},\"facetFunctionSelectors(address)\":{\"params\":{\"facet\":\"address of facet to query\"},\"returns\":{\"selectors\":\"array of function selectors\"}},\"facets()\":{\"returns\":{\"diamondFacets\":\"array of structured facet data\"}},\"getFallbackAddress()\":{\"returns\":{\"fallbackAddress\":\"address of fallback implementation\"}},\"owner()\":{\"returns\":{\"_0\":\"contract owner\"}},\"setFallbackAddress(address)\":{\"params\":{\"fallbackAddress\":\"address of fallback implementation\"}},\"supportsInterface(bytes4)\":{\"params\":{\"interfaceId\":\"interface id\"},\"returns\":{\"_0\":\"bool whether interface is supported\"}},\"transferOwnership(address)\":{\"params\":{\"account\":\"address of new owner\"}}},\"title\":\"SolidState \\\"Diamond\\\" proxy reference implementation\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"acceptOwnership()\":{\"notice\":\"accept transfer of contract ownership\"},\"diamondCut((address,uint8,bytes4[])[],address,bytes)\":{\"notice\":\"update diamond facets and optionally execute arbitrary initialization function\"},\"facetAddress(bytes4)\":{\"notice\":\"get the address of the facet associated with given selector\"},\"facetAddresses()\":{\"notice\":\"get addresses of all facets used by diamond\"},\"facetFunctionSelectors(address)\":{\"notice\":\"get all selectors for given facet address\"},\"facets()\":{\"notice\":\"get all facets and their selectors\"},\"getFallbackAddress()\":{\"notice\":\"query the address of the fallback implementation\"},\"nomineeOwner()\":{\"notice\":\"get the nominated owner who has permission to call acceptOwnership\"},\"owner()\":{\"notice\":\"get the ERC173 contract owner\"},\"setFallbackAddress(address)\":{\"notice\":\"set the address of the fallback implementation\"},\"supportsInterface(bytes4)\":{\"notice\":\"query whether contract has registered support for given interface\"},\"transferOwnership(address)\":{\"notice\":\"transfer contract ownership to new account\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@solidstate/contracts/proxy/diamond/SolidStateDiamond.sol\":\"SolidStateDiamond\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":900},\"remappings\":[]},\"sources\":{\"@solidstate/contracts/access/ownable/IOwnable.sol\":{\"keccak256\":\"0x11d21dc54925e813f796ac5f09abbf2a561fd8796268941d9f0b39abd8a917c7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://70d3e007838a1ce8dacab8e6ff6cc2505d97b56ad44fb35cf1af5c9c0a2e9033\",\"dweb:/ipfs/QmT2zFUbiHfQeyhcCMAPTHe7Xk2s4ABAJKeCeAYQcDXGjd\"]},\"@solidstate/contracts/access/ownable/IOwnableInternal.sol\":{\"keccak256\":\"0x4cd447859a063c235aa56dcb017012f3c7ad6c54a399d6cdfef8045c78820f90\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fecba3866ae33c19144357b5aa3a43b8d9b84728a124443a87471409d90507ff\",\"dweb:/ipfs/QmZzkdVbNp4Zv7vHPxeBkoFP3od1sRVXVdWA4j6v9TTSAa\"]},\"@solidstate/contracts/access/ownable/ISafeOwnable.sol\":{\"keccak256\":\"0xf5f4f16883ab1df6352732885160b2b8c82d147f83b3a2c4ecf3d1f7bed13263\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://37a02bc456355b3878074aba4ab8b077ba4e0c8af7d2284a3aaef2dd57f3310c\",\"dweb:/ipfs/QmdSU9M7i7W9h26iFYuZzukmGWA464xgNEk4FAnS9ErRYP\"]},\"@solidstate/contracts/access/ownable/ISafeOwnableInternal.sol\":{\"keccak256\":\"0x371b9fed15ae2760b52eb9391e7ceefcbaaacc73b4cf2dcdd3c12e13db829cd6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d3244dbd25a5b5a6cf7740ddfb3ff9acd14cc54bde74750de20c629154567e39\",\"dweb:/ipfs/Qmd9d1CfMuPH7hsUjEur1P1cU8ZDxYKVvf4SHqHqj9K1dT\"]},\"@solidstate/contracts/access/ownable/Ownable.sol\":{\"keccak256\":\"0x6863983e4048a1c0f65c048af9b9381b0c02c230c763d8136bb16abd1c972e68\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://72a94ccda4287bd598330a663125bba83dde9f4133a13190c922cfb24ac600c7\",\"dweb:/ipfs/QmVcsaFFHBYB4e69tTYqBdCfwWszKRuxrRy1tDrHUh13t5\"]},\"@solidstate/contracts/access/ownable/OwnableInternal.sol\":{\"keccak256\":\"0x68e9c133cdc3a3cdbed72c63f682d428e4533f2c8095d57410653430f69f225c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2f24f167ce2396a880db1b8c8745dbd98d48ee29583784ccb8126547ac81f042\",\"dweb:/ipfs/QmW5r1s5QoV2ENh3Qx2WRhcsbyD9cKC1gBbk2JMFM4YbcR\"]},\"@solidstate/contracts/access/ownable/OwnableStorage.sol\":{\"keccak256\":\"0xdd830eb11d93432c1219d28f1758d1e1e260e09f64152f34e0cab7861a567acb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4beb423fff82203ce963d2fa005b9a26e489dc22efc183e6c68d912cb65ee291\",\"dweb:/ipfs/QmakghQzG8UJ2uwkR8peYxXB7KCMKGrjB9c5r9JSyoB6kw\"]},\"@solidstate/contracts/access/ownable/SafeOwnable.sol\":{\"keccak256\":\"0x1ccd51daadb5633dd0d6bcdf333f290637844560f081e442ba750ab48b64db13\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b593dc55bea11dd27c360026e8241c2de30c61967342418e11cbded07e103db4\",\"dweb:/ipfs/Qmc2gaaRB6VnyHtJw7yQJdZaCKEQQUyKBGdm8hxuVunNeh\"]},\"@solidstate/contracts/access/ownable/SafeOwnableInternal.sol\":{\"keccak256\":\"0x35b21e71d1bf6bfd1d7b224bd972ea699a0c94e44c4d00ba29a1dd712f5e5e12\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ceaa2c8f431ef3b729eab5e91ab8f62bf0f370083a1d71f67b17aeb8d7c9af63\",\"dweb:/ipfs/QmZK6GToi8YBGg9XU6Lcf2h5EfNQUPgBSt1rPchw8cFgQA\"]},\"@solidstate/contracts/access/ownable/SafeOwnableStorage.sol\":{\"keccak256\":\"0x435612f25379c285743b73e6bd8e22653230ee619d82007d9b2c8860a5de88d7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://57017de792c526a2cd6c4308d21fa08ec362c259e83afeb947b5dcca46c2a6f8\",\"dweb:/ipfs/Qmcqj6hSQbWvyJzGMMi8EJNnU5AfBTJf6gLjYYS4RkaEqX\"]},\"@solidstate/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0x05652eb09f7108b0ded5234ee56ccbdadd259e7801da27c484959b01bd0ef97e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://280cf3914c409430d3d3dfb36c82e3404cd056803eed8c6642eab59851d1596c\",\"dweb:/ipfs/QmZiv8jbJYEkic6mMdATRSCfRBfzQjDFfWY4xbSEnHjCvB\"]},\"@solidstate/contracts/interfaces/IERC165Internal.sol\":{\"keccak256\":\"0xbf2681def388e5bfda27e98c258bdd0fa547c233f2f7c44dd316d12252634fce\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://184a68e115babf0ed2b99e80e127950a8c44b6baef9c81a71cc9f48894f3bc43\",\"dweb:/ipfs/QmZCYdyk9PStUQYbuZZf2wNwkwpwFUfdp44YVx9SvLokwz\"]},\"@solidstate/contracts/interfaces/IERC173.sol\":{\"keccak256\":\"0x1dcf85abc1fa1871fd31e6cf54ba539c6cb93342fae91466550940ad49ad08f7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://666470e1f5e26f114d35608a4cce2885f044cfb01fe5b11db0ed32edd5d68750\",\"dweb:/ipfs/Qma5iVmjnWAjkbxs2y62PYdLGCQAef2Q6KsbMUHaQp6bUV\"]},\"@solidstate/contracts/interfaces/IERC173Internal.sol\":{\"keccak256\":\"0x411c4c66a220f9eb25a29c2553fa9e6cac22a948a8645507d20fe5e7876dc8d1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://36c60312ab789ba0b1aa3d5129fffa911bee346937f6a5662cbd2c2e97b8ccec\",\"dweb:/ipfs/QmZJV8DgbcKs2Nws8gYQWuPdfEKFJSBj9BMfqmPxtNYF8z\"]},\"@solidstate/contracts/interfaces/IERC2535DiamondCut.sol\":{\"keccak256\":\"0xe2bc83d555c3b406a74ab0736d93da6435d197850a2504e0645dea7606055e4f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f4020f04ddf277326e647d25aeb6113bd1f65d62f02d6cabb479c646ceca5619\",\"dweb:/ipfs/QmU3snuS4Nu4FyxrpTm4Y63DtrqMQDDG2dYQ4wAu1i5npi\"]},\"@solidstate/contracts/interfaces/IERC2535DiamondCutInternal.sol\":{\"keccak256\":\"0xc59ed1d101485d637a4cc0b4717723a11cfae824734b169b310994e2ca8cf8ee\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bf0851d1129744467b98e5aff7a24a0c0cb6c78126b8caa7c312ce1bfb4ed83c\",\"dweb:/ipfs/QmdZKYETmRhk2ucWCmfBH16u1vN8WRsdAj7fam3topYj7L\"]},\"@solidstate/contracts/interfaces/IERC2535DiamondLoupe.sol\":{\"keccak256\":\"0x26c32fd85a01de39974f3ff9c025e6bdc6c87b9d3d4a33abe06bdace2711d3c3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1fd3d5df9bea6a5738c5f59042e61015cc4dd65c5bc2587399efa2e1ac1479ac\",\"dweb:/ipfs/QmXMwJ86oCpy6JysW4TzDHDv84TSaVtfyYH8s9TdMjYkdq\"]},\"@solidstate/contracts/interfaces/IERC2535DiamondLoupeInternal.sol\":{\"keccak256\":\"0xf53530cc00621f951debec10349ad6209173a4e37519f9329061c33178319c54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://944813649502424d16a37dff3ca41d9d7393458508576e43289e49b876414851\",\"dweb:/ipfs/QmXmdY3XqPQRC6iVEAa82jydXisTnAJAzwTc1z7YcZJ4dy\"]},\"@solidstate/contracts/introspection/ERC165/base/ERC165Base.sol\":{\"keccak256\":\"0x4a8e6e515570725ae96e6e21c7144f27fdc101bfcd19f74c912474615f007e16\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://702de9b29334e76ac73e98be1555599968f16d29d9c6d0a2d8bd3ed1cf8d3454\",\"dweb:/ipfs/Qmbrbb1NoKHu84igojGCUaDarNGE1CpsfmmxW2EtAoUqUP\"]},\"@solidstate/contracts/introspection/ERC165/base/ERC165BaseInternal.sol\":{\"keccak256\":\"0xd2900ce01bce0dde2a848949b189c0345a4155900bf4c6401c0317ad41ee8740\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2f0f1ae8d514b6575d0a08f63b4264aeeb4ee8555774c4ebdbc4a40e89789ef8\",\"dweb:/ipfs/QmZ8DvFtDv1DFcb3gtXa33Ygzkr3ppBELfGLyx8nyJk6TP\"]},\"@solidstate/contracts/introspection/ERC165/base/ERC165BaseStorage.sol\":{\"keccak256\":\"0x90b7e081bb06e2ea5b2ccdde30d174d72ced4a3683c44a46f92b8e0c98eec52f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0b977c181a83790d3799f5ff29c81c9fc7461cb96f75375a279e8f60c1eba28c\",\"dweb:/ipfs/QmYTfZtWxkUnVn67hGtyySW2HkYA5hF5f2dMKcjqJHAuQS\"]},\"@solidstate/contracts/introspection/ERC165/base/IERC165Base.sol\":{\"keccak256\":\"0xf651a6e6c267cb908a3c66592a5b4b2e5cc571cd44e129d8fd653fa05c025e0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ffd390fb94ced75514fd104601019396d85a35c6ff6df71873815b773e825b80\",\"dweb:/ipfs/QmWg5R8hS1ekuWm2q86ZQiNRzHy3sS9z9671udXLwA2TpA\"]},\"@solidstate/contracts/introspection/ERC165/base/IERC165BaseInternal.sol\":{\"keccak256\":\"0xb3eccf8d895692a5824e73d59aecfbe938dd39a57fee2cef43d5caeba0155266\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d8a039f793a32839f33098ccc3be5f226c83529236b7d387399884afea045360\",\"dweb:/ipfs/QmRD9UWYAF64KpaXjRUjTFjoW3Z71HnE8a4p4Sj7yWvioh\"]},\"@solidstate/contracts/proxy/IProxy.sol\":{\"keccak256\":\"0x48d7f3fe133c1c8a9388eab6cda5060966af9bbd47a6d24a198e1a970fe9ee9f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b8f5e7dcea26eb4bfe4f8cb04704cf51ece7988409647e3387e483f65dd32954\",\"dweb:/ipfs/QmdKfjkDEXJGtDZ24tD4G9ro6AbMgJNN3Kwg9qGyPRRLQB\"]},\"@solidstate/contracts/proxy/Proxy.sol\":{\"keccak256\":\"0x40b3f644b893b536b316dec6d45d5787490144aeab259494118b337814c38cd3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8705f59bfdbf4d98b4bc0bfc81cc68edaa6e23ec21c7eb099af4f84cc21ff6b5\",\"dweb:/ipfs/QmaNmduvuLkY7R4iuYE4ME96J13UuzZ4Mm6PjUD9Lc8hAa\"]},\"@solidstate/contracts/proxy/diamond/ISolidStateDiamond.sol\":{\"keccak256\":\"0xac7569f320832aa6ee5b9e5f6de17fea33009ba8dcdd56aad687487b8ae6fc92\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cfdebf2293222ceec328d09a317bd9bc76ba65f563055fba58a37369e4ce7979\",\"dweb:/ipfs/QmRK745EuARnBFEdMVk3LkZoXG2xSGd7LuNQZWUex9xhgK\"]},\"@solidstate/contracts/proxy/diamond/SolidStateDiamond.sol\":{\"keccak256\":\"0xb56c502a4984ed40fefe7a0bf7966e95154ee701b9603aa9d9df9265e2c588c2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://282436fc2893490322b49329388dc6c7495ff1d125e7ffd86fb2d7268a9231ba\",\"dweb:/ipfs/QmXU7MVwzUmewPPPxQd96e3hx8ufBwZXX1WKMhrUPfBZKF\"]},\"@solidstate/contracts/proxy/diamond/base/DiamondBase.sol\":{\"keccak256\":\"0x0590fb00acfbf4eeec1957df8196cac63de89566a26ce0a80a9f78f919fae74c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://19ec1dfec4092f11029a37fabb50ba3385a94cd39e5044e3377074b6c5f9b709\",\"dweb:/ipfs/QmZbChb94a7S2W9ZAgFpesW4E4YEYeWg1wiV7VaJJGgWMK\"]},\"@solidstate/contracts/proxy/diamond/base/DiamondBaseStorage.sol\":{\"keccak256\":\"0x536f0e1d66226166d145aa150db4f493d73d0b118d24c327d167574d9130b114\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://dfb0c70f473fdfe921b2d0103e8fba7e1d452c9ce792a2a6a901f2efba65e56a\",\"dweb:/ipfs/QmacmpDGdPHE7o7G4pDp46cudBXHniswBerj6dyVnsSajs\"]},\"@solidstate/contracts/proxy/diamond/base/IDiamondBase.sol\":{\"keccak256\":\"0x00cad88b32dd925b1a6e5ad740811741f0f59fccba47d3e70b4488305a3fab78\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fa284f987966ddd735cd66d55d206f4a3ef161175df1f867e3930d60b62bba76\",\"dweb:/ipfs/QmSymhtgta9xnTg8xcHWMe6TzwnG5X2g7u9QnZZvVSzFrS\"]},\"@solidstate/contracts/proxy/diamond/fallback/DiamondFallback.sol\":{\"keccak256\":\"0x4924f8b6669fb144d56649adb0a52712b01bc7b442cc0feea1be07a24edf9ac3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f08a89af5dd515d10fd13f7610325b58f8e50139a5531d9c95aabc5acb1990f3\",\"dweb:/ipfs/Qme9yoWNfsPZTiJjCKbmuuX3GiHYw9vMvLbcyUY2zbRMzK\"]},\"@solidstate/contracts/proxy/diamond/fallback/IDiamondFallback.sol\":{\"keccak256\":\"0x299eb396c7716208795faf3822c304de0719acdc47b94c29b87b69a85505f84c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ae6cda79e1b66f7726f633f2367586e6d1b5571ae781b69a186a707586cd5e9f\",\"dweb:/ipfs/QmY3Jxm48NGi2pmhDcjA4QP3UX9nY9NHQx7goUGSguvSza\"]},\"@solidstate/contracts/proxy/diamond/readable/DiamondReadable.sol\":{\"keccak256\":\"0x35a67bc44b71b5ee37a2c871ce02fa5b9ebac0936ba0a1aa053b12c035f7f890\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9c2958090fd5c64c1725a5a7fba73765006c4e81ce3a39af192dfe539fe3d94c\",\"dweb:/ipfs/QmX3kW8Nkh33ahwZ455uaMJBNeV7yQa77ovNqjC3rwTDcB\"]},\"@solidstate/contracts/proxy/diamond/readable/DiamondReadableInternal.sol\":{\"keccak256\":\"0x620e6c505fb6dd854dd4cb11fe9537274019e65de35edf91cfccfcd42bcce30d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b8b44f06039b3ad76d5a1f27155b329e2e6a8073d14eb33b90eee33867f35492\",\"dweb:/ipfs/QmZkLeNhhUabW36QJFQTHSKrJkmLsgNeJSzJZHBWXXthiW\"]},\"@solidstate/contracts/proxy/diamond/readable/IDiamondReadable.sol\":{\"keccak256\":\"0xb2a4f085ace4eeb45e9e34096cc54d08d289a4e0cd2d570c8fef5424d4989925\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://dc63d50f2fa14338954819d4e054b204d4a217f13f5e100f114405ef7d27ddd8\",\"dweb:/ipfs/QmZL9VKfNwwfscekLyyTh6JJELDMusQgQkrWeP2whM8yKb\"]},\"@solidstate/contracts/proxy/diamond/readable/IDiamondReadableInternal.sol\":{\"keccak256\":\"0x04f52dd1ded535ec471866b39455e9879ddd5b5265adee8d4b32a06b4a718790\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a2ba06128f57b5bda17b3b1de7490880c21c2d68ada6b36dc3049398a6de8bff\",\"dweb:/ipfs/Qmf9QAjygj4mPHKuh8RjVGMwZDNVajcerqH7pPnQR3r8cN\"]},\"@solidstate/contracts/proxy/diamond/writable/DiamondWritable.sol\":{\"keccak256\":\"0x6da3dbd19422c4a434e50bde10db43f8baa291cf5086604399adab39f0796f05\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://06b79d4eb3c85879e1412301745d2abcc25344b5884d31e20bddcbcee23e5041\",\"dweb:/ipfs/Qme6ScmPGQ3PouDnXGis4Lj6s2EDQGimCdVWGv1gzTV2BE\"]},\"@solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":{\"keccak256\":\"0xbc71dc13eb588d46132745d218819aae37217d1476c4f9e626ef8ccdc2205be7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7cfb8919df76c0d37a061bfdc4ab11c08a61ab7250c7054cb02d48df037f46c3\",\"dweb:/ipfs/QmTpR2g5TcSNHjYFsUEeYcqohvrNPoEFhBfYVsLaMmPHqe\"]},\"@solidstate/contracts/proxy/diamond/writable/IDiamondWritable.sol\":{\"keccak256\":\"0x5b93ab2500c62bf37ff8a81927356c1e9251ea6a52c8165abb2f9c770410f572\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f2ec9e41faee654c99591f8d6e5d437b2bbfc67c4b7a58bb7d6bb764f7a4cf3d\",\"dweb:/ipfs/QmNVrDk1T4wh1PkvhXQtazQpZuKRiuRifJTANnhMfaFjpn\"]},\"@solidstate/contracts/proxy/diamond/writable/IDiamondWritableInternal.sol\":{\"keccak256\":\"0x84808f6a171f5ff30b0bc2f02a0c327c16c123530aeb36a4f88c1b5322a5d159\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://579c4f9b2597c7cff29309846749596a962cb491557ee5865fe74759ca65f8f4\",\"dweb:/ipfs/QmZeuV14qUg2sEy3EdvbzpYjDzMjuV2CCpwCFZvyTd2v6B\"]},\"@solidstate/contracts/utils/AddressUtils.sol\":{\"keccak256\":\"0x73b8727aeb8d6a984dfb279cf64eb867cb0f5c42527b877f87dcbe1a37f3e433\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://21599c6853d978762bd6db8e70720ba7de6394bf6e1b66d32a936c074c160135\",\"dweb:/ipfs/QmekH1Vro4JrwfSpJUBVRofaCMsxAj8huDbujYBgGsHm63\"]},\"@solidstate/contracts/utils/UintUtils.sol\":{\"keccak256\":\"0x1dbd4a2d25d6d3511018319bb752e2fe72b934cbcf31b18e47a286229ce36f1f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e339115b07880370eef2b22f5529050fcf863a34bab9e8ac81be570ae7deb2be\",\"dweb:/ipfs/QmU9KsZQTMffVUnHUGHkf78Yg5orQF9TSk9n1uSgQnkak2\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"acceptOwnership()": {
								"notice": "accept transfer of contract ownership"
							},
							"diamondCut((address,uint8,bytes4[])[],address,bytes)": {
								"notice": "update diamond facets and optionally execute arbitrary initialization function"
							},
							"facetAddress(bytes4)": {
								"notice": "get the address of the facet associated with given selector"
							},
							"facetAddresses()": {
								"notice": "get addresses of all facets used by diamond"
							},
							"facetFunctionSelectors(address)": {
								"notice": "get all selectors for given facet address"
							},
							"facets()": {
								"notice": "get all facets and their selectors"
							},
							"getFallbackAddress()": {
								"notice": "query the address of the fallback implementation"
							},
							"nomineeOwner()": {
								"notice": "get the nominated owner who has permission to call acceptOwnership"
							},
							"owner()": {
								"notice": "get the ERC173 contract owner"
							},
							"setFallbackAddress(address)": {
								"notice": "set the address of the fallback implementation"
							},
							"supportsInterface(bytes4)": {
								"notice": "query whether contract has registered support for given interface"
							},
							"transferOwnership(address)": {
								"notice": "transfer contract ownership to new account"
							}
						},
						"version": 1
					}
				}
			},
			"@solidstate/contracts/proxy/diamond/base/DiamondBase.sol": {
				"DiamondBase": {
					"abi": [
						{
							"inputs": [],
							"name": "Proxy__ImplementationIsNotContract",
							"type": "error"
						},
						{
							"stateMutability": "payable",
							"type": "fallback"
						}
					],
					"devdoc": {
						"details": "see https://eips.ethereum.org/EIPS/eip-2535note that for EIP-2535 compliance this base contract must also include the DiamondReadable functions (either within the same deployment or by proxy)",
						"kind": "dev",
						"methods": {},
						"title": "EIP-2535 \"Diamond\" proxy base contract",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"Proxy__ImplementationIsNotContract\",\"type\":\"error\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"}],\"devdoc\":{\"details\":\"see https://eips.ethereum.org/EIPS/eip-2535note that for EIP-2535 compliance this base contract must also include the DiamondReadable functions (either within the same deployment or by proxy)\",\"kind\":\"dev\",\"methods\":{},\"title\":\"EIP-2535 \\\"Diamond\\\" proxy base contract\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@solidstate/contracts/proxy/diamond/base/DiamondBase.sol\":\"DiamondBase\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":900},\"remappings\":[]},\"sources\":{\"@solidstate/contracts/proxy/IProxy.sol\":{\"keccak256\":\"0x48d7f3fe133c1c8a9388eab6cda5060966af9bbd47a6d24a198e1a970fe9ee9f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b8f5e7dcea26eb4bfe4f8cb04704cf51ece7988409647e3387e483f65dd32954\",\"dweb:/ipfs/QmdKfjkDEXJGtDZ24tD4G9ro6AbMgJNN3Kwg9qGyPRRLQB\"]},\"@solidstate/contracts/proxy/Proxy.sol\":{\"keccak256\":\"0x40b3f644b893b536b316dec6d45d5787490144aeab259494118b337814c38cd3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8705f59bfdbf4d98b4bc0bfc81cc68edaa6e23ec21c7eb099af4f84cc21ff6b5\",\"dweb:/ipfs/QmaNmduvuLkY7R4iuYE4ME96J13UuzZ4Mm6PjUD9Lc8hAa\"]},\"@solidstate/contracts/proxy/diamond/base/DiamondBase.sol\":{\"keccak256\":\"0x0590fb00acfbf4eeec1957df8196cac63de89566a26ce0a80a9f78f919fae74c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://19ec1dfec4092f11029a37fabb50ba3385a94cd39e5044e3377074b6c5f9b709\",\"dweb:/ipfs/QmZbChb94a7S2W9ZAgFpesW4E4YEYeWg1wiV7VaJJGgWMK\"]},\"@solidstate/contracts/proxy/diamond/base/DiamondBaseStorage.sol\":{\"keccak256\":\"0x536f0e1d66226166d145aa150db4f493d73d0b118d24c327d167574d9130b114\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://dfb0c70f473fdfe921b2d0103e8fba7e1d452c9ce792a2a6a901f2efba65e56a\",\"dweb:/ipfs/QmacmpDGdPHE7o7G4pDp46cudBXHniswBerj6dyVnsSajs\"]},\"@solidstate/contracts/proxy/diamond/base/IDiamondBase.sol\":{\"keccak256\":\"0x00cad88b32dd925b1a6e5ad740811741f0f59fccba47d3e70b4488305a3fab78\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fa284f987966ddd735cd66d55d206f4a3ef161175df1f867e3930d60b62bba76\",\"dweb:/ipfs/QmSymhtgta9xnTg8xcHWMe6TzwnG5X2g7u9QnZZvVSzFrS\"]},\"@solidstate/contracts/utils/AddressUtils.sol\":{\"keccak256\":\"0x73b8727aeb8d6a984dfb279cf64eb867cb0f5c42527b877f87dcbe1a37f3e433\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://21599c6853d978762bd6db8e70720ba7de6394bf6e1b66d32a936c074c160135\",\"dweb:/ipfs/QmekH1Vro4JrwfSpJUBVRofaCMsxAj8huDbujYBgGsHm63\"]},\"@solidstate/contracts/utils/UintUtils.sol\":{\"keccak256\":\"0x1dbd4a2d25d6d3511018319bb752e2fe72b934cbcf31b18e47a286229ce36f1f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e339115b07880370eef2b22f5529050fcf863a34bab9e8ac81be570ae7deb2be\",\"dweb:/ipfs/QmU9KsZQTMffVUnHUGHkf78Yg5orQF9TSk9n1uSgQnkak2\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@solidstate/contracts/proxy/diamond/base/DiamondBaseStorage.sol": {
				"DiamondBaseStorage": {
					"abi": [],
					"devdoc": {
						"details": "derived from https://github.com/mudgen/diamond-2 (MIT license)",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@solidstate/contracts/proxy/diamond/base/DiamondBaseStorage.sol\":138:806  library DiamondBaseStorage {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@solidstate/contracts/proxy/diamond/base/DiamondBaseStorage.sol\":138:806  library DiamondBaseStorage {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212200c016365862137b107d2c47c0e02be0f90125af104bc1b2eddd6014fc067378d64736f6c63430008180033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60556032600b8282823980515f1a607314602657634e487b7160e01b5f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea26469706673582212200c016365862137b107d2c47c0e02be0f90125af104bc1b2eddd6014fc067378d64736f6c63430008180033",
							"opcodes": "PUSH1 0x55 PUSH1 0x32 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x26 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC ADD PUSH4 0x65862137 0xB1 SMOD 0xD2 0xC4 PUSH29 0xE02BE0F90125AF104BC1B2EDDD6014FC067378D64736F6C6343000818 STOP CALLER ",
							"sourceMap": "138:668:28:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;138:668:28;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea26469706673582212200c016365862137b107d2c47c0e02be0f90125af104bc1b2eddd6014fc067378d64736f6c63430008180033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC ADD PUSH4 0x65862137 0xB1 SMOD 0xD2 0xC4 PUSH29 0xE02BE0F90125AF104BC1B2EDDD6014FC067378D64736F6C6343000818 STOP CALLER ",
							"sourceMap": "138:668:28:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "96",
								"totalCost": "17096"
							},
							"internal": {
								"layout()": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 138,
									"end": 806,
									"name": "PUSH #[$]",
									"source": 28,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 138,
									"end": 806,
									"name": "PUSH [$]",
									"source": 28,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 138,
									"end": 806,
									"name": "PUSH",
									"source": 28,
									"value": "B"
								},
								{
									"begin": 138,
									"end": 806,
									"name": "DUP3",
									"source": 28
								},
								{
									"begin": 138,
									"end": 806,
									"name": "DUP3",
									"source": 28
								},
								{
									"begin": 138,
									"end": 806,
									"name": "DUP3",
									"source": 28
								},
								{
									"begin": 138,
									"end": 806,
									"name": "CODECOPY",
									"source": 28
								},
								{
									"begin": 138,
									"end": 806,
									"name": "DUP1",
									"source": 28
								},
								{
									"begin": 138,
									"end": 806,
									"name": "MLOAD",
									"source": 28
								},
								{
									"begin": 138,
									"end": 806,
									"name": "PUSH",
									"source": 28,
									"value": "0"
								},
								{
									"begin": 138,
									"end": 806,
									"name": "BYTE",
									"source": 28
								},
								{
									"begin": 138,
									"end": 806,
									"name": "PUSH",
									"source": 28,
									"value": "73"
								},
								{
									"begin": 138,
									"end": 806,
									"name": "EQ",
									"source": 28
								},
								{
									"begin": 138,
									"end": 806,
									"name": "PUSH [tag]",
									"source": 28,
									"value": "1"
								},
								{
									"begin": 138,
									"end": 806,
									"name": "JUMPI",
									"source": 28
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 138,
									"end": 806,
									"name": "PUSH",
									"source": 28,
									"value": "0"
								},
								{
									"begin": 138,
									"end": 806,
									"name": "MSTORE",
									"source": 28
								},
								{
									"begin": 138,
									"end": 806,
									"name": "PUSH",
									"source": 28,
									"value": "0"
								},
								{
									"begin": 138,
									"end": 806,
									"name": "PUSH",
									"source": 28,
									"value": "4"
								},
								{
									"begin": 138,
									"end": 806,
									"name": "MSTORE",
									"source": 28
								},
								{
									"begin": 138,
									"end": 806,
									"name": "PUSH",
									"source": 28,
									"value": "24"
								},
								{
									"begin": 138,
									"end": 806,
									"name": "PUSH",
									"source": 28,
									"value": "0"
								},
								{
									"begin": 138,
									"end": 806,
									"name": "REVERT",
									"source": 28
								},
								{
									"begin": 138,
									"end": 806,
									"name": "tag",
									"source": 28,
									"value": "1"
								},
								{
									"begin": 138,
									"end": 806,
									"name": "JUMPDEST",
									"source": 28
								},
								{
									"begin": 138,
									"end": 806,
									"name": "ADDRESS",
									"source": 28
								},
								{
									"begin": 138,
									"end": 806,
									"name": "PUSH",
									"source": 28,
									"value": "0"
								},
								{
									"begin": 138,
									"end": 806,
									"name": "MSTORE",
									"source": 28
								},
								{
									"begin": 138,
									"end": 806,
									"name": "PUSH",
									"source": 28,
									"value": "73"
								},
								{
									"begin": 138,
									"end": 806,
									"name": "DUP2",
									"source": 28
								},
								{
									"begin": 138,
									"end": 806,
									"name": "MSTORE8",
									"source": 28
								},
								{
									"begin": 138,
									"end": 806,
									"name": "DUP3",
									"source": 28
								},
								{
									"begin": 138,
									"end": 806,
									"name": "DUP2",
									"source": 28
								},
								{
									"begin": 138,
									"end": 806,
									"name": "RETURN",
									"source": 28
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212200c016365862137b107d2c47c0e02be0f90125af104bc1b2eddd6014fc067378d64736f6c63430008180033",
									".code": [
										{
											"begin": 138,
											"end": 806,
											"name": "PUSHDEPLOYADDRESS",
											"source": 28
										},
										{
											"begin": 138,
											"end": 806,
											"name": "ADDRESS",
											"source": 28
										},
										{
											"begin": 138,
											"end": 806,
											"name": "EQ",
											"source": 28
										},
										{
											"begin": 138,
											"end": 806,
											"name": "PUSH",
											"source": 28,
											"value": "80"
										},
										{
											"begin": 138,
											"end": 806,
											"name": "PUSH",
											"source": 28,
											"value": "40"
										},
										{
											"begin": 138,
											"end": 806,
											"name": "MSTORE",
											"source": 28
										},
										{
											"begin": 138,
											"end": 806,
											"name": "PUSH",
											"source": 28,
											"value": "0"
										},
										{
											"begin": 138,
											"end": 806,
											"name": "DUP1",
											"source": 28
										},
										{
											"begin": 138,
											"end": 806,
											"name": "REVERT",
											"source": 28
										}
									]
								}
							},
							"sourceList": [
								"@solidstate/contracts/access/ownable/IOwnable.sol",
								"@solidstate/contracts/access/ownable/IOwnableInternal.sol",
								"@solidstate/contracts/access/ownable/ISafeOwnable.sol",
								"@solidstate/contracts/access/ownable/ISafeOwnableInternal.sol",
								"@solidstate/contracts/access/ownable/Ownable.sol",
								"@solidstate/contracts/access/ownable/OwnableInternal.sol",
								"@solidstate/contracts/access/ownable/OwnableStorage.sol",
								"@solidstate/contracts/access/ownable/SafeOwnable.sol",
								"@solidstate/contracts/access/ownable/SafeOwnableInternal.sol",
								"@solidstate/contracts/access/ownable/SafeOwnableStorage.sol",
								"@solidstate/contracts/interfaces/IERC165.sol",
								"@solidstate/contracts/interfaces/IERC165Internal.sol",
								"@solidstate/contracts/interfaces/IERC173.sol",
								"@solidstate/contracts/interfaces/IERC173Internal.sol",
								"@solidstate/contracts/interfaces/IERC2535DiamondCut.sol",
								"@solidstate/contracts/interfaces/IERC2535DiamondCutInternal.sol",
								"@solidstate/contracts/interfaces/IERC2535DiamondLoupe.sol",
								"@solidstate/contracts/interfaces/IERC2535DiamondLoupeInternal.sol",
								"@solidstate/contracts/introspection/ERC165/base/ERC165Base.sol",
								"@solidstate/contracts/introspection/ERC165/base/ERC165BaseInternal.sol",
								"@solidstate/contracts/introspection/ERC165/base/ERC165BaseStorage.sol",
								"@solidstate/contracts/introspection/ERC165/base/IERC165Base.sol",
								"@solidstate/contracts/introspection/ERC165/base/IERC165BaseInternal.sol",
								"@solidstate/contracts/proxy/IProxy.sol",
								"@solidstate/contracts/proxy/Proxy.sol",
								"@solidstate/contracts/proxy/diamond/ISolidStateDiamond.sol",
								"@solidstate/contracts/proxy/diamond/SolidStateDiamond.sol",
								"@solidstate/contracts/proxy/diamond/base/DiamondBase.sol",
								"@solidstate/contracts/proxy/diamond/base/DiamondBaseStorage.sol",
								"@solidstate/contracts/proxy/diamond/base/IDiamondBase.sol",
								"@solidstate/contracts/proxy/diamond/fallback/DiamondFallback.sol",
								"@solidstate/contracts/proxy/diamond/fallback/IDiamondFallback.sol",
								"@solidstate/contracts/proxy/diamond/readable/DiamondReadable.sol",
								"@solidstate/contracts/proxy/diamond/readable/DiamondReadableInternal.sol",
								"@solidstate/contracts/proxy/diamond/readable/IDiamondReadable.sol",
								"@solidstate/contracts/proxy/diamond/readable/IDiamondReadableInternal.sol",
								"@solidstate/contracts/proxy/diamond/writable/DiamondWritable.sol",
								"@solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol",
								"@solidstate/contracts/proxy/diamond/writable/IDiamondWritable.sol",
								"@solidstate/contracts/proxy/diamond/writable/IDiamondWritableInternal.sol",
								"@solidstate/contracts/utils/AddressUtils.sol",
								"@solidstate/contracts/utils/UintUtils.sol",
								"Eip2535/EIp2535Diamond.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"derived from https://github.com/mudgen/diamond-2 (MIT license)\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@solidstate/contracts/proxy/diamond/base/DiamondBaseStorage.sol\":\"DiamondBaseStorage\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":900},\"remappings\":[]},\"sources\":{\"@solidstate/contracts/proxy/diamond/base/DiamondBaseStorage.sol\":{\"keccak256\":\"0x536f0e1d66226166d145aa150db4f493d73d0b118d24c327d167574d9130b114\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://dfb0c70f473fdfe921b2d0103e8fba7e1d452c9ce792a2a6a901f2efba65e56a\",\"dweb:/ipfs/QmacmpDGdPHE7o7G4pDp46cudBXHniswBerj6dyVnsSajs\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@solidstate/contracts/proxy/diamond/base/IDiamondBase.sol": {
				"IDiamondBase": {
					"abi": [
						{
							"inputs": [],
							"name": "Proxy__ImplementationIsNotContract",
							"type": "error"
						},
						{
							"stateMutability": "payable",
							"type": "fallback"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"Proxy__ImplementationIsNotContract\",\"type\":\"error\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@solidstate/contracts/proxy/diamond/base/IDiamondBase.sol\":\"IDiamondBase\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":900},\"remappings\":[]},\"sources\":{\"@solidstate/contracts/proxy/IProxy.sol\":{\"keccak256\":\"0x48d7f3fe133c1c8a9388eab6cda5060966af9bbd47a6d24a198e1a970fe9ee9f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b8f5e7dcea26eb4bfe4f8cb04704cf51ece7988409647e3387e483f65dd32954\",\"dweb:/ipfs/QmdKfjkDEXJGtDZ24tD4G9ro6AbMgJNN3Kwg9qGyPRRLQB\"]},\"@solidstate/contracts/proxy/diamond/base/IDiamondBase.sol\":{\"keccak256\":\"0x00cad88b32dd925b1a6e5ad740811741f0f59fccba47d3e70b4488305a3fab78\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fa284f987966ddd735cd66d55d206f4a3ef161175df1f867e3930d60b62bba76\",\"dweb:/ipfs/QmSymhtgta9xnTg8xcHWMe6TzwnG5X2g7u9QnZZvVSzFrS\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@solidstate/contracts/proxy/diamond/fallback/DiamondFallback.sol": {
				"DiamondFallback": {
					"abi": [
						{
							"inputs": [],
							"name": "Ownable__NotOwner",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "Ownable__NotTransitiveOwner",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "Proxy__ImplementationIsNotContract",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"stateMutability": "payable",
							"type": "fallback"
						},
						{
							"inputs": [],
							"name": "getFallbackAddress",
							"outputs": [
								{
									"internalType": "address",
									"name": "fallbackAddress",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "fallbackAddress",
									"type": "address"
								}
							],
							"name": "setFallbackAddress",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"getFallbackAddress()": {
								"returns": {
									"fallbackAddress": "address of fallback implementation"
								}
							},
							"setFallbackAddress(address)": {
								"params": {
									"fallbackAddress": "address of fallback implementation"
								}
							}
						},
						"title": "Fallback feature for EIP-2535 \"Diamond\" proxy",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"getFallbackAddress()": "2c408059",
							"setFallbackAddress(address)": "91423765"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"Ownable__NotOwner\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Ownable__NotTransitiveOwner\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Proxy__ImplementationIsNotContract\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[],\"name\":\"getFallbackAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"fallbackAddress\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"fallbackAddress\",\"type\":\"address\"}],\"name\":\"setFallbackAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"getFallbackAddress()\":{\"returns\":{\"fallbackAddress\":\"address of fallback implementation\"}},\"setFallbackAddress(address)\":{\"params\":{\"fallbackAddress\":\"address of fallback implementation\"}}},\"title\":\"Fallback feature for EIP-2535 \\\"Diamond\\\" proxy\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"getFallbackAddress()\":{\"notice\":\"query the address of the fallback implementation\"},\"setFallbackAddress(address)\":{\"notice\":\"set the address of the fallback implementation\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@solidstate/contracts/proxy/diamond/fallback/DiamondFallback.sol\":\"DiamondFallback\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":900},\"remappings\":[]},\"sources\":{\"@solidstate/contracts/access/ownable/IOwnableInternal.sol\":{\"keccak256\":\"0x4cd447859a063c235aa56dcb017012f3c7ad6c54a399d6cdfef8045c78820f90\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fecba3866ae33c19144357b5aa3a43b8d9b84728a124443a87471409d90507ff\",\"dweb:/ipfs/QmZzkdVbNp4Zv7vHPxeBkoFP3od1sRVXVdWA4j6v9TTSAa\"]},\"@solidstate/contracts/access/ownable/OwnableInternal.sol\":{\"keccak256\":\"0x68e9c133cdc3a3cdbed72c63f682d428e4533f2c8095d57410653430f69f225c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2f24f167ce2396a880db1b8c8745dbd98d48ee29583784ccb8126547ac81f042\",\"dweb:/ipfs/QmW5r1s5QoV2ENh3Qx2WRhcsbyD9cKC1gBbk2JMFM4YbcR\"]},\"@solidstate/contracts/access/ownable/OwnableStorage.sol\":{\"keccak256\":\"0xdd830eb11d93432c1219d28f1758d1e1e260e09f64152f34e0cab7861a567acb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4beb423fff82203ce963d2fa005b9a26e489dc22efc183e6c68d912cb65ee291\",\"dweb:/ipfs/QmakghQzG8UJ2uwkR8peYxXB7KCMKGrjB9c5r9JSyoB6kw\"]},\"@solidstate/contracts/interfaces/IERC173.sol\":{\"keccak256\":\"0x1dcf85abc1fa1871fd31e6cf54ba539c6cb93342fae91466550940ad49ad08f7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://666470e1f5e26f114d35608a4cce2885f044cfb01fe5b11db0ed32edd5d68750\",\"dweb:/ipfs/Qma5iVmjnWAjkbxs2y62PYdLGCQAef2Q6KsbMUHaQp6bUV\"]},\"@solidstate/contracts/interfaces/IERC173Internal.sol\":{\"keccak256\":\"0x411c4c66a220f9eb25a29c2553fa9e6cac22a948a8645507d20fe5e7876dc8d1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://36c60312ab789ba0b1aa3d5129fffa911bee346937f6a5662cbd2c2e97b8ccec\",\"dweb:/ipfs/QmZJV8DgbcKs2Nws8gYQWuPdfEKFJSBj9BMfqmPxtNYF8z\"]},\"@solidstate/contracts/proxy/IProxy.sol\":{\"keccak256\":\"0x48d7f3fe133c1c8a9388eab6cda5060966af9bbd47a6d24a198e1a970fe9ee9f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b8f5e7dcea26eb4bfe4f8cb04704cf51ece7988409647e3387e483f65dd32954\",\"dweb:/ipfs/QmdKfjkDEXJGtDZ24tD4G9ro6AbMgJNN3Kwg9qGyPRRLQB\"]},\"@solidstate/contracts/proxy/Proxy.sol\":{\"keccak256\":\"0x40b3f644b893b536b316dec6d45d5787490144aeab259494118b337814c38cd3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8705f59bfdbf4d98b4bc0bfc81cc68edaa6e23ec21c7eb099af4f84cc21ff6b5\",\"dweb:/ipfs/QmaNmduvuLkY7R4iuYE4ME96J13UuzZ4Mm6PjUD9Lc8hAa\"]},\"@solidstate/contracts/proxy/diamond/base/DiamondBase.sol\":{\"keccak256\":\"0x0590fb00acfbf4eeec1957df8196cac63de89566a26ce0a80a9f78f919fae74c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://19ec1dfec4092f11029a37fabb50ba3385a94cd39e5044e3377074b6c5f9b709\",\"dweb:/ipfs/QmZbChb94a7S2W9ZAgFpesW4E4YEYeWg1wiV7VaJJGgWMK\"]},\"@solidstate/contracts/proxy/diamond/base/DiamondBaseStorage.sol\":{\"keccak256\":\"0x536f0e1d66226166d145aa150db4f493d73d0b118d24c327d167574d9130b114\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://dfb0c70f473fdfe921b2d0103e8fba7e1d452c9ce792a2a6a901f2efba65e56a\",\"dweb:/ipfs/QmacmpDGdPHE7o7G4pDp46cudBXHniswBerj6dyVnsSajs\"]},\"@solidstate/contracts/proxy/diamond/base/IDiamondBase.sol\":{\"keccak256\":\"0x00cad88b32dd925b1a6e5ad740811741f0f59fccba47d3e70b4488305a3fab78\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fa284f987966ddd735cd66d55d206f4a3ef161175df1f867e3930d60b62bba76\",\"dweb:/ipfs/QmSymhtgta9xnTg8xcHWMe6TzwnG5X2g7u9QnZZvVSzFrS\"]},\"@solidstate/contracts/proxy/diamond/fallback/DiamondFallback.sol\":{\"keccak256\":\"0x4924f8b6669fb144d56649adb0a52712b01bc7b442cc0feea1be07a24edf9ac3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f08a89af5dd515d10fd13f7610325b58f8e50139a5531d9c95aabc5acb1990f3\",\"dweb:/ipfs/Qme9yoWNfsPZTiJjCKbmuuX3GiHYw9vMvLbcyUY2zbRMzK\"]},\"@solidstate/contracts/proxy/diamond/fallback/IDiamondFallback.sol\":{\"keccak256\":\"0x299eb396c7716208795faf3822c304de0719acdc47b94c29b87b69a85505f84c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ae6cda79e1b66f7726f633f2367586e6d1b5571ae781b69a186a707586cd5e9f\",\"dweb:/ipfs/QmY3Jxm48NGi2pmhDcjA4QP3UX9nY9NHQx7goUGSguvSza\"]},\"@solidstate/contracts/utils/AddressUtils.sol\":{\"keccak256\":\"0x73b8727aeb8d6a984dfb279cf64eb867cb0f5c42527b877f87dcbe1a37f3e433\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://21599c6853d978762bd6db8e70720ba7de6394bf6e1b66d32a936c074c160135\",\"dweb:/ipfs/QmekH1Vro4JrwfSpJUBVRofaCMsxAj8huDbujYBgGsHm63\"]},\"@solidstate/contracts/utils/UintUtils.sol\":{\"keccak256\":\"0x1dbd4a2d25d6d3511018319bb752e2fe72b934cbcf31b18e47a286229ce36f1f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e339115b07880370eef2b22f5529050fcf863a34bab9e8ac81be570ae7deb2be\",\"dweb:/ipfs/QmU9KsZQTMffVUnHUGHkf78Yg5orQF9TSk9n1uSgQnkak2\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"getFallbackAddress()": {
								"notice": "query the address of the fallback implementation"
							},
							"setFallbackAddress(address)": {
								"notice": "set the address of the fallback implementation"
							}
						},
						"version": 1
					}
				}
			},
			"@solidstate/contracts/proxy/diamond/fallback/IDiamondFallback.sol": {
				"IDiamondFallback": {
					"abi": [
						{
							"inputs": [],
							"name": "Proxy__ImplementationIsNotContract",
							"type": "error"
						},
						{
							"stateMutability": "payable",
							"type": "fallback"
						},
						{
							"inputs": [],
							"name": "getFallbackAddress",
							"outputs": [
								{
									"internalType": "address",
									"name": "fallbackAddress",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "fallbackAddress",
									"type": "address"
								}
							],
							"name": "setFallbackAddress",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"getFallbackAddress()": {
								"returns": {
									"fallbackAddress": "address of fallback implementation"
								}
							},
							"setFallbackAddress(address)": {
								"params": {
									"fallbackAddress": "address of fallback implementation"
								}
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"getFallbackAddress()": "2c408059",
							"setFallbackAddress(address)": "91423765"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"Proxy__ImplementationIsNotContract\",\"type\":\"error\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[],\"name\":\"getFallbackAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"fallbackAddress\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"fallbackAddress\",\"type\":\"address\"}],\"name\":\"setFallbackAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"getFallbackAddress()\":{\"returns\":{\"fallbackAddress\":\"address of fallback implementation\"}},\"setFallbackAddress(address)\":{\"params\":{\"fallbackAddress\":\"address of fallback implementation\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"getFallbackAddress()\":{\"notice\":\"query the address of the fallback implementation\"},\"setFallbackAddress(address)\":{\"notice\":\"set the address of the fallback implementation\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@solidstate/contracts/proxy/diamond/fallback/IDiamondFallback.sol\":\"IDiamondFallback\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":900},\"remappings\":[]},\"sources\":{\"@solidstate/contracts/proxy/IProxy.sol\":{\"keccak256\":\"0x48d7f3fe133c1c8a9388eab6cda5060966af9bbd47a6d24a198e1a970fe9ee9f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b8f5e7dcea26eb4bfe4f8cb04704cf51ece7988409647e3387e483f65dd32954\",\"dweb:/ipfs/QmdKfjkDEXJGtDZ24tD4G9ro6AbMgJNN3Kwg9qGyPRRLQB\"]},\"@solidstate/contracts/proxy/diamond/base/IDiamondBase.sol\":{\"keccak256\":\"0x00cad88b32dd925b1a6e5ad740811741f0f59fccba47d3e70b4488305a3fab78\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fa284f987966ddd735cd66d55d206f4a3ef161175df1f867e3930d60b62bba76\",\"dweb:/ipfs/QmSymhtgta9xnTg8xcHWMe6TzwnG5X2g7u9QnZZvVSzFrS\"]},\"@solidstate/contracts/proxy/diamond/fallback/IDiamondFallback.sol\":{\"keccak256\":\"0x299eb396c7716208795faf3822c304de0719acdc47b94c29b87b69a85505f84c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ae6cda79e1b66f7726f633f2367586e6d1b5571ae781b69a186a707586cd5e9f\",\"dweb:/ipfs/QmY3Jxm48NGi2pmhDcjA4QP3UX9nY9NHQx7goUGSguvSza\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"getFallbackAddress()": {
								"notice": "query the address of the fallback implementation"
							},
							"setFallbackAddress(address)": {
								"notice": "set the address of the fallback implementation"
							}
						},
						"version": 1
					}
				}
			},
			"@solidstate/contracts/proxy/diamond/readable/DiamondReadable.sol": {
				"DiamondReadable": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "selector",
									"type": "bytes4"
								}
							],
							"name": "facetAddress",
							"outputs": [
								{
									"internalType": "address",
									"name": "facet",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "facetAddresses",
							"outputs": [
								{
									"internalType": "address[]",
									"name": "addresses",
									"type": "address[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "facet",
									"type": "address"
								}
							],
							"name": "facetFunctionSelectors",
							"outputs": [
								{
									"internalType": "bytes4[]",
									"name": "selectors",
									"type": "bytes4[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "facets",
							"outputs": [
								{
									"components": [
										{
											"internalType": "address",
											"name": "target",
											"type": "address"
										},
										{
											"internalType": "bytes4[]",
											"name": "selectors",
											"type": "bytes4[]"
										}
									],
									"internalType": "struct IERC2535DiamondLoupeInternal.Facet[]",
									"name": "diamondFacets",
									"type": "tuple[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "derived from https://github.com/mudgen/diamond-2 (MIT license)",
						"kind": "dev",
						"methods": {
							"facetAddress(bytes4)": {
								"params": {
									"selector": "function selector to query"
								},
								"returns": {
									"facet": "facet address (zero address if not found)"
								}
							},
							"facetAddresses()": {
								"returns": {
									"addresses": "array of facet addresses"
								}
							},
							"facetFunctionSelectors(address)": {
								"params": {
									"facet": "address of facet to query"
								},
								"returns": {
									"selectors": "array of function selectors"
								}
							},
							"facets()": {
								"returns": {
									"diamondFacets": "array of structured facet data"
								}
							}
						},
						"title": "EIP-2535 \"Diamond\" proxy introspection contract",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"facetAddress(bytes4)": "cdffacc6",
							"facetAddresses()": "52ef6b2c",
							"facetFunctionSelectors(address)": "adfca15e",
							"facets()": "7a0ed627"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"selector\",\"type\":\"bytes4\"}],\"name\":\"facetAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"facet\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"facetAddresses\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"addresses\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"facet\",\"type\":\"address\"}],\"name\":\"facetFunctionSelectors\",\"outputs\":[{\"internalType\":\"bytes4[]\",\"name\":\"selectors\",\"type\":\"bytes4[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"facets\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"bytes4[]\",\"name\":\"selectors\",\"type\":\"bytes4[]\"}],\"internalType\":\"struct IERC2535DiamondLoupeInternal.Facet[]\",\"name\":\"diamondFacets\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"derived from https://github.com/mudgen/diamond-2 (MIT license)\",\"kind\":\"dev\",\"methods\":{\"facetAddress(bytes4)\":{\"params\":{\"selector\":\"function selector to query\"},\"returns\":{\"facet\":\"facet address (zero address if not found)\"}},\"facetAddresses()\":{\"returns\":{\"addresses\":\"array of facet addresses\"}},\"facetFunctionSelectors(address)\":{\"params\":{\"facet\":\"address of facet to query\"},\"returns\":{\"selectors\":\"array of function selectors\"}},\"facets()\":{\"returns\":{\"diamondFacets\":\"array of structured facet data\"}}},\"title\":\"EIP-2535 \\\"Diamond\\\" proxy introspection contract\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"facetAddress(bytes4)\":{\"notice\":\"get the address of the facet associated with given selector\"},\"facetAddresses()\":{\"notice\":\"get addresses of all facets used by diamond\"},\"facetFunctionSelectors(address)\":{\"notice\":\"get all selectors for given facet address\"},\"facets()\":{\"notice\":\"get all facets and their selectors\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@solidstate/contracts/proxy/diamond/readable/DiamondReadable.sol\":\"DiamondReadable\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":900},\"remappings\":[]},\"sources\":{\"@solidstate/contracts/interfaces/IERC2535DiamondLoupe.sol\":{\"keccak256\":\"0x26c32fd85a01de39974f3ff9c025e6bdc6c87b9d3d4a33abe06bdace2711d3c3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1fd3d5df9bea6a5738c5f59042e61015cc4dd65c5bc2587399efa2e1ac1479ac\",\"dweb:/ipfs/QmXMwJ86oCpy6JysW4TzDHDv84TSaVtfyYH8s9TdMjYkdq\"]},\"@solidstate/contracts/interfaces/IERC2535DiamondLoupeInternal.sol\":{\"keccak256\":\"0xf53530cc00621f951debec10349ad6209173a4e37519f9329061c33178319c54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://944813649502424d16a37dff3ca41d9d7393458508576e43289e49b876414851\",\"dweb:/ipfs/QmXmdY3XqPQRC6iVEAa82jydXisTnAJAzwTc1z7YcZJ4dy\"]},\"@solidstate/contracts/proxy/diamond/base/DiamondBaseStorage.sol\":{\"keccak256\":\"0x536f0e1d66226166d145aa150db4f493d73d0b118d24c327d167574d9130b114\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://dfb0c70f473fdfe921b2d0103e8fba7e1d452c9ce792a2a6a901f2efba65e56a\",\"dweb:/ipfs/QmacmpDGdPHE7o7G4pDp46cudBXHniswBerj6dyVnsSajs\"]},\"@solidstate/contracts/proxy/diamond/readable/DiamondReadable.sol\":{\"keccak256\":\"0x35a67bc44b71b5ee37a2c871ce02fa5b9ebac0936ba0a1aa053b12c035f7f890\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9c2958090fd5c64c1725a5a7fba73765006c4e81ce3a39af192dfe539fe3d94c\",\"dweb:/ipfs/QmX3kW8Nkh33ahwZ455uaMJBNeV7yQa77ovNqjC3rwTDcB\"]},\"@solidstate/contracts/proxy/diamond/readable/DiamondReadableInternal.sol\":{\"keccak256\":\"0x620e6c505fb6dd854dd4cb11fe9537274019e65de35edf91cfccfcd42bcce30d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b8b44f06039b3ad76d5a1f27155b329e2e6a8073d14eb33b90eee33867f35492\",\"dweb:/ipfs/QmZkLeNhhUabW36QJFQTHSKrJkmLsgNeJSzJZHBWXXthiW\"]},\"@solidstate/contracts/proxy/diamond/readable/IDiamondReadable.sol\":{\"keccak256\":\"0xb2a4f085ace4eeb45e9e34096cc54d08d289a4e0cd2d570c8fef5424d4989925\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://dc63d50f2fa14338954819d4e054b204d4a217f13f5e100f114405ef7d27ddd8\",\"dweb:/ipfs/QmZL9VKfNwwfscekLyyTh6JJELDMusQgQkrWeP2whM8yKb\"]},\"@solidstate/contracts/proxy/diamond/readable/IDiamondReadableInternal.sol\":{\"keccak256\":\"0x04f52dd1ded535ec471866b39455e9879ddd5b5265adee8d4b32a06b4a718790\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a2ba06128f57b5bda17b3b1de7490880c21c2d68ada6b36dc3049398a6de8bff\",\"dweb:/ipfs/Qmf9QAjygj4mPHKuh8RjVGMwZDNVajcerqH7pPnQR3r8cN\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"facetAddress(bytes4)": {
								"notice": "get the address of the facet associated with given selector"
							},
							"facetAddresses()": {
								"notice": "get addresses of all facets used by diamond"
							},
							"facetFunctionSelectors(address)": {
								"notice": "get all selectors for given facet address"
							},
							"facets()": {
								"notice": "get all facets and their selectors"
							}
						},
						"version": 1
					}
				}
			},
			"@solidstate/contracts/proxy/diamond/readable/DiamondReadableInternal.sol": {
				"DiamondReadableInternal": {
					"abi": [],
					"devdoc": {
						"details": "derived from https://github.com/mudgen/diamond-2 (MIT license)",
						"kind": "dev",
						"methods": {},
						"title": "EIP-2535 \"Diamond\" proxy introspection contract internal functions",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"derived from https://github.com/mudgen/diamond-2 (MIT license)\",\"kind\":\"dev\",\"methods\":{},\"title\":\"EIP-2535 \\\"Diamond\\\" proxy introspection contract internal functions\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@solidstate/contracts/proxy/diamond/readable/DiamondReadableInternal.sol\":\"DiamondReadableInternal\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":900},\"remappings\":[]},\"sources\":{\"@solidstate/contracts/interfaces/IERC2535DiamondLoupeInternal.sol\":{\"keccak256\":\"0xf53530cc00621f951debec10349ad6209173a4e37519f9329061c33178319c54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://944813649502424d16a37dff3ca41d9d7393458508576e43289e49b876414851\",\"dweb:/ipfs/QmXmdY3XqPQRC6iVEAa82jydXisTnAJAzwTc1z7YcZJ4dy\"]},\"@solidstate/contracts/proxy/diamond/base/DiamondBaseStorage.sol\":{\"keccak256\":\"0x536f0e1d66226166d145aa150db4f493d73d0b118d24c327d167574d9130b114\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://dfb0c70f473fdfe921b2d0103e8fba7e1d452c9ce792a2a6a901f2efba65e56a\",\"dweb:/ipfs/QmacmpDGdPHE7o7G4pDp46cudBXHniswBerj6dyVnsSajs\"]},\"@solidstate/contracts/proxy/diamond/readable/DiamondReadableInternal.sol\":{\"keccak256\":\"0x620e6c505fb6dd854dd4cb11fe9537274019e65de35edf91cfccfcd42bcce30d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b8b44f06039b3ad76d5a1f27155b329e2e6a8073d14eb33b90eee33867f35492\",\"dweb:/ipfs/QmZkLeNhhUabW36QJFQTHSKrJkmLsgNeJSzJZHBWXXthiW\"]},\"@solidstate/contracts/proxy/diamond/readable/IDiamondReadableInternal.sol\":{\"keccak256\":\"0x04f52dd1ded535ec471866b39455e9879ddd5b5265adee8d4b32a06b4a718790\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a2ba06128f57b5bda17b3b1de7490880c21c2d68ada6b36dc3049398a6de8bff\",\"dweb:/ipfs/Qmf9QAjygj4mPHKuh8RjVGMwZDNVajcerqH7pPnQR3r8cN\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@solidstate/contracts/proxy/diamond/readable/IDiamondReadable.sol": {
				"IDiamondReadable": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "selector",
									"type": "bytes4"
								}
							],
							"name": "facetAddress",
							"outputs": [
								{
									"internalType": "address",
									"name": "facet",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "facetAddresses",
							"outputs": [
								{
									"internalType": "address[]",
									"name": "addresses",
									"type": "address[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "facet",
									"type": "address"
								}
							],
							"name": "facetFunctionSelectors",
							"outputs": [
								{
									"internalType": "bytes4[]",
									"name": "selectors",
									"type": "bytes4[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "facets",
							"outputs": [
								{
									"components": [
										{
											"internalType": "address",
											"name": "target",
											"type": "address"
										},
										{
											"internalType": "bytes4[]",
											"name": "selectors",
											"type": "bytes4[]"
										}
									],
									"internalType": "struct IERC2535DiamondLoupeInternal.Facet[]",
									"name": "diamondFacets",
									"type": "tuple[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "see https://eips.ethereum.org/EIPS/eip-2535",
						"kind": "dev",
						"methods": {
							"facetAddress(bytes4)": {
								"params": {
									"selector": "function selector to query"
								},
								"returns": {
									"facet": "facet address (zero address if not found)"
								}
							},
							"facetAddresses()": {
								"returns": {
									"addresses": "array of facet addresses"
								}
							},
							"facetFunctionSelectors(address)": {
								"params": {
									"facet": "address of facet to query"
								},
								"returns": {
									"selectors": "array of function selectors"
								}
							},
							"facets()": {
								"returns": {
									"diamondFacets": "array of structured facet data"
								}
							}
						},
						"title": "Diamond proxy introspection interface",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"facetAddress(bytes4)": "cdffacc6",
							"facetAddresses()": "52ef6b2c",
							"facetFunctionSelectors(address)": "adfca15e",
							"facets()": "7a0ed627"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"selector\",\"type\":\"bytes4\"}],\"name\":\"facetAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"facet\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"facetAddresses\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"addresses\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"facet\",\"type\":\"address\"}],\"name\":\"facetFunctionSelectors\",\"outputs\":[{\"internalType\":\"bytes4[]\",\"name\":\"selectors\",\"type\":\"bytes4[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"facets\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"bytes4[]\",\"name\":\"selectors\",\"type\":\"bytes4[]\"}],\"internalType\":\"struct IERC2535DiamondLoupeInternal.Facet[]\",\"name\":\"diamondFacets\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"see https://eips.ethereum.org/EIPS/eip-2535\",\"kind\":\"dev\",\"methods\":{\"facetAddress(bytes4)\":{\"params\":{\"selector\":\"function selector to query\"},\"returns\":{\"facet\":\"facet address (zero address if not found)\"}},\"facetAddresses()\":{\"returns\":{\"addresses\":\"array of facet addresses\"}},\"facetFunctionSelectors(address)\":{\"params\":{\"facet\":\"address of facet to query\"},\"returns\":{\"selectors\":\"array of function selectors\"}},\"facets()\":{\"returns\":{\"diamondFacets\":\"array of structured facet data\"}}},\"title\":\"Diamond proxy introspection interface\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"facetAddress(bytes4)\":{\"notice\":\"get the address of the facet associated with given selector\"},\"facetAddresses()\":{\"notice\":\"get addresses of all facets used by diamond\"},\"facetFunctionSelectors(address)\":{\"notice\":\"get all selectors for given facet address\"},\"facets()\":{\"notice\":\"get all facets and their selectors\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@solidstate/contracts/proxy/diamond/readable/IDiamondReadable.sol\":\"IDiamondReadable\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":900},\"remappings\":[]},\"sources\":{\"@solidstate/contracts/interfaces/IERC2535DiamondLoupe.sol\":{\"keccak256\":\"0x26c32fd85a01de39974f3ff9c025e6bdc6c87b9d3d4a33abe06bdace2711d3c3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1fd3d5df9bea6a5738c5f59042e61015cc4dd65c5bc2587399efa2e1ac1479ac\",\"dweb:/ipfs/QmXMwJ86oCpy6JysW4TzDHDv84TSaVtfyYH8s9TdMjYkdq\"]},\"@solidstate/contracts/interfaces/IERC2535DiamondLoupeInternal.sol\":{\"keccak256\":\"0xf53530cc00621f951debec10349ad6209173a4e37519f9329061c33178319c54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://944813649502424d16a37dff3ca41d9d7393458508576e43289e49b876414851\",\"dweb:/ipfs/QmXmdY3XqPQRC6iVEAa82jydXisTnAJAzwTc1z7YcZJ4dy\"]},\"@solidstate/contracts/proxy/diamond/readable/IDiamondReadable.sol\":{\"keccak256\":\"0xb2a4f085ace4eeb45e9e34096cc54d08d289a4e0cd2d570c8fef5424d4989925\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://dc63d50f2fa14338954819d4e054b204d4a217f13f5e100f114405ef7d27ddd8\",\"dweb:/ipfs/QmZL9VKfNwwfscekLyyTh6JJELDMusQgQkrWeP2whM8yKb\"]},\"@solidstate/contracts/proxy/diamond/readable/IDiamondReadableInternal.sol\":{\"keccak256\":\"0x04f52dd1ded535ec471866b39455e9879ddd5b5265adee8d4b32a06b4a718790\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a2ba06128f57b5bda17b3b1de7490880c21c2d68ada6b36dc3049398a6de8bff\",\"dweb:/ipfs/Qmf9QAjygj4mPHKuh8RjVGMwZDNVajcerqH7pPnQR3r8cN\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"facetAddress(bytes4)": {
								"notice": "get the address of the facet associated with given selector"
							},
							"facetAddresses()": {
								"notice": "get addresses of all facets used by diamond"
							},
							"facetFunctionSelectors(address)": {
								"notice": "get all selectors for given facet address"
							},
							"facets()": {
								"notice": "get all facets and their selectors"
							}
						},
						"version": 1
					}
				}
			},
			"@solidstate/contracts/proxy/diamond/readable/IDiamondReadableInternal.sol": {
				"IDiamondReadableInternal": {
					"abi": [],
					"devdoc": {
						"details": "see https://eips.ethereum.org/EIPS/eip-2535",
						"kind": "dev",
						"methods": {},
						"title": "Diamond proxy introspection interface needed for internal functions",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"see https://eips.ethereum.org/EIPS/eip-2535\",\"kind\":\"dev\",\"methods\":{},\"title\":\"Diamond proxy introspection interface needed for internal functions\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@solidstate/contracts/proxy/diamond/readable/IDiamondReadableInternal.sol\":\"IDiamondReadableInternal\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":900},\"remappings\":[]},\"sources\":{\"@solidstate/contracts/interfaces/IERC2535DiamondLoupeInternal.sol\":{\"keccak256\":\"0xf53530cc00621f951debec10349ad6209173a4e37519f9329061c33178319c54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://944813649502424d16a37dff3ca41d9d7393458508576e43289e49b876414851\",\"dweb:/ipfs/QmXmdY3XqPQRC6iVEAa82jydXisTnAJAzwTc1z7YcZJ4dy\"]},\"@solidstate/contracts/proxy/diamond/readable/IDiamondReadableInternal.sol\":{\"keccak256\":\"0x04f52dd1ded535ec471866b39455e9879ddd5b5265adee8d4b32a06b4a718790\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a2ba06128f57b5bda17b3b1de7490880c21c2d68ada6b36dc3049398a6de8bff\",\"dweb:/ipfs/Qmf9QAjygj4mPHKuh8RjVGMwZDNVajcerqH7pPnQR3r8cN\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@solidstate/contracts/proxy/diamond/writable/DiamondWritable.sol": {
				"DiamondWritable": {
					"abi": [
						{
							"inputs": [],
							"name": "DiamondWritable__InvalidInitializationParameters",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "DiamondWritable__RemoveTargetNotZeroAddress",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "DiamondWritable__ReplaceTargetIsIdentical",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "DiamondWritable__SelectorAlreadyAdded",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "DiamondWritable__SelectorIsImmutable",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "DiamondWritable__SelectorNotFound",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "DiamondWritable__SelectorNotSpecified",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "DiamondWritable__TargetHasNoCode",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "Ownable__NotOwner",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "Ownable__NotTransitiveOwner",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"components": [
										{
											"internalType": "address",
											"name": "target",
											"type": "address"
										},
										{
											"internalType": "enum IERC2535DiamondCutInternal.FacetCutAction",
											"name": "action",
											"type": "uint8"
										},
										{
											"internalType": "bytes4[]",
											"name": "selectors",
											"type": "bytes4[]"
										}
									],
									"indexed": false,
									"internalType": "struct IERC2535DiamondCutInternal.FacetCut[]",
									"name": "facetCuts",
									"type": "tuple[]"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "target",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "DiamondCut",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [
								{
									"components": [
										{
											"internalType": "address",
											"name": "target",
											"type": "address"
										},
										{
											"internalType": "enum IERC2535DiamondCutInternal.FacetCutAction",
											"name": "action",
											"type": "uint8"
										},
										{
											"internalType": "bytes4[]",
											"name": "selectors",
											"type": "bytes4[]"
										}
									],
									"internalType": "struct IERC2535DiamondCutInternal.FacetCut[]",
									"name": "facetCuts",
									"type": "tuple[]"
								},
								{
									"internalType": "address",
									"name": "target",
									"type": "address"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "diamondCut",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"diamondCut((address,uint8,bytes4[])[],address,bytes)": {
								"params": {
									"data": "optional initialization function call data",
									"facetCuts": "array of structured Diamond facet update data",
									"target": "optional target of initialization delegatecall"
								}
							}
						},
						"title": "EIP-2535 \"Diamond\" proxy update contract",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"diamondCut((address,uint8,bytes4[])[],address,bytes)": "1f931c1c"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"DiamondWritable__InvalidInitializationParameters\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"DiamondWritable__RemoveTargetNotZeroAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"DiamondWritable__ReplaceTargetIsIdentical\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"DiamondWritable__SelectorAlreadyAdded\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"DiamondWritable__SelectorIsImmutable\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"DiamondWritable__SelectorNotFound\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"DiamondWritable__SelectorNotSpecified\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"DiamondWritable__TargetHasNoCode\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Ownable__NotOwner\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Ownable__NotTransitiveOwner\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"enum IERC2535DiamondCutInternal.FacetCutAction\",\"name\":\"action\",\"type\":\"uint8\"},{\"internalType\":\"bytes4[]\",\"name\":\"selectors\",\"type\":\"bytes4[]\"}],\"indexed\":false,\"internalType\":\"struct IERC2535DiamondCutInternal.FacetCut[]\",\"name\":\"facetCuts\",\"type\":\"tuple[]\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"DiamondCut\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"enum IERC2535DiamondCutInternal.FacetCutAction\",\"name\":\"action\",\"type\":\"uint8\"},{\"internalType\":\"bytes4[]\",\"name\":\"selectors\",\"type\":\"bytes4[]\"}],\"internalType\":\"struct IERC2535DiamondCutInternal.FacetCut[]\",\"name\":\"facetCuts\",\"type\":\"tuple[]\"},{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"diamondCut\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"diamondCut((address,uint8,bytes4[])[],address,bytes)\":{\"params\":{\"data\":\"optional initialization function call data\",\"facetCuts\":\"array of structured Diamond facet update data\",\"target\":\"optional target of initialization delegatecall\"}}},\"title\":\"EIP-2535 \\\"Diamond\\\" proxy update contract\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"diamondCut((address,uint8,bytes4[])[],address,bytes)\":{\"notice\":\"update diamond facets and optionally execute arbitrary initialization function\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@solidstate/contracts/proxy/diamond/writable/DiamondWritable.sol\":\"DiamondWritable\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":900},\"remappings\":[]},\"sources\":{\"@solidstate/contracts/access/ownable/IOwnableInternal.sol\":{\"keccak256\":\"0x4cd447859a063c235aa56dcb017012f3c7ad6c54a399d6cdfef8045c78820f90\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fecba3866ae33c19144357b5aa3a43b8d9b84728a124443a87471409d90507ff\",\"dweb:/ipfs/QmZzkdVbNp4Zv7vHPxeBkoFP3od1sRVXVdWA4j6v9TTSAa\"]},\"@solidstate/contracts/access/ownable/OwnableInternal.sol\":{\"keccak256\":\"0x68e9c133cdc3a3cdbed72c63f682d428e4533f2c8095d57410653430f69f225c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2f24f167ce2396a880db1b8c8745dbd98d48ee29583784ccb8126547ac81f042\",\"dweb:/ipfs/QmW5r1s5QoV2ENh3Qx2WRhcsbyD9cKC1gBbk2JMFM4YbcR\"]},\"@solidstate/contracts/access/ownable/OwnableStorage.sol\":{\"keccak256\":\"0xdd830eb11d93432c1219d28f1758d1e1e260e09f64152f34e0cab7861a567acb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4beb423fff82203ce963d2fa005b9a26e489dc22efc183e6c68d912cb65ee291\",\"dweb:/ipfs/QmakghQzG8UJ2uwkR8peYxXB7KCMKGrjB9c5r9JSyoB6kw\"]},\"@solidstate/contracts/interfaces/IERC173.sol\":{\"keccak256\":\"0x1dcf85abc1fa1871fd31e6cf54ba539c6cb93342fae91466550940ad49ad08f7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://666470e1f5e26f114d35608a4cce2885f044cfb01fe5b11db0ed32edd5d68750\",\"dweb:/ipfs/Qma5iVmjnWAjkbxs2y62PYdLGCQAef2Q6KsbMUHaQp6bUV\"]},\"@solidstate/contracts/interfaces/IERC173Internal.sol\":{\"keccak256\":\"0x411c4c66a220f9eb25a29c2553fa9e6cac22a948a8645507d20fe5e7876dc8d1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://36c60312ab789ba0b1aa3d5129fffa911bee346937f6a5662cbd2c2e97b8ccec\",\"dweb:/ipfs/QmZJV8DgbcKs2Nws8gYQWuPdfEKFJSBj9BMfqmPxtNYF8z\"]},\"@solidstate/contracts/interfaces/IERC2535DiamondCut.sol\":{\"keccak256\":\"0xe2bc83d555c3b406a74ab0736d93da6435d197850a2504e0645dea7606055e4f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f4020f04ddf277326e647d25aeb6113bd1f65d62f02d6cabb479c646ceca5619\",\"dweb:/ipfs/QmU3snuS4Nu4FyxrpTm4Y63DtrqMQDDG2dYQ4wAu1i5npi\"]},\"@solidstate/contracts/interfaces/IERC2535DiamondCutInternal.sol\":{\"keccak256\":\"0xc59ed1d101485d637a4cc0b4717723a11cfae824734b169b310994e2ca8cf8ee\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bf0851d1129744467b98e5aff7a24a0c0cb6c78126b8caa7c312ce1bfb4ed83c\",\"dweb:/ipfs/QmdZKYETmRhk2ucWCmfBH16u1vN8WRsdAj7fam3topYj7L\"]},\"@solidstate/contracts/proxy/diamond/base/DiamondBaseStorage.sol\":{\"keccak256\":\"0x536f0e1d66226166d145aa150db4f493d73d0b118d24c327d167574d9130b114\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://dfb0c70f473fdfe921b2d0103e8fba7e1d452c9ce792a2a6a901f2efba65e56a\",\"dweb:/ipfs/QmacmpDGdPHE7o7G4pDp46cudBXHniswBerj6dyVnsSajs\"]},\"@solidstate/contracts/proxy/diamond/writable/DiamondWritable.sol\":{\"keccak256\":\"0x6da3dbd19422c4a434e50bde10db43f8baa291cf5086604399adab39f0796f05\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://06b79d4eb3c85879e1412301745d2abcc25344b5884d31e20bddcbcee23e5041\",\"dweb:/ipfs/Qme6ScmPGQ3PouDnXGis4Lj6s2EDQGimCdVWGv1gzTV2BE\"]},\"@solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":{\"keccak256\":\"0xbc71dc13eb588d46132745d218819aae37217d1476c4f9e626ef8ccdc2205be7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7cfb8919df76c0d37a061bfdc4ab11c08a61ab7250c7054cb02d48df037f46c3\",\"dweb:/ipfs/QmTpR2g5TcSNHjYFsUEeYcqohvrNPoEFhBfYVsLaMmPHqe\"]},\"@solidstate/contracts/proxy/diamond/writable/IDiamondWritable.sol\":{\"keccak256\":\"0x5b93ab2500c62bf37ff8a81927356c1e9251ea6a52c8165abb2f9c770410f572\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f2ec9e41faee654c99591f8d6e5d437b2bbfc67c4b7a58bb7d6bb764f7a4cf3d\",\"dweb:/ipfs/QmNVrDk1T4wh1PkvhXQtazQpZuKRiuRifJTANnhMfaFjpn\"]},\"@solidstate/contracts/proxy/diamond/writable/IDiamondWritableInternal.sol\":{\"keccak256\":\"0x84808f6a171f5ff30b0bc2f02a0c327c16c123530aeb36a4f88c1b5322a5d159\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://579c4f9b2597c7cff29309846749596a962cb491557ee5865fe74759ca65f8f4\",\"dweb:/ipfs/QmZeuV14qUg2sEy3EdvbzpYjDzMjuV2CCpwCFZvyTd2v6B\"]},\"@solidstate/contracts/utils/AddressUtils.sol\":{\"keccak256\":\"0x73b8727aeb8d6a984dfb279cf64eb867cb0f5c42527b877f87dcbe1a37f3e433\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://21599c6853d978762bd6db8e70720ba7de6394bf6e1b66d32a936c074c160135\",\"dweb:/ipfs/QmekH1Vro4JrwfSpJUBVRofaCMsxAj8huDbujYBgGsHm63\"]},\"@solidstate/contracts/utils/UintUtils.sol\":{\"keccak256\":\"0x1dbd4a2d25d6d3511018319bb752e2fe72b934cbcf31b18e47a286229ce36f1f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e339115b07880370eef2b22f5529050fcf863a34bab9e8ac81be570ae7deb2be\",\"dweb:/ipfs/QmU9KsZQTMffVUnHUGHkf78Yg5orQF9TSk9n1uSgQnkak2\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"diamondCut((address,uint8,bytes4[])[],address,bytes)": {
								"notice": "update diamond facets and optionally execute arbitrary initialization function"
							}
						},
						"version": 1
					}
				}
			},
			"@solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol": {
				"DiamondWritableInternal": {
					"abi": [
						{
							"inputs": [],
							"name": "DiamondWritable__InvalidInitializationParameters",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "DiamondWritable__RemoveTargetNotZeroAddress",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "DiamondWritable__ReplaceTargetIsIdentical",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "DiamondWritable__SelectorAlreadyAdded",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "DiamondWritable__SelectorIsImmutable",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "DiamondWritable__SelectorNotFound",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "DiamondWritable__SelectorNotSpecified",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "DiamondWritable__TargetHasNoCode",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"components": [
										{
											"internalType": "address",
											"name": "target",
											"type": "address"
										},
										{
											"internalType": "enum IERC2535DiamondCutInternal.FacetCutAction",
											"name": "action",
											"type": "uint8"
										},
										{
											"internalType": "bytes4[]",
											"name": "selectors",
											"type": "bytes4[]"
										}
									],
									"indexed": false,
									"internalType": "struct IERC2535DiamondCutInternal.FacetCut[]",
									"name": "facetCuts",
									"type": "tuple[]"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "target",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "DiamondCut",
							"type": "event"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"DiamondWritable__InvalidInitializationParameters\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"DiamondWritable__RemoveTargetNotZeroAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"DiamondWritable__ReplaceTargetIsIdentical\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"DiamondWritable__SelectorAlreadyAdded\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"DiamondWritable__SelectorIsImmutable\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"DiamondWritable__SelectorNotFound\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"DiamondWritable__SelectorNotSpecified\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"DiamondWritable__TargetHasNoCode\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"enum IERC2535DiamondCutInternal.FacetCutAction\",\"name\":\"action\",\"type\":\"uint8\"},{\"internalType\":\"bytes4[]\",\"name\":\"selectors\",\"type\":\"bytes4[]\"}],\"indexed\":false,\"internalType\":\"struct IERC2535DiamondCutInternal.FacetCut[]\",\"name\":\"facetCuts\",\"type\":\"tuple[]\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"DiamondCut\",\"type\":\"event\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":\"DiamondWritableInternal\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":900},\"remappings\":[]},\"sources\":{\"@solidstate/contracts/interfaces/IERC2535DiamondCutInternal.sol\":{\"keccak256\":\"0xc59ed1d101485d637a4cc0b4717723a11cfae824734b169b310994e2ca8cf8ee\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bf0851d1129744467b98e5aff7a24a0c0cb6c78126b8caa7c312ce1bfb4ed83c\",\"dweb:/ipfs/QmdZKYETmRhk2ucWCmfBH16u1vN8WRsdAj7fam3topYj7L\"]},\"@solidstate/contracts/proxy/diamond/base/DiamondBaseStorage.sol\":{\"keccak256\":\"0x536f0e1d66226166d145aa150db4f493d73d0b118d24c327d167574d9130b114\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://dfb0c70f473fdfe921b2d0103e8fba7e1d452c9ce792a2a6a901f2efba65e56a\",\"dweb:/ipfs/QmacmpDGdPHE7o7G4pDp46cudBXHniswBerj6dyVnsSajs\"]},\"@solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":{\"keccak256\":\"0xbc71dc13eb588d46132745d218819aae37217d1476c4f9e626ef8ccdc2205be7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7cfb8919df76c0d37a061bfdc4ab11c08a61ab7250c7054cb02d48df037f46c3\",\"dweb:/ipfs/QmTpR2g5TcSNHjYFsUEeYcqohvrNPoEFhBfYVsLaMmPHqe\"]},\"@solidstate/contracts/proxy/diamond/writable/IDiamondWritableInternal.sol\":{\"keccak256\":\"0x84808f6a171f5ff30b0bc2f02a0c327c16c123530aeb36a4f88c1b5322a5d159\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://579c4f9b2597c7cff29309846749596a962cb491557ee5865fe74759ca65f8f4\",\"dweb:/ipfs/QmZeuV14qUg2sEy3EdvbzpYjDzMjuV2CCpwCFZvyTd2v6B\"]},\"@solidstate/contracts/utils/AddressUtils.sol\":{\"keccak256\":\"0x73b8727aeb8d6a984dfb279cf64eb867cb0f5c42527b877f87dcbe1a37f3e433\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://21599c6853d978762bd6db8e70720ba7de6394bf6e1b66d32a936c074c160135\",\"dweb:/ipfs/QmekH1Vro4JrwfSpJUBVRofaCMsxAj8huDbujYBgGsHm63\"]},\"@solidstate/contracts/utils/UintUtils.sol\":{\"keccak256\":\"0x1dbd4a2d25d6d3511018319bb752e2fe72b934cbcf31b18e47a286229ce36f1f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e339115b07880370eef2b22f5529050fcf863a34bab9e8ac81be570ae7deb2be\",\"dweb:/ipfs/QmU9KsZQTMffVUnHUGHkf78Yg5orQF9TSk9n1uSgQnkak2\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@solidstate/contracts/proxy/diamond/writable/IDiamondWritable.sol": {
				"IDiamondWritable": {
					"abi": [
						{
							"inputs": [],
							"name": "DiamondWritable__InvalidInitializationParameters",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "DiamondWritable__RemoveTargetNotZeroAddress",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "DiamondWritable__ReplaceTargetIsIdentical",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "DiamondWritable__SelectorAlreadyAdded",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "DiamondWritable__SelectorIsImmutable",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "DiamondWritable__SelectorNotFound",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "DiamondWritable__SelectorNotSpecified",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "DiamondWritable__TargetHasNoCode",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"components": [
										{
											"internalType": "address",
											"name": "target",
											"type": "address"
										},
										{
											"internalType": "enum IERC2535DiamondCutInternal.FacetCutAction",
											"name": "action",
											"type": "uint8"
										},
										{
											"internalType": "bytes4[]",
											"name": "selectors",
											"type": "bytes4[]"
										}
									],
									"indexed": false,
									"internalType": "struct IERC2535DiamondCutInternal.FacetCut[]",
									"name": "facetCuts",
									"type": "tuple[]"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "target",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "DiamondCut",
							"type": "event"
						},
						{
							"inputs": [
								{
									"components": [
										{
											"internalType": "address",
											"name": "target",
											"type": "address"
										},
										{
											"internalType": "enum IERC2535DiamondCutInternal.FacetCutAction",
											"name": "action",
											"type": "uint8"
										},
										{
											"internalType": "bytes4[]",
											"name": "selectors",
											"type": "bytes4[]"
										}
									],
									"internalType": "struct IERC2535DiamondCutInternal.FacetCut[]",
									"name": "facetCuts",
									"type": "tuple[]"
								},
								{
									"internalType": "address",
									"name": "target",
									"type": "address"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "diamondCut",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "see https://eips.ethereum.org/EIPS/eip-2535",
						"kind": "dev",
						"methods": {
							"diamondCut((address,uint8,bytes4[])[],address,bytes)": {
								"params": {
									"data": "optional initialization function call data",
									"facetCuts": "array of structured Diamond facet update data",
									"target": "optional target of initialization delegatecall"
								}
							}
						},
						"title": "Diamond proxy upgrade interface",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"diamondCut((address,uint8,bytes4[])[],address,bytes)": "1f931c1c"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"DiamondWritable__InvalidInitializationParameters\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"DiamondWritable__RemoveTargetNotZeroAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"DiamondWritable__ReplaceTargetIsIdentical\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"DiamondWritable__SelectorAlreadyAdded\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"DiamondWritable__SelectorIsImmutable\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"DiamondWritable__SelectorNotFound\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"DiamondWritable__SelectorNotSpecified\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"DiamondWritable__TargetHasNoCode\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"enum IERC2535DiamondCutInternal.FacetCutAction\",\"name\":\"action\",\"type\":\"uint8\"},{\"internalType\":\"bytes4[]\",\"name\":\"selectors\",\"type\":\"bytes4[]\"}],\"indexed\":false,\"internalType\":\"struct IERC2535DiamondCutInternal.FacetCut[]\",\"name\":\"facetCuts\",\"type\":\"tuple[]\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"DiamondCut\",\"type\":\"event\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"enum IERC2535DiamondCutInternal.FacetCutAction\",\"name\":\"action\",\"type\":\"uint8\"},{\"internalType\":\"bytes4[]\",\"name\":\"selectors\",\"type\":\"bytes4[]\"}],\"internalType\":\"struct IERC2535DiamondCutInternal.FacetCut[]\",\"name\":\"facetCuts\",\"type\":\"tuple[]\"},{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"diamondCut\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"see https://eips.ethereum.org/EIPS/eip-2535\",\"kind\":\"dev\",\"methods\":{\"diamondCut((address,uint8,bytes4[])[],address,bytes)\":{\"params\":{\"data\":\"optional initialization function call data\",\"facetCuts\":\"array of structured Diamond facet update data\",\"target\":\"optional target of initialization delegatecall\"}}},\"title\":\"Diamond proxy upgrade interface\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"diamondCut((address,uint8,bytes4[])[],address,bytes)\":{\"notice\":\"update diamond facets and optionally execute arbitrary initialization function\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@solidstate/contracts/proxy/diamond/writable/IDiamondWritable.sol\":\"IDiamondWritable\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":900},\"remappings\":[]},\"sources\":{\"@solidstate/contracts/interfaces/IERC2535DiamondCut.sol\":{\"keccak256\":\"0xe2bc83d555c3b406a74ab0736d93da6435d197850a2504e0645dea7606055e4f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f4020f04ddf277326e647d25aeb6113bd1f65d62f02d6cabb479c646ceca5619\",\"dweb:/ipfs/QmU3snuS4Nu4FyxrpTm4Y63DtrqMQDDG2dYQ4wAu1i5npi\"]},\"@solidstate/contracts/interfaces/IERC2535DiamondCutInternal.sol\":{\"keccak256\":\"0xc59ed1d101485d637a4cc0b4717723a11cfae824734b169b310994e2ca8cf8ee\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bf0851d1129744467b98e5aff7a24a0c0cb6c78126b8caa7c312ce1bfb4ed83c\",\"dweb:/ipfs/QmdZKYETmRhk2ucWCmfBH16u1vN8WRsdAj7fam3topYj7L\"]},\"@solidstate/contracts/proxy/diamond/writable/IDiamondWritable.sol\":{\"keccak256\":\"0x5b93ab2500c62bf37ff8a81927356c1e9251ea6a52c8165abb2f9c770410f572\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f2ec9e41faee654c99591f8d6e5d437b2bbfc67c4b7a58bb7d6bb764f7a4cf3d\",\"dweb:/ipfs/QmNVrDk1T4wh1PkvhXQtazQpZuKRiuRifJTANnhMfaFjpn\"]},\"@solidstate/contracts/proxy/diamond/writable/IDiamondWritableInternal.sol\":{\"keccak256\":\"0x84808f6a171f5ff30b0bc2f02a0c327c16c123530aeb36a4f88c1b5322a5d159\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://579c4f9b2597c7cff29309846749596a962cb491557ee5865fe74759ca65f8f4\",\"dweb:/ipfs/QmZeuV14qUg2sEy3EdvbzpYjDzMjuV2CCpwCFZvyTd2v6B\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"diamondCut((address,uint8,bytes4[])[],address,bytes)": {
								"notice": "update diamond facets and optionally execute arbitrary initialization function"
							}
						},
						"version": 1
					}
				}
			},
			"@solidstate/contracts/proxy/diamond/writable/IDiamondWritableInternal.sol": {
				"IDiamondWritableInternal": {
					"abi": [
						{
							"inputs": [],
							"name": "DiamondWritable__InvalidInitializationParameters",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "DiamondWritable__RemoveTargetNotZeroAddress",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "DiamondWritable__ReplaceTargetIsIdentical",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "DiamondWritable__SelectorAlreadyAdded",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "DiamondWritable__SelectorIsImmutable",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "DiamondWritable__SelectorNotFound",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "DiamondWritable__SelectorNotSpecified",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "DiamondWritable__TargetHasNoCode",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"components": [
										{
											"internalType": "address",
											"name": "target",
											"type": "address"
										},
										{
											"internalType": "enum IERC2535DiamondCutInternal.FacetCutAction",
											"name": "action",
											"type": "uint8"
										},
										{
											"internalType": "bytes4[]",
											"name": "selectors",
											"type": "bytes4[]"
										}
									],
									"indexed": false,
									"internalType": "struct IERC2535DiamondCutInternal.FacetCut[]",
									"name": "facetCuts",
									"type": "tuple[]"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "target",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "DiamondCut",
							"type": "event"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"DiamondWritable__InvalidInitializationParameters\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"DiamondWritable__RemoveTargetNotZeroAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"DiamondWritable__ReplaceTargetIsIdentical\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"DiamondWritable__SelectorAlreadyAdded\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"DiamondWritable__SelectorIsImmutable\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"DiamondWritable__SelectorNotFound\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"DiamondWritable__SelectorNotSpecified\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"DiamondWritable__TargetHasNoCode\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"enum IERC2535DiamondCutInternal.FacetCutAction\",\"name\":\"action\",\"type\":\"uint8\"},{\"internalType\":\"bytes4[]\",\"name\":\"selectors\",\"type\":\"bytes4[]\"}],\"indexed\":false,\"internalType\":\"struct IERC2535DiamondCutInternal.FacetCut[]\",\"name\":\"facetCuts\",\"type\":\"tuple[]\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"DiamondCut\",\"type\":\"event\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@solidstate/contracts/proxy/diamond/writable/IDiamondWritableInternal.sol\":\"IDiamondWritableInternal\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":900},\"remappings\":[]},\"sources\":{\"@solidstate/contracts/interfaces/IERC2535DiamondCutInternal.sol\":{\"keccak256\":\"0xc59ed1d101485d637a4cc0b4717723a11cfae824734b169b310994e2ca8cf8ee\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bf0851d1129744467b98e5aff7a24a0c0cb6c78126b8caa7c312ce1bfb4ed83c\",\"dweb:/ipfs/QmdZKYETmRhk2ucWCmfBH16u1vN8WRsdAj7fam3topYj7L\"]},\"@solidstate/contracts/proxy/diamond/writable/IDiamondWritableInternal.sol\":{\"keccak256\":\"0x84808f6a171f5ff30b0bc2f02a0c327c16c123530aeb36a4f88c1b5322a5d159\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://579c4f9b2597c7cff29309846749596a962cb491557ee5865fe74759ca65f8f4\",\"dweb:/ipfs/QmZeuV14qUg2sEy3EdvbzpYjDzMjuV2CCpwCFZvyTd2v6B\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@solidstate/contracts/utils/AddressUtils.sol": {
				"AddressUtils": {
					"abi": [
						{
							"inputs": [],
							"name": "AddressUtils__InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "AddressUtils__NotContract",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "AddressUtils__SendValueFailed",
							"type": "error"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@solidstate/contracts/utils/AddressUtils.sol\":105:4216  library AddressUtils {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@solidstate/contracts/utils/AddressUtils.sol\":105:4216  library AddressUtils {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220184d4b54bf197776b0dc729eb1290d33f98b10ce64624f53db96239b35edd1ee64736f6c63430008180033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60556032600b8282823980515f1a607314602657634e487b7160e01b5f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220184d4b54bf197776b0dc729eb1290d33f98b10ce64624f53db96239b35edd1ee64736f6c63430008180033",
							"opcodes": "PUSH1 0x55 PUSH1 0x32 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x26 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 XOR 0x4D 0x4B SLOAD 0xBF NOT PUSH24 0x76B0DC729EB1290D33F98B10CE64624F53DB96239B35EDD1 0xEE PUSH5 0x736F6C6343 STOP ADDMOD XOR STOP CALLER ",
							"sourceMap": "105:4111:40:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;105:4111:40;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220184d4b54bf197776b0dc729eb1290d33f98b10ce64624f53db96239b35edd1ee64736f6c63430008180033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 XOR 0x4D 0x4B SLOAD 0xBF NOT PUSH24 0x76B0DC729EB1290D33F98B10CE64624F53DB96239B35EDD1 0xEE PUSH5 0x736F6C6343 STOP ADDMOD XOR STOP CALLER ",
							"sourceMap": "105:4111:40:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "96",
								"totalCost": "17096"
							},
							"internal": {
								"_functionCallWithValue(address,bytes memory,uint256,string memory)": "infinite",
								"excessivelySafeCall(address,uint256,uint256,uint16,bytes memory)": "infinite",
								"functionCall(address,bytes memory)": "infinite",
								"functionCall(address,bytes memory,string memory)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256,string memory)": "infinite",
								"isContract(address)": "infinite",
								"sendValue(address payable,uint256)": "infinite",
								"toString(address)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 105,
									"end": 4216,
									"name": "PUSH #[$]",
									"source": 40,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 105,
									"end": 4216,
									"name": "PUSH [$]",
									"source": 40,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 105,
									"end": 4216,
									"name": "PUSH",
									"source": 40,
									"value": "B"
								},
								{
									"begin": 105,
									"end": 4216,
									"name": "DUP3",
									"source": 40
								},
								{
									"begin": 105,
									"end": 4216,
									"name": "DUP3",
									"source": 40
								},
								{
									"begin": 105,
									"end": 4216,
									"name": "DUP3",
									"source": 40
								},
								{
									"begin": 105,
									"end": 4216,
									"name": "CODECOPY",
									"source": 40
								},
								{
									"begin": 105,
									"end": 4216,
									"name": "DUP1",
									"source": 40
								},
								{
									"begin": 105,
									"end": 4216,
									"name": "MLOAD",
									"source": 40
								},
								{
									"begin": 105,
									"end": 4216,
									"name": "PUSH",
									"source": 40,
									"value": "0"
								},
								{
									"begin": 105,
									"end": 4216,
									"name": "BYTE",
									"source": 40
								},
								{
									"begin": 105,
									"end": 4216,
									"name": "PUSH",
									"source": 40,
									"value": "73"
								},
								{
									"begin": 105,
									"end": 4216,
									"name": "EQ",
									"source": 40
								},
								{
									"begin": 105,
									"end": 4216,
									"name": "PUSH [tag]",
									"source": 40,
									"value": "1"
								},
								{
									"begin": 105,
									"end": 4216,
									"name": "JUMPI",
									"source": 40
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 105,
									"end": 4216,
									"name": "PUSH",
									"source": 40,
									"value": "0"
								},
								{
									"begin": 105,
									"end": 4216,
									"name": "MSTORE",
									"source": 40
								},
								{
									"begin": 105,
									"end": 4216,
									"name": "PUSH",
									"source": 40,
									"value": "0"
								},
								{
									"begin": 105,
									"end": 4216,
									"name": "PUSH",
									"source": 40,
									"value": "4"
								},
								{
									"begin": 105,
									"end": 4216,
									"name": "MSTORE",
									"source": 40
								},
								{
									"begin": 105,
									"end": 4216,
									"name": "PUSH",
									"source": 40,
									"value": "24"
								},
								{
									"begin": 105,
									"end": 4216,
									"name": "PUSH",
									"source": 40,
									"value": "0"
								},
								{
									"begin": 105,
									"end": 4216,
									"name": "REVERT",
									"source": 40
								},
								{
									"begin": 105,
									"end": 4216,
									"name": "tag",
									"source": 40,
									"value": "1"
								},
								{
									"begin": 105,
									"end": 4216,
									"name": "JUMPDEST",
									"source": 40
								},
								{
									"begin": 105,
									"end": 4216,
									"name": "ADDRESS",
									"source": 40
								},
								{
									"begin": 105,
									"end": 4216,
									"name": "PUSH",
									"source": 40,
									"value": "0"
								},
								{
									"begin": 105,
									"end": 4216,
									"name": "MSTORE",
									"source": 40
								},
								{
									"begin": 105,
									"end": 4216,
									"name": "PUSH",
									"source": 40,
									"value": "73"
								},
								{
									"begin": 105,
									"end": 4216,
									"name": "DUP2",
									"source": 40
								},
								{
									"begin": 105,
									"end": 4216,
									"name": "MSTORE8",
									"source": 40
								},
								{
									"begin": 105,
									"end": 4216,
									"name": "DUP3",
									"source": 40
								},
								{
									"begin": 105,
									"end": 4216,
									"name": "DUP2",
									"source": 40
								},
								{
									"begin": 105,
									"end": 4216,
									"name": "RETURN",
									"source": 40
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220184d4b54bf197776b0dc729eb1290d33f98b10ce64624f53db96239b35edd1ee64736f6c63430008180033",
									".code": [
										{
											"begin": 105,
											"end": 4216,
											"name": "PUSHDEPLOYADDRESS",
											"source": 40
										},
										{
											"begin": 105,
											"end": 4216,
											"name": "ADDRESS",
											"source": 40
										},
										{
											"begin": 105,
											"end": 4216,
											"name": "EQ",
											"source": 40
										},
										{
											"begin": 105,
											"end": 4216,
											"name": "PUSH",
											"source": 40,
											"value": "80"
										},
										{
											"begin": 105,
											"end": 4216,
											"name": "PUSH",
											"source": 40,
											"value": "40"
										},
										{
											"begin": 105,
											"end": 4216,
											"name": "MSTORE",
											"source": 40
										},
										{
											"begin": 105,
											"end": 4216,
											"name": "PUSH",
											"source": 40,
											"value": "0"
										},
										{
											"begin": 105,
											"end": 4216,
											"name": "DUP1",
											"source": 40
										},
										{
											"begin": 105,
											"end": 4216,
											"name": "REVERT",
											"source": 40
										}
									]
								}
							},
							"sourceList": [
								"@solidstate/contracts/access/ownable/IOwnable.sol",
								"@solidstate/contracts/access/ownable/IOwnableInternal.sol",
								"@solidstate/contracts/access/ownable/ISafeOwnable.sol",
								"@solidstate/contracts/access/ownable/ISafeOwnableInternal.sol",
								"@solidstate/contracts/access/ownable/Ownable.sol",
								"@solidstate/contracts/access/ownable/OwnableInternal.sol",
								"@solidstate/contracts/access/ownable/OwnableStorage.sol",
								"@solidstate/contracts/access/ownable/SafeOwnable.sol",
								"@solidstate/contracts/access/ownable/SafeOwnableInternal.sol",
								"@solidstate/contracts/access/ownable/SafeOwnableStorage.sol",
								"@solidstate/contracts/interfaces/IERC165.sol",
								"@solidstate/contracts/interfaces/IERC165Internal.sol",
								"@solidstate/contracts/interfaces/IERC173.sol",
								"@solidstate/contracts/interfaces/IERC173Internal.sol",
								"@solidstate/contracts/interfaces/IERC2535DiamondCut.sol",
								"@solidstate/contracts/interfaces/IERC2535DiamondCutInternal.sol",
								"@solidstate/contracts/interfaces/IERC2535DiamondLoupe.sol",
								"@solidstate/contracts/interfaces/IERC2535DiamondLoupeInternal.sol",
								"@solidstate/contracts/introspection/ERC165/base/ERC165Base.sol",
								"@solidstate/contracts/introspection/ERC165/base/ERC165BaseInternal.sol",
								"@solidstate/contracts/introspection/ERC165/base/ERC165BaseStorage.sol",
								"@solidstate/contracts/introspection/ERC165/base/IERC165Base.sol",
								"@solidstate/contracts/introspection/ERC165/base/IERC165BaseInternal.sol",
								"@solidstate/contracts/proxy/IProxy.sol",
								"@solidstate/contracts/proxy/Proxy.sol",
								"@solidstate/contracts/proxy/diamond/ISolidStateDiamond.sol",
								"@solidstate/contracts/proxy/diamond/SolidStateDiamond.sol",
								"@solidstate/contracts/proxy/diamond/base/DiamondBase.sol",
								"@solidstate/contracts/proxy/diamond/base/DiamondBaseStorage.sol",
								"@solidstate/contracts/proxy/diamond/base/IDiamondBase.sol",
								"@solidstate/contracts/proxy/diamond/fallback/DiamondFallback.sol",
								"@solidstate/contracts/proxy/diamond/fallback/IDiamondFallback.sol",
								"@solidstate/contracts/proxy/diamond/readable/DiamondReadable.sol",
								"@solidstate/contracts/proxy/diamond/readable/DiamondReadableInternal.sol",
								"@solidstate/contracts/proxy/diamond/readable/IDiamondReadable.sol",
								"@solidstate/contracts/proxy/diamond/readable/IDiamondReadableInternal.sol",
								"@solidstate/contracts/proxy/diamond/writable/DiamondWritable.sol",
								"@solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol",
								"@solidstate/contracts/proxy/diamond/writable/IDiamondWritable.sol",
								"@solidstate/contracts/proxy/diamond/writable/IDiamondWritableInternal.sol",
								"@solidstate/contracts/utils/AddressUtils.sol",
								"@solidstate/contracts/utils/UintUtils.sol",
								"Eip2535/EIp2535Diamond.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"AddressUtils__InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"AddressUtils__NotContract\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"AddressUtils__SendValueFailed\",\"type\":\"error\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@solidstate/contracts/utils/AddressUtils.sol\":\"AddressUtils\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":900},\"remappings\":[]},\"sources\":{\"@solidstate/contracts/utils/AddressUtils.sol\":{\"keccak256\":\"0x73b8727aeb8d6a984dfb279cf64eb867cb0f5c42527b877f87dcbe1a37f3e433\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://21599c6853d978762bd6db8e70720ba7de6394bf6e1b66d32a936c074c160135\",\"dweb:/ipfs/QmekH1Vro4JrwfSpJUBVRofaCMsxAj8huDbujYBgGsHm63\"]},\"@solidstate/contracts/utils/UintUtils.sol\":{\"keccak256\":\"0x1dbd4a2d25d6d3511018319bb752e2fe72b934cbcf31b18e47a286229ce36f1f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e339115b07880370eef2b22f5529050fcf863a34bab9e8ac81be570ae7deb2be\",\"dweb:/ipfs/QmU9KsZQTMffVUnHUGHkf78Yg5orQF9TSk9n1uSgQnkak2\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@solidstate/contracts/utils/UintUtils.sol": {
				"UintUtils": {
					"abi": [
						{
							"inputs": [],
							"name": "UintUtils__InsufficientPadding",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "UintUtils__InvalidBase",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "derived from https://github.com/OpenZeppelin/openzeppelin-contracts/ (MIT license)",
						"kind": "dev",
						"methods": {},
						"title": "utility functions for uint256 operations",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@solidstate/contracts/utils/UintUtils.sol\":209:8204  library UintUtils {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@solidstate/contracts/utils/UintUtils.sol\":209:8204  library UintUtils {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220b45be420b8d50ef9add848cb32f56395d2e30e110011693c205a30a9687a7c7e64736f6c63430008180033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60556032600b8282823980515f1a607314602657634e487b7160e01b5f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220b45be420b8d50ef9add848cb32f56395d2e30e110011693c205a30a9687a7c7e64736f6c63430008180033",
							"opcodes": "PUSH1 0x55 PUSH1 0x32 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x26 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB4 JUMPDEST 0xE4 KECCAK256 0xB8 0xD5 0xE 0xF9 0xAD 0xD8 BASEFEE 0xCB ORIGIN CREATE2 PUSH4 0x95D2E30E GT STOP GT PUSH10 0x3C205A30A9687A7C7E64 PUSH20 0x6F6C634300081800330000000000000000000000 ",
							"sourceMap": "209:7995:41:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;209:7995:41;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220b45be420b8d50ef9add848cb32f56395d2e30e110011693c205a30a9687a7c7e64736f6c63430008180033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB4 JUMPDEST 0xE4 KECCAK256 0xB8 0xD5 0xE 0xF9 0xAD 0xD8 BASEFEE 0xCB ORIGIN CREATE2 PUSH4 0x95D2E30E GT STOP GT PUSH10 0x3C205A30A9687A7C7E64 PUSH20 0x6F6C634300081800330000000000000000000000 ",
							"sourceMap": "209:7995:41:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "96",
								"totalCost": "17096"
							},
							"internal": {
								"add(uint256,int256)": "infinite",
								"sub(uint256,int256)": "infinite",
								"toBinString(uint256)": "infinite",
								"toBinString(uint256,uint256)": "infinite",
								"toDecString(uint256)": "infinite",
								"toDecString(uint256,uint256)": "infinite",
								"toHexString(uint256)": "infinite",
								"toHexString(uint256,uint256)": "infinite",
								"toOctString(uint256)": "infinite",
								"toOctString(uint256,uint256)": "infinite",
								"toString(uint256,uint256)": "infinite",
								"toString(uint256,uint256,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 209,
									"end": 8204,
									"name": "PUSH #[$]",
									"source": 41,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 209,
									"end": 8204,
									"name": "PUSH [$]",
									"source": 41,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 209,
									"end": 8204,
									"name": "PUSH",
									"source": 41,
									"value": "B"
								},
								{
									"begin": 209,
									"end": 8204,
									"name": "DUP3",
									"source": 41
								},
								{
									"begin": 209,
									"end": 8204,
									"name": "DUP3",
									"source": 41
								},
								{
									"begin": 209,
									"end": 8204,
									"name": "DUP3",
									"source": 41
								},
								{
									"begin": 209,
									"end": 8204,
									"name": "CODECOPY",
									"source": 41
								},
								{
									"begin": 209,
									"end": 8204,
									"name": "DUP1",
									"source": 41
								},
								{
									"begin": 209,
									"end": 8204,
									"name": "MLOAD",
									"source": 41
								},
								{
									"begin": 209,
									"end": 8204,
									"name": "PUSH",
									"source": 41,
									"value": "0"
								},
								{
									"begin": 209,
									"end": 8204,
									"name": "BYTE",
									"source": 41
								},
								{
									"begin": 209,
									"end": 8204,
									"name": "PUSH",
									"source": 41,
									"value": "73"
								},
								{
									"begin": 209,
									"end": 8204,
									"name": "EQ",
									"source": 41
								},
								{
									"begin": 209,
									"end": 8204,
									"name": "PUSH [tag]",
									"source": 41,
									"value": "1"
								},
								{
									"begin": 209,
									"end": 8204,
									"name": "JUMPI",
									"source": 41
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 209,
									"end": 8204,
									"name": "PUSH",
									"source": 41,
									"value": "0"
								},
								{
									"begin": 209,
									"end": 8204,
									"name": "MSTORE",
									"source": 41
								},
								{
									"begin": 209,
									"end": 8204,
									"name": "PUSH",
									"source": 41,
									"value": "0"
								},
								{
									"begin": 209,
									"end": 8204,
									"name": "PUSH",
									"source": 41,
									"value": "4"
								},
								{
									"begin": 209,
									"end": 8204,
									"name": "MSTORE",
									"source": 41
								},
								{
									"begin": 209,
									"end": 8204,
									"name": "PUSH",
									"source": 41,
									"value": "24"
								},
								{
									"begin": 209,
									"end": 8204,
									"name": "PUSH",
									"source": 41,
									"value": "0"
								},
								{
									"begin": 209,
									"end": 8204,
									"name": "REVERT",
									"source": 41
								},
								{
									"begin": 209,
									"end": 8204,
									"name": "tag",
									"source": 41,
									"value": "1"
								},
								{
									"begin": 209,
									"end": 8204,
									"name": "JUMPDEST",
									"source": 41
								},
								{
									"begin": 209,
									"end": 8204,
									"name": "ADDRESS",
									"source": 41
								},
								{
									"begin": 209,
									"end": 8204,
									"name": "PUSH",
									"source": 41,
									"value": "0"
								},
								{
									"begin": 209,
									"end": 8204,
									"name": "MSTORE",
									"source": 41
								},
								{
									"begin": 209,
									"end": 8204,
									"name": "PUSH",
									"source": 41,
									"value": "73"
								},
								{
									"begin": 209,
									"end": 8204,
									"name": "DUP2",
									"source": 41
								},
								{
									"begin": 209,
									"end": 8204,
									"name": "MSTORE8",
									"source": 41
								},
								{
									"begin": 209,
									"end": 8204,
									"name": "DUP3",
									"source": 41
								},
								{
									"begin": 209,
									"end": 8204,
									"name": "DUP2",
									"source": 41
								},
								{
									"begin": 209,
									"end": 8204,
									"name": "RETURN",
									"source": 41
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220b45be420b8d50ef9add848cb32f56395d2e30e110011693c205a30a9687a7c7e64736f6c63430008180033",
									".code": [
										{
											"begin": 209,
											"end": 8204,
											"name": "PUSHDEPLOYADDRESS",
											"source": 41
										},
										{
											"begin": 209,
											"end": 8204,
											"name": "ADDRESS",
											"source": 41
										},
										{
											"begin": 209,
											"end": 8204,
											"name": "EQ",
											"source": 41
										},
										{
											"begin": 209,
											"end": 8204,
											"name": "PUSH",
											"source": 41,
											"value": "80"
										},
										{
											"begin": 209,
											"end": 8204,
											"name": "PUSH",
											"source": 41,
											"value": "40"
										},
										{
											"begin": 209,
											"end": 8204,
											"name": "MSTORE",
											"source": 41
										},
										{
											"begin": 209,
											"end": 8204,
											"name": "PUSH",
											"source": 41,
											"value": "0"
										},
										{
											"begin": 209,
											"end": 8204,
											"name": "DUP1",
											"source": 41
										},
										{
											"begin": 209,
											"end": 8204,
											"name": "REVERT",
											"source": 41
										}
									]
								}
							},
							"sourceList": [
								"@solidstate/contracts/access/ownable/IOwnable.sol",
								"@solidstate/contracts/access/ownable/IOwnableInternal.sol",
								"@solidstate/contracts/access/ownable/ISafeOwnable.sol",
								"@solidstate/contracts/access/ownable/ISafeOwnableInternal.sol",
								"@solidstate/contracts/access/ownable/Ownable.sol",
								"@solidstate/contracts/access/ownable/OwnableInternal.sol",
								"@solidstate/contracts/access/ownable/OwnableStorage.sol",
								"@solidstate/contracts/access/ownable/SafeOwnable.sol",
								"@solidstate/contracts/access/ownable/SafeOwnableInternal.sol",
								"@solidstate/contracts/access/ownable/SafeOwnableStorage.sol",
								"@solidstate/contracts/interfaces/IERC165.sol",
								"@solidstate/contracts/interfaces/IERC165Internal.sol",
								"@solidstate/contracts/interfaces/IERC173.sol",
								"@solidstate/contracts/interfaces/IERC173Internal.sol",
								"@solidstate/contracts/interfaces/IERC2535DiamondCut.sol",
								"@solidstate/contracts/interfaces/IERC2535DiamondCutInternal.sol",
								"@solidstate/contracts/interfaces/IERC2535DiamondLoupe.sol",
								"@solidstate/contracts/interfaces/IERC2535DiamondLoupeInternal.sol",
								"@solidstate/contracts/introspection/ERC165/base/ERC165Base.sol",
								"@solidstate/contracts/introspection/ERC165/base/ERC165BaseInternal.sol",
								"@solidstate/contracts/introspection/ERC165/base/ERC165BaseStorage.sol",
								"@solidstate/contracts/introspection/ERC165/base/IERC165Base.sol",
								"@solidstate/contracts/introspection/ERC165/base/IERC165BaseInternal.sol",
								"@solidstate/contracts/proxy/IProxy.sol",
								"@solidstate/contracts/proxy/Proxy.sol",
								"@solidstate/contracts/proxy/diamond/ISolidStateDiamond.sol",
								"@solidstate/contracts/proxy/diamond/SolidStateDiamond.sol",
								"@solidstate/contracts/proxy/diamond/base/DiamondBase.sol",
								"@solidstate/contracts/proxy/diamond/base/DiamondBaseStorage.sol",
								"@solidstate/contracts/proxy/diamond/base/IDiamondBase.sol",
								"@solidstate/contracts/proxy/diamond/fallback/DiamondFallback.sol",
								"@solidstate/contracts/proxy/diamond/fallback/IDiamondFallback.sol",
								"@solidstate/contracts/proxy/diamond/readable/DiamondReadable.sol",
								"@solidstate/contracts/proxy/diamond/readable/DiamondReadableInternal.sol",
								"@solidstate/contracts/proxy/diamond/readable/IDiamondReadable.sol",
								"@solidstate/contracts/proxy/diamond/readable/IDiamondReadableInternal.sol",
								"@solidstate/contracts/proxy/diamond/writable/DiamondWritable.sol",
								"@solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol",
								"@solidstate/contracts/proxy/diamond/writable/IDiamondWritable.sol",
								"@solidstate/contracts/proxy/diamond/writable/IDiamondWritableInternal.sol",
								"@solidstate/contracts/utils/AddressUtils.sol",
								"@solidstate/contracts/utils/UintUtils.sol",
								"Eip2535/EIp2535Diamond.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"UintUtils__InsufficientPadding\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"UintUtils__InvalidBase\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"derived from https://github.com/OpenZeppelin/openzeppelin-contracts/ (MIT license)\",\"kind\":\"dev\",\"methods\":{},\"title\":\"utility functions for uint256 operations\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@solidstate/contracts/utils/UintUtils.sol\":\"UintUtils\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":900},\"remappings\":[]},\"sources\":{\"@solidstate/contracts/utils/UintUtils.sol\":{\"keccak256\":\"0x1dbd4a2d25d6d3511018319bb752e2fe72b934cbcf31b18e47a286229ce36f1f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e339115b07880370eef2b22f5529050fcf863a34bab9e8ac81be570ae7deb2be\",\"dweb:/ipfs/QmU9KsZQTMffVUnHUGHkf78Yg5orQF9TSk9n1uSgQnkak2\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"Eip2535/EIp2535Diamond.sol": {
				"Eip2535Diamond": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "string",
									"name": "_nameOfCandidate",
									"type": "string"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "_voterCardNo",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "string",
									"name": "_partyName",
									"type": "string"
								}
							],
							"name": "CandidateAdded",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"components": [
										{
											"internalType": "address",
											"name": "facetAddress",
											"type": "address"
										},
										{
											"internalType": "enum IDiamond.FacetCutAction",
											"name": "action",
											"type": "uint8"
										},
										{
											"internalType": "bytes4",
											"name": "functionSelector",
											"type": "bytes4"
										}
									],
									"indexed": false,
									"internalType": "struct IDiamond.FacetCut[]",
									"name": "_diamondCut",
									"type": "tuple[]"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "_init",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bytes",
									"name": "_calldata",
									"type": "bytes"
								}
							],
							"name": "DiamondCut",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "_voterAddress",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "_voterCardNo",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "_partyNumber",
									"type": "uint256"
								}
							],
							"name": "VoteCasted",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "_nameOfCandidate",
									"type": "string"
								},
								{
									"internalType": "uint256",
									"name": "_voterCardNo",
									"type": "uint256"
								},
								{
									"internalType": "string",
									"name": "_partyName",
									"type": "string"
								}
							],
							"name": "addCandidateDetails",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_facet",
									"type": "address"
								}
							],
							"name": "addFacet",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_voterAddress",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_voterCardNo",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_partyNumber",
									"type": "uint256"
								}
							],
							"name": "addVoterDetails",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"components": [
										{
											"internalType": "address",
											"name": "facetAddress",
											"type": "address"
										},
										{
											"internalType": "enum IDiamond.FacetCutAction",
											"name": "action",
											"type": "uint8"
										},
										{
											"internalType": "bytes4",
											"name": "functionSelector",
											"type": "bytes4"
										}
									],
									"internalType": "struct IDiamond.FacetCut[]",
									"name": "_diamondCut",
									"type": "tuple[]"
								},
								{
									"internalType": "address",
									"name": "_init",
									"type": "address"
								},
								{
									"internalType": "bytes",
									"name": "_calldata",
									"type": "bytes"
								}
							],
							"name": "diamondCut",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"Eip2535/EIp2535Diamond.sol\":5267:7153  contract Eip2535Diamond is IDiamond {... */\n  mstore(0x40, 0x80)\n    /* \"Eip2535/EIp2535Diamond.sol\":5336:5385  constructor() {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n    /* \"Eip2535/EIp2535Diamond.sol\":5360:5365  owner */\n  0x00\n    /* \"Eip2535/EIp2535Diamond.sol\":5360:5378  owner = msg.sender */\n  dup1\n  sload\n  not(sub(shl(0xa0, 0x01), 0x01))\n  and\n    /* \"Eip2535/EIp2535Diamond.sol\":5368:5378  msg.sender */\n  caller\n    /* \"Eip2535/EIp2535Diamond.sol\":5360:5378  owner = msg.sender */\n  or\n  swap1\n  sstore\n    /* \"Eip2535/EIp2535Diamond.sol\":5267:7153  contract Eip2535Diamond is IDiamond {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"Eip2535/EIp2535Diamond.sol\":5267:7153  contract Eip2535Diamond is IDiamond {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x8da5cb5b\n      gt\n      tag_8\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x9e97d739\n      eq\n      tag_6\n      jumpi\n      dup1\n      0xa67a117b\n      eq\n      tag_7\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_8:\n      dup1\n      0x13732d79\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x7a26dd31\n      eq\n      tag_4\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"Eip2535/EIp2535Diamond.sol\":6713:6941  function addCandidateDetails(... */\n    tag_3:\n      tag_9\n      tag_10\n      calldatasize\n      0x04\n      tag_11\n      jump\t// in\n    tag_10:\n      tag_12\n      jump\t// in\n    tag_9:\n      stop\n        /* \"Eip2535/EIp2535Diamond.sol\":6947:7151  function addVoterDetails(... */\n    tag_4:\n      tag_9\n      tag_14\n      calldatasize\n      0x04\n      tag_15\n      jump\t// in\n    tag_14:\n      tag_16\n      jump\t// in\n        /* \"Eip2535/EIp2535Diamond.sol\":5309:5329  address public owner */\n    tag_5:\n      sload(0x00)\n      tag_17\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\n    tag_17:\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":2367:2422   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":2349:2423   */\n      dup2\n      mstore\n        /* \"#utility.yul\":2337:2339   */\n      0x20\n        /* \"#utility.yul\":2322:2340   */\n      add\n        /* \"Eip2535/EIp2535Diamond.sol\":5309:5329  address public owner */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Eip2535/EIp2535Diamond.sol\":5869:6707  function diamondCut(... */\n    tag_6:\n      tag_9\n      tag_22\n      calldatasize\n      0x04\n      tag_23\n      jump\t// in\n    tag_22:\n      tag_24\n      jump\t// in\n        /* \"Eip2535/EIp2535Diamond.sol\":5391:5863  function addFacet(address _facet) external {... */\n    tag_7:\n      tag_9\n      tag_26\n      calldatasize\n      0x04\n      tag_27\n      jump\t// in\n    tag_26:\n      tag_28\n      jump\t// in\n        /* \"Eip2535/EIp2535Diamond.sol\":6713:6941  function addCandidateDetails(... */\n    tag_12:\n        /* \"Eip2535/EIp2535Diamond.sol\":6909:6921  _voterCardNo */\n      dup2\n        /* \"Eip2535/EIp2535Diamond.sol\":6876:6934  CandidateAdded(_nameOfCandidate, _voterCardNo, _partyName) */\n      0xdbbc48772584850c2086f66c22a3654c9e46524ff539fd9d72198d91cb7c13c0\n        /* \"Eip2535/EIp2535Diamond.sol\":6891:6907  _nameOfCandidate */\n      dup5\n        /* \"Eip2535/EIp2535Diamond.sol\":6923:6933  _partyName */\n      dup4\n        /* \"Eip2535/EIp2535Diamond.sol\":6876:6934  CandidateAdded(_nameOfCandidate, _voterCardNo, _partyName) */\n      mload(0x40)\n      tag_30\n      swap3\n      swap2\n      swap1\n      tag_31\n      jump\t// in\n    tag_30:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"Eip2535/EIp2535Diamond.sol\":6713:6941  function addCandidateDetails(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"Eip2535/EIp2535Diamond.sol\":6947:7151  function addVoterDetails(... */\n    tag_16:\n        /* \"Eip2535/EIp2535Diamond.sol\":7091:7144  VoteCasted(_voterAddress, _voterCardNo, _partyNumber) */\n      0x40\n      dup1\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":5067:5122   */\n      dup6\n      and\n        /* \"#utility.yul\":5049:5123   */\n      dup2\n      mstore\n        /* \"#utility.yul\":5154:5156   */\n      0x20\n        /* \"#utility.yul\":5139:5157   */\n      dup2\n      add\n        /* \"#utility.yul\":5132:5166   */\n      dup4\n      swap1\n      mstore\n        /* \"Eip2535/EIp2535Diamond.sol\":7117:7129  _voterCardNo */\n      dup4\n      swap2\n        /* \"Eip2535/EIp2535Diamond.sol\":7091:7144  VoteCasted(_voterAddress, _voterCardNo, _partyNumber) */\n      0xcb87df07b1c304492bd875a5c8b98672eca500939412809ea229afef1d745188\n      swap2\n        /* \"#utility.yul\":5022:5040   */\n      add\n        /* \"Eip2535/EIp2535Diamond.sol\":7091:7144  VoteCasted(_voterAddress, _voterCardNo, _partyNumber) */\n      tag_30\n        /* \"#utility.yul\":4875:5172   */\n      jump\n        /* \"Eip2535/EIp2535Diamond.sol\":5869:6707  function diamondCut(... */\n    tag_24:\n        /* \"Eip2535/EIp2535Diamond.sol\":6017:6026  uint256 i */\n      0x00\n        /* \"Eip2535/EIp2535Diamond.sol\":6012:6701  for (uint256 i; i < _diamondCut.length; i++) {... */\n    tag_36:\n        /* \"Eip2535/EIp2535Diamond.sol\":6028:6050  i < _diamondCut.length */\n      dup5\n      dup2\n      lt\n        /* \"Eip2535/EIp2535Diamond.sol\":6012:6701  for (uint256 i; i < _diamondCut.length; i++) {... */\n      iszero\n      tag_37\n      jumpi\n        /* \"Eip2535/EIp2535Diamond.sol\":6114:6115  0 */\n      0x00\n        /* \"Eip2535/EIp2535Diamond.sol\":6075:6086  _diamondCut */\n      dup7\n      dup7\n        /* \"Eip2535/EIp2535Diamond.sol\":6087:6088  i */\n      dup4\n        /* \"Eip2535/EIp2535Diamond.sol\":6075:6089  _diamondCut[i] */\n      dup2\n      dup2\n      lt\n      tag_40\n      jumpi\n      tag_40\n      tag_41\n      jump\t// in\n    tag_40:\n        /* \"Eip2535/EIp2535Diamond.sol\":6075:6102  _diamondCut[i].facetAddress */\n      tag_42\n      swap3\n      0x20\n        /* \"Eip2535/EIp2535Diamond.sol\":6075:6089  _diamondCut[i] */\n      0x60\n      swap1\n      swap3\n      mul\n      add\n        /* \"Eip2535/EIp2535Diamond.sol\":6075:6102  _diamondCut[i].facetAddress */\n      swap1\n      dup2\n      add\n      swap2\n      pop\n      tag_27\n      jump\t// in\n    tag_42:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Eip2535/EIp2535Diamond.sol\":6075:6116  _diamondCut[i].facetAddress == address(0) */\n      and\n      sub\n        /* \"Eip2535/EIp2535Diamond.sol\":6071:6691  if (_diamondCut[i].facetAddress == address(0)) {... */\n      tag_43\n      jumpi\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Eip2535/EIp2535Diamond.sol\":6144:6163  _init != address(0) */\n      dup5\n      and\n        /* \"Eip2535/EIp2535Diamond.sol\":6136:6194  require(_init != address(0), \"Invalid initialize address\") */\n      tag_44\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":5568:5570   */\n      0x20\n        /* \"Eip2535/EIp2535Diamond.sol\":6136:6194  require(_init != address(0), \"Invalid initialize address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":5550:5571   */\n      mstore\n        /* \"#utility.yul\":5607:5609   */\n      0x1a\n        /* \"#utility.yul\":5587:5605   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":5580:5610   */\n      mstore\n        /* \"#utility.yul\":5646:5674   */\n      0x496e76616c696420696e697469616c697a652061646472657373000000000000\n        /* \"#utility.yul\":5626:5644   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":5619:5675   */\n      mstore\n        /* \"#utility.yul\":5692:5710   */\n      0x64\n      add\n        /* \"Eip2535/EIp2535Diamond.sol\":6136:6194  require(_init != address(0), \"Invalid initialize address\") */\n    tag_45:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_44:\n        /* \"Eip2535/EIp2535Diamond.sol\":6212:6217  _init */\n      dup4\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Eip2535/EIp2535Diamond.sol\":6212:6230  _init.delegatecall */\n      and\n        /* \"Eip2535/EIp2535Diamond.sol\":6231:6240  _calldata */\n      dup4\n      dup4\n        /* \"Eip2535/EIp2535Diamond.sol\":6212:6241  _init.delegatecall(_calldata) */\n      mload(0x40)\n      tag_47\n      swap3\n      swap2\n      swap1\n      tag_48\n      jump\t// in\n    tag_47:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      gas\n      delegatecall\n      swap2\n      pop\n      pop\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_51\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_50)\n    tag_51:\n      0x60\n      swap2\n      pop\n    tag_50:\n      pop\n      pop\n      pop\n        /* \"Eip2535/EIp2535Diamond.sol\":6071:6691  if (_diamondCut[i].facetAddress == address(0)) {... */\n      jump(tag_52)\n    tag_43:\n        /* \"Eip2535/EIp2535Diamond.sol\":6281:6293  bool success */\n      0x00\n        /* \"Eip2535/EIp2535Diamond.sol\":6299:6310  _diamondCut */\n      dup7\n      dup7\n        /* \"Eip2535/EIp2535Diamond.sol\":6311:6312  i */\n      dup4\n        /* \"Eip2535/EIp2535Diamond.sol\":6299:6313  _diamondCut[i] */\n      dup2\n      dup2\n      lt\n      tag_54\n      jumpi\n      tag_54\n      tag_41\n      jump\t// in\n    tag_54:\n        /* \"Eip2535/EIp2535Diamond.sol\":6299:6326  _diamondCut[i].facetAddress */\n      tag_55\n      swap3\n      0x20\n        /* \"Eip2535/EIp2535Diamond.sol\":6299:6313  _diamondCut[i] */\n      0x60\n      swap1\n      swap3\n      mul\n      add\n        /* \"Eip2535/EIp2535Diamond.sol\":6299:6326  _diamondCut[i].facetAddress */\n      swap1\n      dup2\n      add\n      swap2\n      pop\n      tag_27\n      jump\t// in\n    tag_55:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Eip2535/EIp2535Diamond.sol\":6299:6339  _diamondCut[i].facetAddress.delegatecall */\n      and\n        /* \"Eip2535/EIp2535Diamond.sol\":6403:6414  _diamondCut */\n      dup8\n      dup8\n        /* \"Eip2535/EIp2535Diamond.sol\":6415:6416  i */\n      dup5\n        /* \"Eip2535/EIp2535Diamond.sol\":6403:6417  _diamondCut[i] */\n      dup2\n      dup2\n      lt\n      tag_57\n      jumpi\n      tag_57\n      tag_41\n      jump\t// in\n    tag_57:\n      swap1\n      pop\n      0x60\n      mul\n      add\n        /* \"Eip2535/EIp2535Diamond.sol\":6403:6434  _diamondCut[i].functionSelector */\n      0x40\n      add\n      0x20\n      dup2\n      add\n      swap1\n      tag_58\n      swap2\n      swap1\n      tag_59\n      jump\t// in\n    tag_58:\n        /* \"Eip2535/EIp2535Diamond.sol\":6471:6482  _diamondCut */\n      dup9\n      dup9\n        /* \"Eip2535/EIp2535Diamond.sol\":6483:6484  i */\n      dup6\n        /* \"Eip2535/EIp2535Diamond.sol\":6471:6485  _diamondCut[i] */\n      dup2\n      dup2\n      lt\n      tag_61\n      jumpi\n      tag_61\n      tag_41\n      jump\t// in\n    tag_61:\n      swap1\n      pop\n      0x60\n      mul\n      add\n        /* \"Eip2535/EIp2535Diamond.sol\":6495:6496  0 */\n      0x00\n        /* \"Eip2535/EIp2535Diamond.sol\":6499:6508  _calldata */\n      dup8\n      dup8\n        /* \"Eip2535/EIp2535Diamond.sol\":6460:6509  abi.encode(_diamondCut[i], address(0), _calldata) */\n      add(0x20, mload(0x40))\n      tag_62\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_63\n      jump\t// in\n    tag_62:\n      0x40\n      dup1\n      mload\n      not(0x1f)\n      dup2\n      dup5\n      sub\n      add\n      dup2\n      mstore\n      swap1\n      dup3\n      swap1\n      mstore\n        /* \"Eip2535/EIp2535Diamond.sol\":6361:6531  abi.encodePacked(... */\n      tag_64\n      swap3\n      swap2\n        /* \"Eip2535/EIp2535Diamond.sol\":6460:6509  abi.encode(_diamondCut[i], address(0), _calldata) */\n      0x20\n        /* \"Eip2535/EIp2535Diamond.sol\":6361:6531  abi.encodePacked(... */\n      add\n      tag_65\n      jump\t// in\n    tag_64:\n      0x40\n      dup1\n      mload\n      not(0x1f)\n      dup2\n      dup5\n      sub\n      add\n      dup2\n      mstore\n      swap1\n      dup3\n      swap1\n      mstore\n        /* \"Eip2535/EIp2535Diamond.sol\":6299:6549  _diamondCut[i].facetAddress.delegatecall(... */\n      tag_66\n      swap2\n      tag_67\n      jump\t// in\n    tag_66:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      gas\n      delegatecall\n      swap2\n      pop\n      pop\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_70\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_69)\n    tag_70:\n      0x60\n      swap2\n      pop\n    tag_69:\n      pop\n        /* \"Eip2535/EIp2535Diamond.sol\":6280:6549  (bool success, ) = _diamondCut[i].facetAddress.delegatecall(... */\n      pop\n      swap1\n      pop\n        /* \"Eip2535/EIp2535Diamond.sol\":6575:6582  success */\n      dup1\n        /* \"Eip2535/EIp2535Diamond.sol\":6567:6612  require(success, \"Facet modification failed\") */\n      tag_71\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":9108:9110   */\n      0x20\n        /* \"Eip2535/EIp2535Diamond.sol\":6567:6612  require(success, \"Facet modification failed\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":9090:9111   */\n      mstore\n        /* \"#utility.yul\":9147:9149   */\n      0x19\n        /* \"#utility.yul\":9127:9145   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":9120:9150   */\n      mstore\n        /* \"#utility.yul\":9186:9213   */\n      0x4661636574206d6f64696669636174696f6e206661696c656400000000000000\n        /* \"#utility.yul\":9166:9184   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":9159:9214   */\n      mstore\n        /* \"#utility.yul\":9231:9249   */\n      0x64\n      add\n        /* \"Eip2535/EIp2535Diamond.sol\":6567:6612  require(success, \"Facet modification failed\") */\n      tag_45\n        /* \"#utility.yul\":8906:9255   */\n      jump\n        /* \"Eip2535/EIp2535Diamond.sol\":6567:6612  require(success, \"Facet modification failed\") */\n    tag_71:\n        /* \"Eip2535/EIp2535Diamond.sol\":6635:6676  DiamondCut(_diamondCut, _init, _calldata) */\n      0xee80746e1d76a7c4654e1a9d2ff0dde8304b0d72803a25eb48c89fd6eae7ebe8\n        /* \"Eip2535/EIp2535Diamond.sol\":6646:6657  _diamondCut */\n      dup8\n      dup8\n        /* \"Eip2535/EIp2535Diamond.sol\":6659:6664  _init */\n      dup8\n        /* \"Eip2535/EIp2535Diamond.sol\":6666:6675  _calldata */\n      dup8\n      dup8\n        /* \"Eip2535/EIp2535Diamond.sol\":6635:6676  DiamondCut(_diamondCut, _init, _calldata) */\n      mload(0x40)\n      tag_74\n      swap6\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_75\n      jump\t// in\n    tag_74:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"Eip2535/EIp2535Diamond.sol\":6262:6691  {... */\n      pop\n        /* \"Eip2535/EIp2535Diamond.sol\":6071:6691  if (_diamondCut[i].facetAddress == address(0)) {... */\n    tag_52:\n        /* \"Eip2535/EIp2535Diamond.sol\":6052:6055  i++ */\n      0x01\n      add\n        /* \"Eip2535/EIp2535Diamond.sol\":6012:6701  for (uint256 i; i < _diamondCut.length; i++) {... */\n      jump(tag_36)\n    tag_37:\n      pop\n        /* \"Eip2535/EIp2535Diamond.sol\":5869:6707  function diamondCut(... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"Eip2535/EIp2535Diamond.sol\":5391:5863  function addFacet(address _facet) external {... */\n    tag_28:\n        /* \"Eip2535/EIp2535Diamond.sol\":5484:5510  new IDiamond.FacetCut[](1) */\n      0x40\n      dup1\n      mload\n        /* \"Eip2535/EIp2535Diamond.sol\":5508:5509  1 */\n      0x01\n        /* \"Eip2535/EIp2535Diamond.sol\":5484:5510  new IDiamond.FacetCut[](1) */\n      dup1\n      dup3\n      mstore\n      dup2\n      dup4\n      add\n      swap1\n      swap3\n      mstore\n        /* \"Eip2535/EIp2535Diamond.sol\":5444:5481  IDiamond.FacetCut[] memory _facetCuts */\n      0x00\n      swap2\n        /* \"Eip2535/EIp2535Diamond.sol\":5484:5510  new IDiamond.FacetCut[](1) */\n      dup2\n      0x20\n      add\n    tag_81:\n      0x40\n      dup1\n      mload\n      0x60\n      dup2\n      add\n      dup3\n      mstore\n      0x00\n      dup1\n      dup3\n      mstore\n      0x20\n      dup1\n      dup4\n      add\n      dup3\n      swap1\n      mstore\n      swap3\n      dup3\n      add\n      mstore\n      dup3\n      mstore\n      not(0x00)\n      swap1\n      swap3\n      add\n      swap2\n      add\n      dup2\n      tag_81\n      jumpi\n      swap1\n      pop\n      pop\n        /* \"Eip2535/EIp2535Diamond.sol\":5536:5773  IDiamond.FacetCut({... */\n      0x40\n      dup1\n      mload\n      0x60\n      dup2\n      add\n      swap1\n      swap2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n      dup5\n      and\n      dup2\n      mstore\n        /* \"Eip2535/EIp2535Diamond.sol\":5444:5510  IDiamond.FacetCut[] memory _facetCuts = new IDiamond.FacetCut[](1) */\n      swap1\n      swap2\n      pop\n        /* \"Eip2535/EIp2535Diamond.sol\":5536:5773  IDiamond.FacetCut({... */\n      0x20\n      dup2\n      add\n      0x00\n      dup2\n      mstore\n      0xfccc64d400000000000000000000000000000000000000000000000000000000\n      0x20\n      swap1\n      swap2\n      add\n      mstore\n        /* \"Eip2535/EIp2535Diamond.sol\":5520:5533  _facetCuts[0] */\n      dup2\n      mload\n        /* \"Eip2535/EIp2535Diamond.sol\":5520:5530  _facetCuts */\n      dup3\n      swap1\n      0x00\n      swap1\n        /* \"Eip2535/EIp2535Diamond.sol\":5520:5533  _facetCuts[0] */\n      tag_88\n      jumpi\n      tag_88\n      tag_41\n      jump\t// in\n    tag_88:\n      0x20\n      swap1\n      dup2\n      mul\n      swap2\n      swap1\n      swap2\n      add\n      add\n        /* \"Eip2535/EIp2535Diamond.sol\":5520:5773  _facetCuts[0] = IDiamond.FacetCut({... */\n      mstore\n        /* \"Eip2535/EIp2535Diamond.sol\":5783:5845  IDiamond(address(this)).diamondCut(_facetCuts, address(0), \"\") */\n      mload(0x40)\n      0x9e97d73900000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n        /* \"Eip2535/EIp2535Diamond.sol\":5800:5804  this */\n      address\n      swap1\n        /* \"Eip2535/EIp2535Diamond.sol\":5783:5817  IDiamond(address(this)).diamondCut */\n      0x9e97d739\n      swap1\n        /* \"Eip2535/EIp2535Diamond.sol\":5783:5845  IDiamond(address(this)).diamondCut(_facetCuts, address(0), \"\") */\n      tag_89\n      swap1\n        /* \"Eip2535/EIp2535Diamond.sol\":5818:5828  _facetCuts */\n      dup5\n      swap1\n        /* \"Eip2535/EIp2535Diamond.sol\":5838:5839  0 */\n      0x00\n      swap1\n        /* \"Eip2535/EIp2535Diamond.sol\":5783:5845  IDiamond(address(this)).diamondCut(_facetCuts, address(0), \"\") */\n      0x04\n      add\n      tag_90\n      jump\t// in\n    tag_89:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_91\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_91:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_37\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n        /* \"#utility.yul\":14:198   */\n    tag_79:\n      shl(0xe0, 0x4e487b71)\n        /* \"#utility.yul\":63:64   */\n      0x00\n        /* \"#utility.yul\":56:144   */\n      mstore\n        /* \"#utility.yul\":163:167   */\n      0x41\n        /* \"#utility.yul\":160:161   */\n      0x04\n        /* \"#utility.yul\":153:168   */\n      mstore\n        /* \"#utility.yul\":187:191   */\n      0x24\n        /* \"#utility.yul\":184:185   */\n      0x00\n        /* \"#utility.yul\":177:192   */\n      revert\n        /* \"#utility.yul\":203:922   */\n    tag_96:\n        /* \"#utility.yul\":246:251   */\n      0x00\n        /* \"#utility.yul\":299:302   */\n      dup3\n        /* \"#utility.yul\":292:296   */\n      0x1f\n        /* \"#utility.yul\":284:290   */\n      dup4\n        /* \"#utility.yul\":280:297   */\n      add\n        /* \"#utility.yul\":276:303   */\n      slt\n        /* \"#utility.yul\":266:321   */\n      tag_109\n      jumpi\n        /* \"#utility.yul\":317:318   */\n      0x00\n        /* \"#utility.yul\":314:315   */\n      dup1\n        /* \"#utility.yul\":307:319   */\n      revert\n        /* \"#utility.yul\":266:321   */\n    tag_109:\n        /* \"#utility.yul\":353:359   */\n      dup2\n        /* \"#utility.yul\":340:360   */\n      calldataload\n        /* \"#utility.yul\":379:397   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":416:418   */\n      dup1\n        /* \"#utility.yul\":412:414   */\n      dup3\n        /* \"#utility.yul\":409:419   */\n      gt\n        /* \"#utility.yul\":406:442   */\n      iszero\n      tag_111\n      jumpi\n        /* \"#utility.yul\":422:440   */\n      tag_111\n      tag_79\n      jump\t// in\n    tag_111:\n        /* \"#utility.yul\":497:499   */\n      0x40\n        /* \"#utility.yul\":491:500   */\n      mload\n        /* \"#utility.yul\":465:467   */\n      0x1f\n        /* \"#utility.yul\":551:564   */\n      dup4\n      add\n      not(0x1f)\n        /* \"#utility.yul\":547:569   */\n      swap1\n      dup2\n      and\n        /* \"#utility.yul\":571:573   */\n      0x3f\n        /* \"#utility.yul\":543:574   */\n      add\n        /* \"#utility.yul\":539:579   */\n      and\n        /* \"#utility.yul\":527:580   */\n      dup2\n      add\n      swap1\n        /* \"#utility.yul\":595:613   */\n      dup3\n      dup3\n      gt\n        /* \"#utility.yul\":615:637   */\n      dup2\n      dup4\n      lt\n        /* \"#utility.yul\":592:638   */\n      or\n        /* \"#utility.yul\":589:661   */\n      iszero\n      tag_113\n      jumpi\n        /* \"#utility.yul\":641:659   */\n      tag_113\n      tag_79\n      jump\t// in\n    tag_113:\n        /* \"#utility.yul\":681:691   */\n      dup2\n        /* \"#utility.yul\":677:679   */\n      0x40\n        /* \"#utility.yul\":670:692   */\n      mstore\n        /* \"#utility.yul\":716:718   */\n      dup4\n        /* \"#utility.yul\":708:714   */\n      dup2\n        /* \"#utility.yul\":701:719   */\n      mstore\n        /* \"#utility.yul\":762:765   */\n      dup7\n        /* \"#utility.yul\":755:759   */\n      0x20\n        /* \"#utility.yul\":750:752   */\n      dup6\n        /* \"#utility.yul\":742:748   */\n      dup9\n        /* \"#utility.yul\":738:753   */\n      add\n        /* \"#utility.yul\":734:760   */\n      add\n        /* \"#utility.yul\":731:766   */\n      gt\n        /* \"#utility.yul\":728:783   */\n      iszero\n      tag_114\n      jumpi\n        /* \"#utility.yul\":779:780   */\n      0x00\n        /* \"#utility.yul\":776:777   */\n      dup1\n        /* \"#utility.yul\":769:781   */\n      revert\n        /* \"#utility.yul\":728:783   */\n    tag_114:\n        /* \"#utility.yul\":843:845   */\n      dup4\n        /* \"#utility.yul\":836:840   */\n      0x20\n        /* \"#utility.yul\":828:834   */\n      dup8\n        /* \"#utility.yul\":824:841   */\n      add\n        /* \"#utility.yul\":817:821   */\n      0x20\n        /* \"#utility.yul\":809:815   */\n      dup4\n        /* \"#utility.yul\":805:822   */\n      add\n        /* \"#utility.yul\":792:846   */\n      calldatacopy\n        /* \"#utility.yul\":890:891   */\n      0x00\n        /* \"#utility.yul\":883:887   */\n      0x20\n        /* \"#utility.yul\":878:880   */\n      dup6\n        /* \"#utility.yul\":870:876   */\n      dup4\n        /* \"#utility.yul\":866:881   */\n      add\n        /* \"#utility.yul\":862:888   */\n      add\n        /* \"#utility.yul\":855:892   */\n      mstore\n        /* \"#utility.yul\":910:916   */\n      dup1\n        /* \"#utility.yul\":901:916   */\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":203:922   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":927:1538   */\n    tag_11:\n        /* \"#utility.yul\":1024:1030   */\n      0x00\n        /* \"#utility.yul\":1032:1038   */\n      dup1\n        /* \"#utility.yul\":1040:1046   */\n      0x00\n        /* \"#utility.yul\":1093:1095   */\n      0x60\n        /* \"#utility.yul\":1081:1090   */\n      dup5\n        /* \"#utility.yul\":1072:1079   */\n      dup7\n        /* \"#utility.yul\":1068:1091   */\n      sub\n        /* \"#utility.yul\":1064:1096   */\n      slt\n        /* \"#utility.yul\":1061:1113   */\n      iszero\n      tag_116\n      jumpi\n        /* \"#utility.yul\":1109:1110   */\n      0x00\n        /* \"#utility.yul\":1106:1107   */\n      dup1\n        /* \"#utility.yul\":1099:1111   */\n      revert\n        /* \"#utility.yul\":1061:1113   */\n    tag_116:\n        /* \"#utility.yul\":1149:1158   */\n      dup4\n        /* \"#utility.yul\":1136:1159   */\n      calldataload\n        /* \"#utility.yul\":1178:1196   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":1219:1221   */\n      dup1\n        /* \"#utility.yul\":1211:1217   */\n      dup3\n        /* \"#utility.yul\":1208:1222   */\n      gt\n        /* \"#utility.yul\":1205:1239   */\n      iszero\n      tag_117\n      jumpi\n        /* \"#utility.yul\":1235:1236   */\n      0x00\n        /* \"#utility.yul\":1232:1233   */\n      dup1\n        /* \"#utility.yul\":1225:1237   */\n      revert\n        /* \"#utility.yul\":1205:1239   */\n    tag_117:\n        /* \"#utility.yul\":1258:1308   */\n      tag_118\n        /* \"#utility.yul\":1300:1307   */\n      dup8\n        /* \"#utility.yul\":1291:1297   */\n      dup4\n        /* \"#utility.yul\":1280:1289   */\n      dup9\n        /* \"#utility.yul\":1276:1298   */\n      add\n        /* \"#utility.yul\":1258:1308   */\n      tag_96\n      jump\t// in\n    tag_118:\n        /* \"#utility.yul\":1248:1308   */\n      swap5\n      pop\n        /* \"#utility.yul\":1355:1357   */\n      0x20\n        /* \"#utility.yul\":1344:1353   */\n      dup7\n        /* \"#utility.yul\":1340:1358   */\n      add\n        /* \"#utility.yul\":1327:1359   */\n      calldataload\n        /* \"#utility.yul\":1317:1359   */\n      swap4\n      pop\n        /* \"#utility.yul\":1412:1414   */\n      0x40\n        /* \"#utility.yul\":1401:1410   */\n      dup7\n        /* \"#utility.yul\":1397:1415   */\n      add\n        /* \"#utility.yul\":1384:1416   */\n      calldataload\n        /* \"#utility.yul\":1368:1416   */\n      swap2\n      pop\n        /* \"#utility.yul\":1441:1443   */\n      dup1\n        /* \"#utility.yul\":1431:1439   */\n      dup3\n        /* \"#utility.yul\":1428:1444   */\n      gt\n        /* \"#utility.yul\":1425:1461   */\n      iszero\n      tag_119\n      jumpi\n        /* \"#utility.yul\":1457:1458   */\n      0x00\n        /* \"#utility.yul\":1454:1455   */\n      dup1\n        /* \"#utility.yul\":1447:1459   */\n      revert\n        /* \"#utility.yul\":1425:1461   */\n    tag_119:\n      pop\n        /* \"#utility.yul\":1480:1532   */\n      tag_120\n        /* \"#utility.yul\":1524:1531   */\n      dup7\n        /* \"#utility.yul\":1513:1521   */\n      dup3\n        /* \"#utility.yul\":1502:1511   */\n      dup8\n        /* \"#utility.yul\":1498:1522   */\n      add\n        /* \"#utility.yul\":1480:1532   */\n      tag_96\n      jump\t// in\n    tag_120:\n        /* \"#utility.yul\":1470:1532   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":927:1538   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":1543:1739   */\n    tag_97:\n        /* \"#utility.yul\":1611:1631   */\n      dup1\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":1660:1714   */\n      dup2\n      and\n        /* \"#utility.yul\":1650:1715   */\n      dup2\n      eq\n        /* \"#utility.yul\":1640:1733   */\n      tag_122\n      jumpi\n        /* \"#utility.yul\":1729:1730   */\n      0x00\n        /* \"#utility.yul\":1726:1727   */\n      dup1\n        /* \"#utility.yul\":1719:1731   */\n      revert\n        /* \"#utility.yul\":1640:1733   */\n    tag_122:\n        /* \"#utility.yul\":1543:1739   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1744:2066   */\n    tag_15:\n        /* \"#utility.yul\":1821:1827   */\n      0x00\n        /* \"#utility.yul\":1829:1835   */\n      dup1\n        /* \"#utility.yul\":1837:1843   */\n      0x00\n        /* \"#utility.yul\":1890:1892   */\n      0x60\n        /* \"#utility.yul\":1878:1887   */\n      dup5\n        /* \"#utility.yul\":1869:1876   */\n      dup7\n        /* \"#utility.yul\":1865:1888   */\n      sub\n        /* \"#utility.yul\":1861:1893   */\n      slt\n        /* \"#utility.yul\":1858:1910   */\n      iszero\n      tag_124\n      jumpi\n        /* \"#utility.yul\":1906:1907   */\n      0x00\n        /* \"#utility.yul\":1903:1904   */\n      dup1\n        /* \"#utility.yul\":1896:1908   */\n      revert\n        /* \"#utility.yul\":1858:1910   */\n    tag_124:\n        /* \"#utility.yul\":1929:1958   */\n      tag_125\n        /* \"#utility.yul\":1948:1957   */\n      dup5\n        /* \"#utility.yul\":1929:1958   */\n      tag_97\n      jump\t// in\n    tag_125:\n        /* \"#utility.yul\":1919:1958   */\n      swap6\n        /* \"#utility.yul\":2005:2007   */\n      0x20\n        /* \"#utility.yul\":1990:2008   */\n      dup6\n      add\n        /* \"#utility.yul\":1977:2009   */\n      calldataload\n      swap6\n      pop\n        /* \"#utility.yul\":2056:2058   */\n      0x40\n        /* \"#utility.yul\":2041:2059   */\n      swap1\n      swap5\n      add\n        /* \"#utility.yul\":2028:2060   */\n      calldataload\n      swap4\n        /* \"#utility.yul\":1744:2066   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2434:3618   */\n    tag_23:\n        /* \"#utility.yul\":2577:2583   */\n      0x00\n        /* \"#utility.yul\":2585:2591   */\n      dup1\n        /* \"#utility.yul\":2593:2599   */\n      0x00\n        /* \"#utility.yul\":2601:2607   */\n      dup1\n        /* \"#utility.yul\":2609:2615   */\n      0x00\n        /* \"#utility.yul\":2662:2664   */\n      0x60\n        /* \"#utility.yul\":2650:2659   */\n      dup7\n        /* \"#utility.yul\":2641:2648   */\n      dup9\n        /* \"#utility.yul\":2637:2660   */\n      sub\n        /* \"#utility.yul\":2633:2665   */\n      slt\n        /* \"#utility.yul\":2630:2682   */\n      iszero\n      tag_129\n      jumpi\n        /* \"#utility.yul\":2678:2679   */\n      0x00\n        /* \"#utility.yul\":2675:2676   */\n      dup1\n        /* \"#utility.yul\":2668:2680   */\n      revert\n        /* \"#utility.yul\":2630:2682   */\n    tag_129:\n        /* \"#utility.yul\":2718:2727   */\n      dup6\n        /* \"#utility.yul\":2705:2728   */\n      calldataload\n        /* \"#utility.yul\":2747:2765   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":2788:2790   */\n      dup1\n        /* \"#utility.yul\":2780:2786   */\n      dup3\n        /* \"#utility.yul\":2777:2791   */\n      gt\n        /* \"#utility.yul\":2774:2808   */\n      iszero\n      tag_130\n      jumpi\n        /* \"#utility.yul\":2804:2805   */\n      0x00\n        /* \"#utility.yul\":2801:2802   */\n      dup1\n        /* \"#utility.yul\":2794:2806   */\n      revert\n        /* \"#utility.yul\":2774:2808   */\n    tag_130:\n        /* \"#utility.yul\":2842:2848   */\n      dup2\n        /* \"#utility.yul\":2831:2840   */\n      dup9\n        /* \"#utility.yul\":2827:2849   */\n      add\n        /* \"#utility.yul\":2817:2849   */\n      swap2\n      pop\n        /* \"#utility.yul\":2887:2894   */\n      dup9\n        /* \"#utility.yul\":2880:2884   */\n      0x1f\n        /* \"#utility.yul\":2876:2878   */\n      dup4\n        /* \"#utility.yul\":2872:2885   */\n      add\n        /* \"#utility.yul\":2868:2895   */\n      slt\n        /* \"#utility.yul\":2858:2913   */\n      tag_131\n      jumpi\n        /* \"#utility.yul\":2909:2910   */\n      0x00\n        /* \"#utility.yul\":2906:2907   */\n      dup1\n        /* \"#utility.yul\":2899:2911   */\n      revert\n        /* \"#utility.yul\":2858:2913   */\n    tag_131:\n        /* \"#utility.yul\":2949:2951   */\n      dup2\n        /* \"#utility.yul\":2936:2952   */\n      calldataload\n        /* \"#utility.yul\":2975:2977   */\n      dup2\n        /* \"#utility.yul\":2967:2973   */\n      dup2\n        /* \"#utility.yul\":2964:2978   */\n      gt\n        /* \"#utility.yul\":2961:2995   */\n      iszero\n      tag_132\n      jumpi\n        /* \"#utility.yul\":2991:2992   */\n      0x00\n        /* \"#utility.yul\":2988:2989   */\n      dup1\n        /* \"#utility.yul\":2981:2993   */\n      revert\n        /* \"#utility.yul\":2961:2995   */\n    tag_132:\n        /* \"#utility.yul\":3047:3054   */\n      dup10\n        /* \"#utility.yul\":3040:3044   */\n      0x20\n        /* \"#utility.yul\":3034:3036   */\n      0x60\n        /* \"#utility.yul\":3026:3032   */\n      dup4\n        /* \"#utility.yul\":3022:3037   */\n      mul\n        /* \"#utility.yul\":3018:3020   */\n      dup6\n        /* \"#utility.yul\":3014:3038   */\n      add\n        /* \"#utility.yul\":3010:3045   */\n      add\n        /* \"#utility.yul\":3007:3055   */\n      gt\n        /* \"#utility.yul\":3004:3072   */\n      iszero\n      tag_133\n      jumpi\n        /* \"#utility.yul\":3068:3069   */\n      0x00\n        /* \"#utility.yul\":3065:3066   */\n      dup1\n        /* \"#utility.yul\":3058:3070   */\n      revert\n        /* \"#utility.yul\":3004:3072   */\n    tag_133:\n        /* \"#utility.yul\":3099:3103   */\n      0x20\n        /* \"#utility.yul\":3095:3097   */\n      dup4\n        /* \"#utility.yul\":3091:3104   */\n      add\n        /* \"#utility.yul\":3081:3104   */\n      swap8\n      pop\n        /* \"#utility.yul\":3123:3129   */\n      dup1\n        /* \"#utility.yul\":3113:3129   */\n      swap7\n      pop\n      pop\n        /* \"#utility.yul\":3148:3188   */\n      tag_134\n        /* \"#utility.yul\":3182:3186   */\n      0x20\n        /* \"#utility.yul\":3171:3180   */\n      dup10\n        /* \"#utility.yul\":3167:3187   */\n      add\n        /* \"#utility.yul\":3148:3188   */\n      tag_97\n      jump\t// in\n    tag_134:\n        /* \"#utility.yul\":3138:3188   */\n      swap5\n      pop\n        /* \"#utility.yul\":3241:3243   */\n      0x40\n        /* \"#utility.yul\":3230:3239   */\n      dup9\n        /* \"#utility.yul\":3226:3244   */\n      add\n        /* \"#utility.yul\":3213:3245   */\n      calldataload\n        /* \"#utility.yul\":3197:3245   */\n      swap2\n      pop\n        /* \"#utility.yul\":3270:3272   */\n      dup1\n        /* \"#utility.yul\":3260:3268   */\n      dup3\n        /* \"#utility.yul\":3257:3273   */\n      gt\n        /* \"#utility.yul\":3254:3290   */\n      iszero\n      tag_135\n      jumpi\n        /* \"#utility.yul\":3286:3287   */\n      0x00\n        /* \"#utility.yul\":3283:3284   */\n      dup1\n        /* \"#utility.yul\":3276:3288   */\n      revert\n        /* \"#utility.yul\":3254:3290   */\n    tag_135:\n        /* \"#utility.yul\":3324:3332   */\n      dup2\n        /* \"#utility.yul\":3313:3322   */\n      dup9\n        /* \"#utility.yul\":3309:3333   */\n      add\n        /* \"#utility.yul\":3299:3333   */\n      swap2\n      pop\n        /* \"#utility.yul\":3371:3378   */\n      dup9\n        /* \"#utility.yul\":3364:3368   */\n      0x1f\n        /* \"#utility.yul\":3360:3362   */\n      dup4\n        /* \"#utility.yul\":3356:3369   */\n      add\n        /* \"#utility.yul\":3352:3379   */\n      slt\n        /* \"#utility.yul\":3342:3397   */\n      tag_136\n      jumpi\n        /* \"#utility.yul\":3393:3394   */\n      0x00\n        /* \"#utility.yul\":3390:3391   */\n      dup1\n        /* \"#utility.yul\":3383:3395   */\n      revert\n        /* \"#utility.yul\":3342:3397   */\n    tag_136:\n        /* \"#utility.yul\":3435:3437   */\n      dup2\n        /* \"#utility.yul\":3422:3438   */\n      calldataload\n        /* \"#utility.yul\":3463:3465   */\n      dup2\n        /* \"#utility.yul\":3453:3461   */\n      dup2\n        /* \"#utility.yul\":3450:3466   */\n      gt\n        /* \"#utility.yul\":3447:3483   */\n      iszero\n      tag_137\n      jumpi\n        /* \"#utility.yul\":3479:3480   */\n      0x00\n        /* \"#utility.yul\":3476:3477   */\n      dup1\n        /* \"#utility.yul\":3469:3481   */\n      revert\n        /* \"#utility.yul\":3447:3483   */\n    tag_137:\n        /* \"#utility.yul\":3528:3535   */\n      dup10\n        /* \"#utility.yul\":3521:3525   */\n      0x20\n        /* \"#utility.yul\":3510:3518   */\n      dup3\n        /* \"#utility.yul\":3506:3508   */\n      dup6\n        /* \"#utility.yul\":3502:3519   */\n      add\n        /* \"#utility.yul\":3498:3526   */\n      add\n        /* \"#utility.yul\":3495:3536   */\n      gt\n        /* \"#utility.yul\":3492:3553   */\n      iszero\n      tag_138\n      jumpi\n        /* \"#utility.yul\":3549:3550   */\n      0x00\n        /* \"#utility.yul\":3546:3547   */\n      dup1\n        /* \"#utility.yul\":3539:3551   */\n      revert\n        /* \"#utility.yul\":3492:3553   */\n    tag_138:\n        /* \"#utility.yul\":2434:3618   */\n      swap7\n      swap10\n      swap6\n      swap9\n      pop\n      swap4\n      swap7\n      pop\n        /* \"#utility.yul\":3580:3584   */\n      0x20\n        /* \"#utility.yul\":3572:3585   */\n      add\n      swap5\n        /* \"#utility.yul\":3604:3612   */\n      swap4\n        /* \"#utility.yul\":2434:3618   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3623:3809   */\n    tag_27:\n        /* \"#utility.yul\":3682:3688   */\n      0x00\n        /* \"#utility.yul\":3735:3737   */\n      0x20\n        /* \"#utility.yul\":3723:3732   */\n      dup3\n        /* \"#utility.yul\":3714:3721   */\n      dup5\n        /* \"#utility.yul\":3710:3733   */\n      sub\n        /* \"#utility.yul\":3706:3738   */\n      slt\n        /* \"#utility.yul\":3703:3755   */\n      iszero\n      tag_140\n      jumpi\n        /* \"#utility.yul\":3751:3752   */\n      0x00\n        /* \"#utility.yul\":3748:3749   */\n      dup1\n        /* \"#utility.yul\":3741:3753   */\n      revert\n        /* \"#utility.yul\":3703:3755   */\n    tag_140:\n        /* \"#utility.yul\":3774:3803   */\n      tag_141\n        /* \"#utility.yul\":3793:3802   */\n      dup3\n        /* \"#utility.yul\":3774:3803   */\n      tag_97\n      jump\t// in\n    tag_141:\n        /* \"#utility.yul\":3764:3803   */\n      swap4\n        /* \"#utility.yul\":3623:3809   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3956:4206   */\n    tag_100:\n        /* \"#utility.yul\":4041:4042   */\n      0x00\n        /* \"#utility.yul\":4051:4164   */\n    tag_144:\n        /* \"#utility.yul\":4065:4071   */\n      dup4\n        /* \"#utility.yul\":4062:4063   */\n      dup2\n        /* \"#utility.yul\":4059:4072   */\n      lt\n        /* \"#utility.yul\":4051:4164   */\n      iszero\n      tag_146\n      jumpi\n        /* \"#utility.yul\":4141:4152   */\n      dup2\n      dup2\n      add\n        /* \"#utility.yul\":4135:4153   */\n      mload\n        /* \"#utility.yul\":4122:4133   */\n      dup4\n      dup3\n      add\n        /* \"#utility.yul\":4115:4154   */\n      mstore\n        /* \"#utility.yul\":4087:4089   */\n      0x20\n        /* \"#utility.yul\":4080:4090   */\n      add\n        /* \"#utility.yul\":4051:4164   */\n      jump(tag_144)\n    tag_146:\n      pop\n      pop\n        /* \"#utility.yul\":4198:4199   */\n      0x00\n        /* \"#utility.yul\":4180:4196   */\n      swap2\n      add\n        /* \"#utility.yul\":4173:4200   */\n      mstore\n        /* \"#utility.yul\":3956:4206   */\n      jump\t// out\n        /* \"#utility.yul\":4211:4482   */\n    tag_101:\n        /* \"#utility.yul\":4253:4256   */\n      0x00\n        /* \"#utility.yul\":4291:4296   */\n      dup2\n        /* \"#utility.yul\":4285:4297   */\n      mload\n        /* \"#utility.yul\":4318:4324   */\n      dup1\n        /* \"#utility.yul\":4313:4316   */\n      dup5\n        /* \"#utility.yul\":4306:4325   */\n      mstore\n        /* \"#utility.yul\":4334:4410   */\n      tag_148\n        /* \"#utility.yul\":4403:4409   */\n      dup2\n        /* \"#utility.yul\":4396:4400   */\n      0x20\n        /* \"#utility.yul\":4391:4394   */\n      dup7\n        /* \"#utility.yul\":4387:4401   */\n      add\n        /* \"#utility.yul\":4380:4384   */\n      0x20\n        /* \"#utility.yul\":4373:4378   */\n      dup7\n        /* \"#utility.yul\":4369:4385   */\n      add\n        /* \"#utility.yul\":4334:4410   */\n      tag_100\n      jump\t// in\n    tag_148:\n        /* \"#utility.yul\":4464:4466   */\n      0x1f\n        /* \"#utility.yul\":4443:4458   */\n      add\n      not(0x1f)\n        /* \"#utility.yul\":4439:4468   */\n      and\n        /* \"#utility.yul\":4430:4469   */\n      swap3\n      swap1\n      swap3\n      add\n        /* \"#utility.yul\":4471:4475   */\n      0x20\n        /* \"#utility.yul\":4426:4476   */\n      add\n      swap3\n        /* \"#utility.yul\":4211:4482   */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4487:4870   */\n    tag_31:\n        /* \"#utility.yul\":4684:4686   */\n      0x40\n        /* \"#utility.yul\":4673:4682   */\n      dup2\n        /* \"#utility.yul\":4666:4687   */\n      mstore\n        /* \"#utility.yul\":4647:4651   */\n      0x00\n        /* \"#utility.yul\":4710:4755   */\n      tag_150\n        /* \"#utility.yul\":4751:4753   */\n      0x40\n        /* \"#utility.yul\":4740:4749   */\n      dup4\n        /* \"#utility.yul\":4736:4754   */\n      add\n        /* \"#utility.yul\":4728:4734   */\n      dup6\n        /* \"#utility.yul\":4710:4755   */\n      tag_101\n      jump\t// in\n    tag_150:\n        /* \"#utility.yul\":4803:4812   */\n      dup3\n        /* \"#utility.yul\":4795:4801   */\n      dup2\n        /* \"#utility.yul\":4791:4813   */\n      sub\n        /* \"#utility.yul\":4786:4788   */\n      0x20\n        /* \"#utility.yul\":4775:4784   */\n      dup5\n        /* \"#utility.yul\":4771:4789   */\n      add\n        /* \"#utility.yul\":4764:4814   */\n      mstore\n        /* \"#utility.yul\":4831:4864   */\n      tag_151\n        /* \"#utility.yul\":4857:4863   */\n      dup2\n        /* \"#utility.yul\":4849:4855   */\n      dup6\n        /* \"#utility.yul\":4831:4864   */\n      tag_101\n      jump\t// in\n    tag_151:\n        /* \"#utility.yul\":4823:4864   */\n      swap6\n        /* \"#utility.yul\":4487:4870   */\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5177:5361   */\n    tag_41:\n      shl(0xe0, 0x4e487b71)\n        /* \"#utility.yul\":5226:5227   */\n      0x00\n        /* \"#utility.yul\":5219:5307   */\n      mstore\n        /* \"#utility.yul\":5326:5330   */\n      0x32\n        /* \"#utility.yul\":5323:5324   */\n      0x04\n        /* \"#utility.yul\":5316:5331   */\n      mstore\n        /* \"#utility.yul\":5350:5354   */\n      0x24\n        /* \"#utility.yul\":5347:5348   */\n      0x00\n        /* \"#utility.yul\":5340:5355   */\n      revert\n        /* \"#utility.yul\":5721:5992   */\n    tag_48:\n        /* \"#utility.yul\":5904:5910   */\n      dup2\n        /* \"#utility.yul\":5896:5902   */\n      dup4\n        /* \"#utility.yul\":5891:5894   */\n      dup3\n        /* \"#utility.yul\":5878:5911   */\n      calldatacopy\n        /* \"#utility.yul\":5860:5863   */\n      0x00\n        /* \"#utility.yul\":5930:5946   */\n      swap2\n      add\n        /* \"#utility.yul\":5955:5968   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":5930:5946   */\n      swap2\n        /* \"#utility.yul\":5721:5992   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5997:6216   */\n    tag_102:\n        /* \"#utility.yul\":6064:6084   */\n      dup1\n      calldataload\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"#utility.yul\":6113:6191   */\n      dup2\n      and\n        /* \"#utility.yul\":6103:6192   */\n      dup2\n      eq\n        /* \"#utility.yul\":6093:6210   */\n      tag_122\n      jumpi\n        /* \"#utility.yul\":6206:6207   */\n      0x00\n        /* \"#utility.yul\":6203:6204   */\n      dup1\n        /* \"#utility.yul\":6196:6208   */\n      revert\n        /* \"#utility.yul\":6221:6405   */\n    tag_59:\n        /* \"#utility.yul\":6279:6285   */\n      0x00\n        /* \"#utility.yul\":6332:6334   */\n      0x20\n        /* \"#utility.yul\":6320:6329   */\n      dup3\n        /* \"#utility.yul\":6311:6318   */\n      dup5\n        /* \"#utility.yul\":6307:6330   */\n      sub\n        /* \"#utility.yul\":6303:6335   */\n      slt\n        /* \"#utility.yul\":6300:6352   */\n      iszero\n      tag_159\n      jumpi\n        /* \"#utility.yul\":6348:6349   */\n      0x00\n        /* \"#utility.yul\":6345:6346   */\n      dup1\n        /* \"#utility.yul\":6338:6350   */\n      revert\n        /* \"#utility.yul\":6300:6352   */\n    tag_159:\n        /* \"#utility.yul\":6371:6399   */\n      tag_141\n        /* \"#utility.yul\":6389:6398   */\n      dup3\n        /* \"#utility.yul\":6371:6399   */\n      tag_102\n      jump\t// in\n        /* \"#utility.yul\":6599:6898   */\n    tag_103:\n        /* \"#utility.yul\":6685:6686   */\n      0x03\n        /* \"#utility.yul\":6678:6683   */\n      dup2\n        /* \"#utility.yul\":6675:6687   */\n      lt\n        /* \"#utility.yul\":6665:6865   */\n      tag_163\n      jumpi\n      shl(0xe0, 0x4e487b71)\n        /* \"#utility.yul\":6718:6719   */\n      0x00\n        /* \"#utility.yul\":6711:6799   */\n      mstore\n        /* \"#utility.yul\":6822:6826   */\n      0x21\n        /* \"#utility.yul\":6819:6820   */\n      0x04\n        /* \"#utility.yul\":6812:6827   */\n      mstore\n        /* \"#utility.yul\":6850:6854   */\n      0x24\n        /* \"#utility.yul\":6847:6848   */\n      0x00\n        /* \"#utility.yul\":6840:6855   */\n      revert\n        /* \"#utility.yul\":6665:6865   */\n    tag_163:\n        /* \"#utility.yul\":6874:6892   */\n      swap1\n      mstore\n        /* \"#utility.yul\":6599:6898   */\n      jump\t// out\n        /* \"#utility.yul\":6903:7377   */\n    tag_104:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":6990:7015   */\n      tag_165\n        /* \"#utility.yul\":7009:7014   */\n      dup3\n        /* \"#utility.yul\":6990:7015   */\n      tag_97\n      jump\t// in\n    tag_165:\n        /* \"#utility.yul\":6986:7060   */\n      and\n        /* \"#utility.yul\":6981:6984   */\n      dup3\n        /* \"#utility.yul\":6974:7061   */\n      mstore\n        /* \"#utility.yul\":7109:7113   */\n      0x20\n        /* \"#utility.yul\":7102:7107   */\n      dup2\n        /* \"#utility.yul\":7098:7114   */\n      add\n        /* \"#utility.yul\":7085:7115   */\n      calldataload\n        /* \"#utility.yul\":7146:7147   */\n      0x03\n        /* \"#utility.yul\":7137:7144   */\n      dup2\n        /* \"#utility.yul\":7134:7148   */\n      lt\n        /* \"#utility.yul\":7124:7166   */\n      tag_166\n      jumpi\n        /* \"#utility.yul\":7162:7163   */\n      0x00\n        /* \"#utility.yul\":7159:7160   */\n      dup1\n        /* \"#utility.yul\":7152:7164   */\n      revert\n        /* \"#utility.yul\":7124:7166   */\n    tag_166:\n        /* \"#utility.yul\":7175:7230   */\n      tag_167\n        /* \"#utility.yul\":7224:7228   */\n      0x20\n        /* \"#utility.yul\":7219:7222   */\n      dup5\n        /* \"#utility.yul\":7215:7229   */\n      add\n        /* \"#utility.yul\":7206:7213   */\n      dup3\n        /* \"#utility.yul\":7175:7230   */\n      tag_103\n      jump\t// in\n    tag_167:\n      pop\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"#utility.yul\":7266:7301   */\n      tag_168\n        /* \"#utility.yul\":7295:7299   */\n      0x40\n        /* \"#utility.yul\":7288:7293   */\n      dup4\n        /* \"#utility.yul\":7284:7300   */\n      add\n        /* \"#utility.yul\":7266:7301   */\n      tag_102\n      jump\t// in\n    tag_168:\n        /* \"#utility.yul\":7262:7370   */\n      and\n        /* \"#utility.yul\":7255:7259   */\n      0x40\n        /* \"#utility.yul\":7250:7253   */\n      dup4\n        /* \"#utility.yul\":7246:7260   */\n      add\n        /* \"#utility.yul\":7239:7371   */\n      mstore\n        /* \"#utility.yul\":6903:7377   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7382:7648   */\n    tag_105:\n        /* \"#utility.yul\":7470:7476   */\n      dup2\n        /* \"#utility.yul\":7465:7468   */\n      dup4\n        /* \"#utility.yul\":7458:7477   */\n      mstore\n        /* \"#utility.yul\":7522:7528   */\n      dup2\n        /* \"#utility.yul\":7515:7520   */\n      dup2\n        /* \"#utility.yul\":7508:7512   */\n      0x20\n        /* \"#utility.yul\":7503:7506   */\n      dup6\n        /* \"#utility.yul\":7499:7513   */\n      add\n        /* \"#utility.yul\":7486:7529   */\n      calldatacopy\n      pop\n        /* \"#utility.yul\":7574:7575   */\n      0x00\n        /* \"#utility.yul\":7549:7565   */\n      dup3\n      dup3\n      add\n        /* \"#utility.yul\":7567:7571   */\n      0x20\n        /* \"#utility.yul\":7545:7572   */\n      swap1\n      dup2\n      add\n        /* \"#utility.yul\":7538:7576   */\n      swap2\n      swap1\n      swap2\n      mstore\n        /* \"#utility.yul\":7630:7632   */\n      0x1f\n        /* \"#utility.yul\":7609:7624   */\n      swap1\n      swap2\n      add\n      not(0x1f)\n        /* \"#utility.yul\":7605:7634   */\n      and\n        /* \"#utility.yul\":7596:7635   */\n      swap1\n      swap2\n      add\n        /* \"#utility.yul\":7592:7642   */\n      add\n      swap1\n        /* \"#utility.yul\":7382:7648   */\n      jump\t// out\n        /* \"#utility.yul\":7653:8174   */\n    tag_63:\n        /* \"#utility.yul\":7902:7956   */\n      tag_171\n        /* \"#utility.yul\":7946:7955   */\n      dup2\n        /* \"#utility.yul\":7938:7944   */\n      dup7\n        /* \"#utility.yul\":7902:7956   */\n      tag_104\n      jump\t// in\n    tag_171:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":7996:8002   */\n      dup5\n        /* \"#utility.yul\":7992:8047   */\n      and\n        /* \"#utility.yul\":7987:7989   */\n      0x60\n        /* \"#utility.yul\":7976:7985   */\n      dup3\n        /* \"#utility.yul\":7972:7990   */\n      add\n        /* \"#utility.yul\":7965:8048   */\n      mstore\n        /* \"#utility.yul\":8085:8088   */\n      0xa0\n        /* \"#utility.yul\":8079:8082   */\n      0x80\n        /* \"#utility.yul\":8068:8077   */\n      dup3\n        /* \"#utility.yul\":8064:8083   */\n      add\n        /* \"#utility.yul\":8057:8089   */\n      mstore\n        /* \"#utility.yul\":7883:7887   */\n      0x00\n        /* \"#utility.yul\":8106:8168   */\n      tag_172\n        /* \"#utility.yul\":8163:8166   */\n      0xa0\n        /* \"#utility.yul\":8152:8161   */\n      dup4\n        /* \"#utility.yul\":8148:8167   */\n      add\n        /* \"#utility.yul\":8140:8146   */\n      dup5\n        /* \"#utility.yul\":8132:8138   */\n      dup7\n        /* \"#utility.yul\":8106:8168   */\n      tag_105\n      jump\t// in\n    tag_172:\n        /* \"#utility.yul\":8098:8168   */\n      swap7\n        /* \"#utility.yul\":7653:8174   */\n      swap6\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8179:8609   */\n    tag_65:\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"#utility.yul\":8368:8374   */\n      dup4\n        /* \"#utility.yul\":8364:8443   */\n      and\n        /* \"#utility.yul\":8359:8362   */\n      dup2\n        /* \"#utility.yul\":8352:8444   */\n      mstore\n        /* \"#utility.yul\":8334:8337   */\n      0x00\n        /* \"#utility.yul\":8473:8479   */\n      dup3\n        /* \"#utility.yul\":8467:8480   */\n      mload\n        /* \"#utility.yul\":8489:8563   */\n      tag_174\n        /* \"#utility.yul\":8556:8562   */\n      dup2\n        /* \"#utility.yul\":8552:8553   */\n      0x04\n        /* \"#utility.yul\":8547:8550   */\n      dup6\n        /* \"#utility.yul\":8543:8554   */\n      add\n        /* \"#utility.yul\":8536:8540   */\n      0x20\n        /* \"#utility.yul\":8528:8534   */\n      dup8\n        /* \"#utility.yul\":8524:8541   */\n      add\n        /* \"#utility.yul\":8489:8563   */\n      tag_100\n      jump\t// in\n    tag_174:\n        /* \"#utility.yul\":8583:8599   */\n      swap2\n      swap1\n      swap2\n      add\n        /* \"#utility.yul\":8601:8602   */\n      0x04\n        /* \"#utility.yul\":8579:8603   */\n      add\n      swap4\n        /* \"#utility.yul\":8179:8609   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8614:8901   */\n    tag_67:\n        /* \"#utility.yul\":8743:8746   */\n      0x00\n        /* \"#utility.yul\":8781:8787   */\n      dup3\n        /* \"#utility.yul\":8775:8788   */\n      mload\n        /* \"#utility.yul\":8797:8863   */\n      tag_176\n        /* \"#utility.yul\":8856:8862   */\n      dup2\n        /* \"#utility.yul\":8851:8854   */\n      dup5\n        /* \"#utility.yul\":8844:8848   */\n      0x20\n        /* \"#utility.yul\":8836:8842   */\n      dup8\n        /* \"#utility.yul\":8832:8849   */\n      add\n        /* \"#utility.yul\":8797:8863   */\n      tag_100\n      jump\t// in\n    tag_176:\n        /* \"#utility.yul\":8879:8895   */\n      swap2\n      swap1\n      swap2\n      add\n      swap3\n        /* \"#utility.yul\":8614:8901   */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9260:10211   */\n    tag_75:\n        /* \"#utility.yul\":9579:9581   */\n      0x60\n        /* \"#utility.yul\":9631:9652   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":9604:9622   */\n      dup2\n      dup2\n      add\n        /* \"#utility.yul\":9687:9709   */\n      dup7\n      swap1\n      mstore\n        /* \"#utility.yul\":9550:9554   */\n      0x00\n      swap1\n        /* \"#utility.yul\":9767:9773   */\n      dup8\n        /* \"#utility.yul\":9740:9743   */\n      0x80\n        /* \"#utility.yul\":9725:9744   */\n      dup5\n      add\n        /* \"#utility.yul\":9550:9554   */\n      dup4\n        /* \"#utility.yul\":9801:9992   */\n    tag_179:\n        /* \"#utility.yul\":9815:9821   */\n      dup10\n        /* \"#utility.yul\":9812:9813   */\n      dup2\n        /* \"#utility.yul\":9809:9822   */\n      lt\n        /* \"#utility.yul\":9801:9992   */\n      iszero\n      tag_181\n      jumpi\n        /* \"#utility.yul\":9864:9912   */\n      tag_182\n        /* \"#utility.yul\":9908:9911   */\n      dup3\n        /* \"#utility.yul\":9900:9906   */\n      dup5\n        /* \"#utility.yul\":9864:9912   */\n      tag_104\n      jump\t// in\n    tag_182:\n        /* \"#utility.yul\":9967:9982   */\n      swap2\n      dup4\n      add\n      swap2\n        /* \"#utility.yul\":9932:9944   */\n      swap1\n      dup4\n      add\n      swap1\n        /* \"#utility.yul\":9837:9838   */\n      0x01\n        /* \"#utility.yul\":9830:9839   */\n      add\n        /* \"#utility.yul\":9801:9992   */\n      jump(tag_179)\n    tag_181:\n        /* \"#utility.yul\":9805:9808   */\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":10034:10040   */\n      dup9\n        /* \"#utility.yul\":10030:10085   */\n      and\n        /* \"#utility.yul\":10023:10027   */\n      0x20\n        /* \"#utility.yul\":10012:10021   */\n      dup7\n        /* \"#utility.yul\":10008:10028   */\n      add\n        /* \"#utility.yul\":10001:10086   */\n      mstore\n        /* \"#utility.yul\":10131:10140   */\n      dup5\n        /* \"#utility.yul\":10126:10129   */\n      dup2\n        /* \"#utility.yul\":10122:10141   */\n      sub\n        /* \"#utility.yul\":10117:10119   */\n      0x40\n        /* \"#utility.yul\":10106:10115   */\n      dup7\n        /* \"#utility.yul\":10102:10120   */\n      add\n        /* \"#utility.yul\":10095:10142   */\n      mstore\n        /* \"#utility.yul\":10159:10205   */\n      tag_183\n        /* \"#utility.yul\":10201:10204   */\n      dup2\n        /* \"#utility.yul\":10193:10199   */\n      dup8\n        /* \"#utility.yul\":10185:10191   */\n      dup10\n        /* \"#utility.yul\":10159:10205   */\n      tag_105\n      jump\t// in\n    tag_183:\n        /* \"#utility.yul\":10151:10205   */\n      swap11\n        /* \"#utility.yul\":9260:10211   */\n      swap10\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10216:11562   */\n    tag_90:\n        /* \"#utility.yul\":10567:10569   */\n      0x60\n        /* \"#utility.yul\":10619:10640   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":10689:10702   */\n      dup4\n      mload\n        /* \"#utility.yul\":10592:10610   */\n      dup3\n      dup3\n      add\n        /* \"#utility.yul\":10711:10733   */\n      dup2\n      swap1\n      mstore\n        /* \"#utility.yul\":10538:10542   */\n      0x00\n      swap2\n        /* \"#utility.yul\":10567:10569   */\n      swap1\n        /* \"#utility.yul\":10787:10791   */\n      0x20\n      swap1\n        /* \"#utility.yul\":10764:10767   */\n      0x80\n        /* \"#utility.yul\":10749:10768   */\n      dup6\n      add\n      swap1\n        /* \"#utility.yul\":10814:10831   */\n      dup3\n      dup9\n      add\n        /* \"#utility.yul\":10538:10542   */\n      dup6\n        /* \"#utility.yul\":10859:11384   */\n    tag_185:\n        /* \"#utility.yul\":10873:10879   */\n      dup3\n        /* \"#utility.yul\":10870:10871   */\n      dup2\n        /* \"#utility.yul\":10867:10880   */\n      lt\n        /* \"#utility.yul\":10859:11384   */\n      iszero\n      tag_187\n      jumpi\n        /* \"#utility.yul\":10938:10944   */\n      dup2\n        /* \"#utility.yul\":10932:10945   */\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":10980:10982   */\n      dup2\n        /* \"#utility.yul\":10974:10983   */\n      mload\n        /* \"#utility.yul\":10970:11028   */\n      and\n        /* \"#utility.yul\":10965:10968   */\n      dup6\n        /* \"#utility.yul\":10958:11029   */\n      mstore\n        /* \"#utility.yul\":11076:11078   */\n      dup6\n        /* \"#utility.yul\":11072:11074   */\n      dup2\n        /* \"#utility.yul\":11068:11079   */\n      add\n        /* \"#utility.yul\":11062:11080   */\n      mload\n        /* \"#utility.yul\":11093:11151   */\n      tag_188\n        /* \"#utility.yul\":11147:11149   */\n      dup8\n        /* \"#utility.yul\":11142:11145   */\n      dup8\n        /* \"#utility.yul\":11138:11150   */\n      add\n        /* \"#utility.yul\":11124:11136   */\n      dup3\n        /* \"#utility.yul\":11093:11151   */\n      tag_103\n      jump\t// in\n    tag_188:\n      pop\n        /* \"#utility.yul\":11174:11178   */\n      0x40\n        /* \"#utility.yul\":11222:11233   */\n      swap1\n      dup2\n      add\n        /* \"#utility.yul\":11216:11234   */\n      mload\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"#utility.yul\":11212:11303   */\n      and\n        /* \"#utility.yul\":11198:11210   */\n      swap1\n      dup6\n      add\n        /* \"#utility.yul\":11191:11304   */\n      mstore\n        /* \"#utility.yul\":11324:11336   */\n      swap3\n      dup6\n      add\n      swap3\n        /* \"#utility.yul\":11359:11374   */\n      swap1\n      dup5\n      add\n      swap1\n        /* \"#utility.yul\":10895:10896   */\n      0x01\n        /* \"#utility.yul\":10888:10897   */\n      add\n        /* \"#utility.yul\":10859:11384   */\n      jump(tag_185)\n    tag_187:\n      pop\n      pop\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":2137:2191   */\n      dup7\n      and\n        /* \"#utility.yul\":11435:11439   */\n      0x20\n        /* \"#utility.yul\":11420:11440   */\n      dup7\n      add\n        /* \"#utility.yul\":2125:2192   */\n      mstore\n        /* \"#utility.yul\":11479:11498   */\n      dup5\n      dup2\n      sub\n        /* \"#utility.yul\":11472:11476   */\n      0x40\n        /* \"#utility.yul\":11457:11477   */\n      dup7\n      add\n        /* \"#utility.yul\":11450:11499   */\n      mstore\n        /* \"#utility.yul\":3905:3906   */\n      0x00\n        /* \"#utility.yul\":3893:3907   */\n      dup2\n      mstore\n        /* \"#utility.yul\":3940:3944   */\n      0x20\n        /* \"#utility.yul\":3931:3945   */\n      dup2\n      add\n        /* \"#utility.yul\":11508:11556   */\n      swap8\n        /* \"#utility.yul\":10216:11562   */\n      swap7\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220743c7c2c1d50081f7f3f6f1a1e93df7b075a63cfc931b296a5864c2289957fb864736f6c63430008180033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_3925": {
									"entryPoint": null,
									"id": 3925,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [],
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b505f80546001600160a01b03191633179055610a698061002e5f395ff3fe608060405234801561000f575f80fd5b5060043610610064575f3560e01c80638da5cb5b1161004d5780638da5cb5b146100905780639e97d739146100be578063a67a117b146100d1575f80fd5b806313732d79146100685780637a26dd311461007d575b5f80fd5b61007b6100763660046105aa565b6100e4565b005b61007b61008b36600461062d565b610123565b5f546100a2906001600160a01b031681565b6040516001600160a01b03909116815260200160405180910390f35b61007b6100cc36600461065d565b610164565b61007b6100df36600461072d565b610400565b817fdbbc48772584850c2086f66c22a3654c9e46524ff539fd9d72198d91cb7c13c0848360405161011692919061079a565b60405180910390a2505050565b604080516001600160a01b03851681526020810183905283917fcb87df07b1c304492bd875a5c8b98672eca500939412809ea229afef1d7451889101610116565b5f5b848110156103f8575f868683818110610181576101816107c7565b610197926020606090920201908101915061072d565b6001600160a01b03160361025f576001600160a01b0384166102005760405162461bcd60e51b815260206004820152601a60248201527f496e76616c696420696e697469616c697a65206164647265737300000000000060448201526064015b60405180910390fd5b836001600160a01b0316838360405161021a9291906107db565b5f60405180830381855af49150503d805f8114610252576040519150601f19603f3d011682016040523d82523d5f602084013e610257565b606091505b5050506103f0565b5f868683818110610272576102726107c7565b610288926020606090920201908101915061072d565b6001600160a01b03168787848181106102a3576102a36107c7565b90506060020160400160208101906102bb9190610801565b8888858181106102cd576102cd6107c7565b9050606002015f87876040516020016102e994939291906108b4565b60408051601f198184030181529082905261030792916020016108ed565b60408051601f19818403018152908290526103219161091c565b5f60405180830381855af49150503d805f8114610359576040519150601f19603f3d011682016040523d82523d5f602084013e61035e565b606091505b50509050806103af5760405162461bcd60e51b815260206004820152601960248201527f4661636574206d6f64696669636174696f6e206661696c65640000000000000060448201526064016101f7565b7fee80746e1d76a7c4654e1a9d2ff0dde8304b0d72803a25eb48c89fd6eae7ebe887878787876040516103e6959493929190610937565b60405180910390a1505b600101610166565b505050505050565b6040805160018082528183019092525f91816020015b604080516060810182525f80825260208083018290529282015282525f199092019101816104165790505060408051606081019091526001600160a01b0384168152909150602081015f81527ffccc64d400000000000000000000000000000000000000000000000000000000602090910152815182905f9061049b5761049b6107c7565b60209081029190910101526040517f9e97d7390000000000000000000000000000000000000000000000000000000081523090639e97d739906104e49084905f9060040161099e565b5f604051808303815f87803b1580156104fb575f80fd5b505af11580156103f8573d5f803e3d5ffd5b634e487b7160e01b5f52604160045260245ffd5b5f82601f830112610530575f80fd5b813567ffffffffffffffff8082111561054b5761054b61050d565b604051601f8301601f19908116603f011681019082821181831017156105735761057361050d565b8160405283815286602085880101111561058b575f80fd5b836020870160208301375f602085830101528094505050505092915050565b5f805f606084860312156105bc575f80fd5b833567ffffffffffffffff808211156105d3575f80fd5b6105df87838801610521565b94506020860135935060408601359150808211156105fb575f80fd5b5061060886828701610521565b9150509250925092565b80356001600160a01b0381168114610628575f80fd5b919050565b5f805f6060848603121561063f575f80fd5b61064884610612565b95602085013595506040909401359392505050565b5f805f805f60608688031215610671575f80fd5b853567ffffffffffffffff80821115610688575f80fd5b818801915088601f83011261069b575f80fd5b8135818111156106a9575f80fd5b8960206060830285010111156106bd575f80fd5b602083019750809650506106d360208901610612565b945060408801359150808211156106e8575f80fd5b818801915088601f8301126106fb575f80fd5b813581811115610709575f80fd5b89602082850101111561071a575f80fd5b9699959850939650602001949392505050565b5f6020828403121561073d575f80fd5b61074682610612565b9392505050565b5f5b8381101561076757818101518382015260200161074f565b50505f910152565b5f815180845261078681602086016020860161074d565b601f01601f19169290920160200192915050565b604081525f6107ac604083018561076f565b82810360208401526107be818561076f565b95945050505050565b634e487b7160e01b5f52603260045260245ffd5b818382375f9101908152919050565b80356001600160e01b031981168114610628575f80fd5b5f60208284031215610811575f80fd5b610746826107ea565b6003811061083657634e487b7160e01b5f52602160045260245ffd5b9052565b6001600160a01b0361084b82610612565b16825260208101356003811061085f575f80fd5b61086c602084018261081a565b506001600160e01b0319610882604083016107ea565b1660408301525050565b81835281816020850137505f828201602090810191909152601f909101601f19169091010190565b6108be818661083a565b6001600160a01b038416606082015260a060808201525f6108e360a08301848661088c565b9695505050505050565b6001600160e01b0319831681525f825161090e81600485016020870161074d565b919091016004019392505050565b5f825161092d81846020870161074d565b9190910192915050565b60608082528181018690525f908760808401835b8981101561096d5761095d828461083a565b918301919083019060010161094b565b506001600160a01b0388166020860152848103604086015261099081878961088c565b9a9950505050505050505050565b606080825283518282018190525f91906020906080850190828801855b82811015610a075781516001600160a01b038151168552858101516109e28787018261081a565b506040908101516001600160e01b0319169085015292850192908401906001016109bb565b5050506001600160a01b038616602086015284810360408601525f81526020810197965050505050505056fea2646970667358221220743c7c2c1d50081f7f3f6f1a1e93df7b075a63cfc931b296a5864c2289957fb864736f6c63430008180033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND CALLER OR SWAP1 SSTORE PUSH2 0xA69 DUP1 PUSH2 0x2E PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x64 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8DA5CB5B GT PUSH2 0x4D JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x90 JUMPI DUP1 PUSH4 0x9E97D739 EQ PUSH2 0xBE JUMPI DUP1 PUSH4 0xA67A117B EQ PUSH2 0xD1 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x13732D79 EQ PUSH2 0x68 JUMPI DUP1 PUSH4 0x7A26DD31 EQ PUSH2 0x7D JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x7B PUSH2 0x76 CALLDATASIZE PUSH1 0x4 PUSH2 0x5AA JUMP JUMPDEST PUSH2 0xE4 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x7B PUSH2 0x8B CALLDATASIZE PUSH1 0x4 PUSH2 0x62D JUMP JUMPDEST PUSH2 0x123 JUMP JUMPDEST PUSH0 SLOAD PUSH2 0xA2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x7B PUSH2 0xCC CALLDATASIZE PUSH1 0x4 PUSH2 0x65D JUMP JUMPDEST PUSH2 0x164 JUMP JUMPDEST PUSH2 0x7B PUSH2 0xDF CALLDATASIZE PUSH1 0x4 PUSH2 0x72D JUMP JUMPDEST PUSH2 0x400 JUMP JUMPDEST DUP2 PUSH32 0xDBBC48772584850C2086F66C22A3654C9E46524FF539FD9D72198D91CB7C13C0 DUP5 DUP4 PUSH1 0x40 MLOAD PUSH2 0x116 SWAP3 SWAP2 SWAP1 PUSH2 0x79A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP4 SWAP1 MSTORE DUP4 SWAP2 PUSH32 0xCB87DF07B1C304492BD875A5C8B98672ECA500939412809EA229AFEF1D745188 SWAP2 ADD PUSH2 0x116 JUMP JUMPDEST PUSH0 JUMPDEST DUP5 DUP2 LT ISZERO PUSH2 0x3F8 JUMPI PUSH0 DUP7 DUP7 DUP4 DUP2 DUP2 LT PUSH2 0x181 JUMPI PUSH2 0x181 PUSH2 0x7C7 JUMP JUMPDEST PUSH2 0x197 SWAP3 PUSH1 0x20 PUSH1 0x60 SWAP1 SWAP3 MUL ADD SWAP1 DUP2 ADD SWAP2 POP PUSH2 0x72D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SUB PUSH2 0x25F JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x200 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E76616C696420696E697469616C697A652061646472657373000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 DUP4 PUSH1 0x40 MLOAD PUSH2 0x21A SWAP3 SWAP2 SWAP1 PUSH2 0x7DB JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 GAS DELEGATECALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0x252 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x257 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP POP PUSH2 0x3F0 JUMP JUMPDEST PUSH0 DUP7 DUP7 DUP4 DUP2 DUP2 LT PUSH2 0x272 JUMPI PUSH2 0x272 PUSH2 0x7C7 JUMP JUMPDEST PUSH2 0x288 SWAP3 PUSH1 0x20 PUSH1 0x60 SWAP1 SWAP3 MUL ADD SWAP1 DUP2 ADD SWAP2 POP PUSH2 0x72D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP8 DUP8 DUP5 DUP2 DUP2 LT PUSH2 0x2A3 JUMPI PUSH2 0x2A3 PUSH2 0x7C7 JUMP JUMPDEST SWAP1 POP PUSH1 0x60 MUL ADD PUSH1 0x40 ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x2BB SWAP2 SWAP1 PUSH2 0x801 JUMP JUMPDEST DUP9 DUP9 DUP6 DUP2 DUP2 LT PUSH2 0x2CD JUMPI PUSH2 0x2CD PUSH2 0x7C7 JUMP JUMPDEST SWAP1 POP PUSH1 0x60 MUL ADD PUSH0 DUP8 DUP8 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x2E9 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x8B4 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP1 DUP3 SWAP1 MSTORE PUSH2 0x307 SWAP3 SWAP2 PUSH1 0x20 ADD PUSH2 0x8ED JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP1 DUP3 SWAP1 MSTORE PUSH2 0x321 SWAP2 PUSH2 0x91C JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 GAS DELEGATECALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0x359 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x35E JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x3AF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4661636574206D6F64696669636174696F6E206661696C656400000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x1F7 JUMP JUMPDEST PUSH32 0xEE80746E1D76A7C4654E1A9D2FF0DDE8304B0D72803A25EB48C89FD6EAE7EBE8 DUP8 DUP8 DUP8 DUP8 DUP8 PUSH1 0x40 MLOAD PUSH2 0x3E6 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x937 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMPDEST PUSH1 0x1 ADD PUSH2 0x166 JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 DUP1 DUP3 MSTORE DUP2 DUP4 ADD SWAP1 SWAP3 MSTORE PUSH0 SWAP2 DUP2 PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x60 DUP2 ADD DUP3 MSTORE PUSH0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 ADD DUP3 SWAP1 MSTORE SWAP3 DUP3 ADD MSTORE DUP3 MSTORE PUSH0 NOT SWAP1 SWAP3 ADD SWAP2 ADD DUP2 PUSH2 0x416 JUMPI SWAP1 POP POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x60 DUP2 ADD SWAP1 SWAP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND DUP2 MSTORE SWAP1 SWAP2 POP PUSH1 0x20 DUP2 ADD PUSH0 DUP2 MSTORE PUSH32 0xFCCC64D400000000000000000000000000000000000000000000000000000000 PUSH1 0x20 SWAP1 SWAP2 ADD MSTORE DUP2 MLOAD DUP3 SWAP1 PUSH0 SWAP1 PUSH2 0x49B JUMPI PUSH2 0x49B PUSH2 0x7C7 JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE PUSH1 0x40 MLOAD PUSH32 0x9E97D73900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE ADDRESS SWAP1 PUSH4 0x9E97D739 SWAP1 PUSH2 0x4E4 SWAP1 DUP5 SWAP1 PUSH0 SWAP1 PUSH1 0x4 ADD PUSH2 0x99E JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x4FB JUMPI PUSH0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x3F8 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x530 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x54B JUMPI PUSH2 0x54B PUSH2 0x50D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP4 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP3 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH2 0x573 JUMPI PUSH2 0x573 PUSH2 0x50D JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP4 DUP2 MSTORE DUP7 PUSH1 0x20 DUP6 DUP9 ADD ADD GT ISZERO PUSH2 0x58B JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP4 PUSH1 0x20 DUP8 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH0 PUSH1 0x20 DUP6 DUP4 ADD ADD MSTORE DUP1 SWAP5 POP POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x5BC JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x5D3 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x5DF DUP8 DUP4 DUP9 ADD PUSH2 0x521 JUMP JUMPDEST SWAP5 POP PUSH1 0x20 DUP7 ADD CALLDATALOAD SWAP4 POP PUSH1 0x40 DUP7 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x5FB JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x608 DUP7 DUP3 DUP8 ADD PUSH2 0x521 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x628 JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x63F JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x648 DUP5 PUSH2 0x612 JUMP JUMPDEST SWAP6 PUSH1 0x20 DUP6 ADD CALLDATALOAD SWAP6 POP PUSH1 0x40 SWAP1 SWAP5 ADD CALLDATALOAD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x671 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP6 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x688 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 DUP9 ADD SWAP2 POP DUP9 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x69B JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0x6A9 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP10 PUSH1 0x20 PUSH1 0x60 DUP4 MUL DUP6 ADD ADD GT ISZERO PUSH2 0x6BD JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH1 0x20 DUP4 ADD SWAP8 POP DUP1 SWAP7 POP POP PUSH2 0x6D3 PUSH1 0x20 DUP10 ADD PUSH2 0x612 JUMP JUMPDEST SWAP5 POP PUSH1 0x40 DUP9 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x6E8 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 DUP9 ADD SWAP2 POP DUP9 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x6FB JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0x709 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP10 PUSH1 0x20 DUP3 DUP6 ADD ADD GT ISZERO PUSH2 0x71A JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP7 SWAP10 SWAP6 SWAP9 POP SWAP4 SWAP7 POP PUSH1 0x20 ADD SWAP5 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x73D JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x746 DUP3 PUSH2 0x612 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x767 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x74F JUMP JUMPDEST POP POP PUSH0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH2 0x786 DUP2 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP7 ADD PUSH2 0x74D JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x40 DUP2 MSTORE PUSH0 PUSH2 0x7AC PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x76F JUMP JUMPDEST DUP3 DUP2 SUB PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x7BE DUP2 DUP6 PUSH2 0x76F JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST DUP2 DUP4 DUP3 CALLDATACOPY PUSH0 SWAP2 ADD SWAP1 DUP2 MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0x628 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x811 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x746 DUP3 PUSH2 0x7EA JUMP JUMPDEST PUSH1 0x3 DUP2 LT PUSH2 0x836 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST SWAP1 MSTORE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x84B DUP3 PUSH2 0x612 JUMP JUMPDEST AND DUP3 MSTORE PUSH1 0x20 DUP2 ADD CALLDATALOAD PUSH1 0x3 DUP2 LT PUSH2 0x85F JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x86C PUSH1 0x20 DUP5 ADD DUP3 PUSH2 0x81A JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT PUSH2 0x882 PUSH1 0x40 DUP4 ADD PUSH2 0x7EA JUMP JUMPDEST AND PUSH1 0x40 DUP4 ADD MSTORE POP POP JUMP JUMPDEST DUP2 DUP4 MSTORE DUP2 DUP2 PUSH1 0x20 DUP6 ADD CALLDATACOPY POP PUSH0 DUP3 DUP3 ADD PUSH1 0x20 SWAP1 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x1F SWAP1 SWAP2 ADD PUSH1 0x1F NOT AND SWAP1 SWAP2 ADD ADD SWAP1 JUMP JUMPDEST PUSH2 0x8BE DUP2 DUP7 PUSH2 0x83A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0xA0 PUSH1 0x80 DUP3 ADD MSTORE PUSH0 PUSH2 0x8E3 PUSH1 0xA0 DUP4 ADD DUP5 DUP7 PUSH2 0x88C JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP4 AND DUP2 MSTORE PUSH0 DUP3 MLOAD PUSH2 0x90E DUP2 PUSH1 0x4 DUP6 ADD PUSH1 0x20 DUP8 ADD PUSH2 0x74D JUMP JUMPDEST SWAP2 SWAP1 SWAP2 ADD PUSH1 0x4 ADD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 MLOAD PUSH2 0x92D DUP2 DUP5 PUSH1 0x20 DUP8 ADD PUSH2 0x74D JUMP JUMPDEST SWAP2 SWAP1 SWAP2 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 DUP1 DUP3 MSTORE DUP2 DUP2 ADD DUP7 SWAP1 MSTORE PUSH0 SWAP1 DUP8 PUSH1 0x80 DUP5 ADD DUP4 JUMPDEST DUP10 DUP2 LT ISZERO PUSH2 0x96D JUMPI PUSH2 0x95D DUP3 DUP5 PUSH2 0x83A JUMP JUMPDEST SWAP2 DUP4 ADD SWAP2 SWAP1 DUP4 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x94B JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND PUSH1 0x20 DUP7 ADD MSTORE DUP5 DUP2 SUB PUSH1 0x40 DUP7 ADD MSTORE PUSH2 0x990 DUP2 DUP8 DUP10 PUSH2 0x88C JUMP JUMPDEST SWAP11 SWAP10 POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP1 DUP3 MSTORE DUP4 MLOAD DUP3 DUP3 ADD DUP2 SWAP1 MSTORE PUSH0 SWAP2 SWAP1 PUSH1 0x20 SWAP1 PUSH1 0x80 DUP6 ADD SWAP1 DUP3 DUP9 ADD DUP6 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0xA07 JUMPI DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 MLOAD AND DUP6 MSTORE DUP6 DUP2 ADD MLOAD PUSH2 0x9E2 DUP8 DUP8 ADD DUP3 PUSH2 0x81A JUMP JUMPDEST POP PUSH1 0x40 SWAP1 DUP2 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND SWAP1 DUP6 ADD MSTORE SWAP3 DUP6 ADD SWAP3 SWAP1 DUP5 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x9BB JUMP JUMPDEST POP POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0x20 DUP7 ADD MSTORE DUP5 DUP2 SUB PUSH1 0x40 DUP7 ADD MSTORE PUSH0 DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH21 0x3C7C2C1D50081F7F3F6F1A1E93DF7B075A63CFC931 0xB2 SWAP7 0xA5 DUP7 0x4C 0x22 DUP10 SWAP6 PUSH32 0xB864736F6C634300081800330000000000000000000000000000000000000000 ",
							"sourceMap": "5267:1886:42:-:0;;;5336:49;;;;;;;;;-1:-1:-1;5360:5:42;:18;;-1:-1:-1;;;;;;5360:18:42;5368:10;5360:18;;;5267:1886;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@addCandidateDetails_4083": {
									"entryPoint": 228,
									"id": 4083,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@addFacet_3977": {
									"entryPoint": 1024,
									"id": 3977,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@addVoterDetails_4099": {
									"entryPoint": 291,
									"id": 4099,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@diamondCut_4067": {
									"entryPoint": 356,
									"id": 4067,
									"parameterSlots": 5,
									"returnSlots": 0
								},
								"@owner_3916": {
									"entryPoint": null,
									"id": 3916,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_decode_address": {
									"entryPoint": 1554,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_bytes4": {
									"entryPoint": 2026,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_string": {
									"entryPoint": 1313,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 1837,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_uint256t_uint256": {
									"entryPoint": 1581,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_array$_t_struct$_FacetCut_$3551_calldata_ptr_$dyn_calldata_ptrt_addresst_bytes_calldata_ptr": {
									"entryPoint": 1629,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 5
								},
								"abi_decode_tuple_t_bytes4": {
									"entryPoint": 2049,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_string_memory_ptrt_uint256t_string_memory_ptr": {
									"entryPoint": 1450,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_encode_address": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_bytes_calldata": {
									"entryPoint": 2188,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_enum_FacetCutAction": {
									"entryPoint": 2074,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_string": {
									"entryPoint": 1903,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_struct_FacetCut_calldata": {
									"entryPoint": 2106,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_packed_t_bytes4_t_bytes_memory_ptr__to_t_bytes4_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 2285,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_packed_t_bytes_calldata_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 2011,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 2332,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_array$_t_struct$_FacetCut_$3551_calldata_ptr_$dyn_calldata_ptr_t_address_t_bytes_calldata_ptr__to_t_array$_t_struct$_FacetCut_$3551_memory_ptr_$dyn_memory_ptr_t_address_t_bytes_memory_ptr__fromStack_reversed": {
									"entryPoint": 2359,
									"id": null,
									"parameterSlots": 6,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_array$_t_struct$_FacetCut_$3551_memory_ptr_$dyn_memory_ptr_t_address_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_array$_t_struct$_FacetCut_$3551_memory_ptr_$dyn_memory_ptr_t_address_t_bytes_memory_ptr__fromStack_reversed": {
									"entryPoint": 2462,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 1946,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_3e171e1bc4293dc8012e866cb04b58106ab144d1167c321b7083a8d2ce68c5e4__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_945c9de7d462e2062e246bb52c3f039fb3d4db67a6f9243fcb5c6410338702c3__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_struct$_FacetCut_$3551_calldata_ptr_t_address_t_bytes_calldata_ptr__to_t_struct$_FacetCut_$3551_memory_ptr_t_address_t_bytes_memory_ptr__fromStack_reversed": {
									"entryPoint": 2228,
									"id": null,
									"parameterSlots": 5,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_string": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 1869,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"panic_error_0x21": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x32": {
									"entryPoint": 1991,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 1293,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:11564:43",
										"nodeType": "YulBlock",
										"src": "0:11564:43",
										"statements": [
											{
												"nativeSrc": "6:3:43",
												"nodeType": "YulBlock",
												"src": "6:3:43",
												"statements": []
											},
											{
												"body": {
													"nativeSrc": "46:152:43",
													"nodeType": "YulBlock",
													"src": "46:152:43",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "63:1:43",
																		"nodeType": "YulLiteral",
																		"src": "63:1:43",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "66:77:43",
																		"nodeType": "YulLiteral",
																		"src": "66:77:43",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "56:6:43",
																	"nodeType": "YulIdentifier",
																	"src": "56:6:43"
																},
																"nativeSrc": "56:88:43",
																"nodeType": "YulFunctionCall",
																"src": "56:88:43"
															},
															"nativeSrc": "56:88:43",
															"nodeType": "YulExpressionStatement",
															"src": "56:88:43"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "160:1:43",
																		"nodeType": "YulLiteral",
																		"src": "160:1:43",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "163:4:43",
																		"nodeType": "YulLiteral",
																		"src": "163:4:43",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "153:6:43",
																	"nodeType": "YulIdentifier",
																	"src": "153:6:43"
																},
																"nativeSrc": "153:15:43",
																"nodeType": "YulFunctionCall",
																"src": "153:15:43"
															},
															"nativeSrc": "153:15:43",
															"nodeType": "YulExpressionStatement",
															"src": "153:15:43"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "184:1:43",
																		"nodeType": "YulLiteral",
																		"src": "184:1:43",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "187:4:43",
																		"nodeType": "YulLiteral",
																		"src": "187:4:43",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "177:6:43",
																	"nodeType": "YulIdentifier",
																	"src": "177:6:43"
																},
																"nativeSrc": "177:15:43",
																"nodeType": "YulFunctionCall",
																"src": "177:15:43"
															},
															"nativeSrc": "177:15:43",
															"nodeType": "YulExpressionStatement",
															"src": "177:15:43"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "14:184:43",
												"nodeType": "YulFunctionDefinition",
												"src": "14:184:43"
											},
											{
												"body": {
													"nativeSrc": "256:666:43",
													"nodeType": "YulBlock",
													"src": "256:666:43",
													"statements": [
														{
															"body": {
																"nativeSrc": "305:16:43",
																"nodeType": "YulBlock",
																"src": "305:16:43",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "314:1:43",
																					"nodeType": "YulLiteral",
																					"src": "314:1:43",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "317:1:43",
																					"nodeType": "YulLiteral",
																					"src": "317:1:43",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "307:6:43",
																				"nodeType": "YulIdentifier",
																				"src": "307:6:43"
																			},
																			"nativeSrc": "307:12:43",
																			"nodeType": "YulFunctionCall",
																			"src": "307:12:43"
																		},
																		"nativeSrc": "307:12:43",
																		"nodeType": "YulExpressionStatement",
																		"src": "307:12:43"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nativeSrc": "284:6:43",
																						"nodeType": "YulIdentifier",
																						"src": "284:6:43"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "292:4:43",
																						"nodeType": "YulLiteral",
																						"src": "292:4:43",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "280:3:43",
																					"nodeType": "YulIdentifier",
																					"src": "280:3:43"
																				},
																				"nativeSrc": "280:17:43",
																				"nodeType": "YulFunctionCall",
																				"src": "280:17:43"
																			},
																			{
																				"name": "end",
																				"nativeSrc": "299:3:43",
																				"nodeType": "YulIdentifier",
																				"src": "299:3:43"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nativeSrc": "276:3:43",
																			"nodeType": "YulIdentifier",
																			"src": "276:3:43"
																		},
																		"nativeSrc": "276:27:43",
																		"nodeType": "YulFunctionCall",
																		"src": "276:27:43"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "269:6:43",
																	"nodeType": "YulIdentifier",
																	"src": "269:6:43"
																},
																"nativeSrc": "269:35:43",
																"nodeType": "YulFunctionCall",
																"src": "269:35:43"
															},
															"nativeSrc": "266:55:43",
															"nodeType": "YulIf",
															"src": "266:55:43"
														},
														{
															"nativeSrc": "330:30:43",
															"nodeType": "YulVariableDeclaration",
															"src": "330:30:43",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "353:6:43",
																		"nodeType": "YulIdentifier",
																		"src": "353:6:43"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "340:12:43",
																	"nodeType": "YulIdentifier",
																	"src": "340:12:43"
																},
																"nativeSrc": "340:20:43",
																"nodeType": "YulFunctionCall",
																"src": "340:20:43"
															},
															"variables": [
																{
																	"name": "_1",
																	"nativeSrc": "334:2:43",
																	"nodeType": "YulTypedName",
																	"src": "334:2:43",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "369:28:43",
															"nodeType": "YulVariableDeclaration",
															"src": "369:28:43",
															"value": {
																"kind": "number",
																"nativeSrc": "379:18:43",
																"nodeType": "YulLiteral",
																"src": "379:18:43",
																"type": "",
																"value": "0xffffffffffffffff"
															},
															"variables": [
																{
																	"name": "_2",
																	"nativeSrc": "373:2:43",
																	"nodeType": "YulTypedName",
																	"src": "373:2:43",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "420:22:43",
																"nodeType": "YulBlock",
																"src": "420:22:43",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "422:16:43",
																				"nodeType": "YulIdentifier",
																				"src": "422:16:43"
																			},
																			"nativeSrc": "422:18:43",
																			"nodeType": "YulFunctionCall",
																			"src": "422:18:43"
																		},
																		"nativeSrc": "422:18:43",
																		"nodeType": "YulExpressionStatement",
																		"src": "422:18:43"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "_1",
																		"nativeSrc": "412:2:43",
																		"nodeType": "YulIdentifier",
																		"src": "412:2:43"
																	},
																	{
																		"name": "_2",
																		"nativeSrc": "416:2:43",
																		"nodeType": "YulIdentifier",
																		"src": "416:2:43"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "409:2:43",
																	"nodeType": "YulIdentifier",
																	"src": "409:2:43"
																},
																"nativeSrc": "409:10:43",
																"nodeType": "YulFunctionCall",
																"src": "409:10:43"
															},
															"nativeSrc": "406:36:43",
															"nodeType": "YulIf",
															"src": "406:36:43"
														},
														{
															"nativeSrc": "451:17:43",
															"nodeType": "YulVariableDeclaration",
															"src": "451:17:43",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "465:2:43",
																		"nodeType": "YulLiteral",
																		"src": "465:2:43",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nativeSrc": "461:3:43",
																	"nodeType": "YulIdentifier",
																	"src": "461:3:43"
																},
																"nativeSrc": "461:7:43",
																"nodeType": "YulFunctionCall",
																"src": "461:7:43"
															},
															"variables": [
																{
																	"name": "_3",
																	"nativeSrc": "455:2:43",
																	"nodeType": "YulTypedName",
																	"src": "455:2:43",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "477:23:43",
															"nodeType": "YulVariableDeclaration",
															"src": "477:23:43",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "497:2:43",
																		"nodeType": "YulLiteral",
																		"src": "497:2:43",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "491:5:43",
																	"nodeType": "YulIdentifier",
																	"src": "491:5:43"
																},
																"nativeSrc": "491:9:43",
																"nodeType": "YulFunctionCall",
																"src": "491:9:43"
															},
															"variables": [
																{
																	"name": "memPtr",
																	"nativeSrc": "481:6:43",
																	"nodeType": "YulTypedName",
																	"src": "481:6:43",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "509:71:43",
															"nodeType": "YulVariableDeclaration",
															"src": "509:71:43",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "531:6:43",
																		"nodeType": "YulIdentifier",
																		"src": "531:6:43"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"name": "_1",
																										"nativeSrc": "555:2:43",
																										"nodeType": "YulIdentifier",
																										"src": "555:2:43"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "559:4:43",
																										"nodeType": "YulLiteral",
																										"src": "559:4:43",
																										"type": "",
																										"value": "0x1f"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "551:3:43",
																									"nodeType": "YulIdentifier",
																									"src": "551:3:43"
																								},
																								"nativeSrc": "551:13:43",
																								"nodeType": "YulFunctionCall",
																								"src": "551:13:43"
																							},
																							{
																								"name": "_3",
																								"nativeSrc": "566:2:43",
																								"nodeType": "YulIdentifier",
																								"src": "566:2:43"
																							}
																						],
																						"functionName": {
																							"name": "and",
																							"nativeSrc": "547:3:43",
																							"nodeType": "YulIdentifier",
																							"src": "547:3:43"
																						},
																						"nativeSrc": "547:22:43",
																						"nodeType": "YulFunctionCall",
																						"src": "547:22:43"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "571:2:43",
																						"nodeType": "YulLiteral",
																						"src": "571:2:43",
																						"type": "",
																						"value": "63"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "543:3:43",
																					"nodeType": "YulIdentifier",
																					"src": "543:3:43"
																				},
																				"nativeSrc": "543:31:43",
																				"nodeType": "YulFunctionCall",
																				"src": "543:31:43"
																			},
																			{
																				"name": "_3",
																				"nativeSrc": "576:2:43",
																				"nodeType": "YulIdentifier",
																				"src": "576:2:43"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "539:3:43",
																			"nodeType": "YulIdentifier",
																			"src": "539:3:43"
																		},
																		"nativeSrc": "539:40:43",
																		"nodeType": "YulFunctionCall",
																		"src": "539:40:43"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "527:3:43",
																	"nodeType": "YulIdentifier",
																	"src": "527:3:43"
																},
																"nativeSrc": "527:53:43",
																"nodeType": "YulFunctionCall",
																"src": "527:53:43"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nativeSrc": "513:10:43",
																	"nodeType": "YulTypedName",
																	"src": "513:10:43",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "639:22:43",
																"nodeType": "YulBlock",
																"src": "639:22:43",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "641:16:43",
																				"nodeType": "YulIdentifier",
																				"src": "641:16:43"
																			},
																			"nativeSrc": "641:18:43",
																			"nodeType": "YulFunctionCall",
																			"src": "641:18:43"
																		},
																		"nativeSrc": "641:18:43",
																		"nodeType": "YulExpressionStatement",
																		"src": "641:18:43"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "598:10:43",
																				"nodeType": "YulIdentifier",
																				"src": "598:10:43"
																			},
																			{
																				"name": "_2",
																				"nativeSrc": "610:2:43",
																				"nodeType": "YulIdentifier",
																				"src": "610:2:43"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "595:2:43",
																			"nodeType": "YulIdentifier",
																			"src": "595:2:43"
																		},
																		"nativeSrc": "595:18:43",
																		"nodeType": "YulFunctionCall",
																		"src": "595:18:43"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "618:10:43",
																				"nodeType": "YulIdentifier",
																				"src": "618:10:43"
																			},
																			{
																				"name": "memPtr",
																				"nativeSrc": "630:6:43",
																				"nodeType": "YulIdentifier",
																				"src": "630:6:43"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "615:2:43",
																			"nodeType": "YulIdentifier",
																			"src": "615:2:43"
																		},
																		"nativeSrc": "615:22:43",
																		"nodeType": "YulFunctionCall",
																		"src": "615:22:43"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "592:2:43",
																	"nodeType": "YulIdentifier",
																	"src": "592:2:43"
																},
																"nativeSrc": "592:46:43",
																"nodeType": "YulFunctionCall",
																"src": "592:46:43"
															},
															"nativeSrc": "589:72:43",
															"nodeType": "YulIf",
															"src": "589:72:43"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "677:2:43",
																		"nodeType": "YulLiteral",
																		"src": "677:2:43",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nativeSrc": "681:10:43",
																		"nodeType": "YulIdentifier",
																		"src": "681:10:43"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "670:6:43",
																	"nodeType": "YulIdentifier",
																	"src": "670:6:43"
																},
																"nativeSrc": "670:22:43",
																"nodeType": "YulFunctionCall",
																"src": "670:22:43"
															},
															"nativeSrc": "670:22:43",
															"nodeType": "YulExpressionStatement",
															"src": "670:22:43"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "708:6:43",
																		"nodeType": "YulIdentifier",
																		"src": "708:6:43"
																	},
																	{
																		"name": "_1",
																		"nativeSrc": "716:2:43",
																		"nodeType": "YulIdentifier",
																		"src": "716:2:43"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "701:6:43",
																	"nodeType": "YulIdentifier",
																	"src": "701:6:43"
																},
																"nativeSrc": "701:18:43",
																"nodeType": "YulFunctionCall",
																"src": "701:18:43"
															},
															"nativeSrc": "701:18:43",
															"nodeType": "YulExpressionStatement",
															"src": "701:18:43"
														},
														{
															"body": {
																"nativeSrc": "767:16:43",
																"nodeType": "YulBlock",
																"src": "767:16:43",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "776:1:43",
																					"nodeType": "YulLiteral",
																					"src": "776:1:43",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "779:1:43",
																					"nodeType": "YulLiteral",
																					"src": "779:1:43",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "769:6:43",
																				"nodeType": "YulIdentifier",
																				"src": "769:6:43"
																			},
																			"nativeSrc": "769:12:43",
																			"nodeType": "YulFunctionCall",
																			"src": "769:12:43"
																		},
																		"nativeSrc": "769:12:43",
																		"nodeType": "YulExpressionStatement",
																		"src": "769:12:43"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nativeSrc": "742:6:43",
																						"nodeType": "YulIdentifier",
																						"src": "742:6:43"
																					},
																					{
																						"name": "_1",
																						"nativeSrc": "750:2:43",
																						"nodeType": "YulIdentifier",
																						"src": "750:2:43"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "738:3:43",
																					"nodeType": "YulIdentifier",
																					"src": "738:3:43"
																				},
																				"nativeSrc": "738:15:43",
																				"nodeType": "YulFunctionCall",
																				"src": "738:15:43"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "755:4:43",
																				"nodeType": "YulLiteral",
																				"src": "755:4:43",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "734:3:43",
																			"nodeType": "YulIdentifier",
																			"src": "734:3:43"
																		},
																		"nativeSrc": "734:26:43",
																		"nodeType": "YulFunctionCall",
																		"src": "734:26:43"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "762:3:43",
																		"nodeType": "YulIdentifier",
																		"src": "762:3:43"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "731:2:43",
																	"nodeType": "YulIdentifier",
																	"src": "731:2:43"
																},
																"nativeSrc": "731:35:43",
																"nodeType": "YulFunctionCall",
																"src": "731:35:43"
															},
															"nativeSrc": "728:55:43",
															"nodeType": "YulIf",
															"src": "728:55:43"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "809:6:43",
																				"nodeType": "YulIdentifier",
																				"src": "809:6:43"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "817:4:43",
																				"nodeType": "YulLiteral",
																				"src": "817:4:43",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "805:3:43",
																			"nodeType": "YulIdentifier",
																			"src": "805:3:43"
																		},
																		"nativeSrc": "805:17:43",
																		"nodeType": "YulFunctionCall",
																		"src": "805:17:43"
																	},
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "828:6:43",
																				"nodeType": "YulIdentifier",
																				"src": "828:6:43"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "836:4:43",
																				"nodeType": "YulLiteral",
																				"src": "836:4:43",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "824:3:43",
																			"nodeType": "YulIdentifier",
																			"src": "824:3:43"
																		},
																		"nativeSrc": "824:17:43",
																		"nodeType": "YulFunctionCall",
																		"src": "824:17:43"
																	},
																	{
																		"name": "_1",
																		"nativeSrc": "843:2:43",
																		"nodeType": "YulIdentifier",
																		"src": "843:2:43"
																	}
																],
																"functionName": {
																	"name": "calldatacopy",
																	"nativeSrc": "792:12:43",
																	"nodeType": "YulIdentifier",
																	"src": "792:12:43"
																},
																"nativeSrc": "792:54:43",
																"nodeType": "YulFunctionCall",
																"src": "792:54:43"
															},
															"nativeSrc": "792:54:43",
															"nodeType": "YulExpressionStatement",
															"src": "792:54:43"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "memPtr",
																						"nativeSrc": "870:6:43",
																						"nodeType": "YulIdentifier",
																						"src": "870:6:43"
																					},
																					{
																						"name": "_1",
																						"nativeSrc": "878:2:43",
																						"nodeType": "YulIdentifier",
																						"src": "878:2:43"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "866:3:43",
																					"nodeType": "YulIdentifier",
																					"src": "866:3:43"
																				},
																				"nativeSrc": "866:15:43",
																				"nodeType": "YulFunctionCall",
																				"src": "866:15:43"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "883:4:43",
																				"nodeType": "YulLiteral",
																				"src": "883:4:43",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "862:3:43",
																			"nodeType": "YulIdentifier",
																			"src": "862:3:43"
																		},
																		"nativeSrc": "862:26:43",
																		"nodeType": "YulFunctionCall",
																		"src": "862:26:43"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "890:1:43",
																		"nodeType": "YulLiteral",
																		"src": "890:1:43",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "855:6:43",
																	"nodeType": "YulIdentifier",
																	"src": "855:6:43"
																},
																"nativeSrc": "855:37:43",
																"nodeType": "YulFunctionCall",
																"src": "855:37:43"
															},
															"nativeSrc": "855:37:43",
															"nodeType": "YulExpressionStatement",
															"src": "855:37:43"
														},
														{
															"nativeSrc": "901:15:43",
															"nodeType": "YulAssignment",
															"src": "901:15:43",
															"value": {
																"name": "memPtr",
																"nativeSrc": "910:6:43",
																"nodeType": "YulIdentifier",
																"src": "910:6:43"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "901:5:43",
																	"nodeType": "YulIdentifier",
																	"src": "901:5:43"
																}
															]
														}
													]
												},
												"name": "abi_decode_string",
												"nativeSrc": "203:719:43",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "230:6:43",
														"nodeType": "YulTypedName",
														"src": "230:6:43",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "238:3:43",
														"nodeType": "YulTypedName",
														"src": "238:3:43",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "246:5:43",
														"nodeType": "YulTypedName",
														"src": "246:5:43",
														"type": ""
													}
												],
												"src": "203:719:43"
											},
											{
												"body": {
													"nativeSrc": "1051:487:43",
													"nodeType": "YulBlock",
													"src": "1051:487:43",
													"statements": [
														{
															"body": {
																"nativeSrc": "1097:16:43",
																"nodeType": "YulBlock",
																"src": "1097:16:43",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1106:1:43",
																					"nodeType": "YulLiteral",
																					"src": "1106:1:43",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1109:1:43",
																					"nodeType": "YulLiteral",
																					"src": "1109:1:43",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1099:6:43",
																				"nodeType": "YulIdentifier",
																				"src": "1099:6:43"
																			},
																			"nativeSrc": "1099:12:43",
																			"nodeType": "YulFunctionCall",
																			"src": "1099:12:43"
																		},
																		"nativeSrc": "1099:12:43",
																		"nodeType": "YulExpressionStatement",
																		"src": "1099:12:43"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1072:7:43",
																				"nodeType": "YulIdentifier",
																				"src": "1072:7:43"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1081:9:43",
																				"nodeType": "YulIdentifier",
																				"src": "1081:9:43"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1068:3:43",
																			"nodeType": "YulIdentifier",
																			"src": "1068:3:43"
																		},
																		"nativeSrc": "1068:23:43",
																		"nodeType": "YulFunctionCall",
																		"src": "1068:23:43"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1093:2:43",
																		"nodeType": "YulLiteral",
																		"src": "1093:2:43",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1064:3:43",
																	"nodeType": "YulIdentifier",
																	"src": "1064:3:43"
																},
																"nativeSrc": "1064:32:43",
																"nodeType": "YulFunctionCall",
																"src": "1064:32:43"
															},
															"nativeSrc": "1061:52:43",
															"nodeType": "YulIf",
															"src": "1061:52:43"
														},
														{
															"nativeSrc": "1122:37:43",
															"nodeType": "YulVariableDeclaration",
															"src": "1122:37:43",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1149:9:43",
																		"nodeType": "YulIdentifier",
																		"src": "1149:9:43"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1136:12:43",
																	"nodeType": "YulIdentifier",
																	"src": "1136:12:43"
																},
																"nativeSrc": "1136:23:43",
																"nodeType": "YulFunctionCall",
																"src": "1136:23:43"
															},
															"variables": [
																{
																	"name": "offset",
																	"nativeSrc": "1126:6:43",
																	"nodeType": "YulTypedName",
																	"src": "1126:6:43",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "1168:28:43",
															"nodeType": "YulVariableDeclaration",
															"src": "1168:28:43",
															"value": {
																"kind": "number",
																"nativeSrc": "1178:18:43",
																"nodeType": "YulLiteral",
																"src": "1178:18:43",
																"type": "",
																"value": "0xffffffffffffffff"
															},
															"variables": [
																{
																	"name": "_1",
																	"nativeSrc": "1172:2:43",
																	"nodeType": "YulTypedName",
																	"src": "1172:2:43",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1223:16:43",
																"nodeType": "YulBlock",
																"src": "1223:16:43",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1232:1:43",
																					"nodeType": "YulLiteral",
																					"src": "1232:1:43",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1235:1:43",
																					"nodeType": "YulLiteral",
																					"src": "1235:1:43",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1225:6:43",
																				"nodeType": "YulIdentifier",
																				"src": "1225:6:43"
																			},
																			"nativeSrc": "1225:12:43",
																			"nodeType": "YulFunctionCall",
																			"src": "1225:12:43"
																		},
																		"nativeSrc": "1225:12:43",
																		"nodeType": "YulExpressionStatement",
																		"src": "1225:12:43"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "1211:6:43",
																		"nodeType": "YulIdentifier",
																		"src": "1211:6:43"
																	},
																	{
																		"name": "_1",
																		"nativeSrc": "1219:2:43",
																		"nodeType": "YulIdentifier",
																		"src": "1219:2:43"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "1208:2:43",
																	"nodeType": "YulIdentifier",
																	"src": "1208:2:43"
																},
																"nativeSrc": "1208:14:43",
																"nodeType": "YulFunctionCall",
																"src": "1208:14:43"
															},
															"nativeSrc": "1205:34:43",
															"nodeType": "YulIf",
															"src": "1205:34:43"
														},
														{
															"nativeSrc": "1248:60:43",
															"nodeType": "YulAssignment",
															"src": "1248:60:43",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1280:9:43",
																				"nodeType": "YulIdentifier",
																				"src": "1280:9:43"
																			},
																			{
																				"name": "offset",
																				"nativeSrc": "1291:6:43",
																				"nodeType": "YulIdentifier",
																				"src": "1291:6:43"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1276:3:43",
																			"nodeType": "YulIdentifier",
																			"src": "1276:3:43"
																		},
																		"nativeSrc": "1276:22:43",
																		"nodeType": "YulFunctionCall",
																		"src": "1276:22:43"
																	},
																	{
																		"name": "dataEnd",
																		"nativeSrc": "1300:7:43",
																		"nodeType": "YulIdentifier",
																		"src": "1300:7:43"
																	}
																],
																"functionName": {
																	"name": "abi_decode_string",
																	"nativeSrc": "1258:17:43",
																	"nodeType": "YulIdentifier",
																	"src": "1258:17:43"
																},
																"nativeSrc": "1258:50:43",
																"nodeType": "YulFunctionCall",
																"src": "1258:50:43"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "1248:6:43",
																	"nodeType": "YulIdentifier",
																	"src": "1248:6:43"
																}
															]
														},
														{
															"nativeSrc": "1317:42:43",
															"nodeType": "YulAssignment",
															"src": "1317:42:43",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1344:9:43",
																				"nodeType": "YulIdentifier",
																				"src": "1344:9:43"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1355:2:43",
																				"nodeType": "YulLiteral",
																				"src": "1355:2:43",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1340:3:43",
																			"nodeType": "YulIdentifier",
																			"src": "1340:3:43"
																		},
																		"nativeSrc": "1340:18:43",
																		"nodeType": "YulFunctionCall",
																		"src": "1340:18:43"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1327:12:43",
																	"nodeType": "YulIdentifier",
																	"src": "1327:12:43"
																},
																"nativeSrc": "1327:32:43",
																"nodeType": "YulFunctionCall",
																"src": "1327:32:43"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "1317:6:43",
																	"nodeType": "YulIdentifier",
																	"src": "1317:6:43"
																}
															]
														},
														{
															"nativeSrc": "1368:48:43",
															"nodeType": "YulVariableDeclaration",
															"src": "1368:48:43",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1401:9:43",
																				"nodeType": "YulIdentifier",
																				"src": "1401:9:43"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1412:2:43",
																				"nodeType": "YulLiteral",
																				"src": "1412:2:43",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1397:3:43",
																			"nodeType": "YulIdentifier",
																			"src": "1397:3:43"
																		},
																		"nativeSrc": "1397:18:43",
																		"nodeType": "YulFunctionCall",
																		"src": "1397:18:43"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1384:12:43",
																	"nodeType": "YulIdentifier",
																	"src": "1384:12:43"
																},
																"nativeSrc": "1384:32:43",
																"nodeType": "YulFunctionCall",
																"src": "1384:32:43"
															},
															"variables": [
																{
																	"name": "offset_1",
																	"nativeSrc": "1372:8:43",
																	"nodeType": "YulTypedName",
																	"src": "1372:8:43",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1445:16:43",
																"nodeType": "YulBlock",
																"src": "1445:16:43",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1454:1:43",
																					"nodeType": "YulLiteral",
																					"src": "1454:1:43",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1457:1:43",
																					"nodeType": "YulLiteral",
																					"src": "1457:1:43",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1447:6:43",
																				"nodeType": "YulIdentifier",
																				"src": "1447:6:43"
																			},
																			"nativeSrc": "1447:12:43",
																			"nodeType": "YulFunctionCall",
																			"src": "1447:12:43"
																		},
																		"nativeSrc": "1447:12:43",
																		"nodeType": "YulExpressionStatement",
																		"src": "1447:12:43"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset_1",
																		"nativeSrc": "1431:8:43",
																		"nodeType": "YulIdentifier",
																		"src": "1431:8:43"
																	},
																	{
																		"name": "_1",
																		"nativeSrc": "1441:2:43",
																		"nodeType": "YulIdentifier",
																		"src": "1441:2:43"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "1428:2:43",
																	"nodeType": "YulIdentifier",
																	"src": "1428:2:43"
																},
																"nativeSrc": "1428:16:43",
																"nodeType": "YulFunctionCall",
																"src": "1428:16:43"
															},
															"nativeSrc": "1425:36:43",
															"nodeType": "YulIf",
															"src": "1425:36:43"
														},
														{
															"nativeSrc": "1470:62:43",
															"nodeType": "YulAssignment",
															"src": "1470:62:43",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1502:9:43",
																				"nodeType": "YulIdentifier",
																				"src": "1502:9:43"
																			},
																			{
																				"name": "offset_1",
																				"nativeSrc": "1513:8:43",
																				"nodeType": "YulIdentifier",
																				"src": "1513:8:43"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1498:3:43",
																			"nodeType": "YulIdentifier",
																			"src": "1498:3:43"
																		},
																		"nativeSrc": "1498:24:43",
																		"nodeType": "YulFunctionCall",
																		"src": "1498:24:43"
																	},
																	{
																		"name": "dataEnd",
																		"nativeSrc": "1524:7:43",
																		"nodeType": "YulIdentifier",
																		"src": "1524:7:43"
																	}
																],
																"functionName": {
																	"name": "abi_decode_string",
																	"nativeSrc": "1480:17:43",
																	"nodeType": "YulIdentifier",
																	"src": "1480:17:43"
																},
																"nativeSrc": "1480:52:43",
																"nodeType": "YulFunctionCall",
																"src": "1480:52:43"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nativeSrc": "1470:6:43",
																	"nodeType": "YulIdentifier",
																	"src": "1470:6:43"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_string_memory_ptrt_uint256t_string_memory_ptr",
												"nativeSrc": "927:611:43",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1001:9:43",
														"nodeType": "YulTypedName",
														"src": "1001:9:43",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1012:7:43",
														"nodeType": "YulTypedName",
														"src": "1012:7:43",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1024:6:43",
														"nodeType": "YulTypedName",
														"src": "1024:6:43",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "1032:6:43",
														"nodeType": "YulTypedName",
														"src": "1032:6:43",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "1040:6:43",
														"nodeType": "YulTypedName",
														"src": "1040:6:43",
														"type": ""
													}
												],
												"src": "927:611:43"
											},
											{
												"body": {
													"nativeSrc": "1592:147:43",
													"nodeType": "YulBlock",
													"src": "1592:147:43",
													"statements": [
														{
															"nativeSrc": "1602:29:43",
															"nodeType": "YulAssignment",
															"src": "1602:29:43",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "1624:6:43",
																		"nodeType": "YulIdentifier",
																		"src": "1624:6:43"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1611:12:43",
																	"nodeType": "YulIdentifier",
																	"src": "1611:12:43"
																},
																"nativeSrc": "1611:20:43",
																"nodeType": "YulFunctionCall",
																"src": "1611:20:43"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1602:5:43",
																	"nodeType": "YulIdentifier",
																	"src": "1602:5:43"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1717:16:43",
																"nodeType": "YulBlock",
																"src": "1717:16:43",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1726:1:43",
																					"nodeType": "YulLiteral",
																					"src": "1726:1:43",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1729:1:43",
																					"nodeType": "YulLiteral",
																					"src": "1729:1:43",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1719:6:43",
																				"nodeType": "YulIdentifier",
																				"src": "1719:6:43"
																			},
																			"nativeSrc": "1719:12:43",
																			"nodeType": "YulFunctionCall",
																			"src": "1719:12:43"
																		},
																		"nativeSrc": "1719:12:43",
																		"nodeType": "YulExpressionStatement",
																		"src": "1719:12:43"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1653:5:43",
																				"nodeType": "YulIdentifier",
																				"src": "1653:5:43"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "1664:5:43",
																						"nodeType": "YulIdentifier",
																						"src": "1664:5:43"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "1671:42:43",
																						"nodeType": "YulLiteral",
																						"src": "1671:42:43",
																						"type": "",
																						"value": "0xffffffffffffffffffffffffffffffffffffffff"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "1660:3:43",
																					"nodeType": "YulIdentifier",
																					"src": "1660:3:43"
																				},
																				"nativeSrc": "1660:54:43",
																				"nodeType": "YulFunctionCall",
																				"src": "1660:54:43"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "1650:2:43",
																			"nodeType": "YulIdentifier",
																			"src": "1650:2:43"
																		},
																		"nativeSrc": "1650:65:43",
																		"nodeType": "YulFunctionCall",
																		"src": "1650:65:43"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1643:6:43",
																	"nodeType": "YulIdentifier",
																	"src": "1643:6:43"
																},
																"nativeSrc": "1643:73:43",
																"nodeType": "YulFunctionCall",
																"src": "1643:73:43"
															},
															"nativeSrc": "1640:93:43",
															"nodeType": "YulIf",
															"src": "1640:93:43"
														}
													]
												},
												"name": "abi_decode_address",
												"nativeSrc": "1543:196:43",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "1571:6:43",
														"nodeType": "YulTypedName",
														"src": "1571:6:43",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "1582:5:43",
														"nodeType": "YulTypedName",
														"src": "1582:5:43",
														"type": ""
													}
												],
												"src": "1543:196:43"
											},
											{
												"body": {
													"nativeSrc": "1848:218:43",
													"nodeType": "YulBlock",
													"src": "1848:218:43",
													"statements": [
														{
															"body": {
																"nativeSrc": "1894:16:43",
																"nodeType": "YulBlock",
																"src": "1894:16:43",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1903:1:43",
																					"nodeType": "YulLiteral",
																					"src": "1903:1:43",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1906:1:43",
																					"nodeType": "YulLiteral",
																					"src": "1906:1:43",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1896:6:43",
																				"nodeType": "YulIdentifier",
																				"src": "1896:6:43"
																			},
																			"nativeSrc": "1896:12:43",
																			"nodeType": "YulFunctionCall",
																			"src": "1896:12:43"
																		},
																		"nativeSrc": "1896:12:43",
																		"nodeType": "YulExpressionStatement",
																		"src": "1896:12:43"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1869:7:43",
																				"nodeType": "YulIdentifier",
																				"src": "1869:7:43"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1878:9:43",
																				"nodeType": "YulIdentifier",
																				"src": "1878:9:43"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1865:3:43",
																			"nodeType": "YulIdentifier",
																			"src": "1865:3:43"
																		},
																		"nativeSrc": "1865:23:43",
																		"nodeType": "YulFunctionCall",
																		"src": "1865:23:43"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1890:2:43",
																		"nodeType": "YulLiteral",
																		"src": "1890:2:43",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1861:3:43",
																	"nodeType": "YulIdentifier",
																	"src": "1861:3:43"
																},
																"nativeSrc": "1861:32:43",
																"nodeType": "YulFunctionCall",
																"src": "1861:32:43"
															},
															"nativeSrc": "1858:52:43",
															"nodeType": "YulIf",
															"src": "1858:52:43"
														},
														{
															"nativeSrc": "1919:39:43",
															"nodeType": "YulAssignment",
															"src": "1919:39:43",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1948:9:43",
																		"nodeType": "YulIdentifier",
																		"src": "1948:9:43"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "1929:18:43",
																	"nodeType": "YulIdentifier",
																	"src": "1929:18:43"
																},
																"nativeSrc": "1929:29:43",
																"nodeType": "YulFunctionCall",
																"src": "1929:29:43"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "1919:6:43",
																	"nodeType": "YulIdentifier",
																	"src": "1919:6:43"
																}
															]
														},
														{
															"nativeSrc": "1967:42:43",
															"nodeType": "YulAssignment",
															"src": "1967:42:43",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1994:9:43",
																				"nodeType": "YulIdentifier",
																				"src": "1994:9:43"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2005:2:43",
																				"nodeType": "YulLiteral",
																				"src": "2005:2:43",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1990:3:43",
																			"nodeType": "YulIdentifier",
																			"src": "1990:3:43"
																		},
																		"nativeSrc": "1990:18:43",
																		"nodeType": "YulFunctionCall",
																		"src": "1990:18:43"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1977:12:43",
																	"nodeType": "YulIdentifier",
																	"src": "1977:12:43"
																},
																"nativeSrc": "1977:32:43",
																"nodeType": "YulFunctionCall",
																"src": "1977:32:43"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "1967:6:43",
																	"nodeType": "YulIdentifier",
																	"src": "1967:6:43"
																}
															]
														},
														{
															"nativeSrc": "2018:42:43",
															"nodeType": "YulAssignment",
															"src": "2018:42:43",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2045:9:43",
																				"nodeType": "YulIdentifier",
																				"src": "2045:9:43"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2056:2:43",
																				"nodeType": "YulLiteral",
																				"src": "2056:2:43",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2041:3:43",
																			"nodeType": "YulIdentifier",
																			"src": "2041:3:43"
																		},
																		"nativeSrc": "2041:18:43",
																		"nodeType": "YulFunctionCall",
																		"src": "2041:18:43"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2028:12:43",
																	"nodeType": "YulIdentifier",
																	"src": "2028:12:43"
																},
																"nativeSrc": "2028:32:43",
																"nodeType": "YulFunctionCall",
																"src": "2028:32:43"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nativeSrc": "2018:6:43",
																	"nodeType": "YulIdentifier",
																	"src": "2018:6:43"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256t_uint256",
												"nativeSrc": "1744:322:43",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1798:9:43",
														"nodeType": "YulTypedName",
														"src": "1798:9:43",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1809:7:43",
														"nodeType": "YulTypedName",
														"src": "1809:7:43",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1821:6:43",
														"nodeType": "YulTypedName",
														"src": "1821:6:43",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "1829:6:43",
														"nodeType": "YulTypedName",
														"src": "1829:6:43",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "1837:6:43",
														"nodeType": "YulTypedName",
														"src": "1837:6:43",
														"type": ""
													}
												],
												"src": "1744:322:43"
											},
											{
												"body": {
													"nativeSrc": "2115:83:43",
													"nodeType": "YulBlock",
													"src": "2115:83:43",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2132:3:43",
																		"nodeType": "YulIdentifier",
																		"src": "2132:3:43"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2141:5:43",
																				"nodeType": "YulIdentifier",
																				"src": "2141:5:43"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2148:42:43",
																				"nodeType": "YulLiteral",
																				"src": "2148:42:43",
																				"type": "",
																				"value": "0xffffffffffffffffffffffffffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "2137:3:43",
																			"nodeType": "YulIdentifier",
																			"src": "2137:3:43"
																		},
																		"nativeSrc": "2137:54:43",
																		"nodeType": "YulFunctionCall",
																		"src": "2137:54:43"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2125:6:43",
																	"nodeType": "YulIdentifier",
																	"src": "2125:6:43"
																},
																"nativeSrc": "2125:67:43",
																"nodeType": "YulFunctionCall",
																"src": "2125:67:43"
															},
															"nativeSrc": "2125:67:43",
															"nodeType": "YulExpressionStatement",
															"src": "2125:67:43"
														}
													]
												},
												"name": "abi_encode_address",
												"nativeSrc": "2071:127:43",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2099:5:43",
														"nodeType": "YulTypedName",
														"src": "2099:5:43",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "2106:3:43",
														"nodeType": "YulTypedName",
														"src": "2106:3:43",
														"type": ""
													}
												],
												"src": "2071:127:43"
											},
											{
												"body": {
													"nativeSrc": "2304:125:43",
													"nodeType": "YulBlock",
													"src": "2304:125:43",
													"statements": [
														{
															"nativeSrc": "2314:26:43",
															"nodeType": "YulAssignment",
															"src": "2314:26:43",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2326:9:43",
																		"nodeType": "YulIdentifier",
																		"src": "2326:9:43"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2337:2:43",
																		"nodeType": "YulLiteral",
																		"src": "2337:2:43",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2322:3:43",
																	"nodeType": "YulIdentifier",
																	"src": "2322:3:43"
																},
																"nativeSrc": "2322:18:43",
																"nodeType": "YulFunctionCall",
																"src": "2322:18:43"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2314:4:43",
																	"nodeType": "YulIdentifier",
																	"src": "2314:4:43"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2356:9:43",
																		"nodeType": "YulIdentifier",
																		"src": "2356:9:43"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "2371:6:43",
																				"nodeType": "YulIdentifier",
																				"src": "2371:6:43"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2379:42:43",
																				"nodeType": "YulLiteral",
																				"src": "2379:42:43",
																				"type": "",
																				"value": "0xffffffffffffffffffffffffffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "2367:3:43",
																			"nodeType": "YulIdentifier",
																			"src": "2367:3:43"
																		},
																		"nativeSrc": "2367:55:43",
																		"nodeType": "YulFunctionCall",
																		"src": "2367:55:43"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2349:6:43",
																	"nodeType": "YulIdentifier",
																	"src": "2349:6:43"
																},
																"nativeSrc": "2349:74:43",
																"nodeType": "YulFunctionCall",
																"src": "2349:74:43"
															},
															"nativeSrc": "2349:74:43",
															"nodeType": "YulExpressionStatement",
															"src": "2349:74:43"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "2203:226:43",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2273:9:43",
														"nodeType": "YulTypedName",
														"src": "2273:9:43",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "2284:6:43",
														"nodeType": "YulTypedName",
														"src": "2284:6:43",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2295:4:43",
														"nodeType": "YulTypedName",
														"src": "2295:4:43",
														"type": ""
													}
												],
												"src": "2203:226:43"
											},
											{
												"body": {
													"nativeSrc": "2620:998:43",
													"nodeType": "YulBlock",
													"src": "2620:998:43",
													"statements": [
														{
															"body": {
																"nativeSrc": "2666:16:43",
																"nodeType": "YulBlock",
																"src": "2666:16:43",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2675:1:43",
																					"nodeType": "YulLiteral",
																					"src": "2675:1:43",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2678:1:43",
																					"nodeType": "YulLiteral",
																					"src": "2678:1:43",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2668:6:43",
																				"nodeType": "YulIdentifier",
																				"src": "2668:6:43"
																			},
																			"nativeSrc": "2668:12:43",
																			"nodeType": "YulFunctionCall",
																			"src": "2668:12:43"
																		},
																		"nativeSrc": "2668:12:43",
																		"nodeType": "YulExpressionStatement",
																		"src": "2668:12:43"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2641:7:43",
																				"nodeType": "YulIdentifier",
																				"src": "2641:7:43"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2650:9:43",
																				"nodeType": "YulIdentifier",
																				"src": "2650:9:43"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2637:3:43",
																			"nodeType": "YulIdentifier",
																			"src": "2637:3:43"
																		},
																		"nativeSrc": "2637:23:43",
																		"nodeType": "YulFunctionCall",
																		"src": "2637:23:43"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2662:2:43",
																		"nodeType": "YulLiteral",
																		"src": "2662:2:43",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2633:3:43",
																	"nodeType": "YulIdentifier",
																	"src": "2633:3:43"
																},
																"nativeSrc": "2633:32:43",
																"nodeType": "YulFunctionCall",
																"src": "2633:32:43"
															},
															"nativeSrc": "2630:52:43",
															"nodeType": "YulIf",
															"src": "2630:52:43"
														},
														{
															"nativeSrc": "2691:37:43",
															"nodeType": "YulVariableDeclaration",
															"src": "2691:37:43",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2718:9:43",
																		"nodeType": "YulIdentifier",
																		"src": "2718:9:43"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2705:12:43",
																	"nodeType": "YulIdentifier",
																	"src": "2705:12:43"
																},
																"nativeSrc": "2705:23:43",
																"nodeType": "YulFunctionCall",
																"src": "2705:23:43"
															},
															"variables": [
																{
																	"name": "offset",
																	"nativeSrc": "2695:6:43",
																	"nodeType": "YulTypedName",
																	"src": "2695:6:43",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "2737:28:43",
															"nodeType": "YulVariableDeclaration",
															"src": "2737:28:43",
															"value": {
																"kind": "number",
																"nativeSrc": "2747:18:43",
																"nodeType": "YulLiteral",
																"src": "2747:18:43",
																"type": "",
																"value": "0xffffffffffffffff"
															},
															"variables": [
																{
																	"name": "_1",
																	"nativeSrc": "2741:2:43",
																	"nodeType": "YulTypedName",
																	"src": "2741:2:43",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "2792:16:43",
																"nodeType": "YulBlock",
																"src": "2792:16:43",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2801:1:43",
																					"nodeType": "YulLiteral",
																					"src": "2801:1:43",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2804:1:43",
																					"nodeType": "YulLiteral",
																					"src": "2804:1:43",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2794:6:43",
																				"nodeType": "YulIdentifier",
																				"src": "2794:6:43"
																			},
																			"nativeSrc": "2794:12:43",
																			"nodeType": "YulFunctionCall",
																			"src": "2794:12:43"
																		},
																		"nativeSrc": "2794:12:43",
																		"nodeType": "YulExpressionStatement",
																		"src": "2794:12:43"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2780:6:43",
																		"nodeType": "YulIdentifier",
																		"src": "2780:6:43"
																	},
																	{
																		"name": "_1",
																		"nativeSrc": "2788:2:43",
																		"nodeType": "YulIdentifier",
																		"src": "2788:2:43"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "2777:2:43",
																	"nodeType": "YulIdentifier",
																	"src": "2777:2:43"
																},
																"nativeSrc": "2777:14:43",
																"nodeType": "YulFunctionCall",
																"src": "2777:14:43"
															},
															"nativeSrc": "2774:34:43",
															"nodeType": "YulIf",
															"src": "2774:34:43"
														},
														{
															"nativeSrc": "2817:32:43",
															"nodeType": "YulVariableDeclaration",
															"src": "2817:32:43",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2831:9:43",
																		"nodeType": "YulIdentifier",
																		"src": "2831:9:43"
																	},
																	{
																		"name": "offset",
																		"nativeSrc": "2842:6:43",
																		"nodeType": "YulIdentifier",
																		"src": "2842:6:43"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2827:3:43",
																	"nodeType": "YulIdentifier",
																	"src": "2827:3:43"
																},
																"nativeSrc": "2827:22:43",
																"nodeType": "YulFunctionCall",
																"src": "2827:22:43"
															},
															"variables": [
																{
																	"name": "_2",
																	"nativeSrc": "2821:2:43",
																	"nodeType": "YulTypedName",
																	"src": "2821:2:43",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "2897:16:43",
																"nodeType": "YulBlock",
																"src": "2897:16:43",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2906:1:43",
																					"nodeType": "YulLiteral",
																					"src": "2906:1:43",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2909:1:43",
																					"nodeType": "YulLiteral",
																					"src": "2909:1:43",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2899:6:43",
																				"nodeType": "YulIdentifier",
																				"src": "2899:6:43"
																			},
																			"nativeSrc": "2899:12:43",
																			"nodeType": "YulFunctionCall",
																			"src": "2899:12:43"
																		},
																		"nativeSrc": "2899:12:43",
																		"nodeType": "YulExpressionStatement",
																		"src": "2899:12:43"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_2",
																						"nativeSrc": "2876:2:43",
																						"nodeType": "YulIdentifier",
																						"src": "2876:2:43"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "2880:4:43",
																						"nodeType": "YulLiteral",
																						"src": "2880:4:43",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2872:3:43",
																					"nodeType": "YulIdentifier",
																					"src": "2872:3:43"
																				},
																				"nativeSrc": "2872:13:43",
																				"nodeType": "YulFunctionCall",
																				"src": "2872:13:43"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2887:7:43",
																				"nodeType": "YulIdentifier",
																				"src": "2887:7:43"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nativeSrc": "2868:3:43",
																			"nodeType": "YulIdentifier",
																			"src": "2868:3:43"
																		},
																		"nativeSrc": "2868:27:43",
																		"nodeType": "YulFunctionCall",
																		"src": "2868:27:43"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2861:6:43",
																	"nodeType": "YulIdentifier",
																	"src": "2861:6:43"
																},
																"nativeSrc": "2861:35:43",
																"nodeType": "YulFunctionCall",
																"src": "2861:35:43"
															},
															"nativeSrc": "2858:55:43",
															"nodeType": "YulIf",
															"src": "2858:55:43"
														},
														{
															"nativeSrc": "2922:30:43",
															"nodeType": "YulVariableDeclaration",
															"src": "2922:30:43",
															"value": {
																"arguments": [
																	{
																		"name": "_2",
																		"nativeSrc": "2949:2:43",
																		"nodeType": "YulIdentifier",
																		"src": "2949:2:43"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2936:12:43",
																	"nodeType": "YulIdentifier",
																	"src": "2936:12:43"
																},
																"nativeSrc": "2936:16:43",
																"nodeType": "YulFunctionCall",
																"src": "2936:16:43"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "2926:6:43",
																	"nodeType": "YulTypedName",
																	"src": "2926:6:43",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "2979:16:43",
																"nodeType": "YulBlock",
																"src": "2979:16:43",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2988:1:43",
																					"nodeType": "YulLiteral",
																					"src": "2988:1:43",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2991:1:43",
																					"nodeType": "YulLiteral",
																					"src": "2991:1:43",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2981:6:43",
																				"nodeType": "YulIdentifier",
																				"src": "2981:6:43"
																			},
																			"nativeSrc": "2981:12:43",
																			"nodeType": "YulFunctionCall",
																			"src": "2981:12:43"
																		},
																		"nativeSrc": "2981:12:43",
																		"nodeType": "YulExpressionStatement",
																		"src": "2981:12:43"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "2967:6:43",
																		"nodeType": "YulIdentifier",
																		"src": "2967:6:43"
																	},
																	{
																		"name": "_1",
																		"nativeSrc": "2975:2:43",
																		"nodeType": "YulIdentifier",
																		"src": "2975:2:43"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "2964:2:43",
																	"nodeType": "YulIdentifier",
																	"src": "2964:2:43"
																},
																"nativeSrc": "2964:14:43",
																"nodeType": "YulFunctionCall",
																"src": "2964:14:43"
															},
															"nativeSrc": "2961:34:43",
															"nodeType": "YulIf",
															"src": "2961:34:43"
														},
														{
															"body": {
																"nativeSrc": "3056:16:43",
																"nodeType": "YulBlock",
																"src": "3056:16:43",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3065:1:43",
																					"nodeType": "YulLiteral",
																					"src": "3065:1:43",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3068:1:43",
																					"nodeType": "YulLiteral",
																					"src": "3068:1:43",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "3058:6:43",
																				"nodeType": "YulIdentifier",
																				"src": "3058:6:43"
																			},
																			"nativeSrc": "3058:12:43",
																			"nodeType": "YulFunctionCall",
																			"src": "3058:12:43"
																		},
																		"nativeSrc": "3058:12:43",
																		"nodeType": "YulExpressionStatement",
																		"src": "3058:12:43"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_2",
																						"nativeSrc": "3018:2:43",
																						"nodeType": "YulIdentifier",
																						"src": "3018:2:43"
																					},
																					{
																						"arguments": [
																							{
																								"name": "length",
																								"nativeSrc": "3026:6:43",
																								"nodeType": "YulIdentifier",
																								"src": "3026:6:43"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "3034:2:43",
																								"nodeType": "YulLiteral",
																								"src": "3034:2:43",
																								"type": "",
																								"value": "96"
																							}
																						],
																						"functionName": {
																							"name": "mul",
																							"nativeSrc": "3022:3:43",
																							"nodeType": "YulIdentifier",
																							"src": "3022:3:43"
																						},
																						"nativeSrc": "3022:15:43",
																						"nodeType": "YulFunctionCall",
																						"src": "3022:15:43"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3014:3:43",
																					"nodeType": "YulIdentifier",
																					"src": "3014:3:43"
																				},
																				"nativeSrc": "3014:24:43",
																				"nodeType": "YulFunctionCall",
																				"src": "3014:24:43"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3040:4:43",
																				"nodeType": "YulLiteral",
																				"src": "3040:4:43",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3010:3:43",
																			"nodeType": "YulIdentifier",
																			"src": "3010:3:43"
																		},
																		"nativeSrc": "3010:35:43",
																		"nodeType": "YulFunctionCall",
																		"src": "3010:35:43"
																	},
																	{
																		"name": "dataEnd",
																		"nativeSrc": "3047:7:43",
																		"nodeType": "YulIdentifier",
																		"src": "3047:7:43"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "3007:2:43",
																	"nodeType": "YulIdentifier",
																	"src": "3007:2:43"
																},
																"nativeSrc": "3007:48:43",
																"nodeType": "YulFunctionCall",
																"src": "3007:48:43"
															},
															"nativeSrc": "3004:68:43",
															"nodeType": "YulIf",
															"src": "3004:68:43"
														},
														{
															"nativeSrc": "3081:23:43",
															"nodeType": "YulAssignment",
															"src": "3081:23:43",
															"value": {
																"arguments": [
																	{
																		"name": "_2",
																		"nativeSrc": "3095:2:43",
																		"nodeType": "YulIdentifier",
																		"src": "3095:2:43"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3099:4:43",
																		"nodeType": "YulLiteral",
																		"src": "3099:4:43",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3091:3:43",
																	"nodeType": "YulIdentifier",
																	"src": "3091:3:43"
																},
																"nativeSrc": "3091:13:43",
																"nodeType": "YulFunctionCall",
																"src": "3091:13:43"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "3081:6:43",
																	"nodeType": "YulIdentifier",
																	"src": "3081:6:43"
																}
															]
														},
														{
															"nativeSrc": "3113:16:43",
															"nodeType": "YulAssignment",
															"src": "3113:16:43",
															"value": {
																"name": "length",
																"nativeSrc": "3123:6:43",
																"nodeType": "YulIdentifier",
																"src": "3123:6:43"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "3113:6:43",
																	"nodeType": "YulIdentifier",
																	"src": "3113:6:43"
																}
															]
														},
														{
															"nativeSrc": "3138:50:43",
															"nodeType": "YulAssignment",
															"src": "3138:50:43",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3171:9:43",
																				"nodeType": "YulIdentifier",
																				"src": "3171:9:43"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3182:4:43",
																				"nodeType": "YulLiteral",
																				"src": "3182:4:43",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3167:3:43",
																			"nodeType": "YulIdentifier",
																			"src": "3167:3:43"
																		},
																		"nativeSrc": "3167:20:43",
																		"nodeType": "YulFunctionCall",
																		"src": "3167:20:43"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "3148:18:43",
																	"nodeType": "YulIdentifier",
																	"src": "3148:18:43"
																},
																"nativeSrc": "3148:40:43",
																"nodeType": "YulFunctionCall",
																"src": "3148:40:43"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nativeSrc": "3138:6:43",
																	"nodeType": "YulIdentifier",
																	"src": "3138:6:43"
																}
															]
														},
														{
															"nativeSrc": "3197:48:43",
															"nodeType": "YulVariableDeclaration",
															"src": "3197:48:43",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3230:9:43",
																				"nodeType": "YulIdentifier",
																				"src": "3230:9:43"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3241:2:43",
																				"nodeType": "YulLiteral",
																				"src": "3241:2:43",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3226:3:43",
																			"nodeType": "YulIdentifier",
																			"src": "3226:3:43"
																		},
																		"nativeSrc": "3226:18:43",
																		"nodeType": "YulFunctionCall",
																		"src": "3226:18:43"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "3213:12:43",
																	"nodeType": "YulIdentifier",
																	"src": "3213:12:43"
																},
																"nativeSrc": "3213:32:43",
																"nodeType": "YulFunctionCall",
																"src": "3213:32:43"
															},
															"variables": [
																{
																	"name": "offset_1",
																	"nativeSrc": "3201:8:43",
																	"nodeType": "YulTypedName",
																	"src": "3201:8:43",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "3274:16:43",
																"nodeType": "YulBlock",
																"src": "3274:16:43",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3283:1:43",
																					"nodeType": "YulLiteral",
																					"src": "3283:1:43",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3286:1:43",
																					"nodeType": "YulLiteral",
																					"src": "3286:1:43",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "3276:6:43",
																				"nodeType": "YulIdentifier",
																				"src": "3276:6:43"
																			},
																			"nativeSrc": "3276:12:43",
																			"nodeType": "YulFunctionCall",
																			"src": "3276:12:43"
																		},
																		"nativeSrc": "3276:12:43",
																		"nodeType": "YulExpressionStatement",
																		"src": "3276:12:43"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset_1",
																		"nativeSrc": "3260:8:43",
																		"nodeType": "YulIdentifier",
																		"src": "3260:8:43"
																	},
																	{
																		"name": "_1",
																		"nativeSrc": "3270:2:43",
																		"nodeType": "YulIdentifier",
																		"src": "3270:2:43"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "3257:2:43",
																	"nodeType": "YulIdentifier",
																	"src": "3257:2:43"
																},
																"nativeSrc": "3257:16:43",
																"nodeType": "YulFunctionCall",
																"src": "3257:16:43"
															},
															"nativeSrc": "3254:36:43",
															"nodeType": "YulIf",
															"src": "3254:36:43"
														},
														{
															"nativeSrc": "3299:34:43",
															"nodeType": "YulVariableDeclaration",
															"src": "3299:34:43",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3313:9:43",
																		"nodeType": "YulIdentifier",
																		"src": "3313:9:43"
																	},
																	{
																		"name": "offset_1",
																		"nativeSrc": "3324:8:43",
																		"nodeType": "YulIdentifier",
																		"src": "3324:8:43"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3309:3:43",
																	"nodeType": "YulIdentifier",
																	"src": "3309:3:43"
																},
																"nativeSrc": "3309:24:43",
																"nodeType": "YulFunctionCall",
																"src": "3309:24:43"
															},
															"variables": [
																{
																	"name": "_3",
																	"nativeSrc": "3303:2:43",
																	"nodeType": "YulTypedName",
																	"src": "3303:2:43",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "3381:16:43",
																"nodeType": "YulBlock",
																"src": "3381:16:43",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3390:1:43",
																					"nodeType": "YulLiteral",
																					"src": "3390:1:43",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3393:1:43",
																					"nodeType": "YulLiteral",
																					"src": "3393:1:43",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "3383:6:43",
																				"nodeType": "YulIdentifier",
																				"src": "3383:6:43"
																			},
																			"nativeSrc": "3383:12:43",
																			"nodeType": "YulFunctionCall",
																			"src": "3383:12:43"
																		},
																		"nativeSrc": "3383:12:43",
																		"nodeType": "YulExpressionStatement",
																		"src": "3383:12:43"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_3",
																						"nativeSrc": "3360:2:43",
																						"nodeType": "YulIdentifier",
																						"src": "3360:2:43"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "3364:4:43",
																						"nodeType": "YulLiteral",
																						"src": "3364:4:43",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3356:3:43",
																					"nodeType": "YulIdentifier",
																					"src": "3356:3:43"
																				},
																				"nativeSrc": "3356:13:43",
																				"nodeType": "YulFunctionCall",
																				"src": "3356:13:43"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3371:7:43",
																				"nodeType": "YulIdentifier",
																				"src": "3371:7:43"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nativeSrc": "3352:3:43",
																			"nodeType": "YulIdentifier",
																			"src": "3352:3:43"
																		},
																		"nativeSrc": "3352:27:43",
																		"nodeType": "YulFunctionCall",
																		"src": "3352:27:43"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "3345:6:43",
																	"nodeType": "YulIdentifier",
																	"src": "3345:6:43"
																},
																"nativeSrc": "3345:35:43",
																"nodeType": "YulFunctionCall",
																"src": "3345:35:43"
															},
															"nativeSrc": "3342:55:43",
															"nodeType": "YulIf",
															"src": "3342:55:43"
														},
														{
															"nativeSrc": "3406:32:43",
															"nodeType": "YulVariableDeclaration",
															"src": "3406:32:43",
															"value": {
																"arguments": [
																	{
																		"name": "_3",
																		"nativeSrc": "3435:2:43",
																		"nodeType": "YulIdentifier",
																		"src": "3435:2:43"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "3422:12:43",
																	"nodeType": "YulIdentifier",
																	"src": "3422:12:43"
																},
																"nativeSrc": "3422:16:43",
																"nodeType": "YulFunctionCall",
																"src": "3422:16:43"
															},
															"variables": [
																{
																	"name": "length_1",
																	"nativeSrc": "3410:8:43",
																	"nodeType": "YulTypedName",
																	"src": "3410:8:43",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "3467:16:43",
																"nodeType": "YulBlock",
																"src": "3467:16:43",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3476:1:43",
																					"nodeType": "YulLiteral",
																					"src": "3476:1:43",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3479:1:43",
																					"nodeType": "YulLiteral",
																					"src": "3479:1:43",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "3469:6:43",
																				"nodeType": "YulIdentifier",
																				"src": "3469:6:43"
																			},
																			"nativeSrc": "3469:12:43",
																			"nodeType": "YulFunctionCall",
																			"src": "3469:12:43"
																		},
																		"nativeSrc": "3469:12:43",
																		"nodeType": "YulExpressionStatement",
																		"src": "3469:12:43"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length_1",
																		"nativeSrc": "3453:8:43",
																		"nodeType": "YulIdentifier",
																		"src": "3453:8:43"
																	},
																	{
																		"name": "_1",
																		"nativeSrc": "3463:2:43",
																		"nodeType": "YulIdentifier",
																		"src": "3463:2:43"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "3450:2:43",
																	"nodeType": "YulIdentifier",
																	"src": "3450:2:43"
																},
																"nativeSrc": "3450:16:43",
																"nodeType": "YulFunctionCall",
																"src": "3450:16:43"
															},
															"nativeSrc": "3447:36:43",
															"nodeType": "YulIf",
															"src": "3447:36:43"
														},
														{
															"body": {
																"nativeSrc": "3537:16:43",
																"nodeType": "YulBlock",
																"src": "3537:16:43",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3546:1:43",
																					"nodeType": "YulLiteral",
																					"src": "3546:1:43",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3549:1:43",
																					"nodeType": "YulLiteral",
																					"src": "3549:1:43",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "3539:6:43",
																				"nodeType": "YulIdentifier",
																				"src": "3539:6:43"
																			},
																			"nativeSrc": "3539:12:43",
																			"nodeType": "YulFunctionCall",
																			"src": "3539:12:43"
																		},
																		"nativeSrc": "3539:12:43",
																		"nodeType": "YulExpressionStatement",
																		"src": "3539:12:43"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_3",
																						"nativeSrc": "3506:2:43",
																						"nodeType": "YulIdentifier",
																						"src": "3506:2:43"
																					},
																					{
																						"name": "length_1",
																						"nativeSrc": "3510:8:43",
																						"nodeType": "YulIdentifier",
																						"src": "3510:8:43"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3502:3:43",
																					"nodeType": "YulIdentifier",
																					"src": "3502:3:43"
																				},
																				"nativeSrc": "3502:17:43",
																				"nodeType": "YulFunctionCall",
																				"src": "3502:17:43"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3521:4:43",
																				"nodeType": "YulLiteral",
																				"src": "3521:4:43",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3498:3:43",
																			"nodeType": "YulIdentifier",
																			"src": "3498:3:43"
																		},
																		"nativeSrc": "3498:28:43",
																		"nodeType": "YulFunctionCall",
																		"src": "3498:28:43"
																	},
																	{
																		"name": "dataEnd",
																		"nativeSrc": "3528:7:43",
																		"nodeType": "YulIdentifier",
																		"src": "3528:7:43"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "3495:2:43",
																	"nodeType": "YulIdentifier",
																	"src": "3495:2:43"
																},
																"nativeSrc": "3495:41:43",
																"nodeType": "YulFunctionCall",
																"src": "3495:41:43"
															},
															"nativeSrc": "3492:61:43",
															"nodeType": "YulIf",
															"src": "3492:61:43"
														},
														{
															"nativeSrc": "3562:23:43",
															"nodeType": "YulAssignment",
															"src": "3562:23:43",
															"value": {
																"arguments": [
																	{
																		"name": "_3",
																		"nativeSrc": "3576:2:43",
																		"nodeType": "YulIdentifier",
																		"src": "3576:2:43"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3580:4:43",
																		"nodeType": "YulLiteral",
																		"src": "3580:4:43",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3572:3:43",
																	"nodeType": "YulIdentifier",
																	"src": "3572:3:43"
																},
																"nativeSrc": "3572:13:43",
																"nodeType": "YulFunctionCall",
																"src": "3572:13:43"
															},
															"variableNames": [
																{
																	"name": "value3",
																	"nativeSrc": "3562:6:43",
																	"nodeType": "YulIdentifier",
																	"src": "3562:6:43"
																}
															]
														},
														{
															"nativeSrc": "3594:18:43",
															"nodeType": "YulAssignment",
															"src": "3594:18:43",
															"value": {
																"name": "length_1",
																"nativeSrc": "3604:8:43",
																"nodeType": "YulIdentifier",
																"src": "3604:8:43"
															},
															"variableNames": [
																{
																	"name": "value4",
																	"nativeSrc": "3594:6:43",
																	"nodeType": "YulIdentifier",
																	"src": "3594:6:43"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_array$_t_struct$_FacetCut_$3551_calldata_ptr_$dyn_calldata_ptrt_addresst_bytes_calldata_ptr",
												"nativeSrc": "2434:1184:43",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2554:9:43",
														"nodeType": "YulTypedName",
														"src": "2554:9:43",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2565:7:43",
														"nodeType": "YulTypedName",
														"src": "2565:7:43",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2577:6:43",
														"nodeType": "YulTypedName",
														"src": "2577:6:43",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "2585:6:43",
														"nodeType": "YulTypedName",
														"src": "2585:6:43",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "2593:6:43",
														"nodeType": "YulTypedName",
														"src": "2593:6:43",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "2601:6:43",
														"nodeType": "YulTypedName",
														"src": "2601:6:43",
														"type": ""
													},
													{
														"name": "value4",
														"nativeSrc": "2609:6:43",
														"nodeType": "YulTypedName",
														"src": "2609:6:43",
														"type": ""
													}
												],
												"src": "2434:1184:43"
											},
											{
												"body": {
													"nativeSrc": "3693:116:43",
													"nodeType": "YulBlock",
													"src": "3693:116:43",
													"statements": [
														{
															"body": {
																"nativeSrc": "3739:16:43",
																"nodeType": "YulBlock",
																"src": "3739:16:43",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3748:1:43",
																					"nodeType": "YulLiteral",
																					"src": "3748:1:43",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3751:1:43",
																					"nodeType": "YulLiteral",
																					"src": "3751:1:43",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "3741:6:43",
																				"nodeType": "YulIdentifier",
																				"src": "3741:6:43"
																			},
																			"nativeSrc": "3741:12:43",
																			"nodeType": "YulFunctionCall",
																			"src": "3741:12:43"
																		},
																		"nativeSrc": "3741:12:43",
																		"nodeType": "YulExpressionStatement",
																		"src": "3741:12:43"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3714:7:43",
																				"nodeType": "YulIdentifier",
																				"src": "3714:7:43"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3723:9:43",
																				"nodeType": "YulIdentifier",
																				"src": "3723:9:43"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3710:3:43",
																			"nodeType": "YulIdentifier",
																			"src": "3710:3:43"
																		},
																		"nativeSrc": "3710:23:43",
																		"nodeType": "YulFunctionCall",
																		"src": "3710:23:43"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3735:2:43",
																		"nodeType": "YulLiteral",
																		"src": "3735:2:43",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3706:3:43",
																	"nodeType": "YulIdentifier",
																	"src": "3706:3:43"
																},
																"nativeSrc": "3706:32:43",
																"nodeType": "YulFunctionCall",
																"src": "3706:32:43"
															},
															"nativeSrc": "3703:52:43",
															"nodeType": "YulIf",
															"src": "3703:52:43"
														},
														{
															"nativeSrc": "3764:39:43",
															"nodeType": "YulAssignment",
															"src": "3764:39:43",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3793:9:43",
																		"nodeType": "YulIdentifier",
																		"src": "3793:9:43"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "3774:18:43",
																	"nodeType": "YulIdentifier",
																	"src": "3774:18:43"
																},
																"nativeSrc": "3774:29:43",
																"nodeType": "YulFunctionCall",
																"src": "3774:29:43"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "3764:6:43",
																	"nodeType": "YulIdentifier",
																	"src": "3764:6:43"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "3623:186:43",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3659:9:43",
														"nodeType": "YulTypedName",
														"src": "3659:9:43",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3670:7:43",
														"nodeType": "YulTypedName",
														"src": "3670:7:43",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3682:6:43",
														"nodeType": "YulTypedName",
														"src": "3682:6:43",
														"type": ""
													}
												],
												"src": "3623:186:43"
											},
											{
												"body": {
													"nativeSrc": "3883:68:43",
													"nodeType": "YulBlock",
													"src": "3883:68:43",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3900:3:43",
																		"nodeType": "YulIdentifier",
																		"src": "3900:3:43"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3905:1:43",
																		"nodeType": "YulLiteral",
																		"src": "3905:1:43",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3893:6:43",
																	"nodeType": "YulIdentifier",
																	"src": "3893:6:43"
																},
																"nativeSrc": "3893:14:43",
																"nodeType": "YulFunctionCall",
																"src": "3893:14:43"
															},
															"nativeSrc": "3893:14:43",
															"nodeType": "YulExpressionStatement",
															"src": "3893:14:43"
														},
														{
															"nativeSrc": "3916:29:43",
															"nodeType": "YulAssignment",
															"src": "3916:29:43",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3935:3:43",
																		"nodeType": "YulIdentifier",
																		"src": "3935:3:43"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3940:4:43",
																		"nodeType": "YulLiteral",
																		"src": "3940:4:43",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3931:3:43",
																	"nodeType": "YulIdentifier",
																	"src": "3931:3:43"
																},
																"nativeSrc": "3931:14:43",
																"nodeType": "YulFunctionCall",
																"src": "3931:14:43"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "3916:11:43",
																	"nodeType": "YulIdentifier",
																	"src": "3916:11:43"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_string",
												"nativeSrc": "3814:137:43",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "3859:3:43",
														"nodeType": "YulTypedName",
														"src": "3859:3:43",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "3867:11:43",
														"nodeType": "YulTypedName",
														"src": "3867:11:43",
														"type": ""
													}
												],
												"src": "3814:137:43"
											},
											{
												"body": {
													"nativeSrc": "4022:184:43",
													"nodeType": "YulBlock",
													"src": "4022:184:43",
													"statements": [
														{
															"nativeSrc": "4032:10:43",
															"nodeType": "YulVariableDeclaration",
															"src": "4032:10:43",
															"value": {
																"kind": "number",
																"nativeSrc": "4041:1:43",
																"nodeType": "YulLiteral",
																"src": "4041:1:43",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nativeSrc": "4036:1:43",
																	"nodeType": "YulTypedName",
																	"src": "4036:1:43",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "4101:63:43",
																"nodeType": "YulBlock",
																"src": "4101:63:43",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nativeSrc": "4126:3:43",
																							"nodeType": "YulIdentifier",
																							"src": "4126:3:43"
																						},
																						{
																							"name": "i",
																							"nativeSrc": "4131:1:43",
																							"nodeType": "YulIdentifier",
																							"src": "4131:1:43"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "4122:3:43",
																						"nodeType": "YulIdentifier",
																						"src": "4122:3:43"
																					},
																					"nativeSrc": "4122:11:43",
																					"nodeType": "YulFunctionCall",
																					"src": "4122:11:43"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nativeSrc": "4145:3:43",
																									"nodeType": "YulIdentifier",
																									"src": "4145:3:43"
																								},
																								{
																									"name": "i",
																									"nativeSrc": "4150:1:43",
																									"nodeType": "YulIdentifier",
																									"src": "4150:1:43"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "4141:3:43",
																								"nodeType": "YulIdentifier",
																								"src": "4141:3:43"
																							},
																							"nativeSrc": "4141:11:43",
																							"nodeType": "YulFunctionCall",
																							"src": "4141:11:43"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nativeSrc": "4135:5:43",
																						"nodeType": "YulIdentifier",
																						"src": "4135:5:43"
																					},
																					"nativeSrc": "4135:18:43",
																					"nodeType": "YulFunctionCall",
																					"src": "4135:18:43"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "4115:6:43",
																				"nodeType": "YulIdentifier",
																				"src": "4115:6:43"
																			},
																			"nativeSrc": "4115:39:43",
																			"nodeType": "YulFunctionCall",
																			"src": "4115:39:43"
																		},
																		"nativeSrc": "4115:39:43",
																		"nodeType": "YulExpressionStatement",
																		"src": "4115:39:43"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nativeSrc": "4062:1:43",
																		"nodeType": "YulIdentifier",
																		"src": "4062:1:43"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "4065:6:43",
																		"nodeType": "YulIdentifier",
																		"src": "4065:6:43"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "4059:2:43",
																	"nodeType": "YulIdentifier",
																	"src": "4059:2:43"
																},
																"nativeSrc": "4059:13:43",
																"nodeType": "YulFunctionCall",
																"src": "4059:13:43"
															},
															"nativeSrc": "4051:113:43",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "4073:19:43",
																"nodeType": "YulBlock",
																"src": "4073:19:43",
																"statements": [
																	{
																		"nativeSrc": "4075:15:43",
																		"nodeType": "YulAssignment",
																		"src": "4075:15:43",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nativeSrc": "4084:1:43",
																					"nodeType": "YulIdentifier",
																					"src": "4084:1:43"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4087:2:43",
																					"nodeType": "YulLiteral",
																					"src": "4087:2:43",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "4080:3:43",
																				"nodeType": "YulIdentifier",
																				"src": "4080:3:43"
																			},
																			"nativeSrc": "4080:10:43",
																			"nodeType": "YulFunctionCall",
																			"src": "4080:10:43"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nativeSrc": "4075:1:43",
																				"nodeType": "YulIdentifier",
																				"src": "4075:1:43"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "4055:3:43",
																"nodeType": "YulBlock",
																"src": "4055:3:43",
																"statements": []
															},
															"src": "4051:113:43"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "4184:3:43",
																				"nodeType": "YulIdentifier",
																				"src": "4184:3:43"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "4189:6:43",
																				"nodeType": "YulIdentifier",
																				"src": "4189:6:43"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4180:3:43",
																			"nodeType": "YulIdentifier",
																			"src": "4180:3:43"
																		},
																		"nativeSrc": "4180:16:43",
																		"nodeType": "YulFunctionCall",
																		"src": "4180:16:43"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4198:1:43",
																		"nodeType": "YulLiteral",
																		"src": "4198:1:43",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4173:6:43",
																	"nodeType": "YulIdentifier",
																	"src": "4173:6:43"
																},
																"nativeSrc": "4173:27:43",
																"nodeType": "YulFunctionCall",
																"src": "4173:27:43"
															},
															"nativeSrc": "4173:27:43",
															"nodeType": "YulExpressionStatement",
															"src": "4173:27:43"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nativeSrc": "3956:250:43",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "4000:3:43",
														"nodeType": "YulTypedName",
														"src": "4000:3:43",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "4005:3:43",
														"nodeType": "YulTypedName",
														"src": "4005:3:43",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "4010:6:43",
														"nodeType": "YulTypedName",
														"src": "4010:6:43",
														"type": ""
													}
												],
												"src": "3956:250:43"
											},
											{
												"body": {
													"nativeSrc": "4261:221:43",
													"nodeType": "YulBlock",
													"src": "4261:221:43",
													"statements": [
														{
															"nativeSrc": "4271:26:43",
															"nodeType": "YulVariableDeclaration",
															"src": "4271:26:43",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "4291:5:43",
																		"nodeType": "YulIdentifier",
																		"src": "4291:5:43"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "4285:5:43",
																	"nodeType": "YulIdentifier",
																	"src": "4285:5:43"
																},
																"nativeSrc": "4285:12:43",
																"nodeType": "YulFunctionCall",
																"src": "4285:12:43"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "4275:6:43",
																	"nodeType": "YulTypedName",
																	"src": "4275:6:43",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4313:3:43",
																		"nodeType": "YulIdentifier",
																		"src": "4313:3:43"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "4318:6:43",
																		"nodeType": "YulIdentifier",
																		"src": "4318:6:43"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4306:6:43",
																	"nodeType": "YulIdentifier",
																	"src": "4306:6:43"
																},
																"nativeSrc": "4306:19:43",
																"nodeType": "YulFunctionCall",
																"src": "4306:19:43"
															},
															"nativeSrc": "4306:19:43",
															"nodeType": "YulExpressionStatement",
															"src": "4306:19:43"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "4373:5:43",
																				"nodeType": "YulIdentifier",
																				"src": "4373:5:43"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4380:4:43",
																				"nodeType": "YulLiteral",
																				"src": "4380:4:43",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4369:3:43",
																			"nodeType": "YulIdentifier",
																			"src": "4369:3:43"
																		},
																		"nativeSrc": "4369:16:43",
																		"nodeType": "YulFunctionCall",
																		"src": "4369:16:43"
																	},
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nativeSrc": "4391:3:43",
																				"nodeType": "YulIdentifier",
																				"src": "4391:3:43"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4396:4:43",
																				"nodeType": "YulLiteral",
																				"src": "4396:4:43",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4387:3:43",
																			"nodeType": "YulIdentifier",
																			"src": "4387:3:43"
																		},
																		"nativeSrc": "4387:14:43",
																		"nodeType": "YulFunctionCall",
																		"src": "4387:14:43"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "4403:6:43",
																		"nodeType": "YulIdentifier",
																		"src": "4403:6:43"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "4334:34:43",
																	"nodeType": "YulIdentifier",
																	"src": "4334:34:43"
																},
																"nativeSrc": "4334:76:43",
																"nodeType": "YulFunctionCall",
																"src": "4334:76:43"
															},
															"nativeSrc": "4334:76:43",
															"nodeType": "YulExpressionStatement",
															"src": "4334:76:43"
														},
														{
															"nativeSrc": "4419:57:43",
															"nodeType": "YulAssignment",
															"src": "4419:57:43",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nativeSrc": "4434:3:43",
																				"nodeType": "YulIdentifier",
																				"src": "4434:3:43"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "length",
																								"nativeSrc": "4447:6:43",
																								"nodeType": "YulIdentifier",
																								"src": "4447:6:43"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "4455:2:43",
																								"nodeType": "YulLiteral",
																								"src": "4455:2:43",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nativeSrc": "4443:3:43",
																							"nodeType": "YulIdentifier",
																							"src": "4443:3:43"
																						},
																						"nativeSrc": "4443:15:43",
																						"nodeType": "YulFunctionCall",
																						"src": "4443:15:43"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "4464:2:43",
																								"nodeType": "YulLiteral",
																								"src": "4464:2:43",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nativeSrc": "4460:3:43",
																							"nodeType": "YulIdentifier",
																							"src": "4460:3:43"
																						},
																						"nativeSrc": "4460:7:43",
																						"nodeType": "YulFunctionCall",
																						"src": "4460:7:43"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "4439:3:43",
																					"nodeType": "YulIdentifier",
																					"src": "4439:3:43"
																				},
																				"nativeSrc": "4439:29:43",
																				"nodeType": "YulFunctionCall",
																				"src": "4439:29:43"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4430:3:43",
																			"nodeType": "YulIdentifier",
																			"src": "4430:3:43"
																		},
																		"nativeSrc": "4430:39:43",
																		"nodeType": "YulFunctionCall",
																		"src": "4430:39:43"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4471:4:43",
																		"nodeType": "YulLiteral",
																		"src": "4471:4:43",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4426:3:43",
																	"nodeType": "YulIdentifier",
																	"src": "4426:3:43"
																},
																"nativeSrc": "4426:50:43",
																"nodeType": "YulFunctionCall",
																"src": "4426:50:43"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "4419:3:43",
																	"nodeType": "YulIdentifier",
																	"src": "4419:3:43"
																}
															]
														}
													]
												},
												"name": "abi_encode_string",
												"nativeSrc": "4211:271:43",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4238:5:43",
														"nodeType": "YulTypedName",
														"src": "4238:5:43",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "4245:3:43",
														"nodeType": "YulTypedName",
														"src": "4245:3:43",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "4253:3:43",
														"nodeType": "YulTypedName",
														"src": "4253:3:43",
														"type": ""
													}
												],
												"src": "4211:271:43"
											},
											{
												"body": {
													"nativeSrc": "4656:214:43",
													"nodeType": "YulBlock",
													"src": "4656:214:43",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4673:9:43",
																		"nodeType": "YulIdentifier",
																		"src": "4673:9:43"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4684:2:43",
																		"nodeType": "YulLiteral",
																		"src": "4684:2:43",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4666:6:43",
																	"nodeType": "YulIdentifier",
																	"src": "4666:6:43"
																},
																"nativeSrc": "4666:21:43",
																"nodeType": "YulFunctionCall",
																"src": "4666:21:43"
															},
															"nativeSrc": "4666:21:43",
															"nodeType": "YulExpressionStatement",
															"src": "4666:21:43"
														},
														{
															"nativeSrc": "4696:59:43",
															"nodeType": "YulVariableDeclaration",
															"src": "4696:59:43",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "4728:6:43",
																		"nodeType": "YulIdentifier",
																		"src": "4728:6:43"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4740:9:43",
																				"nodeType": "YulIdentifier",
																				"src": "4740:9:43"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4751:2:43",
																				"nodeType": "YulLiteral",
																				"src": "4751:2:43",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4736:3:43",
																			"nodeType": "YulIdentifier",
																			"src": "4736:3:43"
																		},
																		"nativeSrc": "4736:18:43",
																		"nodeType": "YulFunctionCall",
																		"src": "4736:18:43"
																	}
																],
																"functionName": {
																	"name": "abi_encode_string",
																	"nativeSrc": "4710:17:43",
																	"nodeType": "YulIdentifier",
																	"src": "4710:17:43"
																},
																"nativeSrc": "4710:45:43",
																"nodeType": "YulFunctionCall",
																"src": "4710:45:43"
															},
															"variables": [
																{
																	"name": "tail_1",
																	"nativeSrc": "4700:6:43",
																	"nodeType": "YulTypedName",
																	"src": "4700:6:43",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4775:9:43",
																				"nodeType": "YulIdentifier",
																				"src": "4775:9:43"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4786:2:43",
																				"nodeType": "YulLiteral",
																				"src": "4786:2:43",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4771:3:43",
																			"nodeType": "YulIdentifier",
																			"src": "4771:3:43"
																		},
																		"nativeSrc": "4771:18:43",
																		"nodeType": "YulFunctionCall",
																		"src": "4771:18:43"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail_1",
																				"nativeSrc": "4795:6:43",
																				"nodeType": "YulIdentifier",
																				"src": "4795:6:43"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "4803:9:43",
																				"nodeType": "YulIdentifier",
																				"src": "4803:9:43"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4791:3:43",
																			"nodeType": "YulIdentifier",
																			"src": "4791:3:43"
																		},
																		"nativeSrc": "4791:22:43",
																		"nodeType": "YulFunctionCall",
																		"src": "4791:22:43"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4764:6:43",
																	"nodeType": "YulIdentifier",
																	"src": "4764:6:43"
																},
																"nativeSrc": "4764:50:43",
																"nodeType": "YulFunctionCall",
																"src": "4764:50:43"
															},
															"nativeSrc": "4764:50:43",
															"nodeType": "YulExpressionStatement",
															"src": "4764:50:43"
														},
														{
															"nativeSrc": "4823:41:43",
															"nodeType": "YulAssignment",
															"src": "4823:41:43",
															"value": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "4849:6:43",
																		"nodeType": "YulIdentifier",
																		"src": "4849:6:43"
																	},
																	{
																		"name": "tail_1",
																		"nativeSrc": "4857:6:43",
																		"nodeType": "YulIdentifier",
																		"src": "4857:6:43"
																	}
																],
																"functionName": {
																	"name": "abi_encode_string",
																	"nativeSrc": "4831:17:43",
																	"nodeType": "YulIdentifier",
																	"src": "4831:17:43"
																},
																"nativeSrc": "4831:33:43",
																"nodeType": "YulFunctionCall",
																"src": "4831:33:43"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4823:4:43",
																	"nodeType": "YulIdentifier",
																	"src": "4823:4:43"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "4487:383:43",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4617:9:43",
														"nodeType": "YulTypedName",
														"src": "4617:9:43",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "4628:6:43",
														"nodeType": "YulTypedName",
														"src": "4628:6:43",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "4636:6:43",
														"nodeType": "YulTypedName",
														"src": "4636:6:43",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4647:4:43",
														"nodeType": "YulTypedName",
														"src": "4647:4:43",
														"type": ""
													}
												],
												"src": "4487:383:43"
											},
											{
												"body": {
													"nativeSrc": "5004:168:43",
													"nodeType": "YulBlock",
													"src": "5004:168:43",
													"statements": [
														{
															"nativeSrc": "5014:26:43",
															"nodeType": "YulAssignment",
															"src": "5014:26:43",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5026:9:43",
																		"nodeType": "YulIdentifier",
																		"src": "5026:9:43"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5037:2:43",
																		"nodeType": "YulLiteral",
																		"src": "5037:2:43",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5022:3:43",
																	"nodeType": "YulIdentifier",
																	"src": "5022:3:43"
																},
																"nativeSrc": "5022:18:43",
																"nodeType": "YulFunctionCall",
																"src": "5022:18:43"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5014:4:43",
																	"nodeType": "YulIdentifier",
																	"src": "5014:4:43"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5056:9:43",
																		"nodeType": "YulIdentifier",
																		"src": "5056:9:43"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "5071:6:43",
																				"nodeType": "YulIdentifier",
																				"src": "5071:6:43"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5079:42:43",
																				"nodeType": "YulLiteral",
																				"src": "5079:42:43",
																				"type": "",
																				"value": "0xffffffffffffffffffffffffffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "5067:3:43",
																			"nodeType": "YulIdentifier",
																			"src": "5067:3:43"
																		},
																		"nativeSrc": "5067:55:43",
																		"nodeType": "YulFunctionCall",
																		"src": "5067:55:43"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5049:6:43",
																	"nodeType": "YulIdentifier",
																	"src": "5049:6:43"
																},
																"nativeSrc": "5049:74:43",
																"nodeType": "YulFunctionCall",
																"src": "5049:74:43"
															},
															"nativeSrc": "5049:74:43",
															"nodeType": "YulExpressionStatement",
															"src": "5049:74:43"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5143:9:43",
																				"nodeType": "YulIdentifier",
																				"src": "5143:9:43"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5154:2:43",
																				"nodeType": "YulLiteral",
																				"src": "5154:2:43",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5139:3:43",
																			"nodeType": "YulIdentifier",
																			"src": "5139:3:43"
																		},
																		"nativeSrc": "5139:18:43",
																		"nodeType": "YulFunctionCall",
																		"src": "5139:18:43"
																	},
																	{
																		"name": "value1",
																		"nativeSrc": "5159:6:43",
																		"nodeType": "YulIdentifier",
																		"src": "5159:6:43"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5132:6:43",
																	"nodeType": "YulIdentifier",
																	"src": "5132:6:43"
																},
																"nativeSrc": "5132:34:43",
																"nodeType": "YulFunctionCall",
																"src": "5132:34:43"
															},
															"nativeSrc": "5132:34:43",
															"nodeType": "YulExpressionStatement",
															"src": "5132:34:43"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "4875:297:43",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4965:9:43",
														"nodeType": "YulTypedName",
														"src": "4965:9:43",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "4976:6:43",
														"nodeType": "YulTypedName",
														"src": "4976:6:43",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "4984:6:43",
														"nodeType": "YulTypedName",
														"src": "4984:6:43",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4995:4:43",
														"nodeType": "YulTypedName",
														"src": "4995:4:43",
														"type": ""
													}
												],
												"src": "4875:297:43"
											},
											{
												"body": {
													"nativeSrc": "5209:152:43",
													"nodeType": "YulBlock",
													"src": "5209:152:43",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5226:1:43",
																		"nodeType": "YulLiteral",
																		"src": "5226:1:43",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5229:77:43",
																		"nodeType": "YulLiteral",
																		"src": "5229:77:43",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5219:6:43",
																	"nodeType": "YulIdentifier",
																	"src": "5219:6:43"
																},
																"nativeSrc": "5219:88:43",
																"nodeType": "YulFunctionCall",
																"src": "5219:88:43"
															},
															"nativeSrc": "5219:88:43",
															"nodeType": "YulExpressionStatement",
															"src": "5219:88:43"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5323:1:43",
																		"nodeType": "YulLiteral",
																		"src": "5323:1:43",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5326:4:43",
																		"nodeType": "YulLiteral",
																		"src": "5326:4:43",
																		"type": "",
																		"value": "0x32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5316:6:43",
																	"nodeType": "YulIdentifier",
																	"src": "5316:6:43"
																},
																"nativeSrc": "5316:15:43",
																"nodeType": "YulFunctionCall",
																"src": "5316:15:43"
															},
															"nativeSrc": "5316:15:43",
															"nodeType": "YulExpressionStatement",
															"src": "5316:15:43"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5347:1:43",
																		"nodeType": "YulLiteral",
																		"src": "5347:1:43",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5350:4:43",
																		"nodeType": "YulLiteral",
																		"src": "5350:4:43",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "5340:6:43",
																	"nodeType": "YulIdentifier",
																	"src": "5340:6:43"
																},
																"nativeSrc": "5340:15:43",
																"nodeType": "YulFunctionCall",
																"src": "5340:15:43"
															},
															"nativeSrc": "5340:15:43",
															"nodeType": "YulExpressionStatement",
															"src": "5340:15:43"
														}
													]
												},
												"name": "panic_error_0x32",
												"nativeSrc": "5177:184:43",
												"nodeType": "YulFunctionDefinition",
												"src": "5177:184:43"
											},
											{
												"body": {
													"nativeSrc": "5540:176:43",
													"nodeType": "YulBlock",
													"src": "5540:176:43",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5557:9:43",
																		"nodeType": "YulIdentifier",
																		"src": "5557:9:43"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5568:2:43",
																		"nodeType": "YulLiteral",
																		"src": "5568:2:43",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5550:6:43",
																	"nodeType": "YulIdentifier",
																	"src": "5550:6:43"
																},
																"nativeSrc": "5550:21:43",
																"nodeType": "YulFunctionCall",
																"src": "5550:21:43"
															},
															"nativeSrc": "5550:21:43",
															"nodeType": "YulExpressionStatement",
															"src": "5550:21:43"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5591:9:43",
																				"nodeType": "YulIdentifier",
																				"src": "5591:9:43"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5602:2:43",
																				"nodeType": "YulLiteral",
																				"src": "5602:2:43",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5587:3:43",
																			"nodeType": "YulIdentifier",
																			"src": "5587:3:43"
																		},
																		"nativeSrc": "5587:18:43",
																		"nodeType": "YulFunctionCall",
																		"src": "5587:18:43"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5607:2:43",
																		"nodeType": "YulLiteral",
																		"src": "5607:2:43",
																		"type": "",
																		"value": "26"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5580:6:43",
																	"nodeType": "YulIdentifier",
																	"src": "5580:6:43"
																},
																"nativeSrc": "5580:30:43",
																"nodeType": "YulFunctionCall",
																"src": "5580:30:43"
															},
															"nativeSrc": "5580:30:43",
															"nodeType": "YulExpressionStatement",
															"src": "5580:30:43"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5630:9:43",
																				"nodeType": "YulIdentifier",
																				"src": "5630:9:43"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5641:2:43",
																				"nodeType": "YulLiteral",
																				"src": "5641:2:43",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5626:3:43",
																			"nodeType": "YulIdentifier",
																			"src": "5626:3:43"
																		},
																		"nativeSrc": "5626:18:43",
																		"nodeType": "YulFunctionCall",
																		"src": "5626:18:43"
																	},
																	{
																		"hexValue": "496e76616c696420696e697469616c697a652061646472657373",
																		"kind": "string",
																		"nativeSrc": "5646:28:43",
																		"nodeType": "YulLiteral",
																		"src": "5646:28:43",
																		"type": "",
																		"value": "Invalid initialize address"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5619:6:43",
																	"nodeType": "YulIdentifier",
																	"src": "5619:6:43"
																},
																"nativeSrc": "5619:56:43",
																"nodeType": "YulFunctionCall",
																"src": "5619:56:43"
															},
															"nativeSrc": "5619:56:43",
															"nodeType": "YulExpressionStatement",
															"src": "5619:56:43"
														},
														{
															"nativeSrc": "5684:26:43",
															"nodeType": "YulAssignment",
															"src": "5684:26:43",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5696:9:43",
																		"nodeType": "YulIdentifier",
																		"src": "5696:9:43"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5707:2:43",
																		"nodeType": "YulLiteral",
																		"src": "5707:2:43",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5692:3:43",
																	"nodeType": "YulIdentifier",
																	"src": "5692:3:43"
																},
																"nativeSrc": "5692:18:43",
																"nodeType": "YulFunctionCall",
																"src": "5692:18:43"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5684:4:43",
																	"nodeType": "YulIdentifier",
																	"src": "5684:4:43"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_945c9de7d462e2062e246bb52c3f039fb3d4db67a6f9243fcb5c6410338702c3__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "5366:350:43",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5517:9:43",
														"nodeType": "YulTypedName",
														"src": "5517:9:43",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5531:4:43",
														"nodeType": "YulTypedName",
														"src": "5531:4:43",
														"type": ""
													}
												],
												"src": "5366:350:43"
											},
											{
												"body": {
													"nativeSrc": "5868:124:43",
													"nodeType": "YulBlock",
													"src": "5868:124:43",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5891:3:43",
																		"nodeType": "YulIdentifier",
																		"src": "5891:3:43"
																	},
																	{
																		"name": "value0",
																		"nativeSrc": "5896:6:43",
																		"nodeType": "YulIdentifier",
																		"src": "5896:6:43"
																	},
																	{
																		"name": "value1",
																		"nativeSrc": "5904:6:43",
																		"nodeType": "YulIdentifier",
																		"src": "5904:6:43"
																	}
																],
																"functionName": {
																	"name": "calldatacopy",
																	"nativeSrc": "5878:12:43",
																	"nodeType": "YulIdentifier",
																	"src": "5878:12:43"
																},
																"nativeSrc": "5878:33:43",
																"nodeType": "YulFunctionCall",
																"src": "5878:33:43"
															},
															"nativeSrc": "5878:33:43",
															"nodeType": "YulExpressionStatement",
															"src": "5878:33:43"
														},
														{
															"nativeSrc": "5920:26:43",
															"nodeType": "YulVariableDeclaration",
															"src": "5920:26:43",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5934:3:43",
																		"nodeType": "YulIdentifier",
																		"src": "5934:3:43"
																	},
																	{
																		"name": "value1",
																		"nativeSrc": "5939:6:43",
																		"nodeType": "YulIdentifier",
																		"src": "5939:6:43"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5930:3:43",
																	"nodeType": "YulIdentifier",
																	"src": "5930:3:43"
																},
																"nativeSrc": "5930:16:43",
																"nodeType": "YulFunctionCall",
																"src": "5930:16:43"
															},
															"variables": [
																{
																	"name": "_1",
																	"nativeSrc": "5924:2:43",
																	"nodeType": "YulTypedName",
																	"src": "5924:2:43",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "_1",
																		"nativeSrc": "5962:2:43",
																		"nodeType": "YulIdentifier",
																		"src": "5962:2:43"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5966:1:43",
																		"nodeType": "YulLiteral",
																		"src": "5966:1:43",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5955:6:43",
																	"nodeType": "YulIdentifier",
																	"src": "5955:6:43"
																},
																"nativeSrc": "5955:13:43",
																"nodeType": "YulFunctionCall",
																"src": "5955:13:43"
															},
															"nativeSrc": "5955:13:43",
															"nodeType": "YulExpressionStatement",
															"src": "5955:13:43"
														},
														{
															"nativeSrc": "5977:9:43",
															"nodeType": "YulAssignment",
															"src": "5977:9:43",
															"value": {
																"name": "_1",
																"nativeSrc": "5984:2:43",
																"nodeType": "YulIdentifier",
																"src": "5984:2:43"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "5977:3:43",
																	"nodeType": "YulIdentifier",
																	"src": "5977:3:43"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_bytes_calldata_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nativeSrc": "5721:271:43",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "5836:3:43",
														"nodeType": "YulTypedName",
														"src": "5836:3:43",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "5841:6:43",
														"nodeType": "YulTypedName",
														"src": "5841:6:43",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "5849:6:43",
														"nodeType": "YulTypedName",
														"src": "5849:6:43",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "5860:3:43",
														"nodeType": "YulTypedName",
														"src": "5860:3:43",
														"type": ""
													}
												],
												"src": "5721:271:43"
											},
											{
												"body": {
													"nativeSrc": "6045:171:43",
													"nodeType": "YulBlock",
													"src": "6045:171:43",
													"statements": [
														{
															"nativeSrc": "6055:29:43",
															"nodeType": "YulAssignment",
															"src": "6055:29:43",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "6077:6:43",
																		"nodeType": "YulIdentifier",
																		"src": "6077:6:43"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "6064:12:43",
																	"nodeType": "YulIdentifier",
																	"src": "6064:12:43"
																},
																"nativeSrc": "6064:20:43",
																"nodeType": "YulFunctionCall",
																"src": "6064:20:43"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "6055:5:43",
																	"nodeType": "YulIdentifier",
																	"src": "6055:5:43"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "6194:16:43",
																"nodeType": "YulBlock",
																"src": "6194:16:43",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "6203:1:43",
																					"nodeType": "YulLiteral",
																					"src": "6203:1:43",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "6206:1:43",
																					"nodeType": "YulLiteral",
																					"src": "6206:1:43",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "6196:6:43",
																				"nodeType": "YulIdentifier",
																				"src": "6196:6:43"
																			},
																			"nativeSrc": "6196:12:43",
																			"nodeType": "YulFunctionCall",
																			"src": "6196:12:43"
																		},
																		"nativeSrc": "6196:12:43",
																		"nodeType": "YulExpressionStatement",
																		"src": "6196:12:43"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "6106:5:43",
																				"nodeType": "YulIdentifier",
																				"src": "6106:5:43"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "6117:5:43",
																						"nodeType": "YulIdentifier",
																						"src": "6117:5:43"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "6124:66:43",
																						"nodeType": "YulLiteral",
																						"src": "6124:66:43",
																						"type": "",
																						"value": "0xffffffff00000000000000000000000000000000000000000000000000000000"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "6113:3:43",
																					"nodeType": "YulIdentifier",
																					"src": "6113:3:43"
																				},
																				"nativeSrc": "6113:78:43",
																				"nodeType": "YulFunctionCall",
																				"src": "6113:78:43"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "6103:2:43",
																			"nodeType": "YulIdentifier",
																			"src": "6103:2:43"
																		},
																		"nativeSrc": "6103:89:43",
																		"nodeType": "YulFunctionCall",
																		"src": "6103:89:43"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "6096:6:43",
																	"nodeType": "YulIdentifier",
																	"src": "6096:6:43"
																},
																"nativeSrc": "6096:97:43",
																"nodeType": "YulFunctionCall",
																"src": "6096:97:43"
															},
															"nativeSrc": "6093:117:43",
															"nodeType": "YulIf",
															"src": "6093:117:43"
														}
													]
												},
												"name": "abi_decode_bytes4",
												"nativeSrc": "5997:219:43",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "6024:6:43",
														"nodeType": "YulTypedName",
														"src": "6024:6:43",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "6035:5:43",
														"nodeType": "YulTypedName",
														"src": "6035:5:43",
														"type": ""
													}
												],
												"src": "5997:219:43"
											},
											{
												"body": {
													"nativeSrc": "6290:115:43",
													"nodeType": "YulBlock",
													"src": "6290:115:43",
													"statements": [
														{
															"body": {
																"nativeSrc": "6336:16:43",
																"nodeType": "YulBlock",
																"src": "6336:16:43",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "6345:1:43",
																					"nodeType": "YulLiteral",
																					"src": "6345:1:43",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "6348:1:43",
																					"nodeType": "YulLiteral",
																					"src": "6348:1:43",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "6338:6:43",
																				"nodeType": "YulIdentifier",
																				"src": "6338:6:43"
																			},
																			"nativeSrc": "6338:12:43",
																			"nodeType": "YulFunctionCall",
																			"src": "6338:12:43"
																		},
																		"nativeSrc": "6338:12:43",
																		"nodeType": "YulExpressionStatement",
																		"src": "6338:12:43"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6311:7:43",
																				"nodeType": "YulIdentifier",
																				"src": "6311:7:43"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "6320:9:43",
																				"nodeType": "YulIdentifier",
																				"src": "6320:9:43"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "6307:3:43",
																			"nodeType": "YulIdentifier",
																			"src": "6307:3:43"
																		},
																		"nativeSrc": "6307:23:43",
																		"nodeType": "YulFunctionCall",
																		"src": "6307:23:43"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6332:2:43",
																		"nodeType": "YulLiteral",
																		"src": "6332:2:43",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "6303:3:43",
																	"nodeType": "YulIdentifier",
																	"src": "6303:3:43"
																},
																"nativeSrc": "6303:32:43",
																"nodeType": "YulFunctionCall",
																"src": "6303:32:43"
															},
															"nativeSrc": "6300:52:43",
															"nodeType": "YulIf",
															"src": "6300:52:43"
														},
														{
															"nativeSrc": "6361:38:43",
															"nodeType": "YulAssignment",
															"src": "6361:38:43",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6389:9:43",
																		"nodeType": "YulIdentifier",
																		"src": "6389:9:43"
																	}
																],
																"functionName": {
																	"name": "abi_decode_bytes4",
																	"nativeSrc": "6371:17:43",
																	"nodeType": "YulIdentifier",
																	"src": "6371:17:43"
																},
																"nativeSrc": "6371:28:43",
																"nodeType": "YulFunctionCall",
																"src": "6371:28:43"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "6361:6:43",
																	"nodeType": "YulIdentifier",
																	"src": "6361:6:43"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes4",
												"nativeSrc": "6221:184:43",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6256:9:43",
														"nodeType": "YulTypedName",
														"src": "6256:9:43",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "6267:7:43",
														"nodeType": "YulTypedName",
														"src": "6267:7:43",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "6279:6:43",
														"nodeType": "YulTypedName",
														"src": "6279:6:43",
														"type": ""
													}
												],
												"src": "6221:184:43"
											},
											{
												"body": {
													"nativeSrc": "6442:152:43",
													"nodeType": "YulBlock",
													"src": "6442:152:43",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6459:1:43",
																		"nodeType": "YulLiteral",
																		"src": "6459:1:43",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6462:77:43",
																		"nodeType": "YulLiteral",
																		"src": "6462:77:43",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6452:6:43",
																	"nodeType": "YulIdentifier",
																	"src": "6452:6:43"
																},
																"nativeSrc": "6452:88:43",
																"nodeType": "YulFunctionCall",
																"src": "6452:88:43"
															},
															"nativeSrc": "6452:88:43",
															"nodeType": "YulExpressionStatement",
															"src": "6452:88:43"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6556:1:43",
																		"nodeType": "YulLiteral",
																		"src": "6556:1:43",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6559:4:43",
																		"nodeType": "YulLiteral",
																		"src": "6559:4:43",
																		"type": "",
																		"value": "0x21"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6549:6:43",
																	"nodeType": "YulIdentifier",
																	"src": "6549:6:43"
																},
																"nativeSrc": "6549:15:43",
																"nodeType": "YulFunctionCall",
																"src": "6549:15:43"
															},
															"nativeSrc": "6549:15:43",
															"nodeType": "YulExpressionStatement",
															"src": "6549:15:43"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6580:1:43",
																		"nodeType": "YulLiteral",
																		"src": "6580:1:43",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6583:4:43",
																		"nodeType": "YulLiteral",
																		"src": "6583:4:43",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "6573:6:43",
																	"nodeType": "YulIdentifier",
																	"src": "6573:6:43"
																},
																"nativeSrc": "6573:15:43",
																"nodeType": "YulFunctionCall",
																"src": "6573:15:43"
															},
															"nativeSrc": "6573:15:43",
															"nodeType": "YulExpressionStatement",
															"src": "6573:15:43"
														}
													]
												},
												"name": "panic_error_0x21",
												"nativeSrc": "6410:184:43",
												"nodeType": "YulFunctionDefinition",
												"src": "6410:184:43"
											},
											{
												"body": {
													"nativeSrc": "6655:243:43",
													"nodeType": "YulBlock",
													"src": "6655:243:43",
													"statements": [
														{
															"body": {
																"nativeSrc": "6697:168:43",
																"nodeType": "YulBlock",
																"src": "6697:168:43",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "6718:1:43",
																					"nodeType": "YulLiteral",
																					"src": "6718:1:43",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "6721:77:43",
																					"nodeType": "YulLiteral",
																					"src": "6721:77:43",
																					"type": "",
																					"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "6711:6:43",
																				"nodeType": "YulIdentifier",
																				"src": "6711:6:43"
																			},
																			"nativeSrc": "6711:88:43",
																			"nodeType": "YulFunctionCall",
																			"src": "6711:88:43"
																		},
																		"nativeSrc": "6711:88:43",
																		"nodeType": "YulExpressionStatement",
																		"src": "6711:88:43"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "6819:1:43",
																					"nodeType": "YulLiteral",
																					"src": "6819:1:43",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "6822:4:43",
																					"nodeType": "YulLiteral",
																					"src": "6822:4:43",
																					"type": "",
																					"value": "0x21"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "6812:6:43",
																				"nodeType": "YulIdentifier",
																				"src": "6812:6:43"
																			},
																			"nativeSrc": "6812:15:43",
																			"nodeType": "YulFunctionCall",
																			"src": "6812:15:43"
																		},
																		"nativeSrc": "6812:15:43",
																		"nodeType": "YulExpressionStatement",
																		"src": "6812:15:43"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "6847:1:43",
																					"nodeType": "YulLiteral",
																					"src": "6847:1:43",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "6850:4:43",
																					"nodeType": "YulLiteral",
																					"src": "6850:4:43",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "6840:6:43",
																				"nodeType": "YulIdentifier",
																				"src": "6840:6:43"
																			},
																			"nativeSrc": "6840:15:43",
																			"nodeType": "YulFunctionCall",
																			"src": "6840:15:43"
																		},
																		"nativeSrc": "6840:15:43",
																		"nodeType": "YulExpressionStatement",
																		"src": "6840:15:43"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "6678:5:43",
																				"nodeType": "YulIdentifier",
																				"src": "6678:5:43"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6685:1:43",
																				"nodeType": "YulLiteral",
																				"src": "6685:1:43",
																				"type": "",
																				"value": "3"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "6675:2:43",
																			"nodeType": "YulIdentifier",
																			"src": "6675:2:43"
																		},
																		"nativeSrc": "6675:12:43",
																		"nodeType": "YulFunctionCall",
																		"src": "6675:12:43"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "6668:6:43",
																	"nodeType": "YulIdentifier",
																	"src": "6668:6:43"
																},
																"nativeSrc": "6668:20:43",
																"nodeType": "YulFunctionCall",
																"src": "6668:20:43"
															},
															"nativeSrc": "6665:200:43",
															"nodeType": "YulIf",
															"src": "6665:200:43"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6881:3:43",
																		"nodeType": "YulIdentifier",
																		"src": "6881:3:43"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "6886:5:43",
																		"nodeType": "YulIdentifier",
																		"src": "6886:5:43"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6874:6:43",
																	"nodeType": "YulIdentifier",
																	"src": "6874:6:43"
																},
																"nativeSrc": "6874:18:43",
																"nodeType": "YulFunctionCall",
																"src": "6874:18:43"
															},
															"nativeSrc": "6874:18:43",
															"nodeType": "YulExpressionStatement",
															"src": "6874:18:43"
														}
													]
												},
												"name": "abi_encode_enum_FacetCutAction",
												"nativeSrc": "6599:299:43",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6639:5:43",
														"nodeType": "YulTypedName",
														"src": "6639:5:43",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "6646:3:43",
														"nodeType": "YulTypedName",
														"src": "6646:3:43",
														"type": ""
													}
												],
												"src": "6599:299:43"
											},
											{
												"body": {
													"nativeSrc": "6964:413:43",
													"nodeType": "YulBlock",
													"src": "6964:413:43",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6981:3:43",
																		"nodeType": "YulIdentifier",
																		"src": "6981:3:43"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "7009:5:43",
																						"nodeType": "YulIdentifier",
																						"src": "7009:5:43"
																					}
																				],
																				"functionName": {
																					"name": "abi_decode_address",
																					"nativeSrc": "6990:18:43",
																					"nodeType": "YulIdentifier",
																					"src": "6990:18:43"
																				},
																				"nativeSrc": "6990:25:43",
																				"nodeType": "YulFunctionCall",
																				"src": "6990:25:43"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7017:42:43",
																				"nodeType": "YulLiteral",
																				"src": "7017:42:43",
																				"type": "",
																				"value": "0xffffffffffffffffffffffffffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "6986:3:43",
																			"nodeType": "YulIdentifier",
																			"src": "6986:3:43"
																		},
																		"nativeSrc": "6986:74:43",
																		"nodeType": "YulFunctionCall",
																		"src": "6986:74:43"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6974:6:43",
																	"nodeType": "YulIdentifier",
																	"src": "6974:6:43"
																},
																"nativeSrc": "6974:87:43",
																"nodeType": "YulFunctionCall",
																"src": "6974:87:43"
															},
															"nativeSrc": "6974:87:43",
															"nodeType": "YulExpressionStatement",
															"src": "6974:87:43"
														},
														{
															"nativeSrc": "7070:45:43",
															"nodeType": "YulVariableDeclaration",
															"src": "7070:45:43",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "7102:5:43",
																				"nodeType": "YulIdentifier",
																				"src": "7102:5:43"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7109:4:43",
																				"nodeType": "YulLiteral",
																				"src": "7109:4:43",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7098:3:43",
																			"nodeType": "YulIdentifier",
																			"src": "7098:3:43"
																		},
																		"nativeSrc": "7098:16:43",
																		"nodeType": "YulFunctionCall",
																		"src": "7098:16:43"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "7085:12:43",
																	"nodeType": "YulIdentifier",
																	"src": "7085:12:43"
																},
																"nativeSrc": "7085:30:43",
																"nodeType": "YulFunctionCall",
																"src": "7085:30:43"
															},
															"variables": [
																{
																	"name": "value_1",
																	"nativeSrc": "7074:7:43",
																	"nodeType": "YulTypedName",
																	"src": "7074:7:43",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "7150:16:43",
																"nodeType": "YulBlock",
																"src": "7150:16:43",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "7159:1:43",
																					"nodeType": "YulLiteral",
																					"src": "7159:1:43",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "7162:1:43",
																					"nodeType": "YulLiteral",
																					"src": "7162:1:43",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "7152:6:43",
																				"nodeType": "YulIdentifier",
																				"src": "7152:6:43"
																			},
																			"nativeSrc": "7152:12:43",
																			"nodeType": "YulFunctionCall",
																			"src": "7152:12:43"
																		},
																		"nativeSrc": "7152:12:43",
																		"nodeType": "YulExpressionStatement",
																		"src": "7152:12:43"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value_1",
																				"nativeSrc": "7137:7:43",
																				"nodeType": "YulIdentifier",
																				"src": "7137:7:43"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7146:1:43",
																				"nodeType": "YulLiteral",
																				"src": "7146:1:43",
																				"type": "",
																				"value": "3"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "7134:2:43",
																			"nodeType": "YulIdentifier",
																			"src": "7134:2:43"
																		},
																		"nativeSrc": "7134:14:43",
																		"nodeType": "YulFunctionCall",
																		"src": "7134:14:43"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "7127:6:43",
																	"nodeType": "YulIdentifier",
																	"src": "7127:6:43"
																},
																"nativeSrc": "7127:22:43",
																"nodeType": "YulFunctionCall",
																"src": "7127:22:43"
															},
															"nativeSrc": "7124:42:43",
															"nodeType": "YulIf",
															"src": "7124:42:43"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value_1",
																		"nativeSrc": "7206:7:43",
																		"nodeType": "YulIdentifier",
																		"src": "7206:7:43"
																	},
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nativeSrc": "7219:3:43",
																				"nodeType": "YulIdentifier",
																				"src": "7219:3:43"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7224:4:43",
																				"nodeType": "YulLiteral",
																				"src": "7224:4:43",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7215:3:43",
																			"nodeType": "YulIdentifier",
																			"src": "7215:3:43"
																		},
																		"nativeSrc": "7215:14:43",
																		"nodeType": "YulFunctionCall",
																		"src": "7215:14:43"
																	}
																],
																"functionName": {
																	"name": "abi_encode_enum_FacetCutAction",
																	"nativeSrc": "7175:30:43",
																	"nodeType": "YulIdentifier",
																	"src": "7175:30:43"
																},
																"nativeSrc": "7175:55:43",
																"nodeType": "YulFunctionCall",
																"src": "7175:55:43"
															},
															"nativeSrc": "7175:55:43",
															"nodeType": "YulExpressionStatement",
															"src": "7175:55:43"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nativeSrc": "7250:3:43",
																				"nodeType": "YulIdentifier",
																				"src": "7250:3:43"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7255:4:43",
																				"nodeType": "YulLiteral",
																				"src": "7255:4:43",
																				"type": "",
																				"value": "0x40"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7246:3:43",
																			"nodeType": "YulIdentifier",
																			"src": "7246:3:43"
																		},
																		"nativeSrc": "7246:14:43",
																		"nodeType": "YulFunctionCall",
																		"src": "7246:14:43"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "value",
																								"nativeSrc": "7288:5:43",
																								"nodeType": "YulIdentifier",
																								"src": "7288:5:43"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "7295:4:43",
																								"nodeType": "YulLiteral",
																								"src": "7295:4:43",
																								"type": "",
																								"value": "0x40"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nativeSrc": "7284:3:43",
																							"nodeType": "YulIdentifier",
																							"src": "7284:3:43"
																						},
																						"nativeSrc": "7284:16:43",
																						"nodeType": "YulFunctionCall",
																						"src": "7284:16:43"
																					}
																				],
																				"functionName": {
																					"name": "abi_decode_bytes4",
																					"nativeSrc": "7266:17:43",
																					"nodeType": "YulIdentifier",
																					"src": "7266:17:43"
																				},
																				"nativeSrc": "7266:35:43",
																				"nodeType": "YulFunctionCall",
																				"src": "7266:35:43"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7303:66:43",
																				"nodeType": "YulLiteral",
																				"src": "7303:66:43",
																				"type": "",
																				"value": "0xffffffff00000000000000000000000000000000000000000000000000000000"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "7262:3:43",
																			"nodeType": "YulIdentifier",
																			"src": "7262:3:43"
																		},
																		"nativeSrc": "7262:108:43",
																		"nodeType": "YulFunctionCall",
																		"src": "7262:108:43"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7239:6:43",
																	"nodeType": "YulIdentifier",
																	"src": "7239:6:43"
																},
																"nativeSrc": "7239:132:43",
																"nodeType": "YulFunctionCall",
																"src": "7239:132:43"
															},
															"nativeSrc": "7239:132:43",
															"nodeType": "YulExpressionStatement",
															"src": "7239:132:43"
														}
													]
												},
												"name": "abi_encode_struct_FacetCut_calldata",
												"nativeSrc": "6903:474:43",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6948:5:43",
														"nodeType": "YulTypedName",
														"src": "6948:5:43",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "6955:3:43",
														"nodeType": "YulTypedName",
														"src": "6955:3:43",
														"type": ""
													}
												],
												"src": "6903:474:43"
											},
											{
												"body": {
													"nativeSrc": "7448:200:43",
													"nodeType": "YulBlock",
													"src": "7448:200:43",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7465:3:43",
																		"nodeType": "YulIdentifier",
																		"src": "7465:3:43"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "7470:6:43",
																		"nodeType": "YulIdentifier",
																		"src": "7470:6:43"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7458:6:43",
																	"nodeType": "YulIdentifier",
																	"src": "7458:6:43"
																},
																"nativeSrc": "7458:19:43",
																"nodeType": "YulFunctionCall",
																"src": "7458:19:43"
															},
															"nativeSrc": "7458:19:43",
															"nodeType": "YulExpressionStatement",
															"src": "7458:19:43"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nativeSrc": "7503:3:43",
																				"nodeType": "YulIdentifier",
																				"src": "7503:3:43"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7508:4:43",
																				"nodeType": "YulLiteral",
																				"src": "7508:4:43",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7499:3:43",
																			"nodeType": "YulIdentifier",
																			"src": "7499:3:43"
																		},
																		"nativeSrc": "7499:14:43",
																		"nodeType": "YulFunctionCall",
																		"src": "7499:14:43"
																	},
																	{
																		"name": "start",
																		"nativeSrc": "7515:5:43",
																		"nodeType": "YulIdentifier",
																		"src": "7515:5:43"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "7522:6:43",
																		"nodeType": "YulIdentifier",
																		"src": "7522:6:43"
																	}
																],
																"functionName": {
																	"name": "calldatacopy",
																	"nativeSrc": "7486:12:43",
																	"nodeType": "YulIdentifier",
																	"src": "7486:12:43"
																},
																"nativeSrc": "7486:43:43",
																"nodeType": "YulFunctionCall",
																"src": "7486:43:43"
															},
															"nativeSrc": "7486:43:43",
															"nodeType": "YulExpressionStatement",
															"src": "7486:43:43"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nativeSrc": "7553:3:43",
																						"nodeType": "YulIdentifier",
																						"src": "7553:3:43"
																					},
																					{
																						"name": "length",
																						"nativeSrc": "7558:6:43",
																						"nodeType": "YulIdentifier",
																						"src": "7558:6:43"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "7549:3:43",
																					"nodeType": "YulIdentifier",
																					"src": "7549:3:43"
																				},
																				"nativeSrc": "7549:16:43",
																				"nodeType": "YulFunctionCall",
																				"src": "7549:16:43"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7567:4:43",
																				"nodeType": "YulLiteral",
																				"src": "7567:4:43",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7545:3:43",
																			"nodeType": "YulIdentifier",
																			"src": "7545:3:43"
																		},
																		"nativeSrc": "7545:27:43",
																		"nodeType": "YulFunctionCall",
																		"src": "7545:27:43"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7574:1:43",
																		"nodeType": "YulLiteral",
																		"src": "7574:1:43",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7538:6:43",
																	"nodeType": "YulIdentifier",
																	"src": "7538:6:43"
																},
																"nativeSrc": "7538:38:43",
																"nodeType": "YulFunctionCall",
																"src": "7538:38:43"
															},
															"nativeSrc": "7538:38:43",
															"nodeType": "YulExpressionStatement",
															"src": "7538:38:43"
														},
														{
															"nativeSrc": "7585:57:43",
															"nodeType": "YulAssignment",
															"src": "7585:57:43",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nativeSrc": "7600:3:43",
																				"nodeType": "YulIdentifier",
																				"src": "7600:3:43"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "length",
																								"nativeSrc": "7613:6:43",
																								"nodeType": "YulIdentifier",
																								"src": "7613:6:43"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "7621:2:43",
																								"nodeType": "YulLiteral",
																								"src": "7621:2:43",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nativeSrc": "7609:3:43",
																							"nodeType": "YulIdentifier",
																							"src": "7609:3:43"
																						},
																						"nativeSrc": "7609:15:43",
																						"nodeType": "YulFunctionCall",
																						"src": "7609:15:43"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "7630:2:43",
																								"nodeType": "YulLiteral",
																								"src": "7630:2:43",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nativeSrc": "7626:3:43",
																							"nodeType": "YulIdentifier",
																							"src": "7626:3:43"
																						},
																						"nativeSrc": "7626:7:43",
																						"nodeType": "YulFunctionCall",
																						"src": "7626:7:43"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "7605:3:43",
																					"nodeType": "YulIdentifier",
																					"src": "7605:3:43"
																				},
																				"nativeSrc": "7605:29:43",
																				"nodeType": "YulFunctionCall",
																				"src": "7605:29:43"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7596:3:43",
																			"nodeType": "YulIdentifier",
																			"src": "7596:3:43"
																		},
																		"nativeSrc": "7596:39:43",
																		"nodeType": "YulFunctionCall",
																		"src": "7596:39:43"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7637:4:43",
																		"nodeType": "YulLiteral",
																		"src": "7637:4:43",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7592:3:43",
																	"nodeType": "YulIdentifier",
																	"src": "7592:3:43"
																},
																"nativeSrc": "7592:50:43",
																"nodeType": "YulFunctionCall",
																"src": "7592:50:43"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "7585:3:43",
																	"nodeType": "YulIdentifier",
																	"src": "7585:3:43"
																}
															]
														}
													]
												},
												"name": "abi_encode_bytes_calldata",
												"nativeSrc": "7382:266:43",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "start",
														"nativeSrc": "7417:5:43",
														"nodeType": "YulTypedName",
														"src": "7417:5:43",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "7424:6:43",
														"nodeType": "YulTypedName",
														"src": "7424:6:43",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "7432:3:43",
														"nodeType": "YulTypedName",
														"src": "7432:3:43",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "7440:3:43",
														"nodeType": "YulTypedName",
														"src": "7440:3:43",
														"type": ""
													}
												],
												"src": "7382:266:43"
											},
											{
												"body": {
													"nativeSrc": "7892:282:43",
													"nodeType": "YulBlock",
													"src": "7892:282:43",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "7938:6:43",
																		"nodeType": "YulIdentifier",
																		"src": "7938:6:43"
																	},
																	{
																		"name": "headStart",
																		"nativeSrc": "7946:9:43",
																		"nodeType": "YulIdentifier",
																		"src": "7946:9:43"
																	}
																],
																"functionName": {
																	"name": "abi_encode_struct_FacetCut_calldata",
																	"nativeSrc": "7902:35:43",
																	"nodeType": "YulIdentifier",
																	"src": "7902:35:43"
																},
																"nativeSrc": "7902:54:43",
																"nodeType": "YulFunctionCall",
																"src": "7902:54:43"
															},
															"nativeSrc": "7902:54:43",
															"nodeType": "YulExpressionStatement",
															"src": "7902:54:43"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7976:9:43",
																				"nodeType": "YulIdentifier",
																				"src": "7976:9:43"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7987:2:43",
																				"nodeType": "YulLiteral",
																				"src": "7987:2:43",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7972:3:43",
																			"nodeType": "YulIdentifier",
																			"src": "7972:3:43"
																		},
																		"nativeSrc": "7972:18:43",
																		"nodeType": "YulFunctionCall",
																		"src": "7972:18:43"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nativeSrc": "7996:6:43",
																				"nodeType": "YulIdentifier",
																				"src": "7996:6:43"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8004:42:43",
																				"nodeType": "YulLiteral",
																				"src": "8004:42:43",
																				"type": "",
																				"value": "0xffffffffffffffffffffffffffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "7992:3:43",
																			"nodeType": "YulIdentifier",
																			"src": "7992:3:43"
																		},
																		"nativeSrc": "7992:55:43",
																		"nodeType": "YulFunctionCall",
																		"src": "7992:55:43"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7965:6:43",
																	"nodeType": "YulIdentifier",
																	"src": "7965:6:43"
																},
																"nativeSrc": "7965:83:43",
																"nodeType": "YulFunctionCall",
																"src": "7965:83:43"
															},
															"nativeSrc": "7965:83:43",
															"nodeType": "YulExpressionStatement",
															"src": "7965:83:43"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8068:9:43",
																				"nodeType": "YulIdentifier",
																				"src": "8068:9:43"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8079:3:43",
																				"nodeType": "YulLiteral",
																				"src": "8079:3:43",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8064:3:43",
																			"nodeType": "YulIdentifier",
																			"src": "8064:3:43"
																		},
																		"nativeSrc": "8064:19:43",
																		"nodeType": "YulFunctionCall",
																		"src": "8064:19:43"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8085:3:43",
																		"nodeType": "YulLiteral",
																		"src": "8085:3:43",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8057:6:43",
																	"nodeType": "YulIdentifier",
																	"src": "8057:6:43"
																},
																"nativeSrc": "8057:32:43",
																"nodeType": "YulFunctionCall",
																"src": "8057:32:43"
															},
															"nativeSrc": "8057:32:43",
															"nodeType": "YulExpressionStatement",
															"src": "8057:32:43"
														},
														{
															"nativeSrc": "8098:70:43",
															"nodeType": "YulAssignment",
															"src": "8098:70:43",
															"value": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "8132:6:43",
																		"nodeType": "YulIdentifier",
																		"src": "8132:6:43"
																	},
																	{
																		"name": "value3",
																		"nativeSrc": "8140:6:43",
																		"nodeType": "YulIdentifier",
																		"src": "8140:6:43"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8152:9:43",
																				"nodeType": "YulIdentifier",
																				"src": "8152:9:43"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8163:3:43",
																				"nodeType": "YulLiteral",
																				"src": "8163:3:43",
																				"type": "",
																				"value": "160"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8148:3:43",
																			"nodeType": "YulIdentifier",
																			"src": "8148:3:43"
																		},
																		"nativeSrc": "8148:19:43",
																		"nodeType": "YulFunctionCall",
																		"src": "8148:19:43"
																	}
																],
																"functionName": {
																	"name": "abi_encode_bytes_calldata",
																	"nativeSrc": "8106:25:43",
																	"nodeType": "YulIdentifier",
																	"src": "8106:25:43"
																},
																"nativeSrc": "8106:62:43",
																"nodeType": "YulFunctionCall",
																"src": "8106:62:43"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8098:4:43",
																	"nodeType": "YulIdentifier",
																	"src": "8098:4:43"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_struct$_FacetCut_$3551_calldata_ptr_t_address_t_bytes_calldata_ptr__to_t_struct$_FacetCut_$3551_memory_ptr_t_address_t_bytes_memory_ptr__fromStack_reversed",
												"nativeSrc": "7653:521:43",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7837:9:43",
														"nodeType": "YulTypedName",
														"src": "7837:9:43",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "7848:6:43",
														"nodeType": "YulTypedName",
														"src": "7848:6:43",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "7856:6:43",
														"nodeType": "YulTypedName",
														"src": "7856:6:43",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "7864:6:43",
														"nodeType": "YulTypedName",
														"src": "7864:6:43",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "7872:6:43",
														"nodeType": "YulTypedName",
														"src": "7872:6:43",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "7883:4:43",
														"nodeType": "YulTypedName",
														"src": "7883:4:43",
														"type": ""
													}
												],
												"src": "7653:521:43"
											},
											{
												"body": {
													"nativeSrc": "8342:267:43",
													"nodeType": "YulBlock",
													"src": "8342:267:43",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8359:3:43",
																		"nodeType": "YulIdentifier",
																		"src": "8359:3:43"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "8368:6:43",
																				"nodeType": "YulIdentifier",
																				"src": "8368:6:43"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8376:66:43",
																				"nodeType": "YulLiteral",
																				"src": "8376:66:43",
																				"type": "",
																				"value": "0xffffffff00000000000000000000000000000000000000000000000000000000"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "8364:3:43",
																			"nodeType": "YulIdentifier",
																			"src": "8364:3:43"
																		},
																		"nativeSrc": "8364:79:43",
																		"nodeType": "YulFunctionCall",
																		"src": "8364:79:43"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8352:6:43",
																	"nodeType": "YulIdentifier",
																	"src": "8352:6:43"
																},
																"nativeSrc": "8352:92:43",
																"nodeType": "YulFunctionCall",
																"src": "8352:92:43"
															},
															"nativeSrc": "8352:92:43",
															"nodeType": "YulExpressionStatement",
															"src": "8352:92:43"
														},
														{
															"nativeSrc": "8453:27:43",
															"nodeType": "YulVariableDeclaration",
															"src": "8453:27:43",
															"value": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "8473:6:43",
																		"nodeType": "YulIdentifier",
																		"src": "8473:6:43"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "8467:5:43",
																	"nodeType": "YulIdentifier",
																	"src": "8467:5:43"
																},
																"nativeSrc": "8467:13:43",
																"nodeType": "YulFunctionCall",
																"src": "8467:13:43"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "8457:6:43",
																	"nodeType": "YulTypedName",
																	"src": "8457:6:43",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nativeSrc": "8528:6:43",
																				"nodeType": "YulIdentifier",
																				"src": "8528:6:43"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8536:4:43",
																				"nodeType": "YulLiteral",
																				"src": "8536:4:43",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8524:3:43",
																			"nodeType": "YulIdentifier",
																			"src": "8524:3:43"
																		},
																		"nativeSrc": "8524:17:43",
																		"nodeType": "YulFunctionCall",
																		"src": "8524:17:43"
																	},
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nativeSrc": "8547:3:43",
																				"nodeType": "YulIdentifier",
																				"src": "8547:3:43"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8552:1:43",
																				"nodeType": "YulLiteral",
																				"src": "8552:1:43",
																				"type": "",
																				"value": "4"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8543:3:43",
																			"nodeType": "YulIdentifier",
																			"src": "8543:3:43"
																		},
																		"nativeSrc": "8543:11:43",
																		"nodeType": "YulFunctionCall",
																		"src": "8543:11:43"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "8556:6:43",
																		"nodeType": "YulIdentifier",
																		"src": "8556:6:43"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "8489:34:43",
																	"nodeType": "YulIdentifier",
																	"src": "8489:34:43"
																},
																"nativeSrc": "8489:74:43",
																"nodeType": "YulFunctionCall",
																"src": "8489:74:43"
															},
															"nativeSrc": "8489:74:43",
															"nodeType": "YulExpressionStatement",
															"src": "8489:74:43"
														},
														{
															"nativeSrc": "8572:31:43",
															"nodeType": "YulAssignment",
															"src": "8572:31:43",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nativeSrc": "8587:3:43",
																				"nodeType": "YulIdentifier",
																				"src": "8587:3:43"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "8592:6:43",
																				"nodeType": "YulIdentifier",
																				"src": "8592:6:43"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8583:3:43",
																			"nodeType": "YulIdentifier",
																			"src": "8583:3:43"
																		},
																		"nativeSrc": "8583:16:43",
																		"nodeType": "YulFunctionCall",
																		"src": "8583:16:43"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8601:1:43",
																		"nodeType": "YulLiteral",
																		"src": "8601:1:43",
																		"type": "",
																		"value": "4"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8579:3:43",
																	"nodeType": "YulIdentifier",
																	"src": "8579:3:43"
																},
																"nativeSrc": "8579:24:43",
																"nodeType": "YulFunctionCall",
																"src": "8579:24:43"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "8572:3:43",
																	"nodeType": "YulIdentifier",
																	"src": "8572:3:43"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_bytes4_t_bytes_memory_ptr__to_t_bytes4_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nativeSrc": "8179:430:43",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "8310:3:43",
														"nodeType": "YulTypedName",
														"src": "8310:3:43",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "8315:6:43",
														"nodeType": "YulTypedName",
														"src": "8315:6:43",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "8323:6:43",
														"nodeType": "YulTypedName",
														"src": "8323:6:43",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "8334:3:43",
														"nodeType": "YulTypedName",
														"src": "8334:3:43",
														"type": ""
													}
												],
												"src": "8179:430:43"
											},
											{
												"body": {
													"nativeSrc": "8751:150:43",
													"nodeType": "YulBlock",
													"src": "8751:150:43",
													"statements": [
														{
															"nativeSrc": "8761:27:43",
															"nodeType": "YulVariableDeclaration",
															"src": "8761:27:43",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "8781:6:43",
																		"nodeType": "YulIdentifier",
																		"src": "8781:6:43"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "8775:5:43",
																	"nodeType": "YulIdentifier",
																	"src": "8775:5:43"
																},
																"nativeSrc": "8775:13:43",
																"nodeType": "YulFunctionCall",
																"src": "8775:13:43"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "8765:6:43",
																	"nodeType": "YulTypedName",
																	"src": "8765:6:43",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "8836:6:43",
																				"nodeType": "YulIdentifier",
																				"src": "8836:6:43"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8844:4:43",
																				"nodeType": "YulLiteral",
																				"src": "8844:4:43",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8832:3:43",
																			"nodeType": "YulIdentifier",
																			"src": "8832:3:43"
																		},
																		"nativeSrc": "8832:17:43",
																		"nodeType": "YulFunctionCall",
																		"src": "8832:17:43"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "8851:3:43",
																		"nodeType": "YulIdentifier",
																		"src": "8851:3:43"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "8856:6:43",
																		"nodeType": "YulIdentifier",
																		"src": "8856:6:43"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "8797:34:43",
																	"nodeType": "YulIdentifier",
																	"src": "8797:34:43"
																},
																"nativeSrc": "8797:66:43",
																"nodeType": "YulFunctionCall",
																"src": "8797:66:43"
															},
															"nativeSrc": "8797:66:43",
															"nodeType": "YulExpressionStatement",
															"src": "8797:66:43"
														},
														{
															"nativeSrc": "8872:23:43",
															"nodeType": "YulAssignment",
															"src": "8872:23:43",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8883:3:43",
																		"nodeType": "YulIdentifier",
																		"src": "8883:3:43"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "8888:6:43",
																		"nodeType": "YulIdentifier",
																		"src": "8888:6:43"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8879:3:43",
																	"nodeType": "YulIdentifier",
																	"src": "8879:3:43"
																},
																"nativeSrc": "8879:16:43",
																"nodeType": "YulFunctionCall",
																"src": "8879:16:43"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "8872:3:43",
																	"nodeType": "YulIdentifier",
																	"src": "8872:3:43"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nativeSrc": "8614:287:43",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "8727:3:43",
														"nodeType": "YulTypedName",
														"src": "8727:3:43",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "8732:6:43",
														"nodeType": "YulTypedName",
														"src": "8732:6:43",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "8743:3:43",
														"nodeType": "YulTypedName",
														"src": "8743:3:43",
														"type": ""
													}
												],
												"src": "8614:287:43"
											},
											{
												"body": {
													"nativeSrc": "9080:175:43",
													"nodeType": "YulBlock",
													"src": "9080:175:43",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9097:9:43",
																		"nodeType": "YulIdentifier",
																		"src": "9097:9:43"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9108:2:43",
																		"nodeType": "YulLiteral",
																		"src": "9108:2:43",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9090:6:43",
																	"nodeType": "YulIdentifier",
																	"src": "9090:6:43"
																},
																"nativeSrc": "9090:21:43",
																"nodeType": "YulFunctionCall",
																"src": "9090:21:43"
															},
															"nativeSrc": "9090:21:43",
															"nodeType": "YulExpressionStatement",
															"src": "9090:21:43"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9131:9:43",
																				"nodeType": "YulIdentifier",
																				"src": "9131:9:43"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9142:2:43",
																				"nodeType": "YulLiteral",
																				"src": "9142:2:43",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9127:3:43",
																			"nodeType": "YulIdentifier",
																			"src": "9127:3:43"
																		},
																		"nativeSrc": "9127:18:43",
																		"nodeType": "YulFunctionCall",
																		"src": "9127:18:43"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9147:2:43",
																		"nodeType": "YulLiteral",
																		"src": "9147:2:43",
																		"type": "",
																		"value": "25"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9120:6:43",
																	"nodeType": "YulIdentifier",
																	"src": "9120:6:43"
																},
																"nativeSrc": "9120:30:43",
																"nodeType": "YulFunctionCall",
																"src": "9120:30:43"
															},
															"nativeSrc": "9120:30:43",
															"nodeType": "YulExpressionStatement",
															"src": "9120:30:43"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9170:9:43",
																				"nodeType": "YulIdentifier",
																				"src": "9170:9:43"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9181:2:43",
																				"nodeType": "YulLiteral",
																				"src": "9181:2:43",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9166:3:43",
																			"nodeType": "YulIdentifier",
																			"src": "9166:3:43"
																		},
																		"nativeSrc": "9166:18:43",
																		"nodeType": "YulFunctionCall",
																		"src": "9166:18:43"
																	},
																	{
																		"hexValue": "4661636574206d6f64696669636174696f6e206661696c6564",
																		"kind": "string",
																		"nativeSrc": "9186:27:43",
																		"nodeType": "YulLiteral",
																		"src": "9186:27:43",
																		"type": "",
																		"value": "Facet modification failed"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9159:6:43",
																	"nodeType": "YulIdentifier",
																	"src": "9159:6:43"
																},
																"nativeSrc": "9159:55:43",
																"nodeType": "YulFunctionCall",
																"src": "9159:55:43"
															},
															"nativeSrc": "9159:55:43",
															"nodeType": "YulExpressionStatement",
															"src": "9159:55:43"
														},
														{
															"nativeSrc": "9223:26:43",
															"nodeType": "YulAssignment",
															"src": "9223:26:43",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9235:9:43",
																		"nodeType": "YulIdentifier",
																		"src": "9235:9:43"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9246:2:43",
																		"nodeType": "YulLiteral",
																		"src": "9246:2:43",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9231:3:43",
																	"nodeType": "YulIdentifier",
																	"src": "9231:3:43"
																},
																"nativeSrc": "9231:18:43",
																"nodeType": "YulFunctionCall",
																"src": "9231:18:43"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9223:4:43",
																	"nodeType": "YulIdentifier",
																	"src": "9223:4:43"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_3e171e1bc4293dc8012e866cb04b58106ab144d1167c321b7083a8d2ce68c5e4__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "8906:349:43",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9057:9:43",
														"nodeType": "YulTypedName",
														"src": "9057:9:43",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "9071:4:43",
														"nodeType": "YulTypedName",
														"src": "9071:4:43",
														"type": ""
													}
												],
												"src": "8906:349:43"
											},
											{
												"body": {
													"nativeSrc": "9559:652:43",
													"nodeType": "YulBlock",
													"src": "9559:652:43",
													"statements": [
														{
															"nativeSrc": "9569:12:43",
															"nodeType": "YulVariableDeclaration",
															"src": "9569:12:43",
															"value": {
																"kind": "number",
																"nativeSrc": "9579:2:43",
																"nodeType": "YulLiteral",
																"src": "9579:2:43",
																"type": "",
																"value": "96"
															},
															"variables": [
																{
																	"name": "_1",
																	"nativeSrc": "9573:2:43",
																	"nodeType": "YulTypedName",
																	"src": "9573:2:43",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "9590:32:43",
															"nodeType": "YulVariableDeclaration",
															"src": "9590:32:43",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9608:9:43",
																		"nodeType": "YulIdentifier",
																		"src": "9608:9:43"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9619:2:43",
																		"nodeType": "YulLiteral",
																		"src": "9619:2:43",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9604:3:43",
																	"nodeType": "YulIdentifier",
																	"src": "9604:3:43"
																},
																"nativeSrc": "9604:18:43",
																"nodeType": "YulFunctionCall",
																"src": "9604:18:43"
															},
															"variables": [
																{
																	"name": "tail_1",
																	"nativeSrc": "9594:6:43",
																	"nodeType": "YulTypedName",
																	"src": "9594:6:43",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9638:9:43",
																		"nodeType": "YulIdentifier",
																		"src": "9638:9:43"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9649:2:43",
																		"nodeType": "YulLiteral",
																		"src": "9649:2:43",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9631:6:43",
																	"nodeType": "YulIdentifier",
																	"src": "9631:6:43"
																},
																"nativeSrc": "9631:21:43",
																"nodeType": "YulFunctionCall",
																"src": "9631:21:43"
															},
															"nativeSrc": "9631:21:43",
															"nodeType": "YulExpressionStatement",
															"src": "9631:21:43"
														},
														{
															"nativeSrc": "9661:17:43",
															"nodeType": "YulVariableDeclaration",
															"src": "9661:17:43",
															"value": {
																"name": "tail_1",
																"nativeSrc": "9672:6:43",
																"nodeType": "YulIdentifier",
																"src": "9672:6:43"
															},
															"variables": [
																{
																	"name": "pos",
																	"nativeSrc": "9665:3:43",
																	"nodeType": "YulTypedName",
																	"src": "9665:3:43",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "tail_1",
																		"nativeSrc": "9694:6:43",
																		"nodeType": "YulIdentifier",
																		"src": "9694:6:43"
																	},
																	{
																		"name": "value1",
																		"nativeSrc": "9702:6:43",
																		"nodeType": "YulIdentifier",
																		"src": "9702:6:43"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9687:6:43",
																	"nodeType": "YulIdentifier",
																	"src": "9687:6:43"
																},
																"nativeSrc": "9687:22:43",
																"nodeType": "YulFunctionCall",
																"src": "9687:22:43"
															},
															"nativeSrc": "9687:22:43",
															"nodeType": "YulExpressionStatement",
															"src": "9687:22:43"
														},
														{
															"nativeSrc": "9718:26:43",
															"nodeType": "YulAssignment",
															"src": "9718:26:43",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9729:9:43",
																		"nodeType": "YulIdentifier",
																		"src": "9729:9:43"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9740:3:43",
																		"nodeType": "YulLiteral",
																		"src": "9740:3:43",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9725:3:43",
																	"nodeType": "YulIdentifier",
																	"src": "9725:3:43"
																},
																"nativeSrc": "9725:19:43",
																"nodeType": "YulFunctionCall",
																"src": "9725:19:43"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "9718:3:43",
																	"nodeType": "YulIdentifier",
																	"src": "9718:3:43"
																}
															]
														},
														{
															"nativeSrc": "9753:20:43",
															"nodeType": "YulVariableDeclaration",
															"src": "9753:20:43",
															"value": {
																"name": "value0",
																"nativeSrc": "9767:6:43",
																"nodeType": "YulIdentifier",
																"src": "9767:6:43"
															},
															"variables": [
																{
																	"name": "srcPtr",
																	"nativeSrc": "9757:6:43",
																	"nodeType": "YulTypedName",
																	"src": "9757:6:43",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "9782:10:43",
															"nodeType": "YulVariableDeclaration",
															"src": "9782:10:43",
															"value": {
																"kind": "number",
																"nativeSrc": "9791:1:43",
																"nodeType": "YulLiteral",
																"src": "9791:1:43",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nativeSrc": "9786:1:43",
																	"nodeType": "YulTypedName",
																	"src": "9786:1:43",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "9850:142:43",
																"nodeType": "YulBlock",
																"src": "9850:142:43",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nativeSrc": "9900:6:43",
																					"nodeType": "YulIdentifier",
																					"src": "9900:6:43"
																				},
																				{
																					"name": "pos",
																					"nativeSrc": "9908:3:43",
																					"nodeType": "YulIdentifier",
																					"src": "9908:3:43"
																				}
																			],
																			"functionName": {
																				"name": "abi_encode_struct_FacetCut_calldata",
																				"nativeSrc": "9864:35:43",
																				"nodeType": "YulIdentifier",
																				"src": "9864:35:43"
																			},
																			"nativeSrc": "9864:48:43",
																			"nodeType": "YulFunctionCall",
																			"src": "9864:48:43"
																		},
																		"nativeSrc": "9864:48:43",
																		"nodeType": "YulExpressionStatement",
																		"src": "9864:48:43"
																	},
																	{
																		"nativeSrc": "9925:19:43",
																		"nodeType": "YulAssignment",
																		"src": "9925:19:43",
																		"value": {
																			"arguments": [
																				{
																					"name": "pos",
																					"nativeSrc": "9936:3:43",
																					"nodeType": "YulIdentifier",
																					"src": "9936:3:43"
																				},
																				{
																					"name": "_1",
																					"nativeSrc": "9941:2:43",
																					"nodeType": "YulIdentifier",
																					"src": "9941:2:43"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "9932:3:43",
																				"nodeType": "YulIdentifier",
																				"src": "9932:3:43"
																			},
																			"nativeSrc": "9932:12:43",
																			"nodeType": "YulFunctionCall",
																			"src": "9932:12:43"
																		},
																		"variableNames": [
																			{
																				"name": "pos",
																				"nativeSrc": "9925:3:43",
																				"nodeType": "YulIdentifier",
																				"src": "9925:3:43"
																			}
																		]
																	},
																	{
																		"nativeSrc": "9957:25:43",
																		"nodeType": "YulAssignment",
																		"src": "9957:25:43",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nativeSrc": "9971:6:43",
																					"nodeType": "YulIdentifier",
																					"src": "9971:6:43"
																				},
																				{
																					"name": "_1",
																					"nativeSrc": "9979:2:43",
																					"nodeType": "YulIdentifier",
																					"src": "9979:2:43"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "9967:3:43",
																				"nodeType": "YulIdentifier",
																				"src": "9967:3:43"
																			},
																			"nativeSrc": "9967:15:43",
																			"nodeType": "YulFunctionCall",
																			"src": "9967:15:43"
																		},
																		"variableNames": [
																			{
																				"name": "srcPtr",
																				"nativeSrc": "9957:6:43",
																				"nodeType": "YulIdentifier",
																				"src": "9957:6:43"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nativeSrc": "9812:1:43",
																		"nodeType": "YulIdentifier",
																		"src": "9812:1:43"
																	},
																	{
																		"name": "value1",
																		"nativeSrc": "9815:6:43",
																		"nodeType": "YulIdentifier",
																		"src": "9815:6:43"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "9809:2:43",
																	"nodeType": "YulIdentifier",
																	"src": "9809:2:43"
																},
																"nativeSrc": "9809:13:43",
																"nodeType": "YulFunctionCall",
																"src": "9809:13:43"
															},
															"nativeSrc": "9801:191:43",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "9823:18:43",
																"nodeType": "YulBlock",
																"src": "9823:18:43",
																"statements": [
																	{
																		"nativeSrc": "9825:14:43",
																		"nodeType": "YulAssignment",
																		"src": "9825:14:43",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nativeSrc": "9834:1:43",
																					"nodeType": "YulIdentifier",
																					"src": "9834:1:43"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "9837:1:43",
																					"nodeType": "YulLiteral",
																					"src": "9837:1:43",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "9830:3:43",
																				"nodeType": "YulIdentifier",
																				"src": "9830:3:43"
																			},
																			"nativeSrc": "9830:9:43",
																			"nodeType": "YulFunctionCall",
																			"src": "9830:9:43"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nativeSrc": "9825:1:43",
																				"nodeType": "YulIdentifier",
																				"src": "9825:1:43"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "9805:3:43",
																"nodeType": "YulBlock",
																"src": "9805:3:43",
																"statements": []
															},
															"src": "9801:191:43"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10012:9:43",
																				"nodeType": "YulIdentifier",
																				"src": "10012:9:43"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10023:4:43",
																				"nodeType": "YulLiteral",
																				"src": "10023:4:43",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10008:3:43",
																			"nodeType": "YulIdentifier",
																			"src": "10008:3:43"
																		},
																		"nativeSrc": "10008:20:43",
																		"nodeType": "YulFunctionCall",
																		"src": "10008:20:43"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value2",
																				"nativeSrc": "10034:6:43",
																				"nodeType": "YulIdentifier",
																				"src": "10034:6:43"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10042:42:43",
																				"nodeType": "YulLiteral",
																				"src": "10042:42:43",
																				"type": "",
																				"value": "0xffffffffffffffffffffffffffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "10030:3:43",
																			"nodeType": "YulIdentifier",
																			"src": "10030:3:43"
																		},
																		"nativeSrc": "10030:55:43",
																		"nodeType": "YulFunctionCall",
																		"src": "10030:55:43"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10001:6:43",
																	"nodeType": "YulIdentifier",
																	"src": "10001:6:43"
																},
																"nativeSrc": "10001:85:43",
																"nodeType": "YulFunctionCall",
																"src": "10001:85:43"
															},
															"nativeSrc": "10001:85:43",
															"nodeType": "YulExpressionStatement",
															"src": "10001:85:43"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10106:9:43",
																				"nodeType": "YulIdentifier",
																				"src": "10106:9:43"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10117:2:43",
																				"nodeType": "YulLiteral",
																				"src": "10117:2:43",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10102:3:43",
																			"nodeType": "YulIdentifier",
																			"src": "10102:3:43"
																		},
																		"nativeSrc": "10102:18:43",
																		"nodeType": "YulFunctionCall",
																		"src": "10102:18:43"
																	},
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nativeSrc": "10126:3:43",
																				"nodeType": "YulIdentifier",
																				"src": "10126:3:43"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "10131:9:43",
																				"nodeType": "YulIdentifier",
																				"src": "10131:9:43"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "10122:3:43",
																			"nodeType": "YulIdentifier",
																			"src": "10122:3:43"
																		},
																		"nativeSrc": "10122:19:43",
																		"nodeType": "YulFunctionCall",
																		"src": "10122:19:43"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10095:6:43",
																	"nodeType": "YulIdentifier",
																	"src": "10095:6:43"
																},
																"nativeSrc": "10095:47:43",
																"nodeType": "YulFunctionCall",
																"src": "10095:47:43"
															},
															"nativeSrc": "10095:47:43",
															"nodeType": "YulExpressionStatement",
															"src": "10095:47:43"
														},
														{
															"nativeSrc": "10151:54:43",
															"nodeType": "YulAssignment",
															"src": "10151:54:43",
															"value": {
																"arguments": [
																	{
																		"name": "value3",
																		"nativeSrc": "10185:6:43",
																		"nodeType": "YulIdentifier",
																		"src": "10185:6:43"
																	},
																	{
																		"name": "value4",
																		"nativeSrc": "10193:6:43",
																		"nodeType": "YulIdentifier",
																		"src": "10193:6:43"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "10201:3:43",
																		"nodeType": "YulIdentifier",
																		"src": "10201:3:43"
																	}
																],
																"functionName": {
																	"name": "abi_encode_bytes_calldata",
																	"nativeSrc": "10159:25:43",
																	"nodeType": "YulIdentifier",
																	"src": "10159:25:43"
																},
																"nativeSrc": "10159:46:43",
																"nodeType": "YulFunctionCall",
																"src": "10159:46:43"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10151:4:43",
																	"nodeType": "YulIdentifier",
																	"src": "10151:4:43"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_array$_t_struct$_FacetCut_$3551_calldata_ptr_$dyn_calldata_ptr_t_address_t_bytes_calldata_ptr__to_t_array$_t_struct$_FacetCut_$3551_memory_ptr_$dyn_memory_ptr_t_address_t_bytes_memory_ptr__fromStack_reversed",
												"nativeSrc": "9260:951:43",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9496:9:43",
														"nodeType": "YulTypedName",
														"src": "9496:9:43",
														"type": ""
													},
													{
														"name": "value4",
														"nativeSrc": "9507:6:43",
														"nodeType": "YulTypedName",
														"src": "9507:6:43",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "9515:6:43",
														"nodeType": "YulTypedName",
														"src": "9515:6:43",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "9523:6:43",
														"nodeType": "YulTypedName",
														"src": "9523:6:43",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "9531:6:43",
														"nodeType": "YulTypedName",
														"src": "9531:6:43",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "9539:6:43",
														"nodeType": "YulTypedName",
														"src": "9539:6:43",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "9550:4:43",
														"nodeType": "YulTypedName",
														"src": "9550:4:43",
														"type": ""
													}
												],
												"src": "9260:951:43"
											},
											{
												"body": {
													"nativeSrc": "10547:1015:43",
													"nodeType": "YulBlock",
													"src": "10547:1015:43",
													"statements": [
														{
															"nativeSrc": "10557:12:43",
															"nodeType": "YulVariableDeclaration",
															"src": "10557:12:43",
															"value": {
																"kind": "number",
																"nativeSrc": "10567:2:43",
																"nodeType": "YulLiteral",
																"src": "10567:2:43",
																"type": "",
																"value": "96"
															},
															"variables": [
																{
																	"name": "_1",
																	"nativeSrc": "10561:2:43",
																	"nodeType": "YulTypedName",
																	"src": "10561:2:43",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "10578:32:43",
															"nodeType": "YulVariableDeclaration",
															"src": "10578:32:43",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "10596:9:43",
																		"nodeType": "YulIdentifier",
																		"src": "10596:9:43"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10607:2:43",
																		"nodeType": "YulLiteral",
																		"src": "10607:2:43",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10592:3:43",
																	"nodeType": "YulIdentifier",
																	"src": "10592:3:43"
																},
																"nativeSrc": "10592:18:43",
																"nodeType": "YulFunctionCall",
																"src": "10592:18:43"
															},
															"variables": [
																{
																	"name": "tail_1",
																	"nativeSrc": "10582:6:43",
																	"nodeType": "YulTypedName",
																	"src": "10582:6:43",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "10626:9:43",
																		"nodeType": "YulIdentifier",
																		"src": "10626:9:43"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10637:2:43",
																		"nodeType": "YulLiteral",
																		"src": "10637:2:43",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10619:6:43",
																	"nodeType": "YulIdentifier",
																	"src": "10619:6:43"
																},
																"nativeSrc": "10619:21:43",
																"nodeType": "YulFunctionCall",
																"src": "10619:21:43"
															},
															"nativeSrc": "10619:21:43",
															"nodeType": "YulExpressionStatement",
															"src": "10619:21:43"
														},
														{
															"nativeSrc": "10649:17:43",
															"nodeType": "YulVariableDeclaration",
															"src": "10649:17:43",
															"value": {
																"name": "tail_1",
																"nativeSrc": "10660:6:43",
																"nodeType": "YulIdentifier",
																"src": "10660:6:43"
															},
															"variables": [
																{
																	"name": "pos",
																	"nativeSrc": "10653:3:43",
																	"nodeType": "YulTypedName",
																	"src": "10653:3:43",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "10675:27:43",
															"nodeType": "YulVariableDeclaration",
															"src": "10675:27:43",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "10695:6:43",
																		"nodeType": "YulIdentifier",
																		"src": "10695:6:43"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "10689:5:43",
																	"nodeType": "YulIdentifier",
																	"src": "10689:5:43"
																},
																"nativeSrc": "10689:13:43",
																"nodeType": "YulFunctionCall",
																"src": "10689:13:43"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "10679:6:43",
																	"nodeType": "YulTypedName",
																	"src": "10679:6:43",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "tail_1",
																		"nativeSrc": "10718:6:43",
																		"nodeType": "YulIdentifier",
																		"src": "10718:6:43"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "10726:6:43",
																		"nodeType": "YulIdentifier",
																		"src": "10726:6:43"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10711:6:43",
																	"nodeType": "YulIdentifier",
																	"src": "10711:6:43"
																},
																"nativeSrc": "10711:22:43",
																"nodeType": "YulFunctionCall",
																"src": "10711:22:43"
															},
															"nativeSrc": "10711:22:43",
															"nodeType": "YulExpressionStatement",
															"src": "10711:22:43"
														},
														{
															"nativeSrc": "10742:26:43",
															"nodeType": "YulAssignment",
															"src": "10742:26:43",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "10753:9:43",
																		"nodeType": "YulIdentifier",
																		"src": "10753:9:43"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10764:3:43",
																		"nodeType": "YulLiteral",
																		"src": "10764:3:43",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10749:3:43",
																	"nodeType": "YulIdentifier",
																	"src": "10749:3:43"
																},
																"nativeSrc": "10749:19:43",
																"nodeType": "YulFunctionCall",
																"src": "10749:19:43"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "10742:3:43",
																	"nodeType": "YulIdentifier",
																	"src": "10742:3:43"
																}
															]
														},
														{
															"nativeSrc": "10777:14:43",
															"nodeType": "YulVariableDeclaration",
															"src": "10777:14:43",
															"value": {
																"kind": "number",
																"nativeSrc": "10787:4:43",
																"nodeType": "YulLiteral",
																"src": "10787:4:43",
																"type": "",
																"value": "0x20"
															},
															"variables": [
																{
																	"name": "_2",
																	"nativeSrc": "10781:2:43",
																	"nodeType": "YulTypedName",
																	"src": "10781:2:43",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "10800:31:43",
															"nodeType": "YulVariableDeclaration",
															"src": "10800:31:43",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "10818:6:43",
																		"nodeType": "YulIdentifier",
																		"src": "10818:6:43"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10826:4:43",
																		"nodeType": "YulLiteral",
																		"src": "10826:4:43",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10814:3:43",
																	"nodeType": "YulIdentifier",
																	"src": "10814:3:43"
																},
																"nativeSrc": "10814:17:43",
																"nodeType": "YulFunctionCall",
																"src": "10814:17:43"
															},
															"variables": [
																{
																	"name": "srcPtr",
																	"nativeSrc": "10804:6:43",
																	"nodeType": "YulTypedName",
																	"src": "10804:6:43",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "10840:10:43",
															"nodeType": "YulVariableDeclaration",
															"src": "10840:10:43",
															"value": {
																"kind": "number",
																"nativeSrc": "10849:1:43",
																"nodeType": "YulLiteral",
																"src": "10849:1:43",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nativeSrc": "10844:1:43",
																	"nodeType": "YulTypedName",
																	"src": "10844:1:43",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "10908:476:43",
																"nodeType": "YulBlock",
																"src": "10908:476:43",
																"statements": [
																	{
																		"nativeSrc": "10922:23:43",
																		"nodeType": "YulVariableDeclaration",
																		"src": "10922:23:43",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nativeSrc": "10938:6:43",
																					"nodeType": "YulIdentifier",
																					"src": "10938:6:43"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nativeSrc": "10932:5:43",
																				"nodeType": "YulIdentifier",
																				"src": "10932:5:43"
																			},
																			"nativeSrc": "10932:13:43",
																			"nodeType": "YulFunctionCall",
																			"src": "10932:13:43"
																		},
																		"variables": [
																			{
																				"name": "_3",
																				"nativeSrc": "10926:2:43",
																				"nodeType": "YulTypedName",
																				"src": "10926:2:43",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "pos",
																					"nativeSrc": "10965:3:43",
																					"nodeType": "YulIdentifier",
																					"src": "10965:3:43"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "_3",
																									"nativeSrc": "10980:2:43",
																									"nodeType": "YulIdentifier",
																									"src": "10980:2:43"
																								}
																							],
																							"functionName": {
																								"name": "mload",
																								"nativeSrc": "10974:5:43",
																								"nodeType": "YulIdentifier",
																								"src": "10974:5:43"
																							},
																							"nativeSrc": "10974:9:43",
																							"nodeType": "YulFunctionCall",
																							"src": "10974:9:43"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "10985:42:43",
																							"nodeType": "YulLiteral",
																							"src": "10985:42:43",
																							"type": "",
																							"value": "0xffffffffffffffffffffffffffffffffffffffff"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nativeSrc": "10970:3:43",
																						"nodeType": "YulIdentifier",
																						"src": "10970:3:43"
																					},
																					"nativeSrc": "10970:58:43",
																					"nodeType": "YulFunctionCall",
																					"src": "10970:58:43"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "10958:6:43",
																				"nodeType": "YulIdentifier",
																				"src": "10958:6:43"
																			},
																			"nativeSrc": "10958:71:43",
																			"nodeType": "YulFunctionCall",
																			"src": "10958:71:43"
																		},
																		"nativeSrc": "10958:71:43",
																		"nodeType": "YulExpressionStatement",
																		"src": "10958:71:43"
																	},
																	{
																		"nativeSrc": "11042:38:43",
																		"nodeType": "YulVariableDeclaration",
																		"src": "11042:38:43",
																		"value": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "_3",
																							"nativeSrc": "11072:2:43",
																							"nodeType": "YulIdentifier",
																							"src": "11072:2:43"
																						},
																						{
																							"name": "_2",
																							"nativeSrc": "11076:2:43",
																							"nodeType": "YulIdentifier",
																							"src": "11076:2:43"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "11068:3:43",
																						"nodeType": "YulIdentifier",
																						"src": "11068:3:43"
																					},
																					"nativeSrc": "11068:11:43",
																					"nodeType": "YulFunctionCall",
																					"src": "11068:11:43"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nativeSrc": "11062:5:43",
																				"nodeType": "YulIdentifier",
																				"src": "11062:5:43"
																			},
																			"nativeSrc": "11062:18:43",
																			"nodeType": "YulFunctionCall",
																			"src": "11062:18:43"
																		},
																		"variables": [
																			{
																				"name": "memberValue0",
																				"nativeSrc": "11046:12:43",
																				"nodeType": "YulTypedName",
																				"src": "11046:12:43",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "memberValue0",
																					"nativeSrc": "11124:12:43",
																					"nodeType": "YulIdentifier",
																					"src": "11124:12:43"
																				},
																				{
																					"arguments": [
																						{
																							"name": "pos",
																							"nativeSrc": "11142:3:43",
																							"nodeType": "YulIdentifier",
																							"src": "11142:3:43"
																						},
																						{
																							"name": "_2",
																							"nativeSrc": "11147:2:43",
																							"nodeType": "YulIdentifier",
																							"src": "11147:2:43"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "11138:3:43",
																						"nodeType": "YulIdentifier",
																						"src": "11138:3:43"
																					},
																					"nativeSrc": "11138:12:43",
																					"nodeType": "YulFunctionCall",
																					"src": "11138:12:43"
																				}
																			],
																			"functionName": {
																				"name": "abi_encode_enum_FacetCutAction",
																				"nativeSrc": "11093:30:43",
																				"nodeType": "YulIdentifier",
																				"src": "11093:30:43"
																			},
																			"nativeSrc": "11093:58:43",
																			"nodeType": "YulFunctionCall",
																			"src": "11093:58:43"
																		},
																		"nativeSrc": "11093:58:43",
																		"nodeType": "YulExpressionStatement",
																		"src": "11093:58:43"
																	},
																	{
																		"nativeSrc": "11164:14:43",
																		"nodeType": "YulVariableDeclaration",
																		"src": "11164:14:43",
																		"value": {
																			"kind": "number",
																			"nativeSrc": "11174:4:43",
																			"nodeType": "YulLiteral",
																			"src": "11174:4:43",
																			"type": "",
																			"value": "0x40"
																		},
																		"variables": [
																			{
																				"name": "_4",
																				"nativeSrc": "11168:2:43",
																				"nodeType": "YulTypedName",
																				"src": "11168:2:43",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "pos",
																							"nativeSrc": "11202:3:43",
																							"nodeType": "YulIdentifier",
																							"src": "11202:3:43"
																						},
																						{
																							"name": "_4",
																							"nativeSrc": "11207:2:43",
																							"nodeType": "YulIdentifier",
																							"src": "11207:2:43"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "11198:3:43",
																						"nodeType": "YulIdentifier",
																						"src": "11198:3:43"
																					},
																					"nativeSrc": "11198:12:43",
																					"nodeType": "YulFunctionCall",
																					"src": "11198:12:43"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "_3",
																											"nativeSrc": "11226:2:43",
																											"nodeType": "YulIdentifier",
																											"src": "11226:2:43"
																										},
																										{
																											"name": "_4",
																											"nativeSrc": "11230:2:43",
																											"nodeType": "YulIdentifier",
																											"src": "11230:2:43"
																										}
																									],
																									"functionName": {
																										"name": "add",
																										"nativeSrc": "11222:3:43",
																										"nodeType": "YulIdentifier",
																										"src": "11222:3:43"
																									},
																									"nativeSrc": "11222:11:43",
																									"nodeType": "YulFunctionCall",
																									"src": "11222:11:43"
																								}
																							],
																							"functionName": {
																								"name": "mload",
																								"nativeSrc": "11216:5:43",
																								"nodeType": "YulIdentifier",
																								"src": "11216:5:43"
																							},
																							"nativeSrc": "11216:18:43",
																							"nodeType": "YulFunctionCall",
																							"src": "11216:18:43"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "11236:66:43",
																							"nodeType": "YulLiteral",
																							"src": "11236:66:43",
																							"type": "",
																							"value": "0xffffffff00000000000000000000000000000000000000000000000000000000"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nativeSrc": "11212:3:43",
																						"nodeType": "YulIdentifier",
																						"src": "11212:3:43"
																					},
																					"nativeSrc": "11212:91:43",
																					"nodeType": "YulFunctionCall",
																					"src": "11212:91:43"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "11191:6:43",
																				"nodeType": "YulIdentifier",
																				"src": "11191:6:43"
																			},
																			"nativeSrc": "11191:113:43",
																			"nodeType": "YulFunctionCall",
																			"src": "11191:113:43"
																		},
																		"nativeSrc": "11191:113:43",
																		"nodeType": "YulExpressionStatement",
																		"src": "11191:113:43"
																	},
																	{
																		"nativeSrc": "11317:19:43",
																		"nodeType": "YulAssignment",
																		"src": "11317:19:43",
																		"value": {
																			"arguments": [
																				{
																					"name": "pos",
																					"nativeSrc": "11328:3:43",
																					"nodeType": "YulIdentifier",
																					"src": "11328:3:43"
																				},
																				{
																					"name": "_1",
																					"nativeSrc": "11333:2:43",
																					"nodeType": "YulIdentifier",
																					"src": "11333:2:43"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "11324:3:43",
																				"nodeType": "YulIdentifier",
																				"src": "11324:3:43"
																			},
																			"nativeSrc": "11324:12:43",
																			"nodeType": "YulFunctionCall",
																			"src": "11324:12:43"
																		},
																		"variableNames": [
																			{
																				"name": "pos",
																				"nativeSrc": "11317:3:43",
																				"nodeType": "YulIdentifier",
																				"src": "11317:3:43"
																			}
																		]
																	},
																	{
																		"nativeSrc": "11349:25:43",
																		"nodeType": "YulAssignment",
																		"src": "11349:25:43",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nativeSrc": "11363:6:43",
																					"nodeType": "YulIdentifier",
																					"src": "11363:6:43"
																				},
																				{
																					"name": "_2",
																					"nativeSrc": "11371:2:43",
																					"nodeType": "YulIdentifier",
																					"src": "11371:2:43"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "11359:3:43",
																				"nodeType": "YulIdentifier",
																				"src": "11359:3:43"
																			},
																			"nativeSrc": "11359:15:43",
																			"nodeType": "YulFunctionCall",
																			"src": "11359:15:43"
																		},
																		"variableNames": [
																			{
																				"name": "srcPtr",
																				"nativeSrc": "11349:6:43",
																				"nodeType": "YulIdentifier",
																				"src": "11349:6:43"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nativeSrc": "10870:1:43",
																		"nodeType": "YulIdentifier",
																		"src": "10870:1:43"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "10873:6:43",
																		"nodeType": "YulIdentifier",
																		"src": "10873:6:43"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "10867:2:43",
																	"nodeType": "YulIdentifier",
																	"src": "10867:2:43"
																},
																"nativeSrc": "10867:13:43",
																"nodeType": "YulFunctionCall",
																"src": "10867:13:43"
															},
															"nativeSrc": "10859:525:43",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "10881:18:43",
																"nodeType": "YulBlock",
																"src": "10881:18:43",
																"statements": [
																	{
																		"nativeSrc": "10883:14:43",
																		"nodeType": "YulAssignment",
																		"src": "10883:14:43",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nativeSrc": "10892:1:43",
																					"nodeType": "YulIdentifier",
																					"src": "10892:1:43"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "10895:1:43",
																					"nodeType": "YulLiteral",
																					"src": "10895:1:43",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "10888:3:43",
																				"nodeType": "YulIdentifier",
																				"src": "10888:3:43"
																			},
																			"nativeSrc": "10888:9:43",
																			"nodeType": "YulFunctionCall",
																			"src": "10888:9:43"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nativeSrc": "10883:1:43",
																				"nodeType": "YulIdentifier",
																				"src": "10883:1:43"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "10863:3:43",
																"nodeType": "YulBlock",
																"src": "10863:3:43",
																"statements": []
															},
															"src": "10859:525:43"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "11412:6:43",
																		"nodeType": "YulIdentifier",
																		"src": "11412:6:43"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11424:9:43",
																				"nodeType": "YulIdentifier",
																				"src": "11424:9:43"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11435:4:43",
																				"nodeType": "YulLiteral",
																				"src": "11435:4:43",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11420:3:43",
																			"nodeType": "YulIdentifier",
																			"src": "11420:3:43"
																		},
																		"nativeSrc": "11420:20:43",
																		"nodeType": "YulFunctionCall",
																		"src": "11420:20:43"
																	}
																],
																"functionName": {
																	"name": "abi_encode_address",
																	"nativeSrc": "11393:18:43",
																	"nodeType": "YulIdentifier",
																	"src": "11393:18:43"
																},
																"nativeSrc": "11393:48:43",
																"nodeType": "YulFunctionCall",
																"src": "11393:48:43"
															},
															"nativeSrc": "11393:48:43",
															"nodeType": "YulExpressionStatement",
															"src": "11393:48:43"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11461:9:43",
																				"nodeType": "YulIdentifier",
																				"src": "11461:9:43"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11472:4:43",
																				"nodeType": "YulLiteral",
																				"src": "11472:4:43",
																				"type": "",
																				"value": "0x40"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11457:3:43",
																			"nodeType": "YulIdentifier",
																			"src": "11457:3:43"
																		},
																		"nativeSrc": "11457:20:43",
																		"nodeType": "YulFunctionCall",
																		"src": "11457:20:43"
																	},
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nativeSrc": "11483:3:43",
																				"nodeType": "YulIdentifier",
																				"src": "11483:3:43"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "11488:9:43",
																				"nodeType": "YulIdentifier",
																				"src": "11488:9:43"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "11479:3:43",
																			"nodeType": "YulIdentifier",
																			"src": "11479:3:43"
																		},
																		"nativeSrc": "11479:19:43",
																		"nodeType": "YulFunctionCall",
																		"src": "11479:19:43"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11450:6:43",
																	"nodeType": "YulIdentifier",
																	"src": "11450:6:43"
																},
																"nativeSrc": "11450:49:43",
																"nodeType": "YulFunctionCall",
																"src": "11450:49:43"
															},
															"nativeSrc": "11450:49:43",
															"nodeType": "YulExpressionStatement",
															"src": "11450:49:43"
														},
														{
															"nativeSrc": "11508:48:43",
															"nodeType": "YulAssignment",
															"src": "11508:48:43",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11552:3:43",
																		"nodeType": "YulIdentifier",
																		"src": "11552:3:43"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_string",
																	"nativeSrc": "11516:35:43",
																	"nodeType": "YulIdentifier",
																	"src": "11516:35:43"
																},
																"nativeSrc": "11516:40:43",
																"nodeType": "YulFunctionCall",
																"src": "11516:40:43"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "11508:4:43",
																	"nodeType": "YulIdentifier",
																	"src": "11508:4:43"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_array$_t_struct$_FacetCut_$3551_memory_ptr_$dyn_memory_ptr_t_address_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_array$_t_struct$_FacetCut_$3551_memory_ptr_$dyn_memory_ptr_t_address_t_bytes_memory_ptr__fromStack_reversed",
												"nativeSrc": "10216:1346:43",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "10508:9:43",
														"nodeType": "YulTypedName",
														"src": "10508:9:43",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "10519:6:43",
														"nodeType": "YulTypedName",
														"src": "10519:6:43",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "10527:6:43",
														"nodeType": "YulTypedName",
														"src": "10527:6:43",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "10538:4:43",
														"nodeType": "YulTypedName",
														"src": "10538:4:43",
														"type": ""
													}
												],
												"src": "10216:1346:43"
											}
										]
									},
									"contents": "{\n    { }\n    function panic_error_0x41()\n    {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function abi_decode_string(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        let _1 := calldataload(offset)\n        let _2 := 0xffffffffffffffff\n        if gt(_1, _2) { panic_error_0x41() }\n        let _3 := not(31)\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(and(add(_1, 0x1f), _3), 63), _3))\n        if or(gt(newFreePtr, _2), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        mstore(memPtr, _1)\n        if gt(add(add(offset, _1), 0x20), end) { revert(0, 0) }\n        calldatacopy(add(memPtr, 0x20), add(offset, 0x20), _1)\n        mstore(add(add(memPtr, _1), 0x20), 0)\n        array := memPtr\n    }\n    function abi_decode_tuple_t_string_memory_ptrt_uint256t_string_memory_ptr(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        let offset := calldataload(headStart)\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(0, 0) }\n        value0 := abi_decode_string(add(headStart, offset), dataEnd)\n        value1 := calldataload(add(headStart, 32))\n        let offset_1 := calldataload(add(headStart, 64))\n        if gt(offset_1, _1) { revert(0, 0) }\n        value2 := abi_decode_string(add(headStart, offset_1), dataEnd)\n    }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, 0xffffffffffffffffffffffffffffffffffffffff))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_uint256t_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n    }\n    function abi_encode_address(value, pos)\n    {\n        mstore(pos, and(value, 0xffffffffffffffffffffffffffffffffffffffff))\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffffffffffff))\n    }\n    function abi_decode_tuple_t_array$_t_struct$_FacetCut_$3551_calldata_ptr_$dyn_calldata_ptrt_addresst_bytes_calldata_ptr(headStart, dataEnd) -> value0, value1, value2, value3, value4\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        let offset := calldataload(headStart)\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(0, 0) }\n        let _2 := add(headStart, offset)\n        if iszero(slt(add(_2, 0x1f), dataEnd)) { revert(0, 0) }\n        let length := calldataload(_2)\n        if gt(length, _1) { revert(0, 0) }\n        if gt(add(add(_2, mul(length, 96)), 0x20), dataEnd) { revert(0, 0) }\n        value0 := add(_2, 0x20)\n        value1 := length\n        value2 := abi_decode_address(add(headStart, 0x20))\n        let offset_1 := calldataload(add(headStart, 64))\n        if gt(offset_1, _1) { revert(0, 0) }\n        let _3 := add(headStart, offset_1)\n        if iszero(slt(add(_3, 0x1f), dataEnd)) { revert(0, 0) }\n        let length_1 := calldataload(_3)\n        if gt(length_1, _1) { revert(0, 0) }\n        if gt(add(add(_3, length_1), 0x20), dataEnd) { revert(0, 0) }\n        value3 := add(_3, 0x20)\n        value4 := length_1\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function array_storeLengthForEncoding_string(pos) -> updated_pos\n    {\n        mstore(pos, 0)\n        updated_pos := add(pos, 0x20)\n    }\n    function copy_memory_to_memory_with_cleanup(src, dst, length)\n    {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n    function abi_encode_string(value, pos) -> end\n    {\n        let length := mload(value)\n        mstore(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), add(pos, 0x20), length)\n        end := add(add(pos, and(add(length, 31), not(31))), 0x20)\n    }\n    function abi_encode_tuple_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        mstore(headStart, 64)\n        let tail_1 := abi_encode_string(value0, add(headStart, 64))\n        mstore(add(headStart, 32), sub(tail_1, headStart))\n        tail := abi_encode_string(value1, tail_1)\n    }\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffffffffffff))\n        mstore(add(headStart, 32), value1)\n    }\n    function panic_error_0x32()\n    {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n    function abi_encode_tuple_t_stringliteral_945c9de7d462e2062e246bb52c3f039fb3d4db67a6f9243fcb5c6410338702c3__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 26)\n        mstore(add(headStart, 64), \"Invalid initialize address\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_packed_t_bytes_calldata_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value1, value0) -> end\n    {\n        calldatacopy(pos, value0, value1)\n        let _1 := add(pos, value1)\n        mstore(_1, 0)\n        end := _1\n    }\n    function abi_decode_bytes4(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, 0xffffffff00000000000000000000000000000000000000000000000000000000))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_bytes4(headStart)\n    }\n    function panic_error_0x21()\n    {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x21)\n        revert(0, 0x24)\n    }\n    function abi_encode_enum_FacetCutAction(value, pos)\n    {\n        if iszero(lt(value, 3))\n        {\n            mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n            mstore(4, 0x21)\n            revert(0, 0x24)\n        }\n        mstore(pos, value)\n    }\n    function abi_encode_struct_FacetCut_calldata(value, pos)\n    {\n        mstore(pos, and(abi_decode_address(value), 0xffffffffffffffffffffffffffffffffffffffff))\n        let value_1 := calldataload(add(value, 0x20))\n        if iszero(lt(value_1, 3)) { revert(0, 0) }\n        abi_encode_enum_FacetCutAction(value_1, add(pos, 0x20))\n        mstore(add(pos, 0x40), and(abi_decode_bytes4(add(value, 0x40)), 0xffffffff00000000000000000000000000000000000000000000000000000000))\n    }\n    function abi_encode_bytes_calldata(start, length, pos) -> end\n    {\n        mstore(pos, length)\n        calldatacopy(add(pos, 0x20), start, length)\n        mstore(add(add(pos, length), 0x20), 0)\n        end := add(add(pos, and(add(length, 31), not(31))), 0x20)\n    }\n    function abi_encode_tuple_t_struct$_FacetCut_$3551_calldata_ptr_t_address_t_bytes_calldata_ptr__to_t_struct$_FacetCut_$3551_memory_ptr_t_address_t_bytes_memory_ptr__fromStack_reversed(headStart, value3, value2, value1, value0) -> tail\n    {\n        abi_encode_struct_FacetCut_calldata(value0, headStart)\n        mstore(add(headStart, 96), and(value1, 0xffffffffffffffffffffffffffffffffffffffff))\n        mstore(add(headStart, 128), 160)\n        tail := abi_encode_bytes_calldata(value2, value3, add(headStart, 160))\n    }\n    function abi_encode_tuple_packed_t_bytes4_t_bytes_memory_ptr__to_t_bytes4_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value1, value0) -> end\n    {\n        mstore(pos, and(value0, 0xffffffff00000000000000000000000000000000000000000000000000000000))\n        let length := mload(value1)\n        copy_memory_to_memory_with_cleanup(add(value1, 0x20), add(pos, 4), length)\n        end := add(add(pos, length), 4)\n    }\n    function abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value0) -> end\n    {\n        let length := mload(value0)\n        copy_memory_to_memory_with_cleanup(add(value0, 0x20), pos, length)\n        end := add(pos, length)\n    }\n    function abi_encode_tuple_t_stringliteral_3e171e1bc4293dc8012e866cb04b58106ab144d1167c321b7083a8d2ce68c5e4__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 25)\n        mstore(add(headStart, 64), \"Facet modification failed\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_array$_t_struct$_FacetCut_$3551_calldata_ptr_$dyn_calldata_ptr_t_address_t_bytes_calldata_ptr__to_t_array$_t_struct$_FacetCut_$3551_memory_ptr_$dyn_memory_ptr_t_address_t_bytes_memory_ptr__fromStack_reversed(headStart, value4, value3, value2, value1, value0) -> tail\n    {\n        let _1 := 96\n        let tail_1 := add(headStart, 96)\n        mstore(headStart, 96)\n        let pos := tail_1\n        mstore(tail_1, value1)\n        pos := add(headStart, 128)\n        let srcPtr := value0\n        let i := 0\n        for { } lt(i, value1) { i := add(i, 1) }\n        {\n            abi_encode_struct_FacetCut_calldata(srcPtr, pos)\n            pos := add(pos, _1)\n            srcPtr := add(srcPtr, _1)\n        }\n        mstore(add(headStart, 0x20), and(value2, 0xffffffffffffffffffffffffffffffffffffffff))\n        mstore(add(headStart, 64), sub(pos, headStart))\n        tail := abi_encode_bytes_calldata(value3, value4, pos)\n    }\n    function abi_encode_tuple_t_array$_t_struct$_FacetCut_$3551_memory_ptr_$dyn_memory_ptr_t_address_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_array$_t_struct$_FacetCut_$3551_memory_ptr_$dyn_memory_ptr_t_address_t_bytes_memory_ptr__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        let _1 := 96\n        let tail_1 := add(headStart, 96)\n        mstore(headStart, 96)\n        let pos := tail_1\n        let length := mload(value0)\n        mstore(tail_1, length)\n        pos := add(headStart, 128)\n        let _2 := 0x20\n        let srcPtr := add(value0, 0x20)\n        let i := 0\n        for { } lt(i, length) { i := add(i, 1) }\n        {\n            let _3 := mload(srcPtr)\n            mstore(pos, and(mload(_3), 0xffffffffffffffffffffffffffffffffffffffff))\n            let memberValue0 := mload(add(_3, _2))\n            abi_encode_enum_FacetCutAction(memberValue0, add(pos, _2))\n            let _4 := 0x40\n            mstore(add(pos, _4), and(mload(add(_3, _4)), 0xffffffff00000000000000000000000000000000000000000000000000000000))\n            pos := add(pos, _1)\n            srcPtr := add(srcPtr, _2)\n        }\n        abi_encode_address(value1, add(headStart, 0x20))\n        mstore(add(headStart, 0x40), sub(pos, headStart))\n        tail := array_storeLengthForEncoding_string(pos)\n    }\n}",
									"id": 43,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b5060043610610064575f3560e01c80638da5cb5b1161004d5780638da5cb5b146100905780639e97d739146100be578063a67a117b146100d1575f80fd5b806313732d79146100685780637a26dd311461007d575b5f80fd5b61007b6100763660046105aa565b6100e4565b005b61007b61008b36600461062d565b610123565b5f546100a2906001600160a01b031681565b6040516001600160a01b03909116815260200160405180910390f35b61007b6100cc36600461065d565b610164565b61007b6100df36600461072d565b610400565b817fdbbc48772584850c2086f66c22a3654c9e46524ff539fd9d72198d91cb7c13c0848360405161011692919061079a565b60405180910390a2505050565b604080516001600160a01b03851681526020810183905283917fcb87df07b1c304492bd875a5c8b98672eca500939412809ea229afef1d7451889101610116565b5f5b848110156103f8575f868683818110610181576101816107c7565b610197926020606090920201908101915061072d565b6001600160a01b03160361025f576001600160a01b0384166102005760405162461bcd60e51b815260206004820152601a60248201527f496e76616c696420696e697469616c697a65206164647265737300000000000060448201526064015b60405180910390fd5b836001600160a01b0316838360405161021a9291906107db565b5f60405180830381855af49150503d805f8114610252576040519150601f19603f3d011682016040523d82523d5f602084013e610257565b606091505b5050506103f0565b5f868683818110610272576102726107c7565b610288926020606090920201908101915061072d565b6001600160a01b03168787848181106102a3576102a36107c7565b90506060020160400160208101906102bb9190610801565b8888858181106102cd576102cd6107c7565b9050606002015f87876040516020016102e994939291906108b4565b60408051601f198184030181529082905261030792916020016108ed565b60408051601f19818403018152908290526103219161091c565b5f60405180830381855af49150503d805f8114610359576040519150601f19603f3d011682016040523d82523d5f602084013e61035e565b606091505b50509050806103af5760405162461bcd60e51b815260206004820152601960248201527f4661636574206d6f64696669636174696f6e206661696c65640000000000000060448201526064016101f7565b7fee80746e1d76a7c4654e1a9d2ff0dde8304b0d72803a25eb48c89fd6eae7ebe887878787876040516103e6959493929190610937565b60405180910390a1505b600101610166565b505050505050565b6040805160018082528183019092525f91816020015b604080516060810182525f80825260208083018290529282015282525f199092019101816104165790505060408051606081019091526001600160a01b0384168152909150602081015f81527ffccc64d400000000000000000000000000000000000000000000000000000000602090910152815182905f9061049b5761049b6107c7565b60209081029190910101526040517f9e97d7390000000000000000000000000000000000000000000000000000000081523090639e97d739906104e49084905f9060040161099e565b5f604051808303815f87803b1580156104fb575f80fd5b505af11580156103f8573d5f803e3d5ffd5b634e487b7160e01b5f52604160045260245ffd5b5f82601f830112610530575f80fd5b813567ffffffffffffffff8082111561054b5761054b61050d565b604051601f8301601f19908116603f011681019082821181831017156105735761057361050d565b8160405283815286602085880101111561058b575f80fd5b836020870160208301375f602085830101528094505050505092915050565b5f805f606084860312156105bc575f80fd5b833567ffffffffffffffff808211156105d3575f80fd5b6105df87838801610521565b94506020860135935060408601359150808211156105fb575f80fd5b5061060886828701610521565b9150509250925092565b80356001600160a01b0381168114610628575f80fd5b919050565b5f805f6060848603121561063f575f80fd5b61064884610612565b95602085013595506040909401359392505050565b5f805f805f60608688031215610671575f80fd5b853567ffffffffffffffff80821115610688575f80fd5b818801915088601f83011261069b575f80fd5b8135818111156106a9575f80fd5b8960206060830285010111156106bd575f80fd5b602083019750809650506106d360208901610612565b945060408801359150808211156106e8575f80fd5b818801915088601f8301126106fb575f80fd5b813581811115610709575f80fd5b89602082850101111561071a575f80fd5b9699959850939650602001949392505050565b5f6020828403121561073d575f80fd5b61074682610612565b9392505050565b5f5b8381101561076757818101518382015260200161074f565b50505f910152565b5f815180845261078681602086016020860161074d565b601f01601f19169290920160200192915050565b604081525f6107ac604083018561076f565b82810360208401526107be818561076f565b95945050505050565b634e487b7160e01b5f52603260045260245ffd5b818382375f9101908152919050565b80356001600160e01b031981168114610628575f80fd5b5f60208284031215610811575f80fd5b610746826107ea565b6003811061083657634e487b7160e01b5f52602160045260245ffd5b9052565b6001600160a01b0361084b82610612565b16825260208101356003811061085f575f80fd5b61086c602084018261081a565b506001600160e01b0319610882604083016107ea565b1660408301525050565b81835281816020850137505f828201602090810191909152601f909101601f19169091010190565b6108be818661083a565b6001600160a01b038416606082015260a060808201525f6108e360a08301848661088c565b9695505050505050565b6001600160e01b0319831681525f825161090e81600485016020870161074d565b919091016004019392505050565b5f825161092d81846020870161074d565b9190910192915050565b60608082528181018690525f908760808401835b8981101561096d5761095d828461083a565b918301919083019060010161094b565b506001600160a01b0388166020860152848103604086015261099081878961088c565b9a9950505050505050505050565b606080825283518282018190525f91906020906080850190828801855b82811015610a075781516001600160a01b038151168552858101516109e28787018261081a565b506040908101516001600160e01b0319169085015292850192908401906001016109bb565b5050506001600160a01b038616602086015284810360408601525f81526020810197965050505050505056fea2646970667358221220743c7c2c1d50081f7f3f6f1a1e93df7b075a63cfc931b296a5864c2289957fb864736f6c63430008180033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x64 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8DA5CB5B GT PUSH2 0x4D JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x90 JUMPI DUP1 PUSH4 0x9E97D739 EQ PUSH2 0xBE JUMPI DUP1 PUSH4 0xA67A117B EQ PUSH2 0xD1 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x13732D79 EQ PUSH2 0x68 JUMPI DUP1 PUSH4 0x7A26DD31 EQ PUSH2 0x7D JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x7B PUSH2 0x76 CALLDATASIZE PUSH1 0x4 PUSH2 0x5AA JUMP JUMPDEST PUSH2 0xE4 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x7B PUSH2 0x8B CALLDATASIZE PUSH1 0x4 PUSH2 0x62D JUMP JUMPDEST PUSH2 0x123 JUMP JUMPDEST PUSH0 SLOAD PUSH2 0xA2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x7B PUSH2 0xCC CALLDATASIZE PUSH1 0x4 PUSH2 0x65D JUMP JUMPDEST PUSH2 0x164 JUMP JUMPDEST PUSH2 0x7B PUSH2 0xDF CALLDATASIZE PUSH1 0x4 PUSH2 0x72D JUMP JUMPDEST PUSH2 0x400 JUMP JUMPDEST DUP2 PUSH32 0xDBBC48772584850C2086F66C22A3654C9E46524FF539FD9D72198D91CB7C13C0 DUP5 DUP4 PUSH1 0x40 MLOAD PUSH2 0x116 SWAP3 SWAP2 SWAP1 PUSH2 0x79A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP4 SWAP1 MSTORE DUP4 SWAP2 PUSH32 0xCB87DF07B1C304492BD875A5C8B98672ECA500939412809EA229AFEF1D745188 SWAP2 ADD PUSH2 0x116 JUMP JUMPDEST PUSH0 JUMPDEST DUP5 DUP2 LT ISZERO PUSH2 0x3F8 JUMPI PUSH0 DUP7 DUP7 DUP4 DUP2 DUP2 LT PUSH2 0x181 JUMPI PUSH2 0x181 PUSH2 0x7C7 JUMP JUMPDEST PUSH2 0x197 SWAP3 PUSH1 0x20 PUSH1 0x60 SWAP1 SWAP3 MUL ADD SWAP1 DUP2 ADD SWAP2 POP PUSH2 0x72D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SUB PUSH2 0x25F JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x200 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E76616C696420696E697469616C697A652061646472657373000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 DUP4 PUSH1 0x40 MLOAD PUSH2 0x21A SWAP3 SWAP2 SWAP1 PUSH2 0x7DB JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 GAS DELEGATECALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0x252 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x257 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP POP PUSH2 0x3F0 JUMP JUMPDEST PUSH0 DUP7 DUP7 DUP4 DUP2 DUP2 LT PUSH2 0x272 JUMPI PUSH2 0x272 PUSH2 0x7C7 JUMP JUMPDEST PUSH2 0x288 SWAP3 PUSH1 0x20 PUSH1 0x60 SWAP1 SWAP3 MUL ADD SWAP1 DUP2 ADD SWAP2 POP PUSH2 0x72D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP8 DUP8 DUP5 DUP2 DUP2 LT PUSH2 0x2A3 JUMPI PUSH2 0x2A3 PUSH2 0x7C7 JUMP JUMPDEST SWAP1 POP PUSH1 0x60 MUL ADD PUSH1 0x40 ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x2BB SWAP2 SWAP1 PUSH2 0x801 JUMP JUMPDEST DUP9 DUP9 DUP6 DUP2 DUP2 LT PUSH2 0x2CD JUMPI PUSH2 0x2CD PUSH2 0x7C7 JUMP JUMPDEST SWAP1 POP PUSH1 0x60 MUL ADD PUSH0 DUP8 DUP8 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x2E9 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x8B4 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP1 DUP3 SWAP1 MSTORE PUSH2 0x307 SWAP3 SWAP2 PUSH1 0x20 ADD PUSH2 0x8ED JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP1 DUP3 SWAP1 MSTORE PUSH2 0x321 SWAP2 PUSH2 0x91C JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 GAS DELEGATECALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0x359 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x35E JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x3AF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4661636574206D6F64696669636174696F6E206661696C656400000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x1F7 JUMP JUMPDEST PUSH32 0xEE80746E1D76A7C4654E1A9D2FF0DDE8304B0D72803A25EB48C89FD6EAE7EBE8 DUP8 DUP8 DUP8 DUP8 DUP8 PUSH1 0x40 MLOAD PUSH2 0x3E6 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x937 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMPDEST PUSH1 0x1 ADD PUSH2 0x166 JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 DUP1 DUP3 MSTORE DUP2 DUP4 ADD SWAP1 SWAP3 MSTORE PUSH0 SWAP2 DUP2 PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x60 DUP2 ADD DUP3 MSTORE PUSH0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 ADD DUP3 SWAP1 MSTORE SWAP3 DUP3 ADD MSTORE DUP3 MSTORE PUSH0 NOT SWAP1 SWAP3 ADD SWAP2 ADD DUP2 PUSH2 0x416 JUMPI SWAP1 POP POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x60 DUP2 ADD SWAP1 SWAP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND DUP2 MSTORE SWAP1 SWAP2 POP PUSH1 0x20 DUP2 ADD PUSH0 DUP2 MSTORE PUSH32 0xFCCC64D400000000000000000000000000000000000000000000000000000000 PUSH1 0x20 SWAP1 SWAP2 ADD MSTORE DUP2 MLOAD DUP3 SWAP1 PUSH0 SWAP1 PUSH2 0x49B JUMPI PUSH2 0x49B PUSH2 0x7C7 JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE PUSH1 0x40 MLOAD PUSH32 0x9E97D73900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE ADDRESS SWAP1 PUSH4 0x9E97D739 SWAP1 PUSH2 0x4E4 SWAP1 DUP5 SWAP1 PUSH0 SWAP1 PUSH1 0x4 ADD PUSH2 0x99E JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x4FB JUMPI PUSH0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x3F8 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x530 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x54B JUMPI PUSH2 0x54B PUSH2 0x50D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP4 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP3 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH2 0x573 JUMPI PUSH2 0x573 PUSH2 0x50D JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP4 DUP2 MSTORE DUP7 PUSH1 0x20 DUP6 DUP9 ADD ADD GT ISZERO PUSH2 0x58B JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP4 PUSH1 0x20 DUP8 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH0 PUSH1 0x20 DUP6 DUP4 ADD ADD MSTORE DUP1 SWAP5 POP POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x5BC JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x5D3 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x5DF DUP8 DUP4 DUP9 ADD PUSH2 0x521 JUMP JUMPDEST SWAP5 POP PUSH1 0x20 DUP7 ADD CALLDATALOAD SWAP4 POP PUSH1 0x40 DUP7 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x5FB JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x608 DUP7 DUP3 DUP8 ADD PUSH2 0x521 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x628 JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x63F JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x648 DUP5 PUSH2 0x612 JUMP JUMPDEST SWAP6 PUSH1 0x20 DUP6 ADD CALLDATALOAD SWAP6 POP PUSH1 0x40 SWAP1 SWAP5 ADD CALLDATALOAD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x671 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP6 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x688 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 DUP9 ADD SWAP2 POP DUP9 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x69B JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0x6A9 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP10 PUSH1 0x20 PUSH1 0x60 DUP4 MUL DUP6 ADD ADD GT ISZERO PUSH2 0x6BD JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH1 0x20 DUP4 ADD SWAP8 POP DUP1 SWAP7 POP POP PUSH2 0x6D3 PUSH1 0x20 DUP10 ADD PUSH2 0x612 JUMP JUMPDEST SWAP5 POP PUSH1 0x40 DUP9 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x6E8 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 DUP9 ADD SWAP2 POP DUP9 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x6FB JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0x709 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP10 PUSH1 0x20 DUP3 DUP6 ADD ADD GT ISZERO PUSH2 0x71A JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP7 SWAP10 SWAP6 SWAP9 POP SWAP4 SWAP7 POP PUSH1 0x20 ADD SWAP5 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x73D JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x746 DUP3 PUSH2 0x612 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x767 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x74F JUMP JUMPDEST POP POP PUSH0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH2 0x786 DUP2 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP7 ADD PUSH2 0x74D JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x40 DUP2 MSTORE PUSH0 PUSH2 0x7AC PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x76F JUMP JUMPDEST DUP3 DUP2 SUB PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x7BE DUP2 DUP6 PUSH2 0x76F JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST DUP2 DUP4 DUP3 CALLDATACOPY PUSH0 SWAP2 ADD SWAP1 DUP2 MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0x628 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x811 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x746 DUP3 PUSH2 0x7EA JUMP JUMPDEST PUSH1 0x3 DUP2 LT PUSH2 0x836 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST SWAP1 MSTORE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x84B DUP3 PUSH2 0x612 JUMP JUMPDEST AND DUP3 MSTORE PUSH1 0x20 DUP2 ADD CALLDATALOAD PUSH1 0x3 DUP2 LT PUSH2 0x85F JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x86C PUSH1 0x20 DUP5 ADD DUP3 PUSH2 0x81A JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT PUSH2 0x882 PUSH1 0x40 DUP4 ADD PUSH2 0x7EA JUMP JUMPDEST AND PUSH1 0x40 DUP4 ADD MSTORE POP POP JUMP JUMPDEST DUP2 DUP4 MSTORE DUP2 DUP2 PUSH1 0x20 DUP6 ADD CALLDATACOPY POP PUSH0 DUP3 DUP3 ADD PUSH1 0x20 SWAP1 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x1F SWAP1 SWAP2 ADD PUSH1 0x1F NOT AND SWAP1 SWAP2 ADD ADD SWAP1 JUMP JUMPDEST PUSH2 0x8BE DUP2 DUP7 PUSH2 0x83A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0xA0 PUSH1 0x80 DUP3 ADD MSTORE PUSH0 PUSH2 0x8E3 PUSH1 0xA0 DUP4 ADD DUP5 DUP7 PUSH2 0x88C JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP4 AND DUP2 MSTORE PUSH0 DUP3 MLOAD PUSH2 0x90E DUP2 PUSH1 0x4 DUP6 ADD PUSH1 0x20 DUP8 ADD PUSH2 0x74D JUMP JUMPDEST SWAP2 SWAP1 SWAP2 ADD PUSH1 0x4 ADD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 MLOAD PUSH2 0x92D DUP2 DUP5 PUSH1 0x20 DUP8 ADD PUSH2 0x74D JUMP JUMPDEST SWAP2 SWAP1 SWAP2 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 DUP1 DUP3 MSTORE DUP2 DUP2 ADD DUP7 SWAP1 MSTORE PUSH0 SWAP1 DUP8 PUSH1 0x80 DUP5 ADD DUP4 JUMPDEST DUP10 DUP2 LT ISZERO PUSH2 0x96D JUMPI PUSH2 0x95D DUP3 DUP5 PUSH2 0x83A JUMP JUMPDEST SWAP2 DUP4 ADD SWAP2 SWAP1 DUP4 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x94B JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND PUSH1 0x20 DUP7 ADD MSTORE DUP5 DUP2 SUB PUSH1 0x40 DUP7 ADD MSTORE PUSH2 0x990 DUP2 DUP8 DUP10 PUSH2 0x88C JUMP JUMPDEST SWAP11 SWAP10 POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP1 DUP3 MSTORE DUP4 MLOAD DUP3 DUP3 ADD DUP2 SWAP1 MSTORE PUSH0 SWAP2 SWAP1 PUSH1 0x20 SWAP1 PUSH1 0x80 DUP6 ADD SWAP1 DUP3 DUP9 ADD DUP6 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0xA07 JUMPI DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 MLOAD AND DUP6 MSTORE DUP6 DUP2 ADD MLOAD PUSH2 0x9E2 DUP8 DUP8 ADD DUP3 PUSH2 0x81A JUMP JUMPDEST POP PUSH1 0x40 SWAP1 DUP2 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND SWAP1 DUP6 ADD MSTORE SWAP3 DUP6 ADD SWAP3 SWAP1 DUP5 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x9BB JUMP JUMPDEST POP POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0x20 DUP7 ADD MSTORE DUP5 DUP2 SUB PUSH1 0x40 DUP7 ADD MSTORE PUSH0 DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH21 0x3C7C2C1D50081F7F3F6F1A1E93DF7B075A63CFC931 0xB2 SWAP7 0xA5 DUP7 0x4C 0x22 DUP10 SWAP6 PUSH32 0xB864736F6C634300081800330000000000000000000000000000000000000000 ",
							"sourceMap": "5267:1886:42:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6713:228;;;;;;:::i;:::-;;:::i;:::-;;6947:204;;;;;;:::i;:::-;;:::i;5309:20::-;;;;;-1:-1:-1;;;;;5309:20:42;;;;;;-1:-1:-1;;;;;2367:55:43;;;2349:74;;2337:2;2322:18;5309:20:42;;;;;;;5869:838;;;;;;:::i;:::-;;:::i;5391:472::-;;;;;;:::i;:::-;;:::i;6713:228::-;6909:12;6876:58;6891:16;6923:10;6876:58;;;;;;;:::i;:::-;;;;;;;;6713:228;;;:::o;6947:204::-;7091:53;;;-1:-1:-1;;;;;5067:55:43;;5049:74;;5154:2;5139:18;;5132:34;;;7117:12:42;;7091:53;;5022:18:43;7091:53:42;4875:297:43;5869:838:42;6017:9;6012:689;6028:22;;;6012:689;;;6114:1;6075:11;;6087:1;6075:14;;;;;;;:::i;:::-;:27;;;:14;;;;;:27;;;;-1:-1:-1;6075:27:42;:::i;:::-;-1:-1:-1;;;;;6075:41:42;;6071:620;;-1:-1:-1;;;;;6144:19:42;;6136:58;;;;-1:-1:-1;;;6136:58:42;;5568:2:43;6136:58:42;;;5550:21:43;5607:2;5587:18;;;5580:30;5646:28;5626:18;;;5619:56;5692:18;;6136:58:42;;;;;;;;;6212:5;-1:-1:-1;;;;;6212:18:42;6231:9;;6212:29;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6071:620;;;6281:12;6299:11;;6311:1;6299:14;;;;;;;:::i;:::-;:27;;;:14;;;;;:27;;;;-1:-1:-1;6299:27:42;:::i;:::-;-1:-1:-1;;;;;6299:40:42;6403:11;;6415:1;6403:14;;;;;;;:::i;:::-;;;;;;:31;;;;;;;;;;:::i;:::-;6471:11;;6483:1;6471:14;;;;;;;:::i;:::-;;;;;;6495:1;6499:9;;6460:49;;;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;6460:49:42;;;;;;;;;;6361:170;;;6460:49;6361:170;;:::i;:::-;;;;-1:-1:-1;;6361:170:42;;;;;;;;;;6299:250;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6280:269;;;6575:7;6567:45;;;;-1:-1:-1;;;6567:45:42;;9108:2:43;6567:45:42;;;9090:21:43;9147:2;9127:18;;;9120:30;9186:27;9166:18;;;9159:55;9231:18;;6567:45:42;8906:349:43;6567:45:42;6635:41;6646:11;;6659:5;6666:9;;6635:41;;;;;;;;;;:::i;:::-;;;;;;;;6262:429;6071:620;6052:3;;6012:689;;;;5869:838;;;;;:::o;5391:472::-;5484:26;;;5508:1;5484:26;;;;;;;;;5444:37;;5484:26;;;;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;5484:26:42;;-1:-1:-1;;5484:26:42;;;;;;;;;;-1:-1:-1;5536:237:42;;;;;;;;;-1:-1:-1;;;;;5536:237:42;;;;5444:66;;-1:-1:-1;5536:237:42;;;-1:-1:-1;5536:237:42;;;;;;;;5520:13;;:10;;-1:-1:-1;;5520:13:42;;;;:::i;:::-;;;;;;;;;;:253;5783:62;;;;;5800:4;;5783:34;;:62;;5818:10;;5838:1;;5783:62;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;14:184:43;-1:-1:-1;;;63:1:43;56:88;163:4;160:1;153:15;187:4;184:1;177:15;203:719;246:5;299:3;292:4;284:6;280:17;276:27;266:55;;317:1;314;307:12;266:55;353:6;340:20;379:18;416:2;412;409:10;406:36;;;422:18;;:::i;:::-;497:2;491:9;465:2;551:13;;-1:-1:-1;;547:22:43;;;571:2;543:31;539:40;527:53;;;595:18;;;615:22;;;592:46;589:72;;;641:18;;:::i;:::-;681:10;677:2;670:22;716:2;708:6;701:18;762:3;755:4;750:2;742:6;738:15;734:26;731:35;728:55;;;779:1;776;769:12;728:55;843:2;836:4;828:6;824:17;817:4;809:6;805:17;792:54;890:1;883:4;878:2;870:6;866:15;862:26;855:37;910:6;901:15;;;;;;203:719;;;;:::o;927:611::-;1024:6;1032;1040;1093:2;1081:9;1072:7;1068:23;1064:32;1061:52;;;1109:1;1106;1099:12;1061:52;1149:9;1136:23;1178:18;1219:2;1211:6;1208:14;1205:34;;;1235:1;1232;1225:12;1205:34;1258:50;1300:7;1291:6;1280:9;1276:22;1258:50;:::i;:::-;1248:60;;1355:2;1344:9;1340:18;1327:32;1317:42;;1412:2;1401:9;1397:18;1384:32;1368:48;;1441:2;1431:8;1428:16;1425:36;;;1457:1;1454;1447:12;1425:36;;1480:52;1524:7;1513:8;1502:9;1498:24;1480:52;:::i;:::-;1470:62;;;927:611;;;;;:::o;1543:196::-;1611:20;;-1:-1:-1;;;;;1660:54:43;;1650:65;;1640:93;;1729:1;1726;1719:12;1640:93;1543:196;;;:::o;1744:322::-;1821:6;1829;1837;1890:2;1878:9;1869:7;1865:23;1861:32;1858:52;;;1906:1;1903;1896:12;1858:52;1929:29;1948:9;1929:29;:::i;:::-;1919:39;2005:2;1990:18;;1977:32;;-1:-1:-1;2056:2:43;2041:18;;;2028:32;;1744:322;-1:-1:-1;;;1744:322:43:o;2434:1184::-;2577:6;2585;2593;2601;2609;2662:2;2650:9;2641:7;2637:23;2633:32;2630:52;;;2678:1;2675;2668:12;2630:52;2718:9;2705:23;2747:18;2788:2;2780:6;2777:14;2774:34;;;2804:1;2801;2794:12;2774:34;2842:6;2831:9;2827:22;2817:32;;2887:7;2880:4;2876:2;2872:13;2868:27;2858:55;;2909:1;2906;2899:12;2858:55;2949:2;2936:16;2975:2;2967:6;2964:14;2961:34;;;2991:1;2988;2981:12;2961:34;3047:7;3040:4;3034:2;3026:6;3022:15;3018:2;3014:24;3010:35;3007:48;3004:68;;;3068:1;3065;3058:12;3004:68;3099:4;3095:2;3091:13;3081:23;;3123:6;3113:16;;;3148:40;3182:4;3171:9;3167:20;3148:40;:::i;:::-;3138:50;;3241:2;3230:9;3226:18;3213:32;3197:48;;3270:2;3260:8;3257:16;3254:36;;;3286:1;3283;3276:12;3254:36;3324:8;3313:9;3309:24;3299:34;;3371:7;3364:4;3360:2;3356:13;3352:27;3342:55;;3393:1;3390;3383:12;3342:55;3435:2;3422:16;3463:2;3453:8;3450:16;3447:36;;;3479:1;3476;3469:12;3447:36;3528:7;3521:4;3510:8;3506:2;3502:17;3498:28;3495:41;3492:61;;;3549:1;3546;3539:12;3492:61;2434:1184;;;;-1:-1:-1;2434:1184:43;;-1:-1:-1;3580:4:43;3572:13;;3604:8;2434:1184;-1:-1:-1;;;2434:1184:43:o;3623:186::-;3682:6;3735:2;3723:9;3714:7;3710:23;3706:32;3703:52;;;3751:1;3748;3741:12;3703:52;3774:29;3793:9;3774:29;:::i;:::-;3764:39;3623:186;-1:-1:-1;;;3623:186:43:o;3956:250::-;4041:1;4051:113;4065:6;4062:1;4059:13;4051:113;;;4141:11;;;4135:18;4122:11;;;4115:39;4087:2;4080:10;4051:113;;;-1:-1:-1;;4198:1:43;4180:16;;4173:27;3956:250::o;4211:271::-;4253:3;4291:5;4285:12;4318:6;4313:3;4306:19;4334:76;4403:6;4396:4;4391:3;4387:14;4380:4;4373:5;4369:16;4334:76;:::i;:::-;4464:2;4443:15;-1:-1:-1;;4439:29:43;4430:39;;;;4471:4;4426:50;;4211:271;-1:-1:-1;;4211:271:43:o;4487:383::-;4684:2;4673:9;4666:21;4647:4;4710:45;4751:2;4740:9;4736:18;4728:6;4710:45;:::i;:::-;4803:9;4795:6;4791:22;4786:2;4775:9;4771:18;4764:50;4831:33;4857:6;4849;4831:33;:::i;:::-;4823:41;4487:383;-1:-1:-1;;;;;4487:383:43:o;5177:184::-;-1:-1:-1;;;5226:1:43;5219:88;5326:4;5323:1;5316:15;5350:4;5347:1;5340:15;5721:271;5904:6;5896;5891:3;5878:33;5860:3;5930:16;;5955:13;;;5930:16;5721:271;-1:-1:-1;5721:271:43:o;5997:219::-;6064:20;;-1:-1:-1;;;;;;6113:78:43;;6103:89;;6093:117;;6206:1;6203;6196:12;6221:184;6279:6;6332:2;6320:9;6311:7;6307:23;6303:32;6300:52;;;6348:1;6345;6338:12;6300:52;6371:28;6389:9;6371:28;:::i;6599:299::-;6685:1;6678:5;6675:12;6665:200;;-1:-1:-1;;;6718:1:43;6711:88;6822:4;6819:1;6812:15;6850:4;6847:1;6840:15;6665:200;6874:18;;6599:299::o;6903:474::-;-1:-1:-1;;;;;6990:25:43;7009:5;6990:25;:::i;:::-;6986:74;6981:3;6974:87;7109:4;7102:5;7098:16;7085:30;7146:1;7137:7;7134:14;7124:42;;7162:1;7159;7152:12;7124:42;7175:55;7224:4;7219:3;7215:14;7206:7;7175:55;:::i;:::-;;-1:-1:-1;;;;;;7266:35:43;7295:4;7288:5;7284:16;7266:35;:::i;:::-;7262:108;7255:4;7250:3;7246:14;7239:132;6903:474;;:::o;7382:266::-;7470:6;7465:3;7458:19;7522:6;7515:5;7508:4;7503:3;7499:14;7486:43;-1:-1:-1;7574:1:43;7549:16;;;7567:4;7545:27;;;7538:38;;;;7630:2;7609:15;;;-1:-1:-1;;7605:29:43;7596:39;;;7592:50;;7382:266::o;7653:521::-;7902:54;7946:9;7938:6;7902:54;:::i;:::-;-1:-1:-1;;;;;7996:6:43;7992:55;7987:2;7976:9;7972:18;7965:83;8085:3;8079;8068:9;8064:19;8057:32;7883:4;8106:62;8163:3;8152:9;8148:19;8140:6;8132;8106:62;:::i;:::-;8098:70;7653:521;-1:-1:-1;;;;;;7653:521:43:o;8179:430::-;-1:-1:-1;;;;;;8368:6:43;8364:79;8359:3;8352:92;8334:3;8473:6;8467:13;8489:74;8556:6;8552:1;8547:3;8543:11;8536:4;8528:6;8524:17;8489:74;:::i;:::-;8583:16;;;;8601:1;8579:24;;8179:430;-1:-1:-1;;;8179:430:43:o;8614:287::-;8743:3;8781:6;8775:13;8797:66;8856:6;8851:3;8844:4;8836:6;8832:17;8797:66;:::i;:::-;8879:16;;;;;8614:287;-1:-1:-1;;8614:287:43:o;9260:951::-;9579:2;9631:21;;;9604:18;;;9687:22;;;9550:4;;9767:6;9740:3;9725:19;;9550:4;9801:191;9815:6;9812:1;9809:13;9801:191;;;9864:48;9908:3;9900:6;9864:48;:::i;:::-;9967:15;;;;9932:12;;;;9837:1;9830:9;9801:191;;;9805:3;-1:-1:-1;;;;;10034:6:43;10030:55;10023:4;10012:9;10008:20;10001:85;10131:9;10126:3;10122:19;10117:2;10106:9;10102:18;10095:47;10159:46;10201:3;10193:6;10185;10159:46;:::i;:::-;10151:54;9260:951;-1:-1:-1;;;;;;;;;;9260:951:43:o;10216:1346::-;10567:2;10619:21;;;10689:13;;10592:18;;;10711:22;;;10538:4;;10567:2;10787:4;;10764:3;10749:19;;;10814:17;;;10538:4;10859:525;10873:6;10870:1;10867:13;10859:525;;;10938:6;10932:13;-1:-1:-1;;;;;10980:2:43;10974:9;10970:58;10965:3;10958:71;11076:2;11072;11068:11;11062:18;11093:58;11147:2;11142:3;11138:12;11124;11093:58;:::i;:::-;-1:-1:-1;11174:4:43;11222:11;;;11216:18;-1:-1:-1;;;;;;11212:91:43;11198:12;;;11191:113;11324:12;;;;11359:15;;;;10895:1;10888:9;10859:525;;;-1:-1:-1;;;;;;;;2137:54:43;;11435:4;11420:20;;2125:67;11479:19;;;11472:4;11457:20;;11450:49;3905:1;3893:14;;3940:4;3931:14;;11508:48;10216:1346;-1:-1:-1;;;;;;;10216:1346:43:o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "533000",
								"executionCost": "24800",
								"totalCost": "557800"
							},
							"external": {
								"addCandidateDetails(string,uint256,string)": "infinite",
								"addFacet(address)": "infinite",
								"addVoterDetails(address,uint256,uint256)": "2114",
								"diamondCut((address,uint8,bytes4)[],address,bytes)": "infinite",
								"owner()": "2323"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 5267,
									"end": 7153,
									"name": "PUSH",
									"source": 42,
									"value": "80"
								},
								{
									"begin": 5267,
									"end": 7153,
									"name": "PUSH",
									"source": 42,
									"value": "40"
								},
								{
									"begin": 5267,
									"end": 7153,
									"name": "MSTORE",
									"source": 42
								},
								{
									"begin": 5336,
									"end": 5385,
									"name": "CALLVALUE",
									"source": 42
								},
								{
									"begin": 5336,
									"end": 5385,
									"name": "DUP1",
									"source": 42
								},
								{
									"begin": 5336,
									"end": 5385,
									"name": "ISZERO",
									"source": 42
								},
								{
									"begin": 5336,
									"end": 5385,
									"name": "PUSH [tag]",
									"source": 42,
									"value": "1"
								},
								{
									"begin": 5336,
									"end": 5385,
									"name": "JUMPI",
									"source": 42
								},
								{
									"begin": 5336,
									"end": 5385,
									"name": "PUSH",
									"source": 42,
									"value": "0"
								},
								{
									"begin": 5336,
									"end": 5385,
									"name": "DUP1",
									"source": 42
								},
								{
									"begin": 5336,
									"end": 5385,
									"name": "REVERT",
									"source": 42
								},
								{
									"begin": 5336,
									"end": 5385,
									"name": "tag",
									"source": 42,
									"value": "1"
								},
								{
									"begin": 5336,
									"end": 5385,
									"name": "JUMPDEST",
									"source": 42
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 5360,
									"end": 5365,
									"name": "PUSH",
									"source": 42,
									"value": "0"
								},
								{
									"begin": 5360,
									"end": 5378,
									"name": "DUP1",
									"source": 42
								},
								{
									"begin": 5360,
									"end": 5378,
									"name": "SLOAD",
									"source": 42
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 5360,
									"end": 5378,
									"name": "AND",
									"source": 42
								},
								{
									"begin": 5368,
									"end": 5378,
									"name": "CALLER",
									"source": 42
								},
								{
									"begin": 5360,
									"end": 5378,
									"name": "OR",
									"source": 42
								},
								{
									"begin": 5360,
									"end": 5378,
									"name": "SWAP1",
									"source": 42
								},
								{
									"begin": 5360,
									"end": 5378,
									"name": "SSTORE",
									"source": 42
								},
								{
									"begin": 5267,
									"end": 7153,
									"name": "PUSH #[$]",
									"source": 42,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 5267,
									"end": 7153,
									"name": "DUP1",
									"source": 42
								},
								{
									"begin": 5267,
									"end": 7153,
									"name": "PUSH [$]",
									"source": 42,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 5267,
									"end": 7153,
									"name": "PUSH",
									"source": 42,
									"value": "0"
								},
								{
									"begin": 5267,
									"end": 7153,
									"name": "CODECOPY",
									"source": 42
								},
								{
									"begin": 5267,
									"end": 7153,
									"name": "PUSH",
									"source": 42,
									"value": "0"
								},
								{
									"begin": 5267,
									"end": 7153,
									"name": "RETURN",
									"source": 42
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220743c7c2c1d50081f7f3f6f1a1e93df7b075a63cfc931b296a5864c2289957fb864736f6c63430008180033",
									".code": [
										{
											"begin": 5267,
											"end": 7153,
											"name": "PUSH",
											"source": 42,
											"value": "80"
										},
										{
											"begin": 5267,
											"end": 7153,
											"name": "PUSH",
											"source": 42,
											"value": "40"
										},
										{
											"begin": 5267,
											"end": 7153,
											"name": "MSTORE",
											"source": 42
										},
										{
											"begin": 5267,
											"end": 7153,
											"name": "CALLVALUE",
											"source": 42
										},
										{
											"begin": 5267,
											"end": 7153,
											"name": "DUP1",
											"source": 42
										},
										{
											"begin": 5267,
											"end": 7153,
											"name": "ISZERO",
											"source": 42
										},
										{
											"begin": 5267,
											"end": 7153,
											"name": "PUSH [tag]",
											"source": 42,
											"value": "1"
										},
										{
											"begin": 5267,
											"end": 7153,
											"name": "JUMPI",
											"source": 42
										},
										{
											"begin": 5267,
											"end": 7153,
											"name": "PUSH",
											"source": 42,
											"value": "0"
										},
										{
											"begin": 5267,
											"end": 7153,
											"name": "DUP1",
											"source": 42
										},
										{
											"begin": 5267,
											"end": 7153,
											"name": "REVERT",
											"source": 42
										},
										{
											"begin": 5267,
											"end": 7153,
											"name": "tag",
											"source": 42,
											"value": "1"
										},
										{
											"begin": 5267,
											"end": 7153,
											"name": "JUMPDEST",
											"source": 42
										},
										{
											"begin": 5267,
											"end": 7153,
											"name": "POP",
											"source": 42
										},
										{
											"begin": 5267,
											"end": 7153,
											"name": "PUSH",
											"source": 42,
											"value": "4"
										},
										{
											"begin": 5267,
											"end": 7153,
											"name": "CALLDATASIZE",
											"source": 42
										},
										{
											"begin": 5267,
											"end": 7153,
											"name": "LT",
											"source": 42
										},
										{
											"begin": 5267,
											"end": 7153,
											"name": "PUSH [tag]",
											"source": 42,
											"value": "2"
										},
										{
											"begin": 5267,
											"end": 7153,
											"name": "JUMPI",
											"source": 42
										},
										{
											"begin": 5267,
											"end": 7153,
											"name": "PUSH",
											"source": 42,
											"value": "0"
										},
										{
											"begin": 5267,
											"end": 7153,
											"name": "CALLDATALOAD",
											"source": 42
										},
										{
											"begin": 5267,
											"end": 7153,
											"name": "PUSH",
											"source": 42,
											"value": "E0"
										},
										{
											"begin": 5267,
											"end": 7153,
											"name": "SHR",
											"source": 42
										},
										{
											"begin": 5267,
											"end": 7153,
											"name": "DUP1",
											"source": 42
										},
										{
											"begin": 5267,
											"end": 7153,
											"name": "PUSH",
											"source": 42,
											"value": "8DA5CB5B"
										},
										{
											"begin": 5267,
											"end": 7153,
											"name": "GT",
											"source": 42
										},
										{
											"begin": 5267,
											"end": 7153,
											"name": "PUSH [tag]",
											"source": 42,
											"value": "8"
										},
										{
											"begin": 5267,
											"end": 7153,
											"name": "JUMPI",
											"source": 42
										},
										{
											"begin": 5267,
											"end": 7153,
											"name": "DUP1",
											"source": 42
										},
										{
											"begin": 5267,
											"end": 7153,
											"name": "PUSH",
											"source": 42,
											"value": "8DA5CB5B"
										},
										{
											"begin": 5267,
											"end": 7153,
											"name": "EQ",
											"source": 42
										},
										{
											"begin": 5267,
											"end": 7153,
											"name": "PUSH [tag]",
											"source": 42,
											"value": "5"
										},
										{
											"begin": 5267,
											"end": 7153,
											"name": "JUMPI",
											"source": 42
										},
										{
											"begin": 5267,
											"end": 7153,
											"name": "DUP1",
											"source": 42
										},
										{
											"begin": 5267,
											"end": 7153,
											"name": "PUSH",
											"source": 42,
											"value": "9E97D739"
										},
										{
											"begin": 5267,
											"end": 7153,
											"name": "EQ",
											"source": 42
										},
										{
											"begin": 5267,
											"end": 7153,
											"name": "PUSH [tag]",
											"source": 42,
											"value": "6"
										},
										{
											"begin": 5267,
											"end": 7153,
											"name": "JUMPI",
											"source": 42
										},
										{
											"begin": 5267,
											"end": 7153,
											"name": "DUP1",
											"source": 42
										},
										{
											"begin": 5267,
											"end": 7153,
											"name": "PUSH",
											"source": 42,
											"value": "A67A117B"
										},
										{
											"begin": 5267,
											"end": 7153,
											"name": "EQ",
											"source": 42
										},
										{
											"begin": 5267,
											"end": 7153,
											"name": "PUSH [tag]",
											"source": 42,
											"value": "7"
										},
										{
											"begin": 5267,
											"end": 7153,
											"name": "JUMPI",
											"source": 42
										},
										{
											"begin": 5267,
											"end": 7153,
											"name": "PUSH",
											"source": 42,
											"value": "0"
										},
										{
											"begin": 5267,
											"end": 7153,
											"name": "DUP1",
											"source": 42
										},
										{
											"begin": 5267,
											"end": 7153,
											"name": "REVERT",
											"source": 42
										},
										{
											"begin": 5267,
											"end": 7153,
											"name": "tag",
											"source": 42,
											"value": "8"
										},
										{
											"begin": 5267,
											"end": 7153,
											"name": "JUMPDEST",
											"source": 42
										},
										{
											"begin": 5267,
											"end": 7153,
											"name": "DUP1",
											"source": 42
										},
										{
											"begin": 5267,
											"end": 7153,
											"name": "PUSH",
											"source": 42,
											"value": "13732D79"
										},
										{
											"begin": 5267,
											"end": 7153,
											"name": "EQ",
											"source": 42
										},
										{
											"begin": 5267,
											"end": 7153,
											"name": "PUSH [tag]",
											"source": 42,
											"value": "3"
										},
										{
											"begin": 5267,
											"end": 7153,
											"name": "JUMPI",
											"source": 42
										},
										{
											"begin": 5267,
											"end": 7153,
											"name": "DUP1",
											"source": 42
										},
										{
											"begin": 5267,
											"end": 7153,
											"name": "PUSH",
											"source": 42,
											"value": "7A26DD31"
										},
										{
											"begin": 5267,
											"end": 7153,
											"name": "EQ",
											"source": 42
										},
										{
											"begin": 5267,
											"end": 7153,
											"name": "PUSH [tag]",
											"source": 42,
											"value": "4"
										},
										{
											"begin": 5267,
											"end": 7153,
											"name": "JUMPI",
											"source": 42
										},
										{
											"begin": 5267,
											"end": 7153,
											"name": "tag",
											"source": 42,
											"value": "2"
										},
										{
											"begin": 5267,
											"end": 7153,
											"name": "JUMPDEST",
											"source": 42
										},
										{
											"begin": 5267,
											"end": 7153,
											"name": "PUSH",
											"source": 42,
											"value": "0"
										},
										{
											"begin": 5267,
											"end": 7153,
											"name": "DUP1",
											"source": 42
										},
										{
											"begin": 5267,
											"end": 7153,
											"name": "REVERT",
											"source": 42
										},
										{
											"begin": 6713,
											"end": 6941,
											"name": "tag",
											"source": 42,
											"value": "3"
										},
										{
											"begin": 6713,
											"end": 6941,
											"name": "JUMPDEST",
											"source": 42
										},
										{
											"begin": 6713,
											"end": 6941,
											"name": "PUSH [tag]",
											"source": 42,
											"value": "9"
										},
										{
											"begin": 6713,
											"end": 6941,
											"name": "PUSH [tag]",
											"source": 42,
											"value": "10"
										},
										{
											"begin": 6713,
											"end": 6941,
											"name": "CALLDATASIZE",
											"source": 42
										},
										{
											"begin": 6713,
											"end": 6941,
											"name": "PUSH",
											"source": 42,
											"value": "4"
										},
										{
											"begin": 6713,
											"end": 6941,
											"name": "PUSH [tag]",
											"source": 42,
											"value": "11"
										},
										{
											"begin": 6713,
											"end": 6941,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 42
										},
										{
											"begin": 6713,
											"end": 6941,
											"name": "tag",
											"source": 42,
											"value": "10"
										},
										{
											"begin": 6713,
											"end": 6941,
											"name": "JUMPDEST",
											"source": 42
										},
										{
											"begin": 6713,
											"end": 6941,
											"name": "PUSH [tag]",
											"source": 42,
											"value": "12"
										},
										{
											"begin": 6713,
											"end": 6941,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 42
										},
										{
											"begin": 6713,
											"end": 6941,
											"name": "tag",
											"source": 42,
											"value": "9"
										},
										{
											"begin": 6713,
											"end": 6941,
											"name": "JUMPDEST",
											"source": 42
										},
										{
											"begin": 6713,
											"end": 6941,
											"name": "STOP",
											"source": 42
										},
										{
											"begin": 6947,
											"end": 7151,
											"name": "tag",
											"source": 42,
											"value": "4"
										},
										{
											"begin": 6947,
											"end": 7151,
											"name": "JUMPDEST",
											"source": 42
										},
										{
											"begin": 6947,
											"end": 7151,
											"name": "PUSH [tag]",
											"source": 42,
											"value": "9"
										},
										{
											"begin": 6947,
											"end": 7151,
											"name": "PUSH [tag]",
											"source": 42,
											"value": "14"
										},
										{
											"begin": 6947,
											"end": 7151,
											"name": "CALLDATASIZE",
											"source": 42
										},
										{
											"begin": 6947,
											"end": 7151,
											"name": "PUSH",
											"source": 42,
											"value": "4"
										},
										{
											"begin": 6947,
											"end": 7151,
											"name": "PUSH [tag]",
											"source": 42,
											"value": "15"
										},
										{
											"begin": 6947,
											"end": 7151,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 42
										},
										{
											"begin": 6947,
											"end": 7151,
											"name": "tag",
											"source": 42,
											"value": "14"
										},
										{
											"begin": 6947,
											"end": 7151,
											"name": "JUMPDEST",
											"source": 42
										},
										{
											"begin": 6947,
											"end": 7151,
											"name": "PUSH [tag]",
											"source": 42,
											"value": "16"
										},
										{
											"begin": 6947,
											"end": 7151,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 42
										},
										{
											"begin": 5309,
											"end": 5329,
											"name": "tag",
											"source": 42,
											"value": "5"
										},
										{
											"begin": 5309,
											"end": 5329,
											"name": "JUMPDEST",
											"source": 42
										},
										{
											"begin": 5309,
											"end": 5329,
											"name": "PUSH",
											"source": 42,
											"value": "0"
										},
										{
											"begin": 5309,
											"end": 5329,
											"name": "SLOAD",
											"source": 42
										},
										{
											"begin": 5309,
											"end": 5329,
											"name": "PUSH [tag]",
											"source": 42,
											"value": "17"
										},
										{
											"begin": 5309,
											"end": 5329,
											"name": "SWAP1",
											"source": 42
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5309,
											"end": 5329,
											"name": "AND",
											"source": 42
										},
										{
											"begin": 5309,
											"end": 5329,
											"name": "DUP2",
											"source": 42
										},
										{
											"begin": 5309,
											"end": 5329,
											"name": "JUMP",
											"source": 42
										},
										{
											"begin": 5309,
											"end": 5329,
											"name": "tag",
											"source": 42,
											"value": "17"
										},
										{
											"begin": 5309,
											"end": 5329,
											"name": "JUMPDEST",
											"source": 42
										},
										{
											"begin": 5309,
											"end": 5329,
											"name": "PUSH",
											"source": 42,
											"value": "40"
										},
										{
											"begin": 5309,
											"end": 5329,
											"name": "MLOAD",
											"source": 42
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2367,
											"end": 2422,
											"name": "SWAP1",
											"source": 43
										},
										{
											"begin": 2367,
											"end": 2422,
											"name": "SWAP2",
											"source": 43
										},
										{
											"begin": 2367,
											"end": 2422,
											"name": "AND",
											"source": 43
										},
										{
											"begin": 2349,
											"end": 2423,
											"name": "DUP2",
											"source": 43
										},
										{
											"begin": 2349,
											"end": 2423,
											"name": "MSTORE",
											"source": 43
										},
										{
											"begin": 2337,
											"end": 2339,
											"name": "PUSH",
											"source": 43,
											"value": "20"
										},
										{
											"begin": 2322,
											"end": 2340,
											"name": "ADD",
											"source": 43
										},
										{
											"begin": 5309,
											"end": 5329,
											"name": "PUSH",
											"source": 42,
											"value": "40"
										},
										{
											"begin": 5309,
											"end": 5329,
											"name": "MLOAD",
											"source": 42
										},
										{
											"begin": 5309,
											"end": 5329,
											"name": "DUP1",
											"source": 42
										},
										{
											"begin": 5309,
											"end": 5329,
											"name": "SWAP2",
											"source": 42
										},
										{
											"begin": 5309,
											"end": 5329,
											"name": "SUB",
											"source": 42
										},
										{
											"begin": 5309,
											"end": 5329,
											"name": "SWAP1",
											"source": 42
										},
										{
											"begin": 5309,
											"end": 5329,
											"name": "RETURN",
											"source": 42
										},
										{
											"begin": 5869,
											"end": 6707,
											"name": "tag",
											"source": 42,
											"value": "6"
										},
										{
											"begin": 5869,
											"end": 6707,
											"name": "JUMPDEST",
											"source": 42
										},
										{
											"begin": 5869,
											"end": 6707,
											"name": "PUSH [tag]",
											"source": 42,
											"value": "9"
										},
										{
											"begin": 5869,
											"end": 6707,
											"name": "PUSH [tag]",
											"source": 42,
											"value": "22"
										},
										{
											"begin": 5869,
											"end": 6707,
											"name": "CALLDATASIZE",
											"source": 42
										},
										{
											"begin": 5869,
											"end": 6707,
											"name": "PUSH",
											"source": 42,
											"value": "4"
										},
										{
											"begin": 5869,
											"end": 6707,
											"name": "PUSH [tag]",
											"source": 42,
											"value": "23"
										},
										{
											"begin": 5869,
											"end": 6707,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 42
										},
										{
											"begin": 5869,
											"end": 6707,
											"name": "tag",
											"source": 42,
											"value": "22"
										},
										{
											"begin": 5869,
											"end": 6707,
											"name": "JUMPDEST",
											"source": 42
										},
										{
											"begin": 5869,
											"end": 6707,
											"name": "PUSH [tag]",
											"source": 42,
											"value": "24"
										},
										{
											"begin": 5869,
											"end": 6707,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 42
										},
										{
											"begin": 5391,
											"end": 5863,
											"name": "tag",
											"source": 42,
											"value": "7"
										},
										{
											"begin": 5391,
											"end": 5863,
											"name": "JUMPDEST",
											"source": 42
										},
										{
											"begin": 5391,
											"end": 5863,
											"name": "PUSH [tag]",
											"source": 42,
											"value": "9"
										},
										{
											"begin": 5391,
											"end": 5863,
											"name": "PUSH [tag]",
											"source": 42,
											"value": "26"
										},
										{
											"begin": 5391,
											"end": 5863,
											"name": "CALLDATASIZE",
											"source": 42
										},
										{
											"begin": 5391,
											"end": 5863,
											"name": "PUSH",
											"source": 42,
											"value": "4"
										},
										{
											"begin": 5391,
											"end": 5863,
											"name": "PUSH [tag]",
											"source": 42,
											"value": "27"
										},
										{
											"begin": 5391,
											"end": 5863,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 42
										},
										{
											"begin": 5391,
											"end": 5863,
											"name": "tag",
											"source": 42,
											"value": "26"
										},
										{
											"begin": 5391,
											"end": 5863,
											"name": "JUMPDEST",
											"source": 42
										},
										{
											"begin": 5391,
											"end": 5863,
											"name": "PUSH [tag]",
											"source": 42,
											"value": "28"
										},
										{
											"begin": 5391,
											"end": 5863,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 42
										},
										{
											"begin": 6713,
											"end": 6941,
											"name": "tag",
											"source": 42,
											"value": "12"
										},
										{
											"begin": 6713,
											"end": 6941,
											"name": "JUMPDEST",
											"source": 42
										},
										{
											"begin": 6909,
											"end": 6921,
											"name": "DUP2",
											"source": 42
										},
										{
											"begin": 6876,
											"end": 6934,
											"name": "PUSH",
											"source": 42,
											"value": "DBBC48772584850C2086F66C22A3654C9E46524FF539FD9D72198D91CB7C13C0"
										},
										{
											"begin": 6891,
											"end": 6907,
											"name": "DUP5",
											"source": 42
										},
										{
											"begin": 6923,
											"end": 6933,
											"name": "DUP4",
											"source": 42
										},
										{
											"begin": 6876,
											"end": 6934,
											"name": "PUSH",
											"source": 42,
											"value": "40"
										},
										{
											"begin": 6876,
											"end": 6934,
											"name": "MLOAD",
											"source": 42
										},
										{
											"begin": 6876,
											"end": 6934,
											"name": "PUSH [tag]",
											"source": 42,
											"value": "30"
										},
										{
											"begin": 6876,
											"end": 6934,
											"name": "SWAP3",
											"source": 42
										},
										{
											"begin": 6876,
											"end": 6934,
											"name": "SWAP2",
											"source": 42
										},
										{
											"begin": 6876,
											"end": 6934,
											"name": "SWAP1",
											"source": 42
										},
										{
											"begin": 6876,
											"end": 6934,
											"name": "PUSH [tag]",
											"source": 42,
											"value": "31"
										},
										{
											"begin": 6876,
											"end": 6934,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 42
										},
										{
											"begin": 6876,
											"end": 6934,
											"name": "tag",
											"source": 42,
											"value": "30"
										},
										{
											"begin": 6876,
											"end": 6934,
											"name": "JUMPDEST",
											"source": 42
										},
										{
											"begin": 6876,
											"end": 6934,
											"name": "PUSH",
											"source": 42,
											"value": "40"
										},
										{
											"begin": 6876,
											"end": 6934,
											"name": "MLOAD",
											"source": 42
										},
										{
											"begin": 6876,
											"end": 6934,
											"name": "DUP1",
											"source": 42
										},
										{
											"begin": 6876,
											"end": 6934,
											"name": "SWAP2",
											"source": 42
										},
										{
											"begin": 6876,
											"end": 6934,
											"name": "SUB",
											"source": 42
										},
										{
											"begin": 6876,
											"end": 6934,
											"name": "SWAP1",
											"source": 42
										},
										{
											"begin": 6876,
											"end": 6934,
											"name": "LOG2",
											"source": 42
										},
										{
											"begin": 6713,
											"end": 6941,
											"name": "POP",
											"source": 42
										},
										{
											"begin": 6713,
											"end": 6941,
											"name": "POP",
											"source": 42
										},
										{
											"begin": 6713,
											"end": 6941,
											"name": "POP",
											"source": 42
										},
										{
											"begin": 6713,
											"end": 6941,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 42
										},
										{
											"begin": 6947,
											"end": 7151,
											"name": "tag",
											"source": 42,
											"value": "16"
										},
										{
											"begin": 6947,
											"end": 7151,
											"name": "JUMPDEST",
											"source": 42
										},
										{
											"begin": 7091,
											"end": 7144,
											"name": "PUSH",
											"source": 42,
											"value": "40"
										},
										{
											"begin": 7091,
											"end": 7144,
											"name": "DUP1",
											"source": 42
										},
										{
											"begin": 7091,
											"end": 7144,
											"name": "MLOAD",
											"source": 42
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5067,
											"end": 5122,
											"name": "DUP6",
											"source": 43
										},
										{
											"begin": 5067,
											"end": 5122,
											"name": "AND",
											"source": 43
										},
										{
											"begin": 5049,
											"end": 5123,
											"name": "DUP2",
											"source": 43
										},
										{
											"begin": 5049,
											"end": 5123,
											"name": "MSTORE",
											"source": 43
										},
										{
											"begin": 5154,
											"end": 5156,
											"name": "PUSH",
											"source": 43,
											"value": "20"
										},
										{
											"begin": 5139,
											"end": 5157,
											"name": "DUP2",
											"source": 43
										},
										{
											"begin": 5139,
											"end": 5157,
											"name": "ADD",
											"source": 43
										},
										{
											"begin": 5132,
											"end": 5166,
											"name": "DUP4",
											"source": 43
										},
										{
											"begin": 5132,
											"end": 5166,
											"name": "SWAP1",
											"source": 43
										},
										{
											"begin": 5132,
											"end": 5166,
											"name": "MSTORE",
											"source": 43
										},
										{
											"begin": 7117,
											"end": 7129,
											"name": "DUP4",
											"source": 42
										},
										{
											"begin": 7117,
											"end": 7129,
											"name": "SWAP2",
											"source": 42
										},
										{
											"begin": 7091,
											"end": 7144,
											"name": "PUSH",
											"source": 42,
											"value": "CB87DF07B1C304492BD875A5C8B98672ECA500939412809EA229AFEF1D745188"
										},
										{
											"begin": 7091,
											"end": 7144,
											"name": "SWAP2",
											"source": 42
										},
										{
											"begin": 5022,
											"end": 5040,
											"name": "ADD",
											"source": 43
										},
										{
											"begin": 7091,
											"end": 7144,
											"name": "PUSH [tag]",
											"source": 42,
											"value": "30"
										},
										{
											"begin": 4875,
											"end": 5172,
											"name": "JUMP",
											"source": 43
										},
										{
											"begin": 5869,
											"end": 6707,
											"name": "tag",
											"source": 42,
											"value": "24"
										},
										{
											"begin": 5869,
											"end": 6707,
											"name": "JUMPDEST",
											"source": 42
										},
										{
											"begin": 6017,
											"end": 6026,
											"name": "PUSH",
											"source": 42,
											"value": "0"
										},
										{
											"begin": 6012,
											"end": 6701,
											"name": "tag",
											"source": 42,
											"value": "36"
										},
										{
											"begin": 6012,
											"end": 6701,
											"name": "JUMPDEST",
											"source": 42
										},
										{
											"begin": 6028,
											"end": 6050,
											"name": "DUP5",
											"source": 42
										},
										{
											"begin": 6028,
											"end": 6050,
											"name": "DUP2",
											"source": 42
										},
										{
											"begin": 6028,
											"end": 6050,
											"name": "LT",
											"source": 42
										},
										{
											"begin": 6012,
											"end": 6701,
											"name": "ISZERO",
											"source": 42
										},
										{
											"begin": 6012,
											"end": 6701,
											"name": "PUSH [tag]",
											"source": 42,
											"value": "37"
										},
										{
											"begin": 6012,
											"end": 6701,
											"name": "JUMPI",
											"source": 42
										},
										{
											"begin": 6114,
											"end": 6115,
											"name": "PUSH",
											"source": 42,
											"value": "0"
										},
										{
											"begin": 6075,
											"end": 6086,
											"name": "DUP7",
											"source": 42
										},
										{
											"begin": 6075,
											"end": 6086,
											"name": "DUP7",
											"source": 42
										},
										{
											"begin": 6087,
											"end": 6088,
											"name": "DUP4",
											"source": 42
										},
										{
											"begin": 6075,
											"end": 6089,
											"name": "DUP2",
											"source": 42
										},
										{
											"begin": 6075,
											"end": 6089,
											"name": "DUP2",
											"source": 42
										},
										{
											"begin": 6075,
											"end": 6089,
											"name": "LT",
											"source": 42
										},
										{
											"begin": 6075,
											"end": 6089,
											"name": "PUSH [tag]",
											"source": 42,
											"value": "40"
										},
										{
											"begin": 6075,
											"end": 6089,
											"name": "JUMPI",
											"source": 42
										},
										{
											"begin": 6075,
											"end": 6089,
											"name": "PUSH [tag]",
											"source": 42,
											"value": "40"
										},
										{
											"begin": 6075,
											"end": 6089,
											"name": "PUSH [tag]",
											"source": 42,
											"value": "41"
										},
										{
											"begin": 6075,
											"end": 6089,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 42
										},
										{
											"begin": 6075,
											"end": 6089,
											"name": "tag",
											"source": 42,
											"value": "40"
										},
										{
											"begin": 6075,
											"end": 6089,
											"name": "JUMPDEST",
											"source": 42
										},
										{
											"begin": 6075,
											"end": 6102,
											"name": "PUSH [tag]",
											"source": 42,
											"value": "42"
										},
										{
											"begin": 6075,
											"end": 6102,
											"name": "SWAP3",
											"source": 42
										},
										{
											"begin": 6075,
											"end": 6102,
											"name": "PUSH",
											"source": 42,
											"value": "20"
										},
										{
											"begin": 6075,
											"end": 6089,
											"name": "PUSH",
											"source": 42,
											"value": "60"
										},
										{
											"begin": 6075,
											"end": 6089,
											"name": "SWAP1",
											"source": 42
										},
										{
											"begin": 6075,
											"end": 6089,
											"name": "SWAP3",
											"source": 42
										},
										{
											"begin": 6075,
											"end": 6089,
											"name": "MUL",
											"source": 42
										},
										{
											"begin": 6075,
											"end": 6089,
											"name": "ADD",
											"source": 42
										},
										{
											"begin": 6075,
											"end": 6102,
											"name": "SWAP1",
											"source": 42
										},
										{
											"begin": 6075,
											"end": 6102,
											"name": "DUP2",
											"source": 42
										},
										{
											"begin": 6075,
											"end": 6102,
											"name": "ADD",
											"source": 42
										},
										{
											"begin": 6075,
											"end": 6102,
											"name": "SWAP2",
											"source": 42
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6075,
											"end": 6102,
											"name": "PUSH [tag]",
											"source": 42,
											"value": "27"
										},
										{
											"begin": 6075,
											"end": 6102,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 42
										},
										{
											"begin": 6075,
											"end": 6102,
											"name": "tag",
											"source": 42,
											"value": "42"
										},
										{
											"begin": 6075,
											"end": 6102,
											"name": "JUMPDEST",
											"source": 42
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6075,
											"end": 6116,
											"name": "AND",
											"source": 42
										},
										{
											"begin": 6075,
											"end": 6116,
											"name": "SUB",
											"source": 42
										},
										{
											"begin": 6071,
											"end": 6691,
											"name": "PUSH [tag]",
											"source": 42,
											"value": "43"
										},
										{
											"begin": 6071,
											"end": 6691,
											"name": "JUMPI",
											"source": 42
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6144,
											"end": 6163,
											"name": "DUP5",
											"source": 42
										},
										{
											"begin": 6144,
											"end": 6163,
											"name": "AND",
											"source": 42
										},
										{
											"begin": 6136,
											"end": 6194,
											"name": "PUSH [tag]",
											"source": 42,
											"value": "44"
										},
										{
											"begin": 6136,
											"end": 6194,
											"name": "JUMPI",
											"source": 42
										},
										{
											"begin": 6136,
											"end": 6194,
											"name": "PUSH",
											"source": 42,
											"value": "40"
										},
										{
											"begin": 6136,
											"end": 6194,
											"name": "MLOAD",
											"source": 42
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6136,
											"end": 6194,
											"name": "DUP2",
											"source": 42
										},
										{
											"begin": 6136,
											"end": 6194,
											"name": "MSTORE",
											"source": 42
										},
										{
											"begin": 5568,
											"end": 5570,
											"name": "PUSH",
											"source": 43,
											"value": "20"
										},
										{
											"begin": 6136,
											"end": 6194,
											"name": "PUSH",
											"source": 42,
											"value": "4"
										},
										{
											"begin": 6136,
											"end": 6194,
											"name": "DUP3",
											"source": 42
										},
										{
											"begin": 6136,
											"end": 6194,
											"name": "ADD",
											"source": 42
										},
										{
											"begin": 5550,
											"end": 5571,
											"name": "MSTORE",
											"source": 43
										},
										{
											"begin": 5607,
											"end": 5609,
											"name": "PUSH",
											"source": 43,
											"value": "1A"
										},
										{
											"begin": 5587,
											"end": 5605,
											"name": "PUSH",
											"source": 43,
											"value": "24"
										},
										{
											"begin": 5587,
											"end": 5605,
											"name": "DUP3",
											"source": 43
										},
										{
											"begin": 5587,
											"end": 5605,
											"name": "ADD",
											"source": 43
										},
										{
											"begin": 5580,
											"end": 5610,
											"name": "MSTORE",
											"source": 43
										},
										{
											"begin": 5646,
											"end": 5674,
											"name": "PUSH",
											"source": 43,
											"value": "496E76616C696420696E697469616C697A652061646472657373000000000000"
										},
										{
											"begin": 5626,
											"end": 5644,
											"name": "PUSH",
											"source": 43,
											"value": "44"
										},
										{
											"begin": 5626,
											"end": 5644,
											"name": "DUP3",
											"source": 43
										},
										{
											"begin": 5626,
											"end": 5644,
											"name": "ADD",
											"source": 43
										},
										{
											"begin": 5619,
											"end": 5675,
											"name": "MSTORE",
											"source": 43
										},
										{
											"begin": 5692,
											"end": 5710,
											"name": "PUSH",
											"source": 43,
											"value": "64"
										},
										{
											"begin": 5692,
											"end": 5710,
											"name": "ADD",
											"source": 43
										},
										{
											"begin": 6136,
											"end": 6194,
											"name": "tag",
											"source": 42,
											"value": "45"
										},
										{
											"begin": 6136,
											"end": 6194,
											"name": "JUMPDEST",
											"source": 42
										},
										{
											"begin": 6136,
											"end": 6194,
											"name": "PUSH",
											"source": 42,
											"value": "40"
										},
										{
											"begin": 6136,
											"end": 6194,
											"name": "MLOAD",
											"source": 42
										},
										{
											"begin": 6136,
											"end": 6194,
											"name": "DUP1",
											"source": 42
										},
										{
											"begin": 6136,
											"end": 6194,
											"name": "SWAP2",
											"source": 42
										},
										{
											"begin": 6136,
											"end": 6194,
											"name": "SUB",
											"source": 42
										},
										{
											"begin": 6136,
											"end": 6194,
											"name": "SWAP1",
											"source": 42
										},
										{
											"begin": 6136,
											"end": 6194,
											"name": "REVERT",
											"source": 42
										},
										{
											"begin": 6136,
											"end": 6194,
											"name": "tag",
											"source": 42,
											"value": "44"
										},
										{
											"begin": 6136,
											"end": 6194,
											"name": "JUMPDEST",
											"source": 42
										},
										{
											"begin": 6212,
											"end": 6217,
											"name": "DUP4",
											"source": 42
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6212,
											"end": 6230,
											"name": "AND",
											"source": 42
										},
										{
											"begin": 6231,
											"end": 6240,
											"name": "DUP4",
											"source": 42
										},
										{
											"begin": 6231,
											"end": 6240,
											"name": "DUP4",
											"source": 42
										},
										{
											"begin": 6212,
											"end": 6241,
											"name": "PUSH",
											"source": 42,
											"value": "40"
										},
										{
											"begin": 6212,
											"end": 6241,
											"name": "MLOAD",
											"source": 42
										},
										{
											"begin": 6212,
											"end": 6241,
											"name": "PUSH [tag]",
											"source": 42,
											"value": "47"
										},
										{
											"begin": 6212,
											"end": 6241,
											"name": "SWAP3",
											"source": 42
										},
										{
											"begin": 6212,
											"end": 6241,
											"name": "SWAP2",
											"source": 42
										},
										{
											"begin": 6212,
											"end": 6241,
											"name": "SWAP1",
											"source": 42
										},
										{
											"begin": 6212,
											"end": 6241,
											"name": "PUSH [tag]",
											"source": 42,
											"value": "48"
										},
										{
											"begin": 6212,
											"end": 6241,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 42
										},
										{
											"begin": 6212,
											"end": 6241,
											"name": "tag",
											"source": 42,
											"value": "47"
										},
										{
											"begin": 6212,
											"end": 6241,
											"name": "JUMPDEST",
											"source": 42
										},
										{
											"begin": 6212,
											"end": 6241,
											"name": "PUSH",
											"source": 42,
											"value": "0"
										},
										{
											"begin": 6212,
											"end": 6241,
											"name": "PUSH",
											"source": 42,
											"value": "40"
										},
										{
											"begin": 6212,
											"end": 6241,
											"name": "MLOAD",
											"source": 42
										},
										{
											"begin": 6212,
											"end": 6241,
											"name": "DUP1",
											"source": 42
										},
										{
											"begin": 6212,
											"end": 6241,
											"name": "DUP4",
											"source": 42
										},
										{
											"begin": 6212,
											"end": 6241,
											"name": "SUB",
											"source": 42
										},
										{
											"begin": 6212,
											"end": 6241,
											"name": "DUP2",
											"source": 42
										},
										{
											"begin": 6212,
											"end": 6241,
											"name": "DUP6",
											"source": 42
										},
										{
											"begin": 6212,
											"end": 6241,
											"name": "GAS",
											"source": 42
										},
										{
											"begin": 6212,
											"end": 6241,
											"name": "DELEGATECALL",
											"source": 42
										},
										{
											"begin": 6212,
											"end": 6241,
											"name": "SWAP2",
											"source": 42
										},
										{
											"begin": 6212,
											"end": 6241,
											"name": "POP",
											"source": 42
										},
										{
											"begin": 6212,
											"end": 6241,
											"name": "POP",
											"source": 42
										},
										{
											"begin": 6212,
											"end": 6241,
											"name": "RETURNDATASIZE",
											"source": 42
										},
										{
											"begin": 6212,
											"end": 6241,
											"name": "DUP1",
											"source": 42
										},
										{
											"begin": 6212,
											"end": 6241,
											"name": "PUSH",
											"source": 42,
											"value": "0"
										},
										{
											"begin": 6212,
											"end": 6241,
											"name": "DUP2",
											"source": 42
										},
										{
											"begin": 6212,
											"end": 6241,
											"name": "EQ",
											"source": 42
										},
										{
											"begin": 6212,
											"end": 6241,
											"name": "PUSH [tag]",
											"source": 42,
											"value": "51"
										},
										{
											"begin": 6212,
											"end": 6241,
											"name": "JUMPI",
											"source": 42
										},
										{
											"begin": 6212,
											"end": 6241,
											"name": "PUSH",
											"source": 42,
											"value": "40"
										},
										{
											"begin": 6212,
											"end": 6241,
											"name": "MLOAD",
											"source": 42
										},
										{
											"begin": 6212,
											"end": 6241,
											"name": "SWAP2",
											"source": 42
										},
										{
											"begin": 6212,
											"end": 6241,
											"name": "POP",
											"source": 42
										},
										{
											"begin": 6212,
											"end": 6241,
											"name": "PUSH",
											"source": 42,
											"value": "1F"
										},
										{
											"begin": 6212,
											"end": 6241,
											"name": "NOT",
											"source": 42
										},
										{
											"begin": 6212,
											"end": 6241,
											"name": "PUSH",
											"source": 42,
											"value": "3F"
										},
										{
											"begin": 6212,
											"end": 6241,
											"name": "RETURNDATASIZE",
											"source": 42
										},
										{
											"begin": 6212,
											"end": 6241,
											"name": "ADD",
											"source": 42
										},
										{
											"begin": 6212,
											"end": 6241,
											"name": "AND",
											"source": 42
										},
										{
											"begin": 6212,
											"end": 6241,
											"name": "DUP3",
											"source": 42
										},
										{
											"begin": 6212,
											"end": 6241,
											"name": "ADD",
											"source": 42
										},
										{
											"begin": 6212,
											"end": 6241,
											"name": "PUSH",
											"source": 42,
											"value": "40"
										},
										{
											"begin": 6212,
											"end": 6241,
											"name": "MSTORE",
											"source": 42
										},
										{
											"begin": 6212,
											"end": 6241,
											"name": "RETURNDATASIZE",
											"source": 42
										},
										{
											"begin": 6212,
											"end": 6241,
											"name": "DUP3",
											"source": 42
										},
										{
											"begin": 6212,
											"end": 6241,
											"name": "MSTORE",
											"source": 42
										},
										{
											"begin": 6212,
											"end": 6241,
											"name": "RETURNDATASIZE",
											"source": 42
										},
										{
											"begin": 6212,
											"end": 6241,
											"name": "PUSH",
											"source": 42,
											"value": "0"
										},
										{
											"begin": 6212,
											"end": 6241,
											"name": "PUSH",
											"source": 42,
											"value": "20"
										},
										{
											"begin": 6212,
											"end": 6241,
											"name": "DUP5",
											"source": 42
										},
										{
											"begin": 6212,
											"end": 6241,
											"name": "ADD",
											"source": 42
										},
										{
											"begin": 6212,
											"end": 6241,
											"name": "RETURNDATACOPY",
											"source": 42
										},
										{
											"begin": 6212,
											"end": 6241,
											"name": "PUSH [tag]",
											"source": 42,
											"value": "50"
										},
										{
											"begin": 6212,
											"end": 6241,
											"name": "JUMP",
											"source": 42
										},
										{
											"begin": 6212,
											"end": 6241,
											"name": "tag",
											"source": 42,
											"value": "51"
										},
										{
											"begin": 6212,
											"end": 6241,
											"name": "JUMPDEST",
											"source": 42
										},
										{
											"begin": 6212,
											"end": 6241,
											"name": "PUSH",
											"source": 42,
											"value": "60"
										},
										{
											"begin": 6212,
											"end": 6241,
											"name": "SWAP2",
											"source": 42
										},
										{
											"begin": 6212,
											"end": 6241,
											"name": "POP",
											"source": 42
										},
										{
											"begin": 6212,
											"end": 6241,
											"name": "tag",
											"source": 42,
											"value": "50"
										},
										{
											"begin": 6212,
											"end": 6241,
											"name": "JUMPDEST",
											"source": 42
										},
										{
											"begin": 6212,
											"end": 6241,
											"name": "POP",
											"source": 42
										},
										{
											"begin": 6212,
											"end": 6241,
											"name": "POP",
											"source": 42
										},
										{
											"begin": 6212,
											"end": 6241,
											"name": "POP",
											"source": 42
										},
										{
											"begin": 6071,
											"end": 6691,
											"name": "PUSH [tag]",
											"source": 42,
											"value": "52"
										},
										{
											"begin": 6071,
											"end": 6691,
											"name": "JUMP",
											"source": 42
										},
										{
											"begin": 6071,
											"end": 6691,
											"name": "tag",
											"source": 42,
											"value": "43"
										},
										{
											"begin": 6071,
											"end": 6691,
											"name": "JUMPDEST",
											"source": 42
										},
										{
											"begin": 6281,
											"end": 6293,
											"name": "PUSH",
											"source": 42,
											"value": "0"
										},
										{
											"begin": 6299,
											"end": 6310,
											"name": "DUP7",
											"source": 42
										},
										{
											"begin": 6299,
											"end": 6310,
											"name": "DUP7",
											"source": 42
										},
										{
											"begin": 6311,
											"end": 6312,
											"name": "DUP4",
											"source": 42
										},
										{
											"begin": 6299,
											"end": 6313,
											"name": "DUP2",
											"source": 42
										},
										{
											"begin": 6299,
											"end": 6313,
											"name": "DUP2",
											"source": 42
										},
										{
											"begin": 6299,
											"end": 6313,
											"name": "LT",
											"source": 42
										},
										{
											"begin": 6299,
											"end": 6313,
											"name": "PUSH [tag]",
											"source": 42,
											"value": "54"
										},
										{
											"begin": 6299,
											"end": 6313,
											"name": "JUMPI",
											"source": 42
										},
										{
											"begin": 6299,
											"end": 6313,
											"name": "PUSH [tag]",
											"source": 42,
											"value": "54"
										},
										{
											"begin": 6299,
											"end": 6313,
											"name": "PUSH [tag]",
											"source": 42,
											"value": "41"
										},
										{
											"begin": 6299,
											"end": 6313,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 42
										},
										{
											"begin": 6299,
											"end": 6313,
											"name": "tag",
											"source": 42,
											"value": "54"
										},
										{
											"begin": 6299,
											"end": 6313,
											"name": "JUMPDEST",
											"source": 42
										},
										{
											"begin": 6299,
											"end": 6326,
											"name": "PUSH [tag]",
											"source": 42,
											"value": "55"
										},
										{
											"begin": 6299,
											"end": 6326,
											"name": "SWAP3",
											"source": 42
										},
										{
											"begin": 6299,
											"end": 6326,
											"name": "PUSH",
											"source": 42,
											"value": "20"
										},
										{
											"begin": 6299,
											"end": 6313,
											"name": "PUSH",
											"source": 42,
											"value": "60"
										},
										{
											"begin": 6299,
											"end": 6313,
											"name": "SWAP1",
											"source": 42
										},
										{
											"begin": 6299,
											"end": 6313,
											"name": "SWAP3",
											"source": 42
										},
										{
											"begin": 6299,
											"end": 6313,
											"name": "MUL",
											"source": 42
										},
										{
											"begin": 6299,
											"end": 6313,
											"name": "ADD",
											"source": 42
										},
										{
											"begin": 6299,
											"end": 6326,
											"name": "SWAP1",
											"source": 42
										},
										{
											"begin": 6299,
											"end": 6326,
											"name": "DUP2",
											"source": 42
										},
										{
											"begin": 6299,
											"end": 6326,
											"name": "ADD",
											"source": 42
										},
										{
											"begin": 6299,
											"end": 6326,
											"name": "SWAP2",
											"source": 42
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6299,
											"end": 6326,
											"name": "PUSH [tag]",
											"source": 42,
											"value": "27"
										},
										{
											"begin": 6299,
											"end": 6326,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 42
										},
										{
											"begin": 6299,
											"end": 6326,
											"name": "tag",
											"source": 42,
											"value": "55"
										},
										{
											"begin": 6299,
											"end": 6326,
											"name": "JUMPDEST",
											"source": 42
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6299,
											"end": 6339,
											"name": "AND",
											"source": 42
										},
										{
											"begin": 6403,
											"end": 6414,
											"name": "DUP8",
											"source": 42
										},
										{
											"begin": 6403,
											"end": 6414,
											"name": "DUP8",
											"source": 42
										},
										{
											"begin": 6415,
											"end": 6416,
											"name": "DUP5",
											"source": 42
										},
										{
											"begin": 6403,
											"end": 6417,
											"name": "DUP2",
											"source": 42
										},
										{
											"begin": 6403,
											"end": 6417,
											"name": "DUP2",
											"source": 42
										},
										{
											"begin": 6403,
											"end": 6417,
											"name": "LT",
											"source": 42
										},
										{
											"begin": 6403,
											"end": 6417,
											"name": "PUSH [tag]",
											"source": 42,
											"value": "57"
										},
										{
											"begin": 6403,
											"end": 6417,
											"name": "JUMPI",
											"source": 42
										},
										{
											"begin": 6403,
											"end": 6417,
											"name": "PUSH [tag]",
											"source": 42,
											"value": "57"
										},
										{
											"begin": 6403,
											"end": 6417,
											"name": "PUSH [tag]",
											"source": 42,
											"value": "41"
										},
										{
											"begin": 6403,
											"end": 6417,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 42
										},
										{
											"begin": 6403,
											"end": 6417,
											"name": "tag",
											"source": 42,
											"value": "57"
										},
										{
											"begin": 6403,
											"end": 6417,
											"name": "JUMPDEST",
											"source": 42
										},
										{
											"begin": 6403,
											"end": 6417,
											"name": "SWAP1",
											"source": 42
										},
										{
											"begin": 6403,
											"end": 6417,
											"name": "POP",
											"source": 42
										},
										{
											"begin": 6403,
											"end": 6417,
											"name": "PUSH",
											"source": 42,
											"value": "60"
										},
										{
											"begin": 6403,
											"end": 6417,
											"name": "MUL",
											"source": 42
										},
										{
											"begin": 6403,
											"end": 6417,
											"name": "ADD",
											"source": 42
										},
										{
											"begin": 6403,
											"end": 6434,
											"name": "PUSH",
											"source": 42,
											"value": "40"
										},
										{
											"begin": 6403,
											"end": 6434,
											"name": "ADD",
											"source": 42
										},
										{
											"begin": 6403,
											"end": 6434,
											"name": "PUSH",
											"source": 42,
											"value": "20"
										},
										{
											"begin": 6403,
											"end": 6434,
											"name": "DUP2",
											"source": 42
										},
										{
											"begin": 6403,
											"end": 6434,
											"name": "ADD",
											"source": 42
										},
										{
											"begin": 6403,
											"end": 6434,
											"name": "SWAP1",
											"source": 42
										},
										{
											"begin": 6403,
											"end": 6434,
											"name": "PUSH [tag]",
											"source": 42,
											"value": "58"
										},
										{
											"begin": 6403,
											"end": 6434,
											"name": "SWAP2",
											"source": 42
										},
										{
											"begin": 6403,
											"end": 6434,
											"name": "SWAP1",
											"source": 42
										},
										{
											"begin": 6403,
											"end": 6434,
											"name": "PUSH [tag]",
											"source": 42,
											"value": "59"
										},
										{
											"begin": 6403,
											"end": 6434,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 42
										},
										{
											"begin": 6403,
											"end": 6434,
											"name": "tag",
											"source": 42,
											"value": "58"
										},
										{
											"begin": 6403,
											"end": 6434,
											"name": "JUMPDEST",
											"source": 42
										},
										{
											"begin": 6471,
											"end": 6482,
											"name": "DUP9",
											"source": 42
										},
										{
											"begin": 6471,
											"end": 6482,
											"name": "DUP9",
											"source": 42
										},
										{
											"begin": 6483,
											"end": 6484,
											"name": "DUP6",
											"source": 42
										},
										{
											"begin": 6471,
											"end": 6485,
											"name": "DUP2",
											"source": 42
										},
										{
											"begin": 6471,
											"end": 6485,
											"name": "DUP2",
											"source": 42
										},
										{
											"begin": 6471,
											"end": 6485,
											"name": "LT",
											"source": 42
										},
										{
											"begin": 6471,
											"end": 6485,
											"name": "PUSH [tag]",
											"source": 42,
											"value": "61"
										},
										{
											"begin": 6471,
											"end": 6485,
											"name": "JUMPI",
											"source": 42
										},
										{
											"begin": 6471,
											"end": 6485,
											"name": "PUSH [tag]",
											"source": 42,
											"value": "61"
										},
										{
											"begin": 6471,
											"end": 6485,
											"name": "PUSH [tag]",
											"source": 42,
											"value": "41"
										},
										{
											"begin": 6471,
											"end": 6485,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 42
										},
										{
											"begin": 6471,
											"end": 6485,
											"name": "tag",
											"source": 42,
											"value": "61"
										},
										{
											"begin": 6471,
											"end": 6485,
											"name": "JUMPDEST",
											"source": 42
										},
										{
											"begin": 6471,
											"end": 6485,
											"name": "SWAP1",
											"source": 42
										},
										{
											"begin": 6471,
											"end": 6485,
											"name": "POP",
											"source": 42
										},
										{
											"begin": 6471,
											"end": 6485,
											"name": "PUSH",
											"source": 42,
											"value": "60"
										},
										{
											"begin": 6471,
											"end": 6485,
											"name": "MUL",
											"source": 42
										},
										{
											"begin": 6471,
											"end": 6485,
											"name": "ADD",
											"source": 42
										},
										{
											"begin": 6495,
											"end": 6496,
											"name": "PUSH",
											"source": 42,
											"value": "0"
										},
										{
											"begin": 6499,
											"end": 6508,
											"name": "DUP8",
											"source": 42
										},
										{
											"begin": 6499,
											"end": 6508,
											"name": "DUP8",
											"source": 42
										},
										{
											"begin": 6460,
											"end": 6509,
											"name": "PUSH",
											"source": 42,
											"value": "40"
										},
										{
											"begin": 6460,
											"end": 6509,
											"name": "MLOAD",
											"source": 42
										},
										{
											"begin": 6460,
											"end": 6509,
											"name": "PUSH",
											"source": 42,
											"value": "20"
										},
										{
											"begin": 6460,
											"end": 6509,
											"name": "ADD",
											"source": 42
										},
										{
											"begin": 6460,
											"end": 6509,
											"name": "PUSH [tag]",
											"source": 42,
											"value": "62"
										},
										{
											"begin": 6460,
											"end": 6509,
											"name": "SWAP5",
											"source": 42
										},
										{
											"begin": 6460,
											"end": 6509,
											"name": "SWAP4",
											"source": 42
										},
										{
											"begin": 6460,
											"end": 6509,
											"name": "SWAP3",
											"source": 42
										},
										{
											"begin": 6460,
											"end": 6509,
											"name": "SWAP2",
											"source": 42
										},
										{
											"begin": 6460,
											"end": 6509,
											"name": "SWAP1",
											"source": 42
										},
										{
											"begin": 6460,
											"end": 6509,
											"name": "PUSH [tag]",
											"source": 42,
											"value": "63"
										},
										{
											"begin": 6460,
											"end": 6509,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 42
										},
										{
											"begin": 6460,
											"end": 6509,
											"name": "tag",
											"source": 42,
											"value": "62"
										},
										{
											"begin": 6460,
											"end": 6509,
											"name": "JUMPDEST",
											"source": 42
										},
										{
											"begin": 6460,
											"end": 6509,
											"name": "PUSH",
											"source": 42,
											"value": "40"
										},
										{
											"begin": 6460,
											"end": 6509,
											"name": "DUP1",
											"source": 42
										},
										{
											"begin": 6460,
											"end": 6509,
											"name": "MLOAD",
											"source": 42
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 6460,
											"end": 6509,
											"name": "DUP2",
											"source": 42
										},
										{
											"begin": 6460,
											"end": 6509,
											"name": "DUP5",
											"source": 42
										},
										{
											"begin": 6460,
											"end": 6509,
											"name": "SUB",
											"source": 42
										},
										{
											"begin": 6460,
											"end": 6509,
											"name": "ADD",
											"source": 42
										},
										{
											"begin": 6460,
											"end": 6509,
											"name": "DUP2",
											"source": 42
										},
										{
											"begin": 6460,
											"end": 6509,
											"name": "MSTORE",
											"source": 42
										},
										{
											"begin": 6460,
											"end": 6509,
											"name": "SWAP1",
											"source": 42
										},
										{
											"begin": 6460,
											"end": 6509,
											"name": "DUP3",
											"source": 42
										},
										{
											"begin": 6460,
											"end": 6509,
											"name": "SWAP1",
											"source": 42
										},
										{
											"begin": 6460,
											"end": 6509,
											"name": "MSTORE",
											"source": 42
										},
										{
											"begin": 6361,
											"end": 6531,
											"name": "PUSH [tag]",
											"source": 42,
											"value": "64"
										},
										{
											"begin": 6361,
											"end": 6531,
											"name": "SWAP3",
											"source": 42
										},
										{
											"begin": 6361,
											"end": 6531,
											"name": "SWAP2",
											"source": 42
										},
										{
											"begin": 6460,
											"end": 6509,
											"name": "PUSH",
											"source": 42,
											"value": "20"
										},
										{
											"begin": 6361,
											"end": 6531,
											"name": "ADD",
											"source": 42
										},
										{
											"begin": 6361,
											"end": 6531,
											"name": "PUSH [tag]",
											"source": 42,
											"value": "65"
										},
										{
											"begin": 6361,
											"end": 6531,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 42
										},
										{
											"begin": 6361,
											"end": 6531,
											"name": "tag",
											"source": 42,
											"value": "64"
										},
										{
											"begin": 6361,
											"end": 6531,
											"name": "JUMPDEST",
											"source": 42
										},
										{
											"begin": 6361,
											"end": 6531,
											"name": "PUSH",
											"source": 42,
											"value": "40"
										},
										{
											"begin": 6361,
											"end": 6531,
											"name": "DUP1",
											"source": 42
										},
										{
											"begin": 6361,
											"end": 6531,
											"name": "MLOAD",
											"source": 42
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 6361,
											"end": 6531,
											"name": "DUP2",
											"source": 42
										},
										{
											"begin": 6361,
											"end": 6531,
											"name": "DUP5",
											"source": 42
										},
										{
											"begin": 6361,
											"end": 6531,
											"name": "SUB",
											"source": 42
										},
										{
											"begin": 6361,
											"end": 6531,
											"name": "ADD",
											"source": 42
										},
										{
											"begin": 6361,
											"end": 6531,
											"name": "DUP2",
											"source": 42
										},
										{
											"begin": 6361,
											"end": 6531,
											"name": "MSTORE",
											"source": 42
										},
										{
											"begin": 6361,
											"end": 6531,
											"name": "SWAP1",
											"source": 42
										},
										{
											"begin": 6361,
											"end": 6531,
											"name": "DUP3",
											"source": 42
										},
										{
											"begin": 6361,
											"end": 6531,
											"name": "SWAP1",
											"source": 42
										},
										{
											"begin": 6361,
											"end": 6531,
											"name": "MSTORE",
											"source": 42
										},
										{
											"begin": 6299,
											"end": 6549,
											"name": "PUSH [tag]",
											"source": 42,
											"value": "66"
										},
										{
											"begin": 6299,
											"end": 6549,
											"name": "SWAP2",
											"source": 42
										},
										{
											"begin": 6299,
											"end": 6549,
											"name": "PUSH [tag]",
											"source": 42,
											"value": "67"
										},
										{
											"begin": 6299,
											"end": 6549,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 42
										},
										{
											"begin": 6299,
											"end": 6549,
											"name": "tag",
											"source": 42,
											"value": "66"
										},
										{
											"begin": 6299,
											"end": 6549,
											"name": "JUMPDEST",
											"source": 42
										},
										{
											"begin": 6299,
											"end": 6549,
											"name": "PUSH",
											"source": 42,
											"value": "0"
										},
										{
											"begin": 6299,
											"end": 6549,
											"name": "PUSH",
											"source": 42,
											"value": "40"
										},
										{
											"begin": 6299,
											"end": 6549,
											"name": "MLOAD",
											"source": 42
										},
										{
											"begin": 6299,
											"end": 6549,
											"name": "DUP1",
											"source": 42
										},
										{
											"begin": 6299,
											"end": 6549,
											"name": "DUP4",
											"source": 42
										},
										{
											"begin": 6299,
											"end": 6549,
											"name": "SUB",
											"source": 42
										},
										{
											"begin": 6299,
											"end": 6549,
											"name": "DUP2",
											"source": 42
										},
										{
											"begin": 6299,
											"end": 6549,
											"name": "DUP6",
											"source": 42
										},
										{
											"begin": 6299,
											"end": 6549,
											"name": "GAS",
											"source": 42
										},
										{
											"begin": 6299,
											"end": 6549,
											"name": "DELEGATECALL",
											"source": 42
										},
										{
											"begin": 6299,
											"end": 6549,
											"name": "SWAP2",
											"source": 42
										},
										{
											"begin": 6299,
											"end": 6549,
											"name": "POP",
											"source": 42
										},
										{
											"begin": 6299,
											"end": 6549,
											"name": "POP",
											"source": 42
										},
										{
											"begin": 6299,
											"end": 6549,
											"name": "RETURNDATASIZE",
											"source": 42
										},
										{
											"begin": 6299,
											"end": 6549,
											"name": "DUP1",
											"source": 42
										},
										{
											"begin": 6299,
											"end": 6549,
											"name": "PUSH",
											"source": 42,
											"value": "0"
										},
										{
											"begin": 6299,
											"end": 6549,
											"name": "DUP2",
											"source": 42
										},
										{
											"begin": 6299,
											"end": 6549,
											"name": "EQ",
											"source": 42
										},
										{
											"begin": 6299,
											"end": 6549,
											"name": "PUSH [tag]",
											"source": 42,
											"value": "70"
										},
										{
											"begin": 6299,
											"end": 6549,
											"name": "JUMPI",
											"source": 42
										},
										{
											"begin": 6299,
											"end": 6549,
											"name": "PUSH",
											"source": 42,
											"value": "40"
										},
										{
											"begin": 6299,
											"end": 6549,
											"name": "MLOAD",
											"source": 42
										},
										{
											"begin": 6299,
											"end": 6549,
											"name": "SWAP2",
											"source": 42
										},
										{
											"begin": 6299,
											"end": 6549,
											"name": "POP",
											"source": 42
										},
										{
											"begin": 6299,
											"end": 6549,
											"name": "PUSH",
											"source": 42,
											"value": "1F"
										},
										{
											"begin": 6299,
											"end": 6549,
											"name": "NOT",
											"source": 42
										},
										{
											"begin": 6299,
											"end": 6549,
											"name": "PUSH",
											"source": 42,
											"value": "3F"
										},
										{
											"begin": 6299,
											"end": 6549,
											"name": "RETURNDATASIZE",
											"source": 42
										},
										{
											"begin": 6299,
											"end": 6549,
											"name": "ADD",
											"source": 42
										},
										{
											"begin": 6299,
											"end": 6549,
											"name": "AND",
											"source": 42
										},
										{
											"begin": 6299,
											"end": 6549,
											"name": "DUP3",
											"source": 42
										},
										{
											"begin": 6299,
											"end": 6549,
											"name": "ADD",
											"source": 42
										},
										{
											"begin": 6299,
											"end": 6549,
											"name": "PUSH",
											"source": 42,
											"value": "40"
										},
										{
											"begin": 6299,
											"end": 6549,
											"name": "MSTORE",
											"source": 42
										},
										{
											"begin": 6299,
											"end": 6549,
											"name": "RETURNDATASIZE",
											"source": 42
										},
										{
											"begin": 6299,
											"end": 6549,
											"name": "DUP3",
											"source": 42
										},
										{
											"begin": 6299,
											"end": 6549,
											"name": "MSTORE",
											"source": 42
										},
										{
											"begin": 6299,
											"end": 6549,
											"name": "RETURNDATASIZE",
											"source": 42
										},
										{
											"begin": 6299,
											"end": 6549,
											"name": "PUSH",
											"source": 42,
											"value": "0"
										},
										{
											"begin": 6299,
											"end": 6549,
											"name": "PUSH",
											"source": 42,
											"value": "20"
										},
										{
											"begin": 6299,
											"end": 6549,
											"name": "DUP5",
											"source": 42
										},
										{
											"begin": 6299,
											"end": 6549,
											"name": "ADD",
											"source": 42
										},
										{
											"begin": 6299,
											"end": 6549,
											"name": "RETURNDATACOPY",
											"source": 42
										},
										{
											"begin": 6299,
											"end": 6549,
											"name": "PUSH [tag]",
											"source": 42,
											"value": "69"
										},
										{
											"begin": 6299,
											"end": 6549,
											"name": "JUMP",
											"source": 42
										},
										{
											"begin": 6299,
											"end": 6549,
											"name": "tag",
											"source": 42,
											"value": "70"
										},
										{
											"begin": 6299,
											"end": 6549,
											"name": "JUMPDEST",
											"source": 42
										},
										{
											"begin": 6299,
											"end": 6549,
											"name": "PUSH",
											"source": 42,
											"value": "60"
										},
										{
											"begin": 6299,
											"end": 6549,
											"name": "SWAP2",
											"source": 42
										},
										{
											"begin": 6299,
											"end": 6549,
											"name": "POP",
											"source": 42
										},
										{
											"begin": 6299,
											"end": 6549,
											"name": "tag",
											"source": 42,
											"value": "69"
										},
										{
											"begin": 6299,
											"end": 6549,
											"name": "JUMPDEST",
											"source": 42
										},
										{
											"begin": 6299,
											"end": 6549,
											"name": "POP",
											"source": 42
										},
										{
											"begin": 6280,
											"end": 6549,
											"name": "POP",
											"source": 42
										},
										{
											"begin": 6280,
											"end": 6549,
											"name": "SWAP1",
											"source": 42
										},
										{
											"begin": 6280,
											"end": 6549,
											"name": "POP",
											"source": 42
										},
										{
											"begin": 6575,
											"end": 6582,
											"name": "DUP1",
											"source": 42
										},
										{
											"begin": 6567,
											"end": 6612,
											"name": "PUSH [tag]",
											"source": 42,
											"value": "71"
										},
										{
											"begin": 6567,
											"end": 6612,
											"name": "JUMPI",
											"source": 42
										},
										{
											"begin": 6567,
											"end": 6612,
											"name": "PUSH",
											"source": 42,
											"value": "40"
										},
										{
											"begin": 6567,
											"end": 6612,
											"name": "MLOAD",
											"source": 42
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6567,
											"end": 6612,
											"name": "DUP2",
											"source": 42
										},
										{
											"begin": 6567,
											"end": 6612,
											"name": "MSTORE",
											"source": 42
										},
										{
											"begin": 9108,
											"end": 9110,
											"name": "PUSH",
											"source": 43,
											"value": "20"
										},
										{
											"begin": 6567,
											"end": 6612,
											"name": "PUSH",
											"source": 42,
											"value": "4"
										},
										{
											"begin": 6567,
											"end": 6612,
											"name": "DUP3",
											"source": 42
										},
										{
											"begin": 6567,
											"end": 6612,
											"name": "ADD",
											"source": 42
										},
										{
											"begin": 9090,
											"end": 9111,
											"name": "MSTORE",
											"source": 43
										},
										{
											"begin": 9147,
											"end": 9149,
											"name": "PUSH",
											"source": 43,
											"value": "19"
										},
										{
											"begin": 9127,
											"end": 9145,
											"name": "PUSH",
											"source": 43,
											"value": "24"
										},
										{
											"begin": 9127,
											"end": 9145,
											"name": "DUP3",
											"source": 43
										},
										{
											"begin": 9127,
											"end": 9145,
											"name": "ADD",
											"source": 43
										},
										{
											"begin": 9120,
											"end": 9150,
											"name": "MSTORE",
											"source": 43
										},
										{
											"begin": 9186,
											"end": 9213,
											"name": "PUSH",
											"source": 43,
											"value": "4661636574206D6F64696669636174696F6E206661696C656400000000000000"
										},
										{
											"begin": 9166,
											"end": 9184,
											"name": "PUSH",
											"source": 43,
											"value": "44"
										},
										{
											"begin": 9166,
											"end": 9184,
											"name": "DUP3",
											"source": 43
										},
										{
											"begin": 9166,
											"end": 9184,
											"name": "ADD",
											"source": 43
										},
										{
											"begin": 9159,
											"end": 9214,
											"name": "MSTORE",
											"source": 43
										},
										{
											"begin": 9231,
											"end": 9249,
											"name": "PUSH",
											"source": 43,
											"value": "64"
										},
										{
											"begin": 9231,
											"end": 9249,
											"name": "ADD",
											"source": 43
										},
										{
											"begin": 6567,
											"end": 6612,
											"name": "PUSH [tag]",
											"source": 42,
											"value": "45"
										},
										{
											"begin": 8906,
											"end": 9255,
											"name": "JUMP",
											"source": 43
										},
										{
											"begin": 6567,
											"end": 6612,
											"name": "tag",
											"source": 42,
											"value": "71"
										},
										{
											"begin": 6567,
											"end": 6612,
											"name": "JUMPDEST",
											"source": 42
										},
										{
											"begin": 6635,
											"end": 6676,
											"name": "PUSH",
											"source": 42,
											"value": "EE80746E1D76A7C4654E1A9D2FF0DDE8304B0D72803A25EB48C89FD6EAE7EBE8"
										},
										{
											"begin": 6646,
											"end": 6657,
											"name": "DUP8",
											"source": 42
										},
										{
											"begin": 6646,
											"end": 6657,
											"name": "DUP8",
											"source": 42
										},
										{
											"begin": 6659,
											"end": 6664,
											"name": "DUP8",
											"source": 42
										},
										{
											"begin": 6666,
											"end": 6675,
											"name": "DUP8",
											"source": 42
										},
										{
											"begin": 6666,
											"end": 6675,
											"name": "DUP8",
											"source": 42
										},
										{
											"begin": 6635,
											"end": 6676,
											"name": "PUSH",
											"source": 42,
											"value": "40"
										},
										{
											"begin": 6635,
											"end": 6676,
											"name": "MLOAD",
											"source": 42
										},
										{
											"begin": 6635,
											"end": 6676,
											"name": "PUSH [tag]",
											"source": 42,
											"value": "74"
										},
										{
											"begin": 6635,
											"end": 6676,
											"name": "SWAP6",
											"source": 42
										},
										{
											"begin": 6635,
											"end": 6676,
											"name": "SWAP5",
											"source": 42
										},
										{
											"begin": 6635,
											"end": 6676,
											"name": "SWAP4",
											"source": 42
										},
										{
											"begin": 6635,
											"end": 6676,
											"name": "SWAP3",
											"source": 42
										},
										{
											"begin": 6635,
											"end": 6676,
											"name": "SWAP2",
											"source": 42
										},
										{
											"begin": 6635,
											"end": 6676,
											"name": "SWAP1",
											"source": 42
										},
										{
											"begin": 6635,
											"end": 6676,
											"name": "PUSH [tag]",
											"source": 42,
											"value": "75"
										},
										{
											"begin": 6635,
											"end": 6676,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 42
										},
										{
											"begin": 6635,
											"end": 6676,
											"name": "tag",
											"source": 42,
											"value": "74"
										},
										{
											"begin": 6635,
											"end": 6676,
											"name": "JUMPDEST",
											"source": 42
										},
										{
											"begin": 6635,
											"end": 6676,
											"name": "PUSH",
											"source": 42,
											"value": "40"
										},
										{
											"begin": 6635,
											"end": 6676,
											"name": "MLOAD",
											"source": 42
										},
										{
											"begin": 6635,
											"end": 6676,
											"name": "DUP1",
											"source": 42
										},
										{
											"begin": 6635,
											"end": 6676,
											"name": "SWAP2",
											"source": 42
										},
										{
											"begin": 6635,
											"end": 6676,
											"name": "SUB",
											"source": 42
										},
										{
											"begin": 6635,
											"end": 6676,
											"name": "SWAP1",
											"source": 42
										},
										{
											"begin": 6635,
											"end": 6676,
											"name": "LOG1",
											"source": 42
										},
										{
											"begin": 6262,
											"end": 6691,
											"name": "POP",
											"source": 42
										},
										{
											"begin": 6071,
											"end": 6691,
											"name": "tag",
											"source": 42,
											"value": "52"
										},
										{
											"begin": 6071,
											"end": 6691,
											"name": "JUMPDEST",
											"source": 42
										},
										{
											"begin": 6052,
											"end": 6055,
											"name": "PUSH",
											"source": 42,
											"value": "1"
										},
										{
											"begin": 6052,
											"end": 6055,
											"name": "ADD",
											"source": 42
										},
										{
											"begin": 6012,
											"end": 6701,
											"name": "PUSH [tag]",
											"source": 42,
											"value": "36"
										},
										{
											"begin": 6012,
											"end": 6701,
											"name": "JUMP",
											"source": 42
										},
										{
											"begin": 6012,
											"end": 6701,
											"name": "tag",
											"source": 42,
											"value": "37"
										},
										{
											"begin": 6012,
											"end": 6701,
											"name": "JUMPDEST",
											"source": 42
										},
										{
											"begin": 6012,
											"end": 6701,
											"name": "POP",
											"source": 42
										},
										{
											"begin": 5869,
											"end": 6707,
											"name": "POP",
											"source": 42
										},
										{
											"begin": 5869,
											"end": 6707,
											"name": "POP",
											"source": 42
										},
										{
											"begin": 5869,
											"end": 6707,
											"name": "POP",
											"source": 42
										},
										{
											"begin": 5869,
											"end": 6707,
											"name": "POP",
											"source": 42
										},
										{
											"begin": 5869,
											"end": 6707,
											"name": "POP",
											"source": 42
										},
										{
											"begin": 5869,
											"end": 6707,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 42
										},
										{
											"begin": 5391,
											"end": 5863,
											"name": "tag",
											"source": 42,
											"value": "28"
										},
										{
											"begin": 5391,
											"end": 5863,
											"name": "JUMPDEST",
											"source": 42
										},
										{
											"begin": 5484,
											"end": 5510,
											"name": "PUSH",
											"source": 42,
											"value": "40"
										},
										{
											"begin": 5484,
											"end": 5510,
											"name": "DUP1",
											"source": 42
										},
										{
											"begin": 5484,
											"end": 5510,
											"name": "MLOAD",
											"source": 42
										},
										{
											"begin": 5508,
											"end": 5509,
											"name": "PUSH",
											"source": 42,
											"value": "1"
										},
										{
											"begin": 5484,
											"end": 5510,
											"name": "DUP1",
											"source": 42
										},
										{
											"begin": 5484,
											"end": 5510,
											"name": "DUP3",
											"source": 42
										},
										{
											"begin": 5484,
											"end": 5510,
											"name": "MSTORE",
											"source": 42
										},
										{
											"begin": 5484,
											"end": 5510,
											"name": "DUP2",
											"source": 42
										},
										{
											"begin": 5484,
											"end": 5510,
											"name": "DUP4",
											"source": 42
										},
										{
											"begin": 5484,
											"end": 5510,
											"name": "ADD",
											"source": 42
										},
										{
											"begin": 5484,
											"end": 5510,
											"name": "SWAP1",
											"source": 42
										},
										{
											"begin": 5484,
											"end": 5510,
											"name": "SWAP3",
											"source": 42
										},
										{
											"begin": 5484,
											"end": 5510,
											"name": "MSTORE",
											"source": 42
										},
										{
											"begin": 5444,
											"end": 5481,
											"name": "PUSH",
											"source": 42,
											"value": "0"
										},
										{
											"begin": 5444,
											"end": 5481,
											"name": "SWAP2",
											"source": 42
										},
										{
											"begin": 5484,
											"end": 5510,
											"name": "DUP2",
											"source": 42
										},
										{
											"begin": 5484,
											"end": 5510,
											"name": "PUSH",
											"source": 42,
											"value": "20"
										},
										{
											"begin": 5484,
											"end": 5510,
											"name": "ADD",
											"source": 42
										},
										{
											"begin": 5484,
											"end": 5510,
											"name": "tag",
											"source": 42,
											"value": "81"
										},
										{
											"begin": 5484,
											"end": 5510,
											"name": "JUMPDEST",
											"source": 42
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 5484,
											"end": 5510,
											"name": "DUP3",
											"source": 42
										},
										{
											"begin": 5484,
											"end": 5510,
											"name": "MSTORE",
											"source": 42
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 5484,
											"end": 5510,
											"name": "SWAP1",
											"source": 42
										},
										{
											"begin": 5484,
											"end": 5510,
											"name": "SWAP3",
											"source": 42
										},
										{
											"begin": 5484,
											"end": 5510,
											"name": "ADD",
											"source": 42
										},
										{
											"begin": 5484,
											"end": 5510,
											"name": "SWAP2",
											"source": 42
										},
										{
											"begin": 5484,
											"end": 5510,
											"name": "ADD",
											"source": 42
										},
										{
											"begin": 5484,
											"end": 5510,
											"name": "DUP2",
											"source": 42
										},
										{
											"begin": 5484,
											"end": 5510,
											"name": "PUSH [tag]",
											"source": 42,
											"value": "81"
										},
										{
											"begin": 5484,
											"end": 5510,
											"name": "JUMPI",
											"source": 42
										},
										{
											"begin": 5484,
											"end": 5510,
											"name": "SWAP1",
											"source": 42
										},
										{
											"begin": 5484,
											"end": 5510,
											"name": "POP",
											"source": 42
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5536,
											"end": 5773,
											"name": "PUSH",
											"source": 42,
											"value": "40"
										},
										{
											"begin": 5536,
											"end": 5773,
											"name": "DUP1",
											"source": 42
										},
										{
											"begin": 5536,
											"end": 5773,
											"name": "MLOAD",
											"source": 42
										},
										{
											"begin": 5536,
											"end": 5773,
											"name": "PUSH",
											"source": 42,
											"value": "60"
										},
										{
											"begin": 5536,
											"end": 5773,
											"name": "DUP2",
											"source": 42
										},
										{
											"begin": 5536,
											"end": 5773,
											"name": "ADD",
											"source": 42
										},
										{
											"begin": 5536,
											"end": 5773,
											"name": "SWAP1",
											"source": 42
										},
										{
											"begin": 5536,
											"end": 5773,
											"name": "SWAP2",
											"source": 42
										},
										{
											"begin": 5536,
											"end": 5773,
											"name": "MSTORE",
											"source": 42
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5536,
											"end": 5773,
											"name": "DUP5",
											"source": 42
										},
										{
											"begin": 5536,
											"end": 5773,
											"name": "AND",
											"source": 42
										},
										{
											"begin": 5536,
											"end": 5773,
											"name": "DUP2",
											"source": 42
										},
										{
											"begin": 5536,
											"end": 5773,
											"name": "MSTORE",
											"source": 42
										},
										{
											"begin": 5444,
											"end": 5510,
											"name": "SWAP1",
											"source": 42
										},
										{
											"begin": 5444,
											"end": 5510,
											"name": "SWAP2",
											"source": 42
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5536,
											"end": 5773,
											"name": "PUSH",
											"source": 42,
											"value": "20"
										},
										{
											"begin": 5536,
											"end": 5773,
											"name": "DUP2",
											"source": 42
										},
										{
											"begin": 5536,
											"end": 5773,
											"name": "ADD",
											"source": 42
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 5536,
											"end": 5773,
											"name": "DUP2",
											"source": 42
										},
										{
											"begin": 5536,
											"end": 5773,
											"name": "MSTORE",
											"source": 42
										},
										{
											"begin": 5536,
											"end": 5773,
											"name": "PUSH",
											"source": 42,
											"value": "FCCC64D400000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5536,
											"end": 5773,
											"name": "PUSH",
											"source": 42,
											"value": "20"
										},
										{
											"begin": 5536,
											"end": 5773,
											"name": "SWAP1",
											"source": 42
										},
										{
											"begin": 5536,
											"end": 5773,
											"name": "SWAP2",
											"source": 42
										},
										{
											"begin": 5536,
											"end": 5773,
											"name": "ADD",
											"source": 42
										},
										{
											"begin": 5536,
											"end": 5773,
											"name": "MSTORE",
											"source": 42
										},
										{
											"begin": 5520,
											"end": 5533,
											"name": "DUP2",
											"source": 42
										},
										{
											"begin": 5520,
											"end": 5533,
											"name": "MLOAD",
											"source": 42
										},
										{
											"begin": 5520,
											"end": 5530,
											"name": "DUP3",
											"source": 42
										},
										{
											"begin": 5520,
											"end": 5530,
											"name": "SWAP1",
											"source": 42
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 5520,
											"end": 5533,
											"name": "PUSH [tag]",
											"source": 42,
											"value": "88"
										},
										{
											"begin": 5520,
											"end": 5533,
											"name": "JUMPI",
											"source": 42
										},
										{
											"begin": 5520,
											"end": 5533,
											"name": "PUSH [tag]",
											"source": 42,
											"value": "88"
										},
										{
											"begin": 5520,
											"end": 5533,
											"name": "PUSH [tag]",
											"source": 42,
											"value": "41"
										},
										{
											"begin": 5520,
											"end": 5533,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 42
										},
										{
											"begin": 5520,
											"end": 5533,
											"name": "tag",
											"source": 42,
											"value": "88"
										},
										{
											"begin": 5520,
											"end": 5533,
											"name": "JUMPDEST",
											"source": 42
										},
										{
											"begin": 5520,
											"end": 5533,
											"name": "PUSH",
											"source": 42,
											"value": "20"
										},
										{
											"begin": 5520,
											"end": 5533,
											"name": "SWAP1",
											"source": 42
										},
										{
											"begin": 5520,
											"end": 5533,
											"name": "DUP2",
											"source": 42
										},
										{
											"begin": 5520,
											"end": 5533,
											"name": "MUL",
											"source": 42
										},
										{
											"begin": 5520,
											"end": 5533,
											"name": "SWAP2",
											"source": 42
										},
										{
											"begin": 5520,
											"end": 5533,
											"name": "SWAP1",
											"source": 42
										},
										{
											"begin": 5520,
											"end": 5533,
											"name": "SWAP2",
											"source": 42
										},
										{
											"begin": 5520,
											"end": 5533,
											"name": "ADD",
											"source": 42
										},
										{
											"begin": 5520,
											"end": 5533,
											"name": "ADD",
											"source": 42
										},
										{
											"begin": 5520,
											"end": 5773,
											"name": "MSTORE",
											"source": 42
										},
										{
											"begin": 5783,
											"end": 5845,
											"name": "PUSH",
											"source": 42,
											"value": "40"
										},
										{
											"begin": 5783,
											"end": 5845,
											"name": "MLOAD",
											"source": 42
										},
										{
											"begin": 5783,
											"end": 5845,
											"name": "PUSH",
											"source": 42,
											"value": "9E97D73900000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5783,
											"end": 5845,
											"name": "DUP2",
											"source": 42
										},
										{
											"begin": 5783,
											"end": 5845,
											"name": "MSTORE",
											"source": 42
										},
										{
											"begin": 5800,
											"end": 5804,
											"name": "ADDRESS",
											"source": 42
										},
										{
											"begin": 5800,
											"end": 5804,
											"name": "SWAP1",
											"source": 42
										},
										{
											"begin": 5783,
											"end": 5817,
											"name": "PUSH",
											"source": 42,
											"value": "9E97D739"
										},
										{
											"begin": 5783,
											"end": 5817,
											"name": "SWAP1",
											"source": 42
										},
										{
											"begin": 5783,
											"end": 5845,
											"name": "PUSH [tag]",
											"source": 42,
											"value": "89"
										},
										{
											"begin": 5783,
											"end": 5845,
											"name": "SWAP1",
											"source": 42
										},
										{
											"begin": 5818,
											"end": 5828,
											"name": "DUP5",
											"source": 42
										},
										{
											"begin": 5818,
											"end": 5828,
											"name": "SWAP1",
											"source": 42
										},
										{
											"begin": 5838,
											"end": 5839,
											"name": "PUSH",
											"source": 42,
											"value": "0"
										},
										{
											"begin": 5838,
											"end": 5839,
											"name": "SWAP1",
											"source": 42
										},
										{
											"begin": 5783,
											"end": 5845,
											"name": "PUSH",
											"source": 42,
											"value": "4"
										},
										{
											"begin": 5783,
											"end": 5845,
											"name": "ADD",
											"source": 42
										},
										{
											"begin": 5783,
											"end": 5845,
											"name": "PUSH [tag]",
											"source": 42,
											"value": "90"
										},
										{
											"begin": 5783,
											"end": 5845,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 42
										},
										{
											"begin": 5783,
											"end": 5845,
											"name": "tag",
											"source": 42,
											"value": "89"
										},
										{
											"begin": 5783,
											"end": 5845,
											"name": "JUMPDEST",
											"source": 42
										},
										{
											"begin": 5783,
											"end": 5845,
											"name": "PUSH",
											"source": 42,
											"value": "0"
										},
										{
											"begin": 5783,
											"end": 5845,
											"name": "PUSH",
											"source": 42,
											"value": "40"
										},
										{
											"begin": 5783,
											"end": 5845,
											"name": "MLOAD",
											"source": 42
										},
										{
											"begin": 5783,
											"end": 5845,
											"name": "DUP1",
											"source": 42
										},
										{
											"begin": 5783,
											"end": 5845,
											"name": "DUP4",
											"source": 42
										},
										{
											"begin": 5783,
											"end": 5845,
											"name": "SUB",
											"source": 42
										},
										{
											"begin": 5783,
											"end": 5845,
											"name": "DUP2",
											"source": 42
										},
										{
											"begin": 5783,
											"end": 5845,
											"name": "PUSH",
											"source": 42,
											"value": "0"
										},
										{
											"begin": 5783,
											"end": 5845,
											"name": "DUP8",
											"source": 42
										},
										{
											"begin": 5783,
											"end": 5845,
											"name": "DUP1",
											"source": 42
										},
										{
											"begin": 5783,
											"end": 5845,
											"name": "EXTCODESIZE",
											"source": 42
										},
										{
											"begin": 5783,
											"end": 5845,
											"name": "ISZERO",
											"source": 42
										},
										{
											"begin": 5783,
											"end": 5845,
											"name": "DUP1",
											"source": 42
										},
										{
											"begin": 5783,
											"end": 5845,
											"name": "ISZERO",
											"source": 42
										},
										{
											"begin": 5783,
											"end": 5845,
											"name": "PUSH [tag]",
											"source": 42,
											"value": "91"
										},
										{
											"begin": 5783,
											"end": 5845,
											"name": "JUMPI",
											"source": 42
										},
										{
											"begin": 5783,
											"end": 5845,
											"name": "PUSH",
											"source": 42,
											"value": "0"
										},
										{
											"begin": 5783,
											"end": 5845,
											"name": "DUP1",
											"source": 42
										},
										{
											"begin": 5783,
											"end": 5845,
											"name": "REVERT",
											"source": 42
										},
										{
											"begin": 5783,
											"end": 5845,
											"name": "tag",
											"source": 42,
											"value": "91"
										},
										{
											"begin": 5783,
											"end": 5845,
											"name": "JUMPDEST",
											"source": 42
										},
										{
											"begin": 5783,
											"end": 5845,
											"name": "POP",
											"source": 42
										},
										{
											"begin": 5783,
											"end": 5845,
											"name": "GAS",
											"source": 42
										},
										{
											"begin": 5783,
											"end": 5845,
											"name": "CALL",
											"source": 42
										},
										{
											"begin": 5783,
											"end": 5845,
											"name": "ISZERO",
											"source": 42
										},
										{
											"begin": 5783,
											"end": 5845,
											"name": "DUP1",
											"source": 42
										},
										{
											"begin": 5783,
											"end": 5845,
											"name": "ISZERO",
											"source": 42
										},
										{
											"begin": 5783,
											"end": 5845,
											"name": "PUSH [tag]",
											"source": 42,
											"value": "37"
										},
										{
											"begin": 5783,
											"end": 5845,
											"name": "JUMPI",
											"source": 42
										},
										{
											"begin": 5783,
											"end": 5845,
											"name": "RETURNDATASIZE",
											"source": 42
										},
										{
											"begin": 5783,
											"end": 5845,
											"name": "PUSH",
											"source": 42,
											"value": "0"
										},
										{
											"begin": 5783,
											"end": 5845,
											"name": "DUP1",
											"source": 42
										},
										{
											"begin": 5783,
											"end": 5845,
											"name": "RETURNDATACOPY",
											"source": 42
										},
										{
											"begin": 5783,
											"end": 5845,
											"name": "RETURNDATASIZE",
											"source": 42
										},
										{
											"begin": 5783,
											"end": 5845,
											"name": "PUSH",
											"source": 42,
											"value": "0"
										},
										{
											"begin": 5783,
											"end": 5845,
											"name": "REVERT",
											"source": 42
										},
										{
											"begin": 14,
											"end": 198,
											"name": "tag",
											"source": 43,
											"value": "79"
										},
										{
											"begin": 14,
											"end": 198,
											"name": "JUMPDEST",
											"source": 43
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4E487B71"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 63,
											"end": 64,
											"name": "PUSH",
											"source": 43,
											"value": "0"
										},
										{
											"begin": 56,
											"end": 144,
											"name": "MSTORE",
											"source": 43
										},
										{
											"begin": 163,
											"end": 167,
											"name": "PUSH",
											"source": 43,
											"value": "41"
										},
										{
											"begin": 160,
											"end": 161,
											"name": "PUSH",
											"source": 43,
											"value": "4"
										},
										{
											"begin": 153,
											"end": 168,
											"name": "MSTORE",
											"source": 43
										},
										{
											"begin": 187,
											"end": 191,
											"name": "PUSH",
											"source": 43,
											"value": "24"
										},
										{
											"begin": 184,
											"end": 185,
											"name": "PUSH",
											"source": 43,
											"value": "0"
										},
										{
											"begin": 177,
											"end": 192,
											"name": "REVERT",
											"source": 43
										},
										{
											"begin": 203,
											"end": 922,
											"name": "tag",
											"source": 43,
											"value": "96"
										},
										{
											"begin": 203,
											"end": 922,
											"name": "JUMPDEST",
											"source": 43
										},
										{
											"begin": 246,
											"end": 251,
											"name": "PUSH",
											"source": 43,
											"value": "0"
										},
										{
											"begin": 299,
											"end": 302,
											"name": "DUP3",
											"source": 43
										},
										{
											"begin": 292,
											"end": 296,
											"name": "PUSH",
											"source": 43,
											"value": "1F"
										},
										{
											"begin": 284,
											"end": 290,
											"name": "DUP4",
											"source": 43
										},
										{
											"begin": 280,
											"end": 297,
											"name": "ADD",
											"source": 43
										},
										{
											"begin": 276,
											"end": 303,
											"name": "SLT",
											"source": 43
										},
										{
											"begin": 266,
											"end": 321,
											"name": "PUSH [tag]",
											"source": 43,
											"value": "109"
										},
										{
											"begin": 266,
											"end": 321,
											"name": "JUMPI",
											"source": 43
										},
										{
											"begin": 317,
											"end": 318,
											"name": "PUSH",
											"source": 43,
											"value": "0"
										},
										{
											"begin": 314,
											"end": 315,
											"name": "DUP1",
											"source": 43
										},
										{
											"begin": 307,
											"end": 319,
											"name": "REVERT",
											"source": 43
										},
										{
											"begin": 266,
											"end": 321,
											"name": "tag",
											"source": 43,
											"value": "109"
										},
										{
											"begin": 266,
											"end": 321,
											"name": "JUMPDEST",
											"source": 43
										},
										{
											"begin": 353,
											"end": 359,
											"name": "DUP2",
											"source": 43
										},
										{
											"begin": 340,
											"end": 360,
											"name": "CALLDATALOAD",
											"source": 43
										},
										{
											"begin": 379,
											"end": 397,
											"name": "PUSH",
											"source": 43,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 416,
											"end": 418,
											"name": "DUP1",
											"source": 43
										},
										{
											"begin": 412,
											"end": 414,
											"name": "DUP3",
											"source": 43
										},
										{
											"begin": 409,
											"end": 419,
											"name": "GT",
											"source": 43
										},
										{
											"begin": 406,
											"end": 442,
											"name": "ISZERO",
											"source": 43
										},
										{
											"begin": 406,
											"end": 442,
											"name": "PUSH [tag]",
											"source": 43,
											"value": "111"
										},
										{
											"begin": 406,
											"end": 442,
											"name": "JUMPI",
											"source": 43
										},
										{
											"begin": 422,
											"end": 440,
											"name": "PUSH [tag]",
											"source": 43,
											"value": "111"
										},
										{
											"begin": 422,
											"end": 440,
											"name": "PUSH [tag]",
											"source": 43,
											"value": "79"
										},
										{
											"begin": 422,
											"end": 440,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 43
										},
										{
											"begin": 422,
											"end": 440,
											"name": "tag",
											"source": 43,
											"value": "111"
										},
										{
											"begin": 422,
											"end": 440,
											"name": "JUMPDEST",
											"source": 43
										},
										{
											"begin": 497,
											"end": 499,
											"name": "PUSH",
											"source": 43,
											"value": "40"
										},
										{
											"begin": 491,
											"end": 500,
											"name": "MLOAD",
											"source": 43
										},
										{
											"begin": 465,
											"end": 467,
											"name": "PUSH",
											"source": 43,
											"value": "1F"
										},
										{
											"begin": 551,
											"end": 564,
											"name": "DUP4",
											"source": 43
										},
										{
											"begin": 551,
											"end": 564,
											"name": "ADD",
											"source": 43
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 547,
											"end": 569,
											"name": "SWAP1",
											"source": 43
										},
										{
											"begin": 547,
											"end": 569,
											"name": "DUP2",
											"source": 43
										},
										{
											"begin": 547,
											"end": 569,
											"name": "AND",
											"source": 43
										},
										{
											"begin": 571,
											"end": 573,
											"name": "PUSH",
											"source": 43,
											"value": "3F"
										},
										{
											"begin": 543,
											"end": 574,
											"name": "ADD",
											"source": 43
										},
										{
											"begin": 539,
											"end": 579,
											"name": "AND",
											"source": 43
										},
										{
											"begin": 527,
											"end": 580,
											"name": "DUP2",
											"source": 43
										},
										{
											"begin": 527,
											"end": 580,
											"name": "ADD",
											"source": 43
										},
										{
											"begin": 527,
											"end": 580,
											"name": "SWAP1",
											"source": 43
										},
										{
											"begin": 595,
											"end": 613,
											"name": "DUP3",
											"source": 43
										},
										{
											"begin": 595,
											"end": 613,
											"name": "DUP3",
											"source": 43
										},
										{
											"begin": 595,
											"end": 613,
											"name": "GT",
											"source": 43
										},
										{
											"begin": 615,
											"end": 637,
											"name": "DUP2",
											"source": 43
										},
										{
											"begin": 615,
											"end": 637,
											"name": "DUP4",
											"source": 43
										},
										{
											"begin": 615,
											"end": 637,
											"name": "LT",
											"source": 43
										},
										{
											"begin": 592,
											"end": 638,
											"name": "OR",
											"source": 43
										},
										{
											"begin": 589,
											"end": 661,
											"name": "ISZERO",
											"source": 43
										},
										{
											"begin": 589,
											"end": 661,
											"name": "PUSH [tag]",
											"source": 43,
											"value": "113"
										},
										{
											"begin": 589,
											"end": 661,
											"name": "JUMPI",
											"source": 43
										},
										{
											"begin": 641,
											"end": 659,
											"name": "PUSH [tag]",
											"source": 43,
											"value": "113"
										},
										{
											"begin": 641,
											"end": 659,
											"name": "PUSH [tag]",
											"source": 43,
											"value": "79"
										},
										{
											"begin": 641,
											"end": 659,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 43
										},
										{
											"begin": 641,
											"end": 659,
											"name": "tag",
											"source": 43,
											"value": "113"
										},
										{
											"begin": 641,
											"end": 659,
											"name": "JUMPDEST",
											"source": 43
										},
										{
											"begin": 681,
											"end": 691,
											"name": "DUP2",
											"source": 43
										},
										{
											"begin": 677,
											"end": 679,
											"name": "PUSH",
											"source": 43,
											"value": "40"
										},
										{
											"begin": 670,
											"end": 692,
											"name": "MSTORE",
											"source": 43
										},
										{
											"begin": 716,
											"end": 718,
											"name": "DUP4",
											"source": 43
										},
										{
											"begin": 708,
											"end": 714,
											"name": "DUP2",
											"source": 43
										},
										{
											"begin": 701,
											"end": 719,
											"name": "MSTORE",
											"source": 43
										},
										{
											"begin": 762,
											"end": 765,
											"name": "DUP7",
											"source": 43
										},
										{
											"begin": 755,
											"end": 759,
											"name": "PUSH",
											"source": 43,
											"value": "20"
										},
										{
											"begin": 750,
											"end": 752,
											"name": "DUP6",
											"source": 43
										},
										{
											"begin": 742,
											"end": 748,
											"name": "DUP9",
											"source": 43
										},
										{
											"begin": 738,
											"end": 753,
											"name": "ADD",
											"source": 43
										},
										{
											"begin": 734,
											"end": 760,
											"name": "ADD",
											"source": 43
										},
										{
											"begin": 731,
											"end": 766,
											"name": "GT",
											"source": 43
										},
										{
											"begin": 728,
											"end": 783,
											"name": "ISZERO",
											"source": 43
										},
										{
											"begin": 728,
											"end": 783,
											"name": "PUSH [tag]",
											"source": 43,
											"value": "114"
										},
										{
											"begin": 728,
											"end": 783,
											"name": "JUMPI",
											"source": 43
										},
										{
											"begin": 779,
											"end": 780,
											"name": "PUSH",
											"source": 43,
											"value": "0"
										},
										{
											"begin": 776,
											"end": 777,
											"name": "DUP1",
											"source": 43
										},
										{
											"begin": 769,
											"end": 781,
											"name": "REVERT",
											"source": 43
										},
										{
											"begin": 728,
											"end": 783,
											"name": "tag",
											"source": 43,
											"value": "114"
										},
										{
											"begin": 728,
											"end": 783,
											"name": "JUMPDEST",
											"source": 43
										},
										{
											"begin": 843,
											"end": 845,
											"name": "DUP4",
											"source": 43
										},
										{
											"begin": 836,
											"end": 840,
											"name": "PUSH",
											"source": 43,
											"value": "20"
										},
										{
											"begin": 828,
											"end": 834,
											"name": "DUP8",
											"source": 43
										},
										{
											"begin": 824,
											"end": 841,
											"name": "ADD",
											"source": 43
										},
										{
											"begin": 817,
											"end": 821,
											"name": "PUSH",
											"source": 43,
											"value": "20"
										},
										{
											"begin": 809,
											"end": 815,
											"name": "DUP4",
											"source": 43
										},
										{
											"begin": 805,
											"end": 822,
											"name": "ADD",
											"source": 43
										},
										{
											"begin": 792,
											"end": 846,
											"name": "CALLDATACOPY",
											"source": 43
										},
										{
											"begin": 890,
											"end": 891,
											"name": "PUSH",
											"source": 43,
											"value": "0"
										},
										{
											"begin": 883,
											"end": 887,
											"name": "PUSH",
											"source": 43,
											"value": "20"
										},
										{
											"begin": 878,
											"end": 880,
											"name": "DUP6",
											"source": 43
										},
										{
											"begin": 870,
											"end": 876,
											"name": "DUP4",
											"source": 43
										},
										{
											"begin": 866,
											"end": 881,
											"name": "ADD",
											"source": 43
										},
										{
											"begin": 862,
											"end": 888,
											"name": "ADD",
											"source": 43
										},
										{
											"begin": 855,
											"end": 892,
											"name": "MSTORE",
											"source": 43
										},
										{
											"begin": 910,
											"end": 916,
											"name": "DUP1",
											"source": 43
										},
										{
											"begin": 901,
											"end": 916,
											"name": "SWAP5",
											"source": 43
										},
										{
											"begin": 901,
											"end": 916,
											"name": "POP",
											"source": 43
										},
										{
											"begin": 901,
											"end": 916,
											"name": "POP",
											"source": 43
										},
										{
											"begin": 901,
											"end": 916,
											"name": "POP",
											"source": 43
										},
										{
											"begin": 901,
											"end": 916,
											"name": "POP",
											"source": 43
										},
										{
											"begin": 901,
											"end": 916,
											"name": "POP",
											"source": 43
										},
										{
											"begin": 203,
											"end": 922,
											"name": "SWAP3",
											"source": 43
										},
										{
											"begin": 203,
											"end": 922,
											"name": "SWAP2",
											"source": 43
										},
										{
											"begin": 203,
											"end": 922,
											"name": "POP",
											"source": 43
										},
										{
											"begin": 203,
											"end": 922,
											"name": "POP",
											"source": 43
										},
										{
											"begin": 203,
											"end": 922,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 43
										},
										{
											"begin": 927,
											"end": 1538,
											"name": "tag",
											"source": 43,
											"value": "11"
										},
										{
											"begin": 927,
											"end": 1538,
											"name": "JUMPDEST",
											"source": 43
										},
										{
											"begin": 1024,
											"end": 1030,
											"name": "PUSH",
											"source": 43,
											"value": "0"
										},
										{
											"begin": 1032,
											"end": 1038,
											"name": "DUP1",
											"source": 43
										},
										{
											"begin": 1040,
											"end": 1046,
											"name": "PUSH",
											"source": 43,
											"value": "0"
										},
										{
											"begin": 1093,
											"end": 1095,
											"name": "PUSH",
											"source": 43,
											"value": "60"
										},
										{
											"begin": 1081,
											"end": 1090,
											"name": "DUP5",
											"source": 43
										},
										{
											"begin": 1072,
											"end": 1079,
											"name": "DUP7",
											"source": 43
										},
										{
											"begin": 1068,
											"end": 1091,
											"name": "SUB",
											"source": 43
										},
										{
											"begin": 1064,
											"end": 1096,
											"name": "SLT",
											"source": 43
										},
										{
											"begin": 1061,
											"end": 1113,
											"name": "ISZERO",
											"source": 43
										},
										{
											"begin": 1061,
											"end": 1113,
											"name": "PUSH [tag]",
											"source": 43,
											"value": "116"
										},
										{
											"begin": 1061,
											"end": 1113,
											"name": "JUMPI",
											"source": 43
										},
										{
											"begin": 1109,
											"end": 1110,
											"name": "PUSH",
											"source": 43,
											"value": "0"
										},
										{
											"begin": 1106,
											"end": 1107,
											"name": "DUP1",
											"source": 43
										},
										{
											"begin": 1099,
											"end": 1111,
											"name": "REVERT",
											"source": 43
										},
										{
											"begin": 1061,
											"end": 1113,
											"name": "tag",
											"source": 43,
											"value": "116"
										},
										{
											"begin": 1061,
											"end": 1113,
											"name": "JUMPDEST",
											"source": 43
										},
										{
											"begin": 1149,
											"end": 1158,
											"name": "DUP4",
											"source": 43
										},
										{
											"begin": 1136,
											"end": 1159,
											"name": "CALLDATALOAD",
											"source": 43
										},
										{
											"begin": 1178,
											"end": 1196,
											"name": "PUSH",
											"source": 43,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1219,
											"end": 1221,
											"name": "DUP1",
											"source": 43
										},
										{
											"begin": 1211,
											"end": 1217,
											"name": "DUP3",
											"source": 43
										},
										{
											"begin": 1208,
											"end": 1222,
											"name": "GT",
											"source": 43
										},
										{
											"begin": 1205,
											"end": 1239,
											"name": "ISZERO",
											"source": 43
										},
										{
											"begin": 1205,
											"end": 1239,
											"name": "PUSH [tag]",
											"source": 43,
											"value": "117"
										},
										{
											"begin": 1205,
											"end": 1239,
											"name": "JUMPI",
											"source": 43
										},
										{
											"begin": 1235,
											"end": 1236,
											"name": "PUSH",
											"source": 43,
											"value": "0"
										},
										{
											"begin": 1232,
											"end": 1233,
											"name": "DUP1",
											"source": 43
										},
										{
											"begin": 1225,
											"end": 1237,
											"name": "REVERT",
											"source": 43
										},
										{
											"begin": 1205,
											"end": 1239,
											"name": "tag",
											"source": 43,
											"value": "117"
										},
										{
											"begin": 1205,
											"end": 1239,
											"name": "JUMPDEST",
											"source": 43
										},
										{
											"begin": 1258,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 43,
											"value": "118"
										},
										{
											"begin": 1300,
											"end": 1307,
											"name": "DUP8",
											"source": 43
										},
										{
											"begin": 1291,
											"end": 1297,
											"name": "DUP4",
											"source": 43
										},
										{
											"begin": 1280,
											"end": 1289,
											"name": "DUP9",
											"source": 43
										},
										{
											"begin": 1276,
											"end": 1298,
											"name": "ADD",
											"source": 43
										},
										{
											"begin": 1258,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 43,
											"value": "96"
										},
										{
											"begin": 1258,
											"end": 1308,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 43
										},
										{
											"begin": 1258,
											"end": 1308,
											"name": "tag",
											"source": 43,
											"value": "118"
										},
										{
											"begin": 1258,
											"end": 1308,
											"name": "JUMPDEST",
											"source": 43
										},
										{
											"begin": 1248,
											"end": 1308,
											"name": "SWAP5",
											"source": 43
										},
										{
											"begin": 1248,
											"end": 1308,
											"name": "POP",
											"source": 43
										},
										{
											"begin": 1355,
											"end": 1357,
											"name": "PUSH",
											"source": 43,
											"value": "20"
										},
										{
											"begin": 1344,
											"end": 1353,
											"name": "DUP7",
											"source": 43
										},
										{
											"begin": 1340,
											"end": 1358,
											"name": "ADD",
											"source": 43
										},
										{
											"begin": 1327,
											"end": 1359,
											"name": "CALLDATALOAD",
											"source": 43
										},
										{
											"begin": 1317,
											"end": 1359,
											"name": "SWAP4",
											"source": 43
										},
										{
											"begin": 1317,
											"end": 1359,
											"name": "POP",
											"source": 43
										},
										{
											"begin": 1412,
											"end": 1414,
											"name": "PUSH",
											"source": 43,
											"value": "40"
										},
										{
											"begin": 1401,
											"end": 1410,
											"name": "DUP7",
											"source": 43
										},
										{
											"begin": 1397,
											"end": 1415,
											"name": "ADD",
											"source": 43
										},
										{
											"begin": 1384,
											"end": 1416,
											"name": "CALLDATALOAD",
											"source": 43
										},
										{
											"begin": 1368,
											"end": 1416,
											"name": "SWAP2",
											"source": 43
										},
										{
											"begin": 1368,
											"end": 1416,
											"name": "POP",
											"source": 43
										},
										{
											"begin": 1441,
											"end": 1443,
											"name": "DUP1",
											"source": 43
										},
										{
											"begin": 1431,
											"end": 1439,
											"name": "DUP3",
											"source": 43
										},
										{
											"begin": 1428,
											"end": 1444,
											"name": "GT",
											"source": 43
										},
										{
											"begin": 1425,
											"end": 1461,
											"name": "ISZERO",
											"source": 43
										},
										{
											"begin": 1425,
											"end": 1461,
											"name": "PUSH [tag]",
											"source": 43,
											"value": "119"
										},
										{
											"begin": 1425,
											"end": 1461,
											"name": "JUMPI",
											"source": 43
										},
										{
											"begin": 1457,
											"end": 1458,
											"name": "PUSH",
											"source": 43,
											"value": "0"
										},
										{
											"begin": 1454,
											"end": 1455,
											"name": "DUP1",
											"source": 43
										},
										{
											"begin": 1447,
											"end": 1459,
											"name": "REVERT",
											"source": 43
										},
										{
											"begin": 1425,
											"end": 1461,
											"name": "tag",
											"source": 43,
											"value": "119"
										},
										{
											"begin": 1425,
											"end": 1461,
											"name": "JUMPDEST",
											"source": 43
										},
										{
											"begin": 1425,
											"end": 1461,
											"name": "POP",
											"source": 43
										},
										{
											"begin": 1480,
											"end": 1532,
											"name": "PUSH [tag]",
											"source": 43,
											"value": "120"
										},
										{
											"begin": 1524,
											"end": 1531,
											"name": "DUP7",
											"source": 43
										},
										{
											"begin": 1513,
											"end": 1521,
											"name": "DUP3",
											"source": 43
										},
										{
											"begin": 1502,
											"end": 1511,
											"name": "DUP8",
											"source": 43
										},
										{
											"begin": 1498,
											"end": 1522,
											"name": "ADD",
											"source": 43
										},
										{
											"begin": 1480,
											"end": 1532,
											"name": "PUSH [tag]",
											"source": 43,
											"value": "96"
										},
										{
											"begin": 1480,
											"end": 1532,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 43
										},
										{
											"begin": 1480,
											"end": 1532,
											"name": "tag",
											"source": 43,
											"value": "120"
										},
										{
											"begin": 1480,
											"end": 1532,
											"name": "JUMPDEST",
											"source": 43
										},
										{
											"begin": 1470,
											"end": 1532,
											"name": "SWAP2",
											"source": 43
										},
										{
											"begin": 1470,
											"end": 1532,
											"name": "POP",
											"source": 43
										},
										{
											"begin": 1470,
											"end": 1532,
											"name": "POP",
											"source": 43
										},
										{
											"begin": 927,
											"end": 1538,
											"name": "SWAP3",
											"source": 43
										},
										{
											"begin": 927,
											"end": 1538,
											"name": "POP",
											"source": 43
										},
										{
											"begin": 927,
											"end": 1538,
											"name": "SWAP3",
											"source": 43
										},
										{
											"begin": 927,
											"end": 1538,
											"name": "POP",
											"source": 43
										},
										{
											"begin": 927,
											"end": 1538,
											"name": "SWAP3",
											"source": 43
										},
										{
											"begin": 927,
											"end": 1538,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 43
										},
										{
											"begin": 1543,
											"end": 1739,
											"name": "tag",
											"source": 43,
											"value": "97"
										},
										{
											"begin": 1543,
											"end": 1739,
											"name": "JUMPDEST",
											"source": 43
										},
										{
											"begin": 1611,
											"end": 1631,
											"name": "DUP1",
											"source": 43
										},
										{
											"begin": 1611,
											"end": 1631,
											"name": "CALLDATALOAD",
											"source": 43
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1660,
											"end": 1714,
											"name": "DUP2",
											"source": 43
										},
										{
											"begin": 1660,
											"end": 1714,
											"name": "AND",
											"source": 43
										},
										{
											"begin": 1650,
											"end": 1715,
											"name": "DUP2",
											"source": 43
										},
										{
											"begin": 1650,
											"end": 1715,
											"name": "EQ",
											"source": 43
										},
										{
											"begin": 1640,
											"end": 1733,
											"name": "PUSH [tag]",
											"source": 43,
											"value": "122"
										},
										{
											"begin": 1640,
											"end": 1733,
											"name": "JUMPI",
											"source": 43
										},
										{
											"begin": 1729,
											"end": 1730,
											"name": "PUSH",
											"source": 43,
											"value": "0"
										},
										{
											"begin": 1726,
											"end": 1727,
											"name": "DUP1",
											"source": 43
										},
										{
											"begin": 1719,
											"end": 1731,
											"name": "REVERT",
											"source": 43
										},
										{
											"begin": 1640,
											"end": 1733,
											"name": "tag",
											"source": 43,
											"value": "122"
										},
										{
											"begin": 1640,
											"end": 1733,
											"name": "JUMPDEST",
											"source": 43
										},
										{
											"begin": 1543,
											"end": 1739,
											"name": "SWAP2",
											"source": 43
										},
										{
											"begin": 1543,
											"end": 1739,
											"name": "SWAP1",
											"source": 43
										},
										{
											"begin": 1543,
											"end": 1739,
											"name": "POP",
											"source": 43
										},
										{
											"begin": 1543,
											"end": 1739,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 43
										},
										{
											"begin": 1744,
											"end": 2066,
											"name": "tag",
											"source": 43,
											"value": "15"
										},
										{
											"begin": 1744,
											"end": 2066,
											"name": "JUMPDEST",
											"source": 43
										},
										{
											"begin": 1821,
											"end": 1827,
											"name": "PUSH",
											"source": 43,
											"value": "0"
										},
										{
											"begin": 1829,
											"end": 1835,
											"name": "DUP1",
											"source": 43
										},
										{
											"begin": 1837,
											"end": 1843,
											"name": "PUSH",
											"source": 43,
											"value": "0"
										},
										{
											"begin": 1890,
											"end": 1892,
											"name": "PUSH",
											"source": 43,
											"value": "60"
										},
										{
											"begin": 1878,
											"end": 1887,
											"name": "DUP5",
											"source": 43
										},
										{
											"begin": 1869,
											"end": 1876,
											"name": "DUP7",
											"source": 43
										},
										{
											"begin": 1865,
											"end": 1888,
											"name": "SUB",
											"source": 43
										},
										{
											"begin": 1861,
											"end": 1893,
											"name": "SLT",
											"source": 43
										},
										{
											"begin": 1858,
											"end": 1910,
											"name": "ISZERO",
											"source": 43
										},
										{
											"begin": 1858,
											"end": 1910,
											"name": "PUSH [tag]",
											"source": 43,
											"value": "124"
										},
										{
											"begin": 1858,
											"end": 1910,
											"name": "JUMPI",
											"source": 43
										},
										{
											"begin": 1906,
											"end": 1907,
											"name": "PUSH",
											"source": 43,
											"value": "0"
										},
										{
											"begin": 1903,
											"end": 1904,
											"name": "DUP1",
											"source": 43
										},
										{
											"begin": 1896,
											"end": 1908,
											"name": "REVERT",
											"source": 43
										},
										{
											"begin": 1858,
											"end": 1910,
											"name": "tag",
											"source": 43,
											"value": "124"
										},
										{
											"begin": 1858,
											"end": 1910,
											"name": "JUMPDEST",
											"source": 43
										},
										{
											"begin": 1929,
											"end": 1958,
											"name": "PUSH [tag]",
											"source": 43,
											"value": "125"
										},
										{
											"begin": 1948,
											"end": 1957,
											"name": "DUP5",
											"source": 43
										},
										{
											"begin": 1929,
											"end": 1958,
											"name": "PUSH [tag]",
											"source": 43,
											"value": "97"
										},
										{
											"begin": 1929,
											"end": 1958,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 43
										},
										{
											"begin": 1929,
											"end": 1958,
											"name": "tag",
											"source": 43,
											"value": "125"
										},
										{
											"begin": 1929,
											"end": 1958,
											"name": "JUMPDEST",
											"source": 43
										},
										{
											"begin": 1919,
											"end": 1958,
											"name": "SWAP6",
											"source": 43
										},
										{
											"begin": 2005,
											"end": 2007,
											"name": "PUSH",
											"source": 43,
											"value": "20"
										},
										{
											"begin": 1990,
											"end": 2008,
											"name": "DUP6",
											"source": 43
										},
										{
											"begin": 1990,
											"end": 2008,
											"name": "ADD",
											"source": 43
										},
										{
											"begin": 1977,
											"end": 2009,
											"name": "CALLDATALOAD",
											"source": 43
										},
										{
											"begin": 1977,
											"end": 2009,
											"name": "SWAP6",
											"source": 43
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2056,
											"end": 2058,
											"name": "PUSH",
											"source": 43,
											"value": "40"
										},
										{
											"begin": 2041,
											"end": 2059,
											"name": "SWAP1",
											"source": 43
										},
										{
											"begin": 2041,
											"end": 2059,
											"name": "SWAP5",
											"source": 43
										},
										{
											"begin": 2041,
											"end": 2059,
											"name": "ADD",
											"source": 43
										},
										{
											"begin": 2028,
											"end": 2060,
											"name": "CALLDATALOAD",
											"source": 43
										},
										{
											"begin": 2028,
											"end": 2060,
											"name": "SWAP4",
											"source": 43
										},
										{
											"begin": 1744,
											"end": 2066,
											"name": "SWAP3",
											"source": 43
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1744,
											"end": 2066,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 43
										},
										{
											"begin": 2434,
											"end": 3618,
											"name": "tag",
											"source": 43,
											"value": "23"
										},
										{
											"begin": 2434,
											"end": 3618,
											"name": "JUMPDEST",
											"source": 43
										},
										{
											"begin": 2577,
											"end": 2583,
											"name": "PUSH",
											"source": 43,
											"value": "0"
										},
										{
											"begin": 2585,
											"end": 2591,
											"name": "DUP1",
											"source": 43
										},
										{
											"begin": 2593,
											"end": 2599,
											"name": "PUSH",
											"source": 43,
											"value": "0"
										},
										{
											"begin": 2601,
											"end": 2607,
											"name": "DUP1",
											"source": 43
										},
										{
											"begin": 2609,
											"end": 2615,
											"name": "PUSH",
											"source": 43,
											"value": "0"
										},
										{
											"begin": 2662,
											"end": 2664,
											"name": "PUSH",
											"source": 43,
											"value": "60"
										},
										{
											"begin": 2650,
											"end": 2659,
											"name": "DUP7",
											"source": 43
										},
										{
											"begin": 2641,
											"end": 2648,
											"name": "DUP9",
											"source": 43
										},
										{
											"begin": 2637,
											"end": 2660,
											"name": "SUB",
											"source": 43
										},
										{
											"begin": 2633,
											"end": 2665,
											"name": "SLT",
											"source": 43
										},
										{
											"begin": 2630,
											"end": 2682,
											"name": "ISZERO",
											"source": 43
										},
										{
											"begin": 2630,
											"end": 2682,
											"name": "PUSH [tag]",
											"source": 43,
											"value": "129"
										},
										{
											"begin": 2630,
											"end": 2682,
											"name": "JUMPI",
											"source": 43
										},
										{
											"begin": 2678,
											"end": 2679,
											"name": "PUSH",
											"source": 43,
											"value": "0"
										},
										{
											"begin": 2675,
											"end": 2676,
											"name": "DUP1",
											"source": 43
										},
										{
											"begin": 2668,
											"end": 2680,
											"name": "REVERT",
											"source": 43
										},
										{
											"begin": 2630,
											"end": 2682,
											"name": "tag",
											"source": 43,
											"value": "129"
										},
										{
											"begin": 2630,
											"end": 2682,
											"name": "JUMPDEST",
											"source": 43
										},
										{
											"begin": 2718,
											"end": 2727,
											"name": "DUP6",
											"source": 43
										},
										{
											"begin": 2705,
											"end": 2728,
											"name": "CALLDATALOAD",
											"source": 43
										},
										{
											"begin": 2747,
											"end": 2765,
											"name": "PUSH",
											"source": 43,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2788,
											"end": 2790,
											"name": "DUP1",
											"source": 43
										},
										{
											"begin": 2780,
											"end": 2786,
											"name": "DUP3",
											"source": 43
										},
										{
											"begin": 2777,
											"end": 2791,
											"name": "GT",
											"source": 43
										},
										{
											"begin": 2774,
											"end": 2808,
											"name": "ISZERO",
											"source": 43
										},
										{
											"begin": 2774,
											"end": 2808,
											"name": "PUSH [tag]",
											"source": 43,
											"value": "130"
										},
										{
											"begin": 2774,
											"end": 2808,
											"name": "JUMPI",
											"source": 43
										},
										{
											"begin": 2804,
											"end": 2805,
											"name": "PUSH",
											"source": 43,
											"value": "0"
										},
										{
											"begin": 2801,
											"end": 2802,
											"name": "DUP1",
											"source": 43
										},
										{
											"begin": 2794,
											"end": 2806,
											"name": "REVERT",
											"source": 43
										},
										{
											"begin": 2774,
											"end": 2808,
											"name": "tag",
											"source": 43,
											"value": "130"
										},
										{
											"begin": 2774,
											"end": 2808,
											"name": "JUMPDEST",
											"source": 43
										},
										{
											"begin": 2842,
											"end": 2848,
											"name": "DUP2",
											"source": 43
										},
										{
											"begin": 2831,
											"end": 2840,
											"name": "DUP9",
											"source": 43
										},
										{
											"begin": 2827,
											"end": 2849,
											"name": "ADD",
											"source": 43
										},
										{
											"begin": 2817,
											"end": 2849,
											"name": "SWAP2",
											"source": 43
										},
										{
											"begin": 2817,
											"end": 2849,
											"name": "POP",
											"source": 43
										},
										{
											"begin": 2887,
											"end": 2894,
											"name": "DUP9",
											"source": 43
										},
										{
											"begin": 2880,
											"end": 2884,
											"name": "PUSH",
											"source": 43,
											"value": "1F"
										},
										{
											"begin": 2876,
											"end": 2878,
											"name": "DUP4",
											"source": 43
										},
										{
											"begin": 2872,
											"end": 2885,
											"name": "ADD",
											"source": 43
										},
										{
											"begin": 2868,
											"end": 2895,
											"name": "SLT",
											"source": 43
										},
										{
											"begin": 2858,
											"end": 2913,
											"name": "PUSH [tag]",
											"source": 43,
											"value": "131"
										},
										{
											"begin": 2858,
											"end": 2913,
											"name": "JUMPI",
											"source": 43
										},
										{
											"begin": 2909,
											"end": 2910,
											"name": "PUSH",
											"source": 43,
											"value": "0"
										},
										{
											"begin": 2906,
											"end": 2907,
											"name": "DUP1",
											"source": 43
										},
										{
											"begin": 2899,
											"end": 2911,
											"name": "REVERT",
											"source": 43
										},
										{
											"begin": 2858,
											"end": 2913,
											"name": "tag",
											"source": 43,
											"value": "131"
										},
										{
											"begin": 2858,
											"end": 2913,
											"name": "JUMPDEST",
											"source": 43
										},
										{
											"begin": 2949,
											"end": 2951,
											"name": "DUP2",
											"source": 43
										},
										{
											"begin": 2936,
											"end": 2952,
											"name": "CALLDATALOAD",
											"source": 43
										},
										{
											"begin": 2975,
											"end": 2977,
											"name": "DUP2",
											"source": 43
										},
										{
											"begin": 2967,
											"end": 2973,
											"name": "DUP2",
											"source": 43
										},
										{
											"begin": 2964,
											"end": 2978,
											"name": "GT",
											"source": 43
										},
										{
											"begin": 2961,
											"end": 2995,
											"name": "ISZERO",
											"source": 43
										},
										{
											"begin": 2961,
											"end": 2995,
											"name": "PUSH [tag]",
											"source": 43,
											"value": "132"
										},
										{
											"begin": 2961,
											"end": 2995,
											"name": "JUMPI",
											"source": 43
										},
										{
											"begin": 2991,
											"end": 2992,
											"name": "PUSH",
											"source": 43,
											"value": "0"
										},
										{
											"begin": 2988,
											"end": 2989,
											"name": "DUP1",
											"source": 43
										},
										{
											"begin": 2981,
											"end": 2993,
											"name": "REVERT",
											"source": 43
										},
										{
											"begin": 2961,
											"end": 2995,
											"name": "tag",
											"source": 43,
											"value": "132"
										},
										{
											"begin": 2961,
											"end": 2995,
											"name": "JUMPDEST",
											"source": 43
										},
										{
											"begin": 3047,
											"end": 3054,
											"name": "DUP10",
											"source": 43
										},
										{
											"begin": 3040,
											"end": 3044,
											"name": "PUSH",
											"source": 43,
											"value": "20"
										},
										{
											"begin": 3034,
											"end": 3036,
											"name": "PUSH",
											"source": 43,
											"value": "60"
										},
										{
											"begin": 3026,
											"end": 3032,
											"name": "DUP4",
											"source": 43
										},
										{
											"begin": 3022,
											"end": 3037,
											"name": "MUL",
											"source": 43
										},
										{
											"begin": 3018,
											"end": 3020,
											"name": "DUP6",
											"source": 43
										},
										{
											"begin": 3014,
											"end": 3038,
											"name": "ADD",
											"source": 43
										},
										{
											"begin": 3010,
											"end": 3045,
											"name": "ADD",
											"source": 43
										},
										{
											"begin": 3007,
											"end": 3055,
											"name": "GT",
											"source": 43
										},
										{
											"begin": 3004,
											"end": 3072,
											"name": "ISZERO",
											"source": 43
										},
										{
											"begin": 3004,
											"end": 3072,
											"name": "PUSH [tag]",
											"source": 43,
											"value": "133"
										},
										{
											"begin": 3004,
											"end": 3072,
											"name": "JUMPI",
											"source": 43
										},
										{
											"begin": 3068,
											"end": 3069,
											"name": "PUSH",
											"source": 43,
											"value": "0"
										},
										{
											"begin": 3065,
											"end": 3066,
											"name": "DUP1",
											"source": 43
										},
										{
											"begin": 3058,
											"end": 3070,
											"name": "REVERT",
											"source": 43
										},
										{
											"begin": 3004,
											"end": 3072,
											"name": "tag",
											"source": 43,
											"value": "133"
										},
										{
											"begin": 3004,
											"end": 3072,
											"name": "JUMPDEST",
											"source": 43
										},
										{
											"begin": 3099,
											"end": 3103,
											"name": "PUSH",
											"source": 43,
											"value": "20"
										},
										{
											"begin": 3095,
											"end": 3097,
											"name": "DUP4",
											"source": 43
										},
										{
											"begin": 3091,
											"end": 3104,
											"name": "ADD",
											"source": 43
										},
										{
											"begin": 3081,
											"end": 3104,
											"name": "SWAP8",
											"source": 43
										},
										{
											"begin": 3081,
											"end": 3104,
											"name": "POP",
											"source": 43
										},
										{
											"begin": 3123,
											"end": 3129,
											"name": "DUP1",
											"source": 43
										},
										{
											"begin": 3113,
											"end": 3129,
											"name": "SWAP7",
											"source": 43
										},
										{
											"begin": 3113,
											"end": 3129,
											"name": "POP",
											"source": 43
										},
										{
											"begin": 3113,
											"end": 3129,
											"name": "POP",
											"source": 43
										},
										{
											"begin": 3148,
											"end": 3188,
											"name": "PUSH [tag]",
											"source": 43,
											"value": "134"
										},
										{
											"begin": 3182,
											"end": 3186,
											"name": "PUSH",
											"source": 43,
											"value": "20"
										},
										{
											"begin": 3171,
											"end": 3180,
											"name": "DUP10",
											"source": 43
										},
										{
											"begin": 3167,
											"end": 3187,
											"name": "ADD",
											"source": 43
										},
										{
											"begin": 3148,
											"end": 3188,
											"name": "PUSH [tag]",
											"source": 43,
											"value": "97"
										},
										{
											"begin": 3148,
											"end": 3188,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 43
										},
										{
											"begin": 3148,
											"end": 3188,
											"name": "tag",
											"source": 43,
											"value": "134"
										},
										{
											"begin": 3148,
											"end": 3188,
											"name": "JUMPDEST",
											"source": 43
										},
										{
											"begin": 3138,
											"end": 3188,
											"name": "SWAP5",
											"source": 43
										},
										{
											"begin": 3138,
											"end": 3188,
											"name": "POP",
											"source": 43
										},
										{
											"begin": 3241,
											"end": 3243,
											"name": "PUSH",
											"source": 43,
											"value": "40"
										},
										{
											"begin": 3230,
											"end": 3239,
											"name": "DUP9",
											"source": 43
										},
										{
											"begin": 3226,
											"end": 3244,
											"name": "ADD",
											"source": 43
										},
										{
											"begin": 3213,
											"end": 3245,
											"name": "CALLDATALOAD",
											"source": 43
										},
										{
											"begin": 3197,
											"end": 3245,
											"name": "SWAP2",
											"source": 43
										},
										{
											"begin": 3197,
											"end": 3245,
											"name": "POP",
											"source": 43
										},
										{
											"begin": 3270,
											"end": 3272,
											"name": "DUP1",
											"source": 43
										},
										{
											"begin": 3260,
											"end": 3268,
											"name": "DUP3",
											"source": 43
										},
										{
											"begin": 3257,
											"end": 3273,
											"name": "GT",
											"source": 43
										},
										{
											"begin": 3254,
											"end": 3290,
											"name": "ISZERO",
											"source": 43
										},
										{
											"begin": 3254,
											"end": 3290,
											"name": "PUSH [tag]",
											"source": 43,
											"value": "135"
										},
										{
											"begin": 3254,
											"end": 3290,
											"name": "JUMPI",
											"source": 43
										},
										{
											"begin": 3286,
											"end": 3287,
											"name": "PUSH",
											"source": 43,
											"value": "0"
										},
										{
											"begin": 3283,
											"end": 3284,
											"name": "DUP1",
											"source": 43
										},
										{
											"begin": 3276,
											"end": 3288,
											"name": "REVERT",
											"source": 43
										},
										{
											"begin": 3254,
											"end": 3290,
											"name": "tag",
											"source": 43,
											"value": "135"
										},
										{
											"begin": 3254,
											"end": 3290,
											"name": "JUMPDEST",
											"source": 43
										},
										{
											"begin": 3324,
											"end": 3332,
											"name": "DUP2",
											"source": 43
										},
										{
											"begin": 3313,
											"end": 3322,
											"name": "DUP9",
											"source": 43
										},
										{
											"begin": 3309,
											"end": 3333,
											"name": "ADD",
											"source": 43
										},
										{
											"begin": 3299,
											"end": 3333,
											"name": "SWAP2",
											"source": 43
										},
										{
											"begin": 3299,
											"end": 3333,
											"name": "POP",
											"source": 43
										},
										{
											"begin": 3371,
											"end": 3378,
											"name": "DUP9",
											"source": 43
										},
										{
											"begin": 3364,
											"end": 3368,
											"name": "PUSH",
											"source": 43,
											"value": "1F"
										},
										{
											"begin": 3360,
											"end": 3362,
											"name": "DUP4",
											"source": 43
										},
										{
											"begin": 3356,
											"end": 3369,
											"name": "ADD",
											"source": 43
										},
										{
											"begin": 3352,
											"end": 3379,
											"name": "SLT",
											"source": 43
										},
										{
											"begin": 3342,
											"end": 3397,
											"name": "PUSH [tag]",
											"source": 43,
											"value": "136"
										},
										{
											"begin": 3342,
											"end": 3397,
											"name": "JUMPI",
											"source": 43
										},
										{
											"begin": 3393,
											"end": 3394,
											"name": "PUSH",
											"source": 43,
											"value": "0"
										},
										{
											"begin": 3390,
											"end": 3391,
											"name": "DUP1",
											"source": 43
										},
										{
											"begin": 3383,
											"end": 3395,
											"name": "REVERT",
											"source": 43
										},
										{
											"begin": 3342,
											"end": 3397,
											"name": "tag",
											"source": 43,
											"value": "136"
										},
										{
											"begin": 3342,
											"end": 3397,
											"name": "JUMPDEST",
											"source": 43
										},
										{
											"begin": 3435,
											"end": 3437,
											"name": "DUP2",
											"source": 43
										},
										{
											"begin": 3422,
											"end": 3438,
											"name": "CALLDATALOAD",
											"source": 43
										},
										{
											"begin": 3463,
											"end": 3465,
											"name": "DUP2",
											"source": 43
										},
										{
											"begin": 3453,
											"end": 3461,
											"name": "DUP2",
											"source": 43
										},
										{
											"begin": 3450,
											"end": 3466,
											"name": "GT",
											"source": 43
										},
										{
											"begin": 3447,
											"end": 3483,
											"name": "ISZERO",
											"source": 43
										},
										{
											"begin": 3447,
											"end": 3483,
											"name": "PUSH [tag]",
											"source": 43,
											"value": "137"
										},
										{
											"begin": 3447,
											"end": 3483,
											"name": "JUMPI",
											"source": 43
										},
										{
											"begin": 3479,
											"end": 3480,
											"name": "PUSH",
											"source": 43,
											"value": "0"
										},
										{
											"begin": 3476,
											"end": 3477,
											"name": "DUP1",
											"source": 43
										},
										{
											"begin": 3469,
											"end": 3481,
											"name": "REVERT",
											"source": 43
										},
										{
											"begin": 3447,
											"end": 3483,
											"name": "tag",
											"source": 43,
											"value": "137"
										},
										{
											"begin": 3447,
											"end": 3483,
											"name": "JUMPDEST",
											"source": 43
										},
										{
											"begin": 3528,
											"end": 3535,
											"name": "DUP10",
											"source": 43
										},
										{
											"begin": 3521,
											"end": 3525,
											"name": "PUSH",
											"source": 43,
											"value": "20"
										},
										{
											"begin": 3510,
											"end": 3518,
											"name": "DUP3",
											"source": 43
										},
										{
											"begin": 3506,
											"end": 3508,
											"name": "DUP6",
											"source": 43
										},
										{
											"begin": 3502,
											"end": 3519,
											"name": "ADD",
											"source": 43
										},
										{
											"begin": 3498,
											"end": 3526,
											"name": "ADD",
											"source": 43
										},
										{
											"begin": 3495,
											"end": 3536,
											"name": "GT",
											"source": 43
										},
										{
											"begin": 3492,
											"end": 3553,
											"name": "ISZERO",
											"source": 43
										},
										{
											"begin": 3492,
											"end": 3553,
											"name": "PUSH [tag]",
											"source": 43,
											"value": "138"
										},
										{
											"begin": 3492,
											"end": 3553,
											"name": "JUMPI",
											"source": 43
										},
										{
											"begin": 3549,
											"end": 3550,
											"name": "PUSH",
											"source": 43,
											"value": "0"
										},
										{
											"begin": 3546,
											"end": 3547,
											"name": "DUP1",
											"source": 43
										},
										{
											"begin": 3539,
											"end": 3551,
											"name": "REVERT",
											"source": 43
										},
										{
											"begin": 3492,
											"end": 3553,
											"name": "tag",
											"source": 43,
											"value": "138"
										},
										{
											"begin": 3492,
											"end": 3553,
											"name": "JUMPDEST",
											"source": 43
										},
										{
											"begin": 2434,
											"end": 3618,
											"name": "SWAP7",
											"source": 43
										},
										{
											"begin": 2434,
											"end": 3618,
											"name": "SWAP10",
											"source": 43
										},
										{
											"begin": 2434,
											"end": 3618,
											"name": "SWAP6",
											"source": 43
										},
										{
											"begin": 2434,
											"end": 3618,
											"name": "SWAP9",
											"source": 43
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2434,
											"end": 3618,
											"name": "SWAP4",
											"source": 43
										},
										{
											"begin": 2434,
											"end": 3618,
											"name": "SWAP7",
											"source": 43
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3580,
											"end": 3584,
											"name": "PUSH",
											"source": 43,
											"value": "20"
										},
										{
											"begin": 3572,
											"end": 3585,
											"name": "ADD",
											"source": 43
										},
										{
											"begin": 3572,
											"end": 3585,
											"name": "SWAP5",
											"source": 43
										},
										{
											"begin": 3604,
											"end": 3612,
											"name": "SWAP4",
											"source": 43
										},
										{
											"begin": 2434,
											"end": 3618,
											"name": "SWAP3",
											"source": 43
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2434,
											"end": 3618,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 43
										},
										{
											"begin": 3623,
											"end": 3809,
											"name": "tag",
											"source": 43,
											"value": "27"
										},
										{
											"begin": 3623,
											"end": 3809,
											"name": "JUMPDEST",
											"source": 43
										},
										{
											"begin": 3682,
											"end": 3688,
											"name": "PUSH",
											"source": 43,
											"value": "0"
										},
										{
											"begin": 3735,
											"end": 3737,
											"name": "PUSH",
											"source": 43,
											"value": "20"
										},
										{
											"begin": 3723,
											"end": 3732,
											"name": "DUP3",
											"source": 43
										},
										{
											"begin": 3714,
											"end": 3721,
											"name": "DUP5",
											"source": 43
										},
										{
											"begin": 3710,
											"end": 3733,
											"name": "SUB",
											"source": 43
										},
										{
											"begin": 3706,
											"end": 3738,
											"name": "SLT",
											"source": 43
										},
										{
											"begin": 3703,
											"end": 3755,
											"name": "ISZERO",
											"source": 43
										},
										{
											"begin": 3703,
											"end": 3755,
											"name": "PUSH [tag]",
											"source": 43,
											"value": "140"
										},
										{
											"begin": 3703,
											"end": 3755,
											"name": "JUMPI",
											"source": 43
										},
										{
											"begin": 3751,
											"end": 3752,
											"name": "PUSH",
											"source": 43,
											"value": "0"
										},
										{
											"begin": 3748,
											"end": 3749,
											"name": "DUP1",
											"source": 43
										},
										{
											"begin": 3741,
											"end": 3753,
											"name": "REVERT",
											"source": 43
										},
										{
											"begin": 3703,
											"end": 3755,
											"name": "tag",
											"source": 43,
											"value": "140"
										},
										{
											"begin": 3703,
											"end": 3755,
											"name": "JUMPDEST",
											"source": 43
										},
										{
											"begin": 3774,
											"end": 3803,
											"name": "PUSH [tag]",
											"source": 43,
											"value": "141"
										},
										{
											"begin": 3793,
											"end": 3802,
											"name": "DUP3",
											"source": 43
										},
										{
											"begin": 3774,
											"end": 3803,
											"name": "PUSH [tag]",
											"source": 43,
											"value": "97"
										},
										{
											"begin": 3774,
											"end": 3803,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 43
										},
										{
											"begin": 3774,
											"end": 3803,
											"name": "tag",
											"source": 43,
											"value": "141"
										},
										{
											"begin": 3774,
											"end": 3803,
											"name": "JUMPDEST",
											"source": 43
										},
										{
											"begin": 3764,
											"end": 3803,
											"name": "SWAP4",
											"source": 43
										},
										{
											"begin": 3623,
											"end": 3809,
											"name": "SWAP3",
											"source": 43
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3623,
											"end": 3809,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 43
										},
										{
											"begin": 3956,
											"end": 4206,
											"name": "tag",
											"source": 43,
											"value": "100"
										},
										{
											"begin": 3956,
											"end": 4206,
											"name": "JUMPDEST",
											"source": 43
										},
										{
											"begin": 4041,
											"end": 4042,
											"name": "PUSH",
											"source": 43,
											"value": "0"
										},
										{
											"begin": 4051,
											"end": 4164,
											"name": "tag",
											"source": 43,
											"value": "144"
										},
										{
											"begin": 4051,
											"end": 4164,
											"name": "JUMPDEST",
											"source": 43
										},
										{
											"begin": 4065,
											"end": 4071,
											"name": "DUP4",
											"source": 43
										},
										{
											"begin": 4062,
											"end": 4063,
											"name": "DUP2",
											"source": 43
										},
										{
											"begin": 4059,
											"end": 4072,
											"name": "LT",
											"source": 43
										},
										{
											"begin": 4051,
											"end": 4164,
											"name": "ISZERO",
											"source": 43
										},
										{
											"begin": 4051,
											"end": 4164,
											"name": "PUSH [tag]",
											"source": 43,
											"value": "146"
										},
										{
											"begin": 4051,
											"end": 4164,
											"name": "JUMPI",
											"source": 43
										},
										{
											"begin": 4141,
											"end": 4152,
											"name": "DUP2",
											"source": 43
										},
										{
											"begin": 4141,
											"end": 4152,
											"name": "DUP2",
											"source": 43
										},
										{
											"begin": 4141,
											"end": 4152,
											"name": "ADD",
											"source": 43
										},
										{
											"begin": 4135,
											"end": 4153,
											"name": "MLOAD",
											"source": 43
										},
										{
											"begin": 4122,
											"end": 4133,
											"name": "DUP4",
											"source": 43
										},
										{
											"begin": 4122,
											"end": 4133,
											"name": "DUP3",
											"source": 43
										},
										{
											"begin": 4122,
											"end": 4133,
											"name": "ADD",
											"source": 43
										},
										{
											"begin": 4115,
											"end": 4154,
											"name": "MSTORE",
											"source": 43
										},
										{
											"begin": 4087,
											"end": 4089,
											"name": "PUSH",
											"source": 43,
											"value": "20"
										},
										{
											"begin": 4080,
											"end": 4090,
											"name": "ADD",
											"source": 43
										},
										{
											"begin": 4051,
											"end": 4164,
											"name": "PUSH [tag]",
											"source": 43,
											"value": "144"
										},
										{
											"begin": 4051,
											"end": 4164,
											"name": "JUMP",
											"source": 43
										},
										{
											"begin": 4051,
											"end": 4164,
											"name": "tag",
											"source": 43,
											"value": "146"
										},
										{
											"begin": 4051,
											"end": 4164,
											"name": "JUMPDEST",
											"source": 43
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4198,
											"end": 4199,
											"name": "PUSH",
											"source": 43,
											"value": "0"
										},
										{
											"begin": 4180,
											"end": 4196,
											"name": "SWAP2",
											"source": 43
										},
										{
											"begin": 4180,
											"end": 4196,
											"name": "ADD",
											"source": 43
										},
										{
											"begin": 4173,
											"end": 4200,
											"name": "MSTORE",
											"source": 43
										},
										{
											"begin": 3956,
											"end": 4206,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 43
										},
										{
											"begin": 4211,
											"end": 4482,
											"name": "tag",
											"source": 43,
											"value": "101"
										},
										{
											"begin": 4211,
											"end": 4482,
											"name": "JUMPDEST",
											"source": 43
										},
										{
											"begin": 4253,
											"end": 4256,
											"name": "PUSH",
											"source": 43,
											"value": "0"
										},
										{
											"begin": 4291,
											"end": 4296,
											"name": "DUP2",
											"source": 43
										},
										{
											"begin": 4285,
											"end": 4297,
											"name": "MLOAD",
											"source": 43
										},
										{
											"begin": 4318,
											"end": 4324,
											"name": "DUP1",
											"source": 43
										},
										{
											"begin": 4313,
											"end": 4316,
											"name": "DUP5",
											"source": 43
										},
										{
											"begin": 4306,
											"end": 4325,
											"name": "MSTORE",
											"source": 43
										},
										{
											"begin": 4334,
											"end": 4410,
											"name": "PUSH [tag]",
											"source": 43,
											"value": "148"
										},
										{
											"begin": 4403,
											"end": 4409,
											"name": "DUP2",
											"source": 43
										},
										{
											"begin": 4396,
											"end": 4400,
											"name": "PUSH",
											"source": 43,
											"value": "20"
										},
										{
											"begin": 4391,
											"end": 4394,
											"name": "DUP7",
											"source": 43
										},
										{
											"begin": 4387,
											"end": 4401,
											"name": "ADD",
											"source": 43
										},
										{
											"begin": 4380,
											"end": 4384,
											"name": "PUSH",
											"source": 43,
											"value": "20"
										},
										{
											"begin": 4373,
											"end": 4378,
											"name": "DUP7",
											"source": 43
										},
										{
											"begin": 4369,
											"end": 4385,
											"name": "ADD",
											"source": 43
										},
										{
											"begin": 4334,
											"end": 4410,
											"name": "PUSH [tag]",
											"source": 43,
											"value": "100"
										},
										{
											"begin": 4334,
											"end": 4410,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 43
										},
										{
											"begin": 4334,
											"end": 4410,
											"name": "tag",
											"source": 43,
											"value": "148"
										},
										{
											"begin": 4334,
											"end": 4410,
											"name": "JUMPDEST",
											"source": 43
										},
										{
											"begin": 4464,
											"end": 4466,
											"name": "PUSH",
											"source": 43,
											"value": "1F"
										},
										{
											"begin": 4443,
											"end": 4458,
											"name": "ADD",
											"source": 43
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 4439,
											"end": 4468,
											"name": "AND",
											"source": 43
										},
										{
											"begin": 4430,
											"end": 4469,
											"name": "SWAP3",
											"source": 43
										},
										{
											"begin": 4430,
											"end": 4469,
											"name": "SWAP1",
											"source": 43
										},
										{
											"begin": 4430,
											"end": 4469,
											"name": "SWAP3",
											"source": 43
										},
										{
											"begin": 4430,
											"end": 4469,
											"name": "ADD",
											"source": 43
										},
										{
											"begin": 4471,
											"end": 4475,
											"name": "PUSH",
											"source": 43,
											"value": "20"
										},
										{
											"begin": 4426,
											"end": 4476,
											"name": "ADD",
											"source": 43
										},
										{
											"begin": 4426,
											"end": 4476,
											"name": "SWAP3",
											"source": 43
										},
										{
											"begin": 4211,
											"end": 4482,
											"name": "SWAP2",
											"source": 43
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4211,
											"end": 4482,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 43
										},
										{
											"begin": 4487,
											"end": 4870,
											"name": "tag",
											"source": 43,
											"value": "31"
										},
										{
											"begin": 4487,
											"end": 4870,
											"name": "JUMPDEST",
											"source": 43
										},
										{
											"begin": 4684,
											"end": 4686,
											"name": "PUSH",
											"source": 43,
											"value": "40"
										},
										{
											"begin": 4673,
											"end": 4682,
											"name": "DUP2",
											"source": 43
										},
										{
											"begin": 4666,
											"end": 4687,
											"name": "MSTORE",
											"source": 43
										},
										{
											"begin": 4647,
											"end": 4651,
											"name": "PUSH",
											"source": 43,
											"value": "0"
										},
										{
											"begin": 4710,
											"end": 4755,
											"name": "PUSH [tag]",
											"source": 43,
											"value": "150"
										},
										{
											"begin": 4751,
											"end": 4753,
											"name": "PUSH",
											"source": 43,
											"value": "40"
										},
										{
											"begin": 4740,
											"end": 4749,
											"name": "DUP4",
											"source": 43
										},
										{
											"begin": 4736,
											"end": 4754,
											"name": "ADD",
											"source": 43
										},
										{
											"begin": 4728,
											"end": 4734,
											"name": "DUP6",
											"source": 43
										},
										{
											"begin": 4710,
											"end": 4755,
											"name": "PUSH [tag]",
											"source": 43,
											"value": "101"
										},
										{
											"begin": 4710,
											"end": 4755,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 43
										},
										{
											"begin": 4710,
											"end": 4755,
											"name": "tag",
											"source": 43,
											"value": "150"
										},
										{
											"begin": 4710,
											"end": 4755,
											"name": "JUMPDEST",
											"source": 43
										},
										{
											"begin": 4803,
											"end": 4812,
											"name": "DUP3",
											"source": 43
										},
										{
											"begin": 4795,
											"end": 4801,
											"name": "DUP2",
											"source": 43
										},
										{
											"begin": 4791,
											"end": 4813,
											"name": "SUB",
											"source": 43
										},
										{
											"begin": 4786,
											"end": 4788,
											"name": "PUSH",
											"source": 43,
											"value": "20"
										},
										{
											"begin": 4775,
											"end": 4784,
											"name": "DUP5",
											"source": 43
										},
										{
											"begin": 4771,
											"end": 4789,
											"name": "ADD",
											"source": 43
										},
										{
											"begin": 4764,
											"end": 4814,
											"name": "MSTORE",
											"source": 43
										},
										{
											"begin": 4831,
											"end": 4864,
											"name": "PUSH [tag]",
											"source": 43,
											"value": "151"
										},
										{
											"begin": 4857,
											"end": 4863,
											"name": "DUP2",
											"source": 43
										},
										{
											"begin": 4849,
											"end": 4855,
											"name": "DUP6",
											"source": 43
										},
										{
											"begin": 4831,
											"end": 4864,
											"name": "PUSH [tag]",
											"source": 43,
											"value": "101"
										},
										{
											"begin": 4831,
											"end": 4864,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 43
										},
										{
											"begin": 4831,
											"end": 4864,
											"name": "tag",
											"source": 43,
											"value": "151"
										},
										{
											"begin": 4831,
											"end": 4864,
											"name": "JUMPDEST",
											"source": 43
										},
										{
											"begin": 4823,
											"end": 4864,
											"name": "SWAP6",
											"source": 43
										},
										{
											"begin": 4487,
											"end": 4870,
											"name": "SWAP5",
											"source": 43
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4487,
											"end": 4870,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 43
										},
										{
											"begin": 5177,
											"end": 5361,
											"name": "tag",
											"source": 43,
											"value": "41"
										},
										{
											"begin": 5177,
											"end": 5361,
											"name": "JUMPDEST",
											"source": 43
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4E487B71"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5226,
											"end": 5227,
											"name": "PUSH",
											"source": 43,
											"value": "0"
										},
										{
											"begin": 5219,
											"end": 5307,
											"name": "MSTORE",
											"source": 43
										},
										{
											"begin": 5326,
											"end": 5330,
											"name": "PUSH",
											"source": 43,
											"value": "32"
										},
										{
											"begin": 5323,
											"end": 5324,
											"name": "PUSH",
											"source": 43,
											"value": "4"
										},
										{
											"begin": 5316,
											"end": 5331,
											"name": "MSTORE",
											"source": 43
										},
										{
											"begin": 5350,
											"end": 5354,
											"name": "PUSH",
											"source": 43,
											"value": "24"
										},
										{
											"begin": 5347,
											"end": 5348,
											"name": "PUSH",
											"source": 43,
											"value": "0"
										},
										{
											"begin": 5340,
											"end": 5355,
											"name": "REVERT",
											"source": 43
										},
										{
											"begin": 5721,
											"end": 5992,
											"name": "tag",
											"source": 43,
											"value": "48"
										},
										{
											"begin": 5721,
											"end": 5992,
											"name": "JUMPDEST",
											"source": 43
										},
										{
											"begin": 5904,
											"end": 5910,
											"name": "DUP2",
											"source": 43
										},
										{
											"begin": 5896,
											"end": 5902,
											"name": "DUP4",
											"source": 43
										},
										{
											"begin": 5891,
											"end": 5894,
											"name": "DUP3",
											"source": 43
										},
										{
											"begin": 5878,
											"end": 5911,
											"name": "CALLDATACOPY",
											"source": 43
										},
										{
											"begin": 5860,
											"end": 5863,
											"name": "PUSH",
											"source": 43,
											"value": "0"
										},
										{
											"begin": 5930,
											"end": 5946,
											"name": "SWAP2",
											"source": 43
										},
										{
											"begin": 5930,
											"end": 5946,
											"name": "ADD",
											"source": 43
										},
										{
											"begin": 5955,
											"end": 5968,
											"name": "SWAP1",
											"source": 43
										},
										{
											"begin": 5955,
											"end": 5968,
											"name": "DUP2",
											"source": 43
										},
										{
											"begin": 5955,
											"end": 5968,
											"name": "MSTORE",
											"source": 43
										},
										{
											"begin": 5930,
											"end": 5946,
											"name": "SWAP2",
											"source": 43
										},
										{
											"begin": 5721,
											"end": 5992,
											"name": "SWAP1",
											"source": 43
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5721,
											"end": 5992,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 43
										},
										{
											"begin": 5997,
											"end": 6216,
											"name": "tag",
											"source": 43,
											"value": "102"
										},
										{
											"begin": 5997,
											"end": 6216,
											"name": "JUMPDEST",
											"source": 43
										},
										{
											"begin": 6064,
											"end": 6084,
											"name": "DUP1",
											"source": 43
										},
										{
											"begin": 6064,
											"end": 6084,
											"name": "CALLDATALOAD",
											"source": 43
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 6113,
											"end": 6191,
											"name": "DUP2",
											"source": 43
										},
										{
											"begin": 6113,
											"end": 6191,
											"name": "AND",
											"source": 43
										},
										{
											"begin": 6103,
											"end": 6192,
											"name": "DUP2",
											"source": 43
										},
										{
											"begin": 6103,
											"end": 6192,
											"name": "EQ",
											"source": 43
										},
										{
											"begin": 6093,
											"end": 6210,
											"name": "PUSH [tag]",
											"source": 43,
											"value": "122"
										},
										{
											"begin": 6093,
											"end": 6210,
											"name": "JUMPI",
											"source": 43
										},
										{
											"begin": 6206,
											"end": 6207,
											"name": "PUSH",
											"source": 43,
											"value": "0"
										},
										{
											"begin": 6203,
											"end": 6204,
											"name": "DUP1",
											"source": 43
										},
										{
											"begin": 6196,
											"end": 6208,
											"name": "REVERT",
											"source": 43
										},
										{
											"begin": 6221,
											"end": 6405,
											"name": "tag",
											"source": 43,
											"value": "59"
										},
										{
											"begin": 6221,
											"end": 6405,
											"name": "JUMPDEST",
											"source": 43
										},
										{
											"begin": 6279,
											"end": 6285,
											"name": "PUSH",
											"source": 43,
											"value": "0"
										},
										{
											"begin": 6332,
											"end": 6334,
											"name": "PUSH",
											"source": 43,
											"value": "20"
										},
										{
											"begin": 6320,
											"end": 6329,
											"name": "DUP3",
											"source": 43
										},
										{
											"begin": 6311,
											"end": 6318,
											"name": "DUP5",
											"source": 43
										},
										{
											"begin": 6307,
											"end": 6330,
											"name": "SUB",
											"source": 43
										},
										{
											"begin": 6303,
											"end": 6335,
											"name": "SLT",
											"source": 43
										},
										{
											"begin": 6300,
											"end": 6352,
											"name": "ISZERO",
											"source": 43
										},
										{
											"begin": 6300,
											"end": 6352,
											"name": "PUSH [tag]",
											"source": 43,
											"value": "159"
										},
										{
											"begin": 6300,
											"end": 6352,
											"name": "JUMPI",
											"source": 43
										},
										{
											"begin": 6348,
											"end": 6349,
											"name": "PUSH",
											"source": 43,
											"value": "0"
										},
										{
											"begin": 6345,
											"end": 6346,
											"name": "DUP1",
											"source": 43
										},
										{
											"begin": 6338,
											"end": 6350,
											"name": "REVERT",
											"source": 43
										},
										{
											"begin": 6300,
											"end": 6352,
											"name": "tag",
											"source": 43,
											"value": "159"
										},
										{
											"begin": 6300,
											"end": 6352,
											"name": "JUMPDEST",
											"source": 43
										},
										{
											"begin": 6371,
											"end": 6399,
											"name": "PUSH [tag]",
											"source": 43,
											"value": "141"
										},
										{
											"begin": 6389,
											"end": 6398,
											"name": "DUP3",
											"source": 43
										},
										{
											"begin": 6371,
											"end": 6399,
											"name": "PUSH [tag]",
											"source": 43,
											"value": "102"
										},
										{
											"begin": 6371,
											"end": 6399,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 43
										},
										{
											"begin": 6599,
											"end": 6898,
											"name": "tag",
											"source": 43,
											"value": "103"
										},
										{
											"begin": 6599,
											"end": 6898,
											"name": "JUMPDEST",
											"source": 43
										},
										{
											"begin": 6685,
											"end": 6686,
											"name": "PUSH",
											"source": 43,
											"value": "3"
										},
										{
											"begin": 6678,
											"end": 6683,
											"name": "DUP2",
											"source": 43
										},
										{
											"begin": 6675,
											"end": 6687,
											"name": "LT",
											"source": 43
										},
										{
											"begin": 6665,
											"end": 6865,
											"name": "PUSH [tag]",
											"source": 43,
											"value": "163"
										},
										{
											"begin": 6665,
											"end": 6865,
											"name": "JUMPI",
											"source": 43
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4E487B71"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6718,
											"end": 6719,
											"name": "PUSH",
											"source": 43,
											"value": "0"
										},
										{
											"begin": 6711,
											"end": 6799,
											"name": "MSTORE",
											"source": 43
										},
										{
											"begin": 6822,
											"end": 6826,
											"name": "PUSH",
											"source": 43,
											"value": "21"
										},
										{
											"begin": 6819,
											"end": 6820,
											"name": "PUSH",
											"source": 43,
											"value": "4"
										},
										{
											"begin": 6812,
											"end": 6827,
											"name": "MSTORE",
											"source": 43
										},
										{
											"begin": 6850,
											"end": 6854,
											"name": "PUSH",
											"source": 43,
											"value": "24"
										},
										{
											"begin": 6847,
											"end": 6848,
											"name": "PUSH",
											"source": 43,
											"value": "0"
										},
										{
											"begin": 6840,
											"end": 6855,
											"name": "REVERT",
											"source": 43
										},
										{
											"begin": 6665,
											"end": 6865,
											"name": "tag",
											"source": 43,
											"value": "163"
										},
										{
											"begin": 6665,
											"end": 6865,
											"name": "JUMPDEST",
											"source": 43
										},
										{
											"begin": 6874,
											"end": 6892,
											"name": "SWAP1",
											"source": 43
										},
										{
											"begin": 6874,
											"end": 6892,
											"name": "MSTORE",
											"source": 43
										},
										{
											"begin": 6599,
											"end": 6898,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 43
										},
										{
											"begin": 6903,
											"end": 7377,
											"name": "tag",
											"source": 43,
											"value": "104"
										},
										{
											"begin": 6903,
											"end": 7377,
											"name": "JUMPDEST",
											"source": 43
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6990,
											"end": 7015,
											"name": "PUSH [tag]",
											"source": 43,
											"value": "165"
										},
										{
											"begin": 7009,
											"end": 7014,
											"name": "DUP3",
											"source": 43
										},
										{
											"begin": 6990,
											"end": 7015,
											"name": "PUSH [tag]",
											"source": 43,
											"value": "97"
										},
										{
											"begin": 6990,
											"end": 7015,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 43
										},
										{
											"begin": 6990,
											"end": 7015,
											"name": "tag",
											"source": 43,
											"value": "165"
										},
										{
											"begin": 6990,
											"end": 7015,
											"name": "JUMPDEST",
											"source": 43
										},
										{
											"begin": 6986,
											"end": 7060,
											"name": "AND",
											"source": 43
										},
										{
											"begin": 6981,
											"end": 6984,
											"name": "DUP3",
											"source": 43
										},
										{
											"begin": 6974,
											"end": 7061,
											"name": "MSTORE",
											"source": 43
										},
										{
											"begin": 7109,
											"end": 7113,
											"name": "PUSH",
											"source": 43,
											"value": "20"
										},
										{
											"begin": 7102,
											"end": 7107,
											"name": "DUP2",
											"source": 43
										},
										{
											"begin": 7098,
											"end": 7114,
											"name": "ADD",
											"source": 43
										},
										{
											"begin": 7085,
											"end": 7115,
											"name": "CALLDATALOAD",
											"source": 43
										},
										{
											"begin": 7146,
											"end": 7147,
											"name": "PUSH",
											"source": 43,
											"value": "3"
										},
										{
											"begin": 7137,
											"end": 7144,
											"name": "DUP2",
											"source": 43
										},
										{
											"begin": 7134,
											"end": 7148,
											"name": "LT",
											"source": 43
										},
										{
											"begin": 7124,
											"end": 7166,
											"name": "PUSH [tag]",
											"source": 43,
											"value": "166"
										},
										{
											"begin": 7124,
											"end": 7166,
											"name": "JUMPI",
											"source": 43
										},
										{
											"begin": 7162,
											"end": 7163,
											"name": "PUSH",
											"source": 43,
											"value": "0"
										},
										{
											"begin": 7159,
											"end": 7160,
											"name": "DUP1",
											"source": 43
										},
										{
											"begin": 7152,
											"end": 7164,
											"name": "REVERT",
											"source": 43
										},
										{
											"begin": 7124,
											"end": 7166,
											"name": "tag",
											"source": 43,
											"value": "166"
										},
										{
											"begin": 7124,
											"end": 7166,
											"name": "JUMPDEST",
											"source": 43
										},
										{
											"begin": 7175,
											"end": 7230,
											"name": "PUSH [tag]",
											"source": 43,
											"value": "167"
										},
										{
											"begin": 7224,
											"end": 7228,
											"name": "PUSH",
											"source": 43,
											"value": "20"
										},
										{
											"begin": 7219,
											"end": 7222,
											"name": "DUP5",
											"source": 43
										},
										{
											"begin": 7215,
											"end": 7229,
											"name": "ADD",
											"source": 43
										},
										{
											"begin": 7206,
											"end": 7213,
											"name": "DUP3",
											"source": 43
										},
										{
											"begin": 7175,
											"end": 7230,
											"name": "PUSH [tag]",
											"source": 43,
											"value": "103"
										},
										{
											"begin": 7175,
											"end": 7230,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 43
										},
										{
											"begin": 7175,
											"end": 7230,
											"name": "tag",
											"source": 43,
											"value": "167"
										},
										{
											"begin": 7175,
											"end": 7230,
											"name": "JUMPDEST",
											"source": 43
										},
										{
											"begin": 7175,
											"end": 7230,
											"name": "POP",
											"source": 43
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 7266,
											"end": 7301,
											"name": "PUSH [tag]",
											"source": 43,
											"value": "168"
										},
										{
											"begin": 7295,
											"end": 7299,
											"name": "PUSH",
											"source": 43,
											"value": "40"
										},
										{
											"begin": 7288,
											"end": 7293,
											"name": "DUP4",
											"source": 43
										},
										{
											"begin": 7284,
											"end": 7300,
											"name": "ADD",
											"source": 43
										},
										{
											"begin": 7266,
											"end": 7301,
											"name": "PUSH [tag]",
											"source": 43,
											"value": "102"
										},
										{
											"begin": 7266,
											"end": 7301,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 43
										},
										{
											"begin": 7266,
											"end": 7301,
											"name": "tag",
											"source": 43,
											"value": "168"
										},
										{
											"begin": 7266,
											"end": 7301,
											"name": "JUMPDEST",
											"source": 43
										},
										{
											"begin": 7262,
											"end": 7370,
											"name": "AND",
											"source": 43
										},
										{
											"begin": 7255,
											"end": 7259,
											"name": "PUSH",
											"source": 43,
											"value": "40"
										},
										{
											"begin": 7250,
											"end": 7253,
											"name": "DUP4",
											"source": 43
										},
										{
											"begin": 7246,
											"end": 7260,
											"name": "ADD",
											"source": 43
										},
										{
											"begin": 7239,
											"end": 7371,
											"name": "MSTORE",
											"source": 43
										},
										{
											"begin": 6903,
											"end": 7377,
											"name": "POP",
											"source": 43
										},
										{
											"begin": 6903,
											"end": 7377,
											"name": "POP",
											"source": 43
										},
										{
											"begin": 6903,
											"end": 7377,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 43
										},
										{
											"begin": 7382,
											"end": 7648,
											"name": "tag",
											"source": 43,
											"value": "105"
										},
										{
											"begin": 7382,
											"end": 7648,
											"name": "JUMPDEST",
											"source": 43
										},
										{
											"begin": 7470,
											"end": 7476,
											"name": "DUP2",
											"source": 43
										},
										{
											"begin": 7465,
											"end": 7468,
											"name": "DUP4",
											"source": 43
										},
										{
											"begin": 7458,
											"end": 7477,
											"name": "MSTORE",
											"source": 43
										},
										{
											"begin": 7522,
											"end": 7528,
											"name": "DUP2",
											"source": 43
										},
										{
											"begin": 7515,
											"end": 7520,
											"name": "DUP2",
											"source": 43
										},
										{
											"begin": 7508,
											"end": 7512,
											"name": "PUSH",
											"source": 43,
											"value": "20"
										},
										{
											"begin": 7503,
											"end": 7506,
											"name": "DUP6",
											"source": 43
										},
										{
											"begin": 7499,
											"end": 7513,
											"name": "ADD",
											"source": 43
										},
										{
											"begin": 7486,
											"end": 7529,
											"name": "CALLDATACOPY",
											"source": 43
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7574,
											"end": 7575,
											"name": "PUSH",
											"source": 43,
											"value": "0"
										},
										{
											"begin": 7549,
											"end": 7565,
											"name": "DUP3",
											"source": 43
										},
										{
											"begin": 7549,
											"end": 7565,
											"name": "DUP3",
											"source": 43
										},
										{
											"begin": 7549,
											"end": 7565,
											"name": "ADD",
											"source": 43
										},
										{
											"begin": 7567,
											"end": 7571,
											"name": "PUSH",
											"source": 43,
											"value": "20"
										},
										{
											"begin": 7545,
											"end": 7572,
											"name": "SWAP1",
											"source": 43
										},
										{
											"begin": 7545,
											"end": 7572,
											"name": "DUP2",
											"source": 43
										},
										{
											"begin": 7545,
											"end": 7572,
											"name": "ADD",
											"source": 43
										},
										{
											"begin": 7538,
											"end": 7576,
											"name": "SWAP2",
											"source": 43
										},
										{
											"begin": 7538,
											"end": 7576,
											"name": "SWAP1",
											"source": 43
										},
										{
											"begin": 7538,
											"end": 7576,
											"name": "SWAP2",
											"source": 43
										},
										{
											"begin": 7538,
											"end": 7576,
											"name": "MSTORE",
											"source": 43
										},
										{
											"begin": 7630,
											"end": 7632,
											"name": "PUSH",
											"source": 43,
											"value": "1F"
										},
										{
											"begin": 7609,
											"end": 7624,
											"name": "SWAP1",
											"source": 43
										},
										{
											"begin": 7609,
											"end": 7624,
											"name": "SWAP2",
											"source": 43
										},
										{
											"begin": 7609,
											"end": 7624,
											"name": "ADD",
											"source": 43
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 7605,
											"end": 7634,
											"name": "AND",
											"source": 43
										},
										{
											"begin": 7596,
											"end": 7635,
											"name": "SWAP1",
											"source": 43
										},
										{
											"begin": 7596,
											"end": 7635,
											"name": "SWAP2",
											"source": 43
										},
										{
											"begin": 7596,
											"end": 7635,
											"name": "ADD",
											"source": 43
										},
										{
											"begin": 7592,
											"end": 7642,
											"name": "ADD",
											"source": 43
										},
										{
											"begin": 7592,
											"end": 7642,
											"name": "SWAP1",
											"source": 43
										},
										{
											"begin": 7382,
											"end": 7648,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 43
										},
										{
											"begin": 7653,
											"end": 8174,
											"name": "tag",
											"source": 43,
											"value": "63"
										},
										{
											"begin": 7653,
											"end": 8174,
											"name": "JUMPDEST",
											"source": 43
										},
										{
											"begin": 7902,
											"end": 7956,
											"name": "PUSH [tag]",
											"source": 43,
											"value": "171"
										},
										{
											"begin": 7946,
											"end": 7955,
											"name": "DUP2",
											"source": 43
										},
										{
											"begin": 7938,
											"end": 7944,
											"name": "DUP7",
											"source": 43
										},
										{
											"begin": 7902,
											"end": 7956,
											"name": "PUSH [tag]",
											"source": 43,
											"value": "104"
										},
										{
											"begin": 7902,
											"end": 7956,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 43
										},
										{
											"begin": 7902,
											"end": 7956,
											"name": "tag",
											"source": 43,
											"value": "171"
										},
										{
											"begin": 7902,
											"end": 7956,
											"name": "JUMPDEST",
											"source": 43
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7996,
											"end": 8002,
											"name": "DUP5",
											"source": 43
										},
										{
											"begin": 7992,
											"end": 8047,
											"name": "AND",
											"source": 43
										},
										{
											"begin": 7987,
											"end": 7989,
											"name": "PUSH",
											"source": 43,
											"value": "60"
										},
										{
											"begin": 7976,
											"end": 7985,
											"name": "DUP3",
											"source": 43
										},
										{
											"begin": 7972,
											"end": 7990,
											"name": "ADD",
											"source": 43
										},
										{
											"begin": 7965,
											"end": 8048,
											"name": "MSTORE",
											"source": 43
										},
										{
											"begin": 8085,
											"end": 8088,
											"name": "PUSH",
											"source": 43,
											"value": "A0"
										},
										{
											"begin": 8079,
											"end": 8082,
											"name": "PUSH",
											"source": 43,
											"value": "80"
										},
										{
											"begin": 8068,
											"end": 8077,
											"name": "DUP3",
											"source": 43
										},
										{
											"begin": 8064,
											"end": 8083,
											"name": "ADD",
											"source": 43
										},
										{
											"begin": 8057,
											"end": 8089,
											"name": "MSTORE",
											"source": 43
										},
										{
											"begin": 7883,
											"end": 7887,
											"name": "PUSH",
											"source": 43,
											"value": "0"
										},
										{
											"begin": 8106,
											"end": 8168,
											"name": "PUSH [tag]",
											"source": 43,
											"value": "172"
										},
										{
											"begin": 8163,
											"end": 8166,
											"name": "PUSH",
											"source": 43,
											"value": "A0"
										},
										{
											"begin": 8152,
											"end": 8161,
											"name": "DUP4",
											"source": 43
										},
										{
											"begin": 8148,
											"end": 8167,
											"name": "ADD",
											"source": 43
										},
										{
											"begin": 8140,
											"end": 8146,
											"name": "DUP5",
											"source": 43
										},
										{
											"begin": 8132,
											"end": 8138,
											"name": "DUP7",
											"source": 43
										},
										{
											"begin": 8106,
											"end": 8168,
											"name": "PUSH [tag]",
											"source": 43,
											"value": "105"
										},
										{
											"begin": 8106,
											"end": 8168,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 43
										},
										{
											"begin": 8106,
											"end": 8168,
											"name": "tag",
											"source": 43,
											"value": "172"
										},
										{
											"begin": 8106,
											"end": 8168,
											"name": "JUMPDEST",
											"source": 43
										},
										{
											"begin": 8098,
											"end": 8168,
											"name": "SWAP7",
											"source": 43
										},
										{
											"begin": 7653,
											"end": 8174,
											"name": "SWAP6",
											"source": 43
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7653,
											"end": 8174,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 43
										},
										{
											"begin": 8179,
											"end": 8609,
											"name": "tag",
											"source": 43,
											"value": "65"
										},
										{
											"begin": 8179,
											"end": 8609,
											"name": "JUMPDEST",
											"source": 43
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 8368,
											"end": 8374,
											"name": "DUP4",
											"source": 43
										},
										{
											"begin": 8364,
											"end": 8443,
											"name": "AND",
											"source": 43
										},
										{
											"begin": 8359,
											"end": 8362,
											"name": "DUP2",
											"source": 43
										},
										{
											"begin": 8352,
											"end": 8444,
											"name": "MSTORE",
											"source": 43
										},
										{
											"begin": 8334,
											"end": 8337,
											"name": "PUSH",
											"source": 43,
											"value": "0"
										},
										{
											"begin": 8473,
											"end": 8479,
											"name": "DUP3",
											"source": 43
										},
										{
											"begin": 8467,
											"end": 8480,
											"name": "MLOAD",
											"source": 43
										},
										{
											"begin": 8489,
											"end": 8563,
											"name": "PUSH [tag]",
											"source": 43,
											"value": "174"
										},
										{
											"begin": 8556,
											"end": 8562,
											"name": "DUP2",
											"source": 43
										},
										{
											"begin": 8552,
											"end": 8553,
											"name": "PUSH",
											"source": 43,
											"value": "4"
										},
										{
											"begin": 8547,
											"end": 8550,
											"name": "DUP6",
											"source": 43
										},
										{
											"begin": 8543,
											"end": 8554,
											"name": "ADD",
											"source": 43
										},
										{
											"begin": 8536,
											"end": 8540,
											"name": "PUSH",
											"source": 43,
											"value": "20"
										},
										{
											"begin": 8528,
											"end": 8534,
											"name": "DUP8",
											"source": 43
										},
										{
											"begin": 8524,
											"end": 8541,
											"name": "ADD",
											"source": 43
										},
										{
											"begin": 8489,
											"end": 8563,
											"name": "PUSH [tag]",
											"source": 43,
											"value": "100"
										},
										{
											"begin": 8489,
											"end": 8563,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 43
										},
										{
											"begin": 8489,
											"end": 8563,
											"name": "tag",
											"source": 43,
											"value": "174"
										},
										{
											"begin": 8489,
											"end": 8563,
											"name": "JUMPDEST",
											"source": 43
										},
										{
											"begin": 8583,
											"end": 8599,
											"name": "SWAP2",
											"source": 43
										},
										{
											"begin": 8583,
											"end": 8599,
											"name": "SWAP1",
											"source": 43
										},
										{
											"begin": 8583,
											"end": 8599,
											"name": "SWAP2",
											"source": 43
										},
										{
											"begin": 8583,
											"end": 8599,
											"name": "ADD",
											"source": 43
										},
										{
											"begin": 8601,
											"end": 8602,
											"name": "PUSH",
											"source": 43,
											"value": "4"
										},
										{
											"begin": 8579,
											"end": 8603,
											"name": "ADD",
											"source": 43
										},
										{
											"begin": 8579,
											"end": 8603,
											"name": "SWAP4",
											"source": 43
										},
										{
											"begin": 8179,
											"end": 8609,
											"name": "SWAP3",
											"source": 43
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8179,
											"end": 8609,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 43
										},
										{
											"begin": 8614,
											"end": 8901,
											"name": "tag",
											"source": 43,
											"value": "67"
										},
										{
											"begin": 8614,
											"end": 8901,
											"name": "JUMPDEST",
											"source": 43
										},
										{
											"begin": 8743,
											"end": 8746,
											"name": "PUSH",
											"source": 43,
											"value": "0"
										},
										{
											"begin": 8781,
											"end": 8787,
											"name": "DUP3",
											"source": 43
										},
										{
											"begin": 8775,
											"end": 8788,
											"name": "MLOAD",
											"source": 43
										},
										{
											"begin": 8797,
											"end": 8863,
											"name": "PUSH [tag]",
											"source": 43,
											"value": "176"
										},
										{
											"begin": 8856,
											"end": 8862,
											"name": "DUP2",
											"source": 43
										},
										{
											"begin": 8851,
											"end": 8854,
											"name": "DUP5",
											"source": 43
										},
										{
											"begin": 8844,
											"end": 8848,
											"name": "PUSH",
											"source": 43,
											"value": "20"
										},
										{
											"begin": 8836,
											"end": 8842,
											"name": "DUP8",
											"source": 43
										},
										{
											"begin": 8832,
											"end": 8849,
											"name": "ADD",
											"source": 43
										},
										{
											"begin": 8797,
											"end": 8863,
											"name": "PUSH [tag]",
											"source": 43,
											"value": "100"
										},
										{
											"begin": 8797,
											"end": 8863,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 43
										},
										{
											"begin": 8797,
											"end": 8863,
											"name": "tag",
											"source": 43,
											"value": "176"
										},
										{
											"begin": 8797,
											"end": 8863,
											"name": "JUMPDEST",
											"source": 43
										},
										{
											"begin": 8879,
											"end": 8895,
											"name": "SWAP2",
											"source": 43
										},
										{
											"begin": 8879,
											"end": 8895,
											"name": "SWAP1",
											"source": 43
										},
										{
											"begin": 8879,
											"end": 8895,
											"name": "SWAP2",
											"source": 43
										},
										{
											"begin": 8879,
											"end": 8895,
											"name": "ADD",
											"source": 43
										},
										{
											"begin": 8879,
											"end": 8895,
											"name": "SWAP3",
											"source": 43
										},
										{
											"begin": 8614,
											"end": 8901,
											"name": "SWAP2",
											"source": 43
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8614,
											"end": 8901,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 43
										},
										{
											"begin": 9260,
											"end": 10211,
											"name": "tag",
											"source": 43,
											"value": "75"
										},
										{
											"begin": 9260,
											"end": 10211,
											"name": "JUMPDEST",
											"source": 43
										},
										{
											"begin": 9579,
											"end": 9581,
											"name": "PUSH",
											"source": 43,
											"value": "60"
										},
										{
											"begin": 9631,
											"end": 9652,
											"name": "DUP1",
											"source": 43
										},
										{
											"begin": 9631,
											"end": 9652,
											"name": "DUP3",
											"source": 43
										},
										{
											"begin": 9631,
											"end": 9652,
											"name": "MSTORE",
											"source": 43
										},
										{
											"begin": 9604,
											"end": 9622,
											"name": "DUP2",
											"source": 43
										},
										{
											"begin": 9604,
											"end": 9622,
											"name": "DUP2",
											"source": 43
										},
										{
											"begin": 9604,
											"end": 9622,
											"name": "ADD",
											"source": 43
										},
										{
											"begin": 9687,
											"end": 9709,
											"name": "DUP7",
											"source": 43
										},
										{
											"begin": 9687,
											"end": 9709,
											"name": "SWAP1",
											"source": 43
										},
										{
											"begin": 9687,
											"end": 9709,
											"name": "MSTORE",
											"source": 43
										},
										{
											"begin": 9550,
											"end": 9554,
											"name": "PUSH",
											"source": 43,
											"value": "0"
										},
										{
											"begin": 9550,
											"end": 9554,
											"name": "SWAP1",
											"source": 43
										},
										{
											"begin": 9767,
											"end": 9773,
											"name": "DUP8",
											"source": 43
										},
										{
											"begin": 9740,
											"end": 9743,
											"name": "PUSH",
											"source": 43,
											"value": "80"
										},
										{
											"begin": 9725,
											"end": 9744,
											"name": "DUP5",
											"source": 43
										},
										{
											"begin": 9725,
											"end": 9744,
											"name": "ADD",
											"source": 43
										},
										{
											"begin": 9550,
											"end": 9554,
											"name": "DUP4",
											"source": 43
										},
										{
											"begin": 9801,
											"end": 9992,
											"name": "tag",
											"source": 43,
											"value": "179"
										},
										{
											"begin": 9801,
											"end": 9992,
											"name": "JUMPDEST",
											"source": 43
										},
										{
											"begin": 9815,
											"end": 9821,
											"name": "DUP10",
											"source": 43
										},
										{
											"begin": 9812,
											"end": 9813,
											"name": "DUP2",
											"source": 43
										},
										{
											"begin": 9809,
											"end": 9822,
											"name": "LT",
											"source": 43
										},
										{
											"begin": 9801,
											"end": 9992,
											"name": "ISZERO",
											"source": 43
										},
										{
											"begin": 9801,
											"end": 9992,
											"name": "PUSH [tag]",
											"source": 43,
											"value": "181"
										},
										{
											"begin": 9801,
											"end": 9992,
											"name": "JUMPI",
											"source": 43
										},
										{
											"begin": 9864,
											"end": 9912,
											"name": "PUSH [tag]",
											"source": 43,
											"value": "182"
										},
										{
											"begin": 9908,
											"end": 9911,
											"name": "DUP3",
											"source": 43
										},
										{
											"begin": 9900,
											"end": 9906,
											"name": "DUP5",
											"source": 43
										},
										{
											"begin": 9864,
											"end": 9912,
											"name": "PUSH [tag]",
											"source": 43,
											"value": "104"
										},
										{
											"begin": 9864,
											"end": 9912,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 43
										},
										{
											"begin": 9864,
											"end": 9912,
											"name": "tag",
											"source": 43,
											"value": "182"
										},
										{
											"begin": 9864,
											"end": 9912,
											"name": "JUMPDEST",
											"source": 43
										},
										{
											"begin": 9967,
											"end": 9982,
											"name": "SWAP2",
											"source": 43
										},
										{
											"begin": 9967,
											"end": 9982,
											"name": "DUP4",
											"source": 43
										},
										{
											"begin": 9967,
											"end": 9982,
											"name": "ADD",
											"source": 43
										},
										{
											"begin": 9967,
											"end": 9982,
											"name": "SWAP2",
											"source": 43
										},
										{
											"begin": 9932,
											"end": 9944,
											"name": "SWAP1",
											"source": 43
										},
										{
											"begin": 9932,
											"end": 9944,
											"name": "DUP4",
											"source": 43
										},
										{
											"begin": 9932,
											"end": 9944,
											"name": "ADD",
											"source": 43
										},
										{
											"begin": 9932,
											"end": 9944,
											"name": "SWAP1",
											"source": 43
										},
										{
											"begin": 9837,
											"end": 9838,
											"name": "PUSH",
											"source": 43,
											"value": "1"
										},
										{
											"begin": 9830,
											"end": 9839,
											"name": "ADD",
											"source": 43
										},
										{
											"begin": 9801,
											"end": 9992,
											"name": "PUSH [tag]",
											"source": 43,
											"value": "179"
										},
										{
											"begin": 9801,
											"end": 9992,
											"name": "JUMP",
											"source": 43
										},
										{
											"begin": 9801,
											"end": 9992,
											"name": "tag",
											"source": 43,
											"value": "181"
										},
										{
											"begin": 9801,
											"end": 9992,
											"name": "JUMPDEST",
											"source": 43
										},
										{
											"begin": 9805,
											"end": 9808,
											"name": "POP",
											"source": 43
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10034,
											"end": 10040,
											"name": "DUP9",
											"source": 43
										},
										{
											"begin": 10030,
											"end": 10085,
											"name": "AND",
											"source": 43
										},
										{
											"begin": 10023,
											"end": 10027,
											"name": "PUSH",
											"source": 43,
											"value": "20"
										},
										{
											"begin": 10012,
											"end": 10021,
											"name": "DUP7",
											"source": 43
										},
										{
											"begin": 10008,
											"end": 10028,
											"name": "ADD",
											"source": 43
										},
										{
											"begin": 10001,
											"end": 10086,
											"name": "MSTORE",
											"source": 43
										},
										{
											"begin": 10131,
											"end": 10140,
											"name": "DUP5",
											"source": 43
										},
										{
											"begin": 10126,
											"end": 10129,
											"name": "DUP2",
											"source": 43
										},
										{
											"begin": 10122,
											"end": 10141,
											"name": "SUB",
											"source": 43
										},
										{
											"begin": 10117,
											"end": 10119,
											"name": "PUSH",
											"source": 43,
											"value": "40"
										},
										{
											"begin": 10106,
											"end": 10115,
											"name": "DUP7",
											"source": 43
										},
										{
											"begin": 10102,
											"end": 10120,
											"name": "ADD",
											"source": 43
										},
										{
											"begin": 10095,
											"end": 10142,
											"name": "MSTORE",
											"source": 43
										},
										{
											"begin": 10159,
											"end": 10205,
											"name": "PUSH [tag]",
											"source": 43,
											"value": "183"
										},
										{
											"begin": 10201,
											"end": 10204,
											"name": "DUP2",
											"source": 43
										},
										{
											"begin": 10193,
											"end": 10199,
											"name": "DUP8",
											"source": 43
										},
										{
											"begin": 10185,
											"end": 10191,
											"name": "DUP10",
											"source": 43
										},
										{
											"begin": 10159,
											"end": 10205,
											"name": "PUSH [tag]",
											"source": 43,
											"value": "105"
										},
										{
											"begin": 10159,
											"end": 10205,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 43
										},
										{
											"begin": 10159,
											"end": 10205,
											"name": "tag",
											"source": 43,
											"value": "183"
										},
										{
											"begin": 10159,
											"end": 10205,
											"name": "JUMPDEST",
											"source": 43
										},
										{
											"begin": 10151,
											"end": 10205,
											"name": "SWAP11",
											"source": 43
										},
										{
											"begin": 9260,
											"end": 10211,
											"name": "SWAP10",
											"source": 43
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9260,
											"end": 10211,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 43
										},
										{
											"begin": 10216,
											"end": 11562,
											"name": "tag",
											"source": 43,
											"value": "90"
										},
										{
											"begin": 10216,
											"end": 11562,
											"name": "JUMPDEST",
											"source": 43
										},
										{
											"begin": 10567,
											"end": 10569,
											"name": "PUSH",
											"source": 43,
											"value": "60"
										},
										{
											"begin": 10619,
											"end": 10640,
											"name": "DUP1",
											"source": 43
										},
										{
											"begin": 10619,
											"end": 10640,
											"name": "DUP3",
											"source": 43
										},
										{
											"begin": 10619,
											"end": 10640,
											"name": "MSTORE",
											"source": 43
										},
										{
											"begin": 10689,
											"end": 10702,
											"name": "DUP4",
											"source": 43
										},
										{
											"begin": 10689,
											"end": 10702,
											"name": "MLOAD",
											"source": 43
										},
										{
											"begin": 10592,
											"end": 10610,
											"name": "DUP3",
											"source": 43
										},
										{
											"begin": 10592,
											"end": 10610,
											"name": "DUP3",
											"source": 43
										},
										{
											"begin": 10592,
											"end": 10610,
											"name": "ADD",
											"source": 43
										},
										{
											"begin": 10711,
											"end": 10733,
											"name": "DUP2",
											"source": 43
										},
										{
											"begin": 10711,
											"end": 10733,
											"name": "SWAP1",
											"source": 43
										},
										{
											"begin": 10711,
											"end": 10733,
											"name": "MSTORE",
											"source": 43
										},
										{
											"begin": 10538,
											"end": 10542,
											"name": "PUSH",
											"source": 43,
											"value": "0"
										},
										{
											"begin": 10538,
											"end": 10542,
											"name": "SWAP2",
											"source": 43
										},
										{
											"begin": 10567,
											"end": 10569,
											"name": "SWAP1",
											"source": 43
										},
										{
											"begin": 10787,
											"end": 10791,
											"name": "PUSH",
											"source": 43,
											"value": "20"
										},
										{
											"begin": 10787,
											"end": 10791,
											"name": "SWAP1",
											"source": 43
										},
										{
											"begin": 10764,
											"end": 10767,
											"name": "PUSH",
											"source": 43,
											"value": "80"
										},
										{
											"begin": 10749,
											"end": 10768,
											"name": "DUP6",
											"source": 43
										},
										{
											"begin": 10749,
											"end": 10768,
											"name": "ADD",
											"source": 43
										},
										{
											"begin": 10749,
											"end": 10768,
											"name": "SWAP1",
											"source": 43
										},
										{
											"begin": 10814,
											"end": 10831,
											"name": "DUP3",
											"source": 43
										},
										{
											"begin": 10814,
											"end": 10831,
											"name": "DUP9",
											"source": 43
										},
										{
											"begin": 10814,
											"end": 10831,
											"name": "ADD",
											"source": 43
										},
										{
											"begin": 10538,
											"end": 10542,
											"name": "DUP6",
											"source": 43
										},
										{
											"begin": 10859,
											"end": 11384,
											"name": "tag",
											"source": 43,
											"value": "185"
										},
										{
											"begin": 10859,
											"end": 11384,
											"name": "JUMPDEST",
											"source": 43
										},
										{
											"begin": 10873,
											"end": 10879,
											"name": "DUP3",
											"source": 43
										},
										{
											"begin": 10870,
											"end": 10871,
											"name": "DUP2",
											"source": 43
										},
										{
											"begin": 10867,
											"end": 10880,
											"name": "LT",
											"source": 43
										},
										{
											"begin": 10859,
											"end": 11384,
											"name": "ISZERO",
											"source": 43
										},
										{
											"begin": 10859,
											"end": 11384,
											"name": "PUSH [tag]",
											"source": 43,
											"value": "187"
										},
										{
											"begin": 10859,
											"end": 11384,
											"name": "JUMPI",
											"source": 43
										},
										{
											"begin": 10938,
											"end": 10944,
											"name": "DUP2",
											"source": 43
										},
										{
											"begin": 10932,
											"end": 10945,
											"name": "MLOAD",
											"source": 43
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10980,
											"end": 10982,
											"name": "DUP2",
											"source": 43
										},
										{
											"begin": 10974,
											"end": 10983,
											"name": "MLOAD",
											"source": 43
										},
										{
											"begin": 10970,
											"end": 11028,
											"name": "AND",
											"source": 43
										},
										{
											"begin": 10965,
											"end": 10968,
											"name": "DUP6",
											"source": 43
										},
										{
											"begin": 10958,
											"end": 11029,
											"name": "MSTORE",
											"source": 43
										},
										{
											"begin": 11076,
											"end": 11078,
											"name": "DUP6",
											"source": 43
										},
										{
											"begin": 11072,
											"end": 11074,
											"name": "DUP2",
											"source": 43
										},
										{
											"begin": 11068,
											"end": 11079,
											"name": "ADD",
											"source": 43
										},
										{
											"begin": 11062,
											"end": 11080,
											"name": "MLOAD",
											"source": 43
										},
										{
											"begin": 11093,
											"end": 11151,
											"name": "PUSH [tag]",
											"source": 43,
											"value": "188"
										},
										{
											"begin": 11147,
											"end": 11149,
											"name": "DUP8",
											"source": 43
										},
										{
											"begin": 11142,
											"end": 11145,
											"name": "DUP8",
											"source": 43
										},
										{
											"begin": 11138,
											"end": 11150,
											"name": "ADD",
											"source": 43
										},
										{
											"begin": 11124,
											"end": 11136,
											"name": "DUP3",
											"source": 43
										},
										{
											"begin": 11093,
											"end": 11151,
											"name": "PUSH [tag]",
											"source": 43,
											"value": "103"
										},
										{
											"begin": 11093,
											"end": 11151,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 43
										},
										{
											"begin": 11093,
											"end": 11151,
											"name": "tag",
											"source": 43,
											"value": "188"
										},
										{
											"begin": 11093,
											"end": 11151,
											"name": "JUMPDEST",
											"source": 43
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 11174,
											"end": 11178,
											"name": "PUSH",
											"source": 43,
											"value": "40"
										},
										{
											"begin": 11222,
											"end": 11233,
											"name": "SWAP1",
											"source": 43
										},
										{
											"begin": 11222,
											"end": 11233,
											"name": "DUP2",
											"source": 43
										},
										{
											"begin": 11222,
											"end": 11233,
											"name": "ADD",
											"source": 43
										},
										{
											"begin": 11216,
											"end": 11234,
											"name": "MLOAD",
											"source": 43
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 11212,
											"end": 11303,
											"name": "AND",
											"source": 43
										},
										{
											"begin": 11198,
											"end": 11210,
											"name": "SWAP1",
											"source": 43
										},
										{
											"begin": 11198,
											"end": 11210,
											"name": "DUP6",
											"source": 43
										},
										{
											"begin": 11198,
											"end": 11210,
											"name": "ADD",
											"source": 43
										},
										{
											"begin": 11191,
											"end": 11304,
											"name": "MSTORE",
											"source": 43
										},
										{
											"begin": 11324,
											"end": 11336,
											"name": "SWAP3",
											"source": 43
										},
										{
											"begin": 11324,
											"end": 11336,
											"name": "DUP6",
											"source": 43
										},
										{
											"begin": 11324,
											"end": 11336,
											"name": "ADD",
											"source": 43
										},
										{
											"begin": 11324,
											"end": 11336,
											"name": "SWAP3",
											"source": 43
										},
										{
											"begin": 11359,
											"end": 11374,
											"name": "SWAP1",
											"source": 43
										},
										{
											"begin": 11359,
											"end": 11374,
											"name": "DUP5",
											"source": 43
										},
										{
											"begin": 11359,
											"end": 11374,
											"name": "ADD",
											"source": 43
										},
										{
											"begin": 11359,
											"end": 11374,
											"name": "SWAP1",
											"source": 43
										},
										{
											"begin": 10895,
											"end": 10896,
											"name": "PUSH",
											"source": 43,
											"value": "1"
										},
										{
											"begin": 10888,
											"end": 10897,
											"name": "ADD",
											"source": 43
										},
										{
											"begin": 10859,
											"end": 11384,
											"name": "PUSH [tag]",
											"source": 43,
											"value": "185"
										},
										{
											"begin": 10859,
											"end": 11384,
											"name": "JUMP",
											"source": 43
										},
										{
											"begin": 10859,
											"end": 11384,
											"name": "tag",
											"source": 43,
											"value": "187"
										},
										{
											"begin": 10859,
											"end": 11384,
											"name": "JUMPDEST",
											"source": 43
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2137,
											"end": 2191,
											"name": "DUP7",
											"source": 43
										},
										{
											"begin": 2137,
											"end": 2191,
											"name": "AND",
											"source": 43
										},
										{
											"begin": 11435,
											"end": 11439,
											"name": "PUSH",
											"source": 43,
											"value": "20"
										},
										{
											"begin": 11420,
											"end": 11440,
											"name": "DUP7",
											"source": 43
										},
										{
											"begin": 11420,
											"end": 11440,
											"name": "ADD",
											"source": 43
										},
										{
											"begin": 2125,
											"end": 2192,
											"name": "MSTORE",
											"source": 43
										},
										{
											"begin": 11479,
											"end": 11498,
											"name": "DUP5",
											"source": 43
										},
										{
											"begin": 11479,
											"end": 11498,
											"name": "DUP2",
											"source": 43
										},
										{
											"begin": 11479,
											"end": 11498,
											"name": "SUB",
											"source": 43
										},
										{
											"begin": 11472,
											"end": 11476,
											"name": "PUSH",
											"source": 43,
											"value": "40"
										},
										{
											"begin": 11457,
											"end": 11477,
											"name": "DUP7",
											"source": 43
										},
										{
											"begin": 11457,
											"end": 11477,
											"name": "ADD",
											"source": 43
										},
										{
											"begin": 11450,
											"end": 11499,
											"name": "MSTORE",
											"source": 43
										},
										{
											"begin": 3905,
											"end": 3906,
											"name": "PUSH",
											"source": 43,
											"value": "0"
										},
										{
											"begin": 3893,
											"end": 3907,
											"name": "DUP2",
											"source": 43
										},
										{
											"begin": 3893,
											"end": 3907,
											"name": "MSTORE",
											"source": 43
										},
										{
											"begin": 3940,
											"end": 3944,
											"name": "PUSH",
											"source": 43,
											"value": "20"
										},
										{
											"begin": 3931,
											"end": 3945,
											"name": "DUP2",
											"source": 43
										},
										{
											"begin": 3931,
											"end": 3945,
											"name": "ADD",
											"source": 43
										},
										{
											"begin": 11508,
											"end": 11556,
											"name": "SWAP8",
											"source": 43
										},
										{
											"begin": 10216,
											"end": 11562,
											"name": "SWAP7",
											"source": 43
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10216,
											"end": 11562,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 43
										}
									]
								}
							},
							"sourceList": [
								"@solidstate/contracts/access/ownable/IOwnable.sol",
								"@solidstate/contracts/access/ownable/IOwnableInternal.sol",
								"@solidstate/contracts/access/ownable/ISafeOwnable.sol",
								"@solidstate/contracts/access/ownable/ISafeOwnableInternal.sol",
								"@solidstate/contracts/access/ownable/Ownable.sol",
								"@solidstate/contracts/access/ownable/OwnableInternal.sol",
								"@solidstate/contracts/access/ownable/OwnableStorage.sol",
								"@solidstate/contracts/access/ownable/SafeOwnable.sol",
								"@solidstate/contracts/access/ownable/SafeOwnableInternal.sol",
								"@solidstate/contracts/access/ownable/SafeOwnableStorage.sol",
								"@solidstate/contracts/interfaces/IERC165.sol",
								"@solidstate/contracts/interfaces/IERC165Internal.sol",
								"@solidstate/contracts/interfaces/IERC173.sol",
								"@solidstate/contracts/interfaces/IERC173Internal.sol",
								"@solidstate/contracts/interfaces/IERC2535DiamondCut.sol",
								"@solidstate/contracts/interfaces/IERC2535DiamondCutInternal.sol",
								"@solidstate/contracts/interfaces/IERC2535DiamondLoupe.sol",
								"@solidstate/contracts/interfaces/IERC2535DiamondLoupeInternal.sol",
								"@solidstate/contracts/introspection/ERC165/base/ERC165Base.sol",
								"@solidstate/contracts/introspection/ERC165/base/ERC165BaseInternal.sol",
								"@solidstate/contracts/introspection/ERC165/base/ERC165BaseStorage.sol",
								"@solidstate/contracts/introspection/ERC165/base/IERC165Base.sol",
								"@solidstate/contracts/introspection/ERC165/base/IERC165BaseInternal.sol",
								"@solidstate/contracts/proxy/IProxy.sol",
								"@solidstate/contracts/proxy/Proxy.sol",
								"@solidstate/contracts/proxy/diamond/ISolidStateDiamond.sol",
								"@solidstate/contracts/proxy/diamond/SolidStateDiamond.sol",
								"@solidstate/contracts/proxy/diamond/base/DiamondBase.sol",
								"@solidstate/contracts/proxy/diamond/base/DiamondBaseStorage.sol",
								"@solidstate/contracts/proxy/diamond/base/IDiamondBase.sol",
								"@solidstate/contracts/proxy/diamond/fallback/DiamondFallback.sol",
								"@solidstate/contracts/proxy/diamond/fallback/IDiamondFallback.sol",
								"@solidstate/contracts/proxy/diamond/readable/DiamondReadable.sol",
								"@solidstate/contracts/proxy/diamond/readable/DiamondReadableInternal.sol",
								"@solidstate/contracts/proxy/diamond/readable/IDiamondReadable.sol",
								"@solidstate/contracts/proxy/diamond/readable/IDiamondReadableInternal.sol",
								"@solidstate/contracts/proxy/diamond/writable/DiamondWritable.sol",
								"@solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol",
								"@solidstate/contracts/proxy/diamond/writable/IDiamondWritable.sol",
								"@solidstate/contracts/proxy/diamond/writable/IDiamondWritableInternal.sol",
								"@solidstate/contracts/utils/AddressUtils.sol",
								"@solidstate/contracts/utils/UintUtils.sol",
								"Eip2535/EIp2535Diamond.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"addCandidateDetails(string,uint256,string)": "13732d79",
							"addFacet(address)": "a67a117b",
							"addVoterDetails(address,uint256,uint256)": "7a26dd31",
							"diamondCut((address,uint8,bytes4)[],address,bytes)": "9e97d739",
							"owner()": "8da5cb5b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"_nameOfCandidate\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"_voterCardNo\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"_partyName\",\"type\":\"string\"}],\"name\":\"CandidateAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"facetAddress\",\"type\":\"address\"},{\"internalType\":\"enum IDiamond.FacetCutAction\",\"name\":\"action\",\"type\":\"uint8\"},{\"internalType\":\"bytes4\",\"name\":\"functionSelector\",\"type\":\"bytes4\"}],\"indexed\":false,\"internalType\":\"struct IDiamond.FacetCut[]\",\"name\":\"_diamondCut\",\"type\":\"tuple[]\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_init\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"_calldata\",\"type\":\"bytes\"}],\"name\":\"DiamondCut\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_voterAddress\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"_voterCardNo\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_partyNumber\",\"type\":\"uint256\"}],\"name\":\"VoteCasted\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_nameOfCandidate\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"_voterCardNo\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"_partyName\",\"type\":\"string\"}],\"name\":\"addCandidateDetails\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_facet\",\"type\":\"address\"}],\"name\":\"addFacet\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_voterAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_voterCardNo\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_partyNumber\",\"type\":\"uint256\"}],\"name\":\"addVoterDetails\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"facetAddress\",\"type\":\"address\"},{\"internalType\":\"enum IDiamond.FacetCutAction\",\"name\":\"action\",\"type\":\"uint8\"},{\"internalType\":\"bytes4\",\"name\":\"functionSelector\",\"type\":\"bytes4\"}],\"internalType\":\"struct IDiamond.FacetCut[]\",\"name\":\"_diamondCut\",\"type\":\"tuple[]\"},{\"internalType\":\"address\",\"name\":\"_init\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"_calldata\",\"type\":\"bytes\"}],\"name\":\"diamondCut\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Eip2535/EIp2535Diamond.sol\":\"Eip2535Diamond\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":900},\"remappings\":[]},\"sources\":{\"@solidstate/contracts/access/ownable/IOwnable.sol\":{\"keccak256\":\"0x11d21dc54925e813f796ac5f09abbf2a561fd8796268941d9f0b39abd8a917c7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://70d3e007838a1ce8dacab8e6ff6cc2505d97b56ad44fb35cf1af5c9c0a2e9033\",\"dweb:/ipfs/QmT2zFUbiHfQeyhcCMAPTHe7Xk2s4ABAJKeCeAYQcDXGjd\"]},\"@solidstate/contracts/access/ownable/IOwnableInternal.sol\":{\"keccak256\":\"0x4cd447859a063c235aa56dcb017012f3c7ad6c54a399d6cdfef8045c78820f90\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fecba3866ae33c19144357b5aa3a43b8d9b84728a124443a87471409d90507ff\",\"dweb:/ipfs/QmZzkdVbNp4Zv7vHPxeBkoFP3od1sRVXVdWA4j6v9TTSAa\"]},\"@solidstate/contracts/access/ownable/ISafeOwnable.sol\":{\"keccak256\":\"0xf5f4f16883ab1df6352732885160b2b8c82d147f83b3a2c4ecf3d1f7bed13263\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://37a02bc456355b3878074aba4ab8b077ba4e0c8af7d2284a3aaef2dd57f3310c\",\"dweb:/ipfs/QmdSU9M7i7W9h26iFYuZzukmGWA464xgNEk4FAnS9ErRYP\"]},\"@solidstate/contracts/access/ownable/ISafeOwnableInternal.sol\":{\"keccak256\":\"0x371b9fed15ae2760b52eb9391e7ceefcbaaacc73b4cf2dcdd3c12e13db829cd6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d3244dbd25a5b5a6cf7740ddfb3ff9acd14cc54bde74750de20c629154567e39\",\"dweb:/ipfs/Qmd9d1CfMuPH7hsUjEur1P1cU8ZDxYKVvf4SHqHqj9K1dT\"]},\"@solidstate/contracts/access/ownable/Ownable.sol\":{\"keccak256\":\"0x6863983e4048a1c0f65c048af9b9381b0c02c230c763d8136bb16abd1c972e68\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://72a94ccda4287bd598330a663125bba83dde9f4133a13190c922cfb24ac600c7\",\"dweb:/ipfs/QmVcsaFFHBYB4e69tTYqBdCfwWszKRuxrRy1tDrHUh13t5\"]},\"@solidstate/contracts/access/ownable/OwnableInternal.sol\":{\"keccak256\":\"0x68e9c133cdc3a3cdbed72c63f682d428e4533f2c8095d57410653430f69f225c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2f24f167ce2396a880db1b8c8745dbd98d48ee29583784ccb8126547ac81f042\",\"dweb:/ipfs/QmW5r1s5QoV2ENh3Qx2WRhcsbyD9cKC1gBbk2JMFM4YbcR\"]},\"@solidstate/contracts/access/ownable/OwnableStorage.sol\":{\"keccak256\":\"0xdd830eb11d93432c1219d28f1758d1e1e260e09f64152f34e0cab7861a567acb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4beb423fff82203ce963d2fa005b9a26e489dc22efc183e6c68d912cb65ee291\",\"dweb:/ipfs/QmakghQzG8UJ2uwkR8peYxXB7KCMKGrjB9c5r9JSyoB6kw\"]},\"@solidstate/contracts/access/ownable/SafeOwnable.sol\":{\"keccak256\":\"0x1ccd51daadb5633dd0d6bcdf333f290637844560f081e442ba750ab48b64db13\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b593dc55bea11dd27c360026e8241c2de30c61967342418e11cbded07e103db4\",\"dweb:/ipfs/Qmc2gaaRB6VnyHtJw7yQJdZaCKEQQUyKBGdm8hxuVunNeh\"]},\"@solidstate/contracts/access/ownable/SafeOwnableInternal.sol\":{\"keccak256\":\"0x35b21e71d1bf6bfd1d7b224bd972ea699a0c94e44c4d00ba29a1dd712f5e5e12\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ceaa2c8f431ef3b729eab5e91ab8f62bf0f370083a1d71f67b17aeb8d7c9af63\",\"dweb:/ipfs/QmZK6GToi8YBGg9XU6Lcf2h5EfNQUPgBSt1rPchw8cFgQA\"]},\"@solidstate/contracts/access/ownable/SafeOwnableStorage.sol\":{\"keccak256\":\"0x435612f25379c285743b73e6bd8e22653230ee619d82007d9b2c8860a5de88d7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://57017de792c526a2cd6c4308d21fa08ec362c259e83afeb947b5dcca46c2a6f8\",\"dweb:/ipfs/Qmcqj6hSQbWvyJzGMMi8EJNnU5AfBTJf6gLjYYS4RkaEqX\"]},\"@solidstate/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0x05652eb09f7108b0ded5234ee56ccbdadd259e7801da27c484959b01bd0ef97e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://280cf3914c409430d3d3dfb36c82e3404cd056803eed8c6642eab59851d1596c\",\"dweb:/ipfs/QmZiv8jbJYEkic6mMdATRSCfRBfzQjDFfWY4xbSEnHjCvB\"]},\"@solidstate/contracts/interfaces/IERC165Internal.sol\":{\"keccak256\":\"0xbf2681def388e5bfda27e98c258bdd0fa547c233f2f7c44dd316d12252634fce\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://184a68e115babf0ed2b99e80e127950a8c44b6baef9c81a71cc9f48894f3bc43\",\"dweb:/ipfs/QmZCYdyk9PStUQYbuZZf2wNwkwpwFUfdp44YVx9SvLokwz\"]},\"@solidstate/contracts/interfaces/IERC173.sol\":{\"keccak256\":\"0x1dcf85abc1fa1871fd31e6cf54ba539c6cb93342fae91466550940ad49ad08f7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://666470e1f5e26f114d35608a4cce2885f044cfb01fe5b11db0ed32edd5d68750\",\"dweb:/ipfs/Qma5iVmjnWAjkbxs2y62PYdLGCQAef2Q6KsbMUHaQp6bUV\"]},\"@solidstate/contracts/interfaces/IERC173Internal.sol\":{\"keccak256\":\"0x411c4c66a220f9eb25a29c2553fa9e6cac22a948a8645507d20fe5e7876dc8d1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://36c60312ab789ba0b1aa3d5129fffa911bee346937f6a5662cbd2c2e97b8ccec\",\"dweb:/ipfs/QmZJV8DgbcKs2Nws8gYQWuPdfEKFJSBj9BMfqmPxtNYF8z\"]},\"@solidstate/contracts/interfaces/IERC2535DiamondCut.sol\":{\"keccak256\":\"0xe2bc83d555c3b406a74ab0736d93da6435d197850a2504e0645dea7606055e4f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f4020f04ddf277326e647d25aeb6113bd1f65d62f02d6cabb479c646ceca5619\",\"dweb:/ipfs/QmU3snuS4Nu4FyxrpTm4Y63DtrqMQDDG2dYQ4wAu1i5npi\"]},\"@solidstate/contracts/interfaces/IERC2535DiamondCutInternal.sol\":{\"keccak256\":\"0xc59ed1d101485d637a4cc0b4717723a11cfae824734b169b310994e2ca8cf8ee\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bf0851d1129744467b98e5aff7a24a0c0cb6c78126b8caa7c312ce1bfb4ed83c\",\"dweb:/ipfs/QmdZKYETmRhk2ucWCmfBH16u1vN8WRsdAj7fam3topYj7L\"]},\"@solidstate/contracts/interfaces/IERC2535DiamondLoupe.sol\":{\"keccak256\":\"0x26c32fd85a01de39974f3ff9c025e6bdc6c87b9d3d4a33abe06bdace2711d3c3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1fd3d5df9bea6a5738c5f59042e61015cc4dd65c5bc2587399efa2e1ac1479ac\",\"dweb:/ipfs/QmXMwJ86oCpy6JysW4TzDHDv84TSaVtfyYH8s9TdMjYkdq\"]},\"@solidstate/contracts/interfaces/IERC2535DiamondLoupeInternal.sol\":{\"keccak256\":\"0xf53530cc00621f951debec10349ad6209173a4e37519f9329061c33178319c54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://944813649502424d16a37dff3ca41d9d7393458508576e43289e49b876414851\",\"dweb:/ipfs/QmXmdY3XqPQRC6iVEAa82jydXisTnAJAzwTc1z7YcZJ4dy\"]},\"@solidstate/contracts/introspection/ERC165/base/ERC165Base.sol\":{\"keccak256\":\"0x4a8e6e515570725ae96e6e21c7144f27fdc101bfcd19f74c912474615f007e16\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://702de9b29334e76ac73e98be1555599968f16d29d9c6d0a2d8bd3ed1cf8d3454\",\"dweb:/ipfs/Qmbrbb1NoKHu84igojGCUaDarNGE1CpsfmmxW2EtAoUqUP\"]},\"@solidstate/contracts/introspection/ERC165/base/ERC165BaseInternal.sol\":{\"keccak256\":\"0xd2900ce01bce0dde2a848949b189c0345a4155900bf4c6401c0317ad41ee8740\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2f0f1ae8d514b6575d0a08f63b4264aeeb4ee8555774c4ebdbc4a40e89789ef8\",\"dweb:/ipfs/QmZ8DvFtDv1DFcb3gtXa33Ygzkr3ppBELfGLyx8nyJk6TP\"]},\"@solidstate/contracts/introspection/ERC165/base/ERC165BaseStorage.sol\":{\"keccak256\":\"0x90b7e081bb06e2ea5b2ccdde30d174d72ced4a3683c44a46f92b8e0c98eec52f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0b977c181a83790d3799f5ff29c81c9fc7461cb96f75375a279e8f60c1eba28c\",\"dweb:/ipfs/QmYTfZtWxkUnVn67hGtyySW2HkYA5hF5f2dMKcjqJHAuQS\"]},\"@solidstate/contracts/introspection/ERC165/base/IERC165Base.sol\":{\"keccak256\":\"0xf651a6e6c267cb908a3c66592a5b4b2e5cc571cd44e129d8fd653fa05c025e0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ffd390fb94ced75514fd104601019396d85a35c6ff6df71873815b773e825b80\",\"dweb:/ipfs/QmWg5R8hS1ekuWm2q86ZQiNRzHy3sS9z9671udXLwA2TpA\"]},\"@solidstate/contracts/introspection/ERC165/base/IERC165BaseInternal.sol\":{\"keccak256\":\"0xb3eccf8d895692a5824e73d59aecfbe938dd39a57fee2cef43d5caeba0155266\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d8a039f793a32839f33098ccc3be5f226c83529236b7d387399884afea045360\",\"dweb:/ipfs/QmRD9UWYAF64KpaXjRUjTFjoW3Z71HnE8a4p4Sj7yWvioh\"]},\"@solidstate/contracts/proxy/IProxy.sol\":{\"keccak256\":\"0x48d7f3fe133c1c8a9388eab6cda5060966af9bbd47a6d24a198e1a970fe9ee9f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b8f5e7dcea26eb4bfe4f8cb04704cf51ece7988409647e3387e483f65dd32954\",\"dweb:/ipfs/QmdKfjkDEXJGtDZ24tD4G9ro6AbMgJNN3Kwg9qGyPRRLQB\"]},\"@solidstate/contracts/proxy/Proxy.sol\":{\"keccak256\":\"0x40b3f644b893b536b316dec6d45d5787490144aeab259494118b337814c38cd3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8705f59bfdbf4d98b4bc0bfc81cc68edaa6e23ec21c7eb099af4f84cc21ff6b5\",\"dweb:/ipfs/QmaNmduvuLkY7R4iuYE4ME96J13UuzZ4Mm6PjUD9Lc8hAa\"]},\"@solidstate/contracts/proxy/diamond/ISolidStateDiamond.sol\":{\"keccak256\":\"0xac7569f320832aa6ee5b9e5f6de17fea33009ba8dcdd56aad687487b8ae6fc92\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cfdebf2293222ceec328d09a317bd9bc76ba65f563055fba58a37369e4ce7979\",\"dweb:/ipfs/QmRK745EuARnBFEdMVk3LkZoXG2xSGd7LuNQZWUex9xhgK\"]},\"@solidstate/contracts/proxy/diamond/SolidStateDiamond.sol\":{\"keccak256\":\"0xb56c502a4984ed40fefe7a0bf7966e95154ee701b9603aa9d9df9265e2c588c2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://282436fc2893490322b49329388dc6c7495ff1d125e7ffd86fb2d7268a9231ba\",\"dweb:/ipfs/QmXU7MVwzUmewPPPxQd96e3hx8ufBwZXX1WKMhrUPfBZKF\"]},\"@solidstate/contracts/proxy/diamond/base/DiamondBase.sol\":{\"keccak256\":\"0x0590fb00acfbf4eeec1957df8196cac63de89566a26ce0a80a9f78f919fae74c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://19ec1dfec4092f11029a37fabb50ba3385a94cd39e5044e3377074b6c5f9b709\",\"dweb:/ipfs/QmZbChb94a7S2W9ZAgFpesW4E4YEYeWg1wiV7VaJJGgWMK\"]},\"@solidstate/contracts/proxy/diamond/base/DiamondBaseStorage.sol\":{\"keccak256\":\"0x536f0e1d66226166d145aa150db4f493d73d0b118d24c327d167574d9130b114\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://dfb0c70f473fdfe921b2d0103e8fba7e1d452c9ce792a2a6a901f2efba65e56a\",\"dweb:/ipfs/QmacmpDGdPHE7o7G4pDp46cudBXHniswBerj6dyVnsSajs\"]},\"@solidstate/contracts/proxy/diamond/base/IDiamondBase.sol\":{\"keccak256\":\"0x00cad88b32dd925b1a6e5ad740811741f0f59fccba47d3e70b4488305a3fab78\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fa284f987966ddd735cd66d55d206f4a3ef161175df1f867e3930d60b62bba76\",\"dweb:/ipfs/QmSymhtgta9xnTg8xcHWMe6TzwnG5X2g7u9QnZZvVSzFrS\"]},\"@solidstate/contracts/proxy/diamond/fallback/DiamondFallback.sol\":{\"keccak256\":\"0x4924f8b6669fb144d56649adb0a52712b01bc7b442cc0feea1be07a24edf9ac3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f08a89af5dd515d10fd13f7610325b58f8e50139a5531d9c95aabc5acb1990f3\",\"dweb:/ipfs/Qme9yoWNfsPZTiJjCKbmuuX3GiHYw9vMvLbcyUY2zbRMzK\"]},\"@solidstate/contracts/proxy/diamond/fallback/IDiamondFallback.sol\":{\"keccak256\":\"0x299eb396c7716208795faf3822c304de0719acdc47b94c29b87b69a85505f84c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ae6cda79e1b66f7726f633f2367586e6d1b5571ae781b69a186a707586cd5e9f\",\"dweb:/ipfs/QmY3Jxm48NGi2pmhDcjA4QP3UX9nY9NHQx7goUGSguvSza\"]},\"@solidstate/contracts/proxy/diamond/readable/DiamondReadable.sol\":{\"keccak256\":\"0x35a67bc44b71b5ee37a2c871ce02fa5b9ebac0936ba0a1aa053b12c035f7f890\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9c2958090fd5c64c1725a5a7fba73765006c4e81ce3a39af192dfe539fe3d94c\",\"dweb:/ipfs/QmX3kW8Nkh33ahwZ455uaMJBNeV7yQa77ovNqjC3rwTDcB\"]},\"@solidstate/contracts/proxy/diamond/readable/DiamondReadableInternal.sol\":{\"keccak256\":\"0x620e6c505fb6dd854dd4cb11fe9537274019e65de35edf91cfccfcd42bcce30d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b8b44f06039b3ad76d5a1f27155b329e2e6a8073d14eb33b90eee33867f35492\",\"dweb:/ipfs/QmZkLeNhhUabW36QJFQTHSKrJkmLsgNeJSzJZHBWXXthiW\"]},\"@solidstate/contracts/proxy/diamond/readable/IDiamondReadable.sol\":{\"keccak256\":\"0xb2a4f085ace4eeb45e9e34096cc54d08d289a4e0cd2d570c8fef5424d4989925\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://dc63d50f2fa14338954819d4e054b204d4a217f13f5e100f114405ef7d27ddd8\",\"dweb:/ipfs/QmZL9VKfNwwfscekLyyTh6JJELDMusQgQkrWeP2whM8yKb\"]},\"@solidstate/contracts/proxy/diamond/readable/IDiamondReadableInternal.sol\":{\"keccak256\":\"0x04f52dd1ded535ec471866b39455e9879ddd5b5265adee8d4b32a06b4a718790\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a2ba06128f57b5bda17b3b1de7490880c21c2d68ada6b36dc3049398a6de8bff\",\"dweb:/ipfs/Qmf9QAjygj4mPHKuh8RjVGMwZDNVajcerqH7pPnQR3r8cN\"]},\"@solidstate/contracts/proxy/diamond/writable/DiamondWritable.sol\":{\"keccak256\":\"0x6da3dbd19422c4a434e50bde10db43f8baa291cf5086604399adab39f0796f05\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://06b79d4eb3c85879e1412301745d2abcc25344b5884d31e20bddcbcee23e5041\",\"dweb:/ipfs/Qme6ScmPGQ3PouDnXGis4Lj6s2EDQGimCdVWGv1gzTV2BE\"]},\"@solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":{\"keccak256\":\"0xbc71dc13eb588d46132745d218819aae37217d1476c4f9e626ef8ccdc2205be7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7cfb8919df76c0d37a061bfdc4ab11c08a61ab7250c7054cb02d48df037f46c3\",\"dweb:/ipfs/QmTpR2g5TcSNHjYFsUEeYcqohvrNPoEFhBfYVsLaMmPHqe\"]},\"@solidstate/contracts/proxy/diamond/writable/IDiamondWritable.sol\":{\"keccak256\":\"0x5b93ab2500c62bf37ff8a81927356c1e9251ea6a52c8165abb2f9c770410f572\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f2ec9e41faee654c99591f8d6e5d437b2bbfc67c4b7a58bb7d6bb764f7a4cf3d\",\"dweb:/ipfs/QmNVrDk1T4wh1PkvhXQtazQpZuKRiuRifJTANnhMfaFjpn\"]},\"@solidstate/contracts/proxy/diamond/writable/IDiamondWritableInternal.sol\":{\"keccak256\":\"0x84808f6a171f5ff30b0bc2f02a0c327c16c123530aeb36a4f88c1b5322a5d159\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://579c4f9b2597c7cff29309846749596a962cb491557ee5865fe74759ca65f8f4\",\"dweb:/ipfs/QmZeuV14qUg2sEy3EdvbzpYjDzMjuV2CCpwCFZvyTd2v6B\"]},\"@solidstate/contracts/utils/AddressUtils.sol\":{\"keccak256\":\"0x73b8727aeb8d6a984dfb279cf64eb867cb0f5c42527b877f87dcbe1a37f3e433\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://21599c6853d978762bd6db8e70720ba7de6394bf6e1b66d32a936c074c160135\",\"dweb:/ipfs/QmekH1Vro4JrwfSpJUBVRofaCMsxAj8huDbujYBgGsHm63\"]},\"@solidstate/contracts/utils/UintUtils.sol\":{\"keccak256\":\"0x1dbd4a2d25d6d3511018319bb752e2fe72b934cbcf31b18e47a286229ce36f1f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e339115b07880370eef2b22f5529050fcf863a34bab9e8ac81be570ae7deb2be\",\"dweb:/ipfs/QmU9KsZQTMffVUnHUGHkf78Yg5orQF9TSk9n1uSgQnkak2\"]},\"Eip2535/EIp2535Diamond.sol\":{\"keccak256\":\"0x5ba586dc677c34f605a25d97b33a1d6fb92f2e262b303fb117400759b8fa8270\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bb4aa260826a3f99561fda55c2c11c1482d8af9b381bfe0042cf80d77b649e1c\",\"dweb:/ipfs/QmU5tDseunWJd9UErXF1E8Uy1UN41osuk5gibz5irfkaSa\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 3916,
								"contract": "Eip2535/EIp2535Diamond.sol:Eip2535Diamond",
								"label": "owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"Eip2535VotingContract": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "string",
									"name": "_nameOfCandidate",
									"type": "string"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "_voterCardNo",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "string",
									"name": "_partyName",
									"type": "string"
								}
							],
							"name": "CandidateAdded",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "_voterAddress",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "_voterCardNo",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "_partyNumber",
									"type": "uint256"
								}
							],
							"name": "VoteCasted",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "_nameOfCandidate",
									"type": "string"
								},
								{
									"internalType": "uint256",
									"name": "_voterCardNo",
									"type": "uint256"
								},
								{
									"internalType": "string",
									"name": "_partyName",
									"type": "string"
								}
							],
							"name": "addCandidateDetails",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_voterAddress",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_voterCardNo",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_partyNumber",
									"type": "uint256"
								}
							],
							"name": "addVoterDetails",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "candidateDetails",
							"outputs": [
								{
									"internalType": "string",
									"name": "nameOfCandidate",
									"type": "string"
								},
								{
									"internalType": "bytes32",
									"name": "voterCardNo",
									"type": "bytes32"
								},
								{
									"internalType": "string",
									"name": "partyName",
									"type": "string"
								},
								{
									"internalType": "uint256",
									"name": "totalVotes",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_voterCardNo",
									"type": "uint256"
								}
							],
							"name": "checkCandidateStatus",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_voterCardNo",
									"type": "uint256"
								}
							],
							"name": "checkVoterStatus",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"name": "hasRegistered",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"name": "hasVoted",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "listOfParties",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "partyCounter",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "result",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "voterCounter",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"name": "voterDetails",
							"outputs": [
								{
									"internalType": "address",
									"name": "voterAddress",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "partyNumber",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "winner",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"Eip2535/EIp2535Diamond.sol\":1251:4516  contract Eip2535VotingContract {... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"Eip2535/EIp2535Diamond.sol\":1251:4516  contract Eip2535VotingContract {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x65372147\n      gt\n      tag_16\n      jumpi\n      dup1\n      0xb2fb8e37\n      gt\n      tag_17\n      jumpi\n      dup1\n      0xb2fb8e37\n      eq\n      tag_12\n      jumpi\n      dup1\n      0xc93346ab\n      eq\n      tag_13\n      jumpi\n      dup1\n      0xdfbf53ae\n      eq\n      tag_14\n      jumpi\n      dup1\n      0xe9d729ae\n      eq\n      tag_15\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_17:\n      dup1\n      0x65372147\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x6b0eec1c\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x7a26dd31\n      eq\n      tag_11\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_16:\n      dup1\n      0x1e51c9ea\n      gt\n      tag_18\n      jumpi\n      dup1\n      0x1e51c9ea\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x4d50ba3a\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x6247e532\n      eq\n      tag_8\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_18:\n      dup1\n      0x0500894d\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x13732d79\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x1b4613cb\n      eq\n      tag_5\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"Eip2535/EIp2535Diamond.sol\":1754:1781  uint256 public partyCounter */\n    tag_3:\n      tag_19\n      sload(0x04)\n      dup2\n      jump\n    tag_19:\n      mload(0x40)\n        /* \"#utility.yul\":160:185   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":148:150   */\n      0x20\n        /* \"#utility.yul\":133:151   */\n      add\n        /* \"Eip2535/EIp2535Diamond.sol\":1754:1781  uint256 public partyCounter */\n    tag_21:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Eip2535/EIp2535Diamond.sol\":2141:2935  function addCandidateDetails(... */\n    tag_4:\n      tag_23\n      tag_24\n      calldatasize\n      0x04\n      tag_25\n      jump\t// in\n    tag_24:\n      tag_26\n      jump\t// in\n    tag_23:\n      stop\n        /* \"Eip2535/EIp2535Diamond.sol\":1656:1696  mapping(bytes32 => bool) public hasVoted */\n    tag_5:\n      tag_27\n      tag_28\n      calldatasize\n      0x04\n      tag_29\n      jump\t// in\n    tag_28:\n      mstore(0x20, 0x02)\n      0x00\n      swap1\n      dup2\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n      dup2\n      jump\n    tag_27:\n      mload(0x40)\n        /* \"#utility.yul\":2075:2089   */\n      swap1\n      iszero\n        /* \"#utility.yul\":2068:2090   */\n      iszero\n        /* \"#utility.yul\":2050:2091   */\n      dup2\n      mstore\n        /* \"#utility.yul\":2038:2040   */\n      0x20\n        /* \"#utility.yul\":2023:2041   */\n      add\n        /* \"Eip2535/EIp2535Diamond.sol\":1656:1696  mapping(bytes32 => bool) public hasVoted */\n      tag_21\n        /* \"#utility.yul\":1910:2097   */\n      jump\n        /* \"Eip2535/EIp2535Diamond.sol\":1532:1584  mapping(bytes32 => VoterDetails) public voterDetails */\n    tag_6:\n      tag_33\n      tag_34\n      calldatasize\n      0x04\n      tag_29\n      jump\t// in\n    tag_34:\n      0x00\n      0x20\n      dup2\n      swap1\n      mstore\n      swap1\n      dup2\n      mstore\n      0x40\n      swap1\n      keccak256\n      dup1\n      sload\n      0x01\n      swap1\n      swap2\n      add\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      swap1\n      swap2\n      and\n      swap1\n      dup3\n      jump\n    tag_33:\n      0x40\n      dup1\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":2294:2349   */\n      swap1\n      swap4\n      and\n        /* \"#utility.yul\":2276:2350   */\n      dup4\n      mstore\n        /* \"#utility.yul\":2381:2383   */\n      0x20\n        /* \"#utility.yul\":2366:2384   */\n      dup4\n      add\n        /* \"#utility.yul\":2359:2393   */\n      swap2\n      swap1\n      swap2\n      mstore\n        /* \"#utility.yul\":2249:2267   */\n      add\n        /* \"Eip2535/EIp2535Diamond.sol\":1532:1584  mapping(bytes32 => VoterDetails) public voterDetails */\n      tag_21\n        /* \"#utility.yul\":2102:2399   */\n      jump\n        /* \"Eip2535/EIp2535Diamond.sol\":1787:1814  uint256 public voterCounter */\n    tag_7:\n      tag_19\n      sload(0x05)\n      dup2\n      jump\n        /* \"Eip2535/EIp2535Diamond.sol\":1590:1650  mapping(uint256 => CandidateDetails) public candidateDetails */\n    tag_8:\n      tag_41\n      tag_42\n      calldatasize\n      0x04\n      tag_29\n      jump\t// in\n    tag_42:\n      tag_44\n      jump\t// in\n    tag_41:\n      mload(0x40)\n      tag_21\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_46\n      jump\t// in\n        /* \"Eip2535/EIp2535Diamond.sol\":4107:4514  function result() public returns (string memory) {... */\n    tag_9:\n      tag_47\n      tag_48\n      jump\t// in\n    tag_47:\n      mload(0x40)\n      tag_21\n      swap2\n      swap1\n      tag_50\n      jump\t// in\n        /* \"Eip2535/EIp2535Diamond.sol\":1702:1747  mapping(bytes32 => bool) public hasRegistered */\n    tag_10:\n      tag_27\n      tag_52\n      calldatasize\n      0x04\n      tag_29\n      jump\t// in\n    tag_52:\n      mstore(0x20, 0x03)\n      0x00\n      swap1\n      dup2\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n      dup2\n      jump\n        /* \"Eip2535/EIp2535Diamond.sol\":3173:3906  function addVoterDetails(... */\n    tag_11:\n      tag_23\n      tag_56\n      calldatasize\n      0x04\n      tag_57\n      jump\t// in\n    tag_56:\n      tag_58\n      jump\t// in\n        /* \"Eip2535/EIp2535Diamond.sol\":2941:3167  function checkCandidateStatus(uint256 _voterCardNo)... */\n    tag_12:\n      tag_27\n      tag_60\n      calldatasize\n      0x04\n      tag_29\n      jump\t// in\n    tag_60:\n      tag_61\n      jump\t// in\n        /* \"Eip2535/EIp2535Diamond.sol\":3912:4101  function checkVoterStatus(uint256 _voterCardNo) public view returns (bool) {... */\n    tag_13:\n      tag_27\n      tag_64\n      calldatasize\n      0x04\n      tag_29\n      jump\t// in\n    tag_64:\n      tag_65\n      jump\t// in\n        /* \"Eip2535/EIp2535Diamond.sol\":1855:1875  string public winner */\n    tag_14:\n      tag_47\n      tag_68\n      jump\t// in\n        /* \"Eip2535/EIp2535Diamond.sol\":1820:1849  string[] public listOfParties */\n    tag_15:\n      tag_47\n      tag_71\n      calldatasize\n      0x04\n      tag_29\n      jump\t// in\n    tag_71:\n      tag_72\n      jump\t// in\n        /* \"Eip2535/EIp2535Diamond.sol\":2141:2935  function addCandidateDetails(... */\n    tag_26:\n        /* \"Eip2535/EIp2535Diamond.sol\":2297:2314  bytes32 voterCard */\n      0x00\n        /* \"Eip2535/EIp2535Diamond.sol\":2344:2356  _voterCardNo */\n      dup3\n        /* \"Eip2535/EIp2535Diamond.sol\":2327:2357  abi.encodePacked(_voterCardNo) */\n      add(0x20, mload(0x40))\n      tag_75\n      swap2\n        /* \"#utility.yul\":4353:4372   */\n      dup2\n      mstore\n        /* \"#utility.yul\":4397:4399   */\n      0x20\n        /* \"#utility.yul\":4388:4400   */\n      add\n      swap1\n        /* \"#utility.yul\":4224:4406   */\n      jump\n        /* \"Eip2535/EIp2535Diamond.sol\":2327:2357  abi.encodePacked(_voterCardNo) */\n    tag_75:\n      0x40\n      dup1\n      mload\n      not(0x1f)\n      dup2\n      dup5\n      sub\n      add\n      dup2\n      mstore\n      swap2\n      dup2\n      mstore\n        /* \"Eip2535/EIp2535Diamond.sol\":2317:2358  keccak256(abi.encodePacked(_voterCardNo)) */\n      dup2\n      mload\n        /* \"Eip2535/EIp2535Diamond.sol\":2327:2357  abi.encodePacked(_voterCardNo) */\n      0x20\n        /* \"Eip2535/EIp2535Diamond.sol\":2317:2358  keccak256(abi.encodePacked(_voterCardNo)) */\n      swap3\n      dup4\n      add\n      keccak256\n        /* \"Eip2535/EIp2535Diamond.sol\":2389:2413  hasRegistered[voterCard] */\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"Eip2535/EIp2535Diamond.sol\":2389:2402  hasRegistered */\n      0x03\n        /* \"Eip2535/EIp2535Diamond.sol\":2389:2413  hasRegistered[voterCard] */\n      swap1\n      swap4\n      mstore\n      swap2\n      keccak256\n      sload\n        /* \"Eip2535/EIp2535Diamond.sol\":2317:2358  keccak256(abi.encodePacked(_voterCardNo)) */\n      swap1\n      swap2\n      pop\n        /* \"Eip2535/EIp2535Diamond.sol\":2389:2413  hasRegistered[voterCard] */\n      0xff\n      and\n        /* \"Eip2535/EIp2535Diamond.sol\":2389:2422  hasRegistered[voterCard] == false */\n      iszero\n        /* \"Eip2535/EIp2535Diamond.sol\":2368:2485  require(... */\n      tag_77\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":4613:4615   */\n      0x20\n        /* \"Eip2535/EIp2535Diamond.sol\":2368:2485  require(... */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4595:4616   */\n      mstore\n        /* \"#utility.yul\":4652:4654   */\n      0x25\n        /* \"#utility.yul\":4632:4650   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":4625:4655   */\n      mstore\n        /* \"#utility.yul\":4691:4725   */\n      0x43616e6469646174652068617320616c7265616479206265656e207265676973\n        /* \"#utility.yul\":4671:4689   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":4664:4726   */\n      mstore\n        /* \"#utility.yul\":4762:4769   */\n      0x7465726564000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":4742:4760   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":4735:4770   */\n      mstore\n        /* \"#utility.yul\":4787:4806   */\n      0x84\n      add\n        /* \"Eip2535/EIp2535Diamond.sol\":2368:2485  require(... */\n    tag_78:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_77:\n        /* \"Eip2535/EIp2535Diamond.sol\":2518:2530  partyCounter */\n      sload(0x04)\n        /* \"Eip2535/EIp2535Diamond.sol\":2495:2515  uint256 _partyNumber */\n      0x00\n        /* \"Eip2535/EIp2535Diamond.sol\":2540:2570  candidateDetails[_partyNumber] */\n      dup2\n      dup2\n      mstore\n        /* \"Eip2535/EIp2535Diamond.sol\":2540:2556  candidateDetails */\n      0x01\n        /* \"Eip2535/EIp2535Diamond.sol\":2540:2570  candidateDetails[_partyNumber] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"Eip2535/EIp2535Diamond.sol\":2540:2605  candidateDetails[_partyNumber].nameOfCandidate = _nameOfCandidate */\n      tag_80\n        /* \"Eip2535/EIp2535Diamond.sol\":2589:2605  _nameOfCandidate */\n      dup7\n        /* \"Eip2535/EIp2535Diamond.sol\":2540:2570  candidateDetails[_partyNumber] */\n      dup3\n        /* \"Eip2535/EIp2535Diamond.sol\":2540:2605  candidateDetails[_partyNumber].nameOfCandidate = _nameOfCandidate */\n      tag_81\n      jump\t// in\n    tag_80:\n      pop\n        /* \"Eip2535/EIp2535Diamond.sol\":2615:2645  candidateDetails[_partyNumber] */\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"Eip2535/EIp2535Diamond.sol\":2615:2631  candidateDetails */\n      0x01\n        /* \"Eip2535/EIp2535Diamond.sol\":2615:2645  candidateDetails[_partyNumber] */\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      swap2\n      keccak256\n        /* \"Eip2535/EIp2535Diamond.sol\":2615:2657  candidateDetails[_partyNumber].voterCardNo */\n      swap1\n      dup2\n      add\n        /* \"Eip2535/EIp2535Diamond.sol\":2615:2669  candidateDetails[_partyNumber].voterCardNo = voterCard */\n      dup4\n      swap1\n      sstore\n        /* \"Eip2535/EIp2535Diamond.sol\":2679:2719  candidateDetails[_partyNumber].partyName */\n      0x02\n      add\n        /* \"Eip2535/EIp2535Diamond.sol\":2679:2732  candidateDetails[_partyNumber].partyName = _partyName */\n      tag_82\n        /* \"Eip2535/EIp2535Diamond.sol\":2722:2732  _partyName */\n      dup5\n        /* \"Eip2535/EIp2535Diamond.sol\":2679:2719  candidateDetails[_partyNumber].partyName */\n      dup3\n        /* \"Eip2535/EIp2535Diamond.sol\":2679:2732  candidateDetails[_partyNumber].partyName = _partyName */\n      tag_81\n      jump\t// in\n    tag_82:\n      pop\n        /* \"Eip2535/EIp2535Diamond.sol\":2742:2766  hasRegistered[voterCard] */\n      0x00\n      dup3\n      dup2\n      mstore\n        /* \"Eip2535/EIp2535Diamond.sol\":2742:2755  hasRegistered */\n      0x03\n        /* \"Eip2535/EIp2535Diamond.sol\":2742:2766  hasRegistered[voterCard] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"Eip2535/EIp2535Diamond.sol\":2742:2773  hasRegistered[voterCard] = true */\n      dup1\n      sload\n      not(0xff)\n      and\n        /* \"Eip2535/EIp2535Diamond.sol\":2769:2773  true */\n      0x01\n        /* \"Eip2535/EIp2535Diamond.sol\":2742:2773  hasRegistered[voterCard] = true */\n      swap1\n      dup2\n      or\n      swap1\n      swap2\n      sstore\n        /* \"Eip2535/EIp2535Diamond.sol\":2783:2796  listOfParties */\n      0x06\n        /* \"Eip2535/EIp2535Diamond.sol\":2783:2813  listOfParties.push(_partyName) */\n      dup1\n      sload\n      swap2\n      dup3\n      add\n      dup2\n      sstore\n      swap1\n      swap2\n      mstore\n      0xf652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d3f\n      add\n      tag_84\n        /* \"Eip2535/EIp2535Diamond.sol\":2802:2812  _partyName */\n      dup5\n        /* \"Eip2535/EIp2535Diamond.sol\":2783:2813  listOfParties.push(_partyName) */\n      dup3\n      tag_81\n      jump\t// in\n    tag_84:\n      pop\n        /* \"Eip2535/EIp2535Diamond.sol\":2838:2850  partyCounter */\n      sload(0x04)\n        /* \"Eip2535/EIp2535Diamond.sol\":2838:2854  partyCounter + 1 */\n      tag_85\n      swap1\n        /* \"Eip2535/EIp2535Diamond.sol\":2853:2854  1 */\n      0x01\n        /* \"Eip2535/EIp2535Diamond.sol\":2838:2854  partyCounter + 1 */\n      tag_86\n      jump\t// in\n    tag_85:\n        /* \"Eip2535/EIp2535Diamond.sol\":2823:2835  partyCounter */\n      0x04\n        /* \"Eip2535/EIp2535Diamond.sol\":2823:2854  partyCounter = partyCounter + 1 */\n      sstore\n        /* \"Eip2535/EIp2535Diamond.sol\":2870:2928  CandidateAdded(_nameOfCandidate, _voterCardNo, _partyName) */\n      mload(0x40)\n        /* \"Eip2535/EIp2535Diamond.sol\":2903:2915  _voterCardNo */\n      dup5\n      swap1\n        /* \"Eip2535/EIp2535Diamond.sol\":2870:2928  CandidateAdded(_nameOfCandidate, _voterCardNo, _partyName) */\n      0xdbbc48772584850c2086f66c22a3654c9e46524ff539fd9d72198d91cb7c13c0\n      swap1\n      tag_87\n      swap1\n        /* \"Eip2535/EIp2535Diamond.sol\":2885:2901  _nameOfCandidate */\n      dup9\n      swap1\n        /* \"Eip2535/EIp2535Diamond.sol\":2917:2927  _partyName */\n      dup8\n      swap1\n        /* \"Eip2535/EIp2535Diamond.sol\":2870:2928  CandidateAdded(_nameOfCandidate, _voterCardNo, _partyName) */\n      tag_88\n      jump\t// in\n    tag_87:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"Eip2535/EIp2535Diamond.sol\":2287:2935  {... */\n      pop\n      pop\n        /* \"Eip2535/EIp2535Diamond.sol\":2141:2935  function addCandidateDetails(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"Eip2535/EIp2535Diamond.sol\":1590:1650  mapping(uint256 => CandidateDetails) public candidateDetails */\n    tag_44:\n      mstore(0x20, 0x01)\n      0x00\n      swap1\n      dup2\n      mstore\n      0x40\n      swap1\n      keccak256\n      dup1\n      sload\n      dup2\n      swap1\n      tag_89\n      swap1\n      tag_90\n      jump\t// in\n    tag_89:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_91\n      swap1\n      tag_90\n      jump\t// in\n    tag_91:\n      dup1\n      iszero\n      tag_92\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_93\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_92)\n    tag_93:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_94:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_94\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_92:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      dup1\n      0x01\n      add\n      sload\n      swap1\n      dup1\n      0x02\n      add\n      dup1\n      sload\n      tag_95\n      swap1\n      tag_90\n      jump\t// in\n    tag_95:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_96\n      swap1\n      tag_90\n      jump\t// in\n    tag_96:\n      dup1\n      iszero\n      tag_97\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_98\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_97)\n    tag_98:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_99:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_99\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_97:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      dup1\n      0x03\n      add\n      sload\n      swap1\n      pop\n      dup5\n      jump\t// out\n        /* \"Eip2535/EIp2535Diamond.sol\":4107:4514  function result() public returns (string memory) {... */\n    tag_48:\n        /* \"Eip2535/EIp2535Diamond.sol\":4141:4154  string memory */\n      0x60\n        /* \"Eip2535/EIp2535Diamond.sol\":4166:4178  uint256 temp */\n      0x00\n        /* \"Eip2535/EIp2535Diamond.sol\":4188:4201  uint256 count */\n      dup1\n        /* \"Eip2535/EIp2535Diamond.sol\":4216:4225  uint256 i */\n      0x00\n        /* \"Eip2535/EIp2535Diamond.sol\":4211:4426  for (uint256 i = 0; i < listOfParties.length; i++) {... */\n    tag_101:\n        /* \"Eip2535/EIp2535Diamond.sol\":4235:4248  listOfParties */\n      0x06\n        /* \"Eip2535/EIp2535Diamond.sol\":4235:4255  listOfParties.length */\n      sload\n        /* \"Eip2535/EIp2535Diamond.sol\":4231:4255  i < listOfParties.length */\n      dup2\n      lt\n        /* \"Eip2535/EIp2535Diamond.sol\":4211:4426  for (uint256 i = 0; i < listOfParties.length; i++) {... */\n      iszero\n      tag_102\n      jumpi\n        /* \"Eip2535/EIp2535Diamond.sol\":4287:4306  candidateDetails[i] */\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"Eip2535/EIp2535Diamond.sol\":4287:4303  candidateDetails */\n      0x01\n        /* \"Eip2535/EIp2535Diamond.sol\":4287:4306  candidateDetails[i] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"Eip2535/EIp2535Diamond.sol\":4287:4317  candidateDetails[i].totalVotes */\n      0x03\n      add\n      sload\n        /* \"Eip2535/EIp2535Diamond.sol\":4280:4317  temp < candidateDetails[i].totalVotes */\n      dup4\n      lt\n        /* \"Eip2535/EIp2535Diamond.sol\":4276:4416  if (temp < candidateDetails[i].totalVotes) {... */\n      iszero\n      tag_104\n      jumpi\n        /* \"Eip2535/EIp2535Diamond.sol\":4344:4363  candidateDetails[i] */\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"Eip2535/EIp2535Diamond.sol\":4344:4360  candidateDetails */\n      0x01\n        /* \"Eip2535/EIp2535Diamond.sol\":4344:4363  candidateDetails[i] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"Eip2535/EIp2535Diamond.sol\":4344:4374  candidateDetails[i].totalVotes */\n      0x03\n      add\n      sload\n      swap3\n      pop\n        /* \"Eip2535/EIp2535Diamond.sol\":4361:4362  i */\n      swap1\n      pop\n      dup1\n        /* \"Eip2535/EIp2535Diamond.sol\":4276:4416  if (temp < candidateDetails[i].totalVotes) {... */\n    tag_104:\n        /* \"Eip2535/EIp2535Diamond.sol\":4257:4260  i++ */\n      0x01\n      add\n        /* \"Eip2535/EIp2535Diamond.sol\":4211:4426  for (uint256 i = 0; i < listOfParties.length; i++) {... */\n      jump(tag_101)\n    tag_102:\n      pop\n        /* \"Eip2535/EIp2535Diamond.sol\":4445:4468  candidateDetails[count] */\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"Eip2535/EIp2535Diamond.sol\":4445:4461  candidateDetails */\n      0x01\n        /* \"Eip2535/EIp2535Diamond.sol\":4445:4468  candidateDetails[count] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"Eip2535/EIp2535Diamond.sol\":4436:4442  winner */\n      0x07\n      swap1\n        /* \"Eip2535/EIp2535Diamond.sol\":4436:4484  winner = candidateDetails[count].nameOfCandidate */\n      tag_105\n      swap1\n        /* \"Eip2535/EIp2535Diamond.sol\":4436:4442  winner */\n      dup3\n        /* \"Eip2535/EIp2535Diamond.sol\":4436:4484  winner = candidateDetails[count].nameOfCandidate */\n      tag_106\n      jump\t// in\n    tag_105:\n      pop\n        /* \"Eip2535/EIp2535Diamond.sol\":4501:4507  winner */\n      0x07\n        /* \"Eip2535/EIp2535Diamond.sol\":4494:4507  return winner */\n      dup1\n      sload\n      tag_107\n      swap1\n      tag_90\n      jump\t// in\n    tag_107:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_108\n      swap1\n      tag_90\n      jump\t// in\n    tag_108:\n      dup1\n      iszero\n      tag_109\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_110\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_109)\n    tag_110:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_111:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_111\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_109:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap3\n      pop\n      pop\n      pop\n        /* \"Eip2535/EIp2535Diamond.sol\":4107:4514  function result() public returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"Eip2535/EIp2535Diamond.sol\":3173:3906  function addVoterDetails(... */\n    tag_58:\n        /* \"Eip2535/EIp2535Diamond.sol\":3327:3339  voterCounter */\n      sload(0x05)\n        /* \"Eip2535/EIp2535Diamond.sol\":3327:3343  voterCounter + 1 */\n      tag_113\n      swap1\n        /* \"Eip2535/EIp2535Diamond.sol\":3342:3343  1 */\n      0x01\n        /* \"Eip2535/EIp2535Diamond.sol\":3327:3343  voterCounter + 1 */\n      tag_86\n      jump\t// in\n    tag_113:\n        /* \"Eip2535/EIp2535Diamond.sol\":3312:3324  voterCounter */\n      0x05\n        /* \"Eip2535/EIp2535Diamond.sol\":3312:3343  voterCounter = voterCounter + 1 */\n      sstore\n        /* \"Eip2535/EIp2535Diamond.sol\":3383:3413  abi.encodePacked(_voterCardNo) */\n      0x40\n      dup1\n      mload\n      0x20\n      dup1\n      dup3\n      add\n        /* \"#utility.yul\":4353:4372   */\n      dup6\n      swap1\n      mstore\n        /* \"Eip2535/EIp2535Diamond.sol\":3383:3413  abi.encodePacked(_voterCardNo) */\n      dup3\n      mload\n      dup1\n      dup4\n      sub\n      dup3\n      add\n      dup2\n      mstore\n        /* \"#utility.yul\":4388:4400   */\n      swap2\n      dup4\n      add\n        /* \"Eip2535/EIp2535Diamond.sol\":3383:3413  abi.encodePacked(_voterCardNo) */\n      dup4\n      mstore\n        /* \"Eip2535/EIp2535Diamond.sol\":3373:3414  keccak256(abi.encodePacked(_voterCardNo)) */\n      dup2\n      mload\n      swap2\n      dup2\n      add\n      swap2\n      swap1\n      swap2\n      keccak256\n        /* \"Eip2535/EIp2535Diamond.sol\":3353:3370  bytes32 voterCard */\n      0x00\n        /* \"Eip2535/EIp2535Diamond.sol\":3432:3451  hasVoted[voterCard] */\n      dup2\n      dup2\n      mstore\n        /* \"Eip2535/EIp2535Diamond.sol\":3432:3440  hasVoted */\n      0x02\n        /* \"Eip2535/EIp2535Diamond.sol\":3432:3451  hasVoted[voterCard] */\n      swap1\n      swap3\n      mstore\n      swap2\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n        /* \"Eip2535/EIp2535Diamond.sol\":3432:3460  hasVoted[voterCard] == false */\n      iszero\n        /* \"Eip2535/EIp2535Diamond.sol\":3424:3492  require(hasVoted[voterCard] == false, \"Candidate has already voted\") */\n      tag_115\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":9735:9737   */\n      0x20\n        /* \"Eip2535/EIp2535Diamond.sol\":3424:3492  require(hasVoted[voterCard] == false, \"Candidate has already voted\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":9717:9738   */\n      mstore\n        /* \"#utility.yul\":9774:9776   */\n      0x1b\n        /* \"#utility.yul\":9754:9772   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":9747:9777   */\n      mstore\n        /* \"#utility.yul\":9813:9842   */\n      0x43616e6469646174652068617320616c726561647920766f7465640000000000\n        /* \"#utility.yul\":9793:9811   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":9786:9843   */\n      mstore\n        /* \"#utility.yul\":9860:9878   */\n      0x64\n      add\n        /* \"Eip2535/EIp2535Diamond.sol\":3424:3492  require(hasVoted[voterCard] == false, \"Candidate has already voted\") */\n      tag_78\n        /* \"#utility.yul\":9533:9884   */\n      jump\n        /* \"Eip2535/EIp2535Diamond.sol\":3424:3492  require(hasVoted[voterCard] == false, \"Candidate has already voted\") */\n    tag_115:\n        /* \"Eip2535/EIp2535Diamond.sol\":3523:3536  listOfParties */\n      0x06\n        /* \"Eip2535/EIp2535Diamond.sol\":3523:3543  listOfParties.length */\n      sload\n        /* \"Eip2535/EIp2535Diamond.sol\":3547:3548  2 */\n      0x02\n      gt\n        /* \"Eip2535/EIp2535Diamond.sol\":3523:3548  listOfParties.length >= 2 */\n      iszero\n        /* \"Eip2535/EIp2535Diamond.sol\":3502:3617  require(... */\n      tag_118\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":10091:10093   */\n      0x20\n        /* \"Eip2535/EIp2535Diamond.sol\":3502:3617  require(... */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":10073:10094   */\n      mstore\n        /* \"#utility.yul\":10130:10132   */\n      0x2b\n        /* \"#utility.yul\":10110:10128   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":10103:10133   */\n      mstore\n        /* \"#utility.yul\":10169:10203   */\n      0x54686572652063616e277420626520656c656374696f6e207769746820612073\n        /* \"#utility.yul\":10149:10167   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":10142:10204   */\n      mstore\n        /* \"#utility.yul\":10240:10253   */\n      0x696e676c65207061727479000000000000000000000000000000000000000000\n        /* \"#utility.yul\":10220:10238   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":10213:10254   */\n      mstore\n        /* \"#utility.yul\":10271:10290   */\n      0x84\n      add\n        /* \"Eip2535/EIp2535Diamond.sol\":3502:3617  require(... */\n      tag_78\n        /* \"#utility.yul\":9889:10296   */\n      jump\n        /* \"Eip2535/EIp2535Diamond.sol\":3502:3617  require(... */\n    tag_118:\n        /* \"Eip2535/EIp2535Diamond.sol\":3627:3639  voterDetails */\n      0x00\n        /* \"Eip2535/EIp2535Diamond.sol\":3627:3650  voterDetails[voterCard] */\n      dup2\n      dup2\n      mstore\n      0x20\n      dup2\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"Eip2535/EIp2535Diamond.sol\":3627:3679  voterDetails[voterCard].voterAddress = _voterAddress */\n      dup1\n      sload\n      0xffffffffffffffffffffffff0000000000000000000000000000000000000000\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      dup10\n      and\n      or\n      dup2\n      sstore\n      0x01\n        /* \"Eip2535/EIp2535Diamond.sol\":3689:3724  voterDetails[voterCard].partyNumber */\n      swap1\n      dup2\n      add\n        /* \"Eip2535/EIp2535Diamond.sol\":3689:3739  voterDetails[voterCard].partyNumber = _partyNumber */\n      dup7\n      swap1\n      sstore\n        /* \"Eip2535/EIp2535Diamond.sol\":3749:3779  candidateDetails[_partyNumber] */\n      dup6\n      dup5\n      mstore\n      swap2\n      dup3\n      swap1\n      mstore\n      dup3\n      keccak256\n        /* \"Eip2535/EIp2535Diamond.sol\":3749:3790  candidateDetails[_partyNumber].totalVotes */\n      0x03\n      add\n        /* \"Eip2535/EIp2535Diamond.sol\":3749:3795  candidateDetails[_partyNumber].totalVotes += 1 */\n      dup1\n      sload\n      swap2\n      swap3\n        /* \"Eip2535/EIp2535Diamond.sol\":3749:3790  candidateDetails[_partyNumber].totalVotes */\n      swap1\n      swap2\n        /* \"Eip2535/EIp2535Diamond.sol\":3749:3795  candidateDetails[_partyNumber].totalVotes += 1 */\n      tag_121\n      swap1\n      dup5\n      swap1\n      tag_86\n      jump\t// in\n    tag_121:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n        /* \"Eip2535/EIp2535Diamond.sol\":3805:3824  hasVoted[voterCard] */\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"Eip2535/EIp2535Diamond.sol\":3805:3813  hasVoted */\n      0x02\n        /* \"Eip2535/EIp2535Diamond.sol\":3805:3824  hasVoted[voterCard] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      swap2\n      dup3\n      swap1\n      keccak256\n        /* \"Eip2535/EIp2535Diamond.sol\":3805:3831  hasVoted[voterCard] = true */\n      dup1\n      sload\n      not(0xff)\n      and\n        /* \"Eip2535/EIp2535Diamond.sol\":3827:3831  true */\n      0x01\n        /* \"Eip2535/EIp2535Diamond.sol\":3805:3831  hasVoted[voterCard] = true */\n      or\n      swap1\n      sstore\n        /* \"Eip2535/EIp2535Diamond.sol\":3846:3899  VoteCasted(_voterAddress, _voterCardNo, _partyNumber) */\n      dup2\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":2294:2349   */\n      dup8\n      and\n        /* \"#utility.yul\":2276:2350   */\n      dup2\n      mstore\n        /* \"#utility.yul\":2366:2384   */\n      swap1\n      dup2\n      add\n        /* \"#utility.yul\":2359:2393   */\n      dup5\n      swap1\n      mstore\n        /* \"Eip2535/EIp2535Diamond.sol\":3872:3884  _voterCardNo */\n      dup5\n      swap2\n        /* \"Eip2535/EIp2535Diamond.sol\":3846:3899  VoteCasted(_voterAddress, _voterCardNo, _partyNumber) */\n      0xcb87df07b1c304492bd875a5c8b98672eca500939412809ea229afef1d745188\n      swap2\n        /* \"#utility.yul\":2249:2267   */\n      add\n        /* \"Eip2535/EIp2535Diamond.sol\":3846:3899  VoteCasted(_voterAddress, _voterCardNo, _partyNumber) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"Eip2535/EIp2535Diamond.sol\":3302:3906  {... */\n      pop\n        /* \"Eip2535/EIp2535Diamond.sol\":3173:3906  function addVoterDetails(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"Eip2535/EIp2535Diamond.sol\":2941:3167  function checkCandidateStatus(uint256 _voterCardNo)... */\n    tag_61:\n        /* \"Eip2535/EIp2535Diamond.sol\":3038:3042  bool */\n      0x00\n        /* \"Eip2535/EIp2535Diamond.sol\":3058:3075  bytes32 voterCard */\n      dup1\n        /* \"Eip2535/EIp2535Diamond.sol\":3105:3117  _voterCardNo */\n      dup3\n        /* \"Eip2535/EIp2535Diamond.sol\":3088:3118  abi.encodePacked(_voterCardNo) */\n      add(0x20, mload(0x40))\n      tag_124\n      swap2\n        /* \"#utility.yul\":4353:4372   */\n      dup2\n      mstore\n        /* \"#utility.yul\":4397:4399   */\n      0x20\n        /* \"#utility.yul\":4388:4400   */\n      add\n      swap1\n        /* \"#utility.yul\":4224:4406   */\n      jump\n        /* \"Eip2535/EIp2535Diamond.sol\":3088:3118  abi.encodePacked(_voterCardNo) */\n    tag_124:\n      0x40\n      dup1\n      mload\n      not(0x1f)\n      dup2\n      dup5\n      sub\n      add\n      dup2\n      mstore\n      swap2\n      dup2\n      mstore\n        /* \"Eip2535/EIp2535Diamond.sol\":3078:3119  keccak256(abi.encodePacked(_voterCardNo)) */\n      dup2\n      mload\n        /* \"Eip2535/EIp2535Diamond.sol\":3088:3118  abi.encodePacked(_voterCardNo) */\n      0x20\n        /* \"Eip2535/EIp2535Diamond.sol\":3078:3119  keccak256(abi.encodePacked(_voterCardNo)) */\n      swap3\n      dup4\n      add\n      keccak256\n        /* \"Eip2535/EIp2535Diamond.sol\":3136:3160  hasRegistered[voterCard] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"Eip2535/EIp2535Diamond.sol\":3136:3149  hasRegistered */\n      0x03\n        /* \"Eip2535/EIp2535Diamond.sol\":3136:3160  hasRegistered[voterCard] */\n      swap1\n      swap3\n      mstore\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n      swap4\n        /* \"Eip2535/EIp2535Diamond.sol\":2941:3167  function checkCandidateStatus(uint256 _voterCardNo)... */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"Eip2535/EIp2535Diamond.sol\":3912:4101  function checkVoterStatus(uint256 _voterCardNo) public view returns (bool) {... */\n    tag_65:\n        /* \"Eip2535/EIp2535Diamond.sol\":3981:3985  bool */\n      0x00\n        /* \"Eip2535/EIp2535Diamond.sol\":3997:4014  bytes32 voterCard */\n      dup1\n        /* \"Eip2535/EIp2535Diamond.sol\":4044:4056  _voterCardNo */\n      dup3\n        /* \"Eip2535/EIp2535Diamond.sol\":4027:4057  abi.encodePacked(_voterCardNo) */\n      add(0x20, mload(0x40))\n      tag_126\n      swap2\n        /* \"#utility.yul\":4353:4372   */\n      dup2\n      mstore\n        /* \"#utility.yul\":4397:4399   */\n      0x20\n        /* \"#utility.yul\":4388:4400   */\n      add\n      swap1\n        /* \"#utility.yul\":4224:4406   */\n      jump\n        /* \"Eip2535/EIp2535Diamond.sol\":4027:4057  abi.encodePacked(_voterCardNo) */\n    tag_126:\n      0x40\n      dup1\n      mload\n      not(0x1f)\n      dup2\n      dup5\n      sub\n      add\n      dup2\n      mstore\n      swap2\n      dup2\n      mstore\n        /* \"Eip2535/EIp2535Diamond.sol\":4017:4058  keccak256(abi.encodePacked(_voterCardNo)) */\n      dup2\n      mload\n        /* \"Eip2535/EIp2535Diamond.sol\":4027:4057  abi.encodePacked(_voterCardNo) */\n      0x20\n        /* \"Eip2535/EIp2535Diamond.sol\":4017:4058  keccak256(abi.encodePacked(_voterCardNo)) */\n      swap3\n      dup4\n      add\n      keccak256\n        /* \"Eip2535/EIp2535Diamond.sol\":4075:4094  hasVoted[voterCard] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"Eip2535/EIp2535Diamond.sol\":4075:4083  hasVoted */\n      0x02\n        /* \"Eip2535/EIp2535Diamond.sol\":4075:4094  hasVoted[voterCard] */\n      swap1\n      swap3\n      mstore\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n      swap4\n        /* \"Eip2535/EIp2535Diamond.sol\":3912:4101  function checkVoterStatus(uint256 _voterCardNo) public view returns (bool) {... */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"Eip2535/EIp2535Diamond.sol\":1855:1875  string public winner */\n    tag_68:\n      0x07\n      dup1\n      sload\n      tag_127\n      swap1\n      tag_90\n      jump\t// in\n    tag_127:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_128\n      swap1\n      tag_90\n      jump\t// in\n    tag_128:\n      dup1\n      iszero\n      tag_129\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_130\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_129)\n    tag_130:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_131:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_131\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_129:\n      pop\n      pop\n      pop\n      pop\n      pop\n      dup2\n      jump\t// out\n        /* \"Eip2535/EIp2535Diamond.sol\":1820:1849  string[] public listOfParties */\n    tag_72:\n      0x06\n      dup2\n      dup2\n      sload\n      dup2\n      lt\n      tag_132\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_132:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      add\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      dup1\n      sload\n      tag_127\n      swap1\n      tag_90\n      jump\t// in\n        /* \"#utility.yul\":196:380   */\n    tag_139:\n      shl(0xe0, 0x4e487b71)\n        /* \"#utility.yul\":245:246   */\n      0x00\n        /* \"#utility.yul\":238:326   */\n      mstore\n        /* \"#utility.yul\":345:349   */\n      0x41\n        /* \"#utility.yul\":342:343   */\n      0x04\n        /* \"#utility.yul\":335:350   */\n      mstore\n        /* \"#utility.yul\":369:373   */\n      0x24\n        /* \"#utility.yul\":366:367   */\n      0x00\n        /* \"#utility.yul\":359:374   */\n      revert\n        /* \"#utility.yul\":385:1104   */\n    tag_140:\n        /* \"#utility.yul\":428:433   */\n      0x00\n        /* \"#utility.yul\":481:484   */\n      dup3\n        /* \"#utility.yul\":474:478   */\n      0x1f\n        /* \"#utility.yul\":466:472   */\n      dup4\n        /* \"#utility.yul\":462:479   */\n      add\n        /* \"#utility.yul\":458:485   */\n      slt\n        /* \"#utility.yul\":448:503   */\n      tag_149\n      jumpi\n        /* \"#utility.yul\":499:500   */\n      0x00\n        /* \"#utility.yul\":496:497   */\n      dup1\n        /* \"#utility.yul\":489:501   */\n      revert\n        /* \"#utility.yul\":448:503   */\n    tag_149:\n        /* \"#utility.yul\":535:541   */\n      dup2\n        /* \"#utility.yul\":522:542   */\n      calldataload\n        /* \"#utility.yul\":561:579   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":598:600   */\n      dup1\n        /* \"#utility.yul\":594:596   */\n      dup3\n        /* \"#utility.yul\":591:601   */\n      gt\n        /* \"#utility.yul\":588:624   */\n      iszero\n      tag_151\n      jumpi\n        /* \"#utility.yul\":604:622   */\n      tag_151\n      tag_139\n      jump\t// in\n    tag_151:\n        /* \"#utility.yul\":679:681   */\n      0x40\n        /* \"#utility.yul\":673:682   */\n      mload\n        /* \"#utility.yul\":647:649   */\n      0x1f\n        /* \"#utility.yul\":733:746   */\n      dup4\n      add\n      not(0x1f)\n        /* \"#utility.yul\":729:751   */\n      swap1\n      dup2\n      and\n        /* \"#utility.yul\":753:755   */\n      0x3f\n        /* \"#utility.yul\":725:756   */\n      add\n        /* \"#utility.yul\":721:761   */\n      and\n        /* \"#utility.yul\":709:762   */\n      dup2\n      add\n      swap1\n        /* \"#utility.yul\":777:795   */\n      dup3\n      dup3\n      gt\n        /* \"#utility.yul\":797:819   */\n      dup2\n      dup4\n      lt\n        /* \"#utility.yul\":774:820   */\n      or\n        /* \"#utility.yul\":771:843   */\n      iszero\n      tag_153\n      jumpi\n        /* \"#utility.yul\":823:841   */\n      tag_153\n      tag_139\n      jump\t// in\n    tag_153:\n        /* \"#utility.yul\":863:873   */\n      dup2\n        /* \"#utility.yul\":859:861   */\n      0x40\n        /* \"#utility.yul\":852:874   */\n      mstore\n        /* \"#utility.yul\":898:900   */\n      dup4\n        /* \"#utility.yul\":890:896   */\n      dup2\n        /* \"#utility.yul\":883:901   */\n      mstore\n        /* \"#utility.yul\":944:947   */\n      dup7\n        /* \"#utility.yul\":937:941   */\n      0x20\n        /* \"#utility.yul\":932:934   */\n      dup6\n        /* \"#utility.yul\":924:930   */\n      dup9\n        /* \"#utility.yul\":920:935   */\n      add\n        /* \"#utility.yul\":916:942   */\n      add\n        /* \"#utility.yul\":913:948   */\n      gt\n        /* \"#utility.yul\":910:965   */\n      iszero\n      tag_154\n      jumpi\n        /* \"#utility.yul\":961:962   */\n      0x00\n        /* \"#utility.yul\":958:959   */\n      dup1\n        /* \"#utility.yul\":951:963   */\n      revert\n        /* \"#utility.yul\":910:965   */\n    tag_154:\n        /* \"#utility.yul\":1025:1027   */\n      dup4\n        /* \"#utility.yul\":1018:1022   */\n      0x20\n        /* \"#utility.yul\":1010:1016   */\n      dup8\n        /* \"#utility.yul\":1006:1023   */\n      add\n        /* \"#utility.yul\":999:1003   */\n      0x20\n        /* \"#utility.yul\":991:997   */\n      dup4\n        /* \"#utility.yul\":987:1004   */\n      add\n        /* \"#utility.yul\":974:1028   */\n      calldatacopy\n        /* \"#utility.yul\":1072:1073   */\n      0x00\n        /* \"#utility.yul\":1065:1069   */\n      0x20\n        /* \"#utility.yul\":1060:1062   */\n      dup6\n        /* \"#utility.yul\":1052:1058   */\n      dup4\n        /* \"#utility.yul\":1048:1063   */\n      add\n        /* \"#utility.yul\":1044:1070   */\n      add\n        /* \"#utility.yul\":1037:1074   */\n      mstore\n        /* \"#utility.yul\":1092:1098   */\n      dup1\n        /* \"#utility.yul\":1083:1098   */\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":385:1104   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1109:1720   */\n    tag_25:\n        /* \"#utility.yul\":1206:1212   */\n      0x00\n        /* \"#utility.yul\":1214:1220   */\n      dup1\n        /* \"#utility.yul\":1222:1228   */\n      0x00\n        /* \"#utility.yul\":1275:1277   */\n      0x60\n        /* \"#utility.yul\":1263:1272   */\n      dup5\n        /* \"#utility.yul\":1254:1261   */\n      dup7\n        /* \"#utility.yul\":1250:1273   */\n      sub\n        /* \"#utility.yul\":1246:1278   */\n      slt\n        /* \"#utility.yul\":1243:1295   */\n      iszero\n      tag_156\n      jumpi\n        /* \"#utility.yul\":1291:1292   */\n      0x00\n        /* \"#utility.yul\":1288:1289   */\n      dup1\n        /* \"#utility.yul\":1281:1293   */\n      revert\n        /* \"#utility.yul\":1243:1295   */\n    tag_156:\n        /* \"#utility.yul\":1331:1340   */\n      dup4\n        /* \"#utility.yul\":1318:1341   */\n      calldataload\n        /* \"#utility.yul\":1360:1378   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":1401:1403   */\n      dup1\n        /* \"#utility.yul\":1393:1399   */\n      dup3\n        /* \"#utility.yul\":1390:1404   */\n      gt\n        /* \"#utility.yul\":1387:1421   */\n      iszero\n      tag_157\n      jumpi\n        /* \"#utility.yul\":1417:1418   */\n      0x00\n        /* \"#utility.yul\":1414:1415   */\n      dup1\n        /* \"#utility.yul\":1407:1419   */\n      revert\n        /* \"#utility.yul\":1387:1421   */\n    tag_157:\n        /* \"#utility.yul\":1440:1490   */\n      tag_158\n        /* \"#utility.yul\":1482:1489   */\n      dup8\n        /* \"#utility.yul\":1473:1479   */\n      dup4\n        /* \"#utility.yul\":1462:1471   */\n      dup9\n        /* \"#utility.yul\":1458:1480   */\n      add\n        /* \"#utility.yul\":1440:1490   */\n      tag_140\n      jump\t// in\n    tag_158:\n        /* \"#utility.yul\":1430:1490   */\n      swap5\n      pop\n        /* \"#utility.yul\":1537:1539   */\n      0x20\n        /* \"#utility.yul\":1526:1535   */\n      dup7\n        /* \"#utility.yul\":1522:1540   */\n      add\n        /* \"#utility.yul\":1509:1541   */\n      calldataload\n        /* \"#utility.yul\":1499:1541   */\n      swap4\n      pop\n        /* \"#utility.yul\":1594:1596   */\n      0x40\n        /* \"#utility.yul\":1583:1592   */\n      dup7\n        /* \"#utility.yul\":1579:1597   */\n      add\n        /* \"#utility.yul\":1566:1598   */\n      calldataload\n        /* \"#utility.yul\":1550:1598   */\n      swap2\n      pop\n        /* \"#utility.yul\":1623:1625   */\n      dup1\n        /* \"#utility.yul\":1613:1621   */\n      dup3\n        /* \"#utility.yul\":1610:1626   */\n      gt\n        /* \"#utility.yul\":1607:1643   */\n      iszero\n      tag_159\n      jumpi\n        /* \"#utility.yul\":1639:1640   */\n      0x00\n        /* \"#utility.yul\":1636:1637   */\n      dup1\n        /* \"#utility.yul\":1629:1641   */\n      revert\n        /* \"#utility.yul\":1607:1643   */\n    tag_159:\n      pop\n        /* \"#utility.yul\":1662:1714   */\n      tag_160\n        /* \"#utility.yul\":1706:1713   */\n      dup7\n        /* \"#utility.yul\":1695:1703   */\n      dup3\n        /* \"#utility.yul\":1684:1693   */\n      dup8\n        /* \"#utility.yul\":1680:1704   */\n      add\n        /* \"#utility.yul\":1662:1714   */\n      tag_140\n      jump\t// in\n    tag_160:\n        /* \"#utility.yul\":1652:1714   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":1109:1720   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":1725:1905   */\n    tag_29:\n        /* \"#utility.yul\":1784:1790   */\n      0x00\n        /* \"#utility.yul\":1837:1839   */\n      0x20\n        /* \"#utility.yul\":1825:1834   */\n      dup3\n        /* \"#utility.yul\":1816:1823   */\n      dup5\n        /* \"#utility.yul\":1812:1835   */\n      sub\n        /* \"#utility.yul\":1808:1840   */\n      slt\n        /* \"#utility.yul\":1805:1857   */\n      iszero\n      tag_162\n      jumpi\n        /* \"#utility.yul\":1853:1854   */\n      0x00\n        /* \"#utility.yul\":1850:1851   */\n      dup1\n        /* \"#utility.yul\":1843:1855   */\n      revert\n        /* \"#utility.yul\":1805:1857   */\n    tag_162:\n      pop\n        /* \"#utility.yul\":1876:1899   */\n      calldataload\n      swap2\n        /* \"#utility.yul\":1725:1905   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2589:3012   */\n    tag_141:\n        /* \"#utility.yul\":2631:2634   */\n      0x00\n        /* \"#utility.yul\":2669:2674   */\n      dup2\n        /* \"#utility.yul\":2663:2675   */\n      mload\n        /* \"#utility.yul\":2696:2702   */\n      dup1\n        /* \"#utility.yul\":2691:2694   */\n      dup5\n        /* \"#utility.yul\":2684:2703   */\n      mstore\n        /* \"#utility.yul\":2721:2722   */\n      0x00\n        /* \"#utility.yul\":2731:2893   */\n    tag_168:\n        /* \"#utility.yul\":2745:2751   */\n      dup2\n        /* \"#utility.yul\":2742:2743   */\n      dup2\n        /* \"#utility.yul\":2739:2752   */\n      lt\n        /* \"#utility.yul\":2731:2893   */\n      iszero\n      tag_170\n      jumpi\n        /* \"#utility.yul\":2807:2811   */\n      0x20\n        /* \"#utility.yul\":2863:2876   */\n      dup2\n      dup6\n      add\n        /* \"#utility.yul\":2859:2881   */\n      dup2\n      add\n        /* \"#utility.yul\":2853:2882   */\n      mload\n        /* \"#utility.yul\":2835:2846   */\n      dup7\n      dup4\n      add\n        /* \"#utility.yul\":2831:2851   */\n      dup3\n      add\n        /* \"#utility.yul\":2824:2883   */\n      mstore\n        /* \"#utility.yul\":2760:2772   */\n      add\n        /* \"#utility.yul\":2731:2893   */\n      jump(tag_168)\n    tag_170:\n        /* \"#utility.yul\":2735:2738   */\n      pop\n        /* \"#utility.yul\":2938:2939   */\n      0x00\n        /* \"#utility.yul\":2931:2935   */\n      0x20\n        /* \"#utility.yul\":2922:2928   */\n      dup3\n        /* \"#utility.yul\":2917:2920   */\n      dup7\n        /* \"#utility.yul\":2913:2929   */\n      add\n        /* \"#utility.yul\":2909:2936   */\n      add\n        /* \"#utility.yul\":2902:2940   */\n      mstore\n        /* \"#utility.yul\":3001:3005   */\n      0x20\n        /* \"#utility.yul\":2994:2996   */\n      0x1f\n        /* \"#utility.yul\":2990:2997   */\n      not\n        /* \"#utility.yul\":2985:2987   */\n      0x1f\n        /* \"#utility.yul\":2977:2983   */\n      dup4\n        /* \"#utility.yul\":2973:2988   */\n      add\n        /* \"#utility.yul\":2969:2998   */\n      and\n        /* \"#utility.yul\":2964:2967   */\n      dup6\n        /* \"#utility.yul\":2960:2999   */\n      add\n        /* \"#utility.yul\":2956:3006   */\n      add\n        /* \"#utility.yul\":2949:3006   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":2589:3012   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3017:3544   */\n    tag_46:\n        /* \"#utility.yul\":3270:3273   */\n      0x80\n        /* \"#utility.yul\":3259:3268   */\n      dup2\n        /* \"#utility.yul\":3252:3274   */\n      mstore\n        /* \"#utility.yul\":3233:3237   */\n      0x00\n        /* \"#utility.yul\":3297:3343   */\n      tag_172\n        /* \"#utility.yul\":3338:3341   */\n      0x80\n        /* \"#utility.yul\":3327:3336   */\n      dup4\n        /* \"#utility.yul\":3323:3342   */\n      add\n        /* \"#utility.yul\":3315:3321   */\n      dup8\n        /* \"#utility.yul\":3297:3343   */\n      tag_141\n      jump\t// in\n    tag_172:\n        /* \"#utility.yul\":3379:3385   */\n      dup6\n        /* \"#utility.yul\":3374:3376   */\n      0x20\n        /* \"#utility.yul\":3363:3372   */\n      dup5\n        /* \"#utility.yul\":3359:3377   */\n      add\n        /* \"#utility.yul\":3352:3386   */\n      mstore\n        /* \"#utility.yul\":3434:3443   */\n      dup3\n        /* \"#utility.yul\":3426:3432   */\n      dup2\n        /* \"#utility.yul\":3422:3444   */\n      sub\n        /* \"#utility.yul\":3417:3419   */\n      0x40\n        /* \"#utility.yul\":3406:3415   */\n      dup5\n        /* \"#utility.yul\":3402:3420   */\n      add\n        /* \"#utility.yul\":3395:3445   */\n      mstore\n        /* \"#utility.yul\":3462:3495   */\n      tag_173\n        /* \"#utility.yul\":3488:3494   */\n      dup2\n        /* \"#utility.yul\":3480:3486   */\n      dup7\n        /* \"#utility.yul\":3462:3495   */\n      tag_141\n      jump\t// in\n    tag_173:\n        /* \"#utility.yul\":3454:3495   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":3531:3537   */\n      dup3\n        /* \"#utility.yul\":3526:3528   */\n      0x60\n        /* \"#utility.yul\":3515:3524   */\n      dup4\n        /* \"#utility.yul\":3511:3529   */\n      add\n        /* \"#utility.yul\":3504:3538   */\n      mstore\n        /* \"#utility.yul\":3017:3544   */\n      swap6\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3549:3769   */\n    tag_50:\n        /* \"#utility.yul\":3698:3700   */\n      0x20\n        /* \"#utility.yul\":3687:3696   */\n      dup2\n        /* \"#utility.yul\":3680:3701   */\n      mstore\n        /* \"#utility.yul\":3661:3665   */\n      0x00\n        /* \"#utility.yul\":3718:3763   */\n      tag_175\n        /* \"#utility.yul\":3759:3761   */\n      0x20\n        /* \"#utility.yul\":3748:3757   */\n      dup4\n        /* \"#utility.yul\":3744:3762   */\n      add\n        /* \"#utility.yul\":3736:3742   */\n      dup5\n        /* \"#utility.yul\":3718:3763   */\n      tag_141\n      jump\t// in\n    tag_175:\n        /* \"#utility.yul\":3710:3763   */\n      swap4\n        /* \"#utility.yul\":3549:3769   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3774:4219   */\n    tag_57:\n        /* \"#utility.yul\":3851:3857   */\n      0x00\n        /* \"#utility.yul\":3859:3865   */\n      dup1\n        /* \"#utility.yul\":3867:3873   */\n      0x00\n        /* \"#utility.yul\":3920:3922   */\n      0x60\n        /* \"#utility.yul\":3908:3917   */\n      dup5\n        /* \"#utility.yul\":3899:3906   */\n      dup7\n        /* \"#utility.yul\":3895:3918   */\n      sub\n        /* \"#utility.yul\":3891:3923   */\n      slt\n        /* \"#utility.yul\":3888:3940   */\n      iszero\n      tag_177\n      jumpi\n        /* \"#utility.yul\":3936:3937   */\n      0x00\n        /* \"#utility.yul\":3933:3934   */\n      dup1\n        /* \"#utility.yul\":3926:3938   */\n      revert\n        /* \"#utility.yul\":3888:3940   */\n    tag_177:\n        /* \"#utility.yul\":3975:3984   */\n      dup4\n        /* \"#utility.yul\":3962:3985   */\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":4018:4023   */\n      dup2\n        /* \"#utility.yul\":4014:4068   */\n      and\n        /* \"#utility.yul\":4007:4012   */\n      dup2\n        /* \"#utility.yul\":4004:4069   */\n      eq\n        /* \"#utility.yul\":3994:4087   */\n      tag_178\n      jumpi\n        /* \"#utility.yul\":4083:4084   */\n      0x00\n        /* \"#utility.yul\":4080:4081   */\n      dup1\n        /* \"#utility.yul\":4073:4085   */\n      revert\n        /* \"#utility.yul\":3994:4087   */\n    tag_178:\n        /* \"#utility.yul\":4106:4111   */\n      swap6\n        /* \"#utility.yul\":4158:4160   */\n      0x20\n        /* \"#utility.yul\":4143:4161   */\n      dup6\n      add\n        /* \"#utility.yul\":4130:4162   */\n      calldataload\n      swap6\n      pop\n        /* \"#utility.yul\":4209:4211   */\n      0x40\n        /* \"#utility.yul\":4194:4212   */\n      swap1\n      swap5\n      add\n        /* \"#utility.yul\":4181:4213   */\n      calldataload\n      swap4\n        /* \"#utility.yul\":3774:4219   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4817:5254   */\n    tag_90:\n        /* \"#utility.yul\":4896:4897   */\n      0x01\n        /* \"#utility.yul\":4892:4904   */\n      dup2\n      dup2\n      shr\n      swap1\n        /* \"#utility.yul\":4939:4951   */\n      dup3\n      and\n      dup1\n        /* \"#utility.yul\":4960:5021   */\n      tag_182\n      jumpi\n        /* \"#utility.yul\":5014:5018   */\n      0x7f\n        /* \"#utility.yul\":5006:5012   */\n      dup3\n        /* \"#utility.yul\":5002:5019   */\n      and\n        /* \"#utility.yul\":4992:5019   */\n      swap2\n      pop\n        /* \"#utility.yul\":4960:5021   */\n    tag_182:\n        /* \"#utility.yul\":5067:5069   */\n      0x20\n        /* \"#utility.yul\":5059:5065   */\n      dup3\n        /* \"#utility.yul\":5056:5070   */\n      lt\n        /* \"#utility.yul\":5036:5054   */\n      dup2\n        /* \"#utility.yul\":5033:5071   */\n      sub\n        /* \"#utility.yul\":5030:5248   */\n      tag_183\n      jumpi\n      shl(0xe0, 0x4e487b71)\n        /* \"#utility.yul\":5101:5102   */\n      0x00\n        /* \"#utility.yul\":5094:5182   */\n      mstore\n        /* \"#utility.yul\":5205:5209   */\n      0x22\n        /* \"#utility.yul\":5202:5203   */\n      0x04\n        /* \"#utility.yul\":5195:5210   */\n      mstore\n        /* \"#utility.yul\":5233:5237   */\n      0x24\n        /* \"#utility.yul\":5230:5231   */\n      0x00\n        /* \"#utility.yul\":5223:5238   */\n      revert\n        /* \"#utility.yul\":5030:5248   */\n    tag_183:\n      pop\n        /* \"#utility.yul\":4817:5254   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5385:5903   */\n    tag_143:\n        /* \"#utility.yul\":5487:5489   */\n      0x1f\n        /* \"#utility.yul\":5482:5485   */\n      dup3\n        /* \"#utility.yul\":5479:5490   */\n      gt\n        /* \"#utility.yul\":5476:5897   */\n      iszero\n      tag_186\n      jumpi\n        /* \"#utility.yul\":5523:5528   */\n      dup1\n        /* \"#utility.yul\":5520:5521   */\n      0x00\n        /* \"#utility.yul\":5513:5529   */\n      mstore\n        /* \"#utility.yul\":5567:5571   */\n      0x20\n        /* \"#utility.yul\":5564:5565   */\n      0x00\n        /* \"#utility.yul\":5554:5572   */\n      keccak256\n        /* \"#utility.yul\":5637:5639   */\n      0x1f\n        /* \"#utility.yul\":5625:5635   */\n      dup5\n        /* \"#utility.yul\":5621:5640   */\n      add\n        /* \"#utility.yul\":5618:5619   */\n      0x05\n        /* \"#utility.yul\":5614:5641   */\n      shr\n        /* \"#utility.yul\":5608:5612   */\n      dup2\n        /* \"#utility.yul\":5604:5642   */\n      add\n        /* \"#utility.yul\":5673:5677   */\n      0x20\n        /* \"#utility.yul\":5661:5671   */\n      dup6\n        /* \"#utility.yul\":5658:5678   */\n      lt\n        /* \"#utility.yul\":5655:5702   */\n      iszero\n      tag_187\n      jumpi\n      pop\n        /* \"#utility.yul\":5696:5700   */\n      dup1\n        /* \"#utility.yul\":5655:5702   */\n    tag_187:\n        /* \"#utility.yul\":5751:5753   */\n      0x1f\n        /* \"#utility.yul\":5746:5749   */\n      dup5\n        /* \"#utility.yul\":5742:5754   */\n      add\n        /* \"#utility.yul\":5739:5740   */\n      0x05\n        /* \"#utility.yul\":5735:5755   */\n      shr\n        /* \"#utility.yul\":5729:5733   */\n      dup3\n        /* \"#utility.yul\":5725:5756   */\n      add\n        /* \"#utility.yul\":5715:5756   */\n      swap2\n      pop\n        /* \"#utility.yul\":5806:5887   */\n    tag_188:\n        /* \"#utility.yul\":5824:5826   */\n      dup2\n        /* \"#utility.yul\":5817:5822   */\n      dup2\n        /* \"#utility.yul\":5814:5827   */\n      lt\n        /* \"#utility.yul\":5806:5887   */\n      iszero\n      tag_190\n      jumpi\n        /* \"#utility.yul\":5883:5884   */\n      0x00\n        /* \"#utility.yul\":5869:5885   */\n      dup2\n      sstore\n        /* \"#utility.yul\":5850:5851   */\n      0x01\n        /* \"#utility.yul\":5839:5852   */\n      add\n        /* \"#utility.yul\":5806:5887   */\n      jump(tag_188)\n    tag_190:\n        /* \"#utility.yul\":5810:5813   */\n      pop\n      pop\n        /* \"#utility.yul\":5476:5897   */\n    tag_186:\n        /* \"#utility.yul\":5385:5903   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6079:7424   */\n    tag_81:\n        /* \"#utility.yul\":6205:6208   */\n      dup2\n        /* \"#utility.yul\":6199:6209   */\n      mload\n        /* \"#utility.yul\":6232:6250   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":6224:6230   */\n      dup2\n        /* \"#utility.yul\":6221:6251   */\n      gt\n        /* \"#utility.yul\":6218:6274   */\n      iszero\n      tag_194\n      jumpi\n        /* \"#utility.yul\":6254:6272   */\n      tag_194\n      tag_139\n      jump\t// in\n    tag_194:\n        /* \"#utility.yul\":6283:6380   */\n      tag_195\n        /* \"#utility.yul\":6373:6379   */\n      dup2\n        /* \"#utility.yul\":6333:6371   */\n      tag_196\n        /* \"#utility.yul\":6365:6369   */\n      dup5\n        /* \"#utility.yul\":6359:6370   */\n      sload\n        /* \"#utility.yul\":6333:6371   */\n      tag_90\n      jump\t// in\n    tag_196:\n        /* \"#utility.yul\":6327:6331   */\n      dup5\n        /* \"#utility.yul\":6283:6380   */\n      tag_143\n      jump\t// in\n    tag_195:\n        /* \"#utility.yul\":6435:6439   */\n      0x20\n      dup1\n        /* \"#utility.yul\":6492:6494   */\n      0x1f\n        /* \"#utility.yul\":6481:6495   */\n      dup4\n      gt\n        /* \"#utility.yul\":6509:6510   */\n      0x01\n        /* \"#utility.yul\":6504:7167   */\n      dup2\n      eq\n      tag_198\n      jumpi\n        /* \"#utility.yul\":7211:7212   */\n      0x00\n        /* \"#utility.yul\":7228:7234   */\n      dup5\n        /* \"#utility.yul\":7225:7314   */\n      iszero\n      tag_199\n      jumpi\n      pop\n        /* \"#utility.yul\":7280:7299   */\n      dup6\n      dup4\n      add\n        /* \"#utility.yul\":7274:7300   */\n      mload\n        /* \"#utility.yul\":7225:7314   */\n    tag_199:\n      not(0x00)\n        /* \"#utility.yul\":6036:6037   */\n      0x03\n        /* \"#utility.yul\":6032:6043   */\n      dup7\n      swap1\n      shl\n        /* \"#utility.yul\":6028:6052   */\n      shr\n        /* \"#utility.yul\":6024:6053   */\n      not\n        /* \"#utility.yul\":6014:6054   */\n      and\n        /* \"#utility.yul\":6060:6061   */\n      0x01\n        /* \"#utility.yul\":6056:6067   */\n      dup6\n      swap1\n      shl\n        /* \"#utility.yul\":6011:6068   */\n      or\n        /* \"#utility.yul\":7327:7408   */\n      dup6\n      sstore\n        /* \"#utility.yul\":6474:7418   */\n      jump(tag_197)\n        /* \"#utility.yul\":6504:7167   */\n    tag_198:\n        /* \"#utility.yul\":5332:5333   */\n      0x00\n        /* \"#utility.yul\":5325:5339   */\n      dup6\n      dup2\n      mstore\n        /* \"#utility.yul\":5369:5373   */\n      0x20\n        /* \"#utility.yul\":5356:5374   */\n      dup2\n      keccak256\n      not(0x1f)\n        /* \"#utility.yul\":6540:6560   */\n      dup7\n      and\n      swap2\n        /* \"#utility.yul\":6658:6894   */\n    tag_202:\n        /* \"#utility.yul\":6672:6679   */\n      dup3\n        /* \"#utility.yul\":6669:6670   */\n      dup2\n        /* \"#utility.yul\":6666:6680   */\n      lt\n        /* \"#utility.yul\":6658:6894   */\n      iszero\n      tag_204\n      jumpi\n        /* \"#utility.yul\":6761:6780   */\n      dup9\n      dup7\n      add\n        /* \"#utility.yul\":6755:6781   */\n      mload\n        /* \"#utility.yul\":6740:6782   */\n      dup3\n      sstore\n        /* \"#utility.yul\":6853:6880   */\n      swap5\n      dup5\n      add\n      swap5\n        /* \"#utility.yul\":6821:6822   */\n      0x01\n        /* \"#utility.yul\":6809:6823   */\n      swap1\n      swap2\n      add\n      swap1\n        /* \"#utility.yul\":6688:6707   */\n      dup5\n      add\n        /* \"#utility.yul\":6658:6894   */\n      jump(tag_202)\n    tag_204:\n        /* \"#utility.yul\":6662:6665   */\n      pop\n        /* \"#utility.yul\":6922:6928   */\n      dup6\n        /* \"#utility.yul\":6913:6920   */\n      dup3\n        /* \"#utility.yul\":6910:6929   */\n      lt\n        /* \"#utility.yul\":6907:7108   */\n      iszero\n      tag_205\n      jumpi\n        /* \"#utility.yul\":6983:7002   */\n      dup8\n      dup6\n      add\n        /* \"#utility.yul\":6977:7003   */\n      mload\n      not(0x00)\n        /* \"#utility.yul\":7066:7067   */\n      0x03\n        /* \"#utility.yul\":7062:7076   */\n      dup9\n      swap1\n      shl\n        /* \"#utility.yul\":7078:7081   */\n      0xf8\n        /* \"#utility.yul\":7058:7082   */\n      and\n        /* \"#utility.yul\":7054:7091   */\n      shr\n        /* \"#utility.yul\":7050:7092   */\n      not\n        /* \"#utility.yul\":7035:7093   */\n      and\n        /* \"#utility.yul\":7020:7094   */\n      dup2\n      sstore\n        /* \"#utility.yul\":6907:7108   */\n    tag_205:\n      pop\n      pop\n        /* \"#utility.yul\":7154:7155   */\n      0x01\n        /* \"#utility.yul\":7145:7151   */\n      dup5\n        /* \"#utility.yul\":7142:7143   */\n      0x01\n        /* \"#utility.yul\":7138:7152   */\n      shl\n        /* \"#utility.yul\":7134:7156   */\n      add\n        /* \"#utility.yul\":7128:7132   */\n      dup6\n        /* \"#utility.yul\":7121:7157   */\n      sstore\n        /* \"#utility.yul\":6474:7418   */\n    tag_197:\n      pop\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":6079:7424   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7429:7708   */\n    tag_86:\n        /* \"#utility.yul\":7494:7503   */\n      dup1\n      dup3\n      add\n        /* \"#utility.yul\":7515:7525   */\n      dup1\n      dup3\n      gt\n        /* \"#utility.yul\":7512:7702   */\n      iszero\n      tag_207\n      jumpi\n      shl(0xe0, 0x4e487b71)\n        /* \"#utility.yul\":7555:7556   */\n      0x00\n        /* \"#utility.yul\":7548:7636   */\n      mstore\n        /* \"#utility.yul\":7659:7663   */\n      0x11\n        /* \"#utility.yul\":7656:7657   */\n      0x04\n        /* \"#utility.yul\":7649:7664   */\n      mstore\n        /* \"#utility.yul\":7687:7691   */\n      0x24\n        /* \"#utility.yul\":7684:7685   */\n      0x00\n        /* \"#utility.yul\":7677:7692   */\n      revert\n        /* \"#utility.yul\":7512:7702   */\n    tag_207:\n        /* \"#utility.yul\":7429:7708   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7713:8096   */\n    tag_88:\n        /* \"#utility.yul\":7910:7912   */\n      0x40\n        /* \"#utility.yul\":7899:7908   */\n      dup2\n        /* \"#utility.yul\":7892:7913   */\n      mstore\n        /* \"#utility.yul\":7873:7877   */\n      0x00\n        /* \"#utility.yul\":7936:7981   */\n      tag_209\n        /* \"#utility.yul\":7977:7979   */\n      0x40\n        /* \"#utility.yul\":7966:7975   */\n      dup4\n        /* \"#utility.yul\":7962:7980   */\n      add\n        /* \"#utility.yul\":7954:7960   */\n      dup6\n        /* \"#utility.yul\":7936:7981   */\n      tag_141\n      jump\t// in\n    tag_209:\n        /* \"#utility.yul\":8029:8038   */\n      dup3\n        /* \"#utility.yul\":8021:8027   */\n      dup2\n        /* \"#utility.yul\":8017:8039   */\n      sub\n        /* \"#utility.yul\":8012:8014   */\n      0x20\n        /* \"#utility.yul\":8001:8010   */\n      dup5\n        /* \"#utility.yul\":7997:8015   */\n      add\n        /* \"#utility.yul\":7990:8040   */\n      mstore\n        /* \"#utility.yul\":8057:8090   */\n      tag_210\n        /* \"#utility.yul\":8083:8089   */\n      dup2\n        /* \"#utility.yul\":8075:8081   */\n      dup6\n        /* \"#utility.yul\":8057:8090   */\n      tag_141\n      jump\t// in\n    tag_210:\n        /* \"#utility.yul\":8049:8090   */\n      swap6\n        /* \"#utility.yul\":7713:8096   */\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8101:9528   */\n    tag_106:\n        /* \"#utility.yul\":8220:8223   */\n      dup2\n        /* \"#utility.yul\":8214:8218   */\n      dup2\n        /* \"#utility.yul\":8211:8224   */\n      sub\n        /* \"#utility.yul\":8208:8234   */\n      tag_212\n      jumpi\n        /* \"#utility.yul\":8227:8232   */\n      pop\n      pop\n        /* \"#utility.yul\":8101:9528   */\n      jump\t// out\n        /* \"#utility.yul\":8208:8234   */\n    tag_212:\n        /* \"#utility.yul\":8257:8294   */\n      tag_213\n        /* \"#utility.yul\":8289:8292   */\n      dup3\n        /* \"#utility.yul\":8283:8293   */\n      sload\n        /* \"#utility.yul\":8257:8294   */\n      tag_90\n      jump\t// in\n    tag_213:\n        /* \"#utility.yul\":8317:8335   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":8309:8315   */\n      dup2\n        /* \"#utility.yul\":8306:8336   */\n      gt\n        /* \"#utility.yul\":8303:8359   */\n      iszero\n      tag_215\n      jumpi\n        /* \"#utility.yul\":8339:8357   */\n      tag_215\n      tag_139\n      jump\t// in\n    tag_215:\n        /* \"#utility.yul\":8368:8465   */\n      tag_216\n        /* \"#utility.yul\":8458:8464   */\n      dup2\n        /* \"#utility.yul\":8418:8456   */\n      tag_196\n        /* \"#utility.yul\":8450:8454   */\n      dup5\n        /* \"#utility.yul\":8444:8455   */\n      sload\n        /* \"#utility.yul\":8418:8456   */\n      tag_90\n      jump\t// in\n        /* \"#utility.yul\":8368:8465   */\n    tag_216:\n        /* \"#utility.yul\":8491:8492   */\n      0x00\n        /* \"#utility.yul\":8519:8521   */\n      0x1f\n        /* \"#utility.yul\":8511:8517   */\n      dup3\n        /* \"#utility.yul\":8508:8522   */\n      gt\n        /* \"#utility.yul\":8536:8537   */\n      0x01\n        /* \"#utility.yul\":8531:9271   */\n      dup2\n      eq\n      tag_219\n      jumpi\n        /* \"#utility.yul\":9315:9316   */\n      0x00\n        /* \"#utility.yul\":9332:9338   */\n      dup4\n        /* \"#utility.yul\":9329:9418   */\n      iszero\n      tag_220\n      jumpi\n      pop\n        /* \"#utility.yul\":9384:9403   */\n      dup5\n      dup3\n      add\n        /* \"#utility.yul\":9378:9404   */\n      sload\n        /* \"#utility.yul\":9329:9418   */\n    tag_220:\n      not(0x00)\n        /* \"#utility.yul\":6036:6037   */\n      0x03\n        /* \"#utility.yul\":6032:6043   */\n      dup6\n      swap1\n      shl\n        /* \"#utility.yul\":6028:6052   */\n      shr\n        /* \"#utility.yul\":6024:6053   */\n      not\n        /* \"#utility.yul\":6014:6054   */\n      and\n        /* \"#utility.yul\":6060:6061   */\n      0x01\n        /* \"#utility.yul\":6056:6067   */\n      dup5\n      swap1\n      shl\n        /* \"#utility.yul\":6011:6068   */\n      or\n        /* \"#utility.yul\":9431:9512   */\n      dup5\n      sstore\n        /* \"#utility.yul\":8501:9522   */\n      jump(tag_190)\n        /* \"#utility.yul\":8531:9271   */\n    tag_219:\n        /* \"#utility.yul\":5332:5333   */\n      0x00\n        /* \"#utility.yul\":5325:5339   */\n      dup6\n      dup2\n      mstore\n        /* \"#utility.yul\":5369:5373   */\n      0x20\n        /* \"#utility.yul\":5356:5374   */\n      dup1\n      dup3\n      keccak256\n        /* \"#utility.yul\":5325:5339   */\n      dup7\n      dup4\n      mstore\n        /* \"#utility.yul\":5356:5374   */\n      swap1\n      dup3\n      keccak256\n      not(0x1f)\n        /* \"#utility.yul\":8567:8587   */\n      dup7\n      and\n      swap3\n        /* \"#utility.yul\":8745:8996   */\n    tag_224:\n        /* \"#utility.yul\":8759:8766   */\n      dup4\n        /* \"#utility.yul\":8756:8757   */\n      dup2\n        /* \"#utility.yul\":8753:8767   */\n      lt\n        /* \"#utility.yul\":8745:8996   */\n      iszero\n      tag_226\n      jumpi\n        /* \"#utility.yul\":8841:8862   */\n      dup3\n      dup7\n      add\n        /* \"#utility.yul\":8835:8863   */\n      sload\n        /* \"#utility.yul\":8820:8864   */\n      dup3\n      sstore\n        /* \"#utility.yul\":8891:8892   */\n      0x01\n        /* \"#utility.yul\":8964:8982   */\n      swap6\n      dup7\n      add\n      swap6\n        /* \"#utility.yul\":8919:8934   */\n      swap1\n      swap2\n      add\n      swap1\n        /* \"#utility.yul\":8782:8786   */\n      0x20\n        /* \"#utility.yul\":8775:8787   */\n      add\n        /* \"#utility.yul\":8745:8996   */\n      jump(tag_224)\n    tag_226:\n        /* \"#utility.yul\":8749:8752   */\n      pop\n        /* \"#utility.yul\":9024:9030   */\n      dup6\n        /* \"#utility.yul\":9015:9022   */\n      dup4\n        /* \"#utility.yul\":9012:9031   */\n      lt\n        /* \"#utility.yul\":9009:9212   */\n      iszero\n      tag_227\n      jumpi\n        /* \"#utility.yul\":9085:9106   */\n      dup2\n      dup6\n      add\n        /* \"#utility.yul\":9079:9107   */\n      sload\n      not(0x00)\n        /* \"#utility.yul\":9170:9171   */\n      0x03\n        /* \"#utility.yul\":9166:9180   */\n      dup9\n      swap1\n      shl\n        /* \"#utility.yul\":9182:9185   */\n      0xf8\n        /* \"#utility.yul\":9162:9186   */\n      and\n        /* \"#utility.yul\":9158:9195   */\n      shr\n        /* \"#utility.yul\":9154:9196   */\n      not\n        /* \"#utility.yul\":9139:9197   */\n      and\n        /* \"#utility.yul\":9124:9198   */\n      dup2\n      sstore\n        /* \"#utility.yul\":9009:9212   */\n    tag_227:\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":9258:9259   */\n      0x01\n        /* \"#utility.yul\":9242:9256   */\n      swap1\n      dup2\n      shl\n        /* \"#utility.yul\":9238:9260   */\n      add\n        /* \"#utility.yul\":9225:9261   */\n      swap1\n      sstore\n      pop\n        /* \"#utility.yul\":8101:9528   */\n      jump\t// out\n\n    auxdata: 0xa26469706673582212208f8c9f7f3806508a8613e313c7778581877dea0970e8661526a966c86539482a64736f6c63430008180033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b50610da78061001d5f395ff3fe608060405234801561000f575f80fd5b50600436106100da575f3560e01c80636537214711610088578063b2fb8e3711610063578063b2fb8e3714610208578063c93346ab1461021b578063dfbf53ae1461022e578063e9d729ae14610236575f80fd5b806365372147146101be5780636b0eec1c146101d35780637a26dd31146101f5575f80fd5b80631e51c9ea116100b85780631e51c9ea146101415780634d50ba3a146101925780636247e5321461019b575f80fd5b80630500894d146100de57806313732d79146100fa5780631b4613cb1461010f575b5f80fd5b6100e760045481565b6040519081526020015b60405180910390f35b61010d6101083660046109b8565b610249565b005b61013161011d366004610a20565b60026020525f908152604090205460ff1681565b60405190151581526020016100f1565b61017361014f366004610a20565b5f60208190529081526040902080546001909101546001600160a01b039091169082565b604080516001600160a01b0390931683526020830191909152016100f1565b6100e760055481565b6101ae6101a9366004610a20565b6103e6565b6040516100f19493929190610a7a565b6101c6610519565b6040516100f19190610ab6565b6101316101e1366004610a20565b60036020525f908152604090205460ff1681565b61010d610203366004610acf565b61060c565b610131610216366004610a20565b6107e2565b610131610229366004610a20565b610825565b6101c6610868565b6101c6610244366004610a20565b6108f4565b5f8260405160200161025d91815260200190565b60408051601f1981840301815291815281516020928301205f818152600390935291205490915060ff16156102ff5760405162461bcd60e51b815260206004820152602560248201527f43616e6469646174652068617320616c7265616479206265656e20726567697360448201527f746572656400000000000000000000000000000000000000000000000000000060648201526084015b60405180910390fd5b6004545f8181526001602052604090206103198682610b90565b505f81815260016020819052604090912090810183905560020161033d8482610b90565b505f828152600360205260408120805460ff191660019081179091556006805491820181559091527ff652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d3f016103918482610b90565b506004546103a0906001610c50565b60045560405184907fdbbc48772584850c2086f66c22a3654c9e46524ff539fd9d72198d91cb7c13c0906103d79088908790610c75565b60405180910390a25050505050565b60016020525f908152604090208054819061040090610b0c565b80601f016020809104026020016040519081016040528092919081815260200182805461042c90610b0c565b80156104775780601f1061044e57610100808354040283529160200191610477565b820191905f5260205f20905b81548152906001019060200180831161045a57829003601f168201915b50505050509080600101549080600201805461049290610b0c565b80601f01602080910402602001604051908101604052809291908181526020018280546104be90610b0c565b80156105095780601f106104e057610100808354040283529160200191610509565b820191905f5260205f20905b8154815290600101906020018083116104ec57829003601f168201915b5050505050908060030154905084565b60605f805f5b600654811015610560575f81815260016020526040902060030154831015610558575f8181526001602052604090206003015492509050805b60010161051f565b505f81815260016020526040902060079061057b9082610ca2565b506007805461058990610b0c565b80601f01602080910402602001604051908101604052809291908181526020018280546105b590610b0c565b80156106005780601f106105d757610100808354040283529160200191610600565b820191905f5260205f20905b8154815290600101906020018083116105e357829003601f168201915b50505050509250505090565b60055461061a906001610c50565b60055560408051602080820185905282518083038201815291830183528151918101919091205f81815260029092529190205460ff161561069d5760405162461bcd60e51b815260206004820152601b60248201527f43616e6469646174652068617320616c726561647920766f746564000000000060448201526064016102f6565b600654600211156107165760405162461bcd60e51b815260206004820152602b60248201527f54686572652063616e277420626520656c656374696f6e20776974682061207360448201527f696e676c6520706172747900000000000000000000000000000000000000000060648201526084016102f6565b5f8181526020818152604080832080547fffffffffffffffffffffffff0000000000000000000000000000000000000000166001600160a01b038916178155600190810186905585845291829052822060030180549192909161077a908490610c50565b90915550505f81815260026020908152604091829020805460ff1916600117905581516001600160a01b038716815290810184905284917fcb87df07b1c304492bd875a5c8b98672eca500939412809ea229afef1d745188910160405180910390a250505050565b5f80826040516020016107f791815260200190565b60408051601f1981840301815291815281516020928301205f908152600390925290205460ff169392505050565b5f808260405160200161083a91815260200190565b60408051601f1981840301815291815281516020928301205f908152600290925290205460ff169392505050565b6007805461087590610b0c565b80601f01602080910402602001604051908101604052809291908181526020018280546108a190610b0c565b80156108ec5780601f106108c3576101008083540402835291602001916108ec565b820191905f5260205f20905b8154815290600101906020018083116108cf57829003601f168201915b505050505081565b60068181548110610903575f80fd5b905f5260205f20015f91509050805461087590610b0c565b634e487b7160e01b5f52604160045260245ffd5b5f82601f83011261093e575f80fd5b813567ffffffffffffffff808211156109595761095961091b565b604051601f8301601f19908116603f011681019082821181831017156109815761098161091b565b81604052838152866020858801011115610999575f80fd5b836020870160208301375f602085830101528094505050505092915050565b5f805f606084860312156109ca575f80fd5b833567ffffffffffffffff808211156109e1575f80fd5b6109ed8783880161092f565b9450602086013593506040860135915080821115610a09575f80fd5b50610a168682870161092f565b9150509250925092565b5f60208284031215610a30575f80fd5b5035919050565b5f81518084525f5b81811015610a5b57602081850181015186830182015201610a3f565b505f602082860101526020601f19601f83011685010191505092915050565b608081525f610a8c6080830187610a37565b8560208401528281036040840152610aa48186610a37565b91505082606083015295945050505050565b602081525f610ac86020830184610a37565b9392505050565b5f805f60608486031215610ae1575f80fd5b83356001600160a01b0381168114610af7575f80fd5b95602085013595506040909401359392505050565b600181811c90821680610b2057607f821691505b602082108103610b3e57634e487b7160e01b5f52602260045260245ffd5b50919050565b601f821115610b8b57805f5260205f20601f840160051c81016020851015610b695750805b601f840160051c820191505b81811015610b88575f8155600101610b75565b50505b505050565b815167ffffffffffffffff811115610baa57610baa61091b565b610bbe81610bb88454610b0c565b84610b44565b602080601f831160018114610bf1575f8415610bda5750858301515b5f19600386901b1c1916600185901b178555610c48565b5f85815260208120601f198616915b82811015610c1f57888601518255948401946001909101908401610c00565b5085821015610c3c57878501515f19600388901b60f8161c191681555b505060018460011b0185555b505050505050565b80820180821115610c6f57634e487b7160e01b5f52601160045260245ffd5b92915050565b604081525f610c876040830185610a37565b8281036020840152610c998185610a37565b95945050505050565b818103610cad575050565b610cb78254610b0c565b67ffffffffffffffff811115610ccf57610ccf61091b565b610cdd81610bb88454610b0c565b5f601f821160018114610d0e575f8315610cf75750848201545b5f19600385901b1c1916600184901b178455610b88565b5f8581526020808220868352908220601f198616925b83811015610d445782860154825560019586019590910190602001610d24565b5085831015610d6157818501545f19600388901b60f8161c191681555b5050505050600190811b0190555056fea26469706673582212208f8c9f7f3806508a8613e313c7778581877dea0970e8661526a966c86539482a64736f6c63430008180033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0xDA7 DUP1 PUSH2 0x1D PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xDA JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x65372147 GT PUSH2 0x88 JUMPI DUP1 PUSH4 0xB2FB8E37 GT PUSH2 0x63 JUMPI DUP1 PUSH4 0xB2FB8E37 EQ PUSH2 0x208 JUMPI DUP1 PUSH4 0xC93346AB EQ PUSH2 0x21B JUMPI DUP1 PUSH4 0xDFBF53AE EQ PUSH2 0x22E JUMPI DUP1 PUSH4 0xE9D729AE EQ PUSH2 0x236 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x65372147 EQ PUSH2 0x1BE JUMPI DUP1 PUSH4 0x6B0EEC1C EQ PUSH2 0x1D3 JUMPI DUP1 PUSH4 0x7A26DD31 EQ PUSH2 0x1F5 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x1E51C9EA GT PUSH2 0xB8 JUMPI DUP1 PUSH4 0x1E51C9EA EQ PUSH2 0x141 JUMPI DUP1 PUSH4 0x4D50BA3A EQ PUSH2 0x192 JUMPI DUP1 PUSH4 0x6247E532 EQ PUSH2 0x19B JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x500894D EQ PUSH2 0xDE JUMPI DUP1 PUSH4 0x13732D79 EQ PUSH2 0xFA JUMPI DUP1 PUSH4 0x1B4613CB EQ PUSH2 0x10F JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xE7 PUSH1 0x4 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x10D PUSH2 0x108 CALLDATASIZE PUSH1 0x4 PUSH2 0x9B8 JUMP JUMPDEST PUSH2 0x249 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x131 PUSH2 0x11D CALLDATASIZE PUSH1 0x4 PUSH2 0xA20 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x20 MSTORE PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xF1 JUMP JUMPDEST PUSH2 0x173 PUSH2 0x14F CALLDATASIZE PUSH1 0x4 PUSH2 0xA20 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP2 SWAP1 MSTORE SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 SWAP1 SWAP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 DUP3 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP4 AND DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE ADD PUSH2 0xF1 JUMP JUMPDEST PUSH2 0xE7 PUSH1 0x5 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x1AE PUSH2 0x1A9 CALLDATASIZE PUSH1 0x4 PUSH2 0xA20 JUMP JUMPDEST PUSH2 0x3E6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xF1 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xA7A JUMP JUMPDEST PUSH2 0x1C6 PUSH2 0x519 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xF1 SWAP2 SWAP1 PUSH2 0xAB6 JUMP JUMPDEST PUSH2 0x131 PUSH2 0x1E1 CALLDATASIZE PUSH1 0x4 PUSH2 0xA20 JUMP JUMPDEST PUSH1 0x3 PUSH1 0x20 MSTORE PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH2 0x10D PUSH2 0x203 CALLDATASIZE PUSH1 0x4 PUSH2 0xACF JUMP JUMPDEST PUSH2 0x60C JUMP JUMPDEST PUSH2 0x131 PUSH2 0x216 CALLDATASIZE PUSH1 0x4 PUSH2 0xA20 JUMP JUMPDEST PUSH2 0x7E2 JUMP JUMPDEST PUSH2 0x131 PUSH2 0x229 CALLDATASIZE PUSH1 0x4 PUSH2 0xA20 JUMP JUMPDEST PUSH2 0x825 JUMP JUMPDEST PUSH2 0x1C6 PUSH2 0x868 JUMP JUMPDEST PUSH2 0x1C6 PUSH2 0x244 CALLDATASIZE PUSH1 0x4 PUSH2 0xA20 JUMP JUMPDEST PUSH2 0x8F4 JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x25D SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP2 DUP2 MSTORE DUP2 MLOAD PUSH1 0x20 SWAP3 DUP4 ADD KECCAK256 PUSH0 DUP2 DUP2 MSTORE PUSH1 0x3 SWAP1 SWAP4 MSTORE SWAP2 KECCAK256 SLOAD SWAP1 SWAP2 POP PUSH1 0xFF AND ISZERO PUSH2 0x2FF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x43616E6469646174652068617320616C7265616479206265656E207265676973 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x7465726564000000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x4 SLOAD PUSH0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH2 0x319 DUP7 DUP3 PUSH2 0xB90 JUMP JUMPDEST POP PUSH0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 SWAP1 DUP2 ADD DUP4 SWAP1 SSTORE PUSH1 0x2 ADD PUSH2 0x33D DUP5 DUP3 PUSH2 0xB90 JUMP JUMPDEST POP PUSH0 DUP3 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x6 DUP1 SLOAD SWAP2 DUP3 ADD DUP2 SSTORE SWAP1 SWAP2 MSTORE PUSH32 0xF652222313E28459528D920B65115C16C04F3EFC82AAEDC97BE59F3F377C0D3F ADD PUSH2 0x391 DUP5 DUP3 PUSH2 0xB90 JUMP JUMPDEST POP PUSH1 0x4 SLOAD PUSH2 0x3A0 SWAP1 PUSH1 0x1 PUSH2 0xC50 JUMP JUMPDEST PUSH1 0x4 SSTORE PUSH1 0x40 MLOAD DUP5 SWAP1 PUSH32 0xDBBC48772584850C2086F66C22A3654C9E46524FF539FD9D72198D91CB7C13C0 SWAP1 PUSH2 0x3D7 SWAP1 DUP9 SWAP1 DUP8 SWAP1 PUSH2 0xC75 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x20 MSTORE PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD DUP2 SWAP1 PUSH2 0x400 SWAP1 PUSH2 0xB0C JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x42C SWAP1 PUSH2 0xB0C JUMP JUMPDEST DUP1 ISZERO PUSH2 0x477 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x44E JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x477 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x45A JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 DUP1 PUSH1 0x2 ADD DUP1 SLOAD PUSH2 0x492 SWAP1 PUSH2 0xB0C JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x4BE SWAP1 PUSH2 0xB0C JUMP JUMPDEST DUP1 ISZERO PUSH2 0x509 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x4E0 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x509 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x4EC JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 DUP1 PUSH1 0x3 ADD SLOAD SWAP1 POP DUP5 JUMP JUMPDEST PUSH1 0x60 PUSH0 DUP1 PUSH0 JUMPDEST PUSH1 0x6 SLOAD DUP2 LT ISZERO PUSH2 0x560 JUMPI PUSH0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x3 ADD SLOAD DUP4 LT ISZERO PUSH2 0x558 JUMPI PUSH0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x3 ADD SLOAD SWAP3 POP SWAP1 POP DUP1 JUMPDEST PUSH1 0x1 ADD PUSH2 0x51F JUMP JUMPDEST POP PUSH0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x7 SWAP1 PUSH2 0x57B SWAP1 DUP3 PUSH2 0xCA2 JUMP JUMPDEST POP PUSH1 0x7 DUP1 SLOAD PUSH2 0x589 SWAP1 PUSH2 0xB0C JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x5B5 SWAP1 PUSH2 0xB0C JUMP JUMPDEST DUP1 ISZERO PUSH2 0x600 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x5D7 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x600 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x5E3 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP3 POP POP POP SWAP1 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH2 0x61A SWAP1 PUSH1 0x1 PUSH2 0xC50 JUMP JUMPDEST PUSH1 0x5 SSTORE PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP1 DUP3 ADD DUP6 SWAP1 MSTORE DUP3 MLOAD DUP1 DUP4 SUB DUP3 ADD DUP2 MSTORE SWAP2 DUP4 ADD DUP4 MSTORE DUP2 MLOAD SWAP2 DUP2 ADD SWAP2 SWAP1 SWAP2 KECCAK256 PUSH0 DUP2 DUP2 MSTORE PUSH1 0x2 SWAP1 SWAP3 MSTORE SWAP2 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x69D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x43616E6469646174652068617320616C726561647920766F7465640000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x2F6 JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x2 GT ISZERO PUSH2 0x716 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x54686572652063616E277420626520656C656374696F6E207769746820612073 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x696E676C65207061727479000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x2F6 JUMP JUMPDEST PUSH0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP10 AND OR DUP2 SSTORE PUSH1 0x1 SWAP1 DUP2 ADD DUP7 SWAP1 SSTORE DUP6 DUP5 MSTORE SWAP2 DUP3 SWAP1 MSTORE DUP3 KECCAK256 PUSH1 0x3 ADD DUP1 SLOAD SWAP2 SWAP3 SWAP1 SWAP2 PUSH2 0x77A SWAP1 DUP5 SWAP1 PUSH2 0xC50 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND DUP2 MSTORE SWAP1 DUP2 ADD DUP5 SWAP1 MSTORE DUP5 SWAP2 PUSH32 0xCB87DF07B1C304492BD875A5C8B98672ECA500939412809EA229AFEF1D745188 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP POP JUMP JUMPDEST PUSH0 DUP1 DUP3 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x7F7 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP2 DUP2 MSTORE DUP2 MLOAD PUSH1 0x20 SWAP3 DUP4 ADD KECCAK256 PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x3 SWAP1 SWAP3 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP1 DUP3 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x83A SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP2 DUP2 MSTORE DUP2 MLOAD PUSH1 0x20 SWAP3 DUP4 ADD KECCAK256 PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x2 SWAP1 SWAP3 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x7 DUP1 SLOAD PUSH2 0x875 SWAP1 PUSH2 0xB0C JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x8A1 SWAP1 PUSH2 0xB0C JUMP JUMPDEST DUP1 ISZERO PUSH2 0x8EC JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x8C3 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x8EC JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x8CF JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST PUSH1 0x6 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x903 JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 ADD PUSH0 SWAP2 POP SWAP1 POP DUP1 SLOAD PUSH2 0x875 SWAP1 PUSH2 0xB0C JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x93E JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x959 JUMPI PUSH2 0x959 PUSH2 0x91B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP4 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP3 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH2 0x981 JUMPI PUSH2 0x981 PUSH2 0x91B JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP4 DUP2 MSTORE DUP7 PUSH1 0x20 DUP6 DUP9 ADD ADD GT ISZERO PUSH2 0x999 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP4 PUSH1 0x20 DUP8 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH0 PUSH1 0x20 DUP6 DUP4 ADD ADD MSTORE DUP1 SWAP5 POP POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x9CA JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x9E1 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x9ED DUP8 DUP4 DUP9 ADD PUSH2 0x92F JUMP JUMPDEST SWAP5 POP PUSH1 0x20 DUP7 ADD CALLDATALOAD SWAP4 POP PUSH1 0x40 DUP7 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0xA09 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0xA16 DUP7 DUP3 DUP8 ADD PUSH2 0x92F JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xA30 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xA5B JUMPI PUSH1 0x20 DUP2 DUP6 ADD DUP2 ADD MLOAD DUP7 DUP4 ADD DUP3 ADD MSTORE ADD PUSH2 0xA3F JUMP JUMPDEST POP PUSH0 PUSH1 0x20 DUP3 DUP7 ADD ADD MSTORE PUSH1 0x20 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP6 ADD ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x80 DUP2 MSTORE PUSH0 PUSH2 0xA8C PUSH1 0x80 DUP4 ADD DUP8 PUSH2 0xA37 JUMP JUMPDEST DUP6 PUSH1 0x20 DUP5 ADD MSTORE DUP3 DUP2 SUB PUSH1 0x40 DUP5 ADD MSTORE PUSH2 0xAA4 DUP2 DUP7 PUSH2 0xA37 JUMP JUMPDEST SWAP2 POP POP DUP3 PUSH1 0x60 DUP4 ADD MSTORE SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH0 PUSH2 0xAC8 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xA37 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xAE1 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xAF7 JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP6 PUSH1 0x20 DUP6 ADD CALLDATALOAD SWAP6 POP PUSH1 0x40 SWAP1 SWAP5 ADD CALLDATALOAD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0xB20 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0xB3E JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0xB8B JUMPI DUP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0xB69 JUMPI POP DUP1 JUMPDEST PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP3 ADD SWAP2 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xB88 JUMPI PUSH0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0xB75 JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST DUP2 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xBAA JUMPI PUSH2 0xBAA PUSH2 0x91B JUMP JUMPDEST PUSH2 0xBBE DUP2 PUSH2 0xBB8 DUP5 SLOAD PUSH2 0xB0C JUMP JUMPDEST DUP5 PUSH2 0xB44 JUMP JUMPDEST PUSH1 0x20 DUP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0xBF1 JUMPI PUSH0 DUP5 ISZERO PUSH2 0xBDA JUMPI POP DUP6 DUP4 ADD MLOAD JUMPDEST PUSH0 NOT PUSH1 0x3 DUP7 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP6 SWAP1 SHL OR DUP6 SSTORE PUSH2 0xC48 JUMP JUMPDEST PUSH0 DUP6 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F NOT DUP7 AND SWAP2 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0xC1F JUMPI DUP9 DUP7 ADD MLOAD DUP3 SSTORE SWAP5 DUP5 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 DUP5 ADD PUSH2 0xC00 JUMP JUMPDEST POP DUP6 DUP3 LT ISZERO PUSH2 0xC3C JUMPI DUP8 DUP6 ADD MLOAD PUSH0 NOT PUSH1 0x3 DUP9 SWAP1 SHL PUSH1 0xF8 AND SHR NOT AND DUP2 SSTORE JUMPDEST POP POP PUSH1 0x1 DUP5 PUSH1 0x1 SHL ADD DUP6 SSTORE JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0xC6F JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x40 DUP2 MSTORE PUSH0 PUSH2 0xC87 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0xA37 JUMP JUMPDEST DUP3 DUP2 SUB PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0xC99 DUP2 DUP6 PUSH2 0xA37 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST DUP2 DUP2 SUB PUSH2 0xCAD JUMPI POP POP JUMP JUMPDEST PUSH2 0xCB7 DUP3 SLOAD PUSH2 0xB0C JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xCCF JUMPI PUSH2 0xCCF PUSH2 0x91B JUMP JUMPDEST PUSH2 0xCDD DUP2 PUSH2 0xBB8 DUP5 SLOAD PUSH2 0xB0C JUMP JUMPDEST PUSH0 PUSH1 0x1F DUP3 GT PUSH1 0x1 DUP2 EQ PUSH2 0xD0E JUMPI PUSH0 DUP4 ISZERO PUSH2 0xCF7 JUMPI POP DUP5 DUP3 ADD SLOAD JUMPDEST PUSH0 NOT PUSH1 0x3 DUP6 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP5 SWAP1 SHL OR DUP5 SSTORE PUSH2 0xB88 JUMP JUMPDEST PUSH0 DUP6 DUP2 MSTORE PUSH1 0x20 DUP1 DUP3 KECCAK256 DUP7 DUP4 MSTORE SWAP1 DUP3 KECCAK256 PUSH1 0x1F NOT DUP7 AND SWAP3 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xD44 JUMPI DUP3 DUP7 ADD SLOAD DUP3 SSTORE PUSH1 0x1 SWAP6 DUP7 ADD SWAP6 SWAP1 SWAP2 ADD SWAP1 PUSH1 0x20 ADD PUSH2 0xD24 JUMP JUMPDEST POP DUP6 DUP4 LT ISZERO PUSH2 0xD61 JUMPI DUP2 DUP6 ADD SLOAD PUSH0 NOT PUSH1 0x3 DUP9 SWAP1 SHL PUSH1 0xF8 AND SHR NOT AND DUP2 SSTORE JUMPDEST POP POP POP POP POP PUSH1 0x1 SWAP1 DUP2 SHL ADD SWAP1 SSTORE POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP16 DUP13 SWAP16 PUSH32 0x3806508A8613E313C7778581877DEA0970E8661526A966C86539482A64736F6C PUSH4 0x43000818 STOP CALLER ",
							"sourceMap": "1251:3265:42:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@addCandidateDetails_3741": {
									"entryPoint": 585,
									"id": 3741,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@addVoterDetails_3837": {
									"entryPoint": 1548,
									"id": 3837,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@candidateDetails_3631": {
									"entryPoint": 998,
									"id": 3631,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@checkCandidateStatus_3762": {
									"entryPoint": 2018,
									"id": 3762,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@checkVoterStatus_3858": {
									"entryPoint": 2085,
									"id": 3858,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@hasRegistered_3639": {
									"entryPoint": null,
									"id": 3639,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@hasVoted_3635": {
									"entryPoint": null,
									"id": 3635,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@listOfParties_3646": {
									"entryPoint": 2292,
									"id": 3646,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@partyCounter_3641": {
									"entryPoint": null,
									"id": 3641,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@result_3911": {
									"entryPoint": 1305,
									"id": 3911,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@voterCounter_3643": {
									"entryPoint": null,
									"id": 3643,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@voterDetails_3626": {
									"entryPoint": null,
									"id": 3626,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@winner_3648": {
									"entryPoint": 2152,
									"id": 3648,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_decode_string": {
									"entryPoint": 2351,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_uint256t_uint256": {
									"entryPoint": 2767,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_bytes32": {
									"entryPoint": 2592,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_string_memory_ptrt_uint256t_string_memory_ptr": {
									"entryPoint": 2488,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_string": {
									"entryPoint": 2615,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_packed_t_uint256__to_t_uint256__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 2742,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr_t_bytes32_t_string_memory_ptr_t_uint256__to_t_string_memory_ptr_t_bytes32_t_string_memory_ptr_t_uint256__fromStack_reversed": {
									"entryPoint": 2682,
									"id": null,
									"parameterSlots": 5,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 3189,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_2c187f4e0f6eb04cdbd9242393a666e35059a52e208c37195b601c63a6b61ec0__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_8ae60eef87ea50e2dfeaf131b4cf93241d4a9ae442c59029b80566ca970d987e__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_90aca1dee7cbf87125be2e3cfb599559c335409d533b41e2526632e81f0ce4b8__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_dataslot_string_storage": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 3152,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_string_storage": {
									"entryPoint": 2884,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 2960,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"copy_byte_array_to_storage_from_t_string_storage_ptr_to_t_string_storage": {
									"entryPoint": 3234,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 2828,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x41": {
									"entryPoint": 2331,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:10298:43",
										"nodeType": "YulBlock",
										"src": "0:10298:43",
										"statements": [
											{
												"nativeSrc": "6:3:43",
												"nodeType": "YulBlock",
												"src": "6:3:43",
												"statements": []
											},
											{
												"body": {
													"nativeSrc": "115:76:43",
													"nodeType": "YulBlock",
													"src": "115:76:43",
													"statements": [
														{
															"nativeSrc": "125:26:43",
															"nodeType": "YulAssignment",
															"src": "125:26:43",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "137:9:43",
																		"nodeType": "YulIdentifier",
																		"src": "137:9:43"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "148:2:43",
																		"nodeType": "YulLiteral",
																		"src": "148:2:43",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "133:3:43",
																	"nodeType": "YulIdentifier",
																	"src": "133:3:43"
																},
																"nativeSrc": "133:18:43",
																"nodeType": "YulFunctionCall",
																"src": "133:18:43"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "125:4:43",
																	"nodeType": "YulIdentifier",
																	"src": "125:4:43"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "167:9:43",
																		"nodeType": "YulIdentifier",
																		"src": "167:9:43"
																	},
																	{
																		"name": "value0",
																		"nativeSrc": "178:6:43",
																		"nodeType": "YulIdentifier",
																		"src": "178:6:43"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "160:6:43",
																	"nodeType": "YulIdentifier",
																	"src": "160:6:43"
																},
																"nativeSrc": "160:25:43",
																"nodeType": "YulFunctionCall",
																"src": "160:25:43"
															},
															"nativeSrc": "160:25:43",
															"nodeType": "YulExpressionStatement",
															"src": "160:25:43"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "14:177:43",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "84:9:43",
														"nodeType": "YulTypedName",
														"src": "84:9:43",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "95:6:43",
														"nodeType": "YulTypedName",
														"src": "95:6:43",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "106:4:43",
														"nodeType": "YulTypedName",
														"src": "106:4:43",
														"type": ""
													}
												],
												"src": "14:177:43"
											},
											{
												"body": {
													"nativeSrc": "228:152:43",
													"nodeType": "YulBlock",
													"src": "228:152:43",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "245:1:43",
																		"nodeType": "YulLiteral",
																		"src": "245:1:43",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "248:77:43",
																		"nodeType": "YulLiteral",
																		"src": "248:77:43",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "238:6:43",
																	"nodeType": "YulIdentifier",
																	"src": "238:6:43"
																},
																"nativeSrc": "238:88:43",
																"nodeType": "YulFunctionCall",
																"src": "238:88:43"
															},
															"nativeSrc": "238:88:43",
															"nodeType": "YulExpressionStatement",
															"src": "238:88:43"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "342:1:43",
																		"nodeType": "YulLiteral",
																		"src": "342:1:43",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "345:4:43",
																		"nodeType": "YulLiteral",
																		"src": "345:4:43",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "335:6:43",
																	"nodeType": "YulIdentifier",
																	"src": "335:6:43"
																},
																"nativeSrc": "335:15:43",
																"nodeType": "YulFunctionCall",
																"src": "335:15:43"
															},
															"nativeSrc": "335:15:43",
															"nodeType": "YulExpressionStatement",
															"src": "335:15:43"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "366:1:43",
																		"nodeType": "YulLiteral",
																		"src": "366:1:43",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "369:4:43",
																		"nodeType": "YulLiteral",
																		"src": "369:4:43",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "359:6:43",
																	"nodeType": "YulIdentifier",
																	"src": "359:6:43"
																},
																"nativeSrc": "359:15:43",
																"nodeType": "YulFunctionCall",
																"src": "359:15:43"
															},
															"nativeSrc": "359:15:43",
															"nodeType": "YulExpressionStatement",
															"src": "359:15:43"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "196:184:43",
												"nodeType": "YulFunctionDefinition",
												"src": "196:184:43"
											},
											{
												"body": {
													"nativeSrc": "438:666:43",
													"nodeType": "YulBlock",
													"src": "438:666:43",
													"statements": [
														{
															"body": {
																"nativeSrc": "487:16:43",
																"nodeType": "YulBlock",
																"src": "487:16:43",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "496:1:43",
																					"nodeType": "YulLiteral",
																					"src": "496:1:43",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "499:1:43",
																					"nodeType": "YulLiteral",
																					"src": "499:1:43",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "489:6:43",
																				"nodeType": "YulIdentifier",
																				"src": "489:6:43"
																			},
																			"nativeSrc": "489:12:43",
																			"nodeType": "YulFunctionCall",
																			"src": "489:12:43"
																		},
																		"nativeSrc": "489:12:43",
																		"nodeType": "YulExpressionStatement",
																		"src": "489:12:43"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nativeSrc": "466:6:43",
																						"nodeType": "YulIdentifier",
																						"src": "466:6:43"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "474:4:43",
																						"nodeType": "YulLiteral",
																						"src": "474:4:43",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "462:3:43",
																					"nodeType": "YulIdentifier",
																					"src": "462:3:43"
																				},
																				"nativeSrc": "462:17:43",
																				"nodeType": "YulFunctionCall",
																				"src": "462:17:43"
																			},
																			{
																				"name": "end",
																				"nativeSrc": "481:3:43",
																				"nodeType": "YulIdentifier",
																				"src": "481:3:43"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nativeSrc": "458:3:43",
																			"nodeType": "YulIdentifier",
																			"src": "458:3:43"
																		},
																		"nativeSrc": "458:27:43",
																		"nodeType": "YulFunctionCall",
																		"src": "458:27:43"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "451:6:43",
																	"nodeType": "YulIdentifier",
																	"src": "451:6:43"
																},
																"nativeSrc": "451:35:43",
																"nodeType": "YulFunctionCall",
																"src": "451:35:43"
															},
															"nativeSrc": "448:55:43",
															"nodeType": "YulIf",
															"src": "448:55:43"
														},
														{
															"nativeSrc": "512:30:43",
															"nodeType": "YulVariableDeclaration",
															"src": "512:30:43",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "535:6:43",
																		"nodeType": "YulIdentifier",
																		"src": "535:6:43"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "522:12:43",
																	"nodeType": "YulIdentifier",
																	"src": "522:12:43"
																},
																"nativeSrc": "522:20:43",
																"nodeType": "YulFunctionCall",
																"src": "522:20:43"
															},
															"variables": [
																{
																	"name": "_1",
																	"nativeSrc": "516:2:43",
																	"nodeType": "YulTypedName",
																	"src": "516:2:43",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "551:28:43",
															"nodeType": "YulVariableDeclaration",
															"src": "551:28:43",
															"value": {
																"kind": "number",
																"nativeSrc": "561:18:43",
																"nodeType": "YulLiteral",
																"src": "561:18:43",
																"type": "",
																"value": "0xffffffffffffffff"
															},
															"variables": [
																{
																	"name": "_2",
																	"nativeSrc": "555:2:43",
																	"nodeType": "YulTypedName",
																	"src": "555:2:43",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "602:22:43",
																"nodeType": "YulBlock",
																"src": "602:22:43",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "604:16:43",
																				"nodeType": "YulIdentifier",
																				"src": "604:16:43"
																			},
																			"nativeSrc": "604:18:43",
																			"nodeType": "YulFunctionCall",
																			"src": "604:18:43"
																		},
																		"nativeSrc": "604:18:43",
																		"nodeType": "YulExpressionStatement",
																		"src": "604:18:43"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "_1",
																		"nativeSrc": "594:2:43",
																		"nodeType": "YulIdentifier",
																		"src": "594:2:43"
																	},
																	{
																		"name": "_2",
																		"nativeSrc": "598:2:43",
																		"nodeType": "YulIdentifier",
																		"src": "598:2:43"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "591:2:43",
																	"nodeType": "YulIdentifier",
																	"src": "591:2:43"
																},
																"nativeSrc": "591:10:43",
																"nodeType": "YulFunctionCall",
																"src": "591:10:43"
															},
															"nativeSrc": "588:36:43",
															"nodeType": "YulIf",
															"src": "588:36:43"
														},
														{
															"nativeSrc": "633:17:43",
															"nodeType": "YulVariableDeclaration",
															"src": "633:17:43",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "647:2:43",
																		"nodeType": "YulLiteral",
																		"src": "647:2:43",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nativeSrc": "643:3:43",
																	"nodeType": "YulIdentifier",
																	"src": "643:3:43"
																},
																"nativeSrc": "643:7:43",
																"nodeType": "YulFunctionCall",
																"src": "643:7:43"
															},
															"variables": [
																{
																	"name": "_3",
																	"nativeSrc": "637:2:43",
																	"nodeType": "YulTypedName",
																	"src": "637:2:43",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "659:23:43",
															"nodeType": "YulVariableDeclaration",
															"src": "659:23:43",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "679:2:43",
																		"nodeType": "YulLiteral",
																		"src": "679:2:43",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "673:5:43",
																	"nodeType": "YulIdentifier",
																	"src": "673:5:43"
																},
																"nativeSrc": "673:9:43",
																"nodeType": "YulFunctionCall",
																"src": "673:9:43"
															},
															"variables": [
																{
																	"name": "memPtr",
																	"nativeSrc": "663:6:43",
																	"nodeType": "YulTypedName",
																	"src": "663:6:43",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "691:71:43",
															"nodeType": "YulVariableDeclaration",
															"src": "691:71:43",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "713:6:43",
																		"nodeType": "YulIdentifier",
																		"src": "713:6:43"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"name": "_1",
																										"nativeSrc": "737:2:43",
																										"nodeType": "YulIdentifier",
																										"src": "737:2:43"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "741:4:43",
																										"nodeType": "YulLiteral",
																										"src": "741:4:43",
																										"type": "",
																										"value": "0x1f"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "733:3:43",
																									"nodeType": "YulIdentifier",
																									"src": "733:3:43"
																								},
																								"nativeSrc": "733:13:43",
																								"nodeType": "YulFunctionCall",
																								"src": "733:13:43"
																							},
																							{
																								"name": "_3",
																								"nativeSrc": "748:2:43",
																								"nodeType": "YulIdentifier",
																								"src": "748:2:43"
																							}
																						],
																						"functionName": {
																							"name": "and",
																							"nativeSrc": "729:3:43",
																							"nodeType": "YulIdentifier",
																							"src": "729:3:43"
																						},
																						"nativeSrc": "729:22:43",
																						"nodeType": "YulFunctionCall",
																						"src": "729:22:43"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "753:2:43",
																						"nodeType": "YulLiteral",
																						"src": "753:2:43",
																						"type": "",
																						"value": "63"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "725:3:43",
																					"nodeType": "YulIdentifier",
																					"src": "725:3:43"
																				},
																				"nativeSrc": "725:31:43",
																				"nodeType": "YulFunctionCall",
																				"src": "725:31:43"
																			},
																			{
																				"name": "_3",
																				"nativeSrc": "758:2:43",
																				"nodeType": "YulIdentifier",
																				"src": "758:2:43"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "721:3:43",
																			"nodeType": "YulIdentifier",
																			"src": "721:3:43"
																		},
																		"nativeSrc": "721:40:43",
																		"nodeType": "YulFunctionCall",
																		"src": "721:40:43"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "709:3:43",
																	"nodeType": "YulIdentifier",
																	"src": "709:3:43"
																},
																"nativeSrc": "709:53:43",
																"nodeType": "YulFunctionCall",
																"src": "709:53:43"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nativeSrc": "695:10:43",
																	"nodeType": "YulTypedName",
																	"src": "695:10:43",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "821:22:43",
																"nodeType": "YulBlock",
																"src": "821:22:43",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "823:16:43",
																				"nodeType": "YulIdentifier",
																				"src": "823:16:43"
																			},
																			"nativeSrc": "823:18:43",
																			"nodeType": "YulFunctionCall",
																			"src": "823:18:43"
																		},
																		"nativeSrc": "823:18:43",
																		"nodeType": "YulExpressionStatement",
																		"src": "823:18:43"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "780:10:43",
																				"nodeType": "YulIdentifier",
																				"src": "780:10:43"
																			},
																			{
																				"name": "_2",
																				"nativeSrc": "792:2:43",
																				"nodeType": "YulIdentifier",
																				"src": "792:2:43"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "777:2:43",
																			"nodeType": "YulIdentifier",
																			"src": "777:2:43"
																		},
																		"nativeSrc": "777:18:43",
																		"nodeType": "YulFunctionCall",
																		"src": "777:18:43"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "800:10:43",
																				"nodeType": "YulIdentifier",
																				"src": "800:10:43"
																			},
																			{
																				"name": "memPtr",
																				"nativeSrc": "812:6:43",
																				"nodeType": "YulIdentifier",
																				"src": "812:6:43"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "797:2:43",
																			"nodeType": "YulIdentifier",
																			"src": "797:2:43"
																		},
																		"nativeSrc": "797:22:43",
																		"nodeType": "YulFunctionCall",
																		"src": "797:22:43"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "774:2:43",
																	"nodeType": "YulIdentifier",
																	"src": "774:2:43"
																},
																"nativeSrc": "774:46:43",
																"nodeType": "YulFunctionCall",
																"src": "774:46:43"
															},
															"nativeSrc": "771:72:43",
															"nodeType": "YulIf",
															"src": "771:72:43"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "859:2:43",
																		"nodeType": "YulLiteral",
																		"src": "859:2:43",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nativeSrc": "863:10:43",
																		"nodeType": "YulIdentifier",
																		"src": "863:10:43"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "852:6:43",
																	"nodeType": "YulIdentifier",
																	"src": "852:6:43"
																},
																"nativeSrc": "852:22:43",
																"nodeType": "YulFunctionCall",
																"src": "852:22:43"
															},
															"nativeSrc": "852:22:43",
															"nodeType": "YulExpressionStatement",
															"src": "852:22:43"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "890:6:43",
																		"nodeType": "YulIdentifier",
																		"src": "890:6:43"
																	},
																	{
																		"name": "_1",
																		"nativeSrc": "898:2:43",
																		"nodeType": "YulIdentifier",
																		"src": "898:2:43"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "883:6:43",
																	"nodeType": "YulIdentifier",
																	"src": "883:6:43"
																},
																"nativeSrc": "883:18:43",
																"nodeType": "YulFunctionCall",
																"src": "883:18:43"
															},
															"nativeSrc": "883:18:43",
															"nodeType": "YulExpressionStatement",
															"src": "883:18:43"
														},
														{
															"body": {
																"nativeSrc": "949:16:43",
																"nodeType": "YulBlock",
																"src": "949:16:43",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "958:1:43",
																					"nodeType": "YulLiteral",
																					"src": "958:1:43",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "961:1:43",
																					"nodeType": "YulLiteral",
																					"src": "961:1:43",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "951:6:43",
																				"nodeType": "YulIdentifier",
																				"src": "951:6:43"
																			},
																			"nativeSrc": "951:12:43",
																			"nodeType": "YulFunctionCall",
																			"src": "951:12:43"
																		},
																		"nativeSrc": "951:12:43",
																		"nodeType": "YulExpressionStatement",
																		"src": "951:12:43"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nativeSrc": "924:6:43",
																						"nodeType": "YulIdentifier",
																						"src": "924:6:43"
																					},
																					{
																						"name": "_1",
																						"nativeSrc": "932:2:43",
																						"nodeType": "YulIdentifier",
																						"src": "932:2:43"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "920:3:43",
																					"nodeType": "YulIdentifier",
																					"src": "920:3:43"
																				},
																				"nativeSrc": "920:15:43",
																				"nodeType": "YulFunctionCall",
																				"src": "920:15:43"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "937:4:43",
																				"nodeType": "YulLiteral",
																				"src": "937:4:43",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "916:3:43",
																			"nodeType": "YulIdentifier",
																			"src": "916:3:43"
																		},
																		"nativeSrc": "916:26:43",
																		"nodeType": "YulFunctionCall",
																		"src": "916:26:43"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "944:3:43",
																		"nodeType": "YulIdentifier",
																		"src": "944:3:43"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "913:2:43",
																	"nodeType": "YulIdentifier",
																	"src": "913:2:43"
																},
																"nativeSrc": "913:35:43",
																"nodeType": "YulFunctionCall",
																"src": "913:35:43"
															},
															"nativeSrc": "910:55:43",
															"nodeType": "YulIf",
															"src": "910:55:43"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "991:6:43",
																				"nodeType": "YulIdentifier",
																				"src": "991:6:43"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "999:4:43",
																				"nodeType": "YulLiteral",
																				"src": "999:4:43",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "987:3:43",
																			"nodeType": "YulIdentifier",
																			"src": "987:3:43"
																		},
																		"nativeSrc": "987:17:43",
																		"nodeType": "YulFunctionCall",
																		"src": "987:17:43"
																	},
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "1010:6:43",
																				"nodeType": "YulIdentifier",
																				"src": "1010:6:43"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1018:4:43",
																				"nodeType": "YulLiteral",
																				"src": "1018:4:43",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1006:3:43",
																			"nodeType": "YulIdentifier",
																			"src": "1006:3:43"
																		},
																		"nativeSrc": "1006:17:43",
																		"nodeType": "YulFunctionCall",
																		"src": "1006:17:43"
																	},
																	{
																		"name": "_1",
																		"nativeSrc": "1025:2:43",
																		"nodeType": "YulIdentifier",
																		"src": "1025:2:43"
																	}
																],
																"functionName": {
																	"name": "calldatacopy",
																	"nativeSrc": "974:12:43",
																	"nodeType": "YulIdentifier",
																	"src": "974:12:43"
																},
																"nativeSrc": "974:54:43",
																"nodeType": "YulFunctionCall",
																"src": "974:54:43"
															},
															"nativeSrc": "974:54:43",
															"nodeType": "YulExpressionStatement",
															"src": "974:54:43"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "memPtr",
																						"nativeSrc": "1052:6:43",
																						"nodeType": "YulIdentifier",
																						"src": "1052:6:43"
																					},
																					{
																						"name": "_1",
																						"nativeSrc": "1060:2:43",
																						"nodeType": "YulIdentifier",
																						"src": "1060:2:43"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1048:3:43",
																					"nodeType": "YulIdentifier",
																					"src": "1048:3:43"
																				},
																				"nativeSrc": "1048:15:43",
																				"nodeType": "YulFunctionCall",
																				"src": "1048:15:43"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1065:4:43",
																				"nodeType": "YulLiteral",
																				"src": "1065:4:43",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1044:3:43",
																			"nodeType": "YulIdentifier",
																			"src": "1044:3:43"
																		},
																		"nativeSrc": "1044:26:43",
																		"nodeType": "YulFunctionCall",
																		"src": "1044:26:43"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1072:1:43",
																		"nodeType": "YulLiteral",
																		"src": "1072:1:43",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1037:6:43",
																	"nodeType": "YulIdentifier",
																	"src": "1037:6:43"
																},
																"nativeSrc": "1037:37:43",
																"nodeType": "YulFunctionCall",
																"src": "1037:37:43"
															},
															"nativeSrc": "1037:37:43",
															"nodeType": "YulExpressionStatement",
															"src": "1037:37:43"
														},
														{
															"nativeSrc": "1083:15:43",
															"nodeType": "YulAssignment",
															"src": "1083:15:43",
															"value": {
																"name": "memPtr",
																"nativeSrc": "1092:6:43",
																"nodeType": "YulIdentifier",
																"src": "1092:6:43"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "1083:5:43",
																	"nodeType": "YulIdentifier",
																	"src": "1083:5:43"
																}
															]
														}
													]
												},
												"name": "abi_decode_string",
												"nativeSrc": "385:719:43",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "412:6:43",
														"nodeType": "YulTypedName",
														"src": "412:6:43",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "420:3:43",
														"nodeType": "YulTypedName",
														"src": "420:3:43",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "428:5:43",
														"nodeType": "YulTypedName",
														"src": "428:5:43",
														"type": ""
													}
												],
												"src": "385:719:43"
											},
											{
												"body": {
													"nativeSrc": "1233:487:43",
													"nodeType": "YulBlock",
													"src": "1233:487:43",
													"statements": [
														{
															"body": {
																"nativeSrc": "1279:16:43",
																"nodeType": "YulBlock",
																"src": "1279:16:43",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1288:1:43",
																					"nodeType": "YulLiteral",
																					"src": "1288:1:43",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1291:1:43",
																					"nodeType": "YulLiteral",
																					"src": "1291:1:43",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1281:6:43",
																				"nodeType": "YulIdentifier",
																				"src": "1281:6:43"
																			},
																			"nativeSrc": "1281:12:43",
																			"nodeType": "YulFunctionCall",
																			"src": "1281:12:43"
																		},
																		"nativeSrc": "1281:12:43",
																		"nodeType": "YulExpressionStatement",
																		"src": "1281:12:43"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1254:7:43",
																				"nodeType": "YulIdentifier",
																				"src": "1254:7:43"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1263:9:43",
																				"nodeType": "YulIdentifier",
																				"src": "1263:9:43"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1250:3:43",
																			"nodeType": "YulIdentifier",
																			"src": "1250:3:43"
																		},
																		"nativeSrc": "1250:23:43",
																		"nodeType": "YulFunctionCall",
																		"src": "1250:23:43"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1275:2:43",
																		"nodeType": "YulLiteral",
																		"src": "1275:2:43",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1246:3:43",
																	"nodeType": "YulIdentifier",
																	"src": "1246:3:43"
																},
																"nativeSrc": "1246:32:43",
																"nodeType": "YulFunctionCall",
																"src": "1246:32:43"
															},
															"nativeSrc": "1243:52:43",
															"nodeType": "YulIf",
															"src": "1243:52:43"
														},
														{
															"nativeSrc": "1304:37:43",
															"nodeType": "YulVariableDeclaration",
															"src": "1304:37:43",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1331:9:43",
																		"nodeType": "YulIdentifier",
																		"src": "1331:9:43"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1318:12:43",
																	"nodeType": "YulIdentifier",
																	"src": "1318:12:43"
																},
																"nativeSrc": "1318:23:43",
																"nodeType": "YulFunctionCall",
																"src": "1318:23:43"
															},
															"variables": [
																{
																	"name": "offset",
																	"nativeSrc": "1308:6:43",
																	"nodeType": "YulTypedName",
																	"src": "1308:6:43",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "1350:28:43",
															"nodeType": "YulVariableDeclaration",
															"src": "1350:28:43",
															"value": {
																"kind": "number",
																"nativeSrc": "1360:18:43",
																"nodeType": "YulLiteral",
																"src": "1360:18:43",
																"type": "",
																"value": "0xffffffffffffffff"
															},
															"variables": [
																{
																	"name": "_1",
																	"nativeSrc": "1354:2:43",
																	"nodeType": "YulTypedName",
																	"src": "1354:2:43",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1405:16:43",
																"nodeType": "YulBlock",
																"src": "1405:16:43",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1414:1:43",
																					"nodeType": "YulLiteral",
																					"src": "1414:1:43",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1417:1:43",
																					"nodeType": "YulLiteral",
																					"src": "1417:1:43",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1407:6:43",
																				"nodeType": "YulIdentifier",
																				"src": "1407:6:43"
																			},
																			"nativeSrc": "1407:12:43",
																			"nodeType": "YulFunctionCall",
																			"src": "1407:12:43"
																		},
																		"nativeSrc": "1407:12:43",
																		"nodeType": "YulExpressionStatement",
																		"src": "1407:12:43"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "1393:6:43",
																		"nodeType": "YulIdentifier",
																		"src": "1393:6:43"
																	},
																	{
																		"name": "_1",
																		"nativeSrc": "1401:2:43",
																		"nodeType": "YulIdentifier",
																		"src": "1401:2:43"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "1390:2:43",
																	"nodeType": "YulIdentifier",
																	"src": "1390:2:43"
																},
																"nativeSrc": "1390:14:43",
																"nodeType": "YulFunctionCall",
																"src": "1390:14:43"
															},
															"nativeSrc": "1387:34:43",
															"nodeType": "YulIf",
															"src": "1387:34:43"
														},
														{
															"nativeSrc": "1430:60:43",
															"nodeType": "YulAssignment",
															"src": "1430:60:43",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1462:9:43",
																				"nodeType": "YulIdentifier",
																				"src": "1462:9:43"
																			},
																			{
																				"name": "offset",
																				"nativeSrc": "1473:6:43",
																				"nodeType": "YulIdentifier",
																				"src": "1473:6:43"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1458:3:43",
																			"nodeType": "YulIdentifier",
																			"src": "1458:3:43"
																		},
																		"nativeSrc": "1458:22:43",
																		"nodeType": "YulFunctionCall",
																		"src": "1458:22:43"
																	},
																	{
																		"name": "dataEnd",
																		"nativeSrc": "1482:7:43",
																		"nodeType": "YulIdentifier",
																		"src": "1482:7:43"
																	}
																],
																"functionName": {
																	"name": "abi_decode_string",
																	"nativeSrc": "1440:17:43",
																	"nodeType": "YulIdentifier",
																	"src": "1440:17:43"
																},
																"nativeSrc": "1440:50:43",
																"nodeType": "YulFunctionCall",
																"src": "1440:50:43"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "1430:6:43",
																	"nodeType": "YulIdentifier",
																	"src": "1430:6:43"
																}
															]
														},
														{
															"nativeSrc": "1499:42:43",
															"nodeType": "YulAssignment",
															"src": "1499:42:43",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1526:9:43",
																				"nodeType": "YulIdentifier",
																				"src": "1526:9:43"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1537:2:43",
																				"nodeType": "YulLiteral",
																				"src": "1537:2:43",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1522:3:43",
																			"nodeType": "YulIdentifier",
																			"src": "1522:3:43"
																		},
																		"nativeSrc": "1522:18:43",
																		"nodeType": "YulFunctionCall",
																		"src": "1522:18:43"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1509:12:43",
																	"nodeType": "YulIdentifier",
																	"src": "1509:12:43"
																},
																"nativeSrc": "1509:32:43",
																"nodeType": "YulFunctionCall",
																"src": "1509:32:43"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "1499:6:43",
																	"nodeType": "YulIdentifier",
																	"src": "1499:6:43"
																}
															]
														},
														{
															"nativeSrc": "1550:48:43",
															"nodeType": "YulVariableDeclaration",
															"src": "1550:48:43",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1583:9:43",
																				"nodeType": "YulIdentifier",
																				"src": "1583:9:43"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1594:2:43",
																				"nodeType": "YulLiteral",
																				"src": "1594:2:43",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1579:3:43",
																			"nodeType": "YulIdentifier",
																			"src": "1579:3:43"
																		},
																		"nativeSrc": "1579:18:43",
																		"nodeType": "YulFunctionCall",
																		"src": "1579:18:43"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1566:12:43",
																	"nodeType": "YulIdentifier",
																	"src": "1566:12:43"
																},
																"nativeSrc": "1566:32:43",
																"nodeType": "YulFunctionCall",
																"src": "1566:32:43"
															},
															"variables": [
																{
																	"name": "offset_1",
																	"nativeSrc": "1554:8:43",
																	"nodeType": "YulTypedName",
																	"src": "1554:8:43",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1627:16:43",
																"nodeType": "YulBlock",
																"src": "1627:16:43",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1636:1:43",
																					"nodeType": "YulLiteral",
																					"src": "1636:1:43",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1639:1:43",
																					"nodeType": "YulLiteral",
																					"src": "1639:1:43",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1629:6:43",
																				"nodeType": "YulIdentifier",
																				"src": "1629:6:43"
																			},
																			"nativeSrc": "1629:12:43",
																			"nodeType": "YulFunctionCall",
																			"src": "1629:12:43"
																		},
																		"nativeSrc": "1629:12:43",
																		"nodeType": "YulExpressionStatement",
																		"src": "1629:12:43"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset_1",
																		"nativeSrc": "1613:8:43",
																		"nodeType": "YulIdentifier",
																		"src": "1613:8:43"
																	},
																	{
																		"name": "_1",
																		"nativeSrc": "1623:2:43",
																		"nodeType": "YulIdentifier",
																		"src": "1623:2:43"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "1610:2:43",
																	"nodeType": "YulIdentifier",
																	"src": "1610:2:43"
																},
																"nativeSrc": "1610:16:43",
																"nodeType": "YulFunctionCall",
																"src": "1610:16:43"
															},
															"nativeSrc": "1607:36:43",
															"nodeType": "YulIf",
															"src": "1607:36:43"
														},
														{
															"nativeSrc": "1652:62:43",
															"nodeType": "YulAssignment",
															"src": "1652:62:43",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1684:9:43",
																				"nodeType": "YulIdentifier",
																				"src": "1684:9:43"
																			},
																			{
																				"name": "offset_1",
																				"nativeSrc": "1695:8:43",
																				"nodeType": "YulIdentifier",
																				"src": "1695:8:43"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1680:3:43",
																			"nodeType": "YulIdentifier",
																			"src": "1680:3:43"
																		},
																		"nativeSrc": "1680:24:43",
																		"nodeType": "YulFunctionCall",
																		"src": "1680:24:43"
																	},
																	{
																		"name": "dataEnd",
																		"nativeSrc": "1706:7:43",
																		"nodeType": "YulIdentifier",
																		"src": "1706:7:43"
																	}
																],
																"functionName": {
																	"name": "abi_decode_string",
																	"nativeSrc": "1662:17:43",
																	"nodeType": "YulIdentifier",
																	"src": "1662:17:43"
																},
																"nativeSrc": "1662:52:43",
																"nodeType": "YulFunctionCall",
																"src": "1662:52:43"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nativeSrc": "1652:6:43",
																	"nodeType": "YulIdentifier",
																	"src": "1652:6:43"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_string_memory_ptrt_uint256t_string_memory_ptr",
												"nativeSrc": "1109:611:43",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1183:9:43",
														"nodeType": "YulTypedName",
														"src": "1183:9:43",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1194:7:43",
														"nodeType": "YulTypedName",
														"src": "1194:7:43",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1206:6:43",
														"nodeType": "YulTypedName",
														"src": "1206:6:43",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "1214:6:43",
														"nodeType": "YulTypedName",
														"src": "1214:6:43",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "1222:6:43",
														"nodeType": "YulTypedName",
														"src": "1222:6:43",
														"type": ""
													}
												],
												"src": "1109:611:43"
											},
											{
												"body": {
													"nativeSrc": "1795:110:43",
													"nodeType": "YulBlock",
													"src": "1795:110:43",
													"statements": [
														{
															"body": {
																"nativeSrc": "1841:16:43",
																"nodeType": "YulBlock",
																"src": "1841:16:43",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1850:1:43",
																					"nodeType": "YulLiteral",
																					"src": "1850:1:43",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1853:1:43",
																					"nodeType": "YulLiteral",
																					"src": "1853:1:43",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1843:6:43",
																				"nodeType": "YulIdentifier",
																				"src": "1843:6:43"
																			},
																			"nativeSrc": "1843:12:43",
																			"nodeType": "YulFunctionCall",
																			"src": "1843:12:43"
																		},
																		"nativeSrc": "1843:12:43",
																		"nodeType": "YulExpressionStatement",
																		"src": "1843:12:43"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1816:7:43",
																				"nodeType": "YulIdentifier",
																				"src": "1816:7:43"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1825:9:43",
																				"nodeType": "YulIdentifier",
																				"src": "1825:9:43"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1812:3:43",
																			"nodeType": "YulIdentifier",
																			"src": "1812:3:43"
																		},
																		"nativeSrc": "1812:23:43",
																		"nodeType": "YulFunctionCall",
																		"src": "1812:23:43"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1837:2:43",
																		"nodeType": "YulLiteral",
																		"src": "1837:2:43",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1808:3:43",
																	"nodeType": "YulIdentifier",
																	"src": "1808:3:43"
																},
																"nativeSrc": "1808:32:43",
																"nodeType": "YulFunctionCall",
																"src": "1808:32:43"
															},
															"nativeSrc": "1805:52:43",
															"nodeType": "YulIf",
															"src": "1805:52:43"
														},
														{
															"nativeSrc": "1866:33:43",
															"nodeType": "YulAssignment",
															"src": "1866:33:43",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1889:9:43",
																		"nodeType": "YulIdentifier",
																		"src": "1889:9:43"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1876:12:43",
																	"nodeType": "YulIdentifier",
																	"src": "1876:12:43"
																},
																"nativeSrc": "1876:23:43",
																"nodeType": "YulFunctionCall",
																"src": "1876:23:43"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "1866:6:43",
																	"nodeType": "YulIdentifier",
																	"src": "1866:6:43"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes32",
												"nativeSrc": "1725:180:43",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1761:9:43",
														"nodeType": "YulTypedName",
														"src": "1761:9:43",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1772:7:43",
														"nodeType": "YulTypedName",
														"src": "1772:7:43",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1784:6:43",
														"nodeType": "YulTypedName",
														"src": "1784:6:43",
														"type": ""
													}
												],
												"src": "1725:180:43"
											},
											{
												"body": {
													"nativeSrc": "2005:92:43",
													"nodeType": "YulBlock",
													"src": "2005:92:43",
													"statements": [
														{
															"nativeSrc": "2015:26:43",
															"nodeType": "YulAssignment",
															"src": "2015:26:43",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2027:9:43",
																		"nodeType": "YulIdentifier",
																		"src": "2027:9:43"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2038:2:43",
																		"nodeType": "YulLiteral",
																		"src": "2038:2:43",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2023:3:43",
																	"nodeType": "YulIdentifier",
																	"src": "2023:3:43"
																},
																"nativeSrc": "2023:18:43",
																"nodeType": "YulFunctionCall",
																"src": "2023:18:43"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2015:4:43",
																	"nodeType": "YulIdentifier",
																	"src": "2015:4:43"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2057:9:43",
																		"nodeType": "YulIdentifier",
																		"src": "2057:9:43"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nativeSrc": "2082:6:43",
																						"nodeType": "YulIdentifier",
																						"src": "2082:6:43"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "2075:6:43",
																					"nodeType": "YulIdentifier",
																					"src": "2075:6:43"
																				},
																				"nativeSrc": "2075:14:43",
																				"nodeType": "YulFunctionCall",
																				"src": "2075:14:43"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "2068:6:43",
																			"nodeType": "YulIdentifier",
																			"src": "2068:6:43"
																		},
																		"nativeSrc": "2068:22:43",
																		"nodeType": "YulFunctionCall",
																		"src": "2068:22:43"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2050:6:43",
																	"nodeType": "YulIdentifier",
																	"src": "2050:6:43"
																},
																"nativeSrc": "2050:41:43",
																"nodeType": "YulFunctionCall",
																"src": "2050:41:43"
															},
															"nativeSrc": "2050:41:43",
															"nodeType": "YulExpressionStatement",
															"src": "2050:41:43"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nativeSrc": "1910:187:43",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1974:9:43",
														"nodeType": "YulTypedName",
														"src": "1974:9:43",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1985:6:43",
														"nodeType": "YulTypedName",
														"src": "1985:6:43",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1996:4:43",
														"nodeType": "YulTypedName",
														"src": "1996:4:43",
														"type": ""
													}
												],
												"src": "1910:187:43"
											},
											{
												"body": {
													"nativeSrc": "2231:168:43",
													"nodeType": "YulBlock",
													"src": "2231:168:43",
													"statements": [
														{
															"nativeSrc": "2241:26:43",
															"nodeType": "YulAssignment",
															"src": "2241:26:43",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2253:9:43",
																		"nodeType": "YulIdentifier",
																		"src": "2253:9:43"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2264:2:43",
																		"nodeType": "YulLiteral",
																		"src": "2264:2:43",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2249:3:43",
																	"nodeType": "YulIdentifier",
																	"src": "2249:3:43"
																},
																"nativeSrc": "2249:18:43",
																"nodeType": "YulFunctionCall",
																"src": "2249:18:43"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2241:4:43",
																	"nodeType": "YulIdentifier",
																	"src": "2241:4:43"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2283:9:43",
																		"nodeType": "YulIdentifier",
																		"src": "2283:9:43"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "2298:6:43",
																				"nodeType": "YulIdentifier",
																				"src": "2298:6:43"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2306:42:43",
																				"nodeType": "YulLiteral",
																				"src": "2306:42:43",
																				"type": "",
																				"value": "0xffffffffffffffffffffffffffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "2294:3:43",
																			"nodeType": "YulIdentifier",
																			"src": "2294:3:43"
																		},
																		"nativeSrc": "2294:55:43",
																		"nodeType": "YulFunctionCall",
																		"src": "2294:55:43"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2276:6:43",
																	"nodeType": "YulIdentifier",
																	"src": "2276:6:43"
																},
																"nativeSrc": "2276:74:43",
																"nodeType": "YulFunctionCall",
																"src": "2276:74:43"
															},
															"nativeSrc": "2276:74:43",
															"nodeType": "YulExpressionStatement",
															"src": "2276:74:43"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2370:9:43",
																				"nodeType": "YulIdentifier",
																				"src": "2370:9:43"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2381:2:43",
																				"nodeType": "YulLiteral",
																				"src": "2381:2:43",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2366:3:43",
																			"nodeType": "YulIdentifier",
																			"src": "2366:3:43"
																		},
																		"nativeSrc": "2366:18:43",
																		"nodeType": "YulFunctionCall",
																		"src": "2366:18:43"
																	},
																	{
																		"name": "value1",
																		"nativeSrc": "2386:6:43",
																		"nodeType": "YulIdentifier",
																		"src": "2386:6:43"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2359:6:43",
																	"nodeType": "YulIdentifier",
																	"src": "2359:6:43"
																},
																"nativeSrc": "2359:34:43",
																"nodeType": "YulFunctionCall",
																"src": "2359:34:43"
															},
															"nativeSrc": "2359:34:43",
															"nodeType": "YulExpressionStatement",
															"src": "2359:34:43"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "2102:297:43",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2192:9:43",
														"nodeType": "YulTypedName",
														"src": "2192:9:43",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "2203:6:43",
														"nodeType": "YulTypedName",
														"src": "2203:6:43",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "2211:6:43",
														"nodeType": "YulTypedName",
														"src": "2211:6:43",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2222:4:43",
														"nodeType": "YulTypedName",
														"src": "2222:4:43",
														"type": ""
													}
												],
												"src": "2102:297:43"
											},
											{
												"body": {
													"nativeSrc": "2474:110:43",
													"nodeType": "YulBlock",
													"src": "2474:110:43",
													"statements": [
														{
															"body": {
																"nativeSrc": "2520:16:43",
																"nodeType": "YulBlock",
																"src": "2520:16:43",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2529:1:43",
																					"nodeType": "YulLiteral",
																					"src": "2529:1:43",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2532:1:43",
																					"nodeType": "YulLiteral",
																					"src": "2532:1:43",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2522:6:43",
																				"nodeType": "YulIdentifier",
																				"src": "2522:6:43"
																			},
																			"nativeSrc": "2522:12:43",
																			"nodeType": "YulFunctionCall",
																			"src": "2522:12:43"
																		},
																		"nativeSrc": "2522:12:43",
																		"nodeType": "YulExpressionStatement",
																		"src": "2522:12:43"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2495:7:43",
																				"nodeType": "YulIdentifier",
																				"src": "2495:7:43"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2504:9:43",
																				"nodeType": "YulIdentifier",
																				"src": "2504:9:43"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2491:3:43",
																			"nodeType": "YulIdentifier",
																			"src": "2491:3:43"
																		},
																		"nativeSrc": "2491:23:43",
																		"nodeType": "YulFunctionCall",
																		"src": "2491:23:43"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2516:2:43",
																		"nodeType": "YulLiteral",
																		"src": "2516:2:43",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2487:3:43",
																	"nodeType": "YulIdentifier",
																	"src": "2487:3:43"
																},
																"nativeSrc": "2487:32:43",
																"nodeType": "YulFunctionCall",
																"src": "2487:32:43"
															},
															"nativeSrc": "2484:52:43",
															"nodeType": "YulIf",
															"src": "2484:52:43"
														},
														{
															"nativeSrc": "2545:33:43",
															"nodeType": "YulAssignment",
															"src": "2545:33:43",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2568:9:43",
																		"nodeType": "YulIdentifier",
																		"src": "2568:9:43"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2555:12:43",
																	"nodeType": "YulIdentifier",
																	"src": "2555:12:43"
																},
																"nativeSrc": "2555:23:43",
																"nodeType": "YulFunctionCall",
																"src": "2555:23:43"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "2545:6:43",
																	"nodeType": "YulIdentifier",
																	"src": "2545:6:43"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nativeSrc": "2404:180:43",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2440:9:43",
														"nodeType": "YulTypedName",
														"src": "2440:9:43",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2451:7:43",
														"nodeType": "YulTypedName",
														"src": "2451:7:43",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2463:6:43",
														"nodeType": "YulTypedName",
														"src": "2463:6:43",
														"type": ""
													}
												],
												"src": "2404:180:43"
											},
											{
												"body": {
													"nativeSrc": "2639:373:43",
													"nodeType": "YulBlock",
													"src": "2639:373:43",
													"statements": [
														{
															"nativeSrc": "2649:26:43",
															"nodeType": "YulVariableDeclaration",
															"src": "2649:26:43",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2669:5:43",
																		"nodeType": "YulIdentifier",
																		"src": "2669:5:43"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "2663:5:43",
																	"nodeType": "YulIdentifier",
																	"src": "2663:5:43"
																},
																"nativeSrc": "2663:12:43",
																"nodeType": "YulFunctionCall",
																"src": "2663:12:43"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "2653:6:43",
																	"nodeType": "YulTypedName",
																	"src": "2653:6:43",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2691:3:43",
																		"nodeType": "YulIdentifier",
																		"src": "2691:3:43"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "2696:6:43",
																		"nodeType": "YulIdentifier",
																		"src": "2696:6:43"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2684:6:43",
																	"nodeType": "YulIdentifier",
																	"src": "2684:6:43"
																},
																"nativeSrc": "2684:19:43",
																"nodeType": "YulFunctionCall",
																"src": "2684:19:43"
															},
															"nativeSrc": "2684:19:43",
															"nodeType": "YulExpressionStatement",
															"src": "2684:19:43"
														},
														{
															"nativeSrc": "2712:10:43",
															"nodeType": "YulVariableDeclaration",
															"src": "2712:10:43",
															"value": {
																"kind": "number",
																"nativeSrc": "2721:1:43",
																"nodeType": "YulLiteral",
																"src": "2721:1:43",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nativeSrc": "2716:1:43",
																	"nodeType": "YulTypedName",
																	"src": "2716:1:43",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "2783:110:43",
																"nodeType": "YulBlock",
																"src": "2783:110:43",
																"statements": [
																	{
																		"nativeSrc": "2797:14:43",
																		"nodeType": "YulVariableDeclaration",
																		"src": "2797:14:43",
																		"value": {
																			"kind": "number",
																			"nativeSrc": "2807:4:43",
																			"nodeType": "YulLiteral",
																			"src": "2807:4:43",
																			"type": "",
																			"value": "0x20"
																		},
																		"variables": [
																			{
																				"name": "_1",
																				"nativeSrc": "2801:2:43",
																				"nodeType": "YulTypedName",
																				"src": "2801:2:43",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "pos",
																									"nativeSrc": "2839:3:43",
																									"nodeType": "YulIdentifier",
																									"src": "2839:3:43"
																								},
																								{
																									"name": "i",
																									"nativeSrc": "2844:1:43",
																									"nodeType": "YulIdentifier",
																									"src": "2844:1:43"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "2835:3:43",
																								"nodeType": "YulIdentifier",
																								"src": "2835:3:43"
																							},
																							"nativeSrc": "2835:11:43",
																							"nodeType": "YulFunctionCall",
																							"src": "2835:11:43"
																						},
																						{
																							"name": "_1",
																							"nativeSrc": "2848:2:43",
																							"nodeType": "YulIdentifier",
																							"src": "2848:2:43"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "2831:3:43",
																						"nodeType": "YulIdentifier",
																						"src": "2831:3:43"
																					},
																					"nativeSrc": "2831:20:43",
																					"nodeType": "YulFunctionCall",
																					"src": "2831:20:43"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "value",
																											"nativeSrc": "2867:5:43",
																											"nodeType": "YulIdentifier",
																											"src": "2867:5:43"
																										},
																										{
																											"name": "i",
																											"nativeSrc": "2874:1:43",
																											"nodeType": "YulIdentifier",
																											"src": "2874:1:43"
																										}
																									],
																									"functionName": {
																										"name": "add",
																										"nativeSrc": "2863:3:43",
																										"nodeType": "YulIdentifier",
																										"src": "2863:3:43"
																									},
																									"nativeSrc": "2863:13:43",
																									"nodeType": "YulFunctionCall",
																									"src": "2863:13:43"
																								},
																								{
																									"name": "_1",
																									"nativeSrc": "2878:2:43",
																									"nodeType": "YulIdentifier",
																									"src": "2878:2:43"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "2859:3:43",
																								"nodeType": "YulIdentifier",
																								"src": "2859:3:43"
																							},
																							"nativeSrc": "2859:22:43",
																							"nodeType": "YulFunctionCall",
																							"src": "2859:22:43"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nativeSrc": "2853:5:43",
																						"nodeType": "YulIdentifier",
																						"src": "2853:5:43"
																					},
																					"nativeSrc": "2853:29:43",
																					"nodeType": "YulFunctionCall",
																					"src": "2853:29:43"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "2824:6:43",
																				"nodeType": "YulIdentifier",
																				"src": "2824:6:43"
																			},
																			"nativeSrc": "2824:59:43",
																			"nodeType": "YulFunctionCall",
																			"src": "2824:59:43"
																		},
																		"nativeSrc": "2824:59:43",
																		"nodeType": "YulExpressionStatement",
																		"src": "2824:59:43"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nativeSrc": "2742:1:43",
																		"nodeType": "YulIdentifier",
																		"src": "2742:1:43"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "2745:6:43",
																		"nodeType": "YulIdentifier",
																		"src": "2745:6:43"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "2739:2:43",
																	"nodeType": "YulIdentifier",
																	"src": "2739:2:43"
																},
																"nativeSrc": "2739:13:43",
																"nodeType": "YulFunctionCall",
																"src": "2739:13:43"
															},
															"nativeSrc": "2731:162:43",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "2753:21:43",
																"nodeType": "YulBlock",
																"src": "2753:21:43",
																"statements": [
																	{
																		"nativeSrc": "2755:17:43",
																		"nodeType": "YulAssignment",
																		"src": "2755:17:43",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nativeSrc": "2764:1:43",
																					"nodeType": "YulIdentifier",
																					"src": "2764:1:43"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2767:4:43",
																					"nodeType": "YulLiteral",
																					"src": "2767:4:43",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "2760:3:43",
																				"nodeType": "YulIdentifier",
																				"src": "2760:3:43"
																			},
																			"nativeSrc": "2760:12:43",
																			"nodeType": "YulFunctionCall",
																			"src": "2760:12:43"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nativeSrc": "2755:1:43",
																				"nodeType": "YulIdentifier",
																				"src": "2755:1:43"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "2735:3:43",
																"nodeType": "YulBlock",
																"src": "2735:3:43",
																"statements": []
															},
															"src": "2731:162:43"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nativeSrc": "2917:3:43",
																						"nodeType": "YulIdentifier",
																						"src": "2917:3:43"
																					},
																					{
																						"name": "length",
																						"nativeSrc": "2922:6:43",
																						"nodeType": "YulIdentifier",
																						"src": "2922:6:43"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2913:3:43",
																					"nodeType": "YulIdentifier",
																					"src": "2913:3:43"
																				},
																				"nativeSrc": "2913:16:43",
																				"nodeType": "YulFunctionCall",
																				"src": "2913:16:43"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2931:4:43",
																				"nodeType": "YulLiteral",
																				"src": "2931:4:43",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2909:3:43",
																			"nodeType": "YulIdentifier",
																			"src": "2909:3:43"
																		},
																		"nativeSrc": "2909:27:43",
																		"nodeType": "YulFunctionCall",
																		"src": "2909:27:43"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2938:1:43",
																		"nodeType": "YulLiteral",
																		"src": "2938:1:43",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2902:6:43",
																	"nodeType": "YulIdentifier",
																	"src": "2902:6:43"
																},
																"nativeSrc": "2902:38:43",
																"nodeType": "YulFunctionCall",
																"src": "2902:38:43"
															},
															"nativeSrc": "2902:38:43",
															"nodeType": "YulExpressionStatement",
															"src": "2902:38:43"
														},
														{
															"nativeSrc": "2949:57:43",
															"nodeType": "YulAssignment",
															"src": "2949:57:43",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nativeSrc": "2964:3:43",
																				"nodeType": "YulIdentifier",
																				"src": "2964:3:43"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "length",
																								"nativeSrc": "2977:6:43",
																								"nodeType": "YulIdentifier",
																								"src": "2977:6:43"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "2985:2:43",
																								"nodeType": "YulLiteral",
																								"src": "2985:2:43",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nativeSrc": "2973:3:43",
																							"nodeType": "YulIdentifier",
																							"src": "2973:3:43"
																						},
																						"nativeSrc": "2973:15:43",
																						"nodeType": "YulFunctionCall",
																						"src": "2973:15:43"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "2994:2:43",
																								"nodeType": "YulLiteral",
																								"src": "2994:2:43",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nativeSrc": "2990:3:43",
																							"nodeType": "YulIdentifier",
																							"src": "2990:3:43"
																						},
																						"nativeSrc": "2990:7:43",
																						"nodeType": "YulFunctionCall",
																						"src": "2990:7:43"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "2969:3:43",
																					"nodeType": "YulIdentifier",
																					"src": "2969:3:43"
																				},
																				"nativeSrc": "2969:29:43",
																				"nodeType": "YulFunctionCall",
																				"src": "2969:29:43"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2960:3:43",
																			"nodeType": "YulIdentifier",
																			"src": "2960:3:43"
																		},
																		"nativeSrc": "2960:39:43",
																		"nodeType": "YulFunctionCall",
																		"src": "2960:39:43"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3001:4:43",
																		"nodeType": "YulLiteral",
																		"src": "3001:4:43",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2956:3:43",
																	"nodeType": "YulIdentifier",
																	"src": "2956:3:43"
																},
																"nativeSrc": "2956:50:43",
																"nodeType": "YulFunctionCall",
																"src": "2956:50:43"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "2949:3:43",
																	"nodeType": "YulIdentifier",
																	"src": "2949:3:43"
																}
															]
														}
													]
												},
												"name": "abi_encode_string",
												"nativeSrc": "2589:423:43",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2616:5:43",
														"nodeType": "YulTypedName",
														"src": "2616:5:43",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "2623:3:43",
														"nodeType": "YulTypedName",
														"src": "2623:3:43",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "2631:3:43",
														"nodeType": "YulTypedName",
														"src": "2631:3:43",
														"type": ""
													}
												],
												"src": "2589:423:43"
											},
											{
												"body": {
													"nativeSrc": "3242:302:43",
													"nodeType": "YulBlock",
													"src": "3242:302:43",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3259:9:43",
																		"nodeType": "YulIdentifier",
																		"src": "3259:9:43"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3270:3:43",
																		"nodeType": "YulLiteral",
																		"src": "3270:3:43",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3252:6:43",
																	"nodeType": "YulIdentifier",
																	"src": "3252:6:43"
																},
																"nativeSrc": "3252:22:43",
																"nodeType": "YulFunctionCall",
																"src": "3252:22:43"
															},
															"nativeSrc": "3252:22:43",
															"nodeType": "YulExpressionStatement",
															"src": "3252:22:43"
														},
														{
															"nativeSrc": "3283:60:43",
															"nodeType": "YulVariableDeclaration",
															"src": "3283:60:43",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "3315:6:43",
																		"nodeType": "YulIdentifier",
																		"src": "3315:6:43"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3327:9:43",
																				"nodeType": "YulIdentifier",
																				"src": "3327:9:43"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3338:3:43",
																				"nodeType": "YulLiteral",
																				"src": "3338:3:43",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3323:3:43",
																			"nodeType": "YulIdentifier",
																			"src": "3323:3:43"
																		},
																		"nativeSrc": "3323:19:43",
																		"nodeType": "YulFunctionCall",
																		"src": "3323:19:43"
																	}
																],
																"functionName": {
																	"name": "abi_encode_string",
																	"nativeSrc": "3297:17:43",
																	"nodeType": "YulIdentifier",
																	"src": "3297:17:43"
																},
																"nativeSrc": "3297:46:43",
																"nodeType": "YulFunctionCall",
																"src": "3297:46:43"
															},
															"variables": [
																{
																	"name": "tail_1",
																	"nativeSrc": "3287:6:43",
																	"nodeType": "YulTypedName",
																	"src": "3287:6:43",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3363:9:43",
																				"nodeType": "YulIdentifier",
																				"src": "3363:9:43"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3374:2:43",
																				"nodeType": "YulLiteral",
																				"src": "3374:2:43",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3359:3:43",
																			"nodeType": "YulIdentifier",
																			"src": "3359:3:43"
																		},
																		"nativeSrc": "3359:18:43",
																		"nodeType": "YulFunctionCall",
																		"src": "3359:18:43"
																	},
																	{
																		"name": "value1",
																		"nativeSrc": "3379:6:43",
																		"nodeType": "YulIdentifier",
																		"src": "3379:6:43"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3352:6:43",
																	"nodeType": "YulIdentifier",
																	"src": "3352:6:43"
																},
																"nativeSrc": "3352:34:43",
																"nodeType": "YulFunctionCall",
																"src": "3352:34:43"
															},
															"nativeSrc": "3352:34:43",
															"nodeType": "YulExpressionStatement",
															"src": "3352:34:43"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3406:9:43",
																				"nodeType": "YulIdentifier",
																				"src": "3406:9:43"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3417:2:43",
																				"nodeType": "YulLiteral",
																				"src": "3417:2:43",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3402:3:43",
																			"nodeType": "YulIdentifier",
																			"src": "3402:3:43"
																		},
																		"nativeSrc": "3402:18:43",
																		"nodeType": "YulFunctionCall",
																		"src": "3402:18:43"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail_1",
																				"nativeSrc": "3426:6:43",
																				"nodeType": "YulIdentifier",
																				"src": "3426:6:43"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3434:9:43",
																				"nodeType": "YulIdentifier",
																				"src": "3434:9:43"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3422:3:43",
																			"nodeType": "YulIdentifier",
																			"src": "3422:3:43"
																		},
																		"nativeSrc": "3422:22:43",
																		"nodeType": "YulFunctionCall",
																		"src": "3422:22:43"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3395:6:43",
																	"nodeType": "YulIdentifier",
																	"src": "3395:6:43"
																},
																"nativeSrc": "3395:50:43",
																"nodeType": "YulFunctionCall",
																"src": "3395:50:43"
															},
															"nativeSrc": "3395:50:43",
															"nodeType": "YulExpressionStatement",
															"src": "3395:50:43"
														},
														{
															"nativeSrc": "3454:41:43",
															"nodeType": "YulAssignment",
															"src": "3454:41:43",
															"value": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "3480:6:43",
																		"nodeType": "YulIdentifier",
																		"src": "3480:6:43"
																	},
																	{
																		"name": "tail_1",
																		"nativeSrc": "3488:6:43",
																		"nodeType": "YulIdentifier",
																		"src": "3488:6:43"
																	}
																],
																"functionName": {
																	"name": "abi_encode_string",
																	"nativeSrc": "3462:17:43",
																	"nodeType": "YulIdentifier",
																	"src": "3462:17:43"
																},
																"nativeSrc": "3462:33:43",
																"nodeType": "YulFunctionCall",
																"src": "3462:33:43"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3454:4:43",
																	"nodeType": "YulIdentifier",
																	"src": "3454:4:43"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3515:9:43",
																				"nodeType": "YulIdentifier",
																				"src": "3515:9:43"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3526:2:43",
																				"nodeType": "YulLiteral",
																				"src": "3526:2:43",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3511:3:43",
																			"nodeType": "YulIdentifier",
																			"src": "3511:3:43"
																		},
																		"nativeSrc": "3511:18:43",
																		"nodeType": "YulFunctionCall",
																		"src": "3511:18:43"
																	},
																	{
																		"name": "value3",
																		"nativeSrc": "3531:6:43",
																		"nodeType": "YulIdentifier",
																		"src": "3531:6:43"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3504:6:43",
																	"nodeType": "YulIdentifier",
																	"src": "3504:6:43"
																},
																"nativeSrc": "3504:34:43",
																"nodeType": "YulFunctionCall",
																"src": "3504:34:43"
															},
															"nativeSrc": "3504:34:43",
															"nodeType": "YulExpressionStatement",
															"src": "3504:34:43"
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr_t_bytes32_t_string_memory_ptr_t_uint256__to_t_string_memory_ptr_t_bytes32_t_string_memory_ptr_t_uint256__fromStack_reversed",
												"nativeSrc": "3017:527:43",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3187:9:43",
														"nodeType": "YulTypedName",
														"src": "3187:9:43",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "3198:6:43",
														"nodeType": "YulTypedName",
														"src": "3198:6:43",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "3206:6:43",
														"nodeType": "YulTypedName",
														"src": "3206:6:43",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "3214:6:43",
														"nodeType": "YulTypedName",
														"src": "3214:6:43",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3222:6:43",
														"nodeType": "YulTypedName",
														"src": "3222:6:43",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3233:4:43",
														"nodeType": "YulTypedName",
														"src": "3233:4:43",
														"type": ""
													}
												],
												"src": "3017:527:43"
											},
											{
												"body": {
													"nativeSrc": "3670:99:43",
													"nodeType": "YulBlock",
													"src": "3670:99:43",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3687:9:43",
																		"nodeType": "YulIdentifier",
																		"src": "3687:9:43"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3698:2:43",
																		"nodeType": "YulLiteral",
																		"src": "3698:2:43",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3680:6:43",
																	"nodeType": "YulIdentifier",
																	"src": "3680:6:43"
																},
																"nativeSrc": "3680:21:43",
																"nodeType": "YulFunctionCall",
																"src": "3680:21:43"
															},
															"nativeSrc": "3680:21:43",
															"nodeType": "YulExpressionStatement",
															"src": "3680:21:43"
														},
														{
															"nativeSrc": "3710:53:43",
															"nodeType": "YulAssignment",
															"src": "3710:53:43",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "3736:6:43",
																		"nodeType": "YulIdentifier",
																		"src": "3736:6:43"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3748:9:43",
																				"nodeType": "YulIdentifier",
																				"src": "3748:9:43"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3759:2:43",
																				"nodeType": "YulLiteral",
																				"src": "3759:2:43",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3744:3:43",
																			"nodeType": "YulIdentifier",
																			"src": "3744:3:43"
																		},
																		"nativeSrc": "3744:18:43",
																		"nodeType": "YulFunctionCall",
																		"src": "3744:18:43"
																	}
																],
																"functionName": {
																	"name": "abi_encode_string",
																	"nativeSrc": "3718:17:43",
																	"nodeType": "YulIdentifier",
																	"src": "3718:17:43"
																},
																"nativeSrc": "3718:45:43",
																"nodeType": "YulFunctionCall",
																"src": "3718:45:43"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3710:4:43",
																	"nodeType": "YulIdentifier",
																	"src": "3710:4:43"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "3549:220:43",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3639:9:43",
														"nodeType": "YulTypedName",
														"src": "3639:9:43",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3650:6:43",
														"nodeType": "YulTypedName",
														"src": "3650:6:43",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3661:4:43",
														"nodeType": "YulTypedName",
														"src": "3661:4:43",
														"type": ""
													}
												],
												"src": "3549:220:43"
											},
											{
												"body": {
													"nativeSrc": "3878:341:43",
													"nodeType": "YulBlock",
													"src": "3878:341:43",
													"statements": [
														{
															"body": {
																"nativeSrc": "3924:16:43",
																"nodeType": "YulBlock",
																"src": "3924:16:43",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3933:1:43",
																					"nodeType": "YulLiteral",
																					"src": "3933:1:43",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3936:1:43",
																					"nodeType": "YulLiteral",
																					"src": "3936:1:43",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "3926:6:43",
																				"nodeType": "YulIdentifier",
																				"src": "3926:6:43"
																			},
																			"nativeSrc": "3926:12:43",
																			"nodeType": "YulFunctionCall",
																			"src": "3926:12:43"
																		},
																		"nativeSrc": "3926:12:43",
																		"nodeType": "YulExpressionStatement",
																		"src": "3926:12:43"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3899:7:43",
																				"nodeType": "YulIdentifier",
																				"src": "3899:7:43"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3908:9:43",
																				"nodeType": "YulIdentifier",
																				"src": "3908:9:43"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3895:3:43",
																			"nodeType": "YulIdentifier",
																			"src": "3895:3:43"
																		},
																		"nativeSrc": "3895:23:43",
																		"nodeType": "YulFunctionCall",
																		"src": "3895:23:43"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3920:2:43",
																		"nodeType": "YulLiteral",
																		"src": "3920:2:43",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3891:3:43",
																	"nodeType": "YulIdentifier",
																	"src": "3891:3:43"
																},
																"nativeSrc": "3891:32:43",
																"nodeType": "YulFunctionCall",
																"src": "3891:32:43"
															},
															"nativeSrc": "3888:52:43",
															"nodeType": "YulIf",
															"src": "3888:52:43"
														},
														{
															"nativeSrc": "3949:36:43",
															"nodeType": "YulVariableDeclaration",
															"src": "3949:36:43",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3975:9:43",
																		"nodeType": "YulIdentifier",
																		"src": "3975:9:43"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "3962:12:43",
																	"nodeType": "YulIdentifier",
																	"src": "3962:12:43"
																},
																"nativeSrc": "3962:23:43",
																"nodeType": "YulFunctionCall",
																"src": "3962:23:43"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "3953:5:43",
																	"nodeType": "YulTypedName",
																	"src": "3953:5:43",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "4071:16:43",
																"nodeType": "YulBlock",
																"src": "4071:16:43",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "4080:1:43",
																					"nodeType": "YulLiteral",
																					"src": "4080:1:43",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4083:1:43",
																					"nodeType": "YulLiteral",
																					"src": "4083:1:43",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "4073:6:43",
																				"nodeType": "YulIdentifier",
																				"src": "4073:6:43"
																			},
																			"nativeSrc": "4073:12:43",
																			"nodeType": "YulFunctionCall",
																			"src": "4073:12:43"
																		},
																		"nativeSrc": "4073:12:43",
																		"nodeType": "YulExpressionStatement",
																		"src": "4073:12:43"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "4007:5:43",
																				"nodeType": "YulIdentifier",
																				"src": "4007:5:43"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "4018:5:43",
																						"nodeType": "YulIdentifier",
																						"src": "4018:5:43"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "4025:42:43",
																						"nodeType": "YulLiteral",
																						"src": "4025:42:43",
																						"type": "",
																						"value": "0xffffffffffffffffffffffffffffffffffffffff"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "4014:3:43",
																					"nodeType": "YulIdentifier",
																					"src": "4014:3:43"
																				},
																				"nativeSrc": "4014:54:43",
																				"nodeType": "YulFunctionCall",
																				"src": "4014:54:43"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "4004:2:43",
																			"nodeType": "YulIdentifier",
																			"src": "4004:2:43"
																		},
																		"nativeSrc": "4004:65:43",
																		"nodeType": "YulFunctionCall",
																		"src": "4004:65:43"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "3997:6:43",
																	"nodeType": "YulIdentifier",
																	"src": "3997:6:43"
																},
																"nativeSrc": "3997:73:43",
																"nodeType": "YulFunctionCall",
																"src": "3997:73:43"
															},
															"nativeSrc": "3994:93:43",
															"nodeType": "YulIf",
															"src": "3994:93:43"
														},
														{
															"nativeSrc": "4096:15:43",
															"nodeType": "YulAssignment",
															"src": "4096:15:43",
															"value": {
																"name": "value",
																"nativeSrc": "4106:5:43",
																"nodeType": "YulIdentifier",
																"src": "4106:5:43"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "4096:6:43",
																	"nodeType": "YulIdentifier",
																	"src": "4096:6:43"
																}
															]
														},
														{
															"nativeSrc": "4120:42:43",
															"nodeType": "YulAssignment",
															"src": "4120:42:43",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4147:9:43",
																				"nodeType": "YulIdentifier",
																				"src": "4147:9:43"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4158:2:43",
																				"nodeType": "YulLiteral",
																				"src": "4158:2:43",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4143:3:43",
																			"nodeType": "YulIdentifier",
																			"src": "4143:3:43"
																		},
																		"nativeSrc": "4143:18:43",
																		"nodeType": "YulFunctionCall",
																		"src": "4143:18:43"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "4130:12:43",
																	"nodeType": "YulIdentifier",
																	"src": "4130:12:43"
																},
																"nativeSrc": "4130:32:43",
																"nodeType": "YulFunctionCall",
																"src": "4130:32:43"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "4120:6:43",
																	"nodeType": "YulIdentifier",
																	"src": "4120:6:43"
																}
															]
														},
														{
															"nativeSrc": "4171:42:43",
															"nodeType": "YulAssignment",
															"src": "4171:42:43",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4198:9:43",
																				"nodeType": "YulIdentifier",
																				"src": "4198:9:43"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4209:2:43",
																				"nodeType": "YulLiteral",
																				"src": "4209:2:43",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4194:3:43",
																			"nodeType": "YulIdentifier",
																			"src": "4194:3:43"
																		},
																		"nativeSrc": "4194:18:43",
																		"nodeType": "YulFunctionCall",
																		"src": "4194:18:43"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "4181:12:43",
																	"nodeType": "YulIdentifier",
																	"src": "4181:12:43"
																},
																"nativeSrc": "4181:32:43",
																"nodeType": "YulFunctionCall",
																"src": "4181:32:43"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nativeSrc": "4171:6:43",
																	"nodeType": "YulIdentifier",
																	"src": "4171:6:43"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256t_uint256",
												"nativeSrc": "3774:445:43",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3828:9:43",
														"nodeType": "YulTypedName",
														"src": "3828:9:43",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3839:7:43",
														"nodeType": "YulTypedName",
														"src": "3839:7:43",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3851:6:43",
														"nodeType": "YulTypedName",
														"src": "3851:6:43",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "3859:6:43",
														"nodeType": "YulTypedName",
														"src": "3859:6:43",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "3867:6:43",
														"nodeType": "YulTypedName",
														"src": "3867:6:43",
														"type": ""
													}
												],
												"src": "3774:445:43"
											},
											{
												"body": {
													"nativeSrc": "4343:63:43",
													"nodeType": "YulBlock",
													"src": "4343:63:43",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4360:3:43",
																		"nodeType": "YulIdentifier",
																		"src": "4360:3:43"
																	},
																	{
																		"name": "value0",
																		"nativeSrc": "4365:6:43",
																		"nodeType": "YulIdentifier",
																		"src": "4365:6:43"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4353:6:43",
																	"nodeType": "YulIdentifier",
																	"src": "4353:6:43"
																},
																"nativeSrc": "4353:19:43",
																"nodeType": "YulFunctionCall",
																"src": "4353:19:43"
															},
															"nativeSrc": "4353:19:43",
															"nodeType": "YulExpressionStatement",
															"src": "4353:19:43"
														},
														{
															"nativeSrc": "4381:19:43",
															"nodeType": "YulAssignment",
															"src": "4381:19:43",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4392:3:43",
																		"nodeType": "YulIdentifier",
																		"src": "4392:3:43"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4397:2:43",
																		"nodeType": "YulLiteral",
																		"src": "4397:2:43",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4388:3:43",
																	"nodeType": "YulIdentifier",
																	"src": "4388:3:43"
																},
																"nativeSrc": "4388:12:43",
																"nodeType": "YulFunctionCall",
																"src": "4388:12:43"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "4381:3:43",
																	"nodeType": "YulIdentifier",
																	"src": "4381:3:43"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_uint256__to_t_uint256__nonPadded_inplace_fromStack_reversed",
												"nativeSrc": "4224:182:43",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "4319:3:43",
														"nodeType": "YulTypedName",
														"src": "4319:3:43",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "4324:6:43",
														"nodeType": "YulTypedName",
														"src": "4324:6:43",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "4335:3:43",
														"nodeType": "YulTypedName",
														"src": "4335:3:43",
														"type": ""
													}
												],
												"src": "4224:182:43"
											},
											{
												"body": {
													"nativeSrc": "4585:227:43",
													"nodeType": "YulBlock",
													"src": "4585:227:43",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4602:9:43",
																		"nodeType": "YulIdentifier",
																		"src": "4602:9:43"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4613:2:43",
																		"nodeType": "YulLiteral",
																		"src": "4613:2:43",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4595:6:43",
																	"nodeType": "YulIdentifier",
																	"src": "4595:6:43"
																},
																"nativeSrc": "4595:21:43",
																"nodeType": "YulFunctionCall",
																"src": "4595:21:43"
															},
															"nativeSrc": "4595:21:43",
															"nodeType": "YulExpressionStatement",
															"src": "4595:21:43"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4636:9:43",
																				"nodeType": "YulIdentifier",
																				"src": "4636:9:43"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4647:2:43",
																				"nodeType": "YulLiteral",
																				"src": "4647:2:43",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4632:3:43",
																			"nodeType": "YulIdentifier",
																			"src": "4632:3:43"
																		},
																		"nativeSrc": "4632:18:43",
																		"nodeType": "YulFunctionCall",
																		"src": "4632:18:43"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4652:2:43",
																		"nodeType": "YulLiteral",
																		"src": "4652:2:43",
																		"type": "",
																		"value": "37"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4625:6:43",
																	"nodeType": "YulIdentifier",
																	"src": "4625:6:43"
																},
																"nativeSrc": "4625:30:43",
																"nodeType": "YulFunctionCall",
																"src": "4625:30:43"
															},
															"nativeSrc": "4625:30:43",
															"nodeType": "YulExpressionStatement",
															"src": "4625:30:43"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4675:9:43",
																				"nodeType": "YulIdentifier",
																				"src": "4675:9:43"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4686:2:43",
																				"nodeType": "YulLiteral",
																				"src": "4686:2:43",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4671:3:43",
																			"nodeType": "YulIdentifier",
																			"src": "4671:3:43"
																		},
																		"nativeSrc": "4671:18:43",
																		"nodeType": "YulFunctionCall",
																		"src": "4671:18:43"
																	},
																	{
																		"hexValue": "43616e6469646174652068617320616c7265616479206265656e207265676973",
																		"kind": "string",
																		"nativeSrc": "4691:34:43",
																		"nodeType": "YulLiteral",
																		"src": "4691:34:43",
																		"type": "",
																		"value": "Candidate has already been regis"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4664:6:43",
																	"nodeType": "YulIdentifier",
																	"src": "4664:6:43"
																},
																"nativeSrc": "4664:62:43",
																"nodeType": "YulFunctionCall",
																"src": "4664:62:43"
															},
															"nativeSrc": "4664:62:43",
															"nodeType": "YulExpressionStatement",
															"src": "4664:62:43"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4746:9:43",
																				"nodeType": "YulIdentifier",
																				"src": "4746:9:43"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4757:2:43",
																				"nodeType": "YulLiteral",
																				"src": "4757:2:43",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4742:3:43",
																			"nodeType": "YulIdentifier",
																			"src": "4742:3:43"
																		},
																		"nativeSrc": "4742:18:43",
																		"nodeType": "YulFunctionCall",
																		"src": "4742:18:43"
																	},
																	{
																		"hexValue": "7465726564",
																		"kind": "string",
																		"nativeSrc": "4762:7:43",
																		"nodeType": "YulLiteral",
																		"src": "4762:7:43",
																		"type": "",
																		"value": "tered"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4735:6:43",
																	"nodeType": "YulIdentifier",
																	"src": "4735:6:43"
																},
																"nativeSrc": "4735:35:43",
																"nodeType": "YulFunctionCall",
																"src": "4735:35:43"
															},
															"nativeSrc": "4735:35:43",
															"nodeType": "YulExpressionStatement",
															"src": "4735:35:43"
														},
														{
															"nativeSrc": "4779:27:43",
															"nodeType": "YulAssignment",
															"src": "4779:27:43",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4791:9:43",
																		"nodeType": "YulIdentifier",
																		"src": "4791:9:43"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4802:3:43",
																		"nodeType": "YulLiteral",
																		"src": "4802:3:43",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4787:3:43",
																	"nodeType": "YulIdentifier",
																	"src": "4787:3:43"
																},
																"nativeSrc": "4787:19:43",
																"nodeType": "YulFunctionCall",
																"src": "4787:19:43"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4779:4:43",
																	"nodeType": "YulIdentifier",
																	"src": "4779:4:43"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_2c187f4e0f6eb04cdbd9242393a666e35059a52e208c37195b601c63a6b61ec0__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "4411:401:43",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4562:9:43",
														"nodeType": "YulTypedName",
														"src": "4562:9:43",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4576:4:43",
														"nodeType": "YulTypedName",
														"src": "4576:4:43",
														"type": ""
													}
												],
												"src": "4411:401:43"
											},
											{
												"body": {
													"nativeSrc": "4872:382:43",
													"nodeType": "YulBlock",
													"src": "4872:382:43",
													"statements": [
														{
															"nativeSrc": "4882:22:43",
															"nodeType": "YulAssignment",
															"src": "4882:22:43",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4896:1:43",
																		"nodeType": "YulLiteral",
																		"src": "4896:1:43",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nativeSrc": "4899:4:43",
																		"nodeType": "YulIdentifier",
																		"src": "4899:4:43"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "4892:3:43",
																	"nodeType": "YulIdentifier",
																	"src": "4892:3:43"
																},
																"nativeSrc": "4892:12:43",
																"nodeType": "YulFunctionCall",
																"src": "4892:12:43"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "4882:6:43",
																	"nodeType": "YulIdentifier",
																	"src": "4882:6:43"
																}
															]
														},
														{
															"nativeSrc": "4913:38:43",
															"nodeType": "YulVariableDeclaration",
															"src": "4913:38:43",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "4943:4:43",
																		"nodeType": "YulIdentifier",
																		"src": "4943:4:43"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4949:1:43",
																		"nodeType": "YulLiteral",
																		"src": "4949:1:43",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "4939:3:43",
																	"nodeType": "YulIdentifier",
																	"src": "4939:3:43"
																},
																"nativeSrc": "4939:12:43",
																"nodeType": "YulFunctionCall",
																"src": "4939:12:43"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "4917:18:43",
																	"nodeType": "YulTypedName",
																	"src": "4917:18:43",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "4990:31:43",
																"nodeType": "YulBlock",
																"src": "4990:31:43",
																"statements": [
																	{
																		"nativeSrc": "4992:27:43",
																		"nodeType": "YulAssignment",
																		"src": "4992:27:43",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "5006:6:43",
																					"nodeType": "YulIdentifier",
																					"src": "5006:6:43"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "5014:4:43",
																					"nodeType": "YulLiteral",
																					"src": "5014:4:43",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "5002:3:43",
																				"nodeType": "YulIdentifier",
																				"src": "5002:3:43"
																			},
																			"nativeSrc": "5002:17:43",
																			"nodeType": "YulFunctionCall",
																			"src": "5002:17:43"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "4992:6:43",
																				"nodeType": "YulIdentifier",
																				"src": "4992:6:43"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "4970:18:43",
																		"nodeType": "YulIdentifier",
																		"src": "4970:18:43"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "4963:6:43",
																	"nodeType": "YulIdentifier",
																	"src": "4963:6:43"
																},
																"nativeSrc": "4963:26:43",
																"nodeType": "YulFunctionCall",
																"src": "4963:26:43"
															},
															"nativeSrc": "4960:61:43",
															"nodeType": "YulIf",
															"src": "4960:61:43"
														},
														{
															"body": {
																"nativeSrc": "5080:168:43",
																"nodeType": "YulBlock",
																"src": "5080:168:43",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "5101:1:43",
																					"nodeType": "YulLiteral",
																					"src": "5101:1:43",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "5104:77:43",
																					"nodeType": "YulLiteral",
																					"src": "5104:77:43",
																					"type": "",
																					"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "5094:6:43",
																				"nodeType": "YulIdentifier",
																				"src": "5094:6:43"
																			},
																			"nativeSrc": "5094:88:43",
																			"nodeType": "YulFunctionCall",
																			"src": "5094:88:43"
																		},
																		"nativeSrc": "5094:88:43",
																		"nodeType": "YulExpressionStatement",
																		"src": "5094:88:43"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "5202:1:43",
																					"nodeType": "YulLiteral",
																					"src": "5202:1:43",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "5205:4:43",
																					"nodeType": "YulLiteral",
																					"src": "5205:4:43",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "5195:6:43",
																				"nodeType": "YulIdentifier",
																				"src": "5195:6:43"
																			},
																			"nativeSrc": "5195:15:43",
																			"nodeType": "YulFunctionCall",
																			"src": "5195:15:43"
																		},
																		"nativeSrc": "5195:15:43",
																		"nodeType": "YulExpressionStatement",
																		"src": "5195:15:43"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "5230:1:43",
																					"nodeType": "YulLiteral",
																					"src": "5230:1:43",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "5233:4:43",
																					"nodeType": "YulLiteral",
																					"src": "5233:4:43",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "5223:6:43",
																				"nodeType": "YulIdentifier",
																				"src": "5223:6:43"
																			},
																			"nativeSrc": "5223:15:43",
																			"nodeType": "YulFunctionCall",
																			"src": "5223:15:43"
																		},
																		"nativeSrc": "5223:15:43",
																		"nodeType": "YulExpressionStatement",
																		"src": "5223:15:43"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "5036:18:43",
																		"nodeType": "YulIdentifier",
																		"src": "5036:18:43"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "5059:6:43",
																				"nodeType": "YulIdentifier",
																				"src": "5059:6:43"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5067:2:43",
																				"nodeType": "YulLiteral",
																				"src": "5067:2:43",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "5056:2:43",
																			"nodeType": "YulIdentifier",
																			"src": "5056:2:43"
																		},
																		"nativeSrc": "5056:14:43",
																		"nodeType": "YulFunctionCall",
																		"src": "5056:14:43"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "5033:2:43",
																	"nodeType": "YulIdentifier",
																	"src": "5033:2:43"
																},
																"nativeSrc": "5033:38:43",
																"nodeType": "YulFunctionCall",
																"src": "5033:38:43"
															},
															"nativeSrc": "5030:218:43",
															"nodeType": "YulIf",
															"src": "5030:218:43"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "4817:437:43",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "4852:4:43",
														"nodeType": "YulTypedName",
														"src": "4852:4:43",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "4861:6:43",
														"nodeType": "YulTypedName",
														"src": "4861:6:43",
														"type": ""
													}
												],
												"src": "4817:437:43"
											},
											{
												"body": {
													"nativeSrc": "5315:65:43",
													"nodeType": "YulBlock",
													"src": "5315:65:43",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5332:1:43",
																		"nodeType": "YulLiteral",
																		"src": "5332:1:43",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nativeSrc": "5335:3:43",
																		"nodeType": "YulIdentifier",
																		"src": "5335:3:43"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5325:6:43",
																	"nodeType": "YulIdentifier",
																	"src": "5325:6:43"
																},
																"nativeSrc": "5325:14:43",
																"nodeType": "YulFunctionCall",
																"src": "5325:14:43"
															},
															"nativeSrc": "5325:14:43",
															"nodeType": "YulExpressionStatement",
															"src": "5325:14:43"
														},
														{
															"nativeSrc": "5348:26:43",
															"nodeType": "YulAssignment",
															"src": "5348:26:43",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5366:1:43",
																		"nodeType": "YulLiteral",
																		"src": "5366:1:43",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5369:4:43",
																		"nodeType": "YulLiteral",
																		"src": "5369:4:43",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nativeSrc": "5356:9:43",
																	"nodeType": "YulIdentifier",
																	"src": "5356:9:43"
																},
																"nativeSrc": "5356:18:43",
																"nodeType": "YulFunctionCall",
																"src": "5356:18:43"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "5348:4:43",
																	"nodeType": "YulIdentifier",
																	"src": "5348:4:43"
																}
															]
														}
													]
												},
												"name": "array_dataslot_string_storage",
												"nativeSrc": "5259:121:43",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "5298:3:43",
														"nodeType": "YulTypedName",
														"src": "5298:3:43",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nativeSrc": "5306:4:43",
														"nodeType": "YulTypedName",
														"src": "5306:4:43",
														"type": ""
													}
												],
												"src": "5259:121:43"
											},
											{
												"body": {
													"nativeSrc": "5466:437:43",
													"nodeType": "YulBlock",
													"src": "5466:437:43",
													"statements": [
														{
															"body": {
																"nativeSrc": "5499:398:43",
																"nodeType": "YulBlock",
																"src": "5499:398:43",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "5520:1:43",
																					"nodeType": "YulLiteral",
																					"src": "5520:1:43",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"name": "array",
																					"nativeSrc": "5523:5:43",
																					"nodeType": "YulIdentifier",
																					"src": "5523:5:43"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "5513:6:43",
																				"nodeType": "YulIdentifier",
																				"src": "5513:6:43"
																			},
																			"nativeSrc": "5513:16:43",
																			"nodeType": "YulFunctionCall",
																			"src": "5513:16:43"
																		},
																		"nativeSrc": "5513:16:43",
																		"nodeType": "YulExpressionStatement",
																		"src": "5513:16:43"
																	},
																	{
																		"nativeSrc": "5542:30:43",
																		"nodeType": "YulVariableDeclaration",
																		"src": "5542:30:43",
																		"value": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "5564:1:43",
																					"nodeType": "YulLiteral",
																					"src": "5564:1:43",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "5567:4:43",
																					"nodeType": "YulLiteral",
																					"src": "5567:4:43",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "keccak256",
																				"nativeSrc": "5554:9:43",
																				"nodeType": "YulIdentifier",
																				"src": "5554:9:43"
																			},
																			"nativeSrc": "5554:18:43",
																			"nodeType": "YulFunctionCall",
																			"src": "5554:18:43"
																		},
																		"variables": [
																			{
																				"name": "data",
																				"nativeSrc": "5546:4:43",
																				"nodeType": "YulTypedName",
																				"src": "5546:4:43",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "5585:57:43",
																		"nodeType": "YulVariableDeclaration",
																		"src": "5585:57:43",
																		"value": {
																			"arguments": [
																				{
																					"name": "data",
																					"nativeSrc": "5608:4:43",
																					"nodeType": "YulIdentifier",
																					"src": "5608:4:43"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "5618:1:43",
																							"nodeType": "YulLiteral",
																							"src": "5618:1:43",
																							"type": "",
																							"value": "5"
																						},
																						{
																							"arguments": [
																								{
																									"name": "startIndex",
																									"nativeSrc": "5625:10:43",
																									"nodeType": "YulIdentifier",
																									"src": "5625:10:43"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "5637:2:43",
																									"nodeType": "YulLiteral",
																									"src": "5637:2:43",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "5621:3:43",
																								"nodeType": "YulIdentifier",
																								"src": "5621:3:43"
																							},
																							"nativeSrc": "5621:19:43",
																							"nodeType": "YulFunctionCall",
																							"src": "5621:19:43"
																						}
																					],
																					"functionName": {
																						"name": "shr",
																						"nativeSrc": "5614:3:43",
																						"nodeType": "YulIdentifier",
																						"src": "5614:3:43"
																					},
																					"nativeSrc": "5614:27:43",
																					"nodeType": "YulFunctionCall",
																					"src": "5614:27:43"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "5604:3:43",
																				"nodeType": "YulIdentifier",
																				"src": "5604:3:43"
																			},
																			"nativeSrc": "5604:38:43",
																			"nodeType": "YulFunctionCall",
																			"src": "5604:38:43"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nativeSrc": "5589:11:43",
																				"nodeType": "YulTypedName",
																				"src": "5589:11:43",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "5679:23:43",
																			"nodeType": "YulBlock",
																			"src": "5679:23:43",
																			"statements": [
																				{
																					"nativeSrc": "5681:19:43",
																					"nodeType": "YulAssignment",
																					"src": "5681:19:43",
																					"value": {
																						"name": "data",
																						"nativeSrc": "5696:4:43",
																						"nodeType": "YulIdentifier",
																						"src": "5696:4:43"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nativeSrc": "5681:11:43",
																							"nodeType": "YulIdentifier",
																							"src": "5681:11:43"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nativeSrc": "5661:10:43",
																					"nodeType": "YulIdentifier",
																					"src": "5661:10:43"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "5673:4:43",
																					"nodeType": "YulLiteral",
																					"src": "5673:4:43",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nativeSrc": "5658:2:43",
																				"nodeType": "YulIdentifier",
																				"src": "5658:2:43"
																			},
																			"nativeSrc": "5658:20:43",
																			"nodeType": "YulFunctionCall",
																			"src": "5658:20:43"
																		},
																		"nativeSrc": "5655:47:43",
																		"nodeType": "YulIf",
																		"src": "5655:47:43"
																	},
																	{
																		"nativeSrc": "5715:41:43",
																		"nodeType": "YulVariableDeclaration",
																		"src": "5715:41:43",
																		"value": {
																			"arguments": [
																				{
																					"name": "data",
																					"nativeSrc": "5729:4:43",
																					"nodeType": "YulIdentifier",
																					"src": "5729:4:43"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "5739:1:43",
																							"nodeType": "YulLiteral",
																							"src": "5739:1:43",
																							"type": "",
																							"value": "5"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nativeSrc": "5746:3:43",
																									"nodeType": "YulIdentifier",
																									"src": "5746:3:43"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "5751:2:43",
																									"nodeType": "YulLiteral",
																									"src": "5751:2:43",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "5742:3:43",
																								"nodeType": "YulIdentifier",
																								"src": "5742:3:43"
																							},
																							"nativeSrc": "5742:12:43",
																							"nodeType": "YulFunctionCall",
																							"src": "5742:12:43"
																						}
																					],
																					"functionName": {
																						"name": "shr",
																						"nativeSrc": "5735:3:43",
																						"nodeType": "YulIdentifier",
																						"src": "5735:3:43"
																					},
																					"nativeSrc": "5735:20:43",
																					"nodeType": "YulFunctionCall",
																					"src": "5735:20:43"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "5725:3:43",
																				"nodeType": "YulIdentifier",
																				"src": "5725:3:43"
																			},
																			"nativeSrc": "5725:31:43",
																			"nodeType": "YulFunctionCall",
																			"src": "5725:31:43"
																		},
																		"variables": [
																			{
																				"name": "_1",
																				"nativeSrc": "5719:2:43",
																				"nodeType": "YulTypedName",
																				"src": "5719:2:43",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "5769:24:43",
																		"nodeType": "YulVariableDeclaration",
																		"src": "5769:24:43",
																		"value": {
																			"name": "deleteStart",
																			"nativeSrc": "5782:11:43",
																			"nodeType": "YulIdentifier",
																			"src": "5782:11:43"
																		},
																		"variables": [
																			{
																				"name": "start",
																				"nativeSrc": "5773:5:43",
																				"nodeType": "YulTypedName",
																				"src": "5773:5:43",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "5867:20:43",
																			"nodeType": "YulBlock",
																			"src": "5867:20:43",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [
																							{
																								"name": "start",
																								"nativeSrc": "5876:5:43",
																								"nodeType": "YulIdentifier",
																								"src": "5876:5:43"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "5883:1:43",
																								"nodeType": "YulLiteral",
																								"src": "5883:1:43",
																								"type": "",
																								"value": "0"
																							}
																						],
																						"functionName": {
																							"name": "sstore",
																							"nativeSrc": "5869:6:43",
																							"nodeType": "YulIdentifier",
																							"src": "5869:6:43"
																						},
																						"nativeSrc": "5869:16:43",
																						"nodeType": "YulFunctionCall",
																						"src": "5869:16:43"
																					},
																					"nativeSrc": "5869:16:43",
																					"nodeType": "YulExpressionStatement",
																					"src": "5869:16:43"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "5817:5:43",
																					"nodeType": "YulIdentifier",
																					"src": "5817:5:43"
																				},
																				{
																					"name": "_1",
																					"nativeSrc": "5824:2:43",
																					"nodeType": "YulIdentifier",
																					"src": "5824:2:43"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nativeSrc": "5814:2:43",
																				"nodeType": "YulIdentifier",
																				"src": "5814:2:43"
																			},
																			"nativeSrc": "5814:13:43",
																			"nodeType": "YulFunctionCall",
																			"src": "5814:13:43"
																		},
																		"nativeSrc": "5806:81:43",
																		"nodeType": "YulForLoop",
																		"post": {
																			"nativeSrc": "5828:26:43",
																			"nodeType": "YulBlock",
																			"src": "5828:26:43",
																			"statements": [
																				{
																					"nativeSrc": "5830:22:43",
																					"nodeType": "YulAssignment",
																					"src": "5830:22:43",
																					"value": {
																						"arguments": [
																							{
																								"name": "start",
																								"nativeSrc": "5843:5:43",
																								"nodeType": "YulIdentifier",
																								"src": "5843:5:43"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "5850:1:43",
																								"nodeType": "YulLiteral",
																								"src": "5850:1:43",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nativeSrc": "5839:3:43",
																							"nodeType": "YulIdentifier",
																							"src": "5839:3:43"
																						},
																						"nativeSrc": "5839:13:43",
																						"nodeType": "YulFunctionCall",
																						"src": "5839:13:43"
																					},
																					"variableNames": [
																						{
																							"name": "start",
																							"nativeSrc": "5830:5:43",
																							"nodeType": "YulIdentifier",
																							"src": "5830:5:43"
																						}
																					]
																				}
																			]
																		},
																		"pre": {
																			"nativeSrc": "5810:3:43",
																			"nodeType": "YulBlock",
																			"src": "5810:3:43",
																			"statements": []
																		},
																		"src": "5806:81:43"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nativeSrc": "5482:3:43",
																		"nodeType": "YulIdentifier",
																		"src": "5482:3:43"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5487:2:43",
																		"nodeType": "YulLiteral",
																		"src": "5487:2:43",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "5479:2:43",
																	"nodeType": "YulIdentifier",
																	"src": "5479:2:43"
																},
																"nativeSrc": "5479:11:43",
																"nodeType": "YulFunctionCall",
																"src": "5479:11:43"
															},
															"nativeSrc": "5476:421:43",
															"nodeType": "YulIf",
															"src": "5476:421:43"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_string_storage",
												"nativeSrc": "5385:518:43",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nativeSrc": "5438:5:43",
														"nodeType": "YulTypedName",
														"src": "5438:5:43",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "5445:3:43",
														"nodeType": "YulTypedName",
														"src": "5445:3:43",
														"type": ""
													},
													{
														"name": "startIndex",
														"nativeSrc": "5450:10:43",
														"nodeType": "YulTypedName",
														"src": "5450:10:43",
														"type": ""
													}
												],
												"src": "5385:518:43"
											},
											{
												"body": {
													"nativeSrc": "5993:81:43",
													"nodeType": "YulBlock",
													"src": "5993:81:43",
													"statements": [
														{
															"nativeSrc": "6003:65:43",
															"nodeType": "YulAssignment",
															"src": "6003:65:43",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nativeSrc": "6018:4:43",
																				"nodeType": "YulIdentifier",
																				"src": "6018:4:43"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "6036:1:43",
																										"nodeType": "YulLiteral",
																										"src": "6036:1:43",
																										"type": "",
																										"value": "3"
																									},
																									{
																										"name": "len",
																										"nativeSrc": "6039:3:43",
																										"nodeType": "YulIdentifier",
																										"src": "6039:3:43"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nativeSrc": "6032:3:43",
																									"nodeType": "YulIdentifier",
																									"src": "6032:3:43"
																								},
																								"nativeSrc": "6032:11:43",
																								"nodeType": "YulFunctionCall",
																								"src": "6032:11:43"
																							},
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "6049:1:43",
																										"nodeType": "YulLiteral",
																										"src": "6049:1:43",
																										"type": "",
																										"value": "0"
																									}
																								],
																								"functionName": {
																									"name": "not",
																									"nativeSrc": "6045:3:43",
																									"nodeType": "YulIdentifier",
																									"src": "6045:3:43"
																								},
																								"nativeSrc": "6045:6:43",
																								"nodeType": "YulFunctionCall",
																								"src": "6045:6:43"
																							}
																						],
																						"functionName": {
																							"name": "shr",
																							"nativeSrc": "6028:3:43",
																							"nodeType": "YulIdentifier",
																							"src": "6028:3:43"
																						},
																						"nativeSrc": "6028:24:43",
																						"nodeType": "YulFunctionCall",
																						"src": "6028:24:43"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "6024:3:43",
																					"nodeType": "YulIdentifier",
																					"src": "6024:3:43"
																				},
																				"nativeSrc": "6024:29:43",
																				"nodeType": "YulFunctionCall",
																				"src": "6024:29:43"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "6014:3:43",
																			"nodeType": "YulIdentifier",
																			"src": "6014:3:43"
																		},
																		"nativeSrc": "6014:40:43",
																		"nodeType": "YulFunctionCall",
																		"src": "6014:40:43"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "6060:1:43",
																				"nodeType": "YulLiteral",
																				"src": "6060:1:43",
																				"type": "",
																				"value": "1"
																			},
																			{
																				"name": "len",
																				"nativeSrc": "6063:3:43",
																				"nodeType": "YulIdentifier",
																				"src": "6063:3:43"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "6056:3:43",
																			"nodeType": "YulIdentifier",
																			"src": "6056:3:43"
																		},
																		"nativeSrc": "6056:11:43",
																		"nodeType": "YulFunctionCall",
																		"src": "6056:11:43"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "6011:2:43",
																	"nodeType": "YulIdentifier",
																	"src": "6011:2:43"
																},
																"nativeSrc": "6011:57:43",
																"nodeType": "YulFunctionCall",
																"src": "6011:57:43"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nativeSrc": "6003:4:43",
																	"nodeType": "YulIdentifier",
																	"src": "6003:4:43"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nativeSrc": "5908:166:43",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "5970:4:43",
														"nodeType": "YulTypedName",
														"src": "5970:4:43",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "5976:3:43",
														"nodeType": "YulTypedName",
														"src": "5976:3:43",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nativeSrc": "5984:4:43",
														"nodeType": "YulTypedName",
														"src": "5984:4:43",
														"type": ""
													}
												],
												"src": "5908:166:43"
											},
											{
												"body": {
													"nativeSrc": "6175:1249:43",
													"nodeType": "YulBlock",
													"src": "6175:1249:43",
													"statements": [
														{
															"nativeSrc": "6185:24:43",
															"nodeType": "YulVariableDeclaration",
															"src": "6185:24:43",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "6205:3:43",
																		"nodeType": "YulIdentifier",
																		"src": "6205:3:43"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "6199:5:43",
																	"nodeType": "YulIdentifier",
																	"src": "6199:5:43"
																},
																"nativeSrc": "6199:10:43",
																"nodeType": "YulFunctionCall",
																"src": "6199:10:43"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nativeSrc": "6189:6:43",
																	"nodeType": "YulTypedName",
																	"src": "6189:6:43",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "6252:22:43",
																"nodeType": "YulBlock",
																"src": "6252:22:43",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "6254:16:43",
																				"nodeType": "YulIdentifier",
																				"src": "6254:16:43"
																			},
																			"nativeSrc": "6254:18:43",
																			"nodeType": "YulFunctionCall",
																			"src": "6254:18:43"
																		},
																		"nativeSrc": "6254:18:43",
																		"nodeType": "YulExpressionStatement",
																		"src": "6254:18:43"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "6224:6:43",
																		"nodeType": "YulIdentifier",
																		"src": "6224:6:43"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6232:18:43",
																		"nodeType": "YulLiteral",
																		"src": "6232:18:43",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "6221:2:43",
																	"nodeType": "YulIdentifier",
																	"src": "6221:2:43"
																},
																"nativeSrc": "6221:30:43",
																"nodeType": "YulFunctionCall",
																"src": "6221:30:43"
															},
															"nativeSrc": "6218:56:43",
															"nodeType": "YulIf",
															"src": "6218:56:43"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "6327:4:43",
																		"nodeType": "YulIdentifier",
																		"src": "6327:4:43"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nativeSrc": "6365:4:43",
																						"nodeType": "YulIdentifier",
																						"src": "6365:4:43"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nativeSrc": "6359:5:43",
																					"nodeType": "YulIdentifier",
																					"src": "6359:5:43"
																				},
																				"nativeSrc": "6359:11:43",
																				"nodeType": "YulFunctionCall",
																				"src": "6359:11:43"
																			}
																		],
																		"functionName": {
																			"name": "extract_byte_array_length",
																			"nativeSrc": "6333:25:43",
																			"nodeType": "YulIdentifier",
																			"src": "6333:25:43"
																		},
																		"nativeSrc": "6333:38:43",
																		"nodeType": "YulFunctionCall",
																		"src": "6333:38:43"
																	},
																	{
																		"name": "newLen",
																		"nativeSrc": "6373:6:43",
																		"nodeType": "YulIdentifier",
																		"src": "6373:6:43"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_string_storage",
																	"nativeSrc": "6283:43:43",
																	"nodeType": "YulIdentifier",
																	"src": "6283:43:43"
																},
																"nativeSrc": "6283:97:43",
																"nodeType": "YulFunctionCall",
																"src": "6283:97:43"
															},
															"nativeSrc": "6283:97:43",
															"nodeType": "YulExpressionStatement",
															"src": "6283:97:43"
														},
														{
															"nativeSrc": "6389:18:43",
															"nodeType": "YulVariableDeclaration",
															"src": "6389:18:43",
															"value": {
																"kind": "number",
																"nativeSrc": "6406:1:43",
																"nodeType": "YulLiteral",
																"src": "6406:1:43",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "6393:9:43",
																	"nodeType": "YulTypedName",
																	"src": "6393:9:43",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "6416:23:43",
															"nodeType": "YulVariableDeclaration",
															"src": "6416:23:43",
															"value": {
																"kind": "number",
																"nativeSrc": "6435:4:43",
																"nodeType": "YulLiteral",
																"src": "6435:4:43",
																"type": "",
																"value": "0x20"
															},
															"variables": [
																{
																	"name": "srcOffset_1",
																	"nativeSrc": "6420:11:43",
																	"nodeType": "YulTypedName",
																	"src": "6420:11:43",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "6448:17:43",
															"nodeType": "YulAssignment",
															"src": "6448:17:43",
															"value": {
																"kind": "number",
																"nativeSrc": "6461:4:43",
																"nodeType": "YulLiteral",
																"src": "6461:4:43",
																"type": "",
																"value": "0x20"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "6448:9:43",
																	"nodeType": "YulIdentifier",
																	"src": "6448:9:43"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "6511:656:43",
																		"nodeType": "YulBlock",
																		"src": "6511:656:43",
																		"statements": [
																			{
																				"nativeSrc": "6525:35:43",
																				"nodeType": "YulVariableDeclaration",
																				"src": "6525:35:43",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nativeSrc": "6544:6:43",
																							"nodeType": "YulIdentifier",
																							"src": "6544:6:43"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nativeSrc": "6556:2:43",
																									"nodeType": "YulLiteral",
																									"src": "6556:2:43",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nativeSrc": "6552:3:43",
																								"nodeType": "YulIdentifier",
																								"src": "6552:3:43"
																							},
																							"nativeSrc": "6552:7:43",
																							"nodeType": "YulFunctionCall",
																							"src": "6552:7:43"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nativeSrc": "6540:3:43",
																						"nodeType": "YulIdentifier",
																						"src": "6540:3:43"
																					},
																					"nativeSrc": "6540:20:43",
																					"nodeType": "YulFunctionCall",
																					"src": "6540:20:43"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nativeSrc": "6529:7:43",
																						"nodeType": "YulTypedName",
																						"src": "6529:7:43",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "6573:49:43",
																				"nodeType": "YulVariableDeclaration",
																				"src": "6573:49:43",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "6617:4:43",
																							"nodeType": "YulIdentifier",
																							"src": "6617:4:43"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_string_storage",
																						"nativeSrc": "6587:29:43",
																						"nodeType": "YulIdentifier",
																						"src": "6587:29:43"
																					},
																					"nativeSrc": "6587:35:43",
																					"nodeType": "YulFunctionCall",
																					"src": "6587:35:43"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nativeSrc": "6577:6:43",
																						"nodeType": "YulTypedName",
																						"src": "6577:6:43",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "6635:10:43",
																				"nodeType": "YulVariableDeclaration",
																				"src": "6635:10:43",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "6644:1:43",
																					"nodeType": "YulLiteral",
																					"src": "6644:1:43",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nativeSrc": "6639:1:43",
																						"nodeType": "YulTypedName",
																						"src": "6639:1:43",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "6722:172:43",
																					"nodeType": "YulBlock",
																					"src": "6722:172:43",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "6747:6:43",
																										"nodeType": "YulIdentifier",
																										"src": "6747:6:43"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nativeSrc": "6765:3:43",
																														"nodeType": "YulIdentifier",
																														"src": "6765:3:43"
																													},
																													{
																														"name": "srcOffset",
																														"nativeSrc": "6770:9:43",
																														"nodeType": "YulIdentifier",
																														"src": "6770:9:43"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nativeSrc": "6761:3:43",
																													"nodeType": "YulIdentifier",
																													"src": "6761:3:43"
																												},
																												"nativeSrc": "6761:19:43",
																												"nodeType": "YulFunctionCall",
																												"src": "6761:19:43"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nativeSrc": "6755:5:43",
																											"nodeType": "YulIdentifier",
																											"src": "6755:5:43"
																										},
																										"nativeSrc": "6755:26:43",
																										"nodeType": "YulFunctionCall",
																										"src": "6755:26:43"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "6740:6:43",
																									"nodeType": "YulIdentifier",
																									"src": "6740:6:43"
																								},
																								"nativeSrc": "6740:42:43",
																								"nodeType": "YulFunctionCall",
																								"src": "6740:42:43"
																							},
																							"nativeSrc": "6740:42:43",
																							"nodeType": "YulExpressionStatement",
																							"src": "6740:42:43"
																						},
																						{
																							"nativeSrc": "6799:24:43",
																							"nodeType": "YulAssignment",
																							"src": "6799:24:43",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "6813:6:43",
																										"nodeType": "YulIdentifier",
																										"src": "6813:6:43"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "6821:1:43",
																										"nodeType": "YulLiteral",
																										"src": "6821:1:43",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "6809:3:43",
																									"nodeType": "YulIdentifier",
																									"src": "6809:3:43"
																								},
																								"nativeSrc": "6809:14:43",
																								"nodeType": "YulFunctionCall",
																								"src": "6809:14:43"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nativeSrc": "6799:6:43",
																									"nodeType": "YulIdentifier",
																									"src": "6799:6:43"
																								}
																							]
																						},
																						{
																							"nativeSrc": "6840:40:43",
																							"nodeType": "YulAssignment",
																							"src": "6840:40:43",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nativeSrc": "6857:9:43",
																										"nodeType": "YulIdentifier",
																										"src": "6857:9:43"
																									},
																									{
																										"name": "srcOffset_1",
																										"nativeSrc": "6868:11:43",
																										"nodeType": "YulIdentifier",
																										"src": "6868:11:43"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "6853:3:43",
																									"nodeType": "YulIdentifier",
																									"src": "6853:3:43"
																								},
																								"nativeSrc": "6853:27:43",
																								"nodeType": "YulFunctionCall",
																								"src": "6853:27:43"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nativeSrc": "6840:9:43",
																									"nodeType": "YulIdentifier",
																									"src": "6840:9:43"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nativeSrc": "6669:1:43",
																							"nodeType": "YulIdentifier",
																							"src": "6669:1:43"
																						},
																						{
																							"name": "loopEnd",
																							"nativeSrc": "6672:7:43",
																							"nodeType": "YulIdentifier",
																							"src": "6672:7:43"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "6666:2:43",
																						"nodeType": "YulIdentifier",
																						"src": "6666:2:43"
																					},
																					"nativeSrc": "6666:14:43",
																					"nodeType": "YulFunctionCall",
																					"src": "6666:14:43"
																				},
																				"nativeSrc": "6658:236:43",
																				"nodeType": "YulForLoop",
																				"post": {
																					"nativeSrc": "6681:28:43",
																					"nodeType": "YulBlock",
																					"src": "6681:28:43",
																					"statements": [
																						{
																							"nativeSrc": "6683:24:43",
																							"nodeType": "YulAssignment",
																							"src": "6683:24:43",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nativeSrc": "6692:1:43",
																										"nodeType": "YulIdentifier",
																										"src": "6692:1:43"
																									},
																									{
																										"name": "srcOffset_1",
																										"nativeSrc": "6695:11:43",
																										"nodeType": "YulIdentifier",
																										"src": "6695:11:43"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "6688:3:43",
																									"nodeType": "YulIdentifier",
																									"src": "6688:3:43"
																								},
																								"nativeSrc": "6688:19:43",
																								"nodeType": "YulFunctionCall",
																								"src": "6688:19:43"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nativeSrc": "6683:1:43",
																									"nodeType": "YulIdentifier",
																									"src": "6683:1:43"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nativeSrc": "6662:3:43",
																					"nodeType": "YulBlock",
																					"src": "6662:3:43",
																					"statements": []
																				},
																				"src": "6658:236:43"
																			},
																			{
																				"body": {
																					"nativeSrc": "6942:166:43",
																					"nodeType": "YulBlock",
																					"src": "6942:166:43",
																					"statements": [
																						{
																							"nativeSrc": "6960:43:43",
																							"nodeType": "YulVariableDeclaration",
																							"src": "6960:43:43",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "6987:3:43",
																												"nodeType": "YulIdentifier",
																												"src": "6987:3:43"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "6992:9:43",
																												"nodeType": "YulIdentifier",
																												"src": "6992:9:43"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "6983:3:43",
																											"nodeType": "YulIdentifier",
																											"src": "6983:3:43"
																										},
																										"nativeSrc": "6983:19:43",
																										"nodeType": "YulFunctionCall",
																										"src": "6983:19:43"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "6977:5:43",
																									"nodeType": "YulIdentifier",
																									"src": "6977:5:43"
																								},
																								"nativeSrc": "6977:26:43",
																								"nodeType": "YulFunctionCall",
																								"src": "6977:26:43"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nativeSrc": "6964:9:43",
																									"nodeType": "YulTypedName",
																									"src": "6964:9:43",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "7027:6:43",
																										"nodeType": "YulIdentifier",
																										"src": "7027:6:43"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nativeSrc": "7039:9:43",
																												"nodeType": "YulIdentifier",
																												"src": "7039:9:43"
																											},
																											{
																												"arguments": [
																													{
																														"arguments": [
																															{
																																"arguments": [
																																	{
																																		"arguments": [
																																			{
																																				"kind": "number",
																																				"nativeSrc": "7066:1:43",
																																				"nodeType": "YulLiteral",
																																				"src": "7066:1:43",
																																				"type": "",
																																				"value": "3"
																																			},
																																			{
																																				"name": "newLen",
																																				"nativeSrc": "7069:6:43",
																																				"nodeType": "YulIdentifier",
																																				"src": "7069:6:43"
																																			}
																																		],
																																		"functionName": {
																																			"name": "shl",
																																			"nativeSrc": "7062:3:43",
																																			"nodeType": "YulIdentifier",
																																			"src": "7062:3:43"
																																		},
																																		"nativeSrc": "7062:14:43",
																																		"nodeType": "YulFunctionCall",
																																		"src": "7062:14:43"
																																	},
																																	{
																																		"kind": "number",
																																		"nativeSrc": "7078:3:43",
																																		"nodeType": "YulLiteral",
																																		"src": "7078:3:43",
																																		"type": "",
																																		"value": "248"
																																	}
																																],
																																"functionName": {
																																	"name": "and",
																																	"nativeSrc": "7058:3:43",
																																	"nodeType": "YulIdentifier",
																																	"src": "7058:3:43"
																																},
																																"nativeSrc": "7058:24:43",
																																"nodeType": "YulFunctionCall",
																																"src": "7058:24:43"
																															},
																															{
																																"arguments": [
																																	{
																																		"kind": "number",
																																		"nativeSrc": "7088:1:43",
																																		"nodeType": "YulLiteral",
																																		"src": "7088:1:43",
																																		"type": "",
																																		"value": "0"
																																	}
																																],
																																"functionName": {
																																	"name": "not",
																																	"nativeSrc": "7084:3:43",
																																	"nodeType": "YulIdentifier",
																																	"src": "7084:3:43"
																																},
																																"nativeSrc": "7084:6:43",
																																"nodeType": "YulFunctionCall",
																																"src": "7084:6:43"
																															}
																														],
																														"functionName": {
																															"name": "shr",
																															"nativeSrc": "7054:3:43",
																															"nodeType": "YulIdentifier",
																															"src": "7054:3:43"
																														},
																														"nativeSrc": "7054:37:43",
																														"nodeType": "YulFunctionCall",
																														"src": "7054:37:43"
																													}
																												],
																												"functionName": {
																													"name": "not",
																													"nativeSrc": "7050:3:43",
																													"nodeType": "YulIdentifier",
																													"src": "7050:3:43"
																												},
																												"nativeSrc": "7050:42:43",
																												"nodeType": "YulFunctionCall",
																												"src": "7050:42:43"
																											}
																										],
																										"functionName": {
																											"name": "and",
																											"nativeSrc": "7035:3:43",
																											"nodeType": "YulIdentifier",
																											"src": "7035:3:43"
																										},
																										"nativeSrc": "7035:58:43",
																										"nodeType": "YulFunctionCall",
																										"src": "7035:58:43"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "7020:6:43",
																									"nodeType": "YulIdentifier",
																									"src": "7020:6:43"
																								},
																								"nativeSrc": "7020:74:43",
																								"nodeType": "YulFunctionCall",
																								"src": "7020:74:43"
																							},
																							"nativeSrc": "7020:74:43",
																							"nodeType": "YulExpressionStatement",
																							"src": "7020:74:43"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nativeSrc": "6913:7:43",
																							"nodeType": "YulIdentifier",
																							"src": "6913:7:43"
																						},
																						{
																							"name": "newLen",
																							"nativeSrc": "6922:6:43",
																							"nodeType": "YulIdentifier",
																							"src": "6922:6:43"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "6910:2:43",
																						"nodeType": "YulIdentifier",
																						"src": "6910:2:43"
																					},
																					"nativeSrc": "6910:19:43",
																					"nodeType": "YulFunctionCall",
																					"src": "6910:19:43"
																				},
																				"nativeSrc": "6907:201:43",
																				"nodeType": "YulIf",
																				"src": "6907:201:43"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "7128:4:43",
																							"nodeType": "YulIdentifier",
																							"src": "7128:4:43"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"kind": "number",
																											"nativeSrc": "7142:1:43",
																											"nodeType": "YulLiteral",
																											"src": "7142:1:43",
																											"type": "",
																											"value": "1"
																										},
																										{
																											"name": "newLen",
																											"nativeSrc": "7145:6:43",
																											"nodeType": "YulIdentifier",
																											"src": "7145:6:43"
																										}
																									],
																									"functionName": {
																										"name": "shl",
																										"nativeSrc": "7138:3:43",
																										"nodeType": "YulIdentifier",
																										"src": "7138:3:43"
																									},
																									"nativeSrc": "7138:14:43",
																									"nodeType": "YulFunctionCall",
																									"src": "7138:14:43"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "7154:1:43",
																									"nodeType": "YulLiteral",
																									"src": "7154:1:43",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "7134:3:43",
																								"nodeType": "YulIdentifier",
																								"src": "7134:3:43"
																							},
																							"nativeSrc": "7134:22:43",
																							"nodeType": "YulFunctionCall",
																							"src": "7134:22:43"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "7121:6:43",
																						"nodeType": "YulIdentifier",
																						"src": "7121:6:43"
																					},
																					"nativeSrc": "7121:36:43",
																					"nodeType": "YulFunctionCall",
																					"src": "7121:36:43"
																				},
																				"nativeSrc": "7121:36:43",
																				"nodeType": "YulExpressionStatement",
																				"src": "7121:36:43"
																			}
																		]
																	},
																	"nativeSrc": "6504:663:43",
																	"nodeType": "YulCase",
																	"src": "6504:663:43",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "6509:1:43",
																		"nodeType": "YulLiteral",
																		"src": "6509:1:43",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "7184:234:43",
																		"nodeType": "YulBlock",
																		"src": "7184:234:43",
																		"statements": [
																			{
																				"nativeSrc": "7198:14:43",
																				"nodeType": "YulVariableDeclaration",
																				"src": "7198:14:43",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "7211:1:43",
																					"nodeType": "YulLiteral",
																					"src": "7211:1:43",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nativeSrc": "7202:5:43",
																						"nodeType": "YulTypedName",
																						"src": "7202:5:43",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "7247:67:43",
																					"nodeType": "YulBlock",
																					"src": "7247:67:43",
																					"statements": [
																						{
																							"nativeSrc": "7265:35:43",
																							"nodeType": "YulAssignment",
																							"src": "7265:35:43",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "7284:3:43",
																												"nodeType": "YulIdentifier",
																												"src": "7284:3:43"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "7289:9:43",
																												"nodeType": "YulIdentifier",
																												"src": "7289:9:43"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "7280:3:43",
																											"nodeType": "YulIdentifier",
																											"src": "7280:3:43"
																										},
																										"nativeSrc": "7280:19:43",
																										"nodeType": "YulFunctionCall",
																										"src": "7280:19:43"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "7274:5:43",
																									"nodeType": "YulIdentifier",
																									"src": "7274:5:43"
																								},
																								"nativeSrc": "7274:26:43",
																								"nodeType": "YulFunctionCall",
																								"src": "7274:26:43"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nativeSrc": "7265:5:43",
																									"nodeType": "YulIdentifier",
																									"src": "7265:5:43"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nativeSrc": "7228:6:43",
																					"nodeType": "YulIdentifier",
																					"src": "7228:6:43"
																				},
																				"nativeSrc": "7225:89:43",
																				"nodeType": "YulIf",
																				"src": "7225:89:43"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "7334:4:43",
																							"nodeType": "YulIdentifier",
																							"src": "7334:4:43"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nativeSrc": "7393:5:43",
																									"nodeType": "YulIdentifier",
																									"src": "7393:5:43"
																								},
																								{
																									"name": "newLen",
																									"nativeSrc": "7400:6:43",
																									"nodeType": "YulIdentifier",
																									"src": "7400:6:43"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nativeSrc": "7340:52:43",
																								"nodeType": "YulIdentifier",
																								"src": "7340:52:43"
																							},
																							"nativeSrc": "7340:67:43",
																							"nodeType": "YulFunctionCall",
																							"src": "7340:67:43"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "7327:6:43",
																						"nodeType": "YulIdentifier",
																						"src": "7327:6:43"
																					},
																					"nativeSrc": "7327:81:43",
																					"nodeType": "YulFunctionCall",
																					"src": "7327:81:43"
																				},
																				"nativeSrc": "7327:81:43",
																				"nodeType": "YulExpressionStatement",
																				"src": "7327:81:43"
																			}
																		]
																	},
																	"nativeSrc": "7176:242:43",
																	"nodeType": "YulCase",
																	"src": "7176:242:43",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "6484:6:43",
																		"nodeType": "YulIdentifier",
																		"src": "6484:6:43"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6492:2:43",
																		"nodeType": "YulLiteral",
																		"src": "6492:2:43",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "6481:2:43",
																	"nodeType": "YulIdentifier",
																	"src": "6481:2:43"
																},
																"nativeSrc": "6481:14:43",
																"nodeType": "YulFunctionCall",
																"src": "6481:14:43"
															},
															"nativeSrc": "6474:944:43",
															"nodeType": "YulSwitch",
															"src": "6474:944:43"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nativeSrc": "6079:1345:43",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "6160:4:43",
														"nodeType": "YulTypedName",
														"src": "6160:4:43",
														"type": ""
													},
													{
														"name": "src",
														"nativeSrc": "6166:3:43",
														"nodeType": "YulTypedName",
														"src": "6166:3:43",
														"type": ""
													}
												],
												"src": "6079:1345:43"
											},
											{
												"body": {
													"nativeSrc": "7477:231:43",
													"nodeType": "YulBlock",
													"src": "7477:231:43",
													"statements": [
														{
															"nativeSrc": "7487:16:43",
															"nodeType": "YulAssignment",
															"src": "7487:16:43",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "7498:1:43",
																		"nodeType": "YulIdentifier",
																		"src": "7498:1:43"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "7501:1:43",
																		"nodeType": "YulIdentifier",
																		"src": "7501:1:43"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7494:3:43",
																	"nodeType": "YulIdentifier",
																	"src": "7494:3:43"
																},
																"nativeSrc": "7494:9:43",
																"nodeType": "YulFunctionCall",
																"src": "7494:9:43"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "7487:3:43",
																	"nodeType": "YulIdentifier",
																	"src": "7487:3:43"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "7534:168:43",
																"nodeType": "YulBlock",
																"src": "7534:168:43",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "7555:1:43",
																					"nodeType": "YulLiteral",
																					"src": "7555:1:43",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "7558:77:43",
																					"nodeType": "YulLiteral",
																					"src": "7558:77:43",
																					"type": "",
																					"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "7548:6:43",
																				"nodeType": "YulIdentifier",
																				"src": "7548:6:43"
																			},
																			"nativeSrc": "7548:88:43",
																			"nodeType": "YulFunctionCall",
																			"src": "7548:88:43"
																		},
																		"nativeSrc": "7548:88:43",
																		"nodeType": "YulExpressionStatement",
																		"src": "7548:88:43"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "7656:1:43",
																					"nodeType": "YulLiteral",
																					"src": "7656:1:43",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "7659:4:43",
																					"nodeType": "YulLiteral",
																					"src": "7659:4:43",
																					"type": "",
																					"value": "0x11"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "7649:6:43",
																				"nodeType": "YulIdentifier",
																				"src": "7649:6:43"
																			},
																			"nativeSrc": "7649:15:43",
																			"nodeType": "YulFunctionCall",
																			"src": "7649:15:43"
																		},
																		"nativeSrc": "7649:15:43",
																		"nodeType": "YulExpressionStatement",
																		"src": "7649:15:43"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "7684:1:43",
																					"nodeType": "YulLiteral",
																					"src": "7684:1:43",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "7687:4:43",
																					"nodeType": "YulLiteral",
																					"src": "7687:4:43",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "7677:6:43",
																				"nodeType": "YulIdentifier",
																				"src": "7677:6:43"
																			},
																			"nativeSrc": "7677:15:43",
																			"nodeType": "YulFunctionCall",
																			"src": "7677:15:43"
																		},
																		"nativeSrc": "7677:15:43",
																		"nodeType": "YulExpressionStatement",
																		"src": "7677:15:43"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "7518:1:43",
																		"nodeType": "YulIdentifier",
																		"src": "7518:1:43"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "7521:3:43",
																		"nodeType": "YulIdentifier",
																		"src": "7521:3:43"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "7515:2:43",
																	"nodeType": "YulIdentifier",
																	"src": "7515:2:43"
																},
																"nativeSrc": "7515:10:43",
																"nodeType": "YulFunctionCall",
																"src": "7515:10:43"
															},
															"nativeSrc": "7512:190:43",
															"nodeType": "YulIf",
															"src": "7512:190:43"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "7429:279:43",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "7460:1:43",
														"nodeType": "YulTypedName",
														"src": "7460:1:43",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "7463:1:43",
														"nodeType": "YulTypedName",
														"src": "7463:1:43",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "7469:3:43",
														"nodeType": "YulTypedName",
														"src": "7469:3:43",
														"type": ""
													}
												],
												"src": "7429:279:43"
											},
											{
												"body": {
													"nativeSrc": "7882:214:43",
													"nodeType": "YulBlock",
													"src": "7882:214:43",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7899:9:43",
																		"nodeType": "YulIdentifier",
																		"src": "7899:9:43"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7910:2:43",
																		"nodeType": "YulLiteral",
																		"src": "7910:2:43",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7892:6:43",
																	"nodeType": "YulIdentifier",
																	"src": "7892:6:43"
																},
																"nativeSrc": "7892:21:43",
																"nodeType": "YulFunctionCall",
																"src": "7892:21:43"
															},
															"nativeSrc": "7892:21:43",
															"nodeType": "YulExpressionStatement",
															"src": "7892:21:43"
														},
														{
															"nativeSrc": "7922:59:43",
															"nodeType": "YulVariableDeclaration",
															"src": "7922:59:43",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "7954:6:43",
																		"nodeType": "YulIdentifier",
																		"src": "7954:6:43"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7966:9:43",
																				"nodeType": "YulIdentifier",
																				"src": "7966:9:43"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7977:2:43",
																				"nodeType": "YulLiteral",
																				"src": "7977:2:43",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7962:3:43",
																			"nodeType": "YulIdentifier",
																			"src": "7962:3:43"
																		},
																		"nativeSrc": "7962:18:43",
																		"nodeType": "YulFunctionCall",
																		"src": "7962:18:43"
																	}
																],
																"functionName": {
																	"name": "abi_encode_string",
																	"nativeSrc": "7936:17:43",
																	"nodeType": "YulIdentifier",
																	"src": "7936:17:43"
																},
																"nativeSrc": "7936:45:43",
																"nodeType": "YulFunctionCall",
																"src": "7936:45:43"
															},
															"variables": [
																{
																	"name": "tail_1",
																	"nativeSrc": "7926:6:43",
																	"nodeType": "YulTypedName",
																	"src": "7926:6:43",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8001:9:43",
																				"nodeType": "YulIdentifier",
																				"src": "8001:9:43"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8012:2:43",
																				"nodeType": "YulLiteral",
																				"src": "8012:2:43",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7997:3:43",
																			"nodeType": "YulIdentifier",
																			"src": "7997:3:43"
																		},
																		"nativeSrc": "7997:18:43",
																		"nodeType": "YulFunctionCall",
																		"src": "7997:18:43"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail_1",
																				"nativeSrc": "8021:6:43",
																				"nodeType": "YulIdentifier",
																				"src": "8021:6:43"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "8029:9:43",
																				"nodeType": "YulIdentifier",
																				"src": "8029:9:43"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "8017:3:43",
																			"nodeType": "YulIdentifier",
																			"src": "8017:3:43"
																		},
																		"nativeSrc": "8017:22:43",
																		"nodeType": "YulFunctionCall",
																		"src": "8017:22:43"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7990:6:43",
																	"nodeType": "YulIdentifier",
																	"src": "7990:6:43"
																},
																"nativeSrc": "7990:50:43",
																"nodeType": "YulFunctionCall",
																"src": "7990:50:43"
															},
															"nativeSrc": "7990:50:43",
															"nodeType": "YulExpressionStatement",
															"src": "7990:50:43"
														},
														{
															"nativeSrc": "8049:41:43",
															"nodeType": "YulAssignment",
															"src": "8049:41:43",
															"value": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "8075:6:43",
																		"nodeType": "YulIdentifier",
																		"src": "8075:6:43"
																	},
																	{
																		"name": "tail_1",
																		"nativeSrc": "8083:6:43",
																		"nodeType": "YulIdentifier",
																		"src": "8083:6:43"
																	}
																],
																"functionName": {
																	"name": "abi_encode_string",
																	"nativeSrc": "8057:17:43",
																	"nodeType": "YulIdentifier",
																	"src": "8057:17:43"
																},
																"nativeSrc": "8057:33:43",
																"nodeType": "YulFunctionCall",
																"src": "8057:33:43"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8049:4:43",
																	"nodeType": "YulIdentifier",
																	"src": "8049:4:43"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "7713:383:43",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7843:9:43",
														"nodeType": "YulTypedName",
														"src": "7843:9:43",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "7854:6:43",
														"nodeType": "YulTypedName",
														"src": "7854:6:43",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "7862:6:43",
														"nodeType": "YulTypedName",
														"src": "7862:6:43",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "7873:4:43",
														"nodeType": "YulTypedName",
														"src": "7873:4:43",
														"type": ""
													}
												],
												"src": "7713:383:43"
											},
											{
												"body": {
													"nativeSrc": "8198:1330:43",
													"nodeType": "YulBlock",
													"src": "8198:1330:43",
													"statements": [
														{
															"body": {
																"nativeSrc": "8225:9:43",
																"nodeType": "YulBlock",
																"src": "8225:9:43",
																"statements": [
																	{
																		"nativeSrc": "8227:5:43",
																		"nodeType": "YulLeave",
																		"src": "8227:5:43"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "8214:4:43",
																		"nodeType": "YulIdentifier",
																		"src": "8214:4:43"
																	},
																	{
																		"name": "src",
																		"nativeSrc": "8220:3:43",
																		"nodeType": "YulIdentifier",
																		"src": "8220:3:43"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "8211:2:43",
																	"nodeType": "YulIdentifier",
																	"src": "8211:2:43"
																},
																"nativeSrc": "8211:13:43",
																"nodeType": "YulFunctionCall",
																"src": "8211:13:43"
															},
															"nativeSrc": "8208:26:43",
															"nodeType": "YulIf",
															"src": "8208:26:43"
														},
														{
															"nativeSrc": "8243:51:43",
															"nodeType": "YulVariableDeclaration",
															"src": "8243:51:43",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "src",
																				"nativeSrc": "8289:3:43",
																				"nodeType": "YulIdentifier",
																				"src": "8289:3:43"
																			}
																		],
																		"functionName": {
																			"name": "sload",
																			"nativeSrc": "8283:5:43",
																			"nodeType": "YulIdentifier",
																			"src": "8283:5:43"
																		},
																		"nativeSrc": "8283:10:43",
																		"nodeType": "YulFunctionCall",
																		"src": "8283:10:43"
																	}
																],
																"functionName": {
																	"name": "extract_byte_array_length",
																	"nativeSrc": "8257:25:43",
																	"nodeType": "YulIdentifier",
																	"src": "8257:25:43"
																},
																"nativeSrc": "8257:37:43",
																"nodeType": "YulFunctionCall",
																"src": "8257:37:43"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nativeSrc": "8247:6:43",
																	"nodeType": "YulTypedName",
																	"src": "8247:6:43",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "8337:22:43",
																"nodeType": "YulBlock",
																"src": "8337:22:43",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "8339:16:43",
																				"nodeType": "YulIdentifier",
																				"src": "8339:16:43"
																			},
																			"nativeSrc": "8339:18:43",
																			"nodeType": "YulFunctionCall",
																			"src": "8339:18:43"
																		},
																		"nativeSrc": "8339:18:43",
																		"nodeType": "YulExpressionStatement",
																		"src": "8339:18:43"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "8309:6:43",
																		"nodeType": "YulIdentifier",
																		"src": "8309:6:43"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8317:18:43",
																		"nodeType": "YulLiteral",
																		"src": "8317:18:43",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "8306:2:43",
																	"nodeType": "YulIdentifier",
																	"src": "8306:2:43"
																},
																"nativeSrc": "8306:30:43",
																"nodeType": "YulFunctionCall",
																"src": "8306:30:43"
															},
															"nativeSrc": "8303:56:43",
															"nodeType": "YulIf",
															"src": "8303:56:43"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "8412:4:43",
																		"nodeType": "YulIdentifier",
																		"src": "8412:4:43"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nativeSrc": "8450:4:43",
																						"nodeType": "YulIdentifier",
																						"src": "8450:4:43"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nativeSrc": "8444:5:43",
																					"nodeType": "YulIdentifier",
																					"src": "8444:5:43"
																				},
																				"nativeSrc": "8444:11:43",
																				"nodeType": "YulFunctionCall",
																				"src": "8444:11:43"
																			}
																		],
																		"functionName": {
																			"name": "extract_byte_array_length",
																			"nativeSrc": "8418:25:43",
																			"nodeType": "YulIdentifier",
																			"src": "8418:25:43"
																		},
																		"nativeSrc": "8418:38:43",
																		"nodeType": "YulFunctionCall",
																		"src": "8418:38:43"
																	},
																	{
																		"name": "newLen",
																		"nativeSrc": "8458:6:43",
																		"nodeType": "YulIdentifier",
																		"src": "8458:6:43"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_string_storage",
																	"nativeSrc": "8368:43:43",
																	"nodeType": "YulIdentifier",
																	"src": "8368:43:43"
																},
																"nativeSrc": "8368:97:43",
																"nodeType": "YulFunctionCall",
																"src": "8368:97:43"
															},
															"nativeSrc": "8368:97:43",
															"nodeType": "YulExpressionStatement",
															"src": "8368:97:43"
														},
														{
															"nativeSrc": "8474:18:43",
															"nodeType": "YulVariableDeclaration",
															"src": "8474:18:43",
															"value": {
																"kind": "number",
																"nativeSrc": "8491:1:43",
																"nodeType": "YulLiteral",
																"src": "8491:1:43",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "8478:9:43",
																	"nodeType": "YulTypedName",
																	"src": "8478:9:43",
																	"type": ""
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "8538:733:43",
																		"nodeType": "YulBlock",
																		"src": "8538:733:43",
																		"statements": [
																			{
																				"nativeSrc": "8552:35:43",
																				"nodeType": "YulVariableDeclaration",
																				"src": "8552:35:43",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nativeSrc": "8571:6:43",
																							"nodeType": "YulIdentifier",
																							"src": "8571:6:43"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nativeSrc": "8583:2:43",
																									"nodeType": "YulLiteral",
																									"src": "8583:2:43",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nativeSrc": "8579:3:43",
																								"nodeType": "YulIdentifier",
																								"src": "8579:3:43"
																							},
																							"nativeSrc": "8579:7:43",
																							"nodeType": "YulFunctionCall",
																							"src": "8579:7:43"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nativeSrc": "8567:3:43",
																						"nodeType": "YulIdentifier",
																						"src": "8567:3:43"
																					},
																					"nativeSrc": "8567:20:43",
																					"nodeType": "YulFunctionCall",
																					"src": "8567:20:43"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nativeSrc": "8556:7:43",
																						"nodeType": "YulTypedName",
																						"src": "8556:7:43",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "8600:47:43",
																				"nodeType": "YulVariableDeclaration",
																				"src": "8600:47:43",
																				"value": {
																					"arguments": [
																						{
																							"name": "src",
																							"nativeSrc": "8643:3:43",
																							"nodeType": "YulIdentifier",
																							"src": "8643:3:43"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_string_storage",
																						"nativeSrc": "8613:29:43",
																						"nodeType": "YulIdentifier",
																						"src": "8613:29:43"
																					},
																					"nativeSrc": "8613:34:43",
																					"nodeType": "YulFunctionCall",
																					"src": "8613:34:43"
																				},
																				"variables": [
																					{
																						"name": "src_1",
																						"nativeSrc": "8604:5:43",
																						"nodeType": "YulTypedName",
																						"src": "8604:5:43",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "8660:49:43",
																				"nodeType": "YulVariableDeclaration",
																				"src": "8660:49:43",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "8704:4:43",
																							"nodeType": "YulIdentifier",
																							"src": "8704:4:43"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_string_storage",
																						"nativeSrc": "8674:29:43",
																						"nodeType": "YulIdentifier",
																						"src": "8674:29:43"
																					},
																					"nativeSrc": "8674:35:43",
																					"nodeType": "YulFunctionCall",
																					"src": "8674:35:43"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nativeSrc": "8664:6:43",
																						"nodeType": "YulTypedName",
																						"src": "8664:6:43",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "8722:10:43",
																				"nodeType": "YulVariableDeclaration",
																				"src": "8722:10:43",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "8731:1:43",
																					"nodeType": "YulLiteral",
																					"src": "8731:1:43",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nativeSrc": "8726:1:43",
																						"nodeType": "YulTypedName",
																						"src": "8726:1:43",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "8802:194:43",
																					"nodeType": "YulBlock",
																					"src": "8802:194:43",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "8827:6:43",
																										"nodeType": "YulIdentifier",
																										"src": "8827:6:43"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src_1",
																														"nativeSrc": "8845:5:43",
																														"nodeType": "YulIdentifier",
																														"src": "8845:5:43"
																													},
																													{
																														"name": "srcOffset",
																														"nativeSrc": "8852:9:43",
																														"nodeType": "YulIdentifier",
																														"src": "8852:9:43"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nativeSrc": "8841:3:43",
																													"nodeType": "YulIdentifier",
																													"src": "8841:3:43"
																												},
																												"nativeSrc": "8841:21:43",
																												"nodeType": "YulFunctionCall",
																												"src": "8841:21:43"
																											}
																										],
																										"functionName": {
																											"name": "sload",
																											"nativeSrc": "8835:5:43",
																											"nodeType": "YulIdentifier",
																											"src": "8835:5:43"
																										},
																										"nativeSrc": "8835:28:43",
																										"nodeType": "YulFunctionCall",
																										"src": "8835:28:43"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "8820:6:43",
																									"nodeType": "YulIdentifier",
																									"src": "8820:6:43"
																								},
																								"nativeSrc": "8820:44:43",
																								"nodeType": "YulFunctionCall",
																								"src": "8820:44:43"
																							},
																							"nativeSrc": "8820:44:43",
																							"nodeType": "YulExpressionStatement",
																							"src": "8820:44:43"
																						},
																						{
																							"nativeSrc": "8881:11:43",
																							"nodeType": "YulVariableDeclaration",
																							"src": "8881:11:43",
																							"value": {
																								"kind": "number",
																								"nativeSrc": "8891:1:43",
																								"nodeType": "YulLiteral",
																								"src": "8891:1:43",
																								"type": "",
																								"value": "1"
																							},
																							"variables": [
																								{
																									"name": "_1",
																									"nativeSrc": "8885:2:43",
																									"nodeType": "YulTypedName",
																									"src": "8885:2:43",
																									"type": ""
																								}
																							]
																						},
																						{
																							"nativeSrc": "8909:25:43",
																							"nodeType": "YulAssignment",
																							"src": "8909:25:43",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "8923:6:43",
																										"nodeType": "YulIdentifier",
																										"src": "8923:6:43"
																									},
																									{
																										"name": "_1",
																										"nativeSrc": "8931:2:43",
																										"nodeType": "YulIdentifier",
																										"src": "8931:2:43"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "8919:3:43",
																									"nodeType": "YulIdentifier",
																									"src": "8919:3:43"
																								},
																								"nativeSrc": "8919:15:43",
																								"nodeType": "YulFunctionCall",
																								"src": "8919:15:43"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nativeSrc": "8909:6:43",
																									"nodeType": "YulIdentifier",
																									"src": "8909:6:43"
																								}
																							]
																						},
																						{
																							"nativeSrc": "8951:31:43",
																							"nodeType": "YulAssignment",
																							"src": "8951:31:43",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nativeSrc": "8968:9:43",
																										"nodeType": "YulIdentifier",
																										"src": "8968:9:43"
																									},
																									{
																										"name": "_1",
																										"nativeSrc": "8979:2:43",
																										"nodeType": "YulIdentifier",
																										"src": "8979:2:43"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "8964:3:43",
																									"nodeType": "YulIdentifier",
																									"src": "8964:3:43"
																								},
																								"nativeSrc": "8964:18:43",
																								"nodeType": "YulFunctionCall",
																								"src": "8964:18:43"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nativeSrc": "8951:9:43",
																									"nodeType": "YulIdentifier",
																									"src": "8951:9:43"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nativeSrc": "8756:1:43",
																							"nodeType": "YulIdentifier",
																							"src": "8756:1:43"
																						},
																						{
																							"name": "loopEnd",
																							"nativeSrc": "8759:7:43",
																							"nodeType": "YulIdentifier",
																							"src": "8759:7:43"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "8753:2:43",
																						"nodeType": "YulIdentifier",
																						"src": "8753:2:43"
																					},
																					"nativeSrc": "8753:14:43",
																					"nodeType": "YulFunctionCall",
																					"src": "8753:14:43"
																				},
																				"nativeSrc": "8745:251:43",
																				"nodeType": "YulForLoop",
																				"post": {
																					"nativeSrc": "8768:21:43",
																					"nodeType": "YulBlock",
																					"src": "8768:21:43",
																					"statements": [
																						{
																							"nativeSrc": "8770:17:43",
																							"nodeType": "YulAssignment",
																							"src": "8770:17:43",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nativeSrc": "8779:1:43",
																										"nodeType": "YulIdentifier",
																										"src": "8779:1:43"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "8782:4:43",
																										"nodeType": "YulLiteral",
																										"src": "8782:4:43",
																										"type": "",
																										"value": "0x20"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "8775:3:43",
																									"nodeType": "YulIdentifier",
																									"src": "8775:3:43"
																								},
																								"nativeSrc": "8775:12:43",
																								"nodeType": "YulFunctionCall",
																								"src": "8775:12:43"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nativeSrc": "8770:1:43",
																									"nodeType": "YulIdentifier",
																									"src": "8770:1:43"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nativeSrc": "8749:3:43",
																					"nodeType": "YulBlock",
																					"src": "8749:3:43",
																					"statements": []
																				},
																				"src": "8745:251:43"
																			},
																			{
																				"body": {
																					"nativeSrc": "9044:168:43",
																					"nodeType": "YulBlock",
																					"src": "9044:168:43",
																					"statements": [
																						{
																							"nativeSrc": "9062:45:43",
																							"nodeType": "YulVariableDeclaration",
																							"src": "9062:45:43",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src_1",
																												"nativeSrc": "9089:5:43",
																												"nodeType": "YulIdentifier",
																												"src": "9089:5:43"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "9096:9:43",
																												"nodeType": "YulIdentifier",
																												"src": "9096:9:43"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "9085:3:43",
																											"nodeType": "YulIdentifier",
																											"src": "9085:3:43"
																										},
																										"nativeSrc": "9085:21:43",
																										"nodeType": "YulFunctionCall",
																										"src": "9085:21:43"
																									}
																								],
																								"functionName": {
																									"name": "sload",
																									"nativeSrc": "9079:5:43",
																									"nodeType": "YulIdentifier",
																									"src": "9079:5:43"
																								},
																								"nativeSrc": "9079:28:43",
																								"nodeType": "YulFunctionCall",
																								"src": "9079:28:43"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nativeSrc": "9066:9:43",
																									"nodeType": "YulTypedName",
																									"src": "9066:9:43",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "9131:6:43",
																										"nodeType": "YulIdentifier",
																										"src": "9131:6:43"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nativeSrc": "9143:9:43",
																												"nodeType": "YulIdentifier",
																												"src": "9143:9:43"
																											},
																											{
																												"arguments": [
																													{
																														"arguments": [
																															{
																																"arguments": [
																																	{
																																		"arguments": [
																																			{
																																				"kind": "number",
																																				"nativeSrc": "9170:1:43",
																																				"nodeType": "YulLiteral",
																																				"src": "9170:1:43",
																																				"type": "",
																																				"value": "3"
																																			},
																																			{
																																				"name": "newLen",
																																				"nativeSrc": "9173:6:43",
																																				"nodeType": "YulIdentifier",
																																				"src": "9173:6:43"
																																			}
																																		],
																																		"functionName": {
																																			"name": "shl",
																																			"nativeSrc": "9166:3:43",
																																			"nodeType": "YulIdentifier",
																																			"src": "9166:3:43"
																																		},
																																		"nativeSrc": "9166:14:43",
																																		"nodeType": "YulFunctionCall",
																																		"src": "9166:14:43"
																																	},
																																	{
																																		"kind": "number",
																																		"nativeSrc": "9182:3:43",
																																		"nodeType": "YulLiteral",
																																		"src": "9182:3:43",
																																		"type": "",
																																		"value": "248"
																																	}
																																],
																																"functionName": {
																																	"name": "and",
																																	"nativeSrc": "9162:3:43",
																																	"nodeType": "YulIdentifier",
																																	"src": "9162:3:43"
																																},
																																"nativeSrc": "9162:24:43",
																																"nodeType": "YulFunctionCall",
																																"src": "9162:24:43"
																															},
																															{
																																"arguments": [
																																	{
																																		"kind": "number",
																																		"nativeSrc": "9192:1:43",
																																		"nodeType": "YulLiteral",
																																		"src": "9192:1:43",
																																		"type": "",
																																		"value": "0"
																																	}
																																],
																																"functionName": {
																																	"name": "not",
																																	"nativeSrc": "9188:3:43",
																																	"nodeType": "YulIdentifier",
																																	"src": "9188:3:43"
																																},
																																"nativeSrc": "9188:6:43",
																																"nodeType": "YulFunctionCall",
																																"src": "9188:6:43"
																															}
																														],
																														"functionName": {
																															"name": "shr",
																															"nativeSrc": "9158:3:43",
																															"nodeType": "YulIdentifier",
																															"src": "9158:3:43"
																														},
																														"nativeSrc": "9158:37:43",
																														"nodeType": "YulFunctionCall",
																														"src": "9158:37:43"
																													}
																												],
																												"functionName": {
																													"name": "not",
																													"nativeSrc": "9154:3:43",
																													"nodeType": "YulIdentifier",
																													"src": "9154:3:43"
																												},
																												"nativeSrc": "9154:42:43",
																												"nodeType": "YulFunctionCall",
																												"src": "9154:42:43"
																											}
																										],
																										"functionName": {
																											"name": "and",
																											"nativeSrc": "9139:3:43",
																											"nodeType": "YulIdentifier",
																											"src": "9139:3:43"
																										},
																										"nativeSrc": "9139:58:43",
																										"nodeType": "YulFunctionCall",
																										"src": "9139:58:43"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "9124:6:43",
																									"nodeType": "YulIdentifier",
																									"src": "9124:6:43"
																								},
																								"nativeSrc": "9124:74:43",
																								"nodeType": "YulFunctionCall",
																								"src": "9124:74:43"
																							},
																							"nativeSrc": "9124:74:43",
																							"nodeType": "YulExpressionStatement",
																							"src": "9124:74:43"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nativeSrc": "9015:7:43",
																							"nodeType": "YulIdentifier",
																							"src": "9015:7:43"
																						},
																						{
																							"name": "newLen",
																							"nativeSrc": "9024:6:43",
																							"nodeType": "YulIdentifier",
																							"src": "9024:6:43"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "9012:2:43",
																						"nodeType": "YulIdentifier",
																						"src": "9012:2:43"
																					},
																					"nativeSrc": "9012:19:43",
																					"nodeType": "YulFunctionCall",
																					"src": "9012:19:43"
																				},
																				"nativeSrc": "9009:203:43",
																				"nodeType": "YulIf",
																				"src": "9009:203:43"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "9232:4:43",
																							"nodeType": "YulIdentifier",
																							"src": "9232:4:43"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"kind": "number",
																											"nativeSrc": "9246:1:43",
																											"nodeType": "YulLiteral",
																											"src": "9246:1:43",
																											"type": "",
																											"value": "1"
																										},
																										{
																											"name": "newLen",
																											"nativeSrc": "9249:6:43",
																											"nodeType": "YulIdentifier",
																											"src": "9249:6:43"
																										}
																									],
																									"functionName": {
																										"name": "shl",
																										"nativeSrc": "9242:3:43",
																										"nodeType": "YulIdentifier",
																										"src": "9242:3:43"
																									},
																									"nativeSrc": "9242:14:43",
																									"nodeType": "YulFunctionCall",
																									"src": "9242:14:43"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "9258:1:43",
																									"nodeType": "YulLiteral",
																									"src": "9258:1:43",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "9238:3:43",
																								"nodeType": "YulIdentifier",
																								"src": "9238:3:43"
																							},
																							"nativeSrc": "9238:22:43",
																							"nodeType": "YulFunctionCall",
																							"src": "9238:22:43"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "9225:6:43",
																						"nodeType": "YulIdentifier",
																						"src": "9225:6:43"
																					},
																					"nativeSrc": "9225:36:43",
																					"nodeType": "YulFunctionCall",
																					"src": "9225:36:43"
																				},
																				"nativeSrc": "9225:36:43",
																				"nodeType": "YulExpressionStatement",
																				"src": "9225:36:43"
																			}
																		]
																	},
																	"nativeSrc": "8531:740:43",
																	"nodeType": "YulCase",
																	"src": "8531:740:43",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "8536:1:43",
																		"nodeType": "YulLiteral",
																		"src": "8536:1:43",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "9288:234:43",
																		"nodeType": "YulBlock",
																		"src": "9288:234:43",
																		"statements": [
																			{
																				"nativeSrc": "9302:14:43",
																				"nodeType": "YulVariableDeclaration",
																				"src": "9302:14:43",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "9315:1:43",
																					"nodeType": "YulLiteral",
																					"src": "9315:1:43",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nativeSrc": "9306:5:43",
																						"nodeType": "YulTypedName",
																						"src": "9306:5:43",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "9351:67:43",
																					"nodeType": "YulBlock",
																					"src": "9351:67:43",
																					"statements": [
																						{
																							"nativeSrc": "9369:35:43",
																							"nodeType": "YulAssignment",
																							"src": "9369:35:43",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "9388:3:43",
																												"nodeType": "YulIdentifier",
																												"src": "9388:3:43"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "9393:9:43",
																												"nodeType": "YulIdentifier",
																												"src": "9393:9:43"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "9384:3:43",
																											"nodeType": "YulIdentifier",
																											"src": "9384:3:43"
																										},
																										"nativeSrc": "9384:19:43",
																										"nodeType": "YulFunctionCall",
																										"src": "9384:19:43"
																									}
																								],
																								"functionName": {
																									"name": "sload",
																									"nativeSrc": "9378:5:43",
																									"nodeType": "YulIdentifier",
																									"src": "9378:5:43"
																								},
																								"nativeSrc": "9378:26:43",
																								"nodeType": "YulFunctionCall",
																								"src": "9378:26:43"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nativeSrc": "9369:5:43",
																									"nodeType": "YulIdentifier",
																									"src": "9369:5:43"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nativeSrc": "9332:6:43",
																					"nodeType": "YulIdentifier",
																					"src": "9332:6:43"
																				},
																				"nativeSrc": "9329:89:43",
																				"nodeType": "YulIf",
																				"src": "9329:89:43"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "9438:4:43",
																							"nodeType": "YulIdentifier",
																							"src": "9438:4:43"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nativeSrc": "9497:5:43",
																									"nodeType": "YulIdentifier",
																									"src": "9497:5:43"
																								},
																								{
																									"name": "newLen",
																									"nativeSrc": "9504:6:43",
																									"nodeType": "YulIdentifier",
																									"src": "9504:6:43"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nativeSrc": "9444:52:43",
																								"nodeType": "YulIdentifier",
																								"src": "9444:52:43"
																							},
																							"nativeSrc": "9444:67:43",
																							"nodeType": "YulFunctionCall",
																							"src": "9444:67:43"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "9431:6:43",
																						"nodeType": "YulIdentifier",
																						"src": "9431:6:43"
																					},
																					"nativeSrc": "9431:81:43",
																					"nodeType": "YulFunctionCall",
																					"src": "9431:81:43"
																				},
																				"nativeSrc": "9431:81:43",
																				"nodeType": "YulExpressionStatement",
																				"src": "9431:81:43"
																			}
																		]
																	},
																	"nativeSrc": "9280:242:43",
																	"nodeType": "YulCase",
																	"src": "9280:242:43",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "8511:6:43",
																		"nodeType": "YulIdentifier",
																		"src": "8511:6:43"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8519:2:43",
																		"nodeType": "YulLiteral",
																		"src": "8519:2:43",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "8508:2:43",
																	"nodeType": "YulIdentifier",
																	"src": "8508:2:43"
																},
																"nativeSrc": "8508:14:43",
																"nodeType": "YulFunctionCall",
																"src": "8508:14:43"
															},
															"nativeSrc": "8501:1021:43",
															"nodeType": "YulSwitch",
															"src": "8501:1021:43"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_storage_ptr_to_t_string_storage",
												"nativeSrc": "8101:1427:43",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "8183:4:43",
														"nodeType": "YulTypedName",
														"src": "8183:4:43",
														"type": ""
													},
													{
														"name": "src",
														"nativeSrc": "8189:3:43",
														"nodeType": "YulTypedName",
														"src": "8189:3:43",
														"type": ""
													}
												],
												"src": "8101:1427:43"
											},
											{
												"body": {
													"nativeSrc": "9707:177:43",
													"nodeType": "YulBlock",
													"src": "9707:177:43",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9724:9:43",
																		"nodeType": "YulIdentifier",
																		"src": "9724:9:43"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9735:2:43",
																		"nodeType": "YulLiteral",
																		"src": "9735:2:43",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9717:6:43",
																	"nodeType": "YulIdentifier",
																	"src": "9717:6:43"
																},
																"nativeSrc": "9717:21:43",
																"nodeType": "YulFunctionCall",
																"src": "9717:21:43"
															},
															"nativeSrc": "9717:21:43",
															"nodeType": "YulExpressionStatement",
															"src": "9717:21:43"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9758:9:43",
																				"nodeType": "YulIdentifier",
																				"src": "9758:9:43"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9769:2:43",
																				"nodeType": "YulLiteral",
																				"src": "9769:2:43",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9754:3:43",
																			"nodeType": "YulIdentifier",
																			"src": "9754:3:43"
																		},
																		"nativeSrc": "9754:18:43",
																		"nodeType": "YulFunctionCall",
																		"src": "9754:18:43"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9774:2:43",
																		"nodeType": "YulLiteral",
																		"src": "9774:2:43",
																		"type": "",
																		"value": "27"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9747:6:43",
																	"nodeType": "YulIdentifier",
																	"src": "9747:6:43"
																},
																"nativeSrc": "9747:30:43",
																"nodeType": "YulFunctionCall",
																"src": "9747:30:43"
															},
															"nativeSrc": "9747:30:43",
															"nodeType": "YulExpressionStatement",
															"src": "9747:30:43"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9797:9:43",
																				"nodeType": "YulIdentifier",
																				"src": "9797:9:43"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9808:2:43",
																				"nodeType": "YulLiteral",
																				"src": "9808:2:43",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9793:3:43",
																			"nodeType": "YulIdentifier",
																			"src": "9793:3:43"
																		},
																		"nativeSrc": "9793:18:43",
																		"nodeType": "YulFunctionCall",
																		"src": "9793:18:43"
																	},
																	{
																		"hexValue": "43616e6469646174652068617320616c726561647920766f746564",
																		"kind": "string",
																		"nativeSrc": "9813:29:43",
																		"nodeType": "YulLiteral",
																		"src": "9813:29:43",
																		"type": "",
																		"value": "Candidate has already voted"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9786:6:43",
																	"nodeType": "YulIdentifier",
																	"src": "9786:6:43"
																},
																"nativeSrc": "9786:57:43",
																"nodeType": "YulFunctionCall",
																"src": "9786:57:43"
															},
															"nativeSrc": "9786:57:43",
															"nodeType": "YulExpressionStatement",
															"src": "9786:57:43"
														},
														{
															"nativeSrc": "9852:26:43",
															"nodeType": "YulAssignment",
															"src": "9852:26:43",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9864:9:43",
																		"nodeType": "YulIdentifier",
																		"src": "9864:9:43"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9875:2:43",
																		"nodeType": "YulLiteral",
																		"src": "9875:2:43",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9860:3:43",
																	"nodeType": "YulIdentifier",
																	"src": "9860:3:43"
																},
																"nativeSrc": "9860:18:43",
																"nodeType": "YulFunctionCall",
																"src": "9860:18:43"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9852:4:43",
																	"nodeType": "YulIdentifier",
																	"src": "9852:4:43"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_90aca1dee7cbf87125be2e3cfb599559c335409d533b41e2526632e81f0ce4b8__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "9533:351:43",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9684:9:43",
														"nodeType": "YulTypedName",
														"src": "9684:9:43",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "9698:4:43",
														"nodeType": "YulTypedName",
														"src": "9698:4:43",
														"type": ""
													}
												],
												"src": "9533:351:43"
											},
											{
												"body": {
													"nativeSrc": "10063:233:43",
													"nodeType": "YulBlock",
													"src": "10063:233:43",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "10080:9:43",
																		"nodeType": "YulIdentifier",
																		"src": "10080:9:43"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10091:2:43",
																		"nodeType": "YulLiteral",
																		"src": "10091:2:43",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10073:6:43",
																	"nodeType": "YulIdentifier",
																	"src": "10073:6:43"
																},
																"nativeSrc": "10073:21:43",
																"nodeType": "YulFunctionCall",
																"src": "10073:21:43"
															},
															"nativeSrc": "10073:21:43",
															"nodeType": "YulExpressionStatement",
															"src": "10073:21:43"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10114:9:43",
																				"nodeType": "YulIdentifier",
																				"src": "10114:9:43"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10125:2:43",
																				"nodeType": "YulLiteral",
																				"src": "10125:2:43",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10110:3:43",
																			"nodeType": "YulIdentifier",
																			"src": "10110:3:43"
																		},
																		"nativeSrc": "10110:18:43",
																		"nodeType": "YulFunctionCall",
																		"src": "10110:18:43"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10130:2:43",
																		"nodeType": "YulLiteral",
																		"src": "10130:2:43",
																		"type": "",
																		"value": "43"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10103:6:43",
																	"nodeType": "YulIdentifier",
																	"src": "10103:6:43"
																},
																"nativeSrc": "10103:30:43",
																"nodeType": "YulFunctionCall",
																"src": "10103:30:43"
															},
															"nativeSrc": "10103:30:43",
															"nodeType": "YulExpressionStatement",
															"src": "10103:30:43"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10153:9:43",
																				"nodeType": "YulIdentifier",
																				"src": "10153:9:43"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10164:2:43",
																				"nodeType": "YulLiteral",
																				"src": "10164:2:43",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10149:3:43",
																			"nodeType": "YulIdentifier",
																			"src": "10149:3:43"
																		},
																		"nativeSrc": "10149:18:43",
																		"nodeType": "YulFunctionCall",
																		"src": "10149:18:43"
																	},
																	{
																		"hexValue": "54686572652063616e277420626520656c656374696f6e207769746820612073",
																		"kind": "string",
																		"nativeSrc": "10169:34:43",
																		"nodeType": "YulLiteral",
																		"src": "10169:34:43",
																		"type": "",
																		"value": "There can't be election with a s"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10142:6:43",
																	"nodeType": "YulIdentifier",
																	"src": "10142:6:43"
																},
																"nativeSrc": "10142:62:43",
																"nodeType": "YulFunctionCall",
																"src": "10142:62:43"
															},
															"nativeSrc": "10142:62:43",
															"nodeType": "YulExpressionStatement",
															"src": "10142:62:43"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10224:9:43",
																				"nodeType": "YulIdentifier",
																				"src": "10224:9:43"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10235:2:43",
																				"nodeType": "YulLiteral",
																				"src": "10235:2:43",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10220:3:43",
																			"nodeType": "YulIdentifier",
																			"src": "10220:3:43"
																		},
																		"nativeSrc": "10220:18:43",
																		"nodeType": "YulFunctionCall",
																		"src": "10220:18:43"
																	},
																	{
																		"hexValue": "696e676c65207061727479",
																		"kind": "string",
																		"nativeSrc": "10240:13:43",
																		"nodeType": "YulLiteral",
																		"src": "10240:13:43",
																		"type": "",
																		"value": "ingle party"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10213:6:43",
																	"nodeType": "YulIdentifier",
																	"src": "10213:6:43"
																},
																"nativeSrc": "10213:41:43",
																"nodeType": "YulFunctionCall",
																"src": "10213:41:43"
															},
															"nativeSrc": "10213:41:43",
															"nodeType": "YulExpressionStatement",
															"src": "10213:41:43"
														},
														{
															"nativeSrc": "10263:27:43",
															"nodeType": "YulAssignment",
															"src": "10263:27:43",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "10275:9:43",
																		"nodeType": "YulIdentifier",
																		"src": "10275:9:43"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10286:3:43",
																		"nodeType": "YulLiteral",
																		"src": "10286:3:43",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10271:3:43",
																	"nodeType": "YulIdentifier",
																	"src": "10271:3:43"
																},
																"nativeSrc": "10271:19:43",
																"nodeType": "YulFunctionCall",
																"src": "10271:19:43"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10263:4:43",
																	"nodeType": "YulIdentifier",
																	"src": "10263:4:43"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_8ae60eef87ea50e2dfeaf131b4cf93241d4a9ae442c59029b80566ca970d987e__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "9889:407:43",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "10040:9:43",
														"nodeType": "YulTypedName",
														"src": "10040:9:43",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "10054:4:43",
														"nodeType": "YulTypedName",
														"src": "10054:4:43",
														"type": ""
													}
												],
												"src": "9889:407:43"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function abi_decode_string(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        let _1 := calldataload(offset)\n        let _2 := 0xffffffffffffffff\n        if gt(_1, _2) { panic_error_0x41() }\n        let _3 := not(31)\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(and(add(_1, 0x1f), _3), 63), _3))\n        if or(gt(newFreePtr, _2), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        mstore(memPtr, _1)\n        if gt(add(add(offset, _1), 0x20), end) { revert(0, 0) }\n        calldatacopy(add(memPtr, 0x20), add(offset, 0x20), _1)\n        mstore(add(add(memPtr, _1), 0x20), 0)\n        array := memPtr\n    }\n    function abi_decode_tuple_t_string_memory_ptrt_uint256t_string_memory_ptr(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        let offset := calldataload(headStart)\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(0, 0) }\n        value0 := abi_decode_string(add(headStart, offset), dataEnd)\n        value1 := calldataload(add(headStart, 32))\n        let offset_1 := calldataload(add(headStart, 64))\n        if gt(offset_1, _1) { revert(0, 0) }\n        value2 := abi_decode_string(add(headStart, offset_1), dataEnd)\n    }\n    function abi_decode_tuple_t_bytes32(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffffffffffff))\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_encode_string(value, pos) -> end\n    {\n        let length := mload(value)\n        mstore(pos, length)\n        let i := 0\n        for { } lt(i, length) { i := add(i, 0x20) }\n        {\n            let _1 := 0x20\n            mstore(add(add(pos, i), _1), mload(add(add(value, i), _1)))\n        }\n        mstore(add(add(pos, length), 0x20), 0)\n        end := add(add(pos, and(add(length, 31), not(31))), 0x20)\n    }\n    function abi_encode_tuple_t_string_memory_ptr_t_bytes32_t_string_memory_ptr_t_uint256__to_t_string_memory_ptr_t_bytes32_t_string_memory_ptr_t_uint256__fromStack_reversed(headStart, value3, value2, value1, value0) -> tail\n    {\n        mstore(headStart, 128)\n        let tail_1 := abi_encode_string(value0, add(headStart, 128))\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), sub(tail_1, headStart))\n        tail := abi_encode_string(value2, tail_1)\n        mstore(add(headStart, 96), value3)\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        tail := abi_encode_string(value0, add(headStart, 32))\n    }\n    function abi_decode_tuple_t_addresst_uint256t_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        let value := calldataload(headStart)\n        if iszero(eq(value, and(value, 0xffffffffffffffffffffffffffffffffffffffff))) { revert(0, 0) }\n        value0 := value\n        value1 := calldataload(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n    }\n    function abi_encode_tuple_packed_t_uint256__to_t_uint256__nonPadded_inplace_fromStack_reversed(pos, value0) -> end\n    {\n        mstore(pos, value0)\n        end := add(pos, 32)\n    }\n    function abi_encode_tuple_t_stringliteral_2c187f4e0f6eb04cdbd9242393a666e35059a52e208c37195b601c63a6b61ec0__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"Candidate has already been regis\")\n        mstore(add(headStart, 96), \"tered\")\n        tail := add(headStart, 128)\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function array_dataslot_string_storage(ptr) -> data\n    {\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n    }\n    function clean_up_bytearray_end_slots_string_storage(array, len, startIndex)\n    {\n        if gt(len, 31)\n        {\n            mstore(0, array)\n            let data := keccak256(0, 0x20)\n            let deleteStart := add(data, shr(5, add(startIndex, 31)))\n            if lt(startIndex, 0x20) { deleteStart := data }\n            let _1 := add(data, shr(5, add(len, 31)))\n            let start := deleteStart\n            for { } lt(start, _1) { start := add(start, 1) }\n            { sstore(start, 0) }\n        }\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used\n    {\n        used := or(and(data, not(shr(shl(3, len), not(0)))), shl(1, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src)\n    {\n        let newLen := mload(src)\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n        clean_up_bytearray_end_slots_string_storage(slot, extract_byte_array_length(sload(slot)), newLen)\n        let srcOffset := 0\n        let srcOffset_1 := 0x20\n        srcOffset := 0x20\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(31))\n            let dstPtr := array_dataslot_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, srcOffset_1) }\n            {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, srcOffset_1)\n            }\n            if lt(loopEnd, newLen)\n            {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, and(lastValue, not(shr(and(shl(3, newLen), 248), not(0)))))\n            }\n            sstore(slot, add(shl(1, newLen), 1))\n        }\n        default {\n            let value := 0\n            if newLen\n            {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        sum := add(x, y)\n        if gt(x, sum)\n        {\n            mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n            mstore(4, 0x11)\n            revert(0, 0x24)\n        }\n    }\n    function abi_encode_tuple_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        mstore(headStart, 64)\n        let tail_1 := abi_encode_string(value0, add(headStart, 64))\n        mstore(add(headStart, 32), sub(tail_1, headStart))\n        tail := abi_encode_string(value1, tail_1)\n    }\n    function copy_byte_array_to_storage_from_t_string_storage_ptr_to_t_string_storage(slot, src)\n    {\n        if eq(slot, src) { leave }\n        let newLen := extract_byte_array_length(sload(src))\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n        clean_up_bytearray_end_slots_string_storage(slot, extract_byte_array_length(sload(slot)), newLen)\n        let srcOffset := 0\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(31))\n            let src_1 := array_dataslot_string_storage(src)\n            let dstPtr := array_dataslot_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) }\n            {\n                sstore(dstPtr, sload(add(src_1, srcOffset)))\n                let _1 := 1\n                dstPtr := add(dstPtr, _1)\n                srcOffset := add(srcOffset, _1)\n            }\n            if lt(loopEnd, newLen)\n            {\n                let lastValue := sload(add(src_1, srcOffset))\n                sstore(dstPtr, and(lastValue, not(shr(and(shl(3, newLen), 248), not(0)))))\n            }\n            sstore(slot, add(shl(1, newLen), 1))\n        }\n        default {\n            let value := 0\n            if newLen\n            {\n                value := sload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n    function abi_encode_tuple_t_stringliteral_90aca1dee7cbf87125be2e3cfb599559c335409d533b41e2526632e81f0ce4b8__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 27)\n        mstore(add(headStart, 64), \"Candidate has already voted\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_8ae60eef87ea50e2dfeaf131b4cf93241d4a9ae442c59029b80566ca970d987e__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 43)\n        mstore(add(headStart, 64), \"There can't be election with a s\")\n        mstore(add(headStart, 96), \"ingle party\")\n        tail := add(headStart, 128)\n    }\n}",
									"id": 43,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b50600436106100da575f3560e01c80636537214711610088578063b2fb8e3711610063578063b2fb8e3714610208578063c93346ab1461021b578063dfbf53ae1461022e578063e9d729ae14610236575f80fd5b806365372147146101be5780636b0eec1c146101d35780637a26dd31146101f5575f80fd5b80631e51c9ea116100b85780631e51c9ea146101415780634d50ba3a146101925780636247e5321461019b575f80fd5b80630500894d146100de57806313732d79146100fa5780631b4613cb1461010f575b5f80fd5b6100e760045481565b6040519081526020015b60405180910390f35b61010d6101083660046109b8565b610249565b005b61013161011d366004610a20565b60026020525f908152604090205460ff1681565b60405190151581526020016100f1565b61017361014f366004610a20565b5f60208190529081526040902080546001909101546001600160a01b039091169082565b604080516001600160a01b0390931683526020830191909152016100f1565b6100e760055481565b6101ae6101a9366004610a20565b6103e6565b6040516100f19493929190610a7a565b6101c6610519565b6040516100f19190610ab6565b6101316101e1366004610a20565b60036020525f908152604090205460ff1681565b61010d610203366004610acf565b61060c565b610131610216366004610a20565b6107e2565b610131610229366004610a20565b610825565b6101c6610868565b6101c6610244366004610a20565b6108f4565b5f8260405160200161025d91815260200190565b60408051601f1981840301815291815281516020928301205f818152600390935291205490915060ff16156102ff5760405162461bcd60e51b815260206004820152602560248201527f43616e6469646174652068617320616c7265616479206265656e20726567697360448201527f746572656400000000000000000000000000000000000000000000000000000060648201526084015b60405180910390fd5b6004545f8181526001602052604090206103198682610b90565b505f81815260016020819052604090912090810183905560020161033d8482610b90565b505f828152600360205260408120805460ff191660019081179091556006805491820181559091527ff652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d3f016103918482610b90565b506004546103a0906001610c50565b60045560405184907fdbbc48772584850c2086f66c22a3654c9e46524ff539fd9d72198d91cb7c13c0906103d79088908790610c75565b60405180910390a25050505050565b60016020525f908152604090208054819061040090610b0c565b80601f016020809104026020016040519081016040528092919081815260200182805461042c90610b0c565b80156104775780601f1061044e57610100808354040283529160200191610477565b820191905f5260205f20905b81548152906001019060200180831161045a57829003601f168201915b50505050509080600101549080600201805461049290610b0c565b80601f01602080910402602001604051908101604052809291908181526020018280546104be90610b0c565b80156105095780601f106104e057610100808354040283529160200191610509565b820191905f5260205f20905b8154815290600101906020018083116104ec57829003601f168201915b5050505050908060030154905084565b60605f805f5b600654811015610560575f81815260016020526040902060030154831015610558575f8181526001602052604090206003015492509050805b60010161051f565b505f81815260016020526040902060079061057b9082610ca2565b506007805461058990610b0c565b80601f01602080910402602001604051908101604052809291908181526020018280546105b590610b0c565b80156106005780601f106105d757610100808354040283529160200191610600565b820191905f5260205f20905b8154815290600101906020018083116105e357829003601f168201915b50505050509250505090565b60055461061a906001610c50565b60055560408051602080820185905282518083038201815291830183528151918101919091205f81815260029092529190205460ff161561069d5760405162461bcd60e51b815260206004820152601b60248201527f43616e6469646174652068617320616c726561647920766f746564000000000060448201526064016102f6565b600654600211156107165760405162461bcd60e51b815260206004820152602b60248201527f54686572652063616e277420626520656c656374696f6e20776974682061207360448201527f696e676c6520706172747900000000000000000000000000000000000000000060648201526084016102f6565b5f8181526020818152604080832080547fffffffffffffffffffffffff0000000000000000000000000000000000000000166001600160a01b038916178155600190810186905585845291829052822060030180549192909161077a908490610c50565b90915550505f81815260026020908152604091829020805460ff1916600117905581516001600160a01b038716815290810184905284917fcb87df07b1c304492bd875a5c8b98672eca500939412809ea229afef1d745188910160405180910390a250505050565b5f80826040516020016107f791815260200190565b60408051601f1981840301815291815281516020928301205f908152600390925290205460ff169392505050565b5f808260405160200161083a91815260200190565b60408051601f1981840301815291815281516020928301205f908152600290925290205460ff169392505050565b6007805461087590610b0c565b80601f01602080910402602001604051908101604052809291908181526020018280546108a190610b0c565b80156108ec5780601f106108c3576101008083540402835291602001916108ec565b820191905f5260205f20905b8154815290600101906020018083116108cf57829003601f168201915b505050505081565b60068181548110610903575f80fd5b905f5260205f20015f91509050805461087590610b0c565b634e487b7160e01b5f52604160045260245ffd5b5f82601f83011261093e575f80fd5b813567ffffffffffffffff808211156109595761095961091b565b604051601f8301601f19908116603f011681019082821181831017156109815761098161091b565b81604052838152866020858801011115610999575f80fd5b836020870160208301375f602085830101528094505050505092915050565b5f805f606084860312156109ca575f80fd5b833567ffffffffffffffff808211156109e1575f80fd5b6109ed8783880161092f565b9450602086013593506040860135915080821115610a09575f80fd5b50610a168682870161092f565b9150509250925092565b5f60208284031215610a30575f80fd5b5035919050565b5f81518084525f5b81811015610a5b57602081850181015186830182015201610a3f565b505f602082860101526020601f19601f83011685010191505092915050565b608081525f610a8c6080830187610a37565b8560208401528281036040840152610aa48186610a37565b91505082606083015295945050505050565b602081525f610ac86020830184610a37565b9392505050565b5f805f60608486031215610ae1575f80fd5b83356001600160a01b0381168114610af7575f80fd5b95602085013595506040909401359392505050565b600181811c90821680610b2057607f821691505b602082108103610b3e57634e487b7160e01b5f52602260045260245ffd5b50919050565b601f821115610b8b57805f5260205f20601f840160051c81016020851015610b695750805b601f840160051c820191505b81811015610b88575f8155600101610b75565b50505b505050565b815167ffffffffffffffff811115610baa57610baa61091b565b610bbe81610bb88454610b0c565b84610b44565b602080601f831160018114610bf1575f8415610bda5750858301515b5f19600386901b1c1916600185901b178555610c48565b5f85815260208120601f198616915b82811015610c1f57888601518255948401946001909101908401610c00565b5085821015610c3c57878501515f19600388901b60f8161c191681555b505060018460011b0185555b505050505050565b80820180821115610c6f57634e487b7160e01b5f52601160045260245ffd5b92915050565b604081525f610c876040830185610a37565b8281036020840152610c998185610a37565b95945050505050565b818103610cad575050565b610cb78254610b0c565b67ffffffffffffffff811115610ccf57610ccf61091b565b610cdd81610bb88454610b0c565b5f601f821160018114610d0e575f8315610cf75750848201545b5f19600385901b1c1916600184901b178455610b88565b5f8581526020808220868352908220601f198616925b83811015610d445782860154825560019586019590910190602001610d24565b5085831015610d6157818501545f19600388901b60f8161c191681555b5050505050600190811b0190555056fea26469706673582212208f8c9f7f3806508a8613e313c7778581877dea0970e8661526a966c86539482a64736f6c63430008180033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xDA JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x65372147 GT PUSH2 0x88 JUMPI DUP1 PUSH4 0xB2FB8E37 GT PUSH2 0x63 JUMPI DUP1 PUSH4 0xB2FB8E37 EQ PUSH2 0x208 JUMPI DUP1 PUSH4 0xC93346AB EQ PUSH2 0x21B JUMPI DUP1 PUSH4 0xDFBF53AE EQ PUSH2 0x22E JUMPI DUP1 PUSH4 0xE9D729AE EQ PUSH2 0x236 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x65372147 EQ PUSH2 0x1BE JUMPI DUP1 PUSH4 0x6B0EEC1C EQ PUSH2 0x1D3 JUMPI DUP1 PUSH4 0x7A26DD31 EQ PUSH2 0x1F5 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x1E51C9EA GT PUSH2 0xB8 JUMPI DUP1 PUSH4 0x1E51C9EA EQ PUSH2 0x141 JUMPI DUP1 PUSH4 0x4D50BA3A EQ PUSH2 0x192 JUMPI DUP1 PUSH4 0x6247E532 EQ PUSH2 0x19B JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x500894D EQ PUSH2 0xDE JUMPI DUP1 PUSH4 0x13732D79 EQ PUSH2 0xFA JUMPI DUP1 PUSH4 0x1B4613CB EQ PUSH2 0x10F JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xE7 PUSH1 0x4 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x10D PUSH2 0x108 CALLDATASIZE PUSH1 0x4 PUSH2 0x9B8 JUMP JUMPDEST PUSH2 0x249 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x131 PUSH2 0x11D CALLDATASIZE PUSH1 0x4 PUSH2 0xA20 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x20 MSTORE PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xF1 JUMP JUMPDEST PUSH2 0x173 PUSH2 0x14F CALLDATASIZE PUSH1 0x4 PUSH2 0xA20 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP2 SWAP1 MSTORE SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 SWAP1 SWAP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 DUP3 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP4 AND DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE ADD PUSH2 0xF1 JUMP JUMPDEST PUSH2 0xE7 PUSH1 0x5 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x1AE PUSH2 0x1A9 CALLDATASIZE PUSH1 0x4 PUSH2 0xA20 JUMP JUMPDEST PUSH2 0x3E6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xF1 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xA7A JUMP JUMPDEST PUSH2 0x1C6 PUSH2 0x519 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xF1 SWAP2 SWAP1 PUSH2 0xAB6 JUMP JUMPDEST PUSH2 0x131 PUSH2 0x1E1 CALLDATASIZE PUSH1 0x4 PUSH2 0xA20 JUMP JUMPDEST PUSH1 0x3 PUSH1 0x20 MSTORE PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH2 0x10D PUSH2 0x203 CALLDATASIZE PUSH1 0x4 PUSH2 0xACF JUMP JUMPDEST PUSH2 0x60C JUMP JUMPDEST PUSH2 0x131 PUSH2 0x216 CALLDATASIZE PUSH1 0x4 PUSH2 0xA20 JUMP JUMPDEST PUSH2 0x7E2 JUMP JUMPDEST PUSH2 0x131 PUSH2 0x229 CALLDATASIZE PUSH1 0x4 PUSH2 0xA20 JUMP JUMPDEST PUSH2 0x825 JUMP JUMPDEST PUSH2 0x1C6 PUSH2 0x868 JUMP JUMPDEST PUSH2 0x1C6 PUSH2 0x244 CALLDATASIZE PUSH1 0x4 PUSH2 0xA20 JUMP JUMPDEST PUSH2 0x8F4 JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x25D SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP2 DUP2 MSTORE DUP2 MLOAD PUSH1 0x20 SWAP3 DUP4 ADD KECCAK256 PUSH0 DUP2 DUP2 MSTORE PUSH1 0x3 SWAP1 SWAP4 MSTORE SWAP2 KECCAK256 SLOAD SWAP1 SWAP2 POP PUSH1 0xFF AND ISZERO PUSH2 0x2FF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x43616E6469646174652068617320616C7265616479206265656E207265676973 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x7465726564000000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x4 SLOAD PUSH0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH2 0x319 DUP7 DUP3 PUSH2 0xB90 JUMP JUMPDEST POP PUSH0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 SWAP1 DUP2 ADD DUP4 SWAP1 SSTORE PUSH1 0x2 ADD PUSH2 0x33D DUP5 DUP3 PUSH2 0xB90 JUMP JUMPDEST POP PUSH0 DUP3 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x6 DUP1 SLOAD SWAP2 DUP3 ADD DUP2 SSTORE SWAP1 SWAP2 MSTORE PUSH32 0xF652222313E28459528D920B65115C16C04F3EFC82AAEDC97BE59F3F377C0D3F ADD PUSH2 0x391 DUP5 DUP3 PUSH2 0xB90 JUMP JUMPDEST POP PUSH1 0x4 SLOAD PUSH2 0x3A0 SWAP1 PUSH1 0x1 PUSH2 0xC50 JUMP JUMPDEST PUSH1 0x4 SSTORE PUSH1 0x40 MLOAD DUP5 SWAP1 PUSH32 0xDBBC48772584850C2086F66C22A3654C9E46524FF539FD9D72198D91CB7C13C0 SWAP1 PUSH2 0x3D7 SWAP1 DUP9 SWAP1 DUP8 SWAP1 PUSH2 0xC75 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x20 MSTORE PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD DUP2 SWAP1 PUSH2 0x400 SWAP1 PUSH2 0xB0C JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x42C SWAP1 PUSH2 0xB0C JUMP JUMPDEST DUP1 ISZERO PUSH2 0x477 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x44E JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x477 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x45A JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 DUP1 PUSH1 0x2 ADD DUP1 SLOAD PUSH2 0x492 SWAP1 PUSH2 0xB0C JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x4BE SWAP1 PUSH2 0xB0C JUMP JUMPDEST DUP1 ISZERO PUSH2 0x509 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x4E0 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x509 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x4EC JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 DUP1 PUSH1 0x3 ADD SLOAD SWAP1 POP DUP5 JUMP JUMPDEST PUSH1 0x60 PUSH0 DUP1 PUSH0 JUMPDEST PUSH1 0x6 SLOAD DUP2 LT ISZERO PUSH2 0x560 JUMPI PUSH0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x3 ADD SLOAD DUP4 LT ISZERO PUSH2 0x558 JUMPI PUSH0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x3 ADD SLOAD SWAP3 POP SWAP1 POP DUP1 JUMPDEST PUSH1 0x1 ADD PUSH2 0x51F JUMP JUMPDEST POP PUSH0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x7 SWAP1 PUSH2 0x57B SWAP1 DUP3 PUSH2 0xCA2 JUMP JUMPDEST POP PUSH1 0x7 DUP1 SLOAD PUSH2 0x589 SWAP1 PUSH2 0xB0C JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x5B5 SWAP1 PUSH2 0xB0C JUMP JUMPDEST DUP1 ISZERO PUSH2 0x600 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x5D7 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x600 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x5E3 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP3 POP POP POP SWAP1 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH2 0x61A SWAP1 PUSH1 0x1 PUSH2 0xC50 JUMP JUMPDEST PUSH1 0x5 SSTORE PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP1 DUP3 ADD DUP6 SWAP1 MSTORE DUP3 MLOAD DUP1 DUP4 SUB DUP3 ADD DUP2 MSTORE SWAP2 DUP4 ADD DUP4 MSTORE DUP2 MLOAD SWAP2 DUP2 ADD SWAP2 SWAP1 SWAP2 KECCAK256 PUSH0 DUP2 DUP2 MSTORE PUSH1 0x2 SWAP1 SWAP3 MSTORE SWAP2 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x69D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x43616E6469646174652068617320616C726561647920766F7465640000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x2F6 JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x2 GT ISZERO PUSH2 0x716 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x54686572652063616E277420626520656C656374696F6E207769746820612073 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x696E676C65207061727479000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x2F6 JUMP JUMPDEST PUSH0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP10 AND OR DUP2 SSTORE PUSH1 0x1 SWAP1 DUP2 ADD DUP7 SWAP1 SSTORE DUP6 DUP5 MSTORE SWAP2 DUP3 SWAP1 MSTORE DUP3 KECCAK256 PUSH1 0x3 ADD DUP1 SLOAD SWAP2 SWAP3 SWAP1 SWAP2 PUSH2 0x77A SWAP1 DUP5 SWAP1 PUSH2 0xC50 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND DUP2 MSTORE SWAP1 DUP2 ADD DUP5 SWAP1 MSTORE DUP5 SWAP2 PUSH32 0xCB87DF07B1C304492BD875A5C8B98672ECA500939412809EA229AFEF1D745188 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP POP JUMP JUMPDEST PUSH0 DUP1 DUP3 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x7F7 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP2 DUP2 MSTORE DUP2 MLOAD PUSH1 0x20 SWAP3 DUP4 ADD KECCAK256 PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x3 SWAP1 SWAP3 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP1 DUP3 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x83A SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP2 DUP2 MSTORE DUP2 MLOAD PUSH1 0x20 SWAP3 DUP4 ADD KECCAK256 PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x2 SWAP1 SWAP3 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x7 DUP1 SLOAD PUSH2 0x875 SWAP1 PUSH2 0xB0C JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x8A1 SWAP1 PUSH2 0xB0C JUMP JUMPDEST DUP1 ISZERO PUSH2 0x8EC JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x8C3 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x8EC JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x8CF JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST PUSH1 0x6 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x903 JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 ADD PUSH0 SWAP2 POP SWAP1 POP DUP1 SLOAD PUSH2 0x875 SWAP1 PUSH2 0xB0C JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x93E JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x959 JUMPI PUSH2 0x959 PUSH2 0x91B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP4 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP3 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH2 0x981 JUMPI PUSH2 0x981 PUSH2 0x91B JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP4 DUP2 MSTORE DUP7 PUSH1 0x20 DUP6 DUP9 ADD ADD GT ISZERO PUSH2 0x999 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP4 PUSH1 0x20 DUP8 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH0 PUSH1 0x20 DUP6 DUP4 ADD ADD MSTORE DUP1 SWAP5 POP POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x9CA JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x9E1 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x9ED DUP8 DUP4 DUP9 ADD PUSH2 0x92F JUMP JUMPDEST SWAP5 POP PUSH1 0x20 DUP7 ADD CALLDATALOAD SWAP4 POP PUSH1 0x40 DUP7 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0xA09 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0xA16 DUP7 DUP3 DUP8 ADD PUSH2 0x92F JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xA30 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xA5B JUMPI PUSH1 0x20 DUP2 DUP6 ADD DUP2 ADD MLOAD DUP7 DUP4 ADD DUP3 ADD MSTORE ADD PUSH2 0xA3F JUMP JUMPDEST POP PUSH0 PUSH1 0x20 DUP3 DUP7 ADD ADD MSTORE PUSH1 0x20 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP6 ADD ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x80 DUP2 MSTORE PUSH0 PUSH2 0xA8C PUSH1 0x80 DUP4 ADD DUP8 PUSH2 0xA37 JUMP JUMPDEST DUP6 PUSH1 0x20 DUP5 ADD MSTORE DUP3 DUP2 SUB PUSH1 0x40 DUP5 ADD MSTORE PUSH2 0xAA4 DUP2 DUP7 PUSH2 0xA37 JUMP JUMPDEST SWAP2 POP POP DUP3 PUSH1 0x60 DUP4 ADD MSTORE SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH0 PUSH2 0xAC8 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xA37 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xAE1 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xAF7 JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP6 PUSH1 0x20 DUP6 ADD CALLDATALOAD SWAP6 POP PUSH1 0x40 SWAP1 SWAP5 ADD CALLDATALOAD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0xB20 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0xB3E JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0xB8B JUMPI DUP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0xB69 JUMPI POP DUP1 JUMPDEST PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP3 ADD SWAP2 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xB88 JUMPI PUSH0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0xB75 JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST DUP2 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xBAA JUMPI PUSH2 0xBAA PUSH2 0x91B JUMP JUMPDEST PUSH2 0xBBE DUP2 PUSH2 0xBB8 DUP5 SLOAD PUSH2 0xB0C JUMP JUMPDEST DUP5 PUSH2 0xB44 JUMP JUMPDEST PUSH1 0x20 DUP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0xBF1 JUMPI PUSH0 DUP5 ISZERO PUSH2 0xBDA JUMPI POP DUP6 DUP4 ADD MLOAD JUMPDEST PUSH0 NOT PUSH1 0x3 DUP7 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP6 SWAP1 SHL OR DUP6 SSTORE PUSH2 0xC48 JUMP JUMPDEST PUSH0 DUP6 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F NOT DUP7 AND SWAP2 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0xC1F JUMPI DUP9 DUP7 ADD MLOAD DUP3 SSTORE SWAP5 DUP5 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 DUP5 ADD PUSH2 0xC00 JUMP JUMPDEST POP DUP6 DUP3 LT ISZERO PUSH2 0xC3C JUMPI DUP8 DUP6 ADD MLOAD PUSH0 NOT PUSH1 0x3 DUP9 SWAP1 SHL PUSH1 0xF8 AND SHR NOT AND DUP2 SSTORE JUMPDEST POP POP PUSH1 0x1 DUP5 PUSH1 0x1 SHL ADD DUP6 SSTORE JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0xC6F JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x40 DUP2 MSTORE PUSH0 PUSH2 0xC87 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0xA37 JUMP JUMPDEST DUP3 DUP2 SUB PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0xC99 DUP2 DUP6 PUSH2 0xA37 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST DUP2 DUP2 SUB PUSH2 0xCAD JUMPI POP POP JUMP JUMPDEST PUSH2 0xCB7 DUP3 SLOAD PUSH2 0xB0C JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xCCF JUMPI PUSH2 0xCCF PUSH2 0x91B JUMP JUMPDEST PUSH2 0xCDD DUP2 PUSH2 0xBB8 DUP5 SLOAD PUSH2 0xB0C JUMP JUMPDEST PUSH0 PUSH1 0x1F DUP3 GT PUSH1 0x1 DUP2 EQ PUSH2 0xD0E JUMPI PUSH0 DUP4 ISZERO PUSH2 0xCF7 JUMPI POP DUP5 DUP3 ADD SLOAD JUMPDEST PUSH0 NOT PUSH1 0x3 DUP6 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP5 SWAP1 SHL OR DUP5 SSTORE PUSH2 0xB88 JUMP JUMPDEST PUSH0 DUP6 DUP2 MSTORE PUSH1 0x20 DUP1 DUP3 KECCAK256 DUP7 DUP4 MSTORE SWAP1 DUP3 KECCAK256 PUSH1 0x1F NOT DUP7 AND SWAP3 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xD44 JUMPI DUP3 DUP7 ADD SLOAD DUP3 SSTORE PUSH1 0x1 SWAP6 DUP7 ADD SWAP6 SWAP1 SWAP2 ADD SWAP1 PUSH1 0x20 ADD PUSH2 0xD24 JUMP JUMPDEST POP DUP6 DUP4 LT ISZERO PUSH2 0xD61 JUMPI DUP2 DUP6 ADD SLOAD PUSH0 NOT PUSH1 0x3 DUP9 SWAP1 SHL PUSH1 0xF8 AND SHR NOT AND DUP2 SSTORE JUMPDEST POP POP POP POP POP PUSH1 0x1 SWAP1 DUP2 SHL ADD SWAP1 SSTORE POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP16 DUP13 SWAP16 PUSH32 0x3806508A8613E313C7778581877DEA0970E8661526A966C86539482A64736F6C PUSH4 0x43000818 STOP CALLER ",
							"sourceMap": "1251:3265:42:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1754:27;;;;;;;;;160:25:43;;;148:2;133:18;1754:27:42;;;;;;;;2141:794;;;;;;:::i;:::-;;:::i;:::-;;1656:40;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;2075:14:43;;2068:22;2050:41;;2038:2;2023:18;1656:40:42;1910:187:43;1532:52:42;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1532:52:42;;;;;;;;;;-1:-1:-1;;;;;2294:55:43;;;2276:74;;2381:2;2366:18;;2359:34;;;;2249:18;1532:52:42;2102:297:43;1787:27:42;;;;;;1590:60;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;:::i;4107:407::-;;;:::i;:::-;;;;;;;:::i;1702:45::-;;;;;;:::i;:::-;;;;;;;;;;;;;;;;3173:733;;;;;;:::i;:::-;;:::i;2941:226::-;;;;;;:::i;:::-;;:::i;3912:189::-;;;;;;:::i;:::-;;:::i;1855:20::-;;;:::i;1820:29::-;;;;;;:::i;:::-;;:::i;2141:794::-;2297:17;2344:12;2327:30;;;;;;4353:19:43;;4397:2;4388:12;;4224:182;2327:30:42;;;;-1:-1:-1;;2327:30:42;;;;;;;;;2317:41;;2327:30;2317:41;;;;2389:24;;;;:13;:24;;;;;;2317:41;;-1:-1:-1;2389:24:42;;:33;2368:117;;;;-1:-1:-1;;;2368:117:42;;4613:2:43;2368:117:42;;;4595:21:43;4652:2;4632:18;;;4625:30;4691:34;4671:18;;;4664:62;4762:7;4742:18;;;4735:35;4787:19;;2368:117:42;;;;;;;;;2518:12;;2495:20;2540:30;;;:16;:30;;;;;:65;2589:16;2540:30;:65;:::i;:::-;-1:-1:-1;2615:30:42;;;;:16;:30;;;;;;;;:42;;;:54;;;2679:40;;:53;2722:10;2679:40;:53;:::i;:::-;-1:-1:-1;2742:24:42;;;;:13;:24;;;;;:31;;-1:-1:-1;;2742:31:42;2769:4;2742:31;;;;;;2783:13;:30;;;;;;;;;;;;;2802:10;2783:30;;:::i;:::-;-1:-1:-1;2838:12:42;;:16;;2853:1;2838:16;:::i;:::-;2823:12;:31;2870:58;;2903:12;;2870:58;;;;2885:16;;2917:10;;2870:58;:::i;:::-;;;;;;;;2287:648;;2141:794;;;:::o;1590:60::-;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;4107:407::-;4141:13;4166:12;4188:13;4216:9;4211:215;4235:13;:20;4231:24;;4211:215;;;4287:19;;;;:16;:19;;;;;:30;;;4280:37;;4276:140;;;4344:19;;;;:16;:19;;;;;:30;;;;-1:-1:-1;4361:1:42;-1:-1:-1;4361:1:42;4276:140;4257:3;;4211:215;;;-1:-1:-1;4445:23:42;;;;:16;:23;;;;;4436:6;;:48;;:6;:48;:::i;:::-;;4501:6;4494:13;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4107:407;:::o;3173:733::-;3327:12;;:16;;3342:1;3327:16;:::i;:::-;3312:12;:31;3383:30;;;;;;;4353:19:43;;;3383:30:42;;;;;;;;;4388:12:43;;;3383:30:42;;3373:41;;;;;;;;;3353:17;3432:19;;;:8;:19;;;;;;;;;:28;3424:68;;;;-1:-1:-1;;;3424:68:42;;9735:2:43;3424:68:42;;;9717:21:43;9774:2;9754:18;;;9747:30;9813:29;9793:18;;;9786:57;9860:18;;3424:68:42;9533:351:43;3424:68:42;3523:13;:20;3547:1;-1:-1:-1;3523:25:42;3502:115;;;;-1:-1:-1;;;3502:115:42;;10091:2:43;3502:115:42;;;10073:21:43;10130:2;10110:18;;;10103:30;10169:34;10149:18;;;10142:62;10240:13;10220:18;;;10213:41;10271:19;;3502:115:42;9889:407:43;3502:115:42;3627:12;:23;;;;;;;;;;;:52;;;;-1:-1:-1;;;;;3627:52:42;;;;;-1:-1:-1;3689:35:42;;;:50;;;3749:30;;;;;;;;;:41;;:46;;-1:-1:-1;;3749:41:42;;:46;;-1:-1:-1;;3749:46:42;:::i;:::-;;;;-1:-1:-1;;3805:19:42;;;;:8;:19;;;;;;;;;:26;;-1:-1:-1;;3805:26:42;3827:4;3805:26;;;3846:53;;-1:-1:-1;;;;;2294:55:43;;2276:74;;2366:18;;;2359:34;;;3872:12:42;;3846:53;;2249:18:43;3846:53:42;;;;;;;3302:604;3173:733;;;:::o;2941:226::-;3038:4;3058:17;3105:12;3088:30;;;;;;4353:19:43;;4397:2;4388:12;;4224:182;3088:30:42;;;;-1:-1:-1;;3088:30:42;;;;;;;;;3078:41;;3088:30;3078:41;;;;3136:24;;;;:13;:24;;;;;;;;;2941:226;-1:-1:-1;;;2941:226:42:o;3912:189::-;3981:4;3997:17;4044:12;4027:30;;;;;;4353:19:43;;4397:2;4388:12;;4224:182;4027:30:42;;;;-1:-1:-1;;4027:30:42;;;;;;;;;4017:41;;4027:30;4017:41;;;;4075:19;;;;:8;:19;;;;;;;;;3912:189;-1:-1:-1;;;3912:189:42:o;1855:20::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;1820:29::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;196:184:43:-;-1:-1:-1;;;245:1:43;238:88;345:4;342:1;335:15;369:4;366:1;359:15;385:719;428:5;481:3;474:4;466:6;462:17;458:27;448:55;;499:1;496;489:12;448:55;535:6;522:20;561:18;598:2;594;591:10;588:36;;;604:18;;:::i;:::-;679:2;673:9;647:2;733:13;;-1:-1:-1;;729:22:43;;;753:2;725:31;721:40;709:53;;;777:18;;;797:22;;;774:46;771:72;;;823:18;;:::i;:::-;863:10;859:2;852:22;898:2;890:6;883:18;944:3;937:4;932:2;924:6;920:15;916:26;913:35;910:55;;;961:1;958;951:12;910:55;1025:2;1018:4;1010:6;1006:17;999:4;991:6;987:17;974:54;1072:1;1065:4;1060:2;1052:6;1048:15;1044:26;1037:37;1092:6;1083:15;;;;;;385:719;;;;:::o;1109:611::-;1206:6;1214;1222;1275:2;1263:9;1254:7;1250:23;1246:32;1243:52;;;1291:1;1288;1281:12;1243:52;1331:9;1318:23;1360:18;1401:2;1393:6;1390:14;1387:34;;;1417:1;1414;1407:12;1387:34;1440:50;1482:7;1473:6;1462:9;1458:22;1440:50;:::i;:::-;1430:60;;1537:2;1526:9;1522:18;1509:32;1499:42;;1594:2;1583:9;1579:18;1566:32;1550:48;;1623:2;1613:8;1610:16;1607:36;;;1639:1;1636;1629:12;1607:36;;1662:52;1706:7;1695:8;1684:9;1680:24;1662:52;:::i;:::-;1652:62;;;1109:611;;;;;:::o;1725:180::-;1784:6;1837:2;1825:9;1816:7;1812:23;1808:32;1805:52;;;1853:1;1850;1843:12;1805:52;-1:-1:-1;1876:23:43;;1725:180;-1:-1:-1;1725:180:43:o;2589:423::-;2631:3;2669:5;2663:12;2696:6;2691:3;2684:19;2721:1;2731:162;2745:6;2742:1;2739:13;2731:162;;;2807:4;2863:13;;;2859:22;;2853:29;2835:11;;;2831:20;;2824:59;2760:12;2731:162;;;2735:3;2938:1;2931:4;2922:6;2917:3;2913:16;2909:27;2902:38;3001:4;2994:2;2990:7;2985:2;2977:6;2973:15;2969:29;2964:3;2960:39;2956:50;2949:57;;;2589:423;;;;:::o;3017:527::-;3270:3;3259:9;3252:22;3233:4;3297:46;3338:3;3327:9;3323:19;3315:6;3297:46;:::i;:::-;3379:6;3374:2;3363:9;3359:18;3352:34;3434:9;3426:6;3422:22;3417:2;3406:9;3402:18;3395:50;3462:33;3488:6;3480;3462:33;:::i;:::-;3454:41;;;3531:6;3526:2;3515:9;3511:18;3504:34;3017:527;;;;;;;:::o;3549:220::-;3698:2;3687:9;3680:21;3661:4;3718:45;3759:2;3748:9;3744:18;3736:6;3718:45;:::i;:::-;3710:53;3549:220;-1:-1:-1;;;3549:220:43:o;3774:445::-;3851:6;3859;3867;3920:2;3908:9;3899:7;3895:23;3891:32;3888:52;;;3936:1;3933;3926:12;3888:52;3975:9;3962:23;-1:-1:-1;;;;;4018:5:43;4014:54;4007:5;4004:65;3994:93;;4083:1;4080;4073:12;3994:93;4106:5;4158:2;4143:18;;4130:32;;-1:-1:-1;4209:2:43;4194:18;;;4181:32;;3774:445;-1:-1:-1;;;3774:445:43:o;4817:437::-;4896:1;4892:12;;;;4939;;;4960:61;;5014:4;5006:6;5002:17;4992:27;;4960:61;5067:2;5059:6;5056:14;5036:18;5033:38;5030:218;;-1:-1:-1;;;5101:1:43;5094:88;5205:4;5202:1;5195:15;5233:4;5230:1;5223:15;5030:218;;4817:437;;;:::o;5385:518::-;5487:2;5482:3;5479:11;5476:421;;;5523:5;5520:1;5513:16;5567:4;5564:1;5554:18;5637:2;5625:10;5621:19;5618:1;5614:27;5608:4;5604:38;5673:4;5661:10;5658:20;5655:47;;;-1:-1:-1;5696:4:43;5655:47;5751:2;5746:3;5742:12;5739:1;5735:20;5729:4;5725:31;5715:41;;5806:81;5824:2;5817:5;5814:13;5806:81;;;5883:1;5869:16;;5850:1;5839:13;5806:81;;;5810:3;;5476:421;5385:518;;;:::o;6079:1345::-;6205:3;6199:10;6232:18;6224:6;6221:30;6218:56;;;6254:18;;:::i;:::-;6283:97;6373:6;6333:38;6365:4;6359:11;6333:38;:::i;:::-;6327:4;6283:97;:::i;:::-;6435:4;;6492:2;6481:14;;6509:1;6504:663;;;;7211:1;7228:6;7225:89;;;-1:-1:-1;7280:19:43;;;7274:26;7225:89;-1:-1:-1;;6036:1:43;6032:11;;;6028:24;6024:29;6014:40;6060:1;6056:11;;;6011:57;7327:81;;6474:944;;6504:663;5332:1;5325:14;;;5369:4;5356:18;;-1:-1:-1;;6540:20:43;;;6658:236;6672:7;6669:1;6666:14;6658:236;;;6761:19;;;6755:26;6740:42;;6853:27;;;;6821:1;6809:14;;;;6688:19;;6658:236;;;6662:3;6922:6;6913:7;6910:19;6907:201;;;6983:19;;;6977:26;-1:-1:-1;;7066:1:43;7062:14;;;7078:3;7058:24;7054:37;7050:42;7035:58;7020:74;;6907:201;;;7154:1;7145:6;7142:1;7138:14;7134:22;7128:4;7121:36;6474:944;;;;;6079:1345;;:::o;7429:279::-;7494:9;;;7515:10;;;7512:190;;;-1:-1:-1;;;7555:1:43;7548:88;7659:4;7656:1;7649:15;7687:4;7684:1;7677:15;7512:190;7429:279;;;;:::o;7713:383::-;7910:2;7899:9;7892:21;7873:4;7936:45;7977:2;7966:9;7962:18;7954:6;7936:45;:::i;:::-;8029:9;8021:6;8017:22;8012:2;8001:9;7997:18;7990:50;8057:33;8083:6;8075;8057:33;:::i;:::-;8049:41;7713:383;-1:-1:-1;;;;;7713:383:43:o;8101:1427::-;8220:3;8214:4;8211:13;8208:26;;8227:5;;8101:1427::o;8208:26::-;8257:37;8289:3;8283:10;8257:37;:::i;:::-;8317:18;8309:6;8306:30;8303:56;;;8339:18;;:::i;:::-;8368:97;8458:6;8418:38;8450:4;8444:11;8418:38;:::i;8368:97::-;8491:1;8519:2;8511:6;8508:14;8536:1;8531:740;;;;9315:1;9332:6;9329:89;;;-1:-1:-1;9384:19:43;;;9378:26;9329:89;-1:-1:-1;;6036:1:43;6032:11;;;6028:24;6024:29;6014:40;6060:1;6056:11;;;6011:57;9431:81;;8501:1021;;8531:740;5332:1;5325:14;;;5369:4;5356:18;;;5325:14;;;5356:18;;;-1:-1:-1;;8567:20:43;;;8745:251;8759:7;8756:1;8753:14;8745:251;;;8841:21;;;8835:28;8820:44;;8891:1;8964:18;;;;8919:15;;;;8782:4;8775:12;8745:251;;;8749:3;9024:6;9015:7;9012:19;9009:203;;;9085:21;;;9079:28;-1:-1:-1;;9170:1:43;9166:14;;;9182:3;9162:24;9158:37;9154:42;9139:58;9124:74;;9009:203;-1:-1:-1;;;;;9258:1:43;9242:14;;;9238:22;9225:36;;-1:-1:-1;8101:1427:43:o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "699000",
								"executionCost": "732",
								"totalCost": "699732"
							},
							"external": {
								"addCandidateDetails(string,uint256,string)": "infinite",
								"addVoterDetails(address,uint256,uint256)": "infinite",
								"candidateDetails(uint256)": "infinite",
								"checkCandidateStatus(uint256)": "2642",
								"checkVoterStatus(uint256)": "2664",
								"hasRegistered(bytes32)": "2492",
								"hasVoted(bytes32)": "2515",
								"listOfParties(uint256)": "infinite",
								"partyCounter()": "2307",
								"result()": "infinite",
								"voterCounter()": "2328",
								"voterDetails(bytes32)": "4648",
								"winner()": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 1251,
									"end": 4516,
									"name": "PUSH",
									"source": 42,
									"value": "80"
								},
								{
									"begin": 1251,
									"end": 4516,
									"name": "PUSH",
									"source": 42,
									"value": "40"
								},
								{
									"begin": 1251,
									"end": 4516,
									"name": "MSTORE",
									"source": 42
								},
								{
									"begin": 1251,
									"end": 4516,
									"name": "CALLVALUE",
									"source": 42
								},
								{
									"begin": 1251,
									"end": 4516,
									"name": "DUP1",
									"source": 42
								},
								{
									"begin": 1251,
									"end": 4516,
									"name": "ISZERO",
									"source": 42
								},
								{
									"begin": 1251,
									"end": 4516,
									"name": "PUSH [tag]",
									"source": 42,
									"value": "1"
								},
								{
									"begin": 1251,
									"end": 4516,
									"name": "JUMPI",
									"source": 42
								},
								{
									"begin": 1251,
									"end": 4516,
									"name": "PUSH",
									"source": 42,
									"value": "0"
								},
								{
									"begin": 1251,
									"end": 4516,
									"name": "DUP1",
									"source": 42
								},
								{
									"begin": 1251,
									"end": 4516,
									"name": "REVERT",
									"source": 42
								},
								{
									"begin": 1251,
									"end": 4516,
									"name": "tag",
									"source": 42,
									"value": "1"
								},
								{
									"begin": 1251,
									"end": 4516,
									"name": "JUMPDEST",
									"source": 42
								},
								{
									"begin": 1251,
									"end": 4516,
									"name": "POP",
									"source": 42
								},
								{
									"begin": 1251,
									"end": 4516,
									"name": "PUSH #[$]",
									"source": 42,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1251,
									"end": 4516,
									"name": "DUP1",
									"source": 42
								},
								{
									"begin": 1251,
									"end": 4516,
									"name": "PUSH [$]",
									"source": 42,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1251,
									"end": 4516,
									"name": "PUSH",
									"source": 42,
									"value": "0"
								},
								{
									"begin": 1251,
									"end": 4516,
									"name": "CODECOPY",
									"source": 42
								},
								{
									"begin": 1251,
									"end": 4516,
									"name": "PUSH",
									"source": 42,
									"value": "0"
								},
								{
									"begin": 1251,
									"end": 4516,
									"name": "RETURN",
									"source": 42
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212208f8c9f7f3806508a8613e313c7778581877dea0970e8661526a966c86539482a64736f6c63430008180033",
									".code": [
										{
											"begin": 1251,
											"end": 4516,
											"name": "PUSH",
											"source": 42,
											"value": "80"
										},
										{
											"begin": 1251,
											"end": 4516,
											"name": "PUSH",
											"source": 42,
											"value": "40"
										},
										{
											"begin": 1251,
											"end": 4516,
											"name": "MSTORE",
											"source": 42
										},
										{
											"begin": 1251,
											"end": 4516,
											"name": "CALLVALUE",
											"source": 42
										},
										{
											"begin": 1251,
											"end": 4516,
											"name": "DUP1",
											"source": 42
										},
										{
											"begin": 1251,
											"end": 4516,
											"name": "ISZERO",
											"source": 42
										},
										{
											"begin": 1251,
											"end": 4516,
											"name": "PUSH [tag]",
											"source": 42,
											"value": "1"
										},
										{
											"begin": 1251,
											"end": 4516,
											"name": "JUMPI",
											"source": 42
										},
										{
											"begin": 1251,
											"end": 4516,
											"name": "PUSH",
											"source": 42,
											"value": "0"
										},
										{
											"begin": 1251,
											"end": 4516,
											"name": "DUP1",
											"source": 42
										},
										{
											"begin": 1251,
											"end": 4516,
											"name": "REVERT",
											"source": 42
										},
										{
											"begin": 1251,
											"end": 4516,
											"name": "tag",
											"source": 42,
											"value": "1"
										},
										{
											"begin": 1251,
											"end": 4516,
											"name": "JUMPDEST",
											"source": 42
										},
										{
											"begin": 1251,
											"end": 4516,
											"name": "POP",
											"source": 42
										},
										{
											"begin": 1251,
											"end": 4516,
											"name": "PUSH",
											"source": 42,
											"value": "4"
										},
										{
											"begin": 1251,
											"end": 4516,
											"name": "CALLDATASIZE",
											"source": 42
										},
										{
											"begin": 1251,
											"end": 4516,
											"name": "LT",
											"source": 42
										},
										{
											"begin": 1251,
											"end": 4516,
											"name": "PUSH [tag]",
											"source": 42,
											"value": "2"
										},
										{
											"begin": 1251,
											"end": 4516,
											"name": "JUMPI",
											"source": 42
										},
										{
											"begin": 1251,
											"end": 4516,
											"name": "PUSH",
											"source": 42,
											"value": "0"
										},
										{
											"begin": 1251,
											"end": 4516,
											"name": "CALLDATALOAD",
											"source": 42
										},
										{
											"begin": 1251,
											"end": 4516,
											"name": "PUSH",
											"source": 42,
											"value": "E0"
										},
										{
											"begin": 1251,
											"end": 4516,
											"name": "SHR",
											"source": 42
										},
										{
											"begin": 1251,
											"end": 4516,
											"name": "DUP1",
											"source": 42
										},
										{
											"begin": 1251,
											"end": 4516,
											"name": "PUSH",
											"source": 42,
											"value": "65372147"
										},
										{
											"begin": 1251,
											"end": 4516,
											"name": "GT",
											"source": 42
										},
										{
											"begin": 1251,
											"end": 4516,
											"name": "PUSH [tag]",
											"source": 42,
											"value": "16"
										},
										{
											"begin": 1251,
											"end": 4516,
											"name": "JUMPI",
											"source": 42
										},
										{
											"begin": 1251,
											"end": 4516,
											"name": "DUP1",
											"source": 42
										},
										{
											"begin": 1251,
											"end": 4516,
											"name": "PUSH",
											"source": 42,
											"value": "B2FB8E37"
										},
										{
											"begin": 1251,
											"end": 4516,
											"name": "GT",
											"source": 42
										},
										{
											"begin": 1251,
											"end": 4516,
											"name": "PUSH [tag]",
											"source": 42,
											"value": "17"
										},
										{
											"begin": 1251,
											"end": 4516,
											"name": "JUMPI",
											"source": 42
										},
										{
											"begin": 1251,
											"end": 4516,
											"name": "DUP1",
											"source": 42
										},
										{
											"begin": 1251,
											"end": 4516,
											"name": "PUSH",
											"source": 42,
											"value": "B2FB8E37"
										},
										{
											"begin": 1251,
											"end": 4516,
											"name": "EQ",
											"source": 42
										},
										{
											"begin": 1251,
											"end": 4516,
											"name": "PUSH [tag]",
											"source": 42,
											"value": "12"
										},
										{
											"begin": 1251,
											"end": 4516,
											"name": "JUMPI",
											"source": 42
										},
										{
											"begin": 1251,
											"end": 4516,
											"name": "DUP1",
											"source": 42
										},
										{
											"begin": 1251,
											"end": 4516,
											"name": "PUSH",
											"source": 42,
											"value": "C93346AB"
										},
										{
											"begin": 1251,
											"end": 4516,
											"name": "EQ",
											"source": 42
										},
										{
											"begin": 1251,
											"end": 4516,
											"name": "PUSH [tag]",
											"source": 42,
											"value": "13"
										},
										{
											"begin": 1251,
											"end": 4516,
											"name": "JUMPI",
											"source": 42
										},
										{
											"begin": 1251,
											"end": 4516,
											"name": "DUP1",
											"source": 42
										},
										{
											"begin": 1251,
											"end": 4516,
											"name": "PUSH",
											"source": 42,
											"value": "DFBF53AE"
										},
										{
											"begin": 1251,
											"end": 4516,
											"name": "EQ",
											"source": 42
										},
										{
											"begin": 1251,
											"end": 4516,
											"name": "PUSH [tag]",
											"source": 42,
											"value": "14"
										},
										{
											"begin": 1251,
											"end": 4516,
											"name": "JUMPI",
											"source": 42
										},
										{
											"begin": 1251,
											"end": 4516,
											"name": "DUP1",
											"source": 42
										},
										{
											"begin": 1251,
											"end": 4516,
											"name": "PUSH",
											"source": 42,
											"value": "E9D729AE"
										},
										{
											"begin": 1251,
											"end": 4516,
											"name": "EQ",
											"source": 42
										},
										{
											"begin": 1251,
											"end": 4516,
											"name": "PUSH [tag]",
											"source": 42,
											"value": "15"
										},
										{
											"begin": 1251,
											"end": 4516,
											"name": "JUMPI",
											"source": 42
										},
										{
											"begin": 1251,
											"end": 4516,
											"name": "PUSH",
											"source": 42,
											"value": "0"
										},
										{
											"begin": 1251,
											"end": 4516,
											"name": "DUP1",
											"source": 42
										},
										{
											"begin": 1251,
											"end": 4516,
											"name": "REVERT",
											"source": 42
										},
										{
											"begin": 1251,
											"end": 4516,
											"name": "tag",
											"source": 42,
											"value": "17"
										},
										{
											"begin": 1251,
											"end": 4516,
											"name": "JUMPDEST",
											"source": 42
										},
										{
											"begin": 1251,
											"end": 4516,
											"name": "DUP1",
											"source": 42
										},
										{
											"begin": 1251,
											"end": 4516,
											"name": "PUSH",
											"source": 42,
											"value": "65372147"
										},
										{
											"begin": 1251,
											"end": 4516,
											"name": "EQ",
											"source": 42
										},
										{
											"begin": 1251,
											"end": 4516,
											"name": "PUSH [tag]",
											"source": 42,
											"value": "9"
										},
										{
											"begin": 1251,
											"end": 4516,
											"name": "JUMPI",
											"source": 42
										},
										{
											"begin": 1251,
											"end": 4516,
											"name": "DUP1",
											"source": 42
										},
										{
											"begin": 1251,
											"end": 4516,
											"name": "PUSH",
											"source": 42,
											"value": "6B0EEC1C"
										},
										{
											"begin": 1251,
											"end": 4516,
											"name": "EQ",
											"source": 42
										},
										{
											"begin": 1251,
											"end": 4516,
											"name": "PUSH [tag]",
											"source": 42,
											"value": "10"
										},
										{
											"begin": 1251,
											"end": 4516,
											"name": "JUMPI",
											"source": 42
										},
										{
											"begin": 1251,
											"end": 4516,
											"name": "DUP1",
											"source": 42
										},
										{
											"begin": 1251,
											"end": 4516,
											"name": "PUSH",
											"source": 42,
											"value": "7A26DD31"
										},
										{
											"begin": 1251,
											"end": 4516,
											"name": "EQ",
											"source": 42
										},
										{
											"begin": 1251,
											"end": 4516,
											"name": "PUSH [tag]",
											"source": 42,
											"value": "11"
										},
										{
											"begin": 1251,
											"end": 4516,
											"name": "JUMPI",
											"source": 42
										},
										{
											"begin": 1251,
											"end": 4516,
											"name": "PUSH",
											"source": 42,
											"value": "0"
										},
										{
											"begin": 1251,
											"end": 4516,
											"name": "DUP1",
											"source": 42
										},
										{
											"begin": 1251,
											"end": 4516,
											"name": "REVERT",
											"source": 42
										},
										{
											"begin": 1251,
											"end": 4516,
											"name": "tag",
											"source": 42,
											"value": "16"
										},
										{
											"begin": 1251,
											"end": 4516,
											"name": "JUMPDEST",
											"source": 42
										},
										{
											"begin": 1251,
											"end": 4516,
											"name": "DUP1",
											"source": 42
										},
										{
											"begin": 1251,
											"end": 4516,
											"name": "PUSH",
											"source": 42,
											"value": "1E51C9EA"
										},
										{
											"begin": 1251,
											"end": 4516,
											"name": "GT",
											"source": 42
										},
										{
											"begin": 1251,
											"end": 4516,
											"name": "PUSH [tag]",
											"source": 42,
											"value": "18"
										},
										{
											"begin": 1251,
											"end": 4516,
											"name": "JUMPI",
											"source": 42
										},
										{
											"begin": 1251,
											"end": 4516,
											"name": "DUP1",
											"source": 42
										},
										{
											"begin": 1251,
											"end": 4516,
											"name": "PUSH",
											"source": 42,
											"value": "1E51C9EA"
										},
										{
											"begin": 1251,
											"end": 4516,
											"name": "EQ",
											"source": 42
										},
										{
											"begin": 1251,
											"end": 4516,
											"name": "PUSH [tag]",
											"source": 42,
											"value": "6"
										},
										{
											"begin": 1251,
											"end": 4516,
											"name": "JUMPI",
											"source": 42
										},
										{
											"begin": 1251,
											"end": 4516,
											"name": "DUP1",
											"source": 42
										},
										{
											"begin": 1251,
											"end": 4516,
											"name": "PUSH",
											"source": 42,
											"value": "4D50BA3A"
										},
										{
											"begin": 1251,
											"end": 4516,
											"name": "EQ",
											"source": 42
										},
										{
											"begin": 1251,
											"end": 4516,
											"name": "PUSH [tag]",
											"source": 42,
											"value": "7"
										},
										{
											"begin": 1251,
											"end": 4516,
											"name": "JUMPI",
											"source": 42
										},
										{
											"begin": 1251,
											"end": 4516,
											"name": "DUP1",
											"source": 42
										},
										{
											"begin": 1251,
											"end": 4516,
											"name": "PUSH",
											"source": 42,
											"value": "6247E532"
										},
										{
											"begin": 1251,
											"end": 4516,
											"name": "EQ",
											"source": 42
										},
										{
											"begin": 1251,
											"end": 4516,
											"name": "PUSH [tag]",
											"source": 42,
											"value": "8"
										},
										{
											"begin": 1251,
											"end": 4516,
											"name": "JUMPI",
											"source": 42
										},
										{
											"begin": 1251,
											"end": 4516,
											"name": "PUSH",
											"source": 42,
											"value": "0"
										},
										{
											"begin": 1251,
											"end": 4516,
											"name": "DUP1",
											"source": 42
										},
										{
											"begin": 1251,
											"end": 4516,
											"name": "REVERT",
											"source": 42
										},
										{
											"begin": 1251,
											"end": 4516,
											"name": "tag",
											"source": 42,
											"value": "18"
										},
										{
											"begin": 1251,
											"end": 4516,
											"name": "JUMPDEST",
											"source": 42
										},
										{
											"begin": 1251,
											"end": 4516,
											"name": "DUP1",
											"source": 42
										},
										{
											"begin": 1251,
											"end": 4516,
											"name": "PUSH",
											"source": 42,
											"value": "500894D"
										},
										{
											"begin": 1251,
											"end": 4516,
											"name": "EQ",
											"source": 42
										},
										{
											"begin": 1251,
											"end": 4516,
											"name": "PUSH [tag]",
											"source": 42,
											"value": "3"
										},
										{
											"begin": 1251,
											"end": 4516,
											"name": "JUMPI",
											"source": 42
										},
										{
											"begin": 1251,
											"end": 4516,
											"name": "DUP1",
											"source": 42
										},
										{
											"begin": 1251,
											"end": 4516,
											"name": "PUSH",
											"source": 42,
											"value": "13732D79"
										},
										{
											"begin": 1251,
											"end": 4516,
											"name": "EQ",
											"source": 42
										},
										{
											"begin": 1251,
											"end": 4516,
											"name": "PUSH [tag]",
											"source": 42,
											"value": "4"
										},
										{
											"begin": 1251,
											"end": 4516,
											"name": "JUMPI",
											"source": 42
										},
										{
											"begin": 1251,
											"end": 4516,
											"name": "DUP1",
											"source": 42
										},
										{
											"begin": 1251,
											"end": 4516,
											"name": "PUSH",
											"source": 42,
											"value": "1B4613CB"
										},
										{
											"begin": 1251,
											"end": 4516,
											"name": "EQ",
											"source": 42
										},
										{
											"begin": 1251,
											"end": 4516,
											"name": "PUSH [tag]",
											"source": 42,
											"value": "5"
										},
										{
											"begin": 1251,
											"end": 4516,
											"name": "JUMPI",
											"source": 42
										},
										{
											"begin": 1251,
											"end": 4516,
											"name": "tag",
											"source": 42,
											"value": "2"
										},
										{
											"begin": 1251,
											"end": 4516,
											"name": "JUMPDEST",
											"source": 42
										},
										{
											"begin": 1251,
											"end": 4516,
											"name": "PUSH",
											"source": 42,
											"value": "0"
										},
										{
											"begin": 1251,
											"end": 4516,
											"name": "DUP1",
											"source": 42
										},
										{
											"begin": 1251,
											"end": 4516,
											"name": "REVERT",
											"source": 42
										},
										{
											"begin": 1754,
											"end": 1781,
											"name": "tag",
											"source": 42,
											"value": "3"
										},
										{
											"begin": 1754,
											"end": 1781,
											"name": "JUMPDEST",
											"source": 42
										},
										{
											"begin": 1754,
											"end": 1781,
											"name": "PUSH [tag]",
											"source": 42,
											"value": "19"
										},
										{
											"begin": 1754,
											"end": 1781,
											"name": "PUSH",
											"source": 42,
											"value": "4"
										},
										{
											"begin": 1754,
											"end": 1781,
											"name": "SLOAD",
											"source": 42
										},
										{
											"begin": 1754,
											"end": 1781,
											"name": "DUP2",
											"source": 42
										},
										{
											"begin": 1754,
											"end": 1781,
											"name": "JUMP",
											"source": 42
										},
										{
											"begin": 1754,
											"end": 1781,
											"name": "tag",
											"source": 42,
											"value": "19"
										},
										{
											"begin": 1754,
											"end": 1781,
											"name": "JUMPDEST",
											"source": 42
										},
										{
											"begin": 1754,
											"end": 1781,
											"name": "PUSH",
											"source": 42,
											"value": "40"
										},
										{
											"begin": 1754,
											"end": 1781,
											"name": "MLOAD",
											"source": 42
										},
										{
											"begin": 160,
											"end": 185,
											"name": "SWAP1",
											"source": 43
										},
										{
											"begin": 160,
											"end": 185,
											"name": "DUP2",
											"source": 43
										},
										{
											"begin": 160,
											"end": 185,
											"name": "MSTORE",
											"source": 43
										},
										{
											"begin": 148,
											"end": 150,
											"name": "PUSH",
											"source": 43,
											"value": "20"
										},
										{
											"begin": 133,
											"end": 151,
											"name": "ADD",
											"source": 43
										},
										{
											"begin": 1754,
											"end": 1781,
											"name": "tag",
											"source": 42,
											"value": "21"
										},
										{
											"begin": 1754,
											"end": 1781,
											"name": "JUMPDEST",
											"source": 42
										},
										{
											"begin": 1754,
											"end": 1781,
											"name": "PUSH",
											"source": 42,
											"value": "40"
										},
										{
											"begin": 1754,
											"end": 1781,
											"name": "MLOAD",
											"source": 42
										},
										{
											"begin": 1754,
											"end": 1781,
											"name": "DUP1",
											"source": 42
										},
										{
											"begin": 1754,
											"end": 1781,
											"name": "SWAP2",
											"source": 42
										},
										{
											"begin": 1754,
											"end": 1781,
											"name": "SUB",
											"source": 42
										},
										{
											"begin": 1754,
											"end": 1781,
											"name": "SWAP1",
											"source": 42
										},
										{
											"begin": 1754,
											"end": 1781,
											"name": "RETURN",
											"source": 42
										},
										{
											"begin": 2141,
											"end": 2935,
											"name": "tag",
											"source": 42,
											"value": "4"
										},
										{
											"begin": 2141,
											"end": 2935,
											"name": "JUMPDEST",
											"source": 42
										},
										{
											"begin": 2141,
											"end": 2935,
											"name": "PUSH [tag]",
											"source": 42,
											"value": "23"
										},
										{
											"begin": 2141,
											"end": 2935,
											"name": "PUSH [tag]",
											"source": 42,
											"value": "24"
										},
										{
											"begin": 2141,
											"end": 2935,
											"name": "CALLDATASIZE",
											"source": 42
										},
										{
											"begin": 2141,
											"end": 2935,
											"name": "PUSH",
											"source": 42,
											"value": "4"
										},
										{
											"begin": 2141,
											"end": 2935,
											"name": "PUSH [tag]",
											"source": 42,
											"value": "25"
										},
										{
											"begin": 2141,
											"end": 2935,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 42
										},
										{
											"begin": 2141,
											"end": 2935,
											"name": "tag",
											"source": 42,
											"value": "24"
										},
										{
											"begin": 2141,
											"end": 2935,
											"name": "JUMPDEST",
											"source": 42
										},
										{
											"begin": 2141,
											"end": 2935,
											"name": "PUSH [tag]",
											"source": 42,
											"value": "26"
										},
										{
											"begin": 2141,
											"end": 2935,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 42
										},
										{
											"begin": 2141,
											"end": 2935,
											"name": "tag",
											"source": 42,
											"value": "23"
										},
										{
											"begin": 2141,
											"end": 2935,
											"name": "JUMPDEST",
											"source": 42
										},
										{
											"begin": 2141,
											"end": 2935,
											"name": "STOP",
											"source": 42
										},
										{
											"begin": 1656,
											"end": 1696,
											"name": "tag",
											"source": 42,
											"value": "5"
										},
										{
											"begin": 1656,
											"end": 1696,
											"name": "JUMPDEST",
											"source": 42
										},
										{
											"begin": 1656,
											"end": 1696,
											"name": "PUSH [tag]",
											"source": 42,
											"value": "27"
										},
										{
											"begin": 1656,
											"end": 1696,
											"name": "PUSH [tag]",
											"source": 42,
											"value": "28"
										},
										{
											"begin": 1656,
											"end": 1696,
											"name": "CALLDATASIZE",
											"source": 42
										},
										{
											"begin": 1656,
											"end": 1696,
											"name": "PUSH",
											"source": 42,
											"value": "4"
										},
										{
											"begin": 1656,
											"end": 1696,
											"name": "PUSH [tag]",
											"source": 42,
											"value": "29"
										},
										{
											"begin": 1656,
											"end": 1696,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 42
										},
										{
											"begin": 1656,
											"end": 1696,
											"name": "tag",
											"source": 42,
											"value": "28"
										},
										{
											"begin": 1656,
											"end": 1696,
											"name": "JUMPDEST",
											"source": 42
										},
										{
											"begin": 1656,
											"end": 1696,
											"name": "PUSH",
											"source": 42,
											"value": "2"
										},
										{
											"begin": 1656,
											"end": 1696,
											"name": "PUSH",
											"source": 42,
											"value": "20"
										},
										{
											"begin": 1656,
											"end": 1696,
											"name": "MSTORE",
											"source": 42
										},
										{
											"begin": 1656,
											"end": 1696,
											"name": "PUSH",
											"source": 42,
											"value": "0"
										},
										{
											"begin": 1656,
											"end": 1696,
											"name": "SWAP1",
											"source": 42
										},
										{
											"begin": 1656,
											"end": 1696,
											"name": "DUP2",
											"source": 42
										},
										{
											"begin": 1656,
											"end": 1696,
											"name": "MSTORE",
											"source": 42
										},
										{
											"begin": 1656,
											"end": 1696,
											"name": "PUSH",
											"source": 42,
											"value": "40"
										},
										{
											"begin": 1656,
											"end": 1696,
											"name": "SWAP1",
											"source": 42
										},
										{
											"begin": 1656,
											"end": 1696,
											"name": "KECCAK256",
											"source": 42
										},
										{
											"begin": 1656,
											"end": 1696,
											"name": "SLOAD",
											"source": 42
										},
										{
											"begin": 1656,
											"end": 1696,
											"name": "PUSH",
											"source": 42,
											"value": "FF"
										},
										{
											"begin": 1656,
											"end": 1696,
											"name": "AND",
											"source": 42
										},
										{
											"begin": 1656,
											"end": 1696,
											"name": "DUP2",
											"source": 42
										},
										{
											"begin": 1656,
											"end": 1696,
											"name": "JUMP",
											"source": 42
										},
										{
											"begin": 1656,
											"end": 1696,
											"name": "tag",
											"source": 42,
											"value": "27"
										},
										{
											"begin": 1656,
											"end": 1696,
											"name": "JUMPDEST",
											"source": 42
										},
										{
											"begin": 1656,
											"end": 1696,
											"name": "PUSH",
											"source": 42,
											"value": "40"
										},
										{
											"begin": 1656,
											"end": 1696,
											"name": "MLOAD",
											"source": 42
										},
										{
											"begin": 2075,
											"end": 2089,
											"name": "SWAP1",
											"source": 43
										},
										{
											"begin": 2075,
											"end": 2089,
											"name": "ISZERO",
											"source": 43
										},
										{
											"begin": 2068,
											"end": 2090,
											"name": "ISZERO",
											"source": 43
										},
										{
											"begin": 2050,
											"end": 2091,
											"name": "DUP2",
											"source": 43
										},
										{
											"begin": 2050,
											"end": 2091,
											"name": "MSTORE",
											"source": 43
										},
										{
											"begin": 2038,
											"end": 2040,
											"name": "PUSH",
											"source": 43,
											"value": "20"
										},
										{
											"begin": 2023,
											"end": 2041,
											"name": "ADD",
											"source": 43
										},
										{
											"begin": 1656,
											"end": 1696,
											"name": "PUSH [tag]",
											"source": 42,
											"value": "21"
										},
										{
											"begin": 1910,
											"end": 2097,
											"name": "JUMP",
											"source": 43
										},
										{
											"begin": 1532,
											"end": 1584,
											"name": "tag",
											"source": 42,
											"value": "6"
										},
										{
											"begin": 1532,
											"end": 1584,
											"name": "JUMPDEST",
											"source": 42
										},
										{
											"begin": 1532,
											"end": 1584,
											"name": "PUSH [tag]",
											"source": 42,
											"value": "33"
										},
										{
											"begin": 1532,
											"end": 1584,
											"name": "PUSH [tag]",
											"source": 42,
											"value": "34"
										},
										{
											"begin": 1532,
											"end": 1584,
											"name": "CALLDATASIZE",
											"source": 42
										},
										{
											"begin": 1532,
											"end": 1584,
											"name": "PUSH",
											"source": 42,
											"value": "4"
										},
										{
											"begin": 1532,
											"end": 1584,
											"name": "PUSH [tag]",
											"source": 42,
											"value": "29"
										},
										{
											"begin": 1532,
											"end": 1584,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 42
										},
										{
											"begin": 1532,
											"end": 1584,
											"name": "tag",
											"source": 42,
											"value": "34"
										},
										{
											"begin": 1532,
											"end": 1584,
											"name": "JUMPDEST",
											"source": 42
										},
										{
											"begin": 1532,
											"end": 1584,
											"name": "PUSH",
											"source": 42,
											"value": "0"
										},
										{
											"begin": 1532,
											"end": 1584,
											"name": "PUSH",
											"source": 42,
											"value": "20"
										},
										{
											"begin": 1532,
											"end": 1584,
											"name": "DUP2",
											"source": 42
										},
										{
											"begin": 1532,
											"end": 1584,
											"name": "SWAP1",
											"source": 42
										},
										{
											"begin": 1532,
											"end": 1584,
											"name": "MSTORE",
											"source": 42
										},
										{
											"begin": 1532,
											"end": 1584,
											"name": "SWAP1",
											"source": 42
										},
										{
											"begin": 1532,
											"end": 1584,
											"name": "DUP2",
											"source": 42
										},
										{
											"begin": 1532,
											"end": 1584,
											"name": "MSTORE",
											"source": 42
										},
										{
											"begin": 1532,
											"end": 1584,
											"name": "PUSH",
											"source": 42,
											"value": "40"
										},
										{
											"begin": 1532,
											"end": 1584,
											"name": "SWAP1",
											"source": 42
										},
										{
											"begin": 1532,
											"end": 1584,
											"name": "KECCAK256",
											"source": 42
										},
										{
											"begin": 1532,
											"end": 1584,
											"name": "DUP1",
											"source": 42
										},
										{
											"begin": 1532,
											"end": 1584,
											"name": "SLOAD",
											"source": 42
										},
										{
											"begin": 1532,
											"end": 1584,
											"name": "PUSH",
											"source": 42,
											"value": "1"
										},
										{
											"begin": 1532,
											"end": 1584,
											"name": "SWAP1",
											"source": 42
										},
										{
											"begin": 1532,
											"end": 1584,
											"name": "SWAP2",
											"source": 42
										},
										{
											"begin": 1532,
											"end": 1584,
											"name": "ADD",
											"source": 42
										},
										{
											"begin": 1532,
											"end": 1584,
											"name": "SLOAD",
											"source": 42
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1532,
											"end": 1584,
											"name": "SWAP1",
											"source": 42
										},
										{
											"begin": 1532,
											"end": 1584,
											"name": "SWAP2",
											"source": 42
										},
										{
											"begin": 1532,
											"end": 1584,
											"name": "AND",
											"source": 42
										},
										{
											"begin": 1532,
											"end": 1584,
											"name": "SWAP1",
											"source": 42
										},
										{
											"begin": 1532,
											"end": 1584,
											"name": "DUP3",
											"source": 42
										},
										{
											"begin": 1532,
											"end": 1584,
											"name": "JUMP",
											"source": 42
										},
										{
											"begin": 1532,
											"end": 1584,
											"name": "tag",
											"source": 42,
											"value": "33"
										},
										{
											"begin": 1532,
											"end": 1584,
											"name": "JUMPDEST",
											"source": 42
										},
										{
											"begin": 1532,
											"end": 1584,
											"name": "PUSH",
											"source": 42,
											"value": "40"
										},
										{
											"begin": 1532,
											"end": 1584,
											"name": "DUP1",
											"source": 42
										},
										{
											"begin": 1532,
											"end": 1584,
											"name": "MLOAD",
											"source": 42
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2294,
											"end": 2349,
											"name": "SWAP1",
											"source": 43
										},
										{
											"begin": 2294,
											"end": 2349,
											"name": "SWAP4",
											"source": 43
										},
										{
											"begin": 2294,
											"end": 2349,
											"name": "AND",
											"source": 43
										},
										{
											"begin": 2276,
											"end": 2350,
											"name": "DUP4",
											"source": 43
										},
										{
											"begin": 2276,
											"end": 2350,
											"name": "MSTORE",
											"source": 43
										},
										{
											"begin": 2381,
											"end": 2383,
											"name": "PUSH",
											"source": 43,
											"value": "20"
										},
										{
											"begin": 2366,
											"end": 2384,
											"name": "DUP4",
											"source": 43
										},
										{
											"begin": 2366,
											"end": 2384,
											"name": "ADD",
											"source": 43
										},
										{
											"begin": 2359,
											"end": 2393,
											"name": "SWAP2",
											"source": 43
										},
										{
											"begin": 2359,
											"end": 2393,
											"name": "SWAP1",
											"source": 43
										},
										{
											"begin": 2359,
											"end": 2393,
											"name": "SWAP2",
											"source": 43
										},
										{
											"begin": 2359,
											"end": 2393,
											"name": "MSTORE",
											"source": 43
										},
										{
											"begin": 2249,
											"end": 2267,
											"name": "ADD",
											"source": 43
										},
										{
											"begin": 1532,
											"end": 1584,
											"name": "PUSH [tag]",
											"source": 42,
											"value": "21"
										},
										{
											"begin": 2102,
											"end": 2399,
											"name": "JUMP",
											"source": 43
										},
										{
											"begin": 1787,
											"end": 1814,
											"name": "tag",
											"source": 42,
											"value": "7"
										},
										{
											"begin": 1787,
											"end": 1814,
											"name": "JUMPDEST",
											"source": 42
										},
										{
											"begin": 1787,
											"end": 1814,
											"name": "PUSH [tag]",
											"source": 42,
											"value": "19"
										},
										{
											"begin": 1787,
											"end": 1814,
											"name": "PUSH",
											"source": 42,
											"value": "5"
										},
										{
											"begin": 1787,
											"end": 1814,
											"name": "SLOAD",
											"source": 42
										},
										{
											"begin": 1787,
											"end": 1814,
											"name": "DUP2",
											"source": 42
										},
										{
											"begin": 1787,
											"end": 1814,
											"name": "JUMP",
											"source": 42
										},
										{
											"begin": 1590,
											"end": 1650,
											"name": "tag",
											"source": 42,
											"value": "8"
										},
										{
											"begin": 1590,
											"end": 1650,
											"name": "JUMPDEST",
											"source": 42
										},
										{
											"begin": 1590,
											"end": 1650,
											"name": "PUSH [tag]",
											"source": 42,
											"value": "41"
										},
										{
											"begin": 1590,
											"end": 1650,
											"name": "PUSH [tag]",
											"source": 42,
											"value": "42"
										},
										{
											"begin": 1590,
											"end": 1650,
											"name": "CALLDATASIZE",
											"source": 42
										},
										{
											"begin": 1590,
											"end": 1650,
											"name": "PUSH",
											"source": 42,
											"value": "4"
										},
										{
											"begin": 1590,
											"end": 1650,
											"name": "PUSH [tag]",
											"source": 42,
											"value": "29"
										},
										{
											"begin": 1590,
											"end": 1650,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 42
										},
										{
											"begin": 1590,
											"end": 1650,
											"name": "tag",
											"source": 42,
											"value": "42"
										},
										{
											"begin": 1590,
											"end": 1650,
											"name": "JUMPDEST",
											"source": 42
										},
										{
											"begin": 1590,
											"end": 1650,
											"name": "PUSH [tag]",
											"source": 42,
											"value": "44"
										},
										{
											"begin": 1590,
											"end": 1650,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 42
										},
										{
											"begin": 1590,
											"end": 1650,
											"name": "tag",
											"source": 42,
											"value": "41"
										},
										{
											"begin": 1590,
											"end": 1650,
											"name": "JUMPDEST",
											"source": 42
										},
										{
											"begin": 1590,
											"end": 1650,
											"name": "PUSH",
											"source": 42,
											"value": "40"
										},
										{
											"begin": 1590,
											"end": 1650,
											"name": "MLOAD",
											"source": 42
										},
										{
											"begin": 1590,
											"end": 1650,
											"name": "PUSH [tag]",
											"source": 42,
											"value": "21"
										},
										{
											"begin": 1590,
											"end": 1650,
											"name": "SWAP5",
											"source": 42
										},
										{
											"begin": 1590,
											"end": 1650,
											"name": "SWAP4",
											"source": 42
										},
										{
											"begin": 1590,
											"end": 1650,
											"name": "SWAP3",
											"source": 42
										},
										{
											"begin": 1590,
											"end": 1650,
											"name": "SWAP2",
											"source": 42
										},
										{
											"begin": 1590,
											"end": 1650,
											"name": "SWAP1",
											"source": 42
										},
										{
											"begin": 1590,
											"end": 1650,
											"name": "PUSH [tag]",
											"source": 42,
											"value": "46"
										},
										{
											"begin": 1590,
											"end": 1650,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 42
										},
										{
											"begin": 4107,
											"end": 4514,
											"name": "tag",
											"source": 42,
											"value": "9"
										},
										{
											"begin": 4107,
											"end": 4514,
											"name": "JUMPDEST",
											"source": 42
										},
										{
											"begin": 4107,
											"end": 4514,
											"name": "PUSH [tag]",
											"source": 42,
											"value": "47"
										},
										{
											"begin": 4107,
											"end": 4514,
											"name": "PUSH [tag]",
											"source": 42,
											"value": "48"
										},
										{
											"begin": 4107,
											"end": 4514,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 42
										},
										{
											"begin": 4107,
											"end": 4514,
											"name": "tag",
											"source": 42,
											"value": "47"
										},
										{
											"begin": 4107,
											"end": 4514,
											"name": "JUMPDEST",
											"source": 42
										},
										{
											"begin": 4107,
											"end": 4514,
											"name": "PUSH",
											"source": 42,
											"value": "40"
										},
										{
											"begin": 4107,
											"end": 4514,
											"name": "MLOAD",
											"source": 42
										},
										{
											"begin": 4107,
											"end": 4514,
											"name": "PUSH [tag]",
											"source": 42,
											"value": "21"
										},
										{
											"begin": 4107,
											"end": 4514,
											"name": "SWAP2",
											"source": 42
										},
										{
											"begin": 4107,
											"end": 4514,
											"name": "SWAP1",
											"source": 42
										},
										{
											"begin": 4107,
											"end": 4514,
											"name": "PUSH [tag]",
											"source": 42,
											"value": "50"
										},
										{
											"begin": 4107,
											"end": 4514,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 42
										},
										{
											"begin": 1702,
											"end": 1747,
											"name": "tag",
											"source": 42,
											"value": "10"
										},
										{
											"begin": 1702,
											"end": 1747,
											"name": "JUMPDEST",
											"source": 42
										},
										{
											"begin": 1702,
											"end": 1747,
											"name": "PUSH [tag]",
											"source": 42,
											"value": "27"
										},
										{
											"begin": 1702,
											"end": 1747,
											"name": "PUSH [tag]",
											"source": 42,
											"value": "52"
										},
										{
											"begin": 1702,
											"end": 1747,
											"name": "CALLDATASIZE",
											"source": 42
										},
										{
											"begin": 1702,
											"end": 1747,
											"name": "PUSH",
											"source": 42,
											"value": "4"
										},
										{
											"begin": 1702,
											"end": 1747,
											"name": "PUSH [tag]",
											"source": 42,
											"value": "29"
										},
										{
											"begin": 1702,
											"end": 1747,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 42
										},
										{
											"begin": 1702,
											"end": 1747,
											"name": "tag",
											"source": 42,
											"value": "52"
										},
										{
											"begin": 1702,
											"end": 1747,
											"name": "JUMPDEST",
											"source": 42
										},
										{
											"begin": 1702,
											"end": 1747,
											"name": "PUSH",
											"source": 42,
											"value": "3"
										},
										{
											"begin": 1702,
											"end": 1747,
											"name": "PUSH",
											"source": 42,
											"value": "20"
										},
										{
											"begin": 1702,
											"end": 1747,
											"name": "MSTORE",
											"source": 42
										},
										{
											"begin": 1702,
											"end": 1747,
											"name": "PUSH",
											"source": 42,
											"value": "0"
										},
										{
											"begin": 1702,
											"end": 1747,
											"name": "SWAP1",
											"source": 42
										},
										{
											"begin": 1702,
											"end": 1747,
											"name": "DUP2",
											"source": 42
										},
										{
											"begin": 1702,
											"end": 1747,
											"name": "MSTORE",
											"source": 42
										},
										{
											"begin": 1702,
											"end": 1747,
											"name": "PUSH",
											"source": 42,
											"value": "40"
										},
										{
											"begin": 1702,
											"end": 1747,
											"name": "SWAP1",
											"source": 42
										},
										{
											"begin": 1702,
											"end": 1747,
											"name": "KECCAK256",
											"source": 42
										},
										{
											"begin": 1702,
											"end": 1747,
											"name": "SLOAD",
											"source": 42
										},
										{
											"begin": 1702,
											"end": 1747,
											"name": "PUSH",
											"source": 42,
											"value": "FF"
										},
										{
											"begin": 1702,
											"end": 1747,
											"name": "AND",
											"source": 42
										},
										{
											"begin": 1702,
											"end": 1747,
											"name": "DUP2",
											"source": 42
										},
										{
											"begin": 1702,
											"end": 1747,
											"name": "JUMP",
											"source": 42
										},
										{
											"begin": 3173,
											"end": 3906,
											"name": "tag",
											"source": 42,
											"value": "11"
										},
										{
											"begin": 3173,
											"end": 3906,
											"name": "JUMPDEST",
											"source": 42
										},
										{
											"begin": 3173,
											"end": 3906,
											"name": "PUSH [tag]",
											"source": 42,
											"value": "23"
										},
										{
											"begin": 3173,
											"end": 3906,
											"name": "PUSH [tag]",
											"source": 42,
											"value": "56"
										},
										{
											"begin": 3173,
											"end": 3906,
											"name": "CALLDATASIZE",
											"source": 42
										},
										{
											"begin": 3173,
											"end": 3906,
											"name": "PUSH",
											"source": 42,
											"value": "4"
										},
										{
											"begin": 3173,
											"end": 3906,
											"name": "PUSH [tag]",
											"source": 42,
											"value": "57"
										},
										{
											"begin": 3173,
											"end": 3906,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 42
										},
										{
											"begin": 3173,
											"end": 3906,
											"name": "tag",
											"source": 42,
											"value": "56"
										},
										{
											"begin": 3173,
											"end": 3906,
											"name": "JUMPDEST",
											"source": 42
										},
										{
											"begin": 3173,
											"end": 3906,
											"name": "PUSH [tag]",
											"source": 42,
											"value": "58"
										},
										{
											"begin": 3173,
											"end": 3906,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 42
										},
										{
											"begin": 2941,
											"end": 3167,
											"name": "tag",
											"source": 42,
											"value": "12"
										},
										{
											"begin": 2941,
											"end": 3167,
											"name": "JUMPDEST",
											"source": 42
										},
										{
											"begin": 2941,
											"end": 3167,
											"name": "PUSH [tag]",
											"source": 42,
											"value": "27"
										},
										{
											"begin": 2941,
											"end": 3167,
											"name": "PUSH [tag]",
											"source": 42,
											"value": "60"
										},
										{
											"begin": 2941,
											"end": 3167,
											"name": "CALLDATASIZE",
											"source": 42
										},
										{
											"begin": 2941,
											"end": 3167,
											"name": "PUSH",
											"source": 42,
											"value": "4"
										},
										{
											"begin": 2941,
											"end": 3167,
											"name": "PUSH [tag]",
											"source": 42,
											"value": "29"
										},
										{
											"begin": 2941,
											"end": 3167,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 42
										},
										{
											"begin": 2941,
											"end": 3167,
											"name": "tag",
											"source": 42,
											"value": "60"
										},
										{
											"begin": 2941,
											"end": 3167,
											"name": "JUMPDEST",
											"source": 42
										},
										{
											"begin": 2941,
											"end": 3167,
											"name": "PUSH [tag]",
											"source": 42,
											"value": "61"
										},
										{
											"begin": 2941,
											"end": 3167,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 42
										},
										{
											"begin": 3912,
											"end": 4101,
											"name": "tag",
											"source": 42,
											"value": "13"
										},
										{
											"begin": 3912,
											"end": 4101,
											"name": "JUMPDEST",
											"source": 42
										},
										{
											"begin": 3912,
											"end": 4101,
											"name": "PUSH [tag]",
											"source": 42,
											"value": "27"
										},
										{
											"begin": 3912,
											"end": 4101,
											"name": "PUSH [tag]",
											"source": 42,
											"value": "64"
										},
										{
											"begin": 3912,
											"end": 4101,
											"name": "CALLDATASIZE",
											"source": 42
										},
										{
											"begin": 3912,
											"end": 4101,
											"name": "PUSH",
											"source": 42,
											"value": "4"
										},
										{
											"begin": 3912,
											"end": 4101,
											"name": "PUSH [tag]",
											"source": 42,
											"value": "29"
										},
										{
											"begin": 3912,
											"end": 4101,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 42
										},
										{
											"begin": 3912,
											"end": 4101,
											"name": "tag",
											"source": 42,
											"value": "64"
										},
										{
											"begin": 3912,
											"end": 4101,
											"name": "JUMPDEST",
											"source": 42
										},
										{
											"begin": 3912,
											"end": 4101,
											"name": "PUSH [tag]",
											"source": 42,
											"value": "65"
										},
										{
											"begin": 3912,
											"end": 4101,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 42
										},
										{
											"begin": 1855,
											"end": 1875,
											"name": "tag",
											"source": 42,
											"value": "14"
										},
										{
											"begin": 1855,
											"end": 1875,
											"name": "JUMPDEST",
											"source": 42
										},
										{
											"begin": 1855,
											"end": 1875,
											"name": "PUSH [tag]",
											"source": 42,
											"value": "47"
										},
										{
											"begin": 1855,
											"end": 1875,
											"name": "PUSH [tag]",
											"source": 42,
											"value": "68"
										},
										{
											"begin": 1855,
											"end": 1875,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 42
										},
										{
											"begin": 1820,
											"end": 1849,
											"name": "tag",
											"source": 42,
											"value": "15"
										},
										{
											"begin": 1820,
											"end": 1849,
											"name": "JUMPDEST",
											"source": 42
										},
										{
											"begin": 1820,
											"end": 1849,
											"name": "PUSH [tag]",
											"source": 42,
											"value": "47"
										},
										{
											"begin": 1820,
											"end": 1849,
											"name": "PUSH [tag]",
											"source": 42,
											"value": "71"
										},
										{
											"begin": 1820,
											"end": 1849,
											"name": "CALLDATASIZE",
											"source": 42
										},
										{
											"begin": 1820,
											"end": 1849,
											"name": "PUSH",
											"source": 42,
											"value": "4"
										},
										{
											"begin": 1820,
											"end": 1849,
											"name": "PUSH [tag]",
											"source": 42,
											"value": "29"
										},
										{
											"begin": 1820,
											"end": 1849,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 42
										},
										{
											"begin": 1820,
											"end": 1849,
											"name": "tag",
											"source": 42,
											"value": "71"
										},
										{
											"begin": 1820,
											"end": 1849,
											"name": "JUMPDEST",
											"source": 42
										},
										{
											"begin": 1820,
											"end": 1849,
											"name": "PUSH [tag]",
											"source": 42,
											"value": "72"
										},
										{
											"begin": 1820,
											"end": 1849,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 42
										},
										{
											"begin": 2141,
											"end": 2935,
											"name": "tag",
											"source": 42,
											"value": "26"
										},
										{
											"begin": 2141,
											"end": 2935,
											"name": "JUMPDEST",
											"source": 42
										},
										{
											"begin": 2297,
											"end": 2314,
											"name": "PUSH",
											"source": 42,
											"value": "0"
										},
										{
											"begin": 2344,
											"end": 2356,
											"name": "DUP3",
											"source": 42
										},
										{
											"begin": 2327,
											"end": 2357,
											"name": "PUSH",
											"source": 42,
											"value": "40"
										},
										{
											"begin": 2327,
											"end": 2357,
											"name": "MLOAD",
											"source": 42
										},
										{
											"begin": 2327,
											"end": 2357,
											"name": "PUSH",
											"source": 42,
											"value": "20"
										},
										{
											"begin": 2327,
											"end": 2357,
											"name": "ADD",
											"source": 42
										},
										{
											"begin": 2327,
											"end": 2357,
											"name": "PUSH [tag]",
											"source": 42,
											"value": "75"
										},
										{
											"begin": 2327,
											"end": 2357,
											"name": "SWAP2",
											"source": 42
										},
										{
											"begin": 4353,
											"end": 4372,
											"name": "DUP2",
											"source": 43
										},
										{
											"begin": 4353,
											"end": 4372,
											"name": "MSTORE",
											"source": 43
										},
										{
											"begin": 4397,
											"end": 4399,
											"name": "PUSH",
											"source": 43,
											"value": "20"
										},
										{
											"begin": 4388,
											"end": 4400,
											"name": "ADD",
											"source": 43
										},
										{
											"begin": 4388,
											"end": 4400,
											"name": "SWAP1",
											"source": 43
										},
										{
											"begin": 4224,
											"end": 4406,
											"name": "JUMP",
											"source": 43
										},
										{
											"begin": 2327,
											"end": 2357,
											"name": "tag",
											"source": 42,
											"value": "75"
										},
										{
											"begin": 2327,
											"end": 2357,
											"name": "JUMPDEST",
											"source": 42
										},
										{
											"begin": 2327,
											"end": 2357,
											"name": "PUSH",
											"source": 42,
											"value": "40"
										},
										{
											"begin": 2327,
											"end": 2357,
											"name": "DUP1",
											"source": 42
										},
										{
											"begin": 2327,
											"end": 2357,
											"name": "MLOAD",
											"source": 42
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2327,
											"end": 2357,
											"name": "DUP2",
											"source": 42
										},
										{
											"begin": 2327,
											"end": 2357,
											"name": "DUP5",
											"source": 42
										},
										{
											"begin": 2327,
											"end": 2357,
											"name": "SUB",
											"source": 42
										},
										{
											"begin": 2327,
											"end": 2357,
											"name": "ADD",
											"source": 42
										},
										{
											"begin": 2327,
											"end": 2357,
											"name": "DUP2",
											"source": 42
										},
										{
											"begin": 2327,
											"end": 2357,
											"name": "MSTORE",
											"source": 42
										},
										{
											"begin": 2327,
											"end": 2357,
											"name": "SWAP2",
											"source": 42
										},
										{
											"begin": 2327,
											"end": 2357,
											"name": "DUP2",
											"source": 42
										},
										{
											"begin": 2327,
											"end": 2357,
											"name": "MSTORE",
											"source": 42
										},
										{
											"begin": 2317,
											"end": 2358,
											"name": "DUP2",
											"source": 42
										},
										{
											"begin": 2317,
											"end": 2358,
											"name": "MLOAD",
											"source": 42
										},
										{
											"begin": 2327,
											"end": 2357,
											"name": "PUSH",
											"source": 42,
											"value": "20"
										},
										{
											"begin": 2317,
											"end": 2358,
											"name": "SWAP3",
											"source": 42
										},
										{
											"begin": 2317,
											"end": 2358,
											"name": "DUP4",
											"source": 42
										},
										{
											"begin": 2317,
											"end": 2358,
											"name": "ADD",
											"source": 42
										},
										{
											"begin": 2317,
											"end": 2358,
											"name": "KECCAK256",
											"source": 42
										},
										{
											"begin": 2389,
											"end": 2413,
											"name": "PUSH",
											"source": 42,
											"value": "0"
										},
										{
											"begin": 2389,
											"end": 2413,
											"name": "DUP2",
											"source": 42
										},
										{
											"begin": 2389,
											"end": 2413,
											"name": "DUP2",
											"source": 42
										},
										{
											"begin": 2389,
											"end": 2413,
											"name": "MSTORE",
											"source": 42
										},
										{
											"begin": 2389,
											"end": 2402,
											"name": "PUSH",
											"source": 42,
											"value": "3"
										},
										{
											"begin": 2389,
											"end": 2413,
											"name": "SWAP1",
											"source": 42
										},
										{
											"begin": 2389,
											"end": 2413,
											"name": "SWAP4",
											"source": 42
										},
										{
											"begin": 2389,
											"end": 2413,
											"name": "MSTORE",
											"source": 42
										},
										{
											"begin": 2389,
											"end": 2413,
											"name": "SWAP2",
											"source": 42
										},
										{
											"begin": 2389,
											"end": 2413,
											"name": "KECCAK256",
											"source": 42
										},
										{
											"begin": 2389,
											"end": 2413,
											"name": "SLOAD",
											"source": 42
										},
										{
											"begin": 2317,
											"end": 2358,
											"name": "SWAP1",
											"source": 42
										},
										{
											"begin": 2317,
											"end": 2358,
											"name": "SWAP2",
											"source": 42
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2389,
											"end": 2413,
											"name": "PUSH",
											"source": 42,
											"value": "FF"
										},
										{
											"begin": 2389,
											"end": 2413,
											"name": "AND",
											"source": 42
										},
										{
											"begin": 2389,
											"end": 2422,
											"name": "ISZERO",
											"source": 42
										},
										{
											"begin": 2368,
											"end": 2485,
											"name": "PUSH [tag]",
											"source": 42,
											"value": "77"
										},
										{
											"begin": 2368,
											"end": 2485,
											"name": "JUMPI",
											"source": 42
										},
										{
											"begin": 2368,
											"end": 2485,
											"name": "PUSH",
											"source": 42,
											"value": "40"
										},
										{
											"begin": 2368,
											"end": 2485,
											"name": "MLOAD",
											"source": 42
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2368,
											"end": 2485,
											"name": "DUP2",
											"source": 42
										},
										{
											"begin": 2368,
											"end": 2485,
											"name": "MSTORE",
											"source": 42
										},
										{
											"begin": 4613,
											"end": 4615,
											"name": "PUSH",
											"source": 43,
											"value": "20"
										},
										{
											"begin": 2368,
											"end": 2485,
											"name": "PUSH",
											"source": 42,
											"value": "4"
										},
										{
											"begin": 2368,
											"end": 2485,
											"name": "DUP3",
											"source": 42
										},
										{
											"begin": 2368,
											"end": 2485,
											"name": "ADD",
											"source": 42
										},
										{
											"begin": 4595,
											"end": 4616,
											"name": "MSTORE",
											"source": 43
										},
										{
											"begin": 4652,
											"end": 4654,
											"name": "PUSH",
											"source": 43,
											"value": "25"
										},
										{
											"begin": 4632,
											"end": 4650,
											"name": "PUSH",
											"source": 43,
											"value": "24"
										},
										{
											"begin": 4632,
											"end": 4650,
											"name": "DUP3",
											"source": 43
										},
										{
											"begin": 4632,
											"end": 4650,
											"name": "ADD",
											"source": 43
										},
										{
											"begin": 4625,
											"end": 4655,
											"name": "MSTORE",
											"source": 43
										},
										{
											"begin": 4691,
											"end": 4725,
											"name": "PUSH",
											"source": 43,
											"value": "43616E6469646174652068617320616C7265616479206265656E207265676973"
										},
										{
											"begin": 4671,
											"end": 4689,
											"name": "PUSH",
											"source": 43,
											"value": "44"
										},
										{
											"begin": 4671,
											"end": 4689,
											"name": "DUP3",
											"source": 43
										},
										{
											"begin": 4671,
											"end": 4689,
											"name": "ADD",
											"source": 43
										},
										{
											"begin": 4664,
											"end": 4726,
											"name": "MSTORE",
											"source": 43
										},
										{
											"begin": 4762,
											"end": 4769,
											"name": "PUSH",
											"source": 43,
											"value": "7465726564000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4742,
											"end": 4760,
											"name": "PUSH",
											"source": 43,
											"value": "64"
										},
										{
											"begin": 4742,
											"end": 4760,
											"name": "DUP3",
											"source": 43
										},
										{
											"begin": 4742,
											"end": 4760,
											"name": "ADD",
											"source": 43
										},
										{
											"begin": 4735,
											"end": 4770,
											"name": "MSTORE",
											"source": 43
										},
										{
											"begin": 4787,
											"end": 4806,
											"name": "PUSH",
											"source": 43,
											"value": "84"
										},
										{
											"begin": 4787,
											"end": 4806,
											"name": "ADD",
											"source": 43
										},
										{
											"begin": 2368,
											"end": 2485,
											"name": "tag",
											"source": 42,
											"value": "78"
										},
										{
											"begin": 2368,
											"end": 2485,
											"name": "JUMPDEST",
											"source": 42
										},
										{
											"begin": 2368,
											"end": 2485,
											"name": "PUSH",
											"source": 42,
											"value": "40"
										},
										{
											"begin": 2368,
											"end": 2485,
											"name": "MLOAD",
											"source": 42
										},
										{
											"begin": 2368,
											"end": 2485,
											"name": "DUP1",
											"source": 42
										},
										{
											"begin": 2368,
											"end": 2485,
											"name": "SWAP2",
											"source": 42
										},
										{
											"begin": 2368,
											"end": 2485,
											"name": "SUB",
											"source": 42
										},
										{
											"begin": 2368,
											"end": 2485,
											"name": "SWAP1",
											"source": 42
										},
										{
											"begin": 2368,
											"end": 2485,
											"name": "REVERT",
											"source": 42
										},
										{
											"begin": 2368,
											"end": 2485,
											"name": "tag",
											"source": 42,
											"value": "77"
										},
										{
											"begin": 2368,
											"end": 2485,
											"name": "JUMPDEST",
											"source": 42
										},
										{
											"begin": 2518,
											"end": 2530,
											"name": "PUSH",
											"source": 42,
											"value": "4"
										},
										{
											"begin": 2518,
											"end": 2530,
											"name": "SLOAD",
											"source": 42
										},
										{
											"begin": 2495,
											"end": 2515,
											"name": "PUSH",
											"source": 42,
											"value": "0"
										},
										{
											"begin": 2540,
											"end": 2570,
											"name": "DUP2",
											"source": 42
										},
										{
											"begin": 2540,
											"end": 2570,
											"name": "DUP2",
											"source": 42
										},
										{
											"begin": 2540,
											"end": 2570,
											"name": "MSTORE",
											"source": 42
										},
										{
											"begin": 2540,
											"end": 2556,
											"name": "PUSH",
											"source": 42,
											"value": "1"
										},
										{
											"begin": 2540,
											"end": 2570,
											"name": "PUSH",
											"source": 42,
											"value": "20"
										},
										{
											"begin": 2540,
											"end": 2570,
											"name": "MSTORE",
											"source": 42
										},
										{
											"begin": 2540,
											"end": 2570,
											"name": "PUSH",
											"source": 42,
											"value": "40"
										},
										{
											"begin": 2540,
											"end": 2570,
											"name": "SWAP1",
											"source": 42
										},
										{
											"begin": 2540,
											"end": 2570,
											"name": "KECCAK256",
											"source": 42
										},
										{
											"begin": 2540,
											"end": 2605,
											"name": "PUSH [tag]",
											"source": 42,
											"value": "80"
										},
										{
											"begin": 2589,
											"end": 2605,
											"name": "DUP7",
											"source": 42
										},
										{
											"begin": 2540,
											"end": 2570,
											"name": "DUP3",
											"source": 42
										},
										{
											"begin": 2540,
											"end": 2605,
											"name": "PUSH [tag]",
											"source": 42,
											"value": "81"
										},
										{
											"begin": 2540,
											"end": 2605,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 42
										},
										{
											"begin": 2540,
											"end": 2605,
											"name": "tag",
											"source": 42,
											"value": "80"
										},
										{
											"begin": 2540,
											"end": 2605,
											"name": "JUMPDEST",
											"source": 42
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2615,
											"end": 2645,
											"name": "PUSH",
											"source": 42,
											"value": "0"
										},
										{
											"begin": 2615,
											"end": 2645,
											"name": "DUP2",
											"source": 42
										},
										{
											"begin": 2615,
											"end": 2645,
											"name": "DUP2",
											"source": 42
										},
										{
											"begin": 2615,
											"end": 2645,
											"name": "MSTORE",
											"source": 42
										},
										{
											"begin": 2615,
											"end": 2631,
											"name": "PUSH",
											"source": 42,
											"value": "1"
										},
										{
											"begin": 2615,
											"end": 2645,
											"name": "PUSH",
											"source": 42,
											"value": "20"
										},
										{
											"begin": 2615,
											"end": 2645,
											"name": "DUP2",
											"source": 42
										},
										{
											"begin": 2615,
											"end": 2645,
											"name": "SWAP1",
											"source": 42
										},
										{
											"begin": 2615,
											"end": 2645,
											"name": "MSTORE",
											"source": 42
										},
										{
											"begin": 2615,
											"end": 2645,
											"name": "PUSH",
											"source": 42,
											"value": "40"
										},
										{
											"begin": 2615,
											"end": 2645,
											"name": "SWAP1",
											"source": 42
										},
										{
											"begin": 2615,
											"end": 2645,
											"name": "SWAP2",
											"source": 42
										},
										{
											"begin": 2615,
											"end": 2645,
											"name": "KECCAK256",
											"source": 42
										},
										{
											"begin": 2615,
											"end": 2657,
											"name": "SWAP1",
											"source": 42
										},
										{
											"begin": 2615,
											"end": 2657,
											"name": "DUP2",
											"source": 42
										},
										{
											"begin": 2615,
											"end": 2657,
											"name": "ADD",
											"source": 42
										},
										{
											"begin": 2615,
											"end": 2669,
											"name": "DUP4",
											"source": 42
										},
										{
											"begin": 2615,
											"end": 2669,
											"name": "SWAP1",
											"source": 42
										},
										{
											"begin": 2615,
											"end": 2669,
											"name": "SSTORE",
											"source": 42
										},
										{
											"begin": 2679,
											"end": 2719,
											"name": "PUSH",
											"source": 42,
											"value": "2"
										},
										{
											"begin": 2679,
											"end": 2719,
											"name": "ADD",
											"source": 42
										},
										{
											"begin": 2679,
											"end": 2732,
											"name": "PUSH [tag]",
											"source": 42,
											"value": "82"
										},
										{
											"begin": 2722,
											"end": 2732,
											"name": "DUP5",
											"source": 42
										},
										{
											"begin": 2679,
											"end": 2719,
											"name": "DUP3",
											"source": 42
										},
										{
											"begin": 2679,
											"end": 2732,
											"name": "PUSH [tag]",
											"source": 42,
											"value": "81"
										},
										{
											"begin": 2679,
											"end": 2732,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 42
										},
										{
											"begin": 2679,
											"end": 2732,
											"name": "tag",
											"source": 42,
											"value": "82"
										},
										{
											"begin": 2679,
											"end": 2732,
											"name": "JUMPDEST",
											"source": 42
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2742,
											"end": 2766,
											"name": "PUSH",
											"source": 42,
											"value": "0"
										},
										{
											"begin": 2742,
											"end": 2766,
											"name": "DUP3",
											"source": 42
										},
										{
											"begin": 2742,
											"end": 2766,
											"name": "DUP2",
											"source": 42
										},
										{
											"begin": 2742,
											"end": 2766,
											"name": "MSTORE",
											"source": 42
										},
										{
											"begin": 2742,
											"end": 2755,
											"name": "PUSH",
											"source": 42,
											"value": "3"
										},
										{
											"begin": 2742,
											"end": 2766,
											"name": "PUSH",
											"source": 42,
											"value": "20"
										},
										{
											"begin": 2742,
											"end": 2766,
											"name": "MSTORE",
											"source": 42
										},
										{
											"begin": 2742,
											"end": 2766,
											"name": "PUSH",
											"source": 42,
											"value": "40"
										},
										{
											"begin": 2742,
											"end": 2766,
											"name": "DUP2",
											"source": 42
										},
										{
											"begin": 2742,
											"end": 2766,
											"name": "KECCAK256",
											"source": 42
										},
										{
											"begin": 2742,
											"end": 2773,
											"name": "DUP1",
											"source": 42
										},
										{
											"begin": 2742,
											"end": 2773,
											"name": "SLOAD",
											"source": 42
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2742,
											"end": 2773,
											"name": "AND",
											"source": 42
										},
										{
											"begin": 2769,
											"end": 2773,
											"name": "PUSH",
											"source": 42,
											"value": "1"
										},
										{
											"begin": 2742,
											"end": 2773,
											"name": "SWAP1",
											"source": 42
										},
										{
											"begin": 2742,
											"end": 2773,
											"name": "DUP2",
											"source": 42
										},
										{
											"begin": 2742,
											"end": 2773,
											"name": "OR",
											"source": 42
										},
										{
											"begin": 2742,
											"end": 2773,
											"name": "SWAP1",
											"source": 42
										},
										{
											"begin": 2742,
											"end": 2773,
											"name": "SWAP2",
											"source": 42
										},
										{
											"begin": 2742,
											"end": 2773,
											"name": "SSTORE",
											"source": 42
										},
										{
											"begin": 2783,
											"end": 2796,
											"name": "PUSH",
											"source": 42,
											"value": "6"
										},
										{
											"begin": 2783,
											"end": 2813,
											"name": "DUP1",
											"source": 42
										},
										{
											"begin": 2783,
											"end": 2813,
											"name": "SLOAD",
											"source": 42
										},
										{
											"begin": 2783,
											"end": 2813,
											"name": "SWAP2",
											"source": 42
										},
										{
											"begin": 2783,
											"end": 2813,
											"name": "DUP3",
											"source": 42
										},
										{
											"begin": 2783,
											"end": 2813,
											"name": "ADD",
											"source": 42
										},
										{
											"begin": 2783,
											"end": 2813,
											"name": "DUP2",
											"source": 42
										},
										{
											"begin": 2783,
											"end": 2813,
											"name": "SSTORE",
											"source": 42
										},
										{
											"begin": 2783,
											"end": 2813,
											"name": "SWAP1",
											"source": 42
										},
										{
											"begin": 2783,
											"end": 2813,
											"name": "SWAP2",
											"source": 42
										},
										{
											"begin": 2783,
											"end": 2813,
											"name": "MSTORE",
											"source": 42
										},
										{
											"begin": 2783,
											"end": 2813,
											"name": "PUSH",
											"source": 42,
											"value": "F652222313E28459528D920B65115C16C04F3EFC82AAEDC97BE59F3F377C0D3F"
										},
										{
											"begin": 2783,
											"end": 2813,
											"name": "ADD",
											"source": 42
										},
										{
											"begin": 2783,
											"end": 2813,
											"name": "PUSH [tag]",
											"source": 42,
											"value": "84"
										},
										{
											"begin": 2802,
											"end": 2812,
											"name": "DUP5",
											"source": 42
										},
										{
											"begin": 2783,
											"end": 2813,
											"name": "DUP3",
											"source": 42
										},
										{
											"begin": 2783,
											"end": 2813,
											"name": "PUSH [tag]",
											"source": 42,
											"value": "81"
										},
										{
											"begin": 2783,
											"end": 2813,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 42
										},
										{
											"begin": 2783,
											"end": 2813,
											"name": "tag",
											"source": 42,
											"value": "84"
										},
										{
											"begin": 2783,
											"end": 2813,
											"name": "JUMPDEST",
											"source": 42
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2838,
											"end": 2850,
											"name": "PUSH",
											"source": 42,
											"value": "4"
										},
										{
											"begin": 2838,
											"end": 2850,
											"name": "SLOAD",
											"source": 42
										},
										{
											"begin": 2838,
											"end": 2854,
											"name": "PUSH [tag]",
											"source": 42,
											"value": "85"
										},
										{
											"begin": 2838,
											"end": 2854,
											"name": "SWAP1",
											"source": 42
										},
										{
											"begin": 2853,
											"end": 2854,
											"name": "PUSH",
											"source": 42,
											"value": "1"
										},
										{
											"begin": 2838,
											"end": 2854,
											"name": "PUSH [tag]",
											"source": 42,
											"value": "86"
										},
										{
											"begin": 2838,
											"end": 2854,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 42
										},
										{
											"begin": 2838,
											"end": 2854,
											"name": "tag",
											"source": 42,
											"value": "85"
										},
										{
											"begin": 2838,
											"end": 2854,
											"name": "JUMPDEST",
											"source": 42
										},
										{
											"begin": 2823,
											"end": 2835,
											"name": "PUSH",
											"source": 42,
											"value": "4"
										},
										{
											"begin": 2823,
											"end": 2854,
											"name": "SSTORE",
											"source": 42
										},
										{
											"begin": 2870,
											"end": 2928,
											"name": "PUSH",
											"source": 42,
											"value": "40"
										},
										{
											"begin": 2870,
											"end": 2928,
											"name": "MLOAD",
											"source": 42
										},
										{
											"begin": 2903,
											"end": 2915,
											"name": "DUP5",
											"source": 42
										},
										{
											"begin": 2903,
											"end": 2915,
											"name": "SWAP1",
											"source": 42
										},
										{
											"begin": 2870,
											"end": 2928,
											"name": "PUSH",
											"source": 42,
											"value": "DBBC48772584850C2086F66C22A3654C9E46524FF539FD9D72198D91CB7C13C0"
										},
										{
											"begin": 2870,
											"end": 2928,
											"name": "SWAP1",
											"source": 42
										},
										{
											"begin": 2870,
											"end": 2928,
											"name": "PUSH [tag]",
											"source": 42,
											"value": "87"
										},
										{
											"begin": 2870,
											"end": 2928,
											"name": "SWAP1",
											"source": 42
										},
										{
											"begin": 2885,
											"end": 2901,
											"name": "DUP9",
											"source": 42
										},
										{
											"begin": 2885,
											"end": 2901,
											"name": "SWAP1",
											"source": 42
										},
										{
											"begin": 2917,
											"end": 2927,
											"name": "DUP8",
											"source": 42
										},
										{
											"begin": 2917,
											"end": 2927,
											"name": "SWAP1",
											"source": 42
										},
										{
											"begin": 2870,
											"end": 2928,
											"name": "PUSH [tag]",
											"source": 42,
											"value": "88"
										},
										{
											"begin": 2870,
											"end": 2928,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 42
										},
										{
											"begin": 2870,
											"end": 2928,
											"name": "tag",
											"source": 42,
											"value": "87"
										},
										{
											"begin": 2870,
											"end": 2928,
											"name": "JUMPDEST",
											"source": 42
										},
										{
											"begin": 2870,
											"end": 2928,
											"name": "PUSH",
											"source": 42,
											"value": "40"
										},
										{
											"begin": 2870,
											"end": 2928,
											"name": "MLOAD",
											"source": 42
										},
										{
											"begin": 2870,
											"end": 2928,
											"name": "DUP1",
											"source": 42
										},
										{
											"begin": 2870,
											"end": 2928,
											"name": "SWAP2",
											"source": 42
										},
										{
											"begin": 2870,
											"end": 2928,
											"name": "SUB",
											"source": 42
										},
										{
											"begin": 2870,
											"end": 2928,
											"name": "SWAP1",
											"source": 42
										},
										{
											"begin": 2870,
											"end": 2928,
											"name": "LOG2",
											"source": 42
										},
										{
											"begin": 2287,
											"end": 2935,
											"name": "POP",
											"source": 42
										},
										{
											"begin": 2287,
											"end": 2935,
											"name": "POP",
											"source": 42
										},
										{
											"begin": 2141,
											"end": 2935,
											"name": "POP",
											"source": 42
										},
										{
											"begin": 2141,
											"end": 2935,
											"name": "POP",
											"source": 42
										},
										{
											"begin": 2141,
											"end": 2935,
											"name": "POP",
											"source": 42
										},
										{
											"begin": 2141,
											"end": 2935,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 42
										},
										{
											"begin": 1590,
											"end": 1650,
											"name": "tag",
											"source": 42,
											"value": "44"
										},
										{
											"begin": 1590,
											"end": 1650,
											"name": "JUMPDEST",
											"source": 42
										},
										{
											"begin": 1590,
											"end": 1650,
											"name": "PUSH",
											"source": 42,
											"value": "1"
										},
										{
											"begin": 1590,
											"end": 1650,
											"name": "PUSH",
											"source": 42,
											"value": "20"
										},
										{
											"begin": 1590,
											"end": 1650,
											"name": "MSTORE",
											"source": 42
										},
										{
											"begin": 1590,
											"end": 1650,
											"name": "PUSH",
											"source": 42,
											"value": "0"
										},
										{
											"begin": 1590,
											"end": 1650,
											"name": "SWAP1",
											"source": 42
										},
										{
											"begin": 1590,
											"end": 1650,
											"name": "DUP2",
											"source": 42
										},
										{
											"begin": 1590,
											"end": 1650,
											"name": "MSTORE",
											"source": 42
										},
										{
											"begin": 1590,
											"end": 1650,
											"name": "PUSH",
											"source": 42,
											"value": "40"
										},
										{
											"begin": 1590,
											"end": 1650,
											"name": "SWAP1",
											"source": 42
										},
										{
											"begin": 1590,
											"end": 1650,
											"name": "KECCAK256",
											"source": 42
										},
										{
											"begin": 1590,
											"end": 1650,
											"name": "DUP1",
											"source": 42
										},
										{
											"begin": 1590,
											"end": 1650,
											"name": "SLOAD",
											"source": 42
										},
										{
											"begin": 1590,
											"end": 1650,
											"name": "DUP2",
											"source": 42
										},
										{
											"begin": 1590,
											"end": 1650,
											"name": "SWAP1",
											"source": 42
										},
										{
											"begin": 1590,
											"end": 1650,
											"name": "PUSH [tag]",
											"source": 42,
											"value": "89"
										},
										{
											"begin": 1590,
											"end": 1650,
											"name": "SWAP1",
											"source": 42
										},
										{
											"begin": 1590,
											"end": 1650,
											"name": "PUSH [tag]",
											"source": 42,
											"value": "90"
										},
										{
											"begin": 1590,
											"end": 1650,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 42
										},
										{
											"begin": 1590,
											"end": 1650,
											"name": "tag",
											"source": 42,
											"value": "89"
										},
										{
											"begin": 1590,
											"end": 1650,
											"name": "JUMPDEST",
											"source": 42
										},
										{
											"begin": 1590,
											"end": 1650,
											"name": "DUP1",
											"source": 42
										},
										{
											"begin": 1590,
											"end": 1650,
											"name": "PUSH",
											"source": 42,
											"value": "1F"
										},
										{
											"begin": 1590,
											"end": 1650,
											"name": "ADD",
											"source": 42
										},
										{
											"begin": 1590,
											"end": 1650,
											"name": "PUSH",
											"source": 42,
											"value": "20"
										},
										{
											"begin": 1590,
											"end": 1650,
											"name": "DUP1",
											"source": 42
										},
										{
											"begin": 1590,
											"end": 1650,
											"name": "SWAP2",
											"source": 42
										},
										{
											"begin": 1590,
											"end": 1650,
											"name": "DIV",
											"source": 42
										},
										{
											"begin": 1590,
											"end": 1650,
											"name": "MUL",
											"source": 42
										},
										{
											"begin": 1590,
											"end": 1650,
											"name": "PUSH",
											"source": 42,
											"value": "20"
										},
										{
											"begin": 1590,
											"end": 1650,
											"name": "ADD",
											"source": 42
										},
										{
											"begin": 1590,
											"end": 1650,
											"name": "PUSH",
											"source": 42,
											"value": "40"
										},
										{
											"begin": 1590,
											"end": 1650,
											"name": "MLOAD",
											"source": 42
										},
										{
											"begin": 1590,
											"end": 1650,
											"name": "SWAP1",
											"source": 42
										},
										{
											"begin": 1590,
											"end": 1650,
											"name": "DUP2",
											"source": 42
										},
										{
											"begin": 1590,
											"end": 1650,
											"name": "ADD",
											"source": 42
										},
										{
											"begin": 1590,
											"end": 1650,
											"name": "PUSH",
											"source": 42,
											"value": "40"
										},
										{
											"begin": 1590,
											"end": 1650,
											"name": "MSTORE",
											"source": 42
										},
										{
											"begin": 1590,
											"end": 1650,
											"name": "DUP1",
											"source": 42
										},
										{
											"begin": 1590,
											"end": 1650,
											"name": "SWAP3",
											"source": 42
										},
										{
											"begin": 1590,
											"end": 1650,
											"name": "SWAP2",
											"source": 42
										},
										{
											"begin": 1590,
											"end": 1650,
											"name": "SWAP1",
											"source": 42
										},
										{
											"begin": 1590,
											"end": 1650,
											"name": "DUP2",
											"source": 42
										},
										{
											"begin": 1590,
											"end": 1650,
											"name": "DUP2",
											"source": 42
										},
										{
											"begin": 1590,
											"end": 1650,
											"name": "MSTORE",
											"source": 42
										},
										{
											"begin": 1590,
											"end": 1650,
											"name": "PUSH",
											"source": 42,
											"value": "20"
										},
										{
											"begin": 1590,
											"end": 1650,
											"name": "ADD",
											"source": 42
										},
										{
											"begin": 1590,
											"end": 1650,
											"name": "DUP3",
											"source": 42
										},
										{
											"begin": 1590,
											"end": 1650,
											"name": "DUP1",
											"source": 42
										},
										{
											"begin": 1590,
											"end": 1650,
											"name": "SLOAD",
											"source": 42
										},
										{
											"begin": 1590,
											"end": 1650,
											"name": "PUSH [tag]",
											"source": 42,
											"value": "91"
										},
										{
											"begin": 1590,
											"end": 1650,
											"name": "SWAP1",
											"source": 42
										},
										{
											"begin": 1590,
											"end": 1650,
											"name": "PUSH [tag]",
											"source": 42,
											"value": "90"
										},
										{
											"begin": 1590,
											"end": 1650,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 42
										},
										{
											"begin": 1590,
											"end": 1650,
											"name": "tag",
											"source": 42,
											"value": "91"
										},
										{
											"begin": 1590,
											"end": 1650,
											"name": "JUMPDEST",
											"source": 42
										},
										{
											"begin": 1590,
											"end": 1650,
											"name": "DUP1",
											"source": 42
										},
										{
											"begin": 1590,
											"end": 1650,
											"name": "ISZERO",
											"source": 42
										},
										{
											"begin": 1590,
											"end": 1650,
											"name": "PUSH [tag]",
											"source": 42,
											"value": "92"
										},
										{
											"begin": 1590,
											"end": 1650,
											"name": "JUMPI",
											"source": 42
										},
										{
											"begin": 1590,
											"end": 1650,
											"name": "DUP1",
											"source": 42
										},
										{
											"begin": 1590,
											"end": 1650,
											"name": "PUSH",
											"source": 42,
											"value": "1F"
										},
										{
											"begin": 1590,
											"end": 1650,
											"name": "LT",
											"source": 42
										},
										{
											"begin": 1590,
											"end": 1650,
											"name": "PUSH [tag]",
											"source": 42,
											"value": "93"
										},
										{
											"begin": 1590,
											"end": 1650,
											"name": "JUMPI",
											"source": 42
										},
										{
											"begin": 1590,
											"end": 1650,
											"name": "PUSH",
											"source": 42,
											"value": "100"
										},
										{
											"begin": 1590,
											"end": 1650,
											"name": "DUP1",
											"source": 42
										},
										{
											"begin": 1590,
											"end": 1650,
											"name": "DUP4",
											"source": 42
										},
										{
											"begin": 1590,
											"end": 1650,
											"name": "SLOAD",
											"source": 42
										},
										{
											"begin": 1590,
											"end": 1650,
											"name": "DIV",
											"source": 42
										},
										{
											"begin": 1590,
											"end": 1650,
											"name": "MUL",
											"source": 42
										},
										{
											"begin": 1590,
											"end": 1650,
											"name": "DUP4",
											"source": 42
										},
										{
											"begin": 1590,
											"end": 1650,
											"name": "MSTORE",
											"source": 42
										},
										{
											"begin": 1590,
											"end": 1650,
											"name": "SWAP2",
											"source": 42
										},
										{
											"begin": 1590,
											"end": 1650,
											"name": "PUSH",
											"source": 42,
											"value": "20"
										},
										{
											"begin": 1590,
											"end": 1650,
											"name": "ADD",
											"source": 42
										},
										{
											"begin": 1590,
											"end": 1650,
											"name": "SWAP2",
											"source": 42
										},
										{
											"begin": 1590,
											"end": 1650,
											"name": "PUSH [tag]",
											"source": 42,
											"value": "92"
										},
										{
											"begin": 1590,
											"end": 1650,
											"name": "JUMP",
											"source": 42
										},
										{
											"begin": 1590,
											"end": 1650,
											"name": "tag",
											"source": 42,
											"value": "93"
										},
										{
											"begin": 1590,
											"end": 1650,
											"name": "JUMPDEST",
											"source": 42
										},
										{
											"begin": 1590,
											"end": 1650,
											"name": "DUP3",
											"source": 42
										},
										{
											"begin": 1590,
											"end": 1650,
											"name": "ADD",
											"source": 42
										},
										{
											"begin": 1590,
											"end": 1650,
											"name": "SWAP2",
											"source": 42
										},
										{
											"begin": 1590,
											"end": 1650,
											"name": "SWAP1",
											"source": 42
										},
										{
											"begin": 1590,
											"end": 1650,
											"name": "PUSH",
											"source": 42,
											"value": "0"
										},
										{
											"begin": 1590,
											"end": 1650,
											"name": "MSTORE",
											"source": 42
										},
										{
											"begin": 1590,
											"end": 1650,
											"name": "PUSH",
											"source": 42,
											"value": "20"
										},
										{
											"begin": 1590,
											"end": 1650,
											"name": "PUSH",
											"source": 42,
											"value": "0"
										},
										{
											"begin": 1590,
											"end": 1650,
											"name": "KECCAK256",
											"source": 42
										},
										{
											"begin": 1590,
											"end": 1650,
											"name": "SWAP1",
											"source": 42
										},
										{
											"begin": 1590,
											"end": 1650,
											"name": "tag",
											"source": 42,
											"value": "94"
										},
										{
											"begin": 1590,
											"end": 1650,
											"name": "JUMPDEST",
											"source": 42
										},
										{
											"begin": 1590,
											"end": 1650,
											"name": "DUP2",
											"source": 42
										},
										{
											"begin": 1590,
											"end": 1650,
											"name": "SLOAD",
											"source": 42
										},
										{
											"begin": 1590,
											"end": 1650,
											"name": "DUP2",
											"source": 42
										},
										{
											"begin": 1590,
											"end": 1650,
											"name": "MSTORE",
											"source": 42
										},
										{
											"begin": 1590,
											"end": 1650,
											"name": "SWAP1",
											"source": 42
										},
										{
											"begin": 1590,
											"end": 1650,
											"name": "PUSH",
											"source": 42,
											"value": "1"
										},
										{
											"begin": 1590,
											"end": 1650,
											"name": "ADD",
											"source": 42
										},
										{
											"begin": 1590,
											"end": 1650,
											"name": "SWAP1",
											"source": 42
										},
										{
											"begin": 1590,
											"end": 1650,
											"name": "PUSH",
											"source": 42,
											"value": "20"
										},
										{
											"begin": 1590,
											"end": 1650,
											"name": "ADD",
											"source": 42
										},
										{
											"begin": 1590,
											"end": 1650,
											"name": "DUP1",
											"source": 42
										},
										{
											"begin": 1590,
											"end": 1650,
											"name": "DUP4",
											"source": 42
										},
										{
											"begin": 1590,
											"end": 1650,
											"name": "GT",
											"source": 42
										},
										{
											"begin": 1590,
											"end": 1650,
											"name": "PUSH [tag]",
											"source": 42,
											"value": "94"
										},
										{
											"begin": 1590,
											"end": 1650,
											"name": "JUMPI",
											"source": 42
										},
										{
											"begin": 1590,
											"end": 1650,
											"name": "DUP3",
											"source": 42
										},
										{
											"begin": 1590,
											"end": 1650,
											"name": "SWAP1",
											"source": 42
										},
										{
											"begin": 1590,
											"end": 1650,
											"name": "SUB",
											"source": 42
										},
										{
											"begin": 1590,
											"end": 1650,
											"name": "PUSH",
											"source": 42,
											"value": "1F"
										},
										{
											"begin": 1590,
											"end": 1650,
											"name": "AND",
											"source": 42
										},
										{
											"begin": 1590,
											"end": 1650,
											"name": "DUP3",
											"source": 42
										},
										{
											"begin": 1590,
											"end": 1650,
											"name": "ADD",
											"source": 42
										},
										{
											"begin": 1590,
											"end": 1650,
											"name": "SWAP2",
											"source": 42
										},
										{
											"begin": 1590,
											"end": 1650,
											"name": "tag",
											"source": 42,
											"value": "92"
										},
										{
											"begin": 1590,
											"end": 1650,
											"name": "JUMPDEST",
											"source": 42
										},
										{
											"begin": 1590,
											"end": 1650,
											"name": "POP",
											"source": 42
										},
										{
											"begin": 1590,
											"end": 1650,
											"name": "POP",
											"source": 42
										},
										{
											"begin": 1590,
											"end": 1650,
											"name": "POP",
											"source": 42
										},
										{
											"begin": 1590,
											"end": 1650,
											"name": "POP",
											"source": 42
										},
										{
											"begin": 1590,
											"end": 1650,
											"name": "POP",
											"source": 42
										},
										{
											"begin": 1590,
											"end": 1650,
											"name": "SWAP1",
											"source": 42
										},
										{
											"begin": 1590,
											"end": 1650,
											"name": "DUP1",
											"source": 42
										},
										{
											"begin": 1590,
											"end": 1650,
											"name": "PUSH",
											"source": 42,
											"value": "1"
										},
										{
											"begin": 1590,
											"end": 1650,
											"name": "ADD",
											"source": 42
										},
										{
											"begin": 1590,
											"end": 1650,
											"name": "SLOAD",
											"source": 42
										},
										{
											"begin": 1590,
											"end": 1650,
											"name": "SWAP1",
											"source": 42
										},
										{
											"begin": 1590,
											"end": 1650,
											"name": "DUP1",
											"source": 42
										},
										{
											"begin": 1590,
											"end": 1650,
											"name": "PUSH",
											"source": 42,
											"value": "2"
										},
										{
											"begin": 1590,
											"end": 1650,
											"name": "ADD",
											"source": 42
										},
										{
											"begin": 1590,
											"end": 1650,
											"name": "DUP1",
											"source": 42
										},
										{
											"begin": 1590,
											"end": 1650,
											"name": "SLOAD",
											"source": 42
										},
										{
											"begin": 1590,
											"end": 1650,
											"name": "PUSH [tag]",
											"source": 42,
											"value": "95"
										},
										{
											"begin": 1590,
											"end": 1650,
											"name": "SWAP1",
											"source": 42
										},
										{
											"begin": 1590,
											"end": 1650,
											"name": "PUSH [tag]",
											"source": 42,
											"value": "90"
										},
										{
											"begin": 1590,
											"end": 1650,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 42
										},
										{
											"begin": 1590,
											"end": 1650,
											"name": "tag",
											"source": 42,
											"value": "95"
										},
										{
											"begin": 1590,
											"end": 1650,
											"name": "JUMPDEST",
											"source": 42
										},
										{
											"begin": 1590,
											"end": 1650,
											"name": "DUP1",
											"source": 42
										},
										{
											"begin": 1590,
											"end": 1650,
											"name": "PUSH",
											"source": 42,
											"value": "1F"
										},
										{
											"begin": 1590,
											"end": 1650,
											"name": "ADD",
											"source": 42
										},
										{
											"begin": 1590,
											"end": 1650,
											"name": "PUSH",
											"source": 42,
											"value": "20"
										},
										{
											"begin": 1590,
											"end": 1650,
											"name": "DUP1",
											"source": 42
										},
										{
											"begin": 1590,
											"end": 1650,
											"name": "SWAP2",
											"source": 42
										},
										{
											"begin": 1590,
											"end": 1650,
											"name": "DIV",
											"source": 42
										},
										{
											"begin": 1590,
											"end": 1650,
											"name": "MUL",
											"source": 42
										},
										{
											"begin": 1590,
											"end": 1650,
											"name": "PUSH",
											"source": 42,
											"value": "20"
										},
										{
											"begin": 1590,
											"end": 1650,
											"name": "ADD",
											"source": 42
										},
										{
											"begin": 1590,
											"end": 1650,
											"name": "PUSH",
											"source": 42,
											"value": "40"
										},
										{
											"begin": 1590,
											"end": 1650,
											"name": "MLOAD",
											"source": 42
										},
										{
											"begin": 1590,
											"end": 1650,
											"name": "SWAP1",
											"source": 42
										},
										{
											"begin": 1590,
											"end": 1650,
											"name": "DUP2",
											"source": 42
										},
										{
											"begin": 1590,
											"end": 1650,
											"name": "ADD",
											"source": 42
										},
										{
											"begin": 1590,
											"end": 1650,
											"name": "PUSH",
											"source": 42,
											"value": "40"
										},
										{
											"begin": 1590,
											"end": 1650,
											"name": "MSTORE",
											"source": 42
										},
										{
											"begin": 1590,
											"end": 1650,
											"name": "DUP1",
											"source": 42
										},
										{
											"begin": 1590,
											"end": 1650,
											"name": "SWAP3",
											"source": 42
										},
										{
											"begin": 1590,
											"end": 1650,
											"name": "SWAP2",
											"source": 42
										},
										{
											"begin": 1590,
											"end": 1650,
											"name": "SWAP1",
											"source": 42
										},
										{
											"begin": 1590,
											"end": 1650,
											"name": "DUP2",
											"source": 42
										},
										{
											"begin": 1590,
											"end": 1650,
											"name": "DUP2",
											"source": 42
										},
										{
											"begin": 1590,
											"end": 1650,
											"name": "MSTORE",
											"source": 42
										},
										{
											"begin": 1590,
											"end": 1650,
											"name": "PUSH",
											"source": 42,
											"value": "20"
										},
										{
											"begin": 1590,
											"end": 1650,
											"name": "ADD",
											"source": 42
										},
										{
											"begin": 1590,
											"end": 1650,
											"name": "DUP3",
											"source": 42
										},
										{
											"begin": 1590,
											"end": 1650,
											"name": "DUP1",
											"source": 42
										},
										{
											"begin": 1590,
											"end": 1650,
											"name": "SLOAD",
											"source": 42
										},
										{
											"begin": 1590,
											"end": 1650,
											"name": "PUSH [tag]",
											"source": 42,
											"value": "96"
										},
										{
											"begin": 1590,
											"end": 1650,
											"name": "SWAP1",
											"source": 42
										},
										{
											"begin": 1590,
											"end": 1650,
											"name": "PUSH [tag]",
											"source": 42,
											"value": "90"
										},
										{
											"begin": 1590,
											"end": 1650,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 42
										},
										{
											"begin": 1590,
											"end": 1650,
											"name": "tag",
											"source": 42,
											"value": "96"
										},
										{
											"begin": 1590,
											"end": 1650,
											"name": "JUMPDEST",
											"source": 42
										},
										{
											"begin": 1590,
											"end": 1650,
											"name": "DUP1",
											"source": 42
										},
										{
											"begin": 1590,
											"end": 1650,
											"name": "ISZERO",
											"source": 42
										},
										{
											"begin": 1590,
											"end": 1650,
											"name": "PUSH [tag]",
											"source": 42,
											"value": "97"
										},
										{
											"begin": 1590,
											"end": 1650,
											"name": "JUMPI",
											"source": 42
										},
										{
											"begin": 1590,
											"end": 1650,
											"name": "DUP1",
											"source": 42
										},
										{
											"begin": 1590,
											"end": 1650,
											"name": "PUSH",
											"source": 42,
											"value": "1F"
										},
										{
											"begin": 1590,
											"end": 1650,
											"name": "LT",
											"source": 42
										},
										{
											"begin": 1590,
											"end": 1650,
											"name": "PUSH [tag]",
											"source": 42,
											"value": "98"
										},
										{
											"begin": 1590,
											"end": 1650,
											"name": "JUMPI",
											"source": 42
										},
										{
											"begin": 1590,
											"end": 1650,
											"name": "PUSH",
											"source": 42,
											"value": "100"
										},
										{
											"begin": 1590,
											"end": 1650,
											"name": "DUP1",
											"source": 42
										},
										{
											"begin": 1590,
											"end": 1650,
											"name": "DUP4",
											"source": 42
										},
										{
											"begin": 1590,
											"end": 1650,
											"name": "SLOAD",
											"source": 42
										},
										{
											"begin": 1590,
											"end": 1650,
											"name": "DIV",
											"source": 42
										},
										{
											"begin": 1590,
											"end": 1650,
											"name": "MUL",
											"source": 42
										},
										{
											"begin": 1590,
											"end": 1650,
											"name": "DUP4",
											"source": 42
										},
										{
											"begin": 1590,
											"end": 1650,
											"name": "MSTORE",
											"source": 42
										},
										{
											"begin": 1590,
											"end": 1650,
											"name": "SWAP2",
											"source": 42
										},
										{
											"begin": 1590,
											"end": 1650,
											"name": "PUSH",
											"source": 42,
											"value": "20"
										},
										{
											"begin": 1590,
											"end": 1650,
											"name": "ADD",
											"source": 42
										},
										{
											"begin": 1590,
											"end": 1650,
											"name": "SWAP2",
											"source": 42
										},
										{
											"begin": 1590,
											"end": 1650,
											"name": "PUSH [tag]",
											"source": 42,
											"value": "97"
										},
										{
											"begin": 1590,
											"end": 1650,
											"name": "JUMP",
											"source": 42
										},
										{
											"begin": 1590,
											"end": 1650,
											"name": "tag",
											"source": 42,
											"value": "98"
										},
										{
											"begin": 1590,
											"end": 1650,
											"name": "JUMPDEST",
											"source": 42
										},
										{
											"begin": 1590,
											"end": 1650,
											"name": "DUP3",
											"source": 42
										},
										{
											"begin": 1590,
											"end": 1650,
											"name": "ADD",
											"source": 42
										},
										{
											"begin": 1590,
											"end": 1650,
											"name": "SWAP2",
											"source": 42
										},
										{
											"begin": 1590,
											"end": 1650,
											"name": "SWAP1",
											"source": 42
										},
										{
											"begin": 1590,
											"end": 1650,
											"name": "PUSH",
											"source": 42,
											"value": "0"
										},
										{
											"begin": 1590,
											"end": 1650,
											"name": "MSTORE",
											"source": 42
										},
										{
											"begin": 1590,
											"end": 1650,
											"name": "PUSH",
											"source": 42,
											"value": "20"
										},
										{
											"begin": 1590,
											"end": 1650,
											"name": "PUSH",
											"source": 42,
											"value": "0"
										},
										{
											"begin": 1590,
											"end": 1650,
											"name": "KECCAK256",
											"source": 42
										},
										{
											"begin": 1590,
											"end": 1650,
											"name": "SWAP1",
											"source": 42
										},
										{
											"begin": 1590,
											"end": 1650,
											"name": "tag",
											"source": 42,
											"value": "99"
										},
										{
											"begin": 1590,
											"end": 1650,
											"name": "JUMPDEST",
											"source": 42
										},
										{
											"begin": 1590,
											"end": 1650,
											"name": "DUP2",
											"source": 42
										},
										{
											"begin": 1590,
											"end": 1650,
											"name": "SLOAD",
											"source": 42
										},
										{
											"begin": 1590,
											"end": 1650,
											"name": "DUP2",
											"source": 42
										},
										{
											"begin": 1590,
											"end": 1650,
											"name": "MSTORE",
											"source": 42
										},
										{
											"begin": 1590,
											"end": 1650,
											"name": "SWAP1",
											"source": 42
										},
										{
											"begin": 1590,
											"end": 1650,
											"name": "PUSH",
											"source": 42,
											"value": "1"
										},
										{
											"begin": 1590,
											"end": 1650,
											"name": "ADD",
											"source": 42
										},
										{
											"begin": 1590,
											"end": 1650,
											"name": "SWAP1",
											"source": 42
										},
										{
											"begin": 1590,
											"end": 1650,
											"name": "PUSH",
											"source": 42,
											"value": "20"
										},
										{
											"begin": 1590,
											"end": 1650,
											"name": "ADD",
											"source": 42
										},
										{
											"begin": 1590,
											"end": 1650,
											"name": "DUP1",
											"source": 42
										},
										{
											"begin": 1590,
											"end": 1650,
											"name": "DUP4",
											"source": 42
										},
										{
											"begin": 1590,
											"end": 1650,
											"name": "GT",
											"source": 42
										},
										{
											"begin": 1590,
											"end": 1650,
											"name": "PUSH [tag]",
											"source": 42,
											"value": "99"
										},
										{
											"begin": 1590,
											"end": 1650,
											"name": "JUMPI",
											"source": 42
										},
										{
											"begin": 1590,
											"end": 1650,
											"name": "DUP3",
											"source": 42
										},
										{
											"begin": 1590,
											"end": 1650,
											"name": "SWAP1",
											"source": 42
										},
										{
											"begin": 1590,
											"end": 1650,
											"name": "SUB",
											"source": 42
										},
										{
											"begin": 1590,
											"end": 1650,
											"name": "PUSH",
											"source": 42,
											"value": "1F"
										},
										{
											"begin": 1590,
											"end": 1650,
											"name": "AND",
											"source": 42
										},
										{
											"begin": 1590,
											"end": 1650,
											"name": "DUP3",
											"source": 42
										},
										{
											"begin": 1590,
											"end": 1650,
											"name": "ADD",
											"source": 42
										},
										{
											"begin": 1590,
											"end": 1650,
											"name": "SWAP2",
											"source": 42
										},
										{
											"begin": 1590,
											"end": 1650,
											"name": "tag",
											"source": 42,
											"value": "97"
										},
										{
											"begin": 1590,
											"end": 1650,
											"name": "JUMPDEST",
											"source": 42
										},
										{
											"begin": 1590,
											"end": 1650,
											"name": "POP",
											"source": 42
										},
										{
											"begin": 1590,
											"end": 1650,
											"name": "POP",
											"source": 42
										},
										{
											"begin": 1590,
											"end": 1650,
											"name": "POP",
											"source": 42
										},
										{
											"begin": 1590,
											"end": 1650,
											"name": "POP",
											"source": 42
										},
										{
											"begin": 1590,
											"end": 1650,
											"name": "POP",
											"source": 42
										},
										{
											"begin": 1590,
											"end": 1650,
											"name": "SWAP1",
											"source": 42
										},
										{
											"begin": 1590,
											"end": 1650,
											"name": "DUP1",
											"source": 42
										},
										{
											"begin": 1590,
											"end": 1650,
											"name": "PUSH",
											"source": 42,
											"value": "3"
										},
										{
											"begin": 1590,
											"end": 1650,
											"name": "ADD",
											"source": 42
										},
										{
											"begin": 1590,
											"end": 1650,
											"name": "SLOAD",
											"source": 42
										},
										{
											"begin": 1590,
											"end": 1650,
											"name": "SWAP1",
											"source": 42
										},
										{
											"begin": 1590,
											"end": 1650,
											"name": "POP",
											"source": 42
										},
										{
											"begin": 1590,
											"end": 1650,
											"name": "DUP5",
											"source": 42
										},
										{
											"begin": 1590,
											"end": 1650,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 42
										},
										{
											"begin": 4107,
											"end": 4514,
											"name": "tag",
											"source": 42,
											"value": "48"
										},
										{
											"begin": 4107,
											"end": 4514,
											"name": "JUMPDEST",
											"source": 42
										},
										{
											"begin": 4141,
											"end": 4154,
											"name": "PUSH",
											"source": 42,
											"value": "60"
										},
										{
											"begin": 4166,
											"end": 4178,
											"name": "PUSH",
											"source": 42,
											"value": "0"
										},
										{
											"begin": 4188,
											"end": 4201,
											"name": "DUP1",
											"source": 42
										},
										{
											"begin": 4216,
											"end": 4225,
											"name": "PUSH",
											"source": 42,
											"value": "0"
										},
										{
											"begin": 4211,
											"end": 4426,
											"name": "tag",
											"source": 42,
											"value": "101"
										},
										{
											"begin": 4211,
											"end": 4426,
											"name": "JUMPDEST",
											"source": 42
										},
										{
											"begin": 4235,
											"end": 4248,
											"name": "PUSH",
											"source": 42,
											"value": "6"
										},
										{
											"begin": 4235,
											"end": 4255,
											"name": "SLOAD",
											"source": 42
										},
										{
											"begin": 4231,
											"end": 4255,
											"name": "DUP2",
											"source": 42
										},
										{
											"begin": 4231,
											"end": 4255,
											"name": "LT",
											"source": 42
										},
										{
											"begin": 4211,
											"end": 4426,
											"name": "ISZERO",
											"source": 42
										},
										{
											"begin": 4211,
											"end": 4426,
											"name": "PUSH [tag]",
											"source": 42,
											"value": "102"
										},
										{
											"begin": 4211,
											"end": 4426,
											"name": "JUMPI",
											"source": 42
										},
										{
											"begin": 4287,
											"end": 4306,
											"name": "PUSH",
											"source": 42,
											"value": "0"
										},
										{
											"begin": 4287,
											"end": 4306,
											"name": "DUP2",
											"source": 42
										},
										{
											"begin": 4287,
											"end": 4306,
											"name": "DUP2",
											"source": 42
										},
										{
											"begin": 4287,
											"end": 4306,
											"name": "MSTORE",
											"source": 42
										},
										{
											"begin": 4287,
											"end": 4303,
											"name": "PUSH",
											"source": 42,
											"value": "1"
										},
										{
											"begin": 4287,
											"end": 4306,
											"name": "PUSH",
											"source": 42,
											"value": "20"
										},
										{
											"begin": 4287,
											"end": 4306,
											"name": "MSTORE",
											"source": 42
										},
										{
											"begin": 4287,
											"end": 4306,
											"name": "PUSH",
											"source": 42,
											"value": "40"
										},
										{
											"begin": 4287,
											"end": 4306,
											"name": "SWAP1",
											"source": 42
										},
										{
											"begin": 4287,
											"end": 4306,
											"name": "KECCAK256",
											"source": 42
										},
										{
											"begin": 4287,
											"end": 4317,
											"name": "PUSH",
											"source": 42,
											"value": "3"
										},
										{
											"begin": 4287,
											"end": 4317,
											"name": "ADD",
											"source": 42
										},
										{
											"begin": 4287,
											"end": 4317,
											"name": "SLOAD",
											"source": 42
										},
										{
											"begin": 4280,
											"end": 4317,
											"name": "DUP4",
											"source": 42
										},
										{
											"begin": 4280,
											"end": 4317,
											"name": "LT",
											"source": 42
										},
										{
											"begin": 4276,
											"end": 4416,
											"name": "ISZERO",
											"source": 42
										},
										{
											"begin": 4276,
											"end": 4416,
											"name": "PUSH [tag]",
											"source": 42,
											"value": "104"
										},
										{
											"begin": 4276,
											"end": 4416,
											"name": "JUMPI",
											"source": 42
										},
										{
											"begin": 4344,
											"end": 4363,
											"name": "PUSH",
											"source": 42,
											"value": "0"
										},
										{
											"begin": 4344,
											"end": 4363,
											"name": "DUP2",
											"source": 42
										},
										{
											"begin": 4344,
											"end": 4363,
											"name": "DUP2",
											"source": 42
										},
										{
											"begin": 4344,
											"end": 4363,
											"name": "MSTORE",
											"source": 42
										},
										{
											"begin": 4344,
											"end": 4360,
											"name": "PUSH",
											"source": 42,
											"value": "1"
										},
										{
											"begin": 4344,
											"end": 4363,
											"name": "PUSH",
											"source": 42,
											"value": "20"
										},
										{
											"begin": 4344,
											"end": 4363,
											"name": "MSTORE",
											"source": 42
										},
										{
											"begin": 4344,
											"end": 4363,
											"name": "PUSH",
											"source": 42,
											"value": "40"
										},
										{
											"begin": 4344,
											"end": 4363,
											"name": "SWAP1",
											"source": 42
										},
										{
											"begin": 4344,
											"end": 4363,
											"name": "KECCAK256",
											"source": 42
										},
										{
											"begin": 4344,
											"end": 4374,
											"name": "PUSH",
											"source": 42,
											"value": "3"
										},
										{
											"begin": 4344,
											"end": 4374,
											"name": "ADD",
											"source": 42
										},
										{
											"begin": 4344,
											"end": 4374,
											"name": "SLOAD",
											"source": 42
										},
										{
											"begin": 4344,
											"end": 4374,
											"name": "SWAP3",
											"source": 42
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4361,
											"end": 4362,
											"name": "SWAP1",
											"source": 42
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4361,
											"end": 4362,
											"name": "DUP1",
											"source": 42
										},
										{
											"begin": 4276,
											"end": 4416,
											"name": "tag",
											"source": 42,
											"value": "104"
										},
										{
											"begin": 4276,
											"end": 4416,
											"name": "JUMPDEST",
											"source": 42
										},
										{
											"begin": 4257,
											"end": 4260,
											"name": "PUSH",
											"source": 42,
											"value": "1"
										},
										{
											"begin": 4257,
											"end": 4260,
											"name": "ADD",
											"source": 42
										},
										{
											"begin": 4211,
											"end": 4426,
											"name": "PUSH [tag]",
											"source": 42,
											"value": "101"
										},
										{
											"begin": 4211,
											"end": 4426,
											"name": "JUMP",
											"source": 42
										},
										{
											"begin": 4211,
											"end": 4426,
											"name": "tag",
											"source": 42,
											"value": "102"
										},
										{
											"begin": 4211,
											"end": 4426,
											"name": "JUMPDEST",
											"source": 42
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4445,
											"end": 4468,
											"name": "PUSH",
											"source": 42,
											"value": "0"
										},
										{
											"begin": 4445,
											"end": 4468,
											"name": "DUP2",
											"source": 42
										},
										{
											"begin": 4445,
											"end": 4468,
											"name": "DUP2",
											"source": 42
										},
										{
											"begin": 4445,
											"end": 4468,
											"name": "MSTORE",
											"source": 42
										},
										{
											"begin": 4445,
											"end": 4461,
											"name": "PUSH",
											"source": 42,
											"value": "1"
										},
										{
											"begin": 4445,
											"end": 4468,
											"name": "PUSH",
											"source": 42,
											"value": "20"
										},
										{
											"begin": 4445,
											"end": 4468,
											"name": "MSTORE",
											"source": 42
										},
										{
											"begin": 4445,
											"end": 4468,
											"name": "PUSH",
											"source": 42,
											"value": "40"
										},
										{
											"begin": 4445,
											"end": 4468,
											"name": "SWAP1",
											"source": 42
										},
										{
											"begin": 4445,
											"end": 4468,
											"name": "KECCAK256",
											"source": 42
										},
										{
											"begin": 4436,
											"end": 4442,
											"name": "PUSH",
											"source": 42,
											"value": "7"
										},
										{
											"begin": 4436,
											"end": 4442,
											"name": "SWAP1",
											"source": 42
										},
										{
											"begin": 4436,
											"end": 4484,
											"name": "PUSH [tag]",
											"source": 42,
											"value": "105"
										},
										{
											"begin": 4436,
											"end": 4484,
											"name": "SWAP1",
											"source": 42
										},
										{
											"begin": 4436,
											"end": 4442,
											"name": "DUP3",
											"source": 42
										},
										{
											"begin": 4436,
											"end": 4484,
											"name": "PUSH [tag]",
											"source": 42,
											"value": "106"
										},
										{
											"begin": 4436,
											"end": 4484,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 42
										},
										{
											"begin": 4436,
											"end": 4484,
											"name": "tag",
											"source": 42,
											"value": "105"
										},
										{
											"begin": 4436,
											"end": 4484,
											"name": "JUMPDEST",
											"source": 42
										},
										{
											"begin": 4436,
											"end": 4484,
											"name": "POP",
											"source": 42
										},
										{
											"begin": 4501,
											"end": 4507,
											"name": "PUSH",
											"source": 42,
											"value": "7"
										},
										{
											"begin": 4494,
											"end": 4507,
											"name": "DUP1",
											"source": 42
										},
										{
											"begin": 4494,
											"end": 4507,
											"name": "SLOAD",
											"source": 42
										},
										{
											"begin": 4494,
											"end": 4507,
											"name": "PUSH [tag]",
											"source": 42,
											"value": "107"
										},
										{
											"begin": 4494,
											"end": 4507,
											"name": "SWAP1",
											"source": 42
										},
										{
											"begin": 4494,
											"end": 4507,
											"name": "PUSH [tag]",
											"source": 42,
											"value": "90"
										},
										{
											"begin": 4494,
											"end": 4507,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 42
										},
										{
											"begin": 4494,
											"end": 4507,
											"name": "tag",
											"source": 42,
											"value": "107"
										},
										{
											"begin": 4494,
											"end": 4507,
											"name": "JUMPDEST",
											"source": 42
										},
										{
											"begin": 4494,
											"end": 4507,
											"name": "DUP1",
											"source": 42
										},
										{
											"begin": 4494,
											"end": 4507,
											"name": "PUSH",
											"source": 42,
											"value": "1F"
										},
										{
											"begin": 4494,
											"end": 4507,
											"name": "ADD",
											"source": 42
										},
										{
											"begin": 4494,
											"end": 4507,
											"name": "PUSH",
											"source": 42,
											"value": "20"
										},
										{
											"begin": 4494,
											"end": 4507,
											"name": "DUP1",
											"source": 42
										},
										{
											"begin": 4494,
											"end": 4507,
											"name": "SWAP2",
											"source": 42
										},
										{
											"begin": 4494,
											"end": 4507,
											"name": "DIV",
											"source": 42
										},
										{
											"begin": 4494,
											"end": 4507,
											"name": "MUL",
											"source": 42
										},
										{
											"begin": 4494,
											"end": 4507,
											"name": "PUSH",
											"source": 42,
											"value": "20"
										},
										{
											"begin": 4494,
											"end": 4507,
											"name": "ADD",
											"source": 42
										},
										{
											"begin": 4494,
											"end": 4507,
											"name": "PUSH",
											"source": 42,
											"value": "40"
										},
										{
											"begin": 4494,
											"end": 4507,
											"name": "MLOAD",
											"source": 42
										},
										{
											"begin": 4494,
											"end": 4507,
											"name": "SWAP1",
											"source": 42
										},
										{
											"begin": 4494,
											"end": 4507,
											"name": "DUP2",
											"source": 42
										},
										{
											"begin": 4494,
											"end": 4507,
											"name": "ADD",
											"source": 42
										},
										{
											"begin": 4494,
											"end": 4507,
											"name": "PUSH",
											"source": 42,
											"value": "40"
										},
										{
											"begin": 4494,
											"end": 4507,
											"name": "MSTORE",
											"source": 42
										},
										{
											"begin": 4494,
											"end": 4507,
											"name": "DUP1",
											"source": 42
										},
										{
											"begin": 4494,
											"end": 4507,
											"name": "SWAP3",
											"source": 42
										},
										{
											"begin": 4494,
											"end": 4507,
											"name": "SWAP2",
											"source": 42
										},
										{
											"begin": 4494,
											"end": 4507,
											"name": "SWAP1",
											"source": 42
										},
										{
											"begin": 4494,
											"end": 4507,
											"name": "DUP2",
											"source": 42
										},
										{
											"begin": 4494,
											"end": 4507,
											"name": "DUP2",
											"source": 42
										},
										{
											"begin": 4494,
											"end": 4507,
											"name": "MSTORE",
											"source": 42
										},
										{
											"begin": 4494,
											"end": 4507,
											"name": "PUSH",
											"source": 42,
											"value": "20"
										},
										{
											"begin": 4494,
											"end": 4507,
											"name": "ADD",
											"source": 42
										},
										{
											"begin": 4494,
											"end": 4507,
											"name": "DUP3",
											"source": 42
										},
										{
											"begin": 4494,
											"end": 4507,
											"name": "DUP1",
											"source": 42
										},
										{
											"begin": 4494,
											"end": 4507,
											"name": "SLOAD",
											"source": 42
										},
										{
											"begin": 4494,
											"end": 4507,
											"name": "PUSH [tag]",
											"source": 42,
											"value": "108"
										},
										{
											"begin": 4494,
											"end": 4507,
											"name": "SWAP1",
											"source": 42
										},
										{
											"begin": 4494,
											"end": 4507,
											"name": "PUSH [tag]",
											"source": 42,
											"value": "90"
										},
										{
											"begin": 4494,
											"end": 4507,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 42
										},
										{
											"begin": 4494,
											"end": 4507,
											"name": "tag",
											"source": 42,
											"value": "108"
										},
										{
											"begin": 4494,
											"end": 4507,
											"name": "JUMPDEST",
											"source": 42
										},
										{
											"begin": 4494,
											"end": 4507,
											"name": "DUP1",
											"source": 42
										},
										{
											"begin": 4494,
											"end": 4507,
											"name": "ISZERO",
											"source": 42
										},
										{
											"begin": 4494,
											"end": 4507,
											"name": "PUSH [tag]",
											"source": 42,
											"value": "109"
										},
										{
											"begin": 4494,
											"end": 4507,
											"name": "JUMPI",
											"source": 42
										},
										{
											"begin": 4494,
											"end": 4507,
											"name": "DUP1",
											"source": 42
										},
										{
											"begin": 4494,
											"end": 4507,
											"name": "PUSH",
											"source": 42,
											"value": "1F"
										},
										{
											"begin": 4494,
											"end": 4507,
											"name": "LT",
											"source": 42
										},
										{
											"begin": 4494,
											"end": 4507,
											"name": "PUSH [tag]",
											"source": 42,
											"value": "110"
										},
										{
											"begin": 4494,
											"end": 4507,
											"name": "JUMPI",
											"source": 42
										},
										{
											"begin": 4494,
											"end": 4507,
											"name": "PUSH",
											"source": 42,
											"value": "100"
										},
										{
											"begin": 4494,
											"end": 4507,
											"name": "DUP1",
											"source": 42
										},
										{
											"begin": 4494,
											"end": 4507,
											"name": "DUP4",
											"source": 42
										},
										{
											"begin": 4494,
											"end": 4507,
											"name": "SLOAD",
											"source": 42
										},
										{
											"begin": 4494,
											"end": 4507,
											"name": "DIV",
											"source": 42
										},
										{
											"begin": 4494,
											"end": 4507,
											"name": "MUL",
											"source": 42
										},
										{
											"begin": 4494,
											"end": 4507,
											"name": "DUP4",
											"source": 42
										},
										{
											"begin": 4494,
											"end": 4507,
											"name": "MSTORE",
											"source": 42
										},
										{
											"begin": 4494,
											"end": 4507,
											"name": "SWAP2",
											"source": 42
										},
										{
											"begin": 4494,
											"end": 4507,
											"name": "PUSH",
											"source": 42,
											"value": "20"
										},
										{
											"begin": 4494,
											"end": 4507,
											"name": "ADD",
											"source": 42
										},
										{
											"begin": 4494,
											"end": 4507,
											"name": "SWAP2",
											"source": 42
										},
										{
											"begin": 4494,
											"end": 4507,
											"name": "PUSH [tag]",
											"source": 42,
											"value": "109"
										},
										{
											"begin": 4494,
											"end": 4507,
											"name": "JUMP",
											"source": 42
										},
										{
											"begin": 4494,
											"end": 4507,
											"name": "tag",
											"source": 42,
											"value": "110"
										},
										{
											"begin": 4494,
											"end": 4507,
											"name": "JUMPDEST",
											"source": 42
										},
										{
											"begin": 4494,
											"end": 4507,
											"name": "DUP3",
											"source": 42
										},
										{
											"begin": 4494,
											"end": 4507,
											"name": "ADD",
											"source": 42
										},
										{
											"begin": 4494,
											"end": 4507,
											"name": "SWAP2",
											"source": 42
										},
										{
											"begin": 4494,
											"end": 4507,
											"name": "SWAP1",
											"source": 42
										},
										{
											"begin": 4494,
											"end": 4507,
											"name": "PUSH",
											"source": 42,
											"value": "0"
										},
										{
											"begin": 4494,
											"end": 4507,
											"name": "MSTORE",
											"source": 42
										},
										{
											"begin": 4494,
											"end": 4507,
											"name": "PUSH",
											"source": 42,
											"value": "20"
										},
										{
											"begin": 4494,
											"end": 4507,
											"name": "PUSH",
											"source": 42,
											"value": "0"
										},
										{
											"begin": 4494,
											"end": 4507,
											"name": "KECCAK256",
											"source": 42
										},
										{
											"begin": 4494,
											"end": 4507,
											"name": "SWAP1",
											"source": 42
										},
										{
											"begin": 4494,
											"end": 4507,
											"name": "tag",
											"source": 42,
											"value": "111"
										},
										{
											"begin": 4494,
											"end": 4507,
											"name": "JUMPDEST",
											"source": 42
										},
										{
											"begin": 4494,
											"end": 4507,
											"name": "DUP2",
											"source": 42
										},
										{
											"begin": 4494,
											"end": 4507,
											"name": "SLOAD",
											"source": 42
										},
										{
											"begin": 4494,
											"end": 4507,
											"name": "DUP2",
											"source": 42
										},
										{
											"begin": 4494,
											"end": 4507,
											"name": "MSTORE",
											"source": 42
										},
										{
											"begin": 4494,
											"end": 4507,
											"name": "SWAP1",
											"source": 42
										},
										{
											"begin": 4494,
											"end": 4507,
											"name": "PUSH",
											"source": 42,
											"value": "1"
										},
										{
											"begin": 4494,
											"end": 4507,
											"name": "ADD",
											"source": 42
										},
										{
											"begin": 4494,
											"end": 4507,
											"name": "SWAP1",
											"source": 42
										},
										{
											"begin": 4494,
											"end": 4507,
											"name": "PUSH",
											"source": 42,
											"value": "20"
										},
										{
											"begin": 4494,
											"end": 4507,
											"name": "ADD",
											"source": 42
										},
										{
											"begin": 4494,
											"end": 4507,
											"name": "DUP1",
											"source": 42
										},
										{
											"begin": 4494,
											"end": 4507,
											"name": "DUP4",
											"source": 42
										},
										{
											"begin": 4494,
											"end": 4507,
											"name": "GT",
											"source": 42
										},
										{
											"begin": 4494,
											"end": 4507,
											"name": "PUSH [tag]",
											"source": 42,
											"value": "111"
										},
										{
											"begin": 4494,
											"end": 4507,
											"name": "JUMPI",
											"source": 42
										},
										{
											"begin": 4494,
											"end": 4507,
											"name": "DUP3",
											"source": 42
										},
										{
											"begin": 4494,
											"end": 4507,
											"name": "SWAP1",
											"source": 42
										},
										{
											"begin": 4494,
											"end": 4507,
											"name": "SUB",
											"source": 42
										},
										{
											"begin": 4494,
											"end": 4507,
											"name": "PUSH",
											"source": 42,
											"value": "1F"
										},
										{
											"begin": 4494,
											"end": 4507,
											"name": "AND",
											"source": 42
										},
										{
											"begin": 4494,
											"end": 4507,
											"name": "DUP3",
											"source": 42
										},
										{
											"begin": 4494,
											"end": 4507,
											"name": "ADD",
											"source": 42
										},
										{
											"begin": 4494,
											"end": 4507,
											"name": "SWAP2",
											"source": 42
										},
										{
											"begin": 4494,
											"end": 4507,
											"name": "tag",
											"source": 42,
											"value": "109"
										},
										{
											"begin": 4494,
											"end": 4507,
											"name": "JUMPDEST",
											"source": 42
										},
										{
											"begin": 4494,
											"end": 4507,
											"name": "POP",
											"source": 42
										},
										{
											"begin": 4494,
											"end": 4507,
											"name": "POP",
											"source": 42
										},
										{
											"begin": 4494,
											"end": 4507,
											"name": "POP",
											"source": 42
										},
										{
											"begin": 4494,
											"end": 4507,
											"name": "POP",
											"source": 42
										},
										{
											"begin": 4494,
											"end": 4507,
											"name": "POP",
											"source": 42
										},
										{
											"begin": 4494,
											"end": 4507,
											"name": "SWAP3",
											"source": 42
										},
										{
											"begin": 4494,
											"end": 4507,
											"name": "POP",
											"source": 42
										},
										{
											"begin": 4494,
											"end": 4507,
											"name": "POP",
											"source": 42
										},
										{
											"begin": 4494,
											"end": 4507,
											"name": "POP",
											"source": 42
										},
										{
											"begin": 4107,
											"end": 4514,
											"name": "SWAP1",
											"source": 42
										},
										{
											"begin": 4107,
											"end": 4514,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 42
										},
										{
											"begin": 3173,
											"end": 3906,
											"name": "tag",
											"source": 42,
											"value": "58"
										},
										{
											"begin": 3173,
											"end": 3906,
											"name": "JUMPDEST",
											"source": 42
										},
										{
											"begin": 3327,
											"end": 3339,
											"name": "PUSH",
											"source": 42,
											"value": "5"
										},
										{
											"begin": 3327,
											"end": 3339,
											"name": "SLOAD",
											"source": 42
										},
										{
											"begin": 3327,
											"end": 3343,
											"name": "PUSH [tag]",
											"source": 42,
											"value": "113"
										},
										{
											"begin": 3327,
											"end": 3343,
											"name": "SWAP1",
											"source": 42
										},
										{
											"begin": 3342,
											"end": 3343,
											"name": "PUSH",
											"source": 42,
											"value": "1"
										},
										{
											"begin": 3327,
											"end": 3343,
											"name": "PUSH [tag]",
											"source": 42,
											"value": "86"
										},
										{
											"begin": 3327,
											"end": 3343,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 42
										},
										{
											"begin": 3327,
											"end": 3343,
											"name": "tag",
											"source": 42,
											"value": "113"
										},
										{
											"begin": 3327,
											"end": 3343,
											"name": "JUMPDEST",
											"source": 42
										},
										{
											"begin": 3312,
											"end": 3324,
											"name": "PUSH",
											"source": 42,
											"value": "5"
										},
										{
											"begin": 3312,
											"end": 3343,
											"name": "SSTORE",
											"source": 42
										},
										{
											"begin": 3383,
											"end": 3413,
											"name": "PUSH",
											"source": 42,
											"value": "40"
										},
										{
											"begin": 3383,
											"end": 3413,
											"name": "DUP1",
											"source": 42
										},
										{
											"begin": 3383,
											"end": 3413,
											"name": "MLOAD",
											"source": 42
										},
										{
											"begin": 3383,
											"end": 3413,
											"name": "PUSH",
											"source": 42,
											"value": "20"
										},
										{
											"begin": 3383,
											"end": 3413,
											"name": "DUP1",
											"source": 42
										},
										{
											"begin": 3383,
											"end": 3413,
											"name": "DUP3",
											"source": 42
										},
										{
											"begin": 3383,
											"end": 3413,
											"name": "ADD",
											"source": 42
										},
										{
											"begin": 4353,
											"end": 4372,
											"name": "DUP6",
											"source": 43
										},
										{
											"begin": 4353,
											"end": 4372,
											"name": "SWAP1",
											"source": 43
										},
										{
											"begin": 4353,
											"end": 4372,
											"name": "MSTORE",
											"source": 43
										},
										{
											"begin": 3383,
											"end": 3413,
											"name": "DUP3",
											"source": 42
										},
										{
											"begin": 3383,
											"end": 3413,
											"name": "MLOAD",
											"source": 42
										},
										{
											"begin": 3383,
											"end": 3413,
											"name": "DUP1",
											"source": 42
										},
										{
											"begin": 3383,
											"end": 3413,
											"name": "DUP4",
											"source": 42
										},
										{
											"begin": 3383,
											"end": 3413,
											"name": "SUB",
											"source": 42
										},
										{
											"begin": 3383,
											"end": 3413,
											"name": "DUP3",
											"source": 42
										},
										{
											"begin": 3383,
											"end": 3413,
											"name": "ADD",
											"source": 42
										},
										{
											"begin": 3383,
											"end": 3413,
											"name": "DUP2",
											"source": 42
										},
										{
											"begin": 3383,
											"end": 3413,
											"name": "MSTORE",
											"source": 42
										},
										{
											"begin": 4388,
											"end": 4400,
											"name": "SWAP2",
											"source": 43
										},
										{
											"begin": 4388,
											"end": 4400,
											"name": "DUP4",
											"source": 43
										},
										{
											"begin": 4388,
											"end": 4400,
											"name": "ADD",
											"source": 43
										},
										{
											"begin": 3383,
											"end": 3413,
											"name": "DUP4",
											"source": 42
										},
										{
											"begin": 3383,
											"end": 3413,
											"name": "MSTORE",
											"source": 42
										},
										{
											"begin": 3373,
											"end": 3414,
											"name": "DUP2",
											"source": 42
										},
										{
											"begin": 3373,
											"end": 3414,
											"name": "MLOAD",
											"source": 42
										},
										{
											"begin": 3373,
											"end": 3414,
											"name": "SWAP2",
											"source": 42
										},
										{
											"begin": 3373,
											"end": 3414,
											"name": "DUP2",
											"source": 42
										},
										{
											"begin": 3373,
											"end": 3414,
											"name": "ADD",
											"source": 42
										},
										{
											"begin": 3373,
											"end": 3414,
											"name": "SWAP2",
											"source": 42
										},
										{
											"begin": 3373,
											"end": 3414,
											"name": "SWAP1",
											"source": 42
										},
										{
											"begin": 3373,
											"end": 3414,
											"name": "SWAP2",
											"source": 42
										},
										{
											"begin": 3373,
											"end": 3414,
											"name": "KECCAK256",
											"source": 42
										},
										{
											"begin": 3353,
											"end": 3370,
											"name": "PUSH",
											"source": 42,
											"value": "0"
										},
										{
											"begin": 3432,
											"end": 3451,
											"name": "DUP2",
											"source": 42
										},
										{
											"begin": 3432,
											"end": 3451,
											"name": "DUP2",
											"source": 42
										},
										{
											"begin": 3432,
											"end": 3451,
											"name": "MSTORE",
											"source": 42
										},
										{
											"begin": 3432,
											"end": 3440,
											"name": "PUSH",
											"source": 42,
											"value": "2"
										},
										{
											"begin": 3432,
											"end": 3451,
											"name": "SWAP1",
											"source": 42
										},
										{
											"begin": 3432,
											"end": 3451,
											"name": "SWAP3",
											"source": 42
										},
										{
											"begin": 3432,
											"end": 3451,
											"name": "MSTORE",
											"source": 42
										},
										{
											"begin": 3432,
											"end": 3451,
											"name": "SWAP2",
											"source": 42
										},
										{
											"begin": 3432,
											"end": 3451,
											"name": "SWAP1",
											"source": 42
										},
										{
											"begin": 3432,
											"end": 3451,
											"name": "KECCAK256",
											"source": 42
										},
										{
											"begin": 3432,
											"end": 3451,
											"name": "SLOAD",
											"source": 42
										},
										{
											"begin": 3432,
											"end": 3451,
											"name": "PUSH",
											"source": 42,
											"value": "FF"
										},
										{
											"begin": 3432,
											"end": 3451,
											"name": "AND",
											"source": 42
										},
										{
											"begin": 3432,
											"end": 3460,
											"name": "ISZERO",
											"source": 42
										},
										{
											"begin": 3424,
											"end": 3492,
											"name": "PUSH [tag]",
											"source": 42,
											"value": "115"
										},
										{
											"begin": 3424,
											"end": 3492,
											"name": "JUMPI",
											"source": 42
										},
										{
											"begin": 3424,
											"end": 3492,
											"name": "PUSH",
											"source": 42,
											"value": "40"
										},
										{
											"begin": 3424,
											"end": 3492,
											"name": "MLOAD",
											"source": 42
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3424,
											"end": 3492,
											"name": "DUP2",
											"source": 42
										},
										{
											"begin": 3424,
											"end": 3492,
											"name": "MSTORE",
											"source": 42
										},
										{
											"begin": 9735,
											"end": 9737,
											"name": "PUSH",
											"source": 43,
											"value": "20"
										},
										{
											"begin": 3424,
											"end": 3492,
											"name": "PUSH",
											"source": 42,
											"value": "4"
										},
										{
											"begin": 3424,
											"end": 3492,
											"name": "DUP3",
											"source": 42
										},
										{
											"begin": 3424,
											"end": 3492,
											"name": "ADD",
											"source": 42
										},
										{
											"begin": 9717,
											"end": 9738,
											"name": "MSTORE",
											"source": 43
										},
										{
											"begin": 9774,
											"end": 9776,
											"name": "PUSH",
											"source": 43,
											"value": "1B"
										},
										{
											"begin": 9754,
											"end": 9772,
											"name": "PUSH",
											"source": 43,
											"value": "24"
										},
										{
											"begin": 9754,
											"end": 9772,
											"name": "DUP3",
											"source": 43
										},
										{
											"begin": 9754,
											"end": 9772,
											"name": "ADD",
											"source": 43
										},
										{
											"begin": 9747,
											"end": 9777,
											"name": "MSTORE",
											"source": 43
										},
										{
											"begin": 9813,
											"end": 9842,
											"name": "PUSH",
											"source": 43,
											"value": "43616E6469646174652068617320616C726561647920766F7465640000000000"
										},
										{
											"begin": 9793,
											"end": 9811,
											"name": "PUSH",
											"source": 43,
											"value": "44"
										},
										{
											"begin": 9793,
											"end": 9811,
											"name": "DUP3",
											"source": 43
										},
										{
											"begin": 9793,
											"end": 9811,
											"name": "ADD",
											"source": 43
										},
										{
											"begin": 9786,
											"end": 9843,
											"name": "MSTORE",
											"source": 43
										},
										{
											"begin": 9860,
											"end": 9878,
											"name": "PUSH",
											"source": 43,
											"value": "64"
										},
										{
											"begin": 9860,
											"end": 9878,
											"name": "ADD",
											"source": 43
										},
										{
											"begin": 3424,
											"end": 3492,
											"name": "PUSH [tag]",
											"source": 42,
											"value": "78"
										},
										{
											"begin": 9533,
											"end": 9884,
											"name": "JUMP",
											"source": 43
										},
										{
											"begin": 3424,
											"end": 3492,
											"name": "tag",
											"source": 42,
											"value": "115"
										},
										{
											"begin": 3424,
											"end": 3492,
											"name": "JUMPDEST",
											"source": 42
										},
										{
											"begin": 3523,
											"end": 3536,
											"name": "PUSH",
											"source": 42,
											"value": "6"
										},
										{
											"begin": 3523,
											"end": 3543,
											"name": "SLOAD",
											"source": 42
										},
										{
											"begin": 3547,
											"end": 3548,
											"name": "PUSH",
											"source": 42,
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "GT",
											"source": -1
										},
										{
											"begin": 3523,
											"end": 3548,
											"name": "ISZERO",
											"source": 42
										},
										{
											"begin": 3502,
											"end": 3617,
											"name": "PUSH [tag]",
											"source": 42,
											"value": "118"
										},
										{
											"begin": 3502,
											"end": 3617,
											"name": "JUMPI",
											"source": 42
										},
										{
											"begin": 3502,
											"end": 3617,
											"name": "PUSH",
											"source": 42,
											"value": "40"
										},
										{
											"begin": 3502,
											"end": 3617,
											"name": "MLOAD",
											"source": 42
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3502,
											"end": 3617,
											"name": "DUP2",
											"source": 42
										},
										{
											"begin": 3502,
											"end": 3617,
											"name": "MSTORE",
											"source": 42
										},
										{
											"begin": 10091,
											"end": 10093,
											"name": "PUSH",
											"source": 43,
											"value": "20"
										},
										{
											"begin": 3502,
											"end": 3617,
											"name": "PUSH",
											"source": 42,
											"value": "4"
										},
										{
											"begin": 3502,
											"end": 3617,
											"name": "DUP3",
											"source": 42
										},
										{
											"begin": 3502,
											"end": 3617,
											"name": "ADD",
											"source": 42
										},
										{
											"begin": 10073,
											"end": 10094,
											"name": "MSTORE",
											"source": 43
										},
										{
											"begin": 10130,
											"end": 10132,
											"name": "PUSH",
											"source": 43,
											"value": "2B"
										},
										{
											"begin": 10110,
											"end": 10128,
											"name": "PUSH",
											"source": 43,
											"value": "24"
										},
										{
											"begin": 10110,
											"end": 10128,
											"name": "DUP3",
											"source": 43
										},
										{
											"begin": 10110,
											"end": 10128,
											"name": "ADD",
											"source": 43
										},
										{
											"begin": 10103,
											"end": 10133,
											"name": "MSTORE",
											"source": 43
										},
										{
											"begin": 10169,
											"end": 10203,
											"name": "PUSH",
											"source": 43,
											"value": "54686572652063616E277420626520656C656374696F6E207769746820612073"
										},
										{
											"begin": 10149,
											"end": 10167,
											"name": "PUSH",
											"source": 43,
											"value": "44"
										},
										{
											"begin": 10149,
											"end": 10167,
											"name": "DUP3",
											"source": 43
										},
										{
											"begin": 10149,
											"end": 10167,
											"name": "ADD",
											"source": 43
										},
										{
											"begin": 10142,
											"end": 10204,
											"name": "MSTORE",
											"source": 43
										},
										{
											"begin": 10240,
											"end": 10253,
											"name": "PUSH",
											"source": 43,
											"value": "696E676C65207061727479000000000000000000000000000000000000000000"
										},
										{
											"begin": 10220,
											"end": 10238,
											"name": "PUSH",
											"source": 43,
											"value": "64"
										},
										{
											"begin": 10220,
											"end": 10238,
											"name": "DUP3",
											"source": 43
										},
										{
											"begin": 10220,
											"end": 10238,
											"name": "ADD",
											"source": 43
										},
										{
											"begin": 10213,
											"end": 10254,
											"name": "MSTORE",
											"source": 43
										},
										{
											"begin": 10271,
											"end": 10290,
											"name": "PUSH",
											"source": 43,
											"value": "84"
										},
										{
											"begin": 10271,
											"end": 10290,
											"name": "ADD",
											"source": 43
										},
										{
											"begin": 3502,
											"end": 3617,
											"name": "PUSH [tag]",
											"source": 42,
											"value": "78"
										},
										{
											"begin": 9889,
											"end": 10296,
											"name": "JUMP",
											"source": 43
										},
										{
											"begin": 3502,
											"end": 3617,
											"name": "tag",
											"source": 42,
											"value": "118"
										},
										{
											"begin": 3502,
											"end": 3617,
											"name": "JUMPDEST",
											"source": 42
										},
										{
											"begin": 3627,
											"end": 3639,
											"name": "PUSH",
											"source": 42,
											"value": "0"
										},
										{
											"begin": 3627,
											"end": 3650,
											"name": "DUP2",
											"source": 42
										},
										{
											"begin": 3627,
											"end": 3650,
											"name": "DUP2",
											"source": 42
										},
										{
											"begin": 3627,
											"end": 3650,
											"name": "MSTORE",
											"source": 42
										},
										{
											"begin": 3627,
											"end": 3650,
											"name": "PUSH",
											"source": 42,
											"value": "20"
										},
										{
											"begin": 3627,
											"end": 3650,
											"name": "DUP2",
											"source": 42
										},
										{
											"begin": 3627,
											"end": 3650,
											"name": "DUP2",
											"source": 42
										},
										{
											"begin": 3627,
											"end": 3650,
											"name": "MSTORE",
											"source": 42
										},
										{
											"begin": 3627,
											"end": 3650,
											"name": "PUSH",
											"source": 42,
											"value": "40"
										},
										{
											"begin": 3627,
											"end": 3650,
											"name": "DUP1",
											"source": 42
										},
										{
											"begin": 3627,
											"end": 3650,
											"name": "DUP4",
											"source": 42
										},
										{
											"begin": 3627,
											"end": 3650,
											"name": "KECCAK256",
											"source": 42
										},
										{
											"begin": 3627,
											"end": 3679,
											"name": "DUP1",
											"source": 42
										},
										{
											"begin": 3627,
											"end": 3679,
											"name": "SLOAD",
											"source": 42
										},
										{
											"begin": 3627,
											"end": 3679,
											"name": "PUSH",
											"source": 42,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000"
										},
										{
											"begin": 3627,
											"end": 3679,
											"name": "AND",
											"source": 42
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3627,
											"end": 3679,
											"name": "DUP10",
											"source": 42
										},
										{
											"begin": 3627,
											"end": 3679,
											"name": "AND",
											"source": 42
										},
										{
											"begin": 3627,
											"end": 3679,
											"name": "OR",
											"source": 42
										},
										{
											"begin": 3627,
											"end": 3679,
											"name": "DUP2",
											"source": 42
										},
										{
											"begin": 3627,
											"end": 3679,
											"name": "SSTORE",
											"source": 42
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": 3689,
											"end": 3724,
											"name": "SWAP1",
											"source": 42
										},
										{
											"begin": 3689,
											"end": 3724,
											"name": "DUP2",
											"source": 42
										},
										{
											"begin": 3689,
											"end": 3724,
											"name": "ADD",
											"source": 42
										},
										{
											"begin": 3689,
											"end": 3739,
											"name": "DUP7",
											"source": 42
										},
										{
											"begin": 3689,
											"end": 3739,
											"name": "SWAP1",
											"source": 42
										},
										{
											"begin": 3689,
											"end": 3739,
											"name": "SSTORE",
											"source": 42
										},
										{
											"begin": 3749,
											"end": 3779,
											"name": "DUP6",
											"source": 42
										},
										{
											"begin": 3749,
											"end": 3779,
											"name": "DUP5",
											"source": 42
										},
										{
											"begin": 3749,
											"end": 3779,
											"name": "MSTORE",
											"source": 42
										},
										{
											"begin": 3749,
											"end": 3779,
											"name": "SWAP2",
											"source": 42
										},
										{
											"begin": 3749,
											"end": 3779,
											"name": "DUP3",
											"source": 42
										},
										{
											"begin": 3749,
											"end": 3779,
											"name": "SWAP1",
											"source": 42
										},
										{
											"begin": 3749,
											"end": 3779,
											"name": "MSTORE",
											"source": 42
										},
										{
											"begin": 3749,
											"end": 3779,
											"name": "DUP3",
											"source": 42
										},
										{
											"begin": 3749,
											"end": 3779,
											"name": "KECCAK256",
											"source": 42
										},
										{
											"begin": 3749,
											"end": 3790,
											"name": "PUSH",
											"source": 42,
											"value": "3"
										},
										{
											"begin": 3749,
											"end": 3790,
											"name": "ADD",
											"source": 42
										},
										{
											"begin": 3749,
											"end": 3795,
											"name": "DUP1",
											"source": 42
										},
										{
											"begin": 3749,
											"end": 3795,
											"name": "SLOAD",
											"source": 42
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP3",
											"source": -1
										},
										{
											"begin": 3749,
											"end": 3790,
											"name": "SWAP1",
											"source": 42
										},
										{
											"begin": 3749,
											"end": 3790,
											"name": "SWAP2",
											"source": 42
										},
										{
											"begin": 3749,
											"end": 3795,
											"name": "PUSH [tag]",
											"source": 42,
											"value": "121"
										},
										{
											"begin": 3749,
											"end": 3795,
											"name": "SWAP1",
											"source": 42
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP5",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 3749,
											"end": 3795,
											"name": "PUSH [tag]",
											"source": 42,
											"value": "86"
										},
										{
											"begin": 3749,
											"end": 3795,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 42
										},
										{
											"begin": 3749,
											"end": 3795,
											"name": "tag",
											"source": 42,
											"value": "121"
										},
										{
											"begin": 3749,
											"end": 3795,
											"name": "JUMPDEST",
											"source": 42
										},
										{
											"begin": 3749,
											"end": 3795,
											"name": "SWAP1",
											"source": 42
										},
										{
											"begin": 3749,
											"end": 3795,
											"name": "SWAP2",
											"source": 42
										},
										{
											"begin": 3749,
											"end": 3795,
											"name": "SSTORE",
											"source": 42
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3805,
											"end": 3824,
											"name": "PUSH",
											"source": 42,
											"value": "0"
										},
										{
											"begin": 3805,
											"end": 3824,
											"name": "DUP2",
											"source": 42
										},
										{
											"begin": 3805,
											"end": 3824,
											"name": "DUP2",
											"source": 42
										},
										{
											"begin": 3805,
											"end": 3824,
											"name": "MSTORE",
											"source": 42
										},
										{
											"begin": 3805,
											"end": 3813,
											"name": "PUSH",
											"source": 42,
											"value": "2"
										},
										{
											"begin": 3805,
											"end": 3824,
											"name": "PUSH",
											"source": 42,
											"value": "20"
										},
										{
											"begin": 3805,
											"end": 3824,
											"name": "SWAP1",
											"source": 42
										},
										{
											"begin": 3805,
											"end": 3824,
											"name": "DUP2",
											"source": 42
										},
										{
											"begin": 3805,
											"end": 3824,
											"name": "MSTORE",
											"source": 42
										},
										{
											"begin": 3805,
											"end": 3824,
											"name": "PUSH",
											"source": 42,
											"value": "40"
										},
										{
											"begin": 3805,
											"end": 3824,
											"name": "SWAP2",
											"source": 42
										},
										{
											"begin": 3805,
											"end": 3824,
											"name": "DUP3",
											"source": 42
										},
										{
											"begin": 3805,
											"end": 3824,
											"name": "SWAP1",
											"source": 42
										},
										{
											"begin": 3805,
											"end": 3824,
											"name": "KECCAK256",
											"source": 42
										},
										{
											"begin": 3805,
											"end": 3831,
											"name": "DUP1",
											"source": 42
										},
										{
											"begin": 3805,
											"end": 3831,
											"name": "SLOAD",
											"source": 42
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 3805,
											"end": 3831,
											"name": "AND",
											"source": 42
										},
										{
											"begin": 3827,
											"end": 3831,
											"name": "PUSH",
											"source": 42,
											"value": "1"
										},
										{
											"begin": 3805,
											"end": 3831,
											"name": "OR",
											"source": 42
										},
										{
											"begin": 3805,
											"end": 3831,
											"name": "SWAP1",
											"source": 42
										},
										{
											"begin": 3805,
											"end": 3831,
											"name": "SSTORE",
											"source": 42
										},
										{
											"begin": 3846,
											"end": 3899,
											"name": "DUP2",
											"source": 42
										},
										{
											"begin": 3846,
											"end": 3899,
											"name": "MLOAD",
											"source": 42
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2294,
											"end": 2349,
											"name": "DUP8",
											"source": 43
										},
										{
											"begin": 2294,
											"end": 2349,
											"name": "AND",
											"source": 43
										},
										{
											"begin": 2276,
											"end": 2350,
											"name": "DUP2",
											"source": 43
										},
										{
											"begin": 2276,
											"end": 2350,
											"name": "MSTORE",
											"source": 43
										},
										{
											"begin": 2366,
											"end": 2384,
											"name": "SWAP1",
											"source": 43
										},
										{
											"begin": 2366,
											"end": 2384,
											"name": "DUP2",
											"source": 43
										},
										{
											"begin": 2366,
											"end": 2384,
											"name": "ADD",
											"source": 43
										},
										{
											"begin": 2359,
											"end": 2393,
											"name": "DUP5",
											"source": 43
										},
										{
											"begin": 2359,
											"end": 2393,
											"name": "SWAP1",
											"source": 43
										},
										{
											"begin": 2359,
											"end": 2393,
											"name": "MSTORE",
											"source": 43
										},
										{
											"begin": 3872,
											"end": 3884,
											"name": "DUP5",
											"source": 42
										},
										{
											"begin": 3872,
											"end": 3884,
											"name": "SWAP2",
											"source": 42
										},
										{
											"begin": 3846,
											"end": 3899,
											"name": "PUSH",
											"source": 42,
											"value": "CB87DF07B1C304492BD875A5C8B98672ECA500939412809EA229AFEF1D745188"
										},
										{
											"begin": 3846,
											"end": 3899,
											"name": "SWAP2",
											"source": 42
										},
										{
											"begin": 2249,
											"end": 2267,
											"name": "ADD",
											"source": 43
										},
										{
											"begin": 3846,
											"end": 3899,
											"name": "PUSH",
											"source": 42,
											"value": "40"
										},
										{
											"begin": 3846,
											"end": 3899,
											"name": "MLOAD",
											"source": 42
										},
										{
											"begin": 3846,
											"end": 3899,
											"name": "DUP1",
											"source": 42
										},
										{
											"begin": 3846,
											"end": 3899,
											"name": "SWAP2",
											"source": 42
										},
										{
											"begin": 3846,
											"end": 3899,
											"name": "SUB",
											"source": 42
										},
										{
											"begin": 3846,
											"end": 3899,
											"name": "SWAP1",
											"source": 42
										},
										{
											"begin": 3846,
											"end": 3899,
											"name": "LOG2",
											"source": 42
										},
										{
											"begin": 3302,
											"end": 3906,
											"name": "POP",
											"source": 42
										},
										{
											"begin": 3173,
											"end": 3906,
											"name": "POP",
											"source": 42
										},
										{
											"begin": 3173,
											"end": 3906,
											"name": "POP",
											"source": 42
										},
										{
											"begin": 3173,
											"end": 3906,
											"name": "POP",
											"source": 42
										},
										{
											"begin": 3173,
											"end": 3906,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 42
										},
										{
											"begin": 2941,
											"end": 3167,
											"name": "tag",
											"source": 42,
											"value": "61"
										},
										{
											"begin": 2941,
											"end": 3167,
											"name": "JUMPDEST",
											"source": 42
										},
										{
											"begin": 3038,
											"end": 3042,
											"name": "PUSH",
											"source": 42,
											"value": "0"
										},
										{
											"begin": 3058,
											"end": 3075,
											"name": "DUP1",
											"source": 42
										},
										{
											"begin": 3105,
											"end": 3117,
											"name": "DUP3",
											"source": 42
										},
										{
											"begin": 3088,
											"end": 3118,
											"name": "PUSH",
											"source": 42,
											"value": "40"
										},
										{
											"begin": 3088,
											"end": 3118,
											"name": "MLOAD",
											"source": 42
										},
										{
											"begin": 3088,
											"end": 3118,
											"name": "PUSH",
											"source": 42,
											"value": "20"
										},
										{
											"begin": 3088,
											"end": 3118,
											"name": "ADD",
											"source": 42
										},
										{
											"begin": 3088,
											"end": 3118,
											"name": "PUSH [tag]",
											"source": 42,
											"value": "124"
										},
										{
											"begin": 3088,
											"end": 3118,
											"name": "SWAP2",
											"source": 42
										},
										{
											"begin": 4353,
											"end": 4372,
											"name": "DUP2",
											"source": 43
										},
										{
											"begin": 4353,
											"end": 4372,
											"name": "MSTORE",
											"source": 43
										},
										{
											"begin": 4397,
											"end": 4399,
											"name": "PUSH",
											"source": 43,
											"value": "20"
										},
										{
											"begin": 4388,
											"end": 4400,
											"name": "ADD",
											"source": 43
										},
										{
											"begin": 4388,
											"end": 4400,
											"name": "SWAP1",
											"source": 43
										},
										{
											"begin": 4224,
											"end": 4406,
											"name": "JUMP",
											"source": 43
										},
										{
											"begin": 3088,
											"end": 3118,
											"name": "tag",
											"source": 42,
											"value": "124"
										},
										{
											"begin": 3088,
											"end": 3118,
											"name": "JUMPDEST",
											"source": 42
										},
										{
											"begin": 3088,
											"end": 3118,
											"name": "PUSH",
											"source": 42,
											"value": "40"
										},
										{
											"begin": 3088,
											"end": 3118,
											"name": "DUP1",
											"source": 42
										},
										{
											"begin": 3088,
											"end": 3118,
											"name": "MLOAD",
											"source": 42
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 3088,
											"end": 3118,
											"name": "DUP2",
											"source": 42
										},
										{
											"begin": 3088,
											"end": 3118,
											"name": "DUP5",
											"source": 42
										},
										{
											"begin": 3088,
											"end": 3118,
											"name": "SUB",
											"source": 42
										},
										{
											"begin": 3088,
											"end": 3118,
											"name": "ADD",
											"source": 42
										},
										{
											"begin": 3088,
											"end": 3118,
											"name": "DUP2",
											"source": 42
										},
										{
											"begin": 3088,
											"end": 3118,
											"name": "MSTORE",
											"source": 42
										},
										{
											"begin": 3088,
											"end": 3118,
											"name": "SWAP2",
											"source": 42
										},
										{
											"begin": 3088,
											"end": 3118,
											"name": "DUP2",
											"source": 42
										},
										{
											"begin": 3088,
											"end": 3118,
											"name": "MSTORE",
											"source": 42
										},
										{
											"begin": 3078,
											"end": 3119,
											"name": "DUP2",
											"source": 42
										},
										{
											"begin": 3078,
											"end": 3119,
											"name": "MLOAD",
											"source": 42
										},
										{
											"begin": 3088,
											"end": 3118,
											"name": "PUSH",
											"source": 42,
											"value": "20"
										},
										{
											"begin": 3078,
											"end": 3119,
											"name": "SWAP3",
											"source": 42
										},
										{
											"begin": 3078,
											"end": 3119,
											"name": "DUP4",
											"source": 42
										},
										{
											"begin": 3078,
											"end": 3119,
											"name": "ADD",
											"source": 42
										},
										{
											"begin": 3078,
											"end": 3119,
											"name": "KECCAK256",
											"source": 42
										},
										{
											"begin": 3136,
											"end": 3160,
											"name": "PUSH",
											"source": 42,
											"value": "0"
										},
										{
											"begin": 3136,
											"end": 3160,
											"name": "SWAP1",
											"source": 42
										},
										{
											"begin": 3136,
											"end": 3160,
											"name": "DUP2",
											"source": 42
										},
										{
											"begin": 3136,
											"end": 3160,
											"name": "MSTORE",
											"source": 42
										},
										{
											"begin": 3136,
											"end": 3149,
											"name": "PUSH",
											"source": 42,
											"value": "3"
										},
										{
											"begin": 3136,
											"end": 3160,
											"name": "SWAP1",
											"source": 42
										},
										{
											"begin": 3136,
											"end": 3160,
											"name": "SWAP3",
											"source": 42
										},
										{
											"begin": 3136,
											"end": 3160,
											"name": "MSTORE",
											"source": 42
										},
										{
											"begin": 3136,
											"end": 3160,
											"name": "SWAP1",
											"source": 42
										},
										{
											"begin": 3136,
											"end": 3160,
											"name": "KECCAK256",
											"source": 42
										},
										{
											"begin": 3136,
											"end": 3160,
											"name": "SLOAD",
											"source": 42
										},
										{
											"begin": 3136,
											"end": 3160,
											"name": "PUSH",
											"source": 42,
											"value": "FF"
										},
										{
											"begin": 3136,
											"end": 3160,
											"name": "AND",
											"source": 42
										},
										{
											"begin": 3136,
											"end": 3160,
											"name": "SWAP4",
											"source": 42
										},
										{
											"begin": 2941,
											"end": 3167,
											"name": "SWAP3",
											"source": 42
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2941,
											"end": 3167,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 42
										},
										{
											"begin": 3912,
											"end": 4101,
											"name": "tag",
											"source": 42,
											"value": "65"
										},
										{
											"begin": 3912,
											"end": 4101,
											"name": "JUMPDEST",
											"source": 42
										},
										{
											"begin": 3981,
											"end": 3985,
											"name": "PUSH",
											"source": 42,
											"value": "0"
										},
										{
											"begin": 3997,
											"end": 4014,
											"name": "DUP1",
											"source": 42
										},
										{
											"begin": 4044,
											"end": 4056,
											"name": "DUP3",
											"source": 42
										},
										{
											"begin": 4027,
											"end": 4057,
											"name": "PUSH",
											"source": 42,
											"value": "40"
										},
										{
											"begin": 4027,
											"end": 4057,
											"name": "MLOAD",
											"source": 42
										},
										{
											"begin": 4027,
											"end": 4057,
											"name": "PUSH",
											"source": 42,
											"value": "20"
										},
										{
											"begin": 4027,
											"end": 4057,
											"name": "ADD",
											"source": 42
										},
										{
											"begin": 4027,
											"end": 4057,
											"name": "PUSH [tag]",
											"source": 42,
											"value": "126"
										},
										{
											"begin": 4027,
											"end": 4057,
											"name": "SWAP2",
											"source": 42
										},
										{
											"begin": 4353,
											"end": 4372,
											"name": "DUP2",
											"source": 43
										},
										{
											"begin": 4353,
											"end": 4372,
											"name": "MSTORE",
											"source": 43
										},
										{
											"begin": 4397,
											"end": 4399,
											"name": "PUSH",
											"source": 43,
											"value": "20"
										},
										{
											"begin": 4388,
											"end": 4400,
											"name": "ADD",
											"source": 43
										},
										{
											"begin": 4388,
											"end": 4400,
											"name": "SWAP1",
											"source": 43
										},
										{
											"begin": 4224,
											"end": 4406,
											"name": "JUMP",
											"source": 43
										},
										{
											"begin": 4027,
											"end": 4057,
											"name": "tag",
											"source": 42,
											"value": "126"
										},
										{
											"begin": 4027,
											"end": 4057,
											"name": "JUMPDEST",
											"source": 42
										},
										{
											"begin": 4027,
											"end": 4057,
											"name": "PUSH",
											"source": 42,
											"value": "40"
										},
										{
											"begin": 4027,
											"end": 4057,
											"name": "DUP1",
											"source": 42
										},
										{
											"begin": 4027,
											"end": 4057,
											"name": "MLOAD",
											"source": 42
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 4027,
											"end": 4057,
											"name": "DUP2",
											"source": 42
										},
										{
											"begin": 4027,
											"end": 4057,
											"name": "DUP5",
											"source": 42
										},
										{
											"begin": 4027,
											"end": 4057,
											"name": "SUB",
											"source": 42
										},
										{
											"begin": 4027,
											"end": 4057,
											"name": "ADD",
											"source": 42
										},
										{
											"begin": 4027,
											"end": 4057,
											"name": "DUP2",
											"source": 42
										},
										{
											"begin": 4027,
											"end": 4057,
											"name": "MSTORE",
											"source": 42
										},
										{
											"begin": 4027,
											"end": 4057,
											"name": "SWAP2",
											"source": 42
										},
										{
											"begin": 4027,
											"end": 4057,
											"name": "DUP2",
											"source": 42
										},
										{
											"begin": 4027,
											"end": 4057,
											"name": "MSTORE",
											"source": 42
										},
										{
											"begin": 4017,
											"end": 4058,
											"name": "DUP2",
											"source": 42
										},
										{
											"begin": 4017,
											"end": 4058,
											"name": "MLOAD",
											"source": 42
										},
										{
											"begin": 4027,
											"end": 4057,
											"name": "PUSH",
											"source": 42,
											"value": "20"
										},
										{
											"begin": 4017,
											"end": 4058,
											"name": "SWAP3",
											"source": 42
										},
										{
											"begin": 4017,
											"end": 4058,
											"name": "DUP4",
											"source": 42
										},
										{
											"begin": 4017,
											"end": 4058,
											"name": "ADD",
											"source": 42
										},
										{
											"begin": 4017,
											"end": 4058,
											"name": "KECCAK256",
											"source": 42
										},
										{
											"begin": 4075,
											"end": 4094,
											"name": "PUSH",
											"source": 42,
											"value": "0"
										},
										{
											"begin": 4075,
											"end": 4094,
											"name": "SWAP1",
											"source": 42
										},
										{
											"begin": 4075,
											"end": 4094,
											"name": "DUP2",
											"source": 42
										},
										{
											"begin": 4075,
											"end": 4094,
											"name": "MSTORE",
											"source": 42
										},
										{
											"begin": 4075,
											"end": 4083,
											"name": "PUSH",
											"source": 42,
											"value": "2"
										},
										{
											"begin": 4075,
											"end": 4094,
											"name": "SWAP1",
											"source": 42
										},
										{
											"begin": 4075,
											"end": 4094,
											"name": "SWAP3",
											"source": 42
										},
										{
											"begin": 4075,
											"end": 4094,
											"name": "MSTORE",
											"source": 42
										},
										{
											"begin": 4075,
											"end": 4094,
											"name": "SWAP1",
											"source": 42
										},
										{
											"begin": 4075,
											"end": 4094,
											"name": "KECCAK256",
											"source": 42
										},
										{
											"begin": 4075,
											"end": 4094,
											"name": "SLOAD",
											"source": 42
										},
										{
											"begin": 4075,
											"end": 4094,
											"name": "PUSH",
											"source": 42,
											"value": "FF"
										},
										{
											"begin": 4075,
											"end": 4094,
											"name": "AND",
											"source": 42
										},
										{
											"begin": 4075,
											"end": 4094,
											"name": "SWAP4",
											"source": 42
										},
										{
											"begin": 3912,
											"end": 4101,
											"name": "SWAP3",
											"source": 42
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3912,
											"end": 4101,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 42
										},
										{
											"begin": 1855,
											"end": 1875,
											"name": "tag",
											"source": 42,
											"value": "68"
										},
										{
											"begin": 1855,
											"end": 1875,
											"name": "JUMPDEST",
											"source": 42
										},
										{
											"begin": 1855,
											"end": 1875,
											"name": "PUSH",
											"source": 42,
											"value": "7"
										},
										{
											"begin": 1855,
											"end": 1875,
											"name": "DUP1",
											"source": 42
										},
										{
											"begin": 1855,
											"end": 1875,
											"name": "SLOAD",
											"source": 42
										},
										{
											"begin": 1855,
											"end": 1875,
											"name": "PUSH [tag]",
											"source": 42,
											"value": "127"
										},
										{
											"begin": 1855,
											"end": 1875,
											"name": "SWAP1",
											"source": 42
										},
										{
											"begin": 1855,
											"end": 1875,
											"name": "PUSH [tag]",
											"source": 42,
											"value": "90"
										},
										{
											"begin": 1855,
											"end": 1875,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 42
										},
										{
											"begin": 1855,
											"end": 1875,
											"name": "tag",
											"source": 42,
											"value": "127"
										},
										{
											"begin": 1855,
											"end": 1875,
											"name": "JUMPDEST",
											"source": 42
										},
										{
											"begin": 1855,
											"end": 1875,
											"name": "DUP1",
											"source": 42
										},
										{
											"begin": 1855,
											"end": 1875,
											"name": "PUSH",
											"source": 42,
											"value": "1F"
										},
										{
											"begin": 1855,
											"end": 1875,
											"name": "ADD",
											"source": 42
										},
										{
											"begin": 1855,
											"end": 1875,
											"name": "PUSH",
											"source": 42,
											"value": "20"
										},
										{
											"begin": 1855,
											"end": 1875,
											"name": "DUP1",
											"source": 42
										},
										{
											"begin": 1855,
											"end": 1875,
											"name": "SWAP2",
											"source": 42
										},
										{
											"begin": 1855,
											"end": 1875,
											"name": "DIV",
											"source": 42
										},
										{
											"begin": 1855,
											"end": 1875,
											"name": "MUL",
											"source": 42
										},
										{
											"begin": 1855,
											"end": 1875,
											"name": "PUSH",
											"source": 42,
											"value": "20"
										},
										{
											"begin": 1855,
											"end": 1875,
											"name": "ADD",
											"source": 42
										},
										{
											"begin": 1855,
											"end": 1875,
											"name": "PUSH",
											"source": 42,
											"value": "40"
										},
										{
											"begin": 1855,
											"end": 1875,
											"name": "MLOAD",
											"source": 42
										},
										{
											"begin": 1855,
											"end": 1875,
											"name": "SWAP1",
											"source": 42
										},
										{
											"begin": 1855,
											"end": 1875,
											"name": "DUP2",
											"source": 42
										},
										{
											"begin": 1855,
											"end": 1875,
											"name": "ADD",
											"source": 42
										},
										{
											"begin": 1855,
											"end": 1875,
											"name": "PUSH",
											"source": 42,
											"value": "40"
										},
										{
											"begin": 1855,
											"end": 1875,
											"name": "MSTORE",
											"source": 42
										},
										{
											"begin": 1855,
											"end": 1875,
											"name": "DUP1",
											"source": 42
										},
										{
											"begin": 1855,
											"end": 1875,
											"name": "SWAP3",
											"source": 42
										},
										{
											"begin": 1855,
											"end": 1875,
											"name": "SWAP2",
											"source": 42
										},
										{
											"begin": 1855,
											"end": 1875,
											"name": "SWAP1",
											"source": 42
										},
										{
											"begin": 1855,
											"end": 1875,
											"name": "DUP2",
											"source": 42
										},
										{
											"begin": 1855,
											"end": 1875,
											"name": "DUP2",
											"source": 42
										},
										{
											"begin": 1855,
											"end": 1875,
											"name": "MSTORE",
											"source": 42
										},
										{
											"begin": 1855,
											"end": 1875,
											"name": "PUSH",
											"source": 42,
											"value": "20"
										},
										{
											"begin": 1855,
											"end": 1875,
											"name": "ADD",
											"source": 42
										},
										{
											"begin": 1855,
											"end": 1875,
											"name": "DUP3",
											"source": 42
										},
										{
											"begin": 1855,
											"end": 1875,
											"name": "DUP1",
											"source": 42
										},
										{
											"begin": 1855,
											"end": 1875,
											"name": "SLOAD",
											"source": 42
										},
										{
											"begin": 1855,
											"end": 1875,
											"name": "PUSH [tag]",
											"source": 42,
											"value": "128"
										},
										{
											"begin": 1855,
											"end": 1875,
											"name": "SWAP1",
											"source": 42
										},
										{
											"begin": 1855,
											"end": 1875,
											"name": "PUSH [tag]",
											"source": 42,
											"value": "90"
										},
										{
											"begin": 1855,
											"end": 1875,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 42
										},
										{
											"begin": 1855,
											"end": 1875,
											"name": "tag",
											"source": 42,
											"value": "128"
										},
										{
											"begin": 1855,
											"end": 1875,
											"name": "JUMPDEST",
											"source": 42
										},
										{
											"begin": 1855,
											"end": 1875,
											"name": "DUP1",
											"source": 42
										},
										{
											"begin": 1855,
											"end": 1875,
											"name": "ISZERO",
											"source": 42
										},
										{
											"begin": 1855,
											"end": 1875,
											"name": "PUSH [tag]",
											"source": 42,
											"value": "129"
										},
										{
											"begin": 1855,
											"end": 1875,
											"name": "JUMPI",
											"source": 42
										},
										{
											"begin": 1855,
											"end": 1875,
											"name": "DUP1",
											"source": 42
										},
										{
											"begin": 1855,
											"end": 1875,
											"name": "PUSH",
											"source": 42,
											"value": "1F"
										},
										{
											"begin": 1855,
											"end": 1875,
											"name": "LT",
											"source": 42
										},
										{
											"begin": 1855,
											"end": 1875,
											"name": "PUSH [tag]",
											"source": 42,
											"value": "130"
										},
										{
											"begin": 1855,
											"end": 1875,
											"name": "JUMPI",
											"source": 42
										},
										{
											"begin": 1855,
											"end": 1875,
											"name": "PUSH",
											"source": 42,
											"value": "100"
										},
										{
											"begin": 1855,
											"end": 1875,
											"name": "DUP1",
											"source": 42
										},
										{
											"begin": 1855,
											"end": 1875,
											"name": "DUP4",
											"source": 42
										},
										{
											"begin": 1855,
											"end": 1875,
											"name": "SLOAD",
											"source": 42
										},
										{
											"begin": 1855,
											"end": 1875,
											"name": "DIV",
											"source": 42
										},
										{
											"begin": 1855,
											"end": 1875,
											"name": "MUL",
											"source": 42
										},
										{
											"begin": 1855,
											"end": 1875,
											"name": "DUP4",
											"source": 42
										},
										{
											"begin": 1855,
											"end": 1875,
											"name": "MSTORE",
											"source": 42
										},
										{
											"begin": 1855,
											"end": 1875,
											"name": "SWAP2",
											"source": 42
										},
										{
											"begin": 1855,
											"end": 1875,
											"name": "PUSH",
											"source": 42,
											"value": "20"
										},
										{
											"begin": 1855,
											"end": 1875,
											"name": "ADD",
											"source": 42
										},
										{
											"begin": 1855,
											"end": 1875,
											"name": "SWAP2",
											"source": 42
										},
										{
											"begin": 1855,
											"end": 1875,
											"name": "PUSH [tag]",
											"source": 42,
											"value": "129"
										},
										{
											"begin": 1855,
											"end": 1875,
											"name": "JUMP",
											"source": 42
										},
										{
											"begin": 1855,
											"end": 1875,
											"name": "tag",
											"source": 42,
											"value": "130"
										},
										{
											"begin": 1855,
											"end": 1875,
											"name": "JUMPDEST",
											"source": 42
										},
										{
											"begin": 1855,
											"end": 1875,
											"name": "DUP3",
											"source": 42
										},
										{
											"begin": 1855,
											"end": 1875,
											"name": "ADD",
											"source": 42
										},
										{
											"begin": 1855,
											"end": 1875,
											"name": "SWAP2",
											"source": 42
										},
										{
											"begin": 1855,
											"end": 1875,
											"name": "SWAP1",
											"source": 42
										},
										{
											"begin": 1855,
											"end": 1875,
											"name": "PUSH",
											"source": 42,
											"value": "0"
										},
										{
											"begin": 1855,
											"end": 1875,
											"name": "MSTORE",
											"source": 42
										},
										{
											"begin": 1855,
											"end": 1875,
											"name": "PUSH",
											"source": 42,
											"value": "20"
										},
										{
											"begin": 1855,
											"end": 1875,
											"name": "PUSH",
											"source": 42,
											"value": "0"
										},
										{
											"begin": 1855,
											"end": 1875,
											"name": "KECCAK256",
											"source": 42
										},
										{
											"begin": 1855,
											"end": 1875,
											"name": "SWAP1",
											"source": 42
										},
										{
											"begin": 1855,
											"end": 1875,
											"name": "tag",
											"source": 42,
											"value": "131"
										},
										{
											"begin": 1855,
											"end": 1875,
											"name": "JUMPDEST",
											"source": 42
										},
										{
											"begin": 1855,
											"end": 1875,
											"name": "DUP2",
											"source": 42
										},
										{
											"begin": 1855,
											"end": 1875,
											"name": "SLOAD",
											"source": 42
										},
										{
											"begin": 1855,
											"end": 1875,
											"name": "DUP2",
											"source": 42
										},
										{
											"begin": 1855,
											"end": 1875,
											"name": "MSTORE",
											"source": 42
										},
										{
											"begin": 1855,
											"end": 1875,
											"name": "SWAP1",
											"source": 42
										},
										{
											"begin": 1855,
											"end": 1875,
											"name": "PUSH",
											"source": 42,
											"value": "1"
										},
										{
											"begin": 1855,
											"end": 1875,
											"name": "ADD",
											"source": 42
										},
										{
											"begin": 1855,
											"end": 1875,
											"name": "SWAP1",
											"source": 42
										},
										{
											"begin": 1855,
											"end": 1875,
											"name": "PUSH",
											"source": 42,
											"value": "20"
										},
										{
											"begin": 1855,
											"end": 1875,
											"name": "ADD",
											"source": 42
										},
										{
											"begin": 1855,
											"end": 1875,
											"name": "DUP1",
											"source": 42
										},
										{
											"begin": 1855,
											"end": 1875,
											"name": "DUP4",
											"source": 42
										},
										{
											"begin": 1855,
											"end": 1875,
											"name": "GT",
											"source": 42
										},
										{
											"begin": 1855,
											"end": 1875,
											"name": "PUSH [tag]",
											"source": 42,
											"value": "131"
										},
										{
											"begin": 1855,
											"end": 1875,
											"name": "JUMPI",
											"source": 42
										},
										{
											"begin": 1855,
											"end": 1875,
											"name": "DUP3",
											"source": 42
										},
										{
											"begin": 1855,
											"end": 1875,
											"name": "SWAP1",
											"source": 42
										},
										{
											"begin": 1855,
											"end": 1875,
											"name": "SUB",
											"source": 42
										},
										{
											"begin": 1855,
											"end": 1875,
											"name": "PUSH",
											"source": 42,
											"value": "1F"
										},
										{
											"begin": 1855,
											"end": 1875,
											"name": "AND",
											"source": 42
										},
										{
											"begin": 1855,
											"end": 1875,
											"name": "DUP3",
											"source": 42
										},
										{
											"begin": 1855,
											"end": 1875,
											"name": "ADD",
											"source": 42
										},
										{
											"begin": 1855,
											"end": 1875,
											"name": "SWAP2",
											"source": 42
										},
										{
											"begin": 1855,
											"end": 1875,
											"name": "tag",
											"source": 42,
											"value": "129"
										},
										{
											"begin": 1855,
											"end": 1875,
											"name": "JUMPDEST",
											"source": 42
										},
										{
											"begin": 1855,
											"end": 1875,
											"name": "POP",
											"source": 42
										},
										{
											"begin": 1855,
											"end": 1875,
											"name": "POP",
											"source": 42
										},
										{
											"begin": 1855,
											"end": 1875,
											"name": "POP",
											"source": 42
										},
										{
											"begin": 1855,
											"end": 1875,
											"name": "POP",
											"source": 42
										},
										{
											"begin": 1855,
											"end": 1875,
											"name": "POP",
											"source": 42
										},
										{
											"begin": 1855,
											"end": 1875,
											"name": "DUP2",
											"source": 42
										},
										{
											"begin": 1855,
											"end": 1875,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 42
										},
										{
											"begin": 1820,
											"end": 1849,
											"name": "tag",
											"source": 42,
											"value": "72"
										},
										{
											"begin": 1820,
											"end": 1849,
											"name": "JUMPDEST",
											"source": 42
										},
										{
											"begin": 1820,
											"end": 1849,
											"name": "PUSH",
											"source": 42,
											"value": "6"
										},
										{
											"begin": 1820,
											"end": 1849,
											"name": "DUP2",
											"source": 42
										},
										{
											"begin": 1820,
											"end": 1849,
											"name": "DUP2",
											"source": 42
										},
										{
											"begin": 1820,
											"end": 1849,
											"name": "SLOAD",
											"source": 42
										},
										{
											"begin": 1820,
											"end": 1849,
											"name": "DUP2",
											"source": 42
										},
										{
											"begin": 1820,
											"end": 1849,
											"name": "LT",
											"source": 42
										},
										{
											"begin": 1820,
											"end": 1849,
											"name": "PUSH [tag]",
											"source": 42,
											"value": "132"
										},
										{
											"begin": 1820,
											"end": 1849,
											"name": "JUMPI",
											"source": 42
										},
										{
											"begin": 1820,
											"end": 1849,
											"name": "PUSH",
											"source": 42,
											"value": "0"
										},
										{
											"begin": 1820,
											"end": 1849,
											"name": "DUP1",
											"source": 42
										},
										{
											"begin": 1820,
											"end": 1849,
											"name": "REVERT",
											"source": 42
										},
										{
											"begin": 1820,
											"end": 1849,
											"name": "tag",
											"source": 42,
											"value": "132"
										},
										{
											"begin": 1820,
											"end": 1849,
											"name": "JUMPDEST",
											"source": 42
										},
										{
											"begin": 1820,
											"end": 1849,
											"name": "SWAP1",
											"source": 42
										},
										{
											"begin": 1820,
											"end": 1849,
											"name": "PUSH",
											"source": 42,
											"value": "0"
										},
										{
											"begin": 1820,
											"end": 1849,
											"name": "MSTORE",
											"source": 42
										},
										{
											"begin": 1820,
											"end": 1849,
											"name": "PUSH",
											"source": 42,
											"value": "20"
										},
										{
											"begin": 1820,
											"end": 1849,
											"name": "PUSH",
											"source": 42,
											"value": "0"
										},
										{
											"begin": 1820,
											"end": 1849,
											"name": "KECCAK256",
											"source": 42
										},
										{
											"begin": 1820,
											"end": 1849,
											"name": "ADD",
											"source": 42
										},
										{
											"begin": 1820,
											"end": 1849,
											"name": "PUSH",
											"source": 42,
											"value": "0"
										},
										{
											"begin": 1820,
											"end": 1849,
											"name": "SWAP2",
											"source": 42
										},
										{
											"begin": 1820,
											"end": 1849,
											"name": "POP",
											"source": 42
										},
										{
											"begin": 1820,
											"end": 1849,
											"name": "SWAP1",
											"source": 42
										},
										{
											"begin": 1820,
											"end": 1849,
											"name": "POP",
											"source": 42
										},
										{
											"begin": 1820,
											"end": 1849,
											"name": "DUP1",
											"source": 42
										},
										{
											"begin": 1820,
											"end": 1849,
											"name": "SLOAD",
											"source": 42
										},
										{
											"begin": 1820,
											"end": 1849,
											"name": "PUSH [tag]",
											"source": 42,
											"value": "127"
										},
										{
											"begin": 1820,
											"end": 1849,
											"name": "SWAP1",
											"source": 42
										},
										{
											"begin": 1820,
											"end": 1849,
											"name": "PUSH [tag]",
											"source": 42,
											"value": "90"
										},
										{
											"begin": 1820,
											"end": 1849,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 42
										},
										{
											"begin": 196,
											"end": 380,
											"name": "tag",
											"source": 43,
											"value": "139"
										},
										{
											"begin": 196,
											"end": 380,
											"name": "JUMPDEST",
											"source": 43
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4E487B71"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 245,
											"end": 246,
											"name": "PUSH",
											"source": 43,
											"value": "0"
										},
										{
											"begin": 238,
											"end": 326,
											"name": "MSTORE",
											"source": 43
										},
										{
											"begin": 345,
											"end": 349,
											"name": "PUSH",
											"source": 43,
											"value": "41"
										},
										{
											"begin": 342,
											"end": 343,
											"name": "PUSH",
											"source": 43,
											"value": "4"
										},
										{
											"begin": 335,
											"end": 350,
											"name": "MSTORE",
											"source": 43
										},
										{
											"begin": 369,
											"end": 373,
											"name": "PUSH",
											"source": 43,
											"value": "24"
										},
										{
											"begin": 366,
											"end": 367,
											"name": "PUSH",
											"source": 43,
											"value": "0"
										},
										{
											"begin": 359,
											"end": 374,
											"name": "REVERT",
											"source": 43
										},
										{
											"begin": 385,
											"end": 1104,
											"name": "tag",
											"source": 43,
											"value": "140"
										},
										{
											"begin": 385,
											"end": 1104,
											"name": "JUMPDEST",
											"source": 43
										},
										{
											"begin": 428,
											"end": 433,
											"name": "PUSH",
											"source": 43,
											"value": "0"
										},
										{
											"begin": 481,
											"end": 484,
											"name": "DUP3",
											"source": 43
										},
										{
											"begin": 474,
											"end": 478,
											"name": "PUSH",
											"source": 43,
											"value": "1F"
										},
										{
											"begin": 466,
											"end": 472,
											"name": "DUP4",
											"source": 43
										},
										{
											"begin": 462,
											"end": 479,
											"name": "ADD",
											"source": 43
										},
										{
											"begin": 458,
											"end": 485,
											"name": "SLT",
											"source": 43
										},
										{
											"begin": 448,
											"end": 503,
											"name": "PUSH [tag]",
											"source": 43,
											"value": "149"
										},
										{
											"begin": 448,
											"end": 503,
											"name": "JUMPI",
											"source": 43
										},
										{
											"begin": 499,
											"end": 500,
											"name": "PUSH",
											"source": 43,
											"value": "0"
										},
										{
											"begin": 496,
											"end": 497,
											"name": "DUP1",
											"source": 43
										},
										{
											"begin": 489,
											"end": 501,
											"name": "REVERT",
											"source": 43
										},
										{
											"begin": 448,
											"end": 503,
											"name": "tag",
											"source": 43,
											"value": "149"
										},
										{
											"begin": 448,
											"end": 503,
											"name": "JUMPDEST",
											"source": 43
										},
										{
											"begin": 535,
											"end": 541,
											"name": "DUP2",
											"source": 43
										},
										{
											"begin": 522,
											"end": 542,
											"name": "CALLDATALOAD",
											"source": 43
										},
										{
											"begin": 561,
											"end": 579,
											"name": "PUSH",
											"source": 43,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 598,
											"end": 600,
											"name": "DUP1",
											"source": 43
										},
										{
											"begin": 594,
											"end": 596,
											"name": "DUP3",
											"source": 43
										},
										{
											"begin": 591,
											"end": 601,
											"name": "GT",
											"source": 43
										},
										{
											"begin": 588,
											"end": 624,
											"name": "ISZERO",
											"source": 43
										},
										{
											"begin": 588,
											"end": 624,
											"name": "PUSH [tag]",
											"source": 43,
											"value": "151"
										},
										{
											"begin": 588,
											"end": 624,
											"name": "JUMPI",
											"source": 43
										},
										{
											"begin": 604,
											"end": 622,
											"name": "PUSH [tag]",
											"source": 43,
											"value": "151"
										},
										{
											"begin": 604,
											"end": 622,
											"name": "PUSH [tag]",
											"source": 43,
											"value": "139"
										},
										{
											"begin": 604,
											"end": 622,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 43
										},
										{
											"begin": 604,
											"end": 622,
											"name": "tag",
											"source": 43,
											"value": "151"
										},
										{
											"begin": 604,
											"end": 622,
											"name": "JUMPDEST",
											"source": 43
										},
										{
											"begin": 679,
											"end": 681,
											"name": "PUSH",
											"source": 43,
											"value": "40"
										},
										{
											"begin": 673,
											"end": 682,
											"name": "MLOAD",
											"source": 43
										},
										{
											"begin": 647,
											"end": 649,
											"name": "PUSH",
											"source": 43,
											"value": "1F"
										},
										{
											"begin": 733,
											"end": 746,
											"name": "DUP4",
											"source": 43
										},
										{
											"begin": 733,
											"end": 746,
											"name": "ADD",
											"source": 43
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 729,
											"end": 751,
											"name": "SWAP1",
											"source": 43
										},
										{
											"begin": 729,
											"end": 751,
											"name": "DUP2",
											"source": 43
										},
										{
											"begin": 729,
											"end": 751,
											"name": "AND",
											"source": 43
										},
										{
											"begin": 753,
											"end": 755,
											"name": "PUSH",
											"source": 43,
											"value": "3F"
										},
										{
											"begin": 725,
											"end": 756,
											"name": "ADD",
											"source": 43
										},
										{
											"begin": 721,
											"end": 761,
											"name": "AND",
											"source": 43
										},
										{
											"begin": 709,
											"end": 762,
											"name": "DUP2",
											"source": 43
										},
										{
											"begin": 709,
											"end": 762,
											"name": "ADD",
											"source": 43
										},
										{
											"begin": 709,
											"end": 762,
											"name": "SWAP1",
											"source": 43
										},
										{
											"begin": 777,
											"end": 795,
											"name": "DUP3",
											"source": 43
										},
										{
											"begin": 777,
											"end": 795,
											"name": "DUP3",
											"source": 43
										},
										{
											"begin": 777,
											"end": 795,
											"name": "GT",
											"source": 43
										},
										{
											"begin": 797,
											"end": 819,
											"name": "DUP2",
											"source": 43
										},
										{
											"begin": 797,
											"end": 819,
											"name": "DUP4",
											"source": 43
										},
										{
											"begin": 797,
											"end": 819,
											"name": "LT",
											"source": 43
										},
										{
											"begin": 774,
											"end": 820,
											"name": "OR",
											"source": 43
										},
										{
											"begin": 771,
											"end": 843,
											"name": "ISZERO",
											"source": 43
										},
										{
											"begin": 771,
											"end": 843,
											"name": "PUSH [tag]",
											"source": 43,
											"value": "153"
										},
										{
											"begin": 771,
											"end": 843,
											"name": "JUMPI",
											"source": 43
										},
										{
											"begin": 823,
											"end": 841,
											"name": "PUSH [tag]",
											"source": 43,
											"value": "153"
										},
										{
											"begin": 823,
											"end": 841,
											"name": "PUSH [tag]",
											"source": 43,
											"value": "139"
										},
										{
											"begin": 823,
											"end": 841,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 43
										},
										{
											"begin": 823,
											"end": 841,
											"name": "tag",
											"source": 43,
											"value": "153"
										},
										{
											"begin": 823,
											"end": 841,
											"name": "JUMPDEST",
											"source": 43
										},
										{
											"begin": 863,
											"end": 873,
											"name": "DUP2",
											"source": 43
										},
										{
											"begin": 859,
											"end": 861,
											"name": "PUSH",
											"source": 43,
											"value": "40"
										},
										{
											"begin": 852,
											"end": 874,
											"name": "MSTORE",
											"source": 43
										},
										{
											"begin": 898,
											"end": 900,
											"name": "DUP4",
											"source": 43
										},
										{
											"begin": 890,
											"end": 896,
											"name": "DUP2",
											"source": 43
										},
										{
											"begin": 883,
											"end": 901,
											"name": "MSTORE",
											"source": 43
										},
										{
											"begin": 944,
											"end": 947,
											"name": "DUP7",
											"source": 43
										},
										{
											"begin": 937,
											"end": 941,
											"name": "PUSH",
											"source": 43,
											"value": "20"
										},
										{
											"begin": 932,
											"end": 934,
											"name": "DUP6",
											"source": 43
										},
										{
											"begin": 924,
											"end": 930,
											"name": "DUP9",
											"source": 43
										},
										{
											"begin": 920,
											"end": 935,
											"name": "ADD",
											"source": 43
										},
										{
											"begin": 916,
											"end": 942,
											"name": "ADD",
											"source": 43
										},
										{
											"begin": 913,
											"end": 948,
											"name": "GT",
											"source": 43
										},
										{
											"begin": 910,
											"end": 965,
											"name": "ISZERO",
											"source": 43
										},
										{
											"begin": 910,
											"end": 965,
											"name": "PUSH [tag]",
											"source": 43,
											"value": "154"
										},
										{
											"begin": 910,
											"end": 965,
											"name": "JUMPI",
											"source": 43
										},
										{
											"begin": 961,
											"end": 962,
											"name": "PUSH",
											"source": 43,
											"value": "0"
										},
										{
											"begin": 958,
											"end": 959,
											"name": "DUP1",
											"source": 43
										},
										{
											"begin": 951,
											"end": 963,
											"name": "REVERT",
											"source": 43
										},
										{
											"begin": 910,
											"end": 965,
											"name": "tag",
											"source": 43,
											"value": "154"
										},
										{
											"begin": 910,
											"end": 965,
											"name": "JUMPDEST",
											"source": 43
										},
										{
											"begin": 1025,
											"end": 1027,
											"name": "DUP4",
											"source": 43
										},
										{
											"begin": 1018,
											"end": 1022,
											"name": "PUSH",
											"source": 43,
											"value": "20"
										},
										{
											"begin": 1010,
											"end": 1016,
											"name": "DUP8",
											"source": 43
										},
										{
											"begin": 1006,
											"end": 1023,
											"name": "ADD",
											"source": 43
										},
										{
											"begin": 999,
											"end": 1003,
											"name": "PUSH",
											"source": 43,
											"value": "20"
										},
										{
											"begin": 991,
											"end": 997,
											"name": "DUP4",
											"source": 43
										},
										{
											"begin": 987,
											"end": 1004,
											"name": "ADD",
											"source": 43
										},
										{
											"begin": 974,
											"end": 1028,
											"name": "CALLDATACOPY",
											"source": 43
										},
										{
											"begin": 1072,
											"end": 1073,
											"name": "PUSH",
											"source": 43,
											"value": "0"
										},
										{
											"begin": 1065,
											"end": 1069,
											"name": "PUSH",
											"source": 43,
											"value": "20"
										},
										{
											"begin": 1060,
											"end": 1062,
											"name": "DUP6",
											"source": 43
										},
										{
											"begin": 1052,
											"end": 1058,
											"name": "DUP4",
											"source": 43
										},
										{
											"begin": 1048,
											"end": 1063,
											"name": "ADD",
											"source": 43
										},
										{
											"begin": 1044,
											"end": 1070,
											"name": "ADD",
											"source": 43
										},
										{
											"begin": 1037,
											"end": 1074,
											"name": "MSTORE",
											"source": 43
										},
										{
											"begin": 1092,
											"end": 1098,
											"name": "DUP1",
											"source": 43
										},
										{
											"begin": 1083,
											"end": 1098,
											"name": "SWAP5",
											"source": 43
										},
										{
											"begin": 1083,
											"end": 1098,
											"name": "POP",
											"source": 43
										},
										{
											"begin": 1083,
											"end": 1098,
											"name": "POP",
											"source": 43
										},
										{
											"begin": 1083,
											"end": 1098,
											"name": "POP",
											"source": 43
										},
										{
											"begin": 1083,
											"end": 1098,
											"name": "POP",
											"source": 43
										},
										{
											"begin": 1083,
											"end": 1098,
											"name": "POP",
											"source": 43
										},
										{
											"begin": 385,
											"end": 1104,
											"name": "SWAP3",
											"source": 43
										},
										{
											"begin": 385,
											"end": 1104,
											"name": "SWAP2",
											"source": 43
										},
										{
											"begin": 385,
											"end": 1104,
											"name": "POP",
											"source": 43
										},
										{
											"begin": 385,
											"end": 1104,
											"name": "POP",
											"source": 43
										},
										{
											"begin": 385,
											"end": 1104,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 43
										},
										{
											"begin": 1109,
											"end": 1720,
											"name": "tag",
											"source": 43,
											"value": "25"
										},
										{
											"begin": 1109,
											"end": 1720,
											"name": "JUMPDEST",
											"source": 43
										},
										{
											"begin": 1206,
											"end": 1212,
											"name": "PUSH",
											"source": 43,
											"value": "0"
										},
										{
											"begin": 1214,
											"end": 1220,
											"name": "DUP1",
											"source": 43
										},
										{
											"begin": 1222,
											"end": 1228,
											"name": "PUSH",
											"source": 43,
											"value": "0"
										},
										{
											"begin": 1275,
											"end": 1277,
											"name": "PUSH",
											"source": 43,
											"value": "60"
										},
										{
											"begin": 1263,
											"end": 1272,
											"name": "DUP5",
											"source": 43
										},
										{
											"begin": 1254,
											"end": 1261,
											"name": "DUP7",
											"source": 43
										},
										{
											"begin": 1250,
											"end": 1273,
											"name": "SUB",
											"source": 43
										},
										{
											"begin": 1246,
											"end": 1278,
											"name": "SLT",
											"source": 43
										},
										{
											"begin": 1243,
											"end": 1295,
											"name": "ISZERO",
											"source": 43
										},
										{
											"begin": 1243,
											"end": 1295,
											"name": "PUSH [tag]",
											"source": 43,
											"value": "156"
										},
										{
											"begin": 1243,
											"end": 1295,
											"name": "JUMPI",
											"source": 43
										},
										{
											"begin": 1291,
											"end": 1292,
											"name": "PUSH",
											"source": 43,
											"value": "0"
										},
										{
											"begin": 1288,
											"end": 1289,
											"name": "DUP1",
											"source": 43
										},
										{
											"begin": 1281,
											"end": 1293,
											"name": "REVERT",
											"source": 43
										},
										{
											"begin": 1243,
											"end": 1295,
											"name": "tag",
											"source": 43,
											"value": "156"
										},
										{
											"begin": 1243,
											"end": 1295,
											"name": "JUMPDEST",
											"source": 43
										},
										{
											"begin": 1331,
											"end": 1340,
											"name": "DUP4",
											"source": 43
										},
										{
											"begin": 1318,
											"end": 1341,
											"name": "CALLDATALOAD",
											"source": 43
										},
										{
											"begin": 1360,
											"end": 1378,
											"name": "PUSH",
											"source": 43,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1401,
											"end": 1403,
											"name": "DUP1",
											"source": 43
										},
										{
											"begin": 1393,
											"end": 1399,
											"name": "DUP3",
											"source": 43
										},
										{
											"begin": 1390,
											"end": 1404,
											"name": "GT",
											"source": 43
										},
										{
											"begin": 1387,
											"end": 1421,
											"name": "ISZERO",
											"source": 43
										},
										{
											"begin": 1387,
											"end": 1421,
											"name": "PUSH [tag]",
											"source": 43,
											"value": "157"
										},
										{
											"begin": 1387,
											"end": 1421,
											"name": "JUMPI",
											"source": 43
										},
										{
											"begin": 1417,
											"end": 1418,
											"name": "PUSH",
											"source": 43,
											"value": "0"
										},
										{
											"begin": 1414,
											"end": 1415,
											"name": "DUP1",
											"source": 43
										},
										{
											"begin": 1407,
											"end": 1419,
											"name": "REVERT",
											"source": 43
										},
										{
											"begin": 1387,
											"end": 1421,
											"name": "tag",
											"source": 43,
											"value": "157"
										},
										{
											"begin": 1387,
											"end": 1421,
											"name": "JUMPDEST",
											"source": 43
										},
										{
											"begin": 1440,
											"end": 1490,
											"name": "PUSH [tag]",
											"source": 43,
											"value": "158"
										},
										{
											"begin": 1482,
											"end": 1489,
											"name": "DUP8",
											"source": 43
										},
										{
											"begin": 1473,
											"end": 1479,
											"name": "DUP4",
											"source": 43
										},
										{
											"begin": 1462,
											"end": 1471,
											"name": "DUP9",
											"source": 43
										},
										{
											"begin": 1458,
											"end": 1480,
											"name": "ADD",
											"source": 43
										},
										{
											"begin": 1440,
											"end": 1490,
											"name": "PUSH [tag]",
											"source": 43,
											"value": "140"
										},
										{
											"begin": 1440,
											"end": 1490,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 43
										},
										{
											"begin": 1440,
											"end": 1490,
											"name": "tag",
											"source": 43,
											"value": "158"
										},
										{
											"begin": 1440,
											"end": 1490,
											"name": "JUMPDEST",
											"source": 43
										},
										{
											"begin": 1430,
											"end": 1490,
											"name": "SWAP5",
											"source": 43
										},
										{
											"begin": 1430,
											"end": 1490,
											"name": "POP",
											"source": 43
										},
										{
											"begin": 1537,
											"end": 1539,
											"name": "PUSH",
											"source": 43,
											"value": "20"
										},
										{
											"begin": 1526,
											"end": 1535,
											"name": "DUP7",
											"source": 43
										},
										{
											"begin": 1522,
											"end": 1540,
											"name": "ADD",
											"source": 43
										},
										{
											"begin": 1509,
											"end": 1541,
											"name": "CALLDATALOAD",
											"source": 43
										},
										{
											"begin": 1499,
											"end": 1541,
											"name": "SWAP4",
											"source": 43
										},
										{
											"begin": 1499,
											"end": 1541,
											"name": "POP",
											"source": 43
										},
										{
											"begin": 1594,
											"end": 1596,
											"name": "PUSH",
											"source": 43,
											"value": "40"
										},
										{
											"begin": 1583,
											"end": 1592,
											"name": "DUP7",
											"source": 43
										},
										{
											"begin": 1579,
											"end": 1597,
											"name": "ADD",
											"source": 43
										},
										{
											"begin": 1566,
											"end": 1598,
											"name": "CALLDATALOAD",
											"source": 43
										},
										{
											"begin": 1550,
											"end": 1598,
											"name": "SWAP2",
											"source": 43
										},
										{
											"begin": 1550,
											"end": 1598,
											"name": "POP",
											"source": 43
										},
										{
											"begin": 1623,
											"end": 1625,
											"name": "DUP1",
											"source": 43
										},
										{
											"begin": 1613,
											"end": 1621,
											"name": "DUP3",
											"source": 43
										},
										{
											"begin": 1610,
											"end": 1626,
											"name": "GT",
											"source": 43
										},
										{
											"begin": 1607,
											"end": 1643,
											"name": "ISZERO",
											"source": 43
										},
										{
											"begin": 1607,
											"end": 1643,
											"name": "PUSH [tag]",
											"source": 43,
											"value": "159"
										},
										{
											"begin": 1607,
											"end": 1643,
											"name": "JUMPI",
											"source": 43
										},
										{
											"begin": 1639,
											"end": 1640,
											"name": "PUSH",
											"source": 43,
											"value": "0"
										},
										{
											"begin": 1636,
											"end": 1637,
											"name": "DUP1",
											"source": 43
										},
										{
											"begin": 1629,
											"end": 1641,
											"name": "REVERT",
											"source": 43
										},
										{
											"begin": 1607,
											"end": 1643,
											"name": "tag",
											"source": 43,
											"value": "159"
										},
										{
											"begin": 1607,
											"end": 1643,
											"name": "JUMPDEST",
											"source": 43
										},
										{
											"begin": 1607,
											"end": 1643,
											"name": "POP",
											"source": 43
										},
										{
											"begin": 1662,
											"end": 1714,
											"name": "PUSH [tag]",
											"source": 43,
											"value": "160"
										},
										{
											"begin": 1706,
											"end": 1713,
											"name": "DUP7",
											"source": 43
										},
										{
											"begin": 1695,
											"end": 1703,
											"name": "DUP3",
											"source": 43
										},
										{
											"begin": 1684,
											"end": 1693,
											"name": "DUP8",
											"source": 43
										},
										{
											"begin": 1680,
											"end": 1704,
											"name": "ADD",
											"source": 43
										},
										{
											"begin": 1662,
											"end": 1714,
											"name": "PUSH [tag]",
											"source": 43,
											"value": "140"
										},
										{
											"begin": 1662,
											"end": 1714,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 43
										},
										{
											"begin": 1662,
											"end": 1714,
											"name": "tag",
											"source": 43,
											"value": "160"
										},
										{
											"begin": 1662,
											"end": 1714,
											"name": "JUMPDEST",
											"source": 43
										},
										{
											"begin": 1652,
											"end": 1714,
											"name": "SWAP2",
											"source": 43
										},
										{
											"begin": 1652,
											"end": 1714,
											"name": "POP",
											"source": 43
										},
										{
											"begin": 1652,
											"end": 1714,
											"name": "POP",
											"source": 43
										},
										{
											"begin": 1109,
											"end": 1720,
											"name": "SWAP3",
											"source": 43
										},
										{
											"begin": 1109,
											"end": 1720,
											"name": "POP",
											"source": 43
										},
										{
											"begin": 1109,
											"end": 1720,
											"name": "SWAP3",
											"source": 43
										},
										{
											"begin": 1109,
											"end": 1720,
											"name": "POP",
											"source": 43
										},
										{
											"begin": 1109,
											"end": 1720,
											"name": "SWAP3",
											"source": 43
										},
										{
											"begin": 1109,
											"end": 1720,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 43
										},
										{
											"begin": 1725,
											"end": 1905,
											"name": "tag",
											"source": 43,
											"value": "29"
										},
										{
											"begin": 1725,
											"end": 1905,
											"name": "JUMPDEST",
											"source": 43
										},
										{
											"begin": 1784,
											"end": 1790,
											"name": "PUSH",
											"source": 43,
											"value": "0"
										},
										{
											"begin": 1837,
											"end": 1839,
											"name": "PUSH",
											"source": 43,
											"value": "20"
										},
										{
											"begin": 1825,
											"end": 1834,
											"name": "DUP3",
											"source": 43
										},
										{
											"begin": 1816,
											"end": 1823,
											"name": "DUP5",
											"source": 43
										},
										{
											"begin": 1812,
											"end": 1835,
											"name": "SUB",
											"source": 43
										},
										{
											"begin": 1808,
											"end": 1840,
											"name": "SLT",
											"source": 43
										},
										{
											"begin": 1805,
											"end": 1857,
											"name": "ISZERO",
											"source": 43
										},
										{
											"begin": 1805,
											"end": 1857,
											"name": "PUSH [tag]",
											"source": 43,
											"value": "162"
										},
										{
											"begin": 1805,
											"end": 1857,
											"name": "JUMPI",
											"source": 43
										},
										{
											"begin": 1853,
											"end": 1854,
											"name": "PUSH",
											"source": 43,
											"value": "0"
										},
										{
											"begin": 1850,
											"end": 1851,
											"name": "DUP1",
											"source": 43
										},
										{
											"begin": 1843,
											"end": 1855,
											"name": "REVERT",
											"source": 43
										},
										{
											"begin": 1805,
											"end": 1857,
											"name": "tag",
											"source": 43,
											"value": "162"
										},
										{
											"begin": 1805,
											"end": 1857,
											"name": "JUMPDEST",
											"source": 43
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1876,
											"end": 1899,
											"name": "CALLDATALOAD",
											"source": 43
										},
										{
											"begin": 1876,
											"end": 1899,
											"name": "SWAP2",
											"source": 43
										},
										{
											"begin": 1725,
											"end": 1905,
											"name": "SWAP1",
											"source": 43
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1725,
											"end": 1905,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 43
										},
										{
											"begin": 2589,
											"end": 3012,
											"name": "tag",
											"source": 43,
											"value": "141"
										},
										{
											"begin": 2589,
											"end": 3012,
											"name": "JUMPDEST",
											"source": 43
										},
										{
											"begin": 2631,
											"end": 2634,
											"name": "PUSH",
											"source": 43,
											"value": "0"
										},
										{
											"begin": 2669,
											"end": 2674,
											"name": "DUP2",
											"source": 43
										},
										{
											"begin": 2663,
											"end": 2675,
											"name": "MLOAD",
											"source": 43
										},
										{
											"begin": 2696,
											"end": 2702,
											"name": "DUP1",
											"source": 43
										},
										{
											"begin": 2691,
											"end": 2694,
											"name": "DUP5",
											"source": 43
										},
										{
											"begin": 2684,
											"end": 2703,
											"name": "MSTORE",
											"source": 43
										},
										{
											"begin": 2721,
											"end": 2722,
											"name": "PUSH",
											"source": 43,
											"value": "0"
										},
										{
											"begin": 2731,
											"end": 2893,
											"name": "tag",
											"source": 43,
											"value": "168"
										},
										{
											"begin": 2731,
											"end": 2893,
											"name": "JUMPDEST",
											"source": 43
										},
										{
											"begin": 2745,
											"end": 2751,
											"name": "DUP2",
											"source": 43
										},
										{
											"begin": 2742,
											"end": 2743,
											"name": "DUP2",
											"source": 43
										},
										{
											"begin": 2739,
											"end": 2752,
											"name": "LT",
											"source": 43
										},
										{
											"begin": 2731,
											"end": 2893,
											"name": "ISZERO",
											"source": 43
										},
										{
											"begin": 2731,
											"end": 2893,
											"name": "PUSH [tag]",
											"source": 43,
											"value": "170"
										},
										{
											"begin": 2731,
											"end": 2893,
											"name": "JUMPI",
											"source": 43
										},
										{
											"begin": 2807,
											"end": 2811,
											"name": "PUSH",
											"source": 43,
											"value": "20"
										},
										{
											"begin": 2863,
											"end": 2876,
											"name": "DUP2",
											"source": 43
										},
										{
											"begin": 2863,
											"end": 2876,
											"name": "DUP6",
											"source": 43
										},
										{
											"begin": 2863,
											"end": 2876,
											"name": "ADD",
											"source": 43
										},
										{
											"begin": 2859,
											"end": 2881,
											"name": "DUP2",
											"source": 43
										},
										{
											"begin": 2859,
											"end": 2881,
											"name": "ADD",
											"source": 43
										},
										{
											"begin": 2853,
											"end": 2882,
											"name": "MLOAD",
											"source": 43
										},
										{
											"begin": 2835,
											"end": 2846,
											"name": "DUP7",
											"source": 43
										},
										{
											"begin": 2835,
											"end": 2846,
											"name": "DUP4",
											"source": 43
										},
										{
											"begin": 2835,
											"end": 2846,
											"name": "ADD",
											"source": 43
										},
										{
											"begin": 2831,
											"end": 2851,
											"name": "DUP3",
											"source": 43
										},
										{
											"begin": 2831,
											"end": 2851,
											"name": "ADD",
											"source": 43
										},
										{
											"begin": 2824,
											"end": 2883,
											"name": "MSTORE",
											"source": 43
										},
										{
											"begin": 2760,
											"end": 2772,
											"name": "ADD",
											"source": 43
										},
										{
											"begin": 2731,
											"end": 2893,
											"name": "PUSH [tag]",
											"source": 43,
											"value": "168"
										},
										{
											"begin": 2731,
											"end": 2893,
											"name": "JUMP",
											"source": 43
										},
										{
											"begin": 2731,
											"end": 2893,
											"name": "tag",
											"source": 43,
											"value": "170"
										},
										{
											"begin": 2731,
											"end": 2893,
											"name": "JUMPDEST",
											"source": 43
										},
										{
											"begin": 2735,
											"end": 2738,
											"name": "POP",
											"source": 43
										},
										{
											"begin": 2938,
											"end": 2939,
											"name": "PUSH",
											"source": 43,
											"value": "0"
										},
										{
											"begin": 2931,
											"end": 2935,
											"name": "PUSH",
											"source": 43,
											"value": "20"
										},
										{
											"begin": 2922,
											"end": 2928,
											"name": "DUP3",
											"source": 43
										},
										{
											"begin": 2917,
											"end": 2920,
											"name": "DUP7",
											"source": 43
										},
										{
											"begin": 2913,
											"end": 2929,
											"name": "ADD",
											"source": 43
										},
										{
											"begin": 2909,
											"end": 2936,
											"name": "ADD",
											"source": 43
										},
										{
											"begin": 2902,
											"end": 2940,
											"name": "MSTORE",
											"source": 43
										},
										{
											"begin": 3001,
											"end": 3005,
											"name": "PUSH",
											"source": 43,
											"value": "20"
										},
										{
											"begin": 2994,
											"end": 2996,
											"name": "PUSH",
											"source": 43,
											"value": "1F"
										},
										{
											"begin": 2990,
											"end": 2997,
											"name": "NOT",
											"source": 43
										},
										{
											"begin": 2985,
											"end": 2987,
											"name": "PUSH",
											"source": 43,
											"value": "1F"
										},
										{
											"begin": 2977,
											"end": 2983,
											"name": "DUP4",
											"source": 43
										},
										{
											"begin": 2973,
											"end": 2988,
											"name": "ADD",
											"source": 43
										},
										{
											"begin": 2969,
											"end": 2998,
											"name": "AND",
											"source": 43
										},
										{
											"begin": 2964,
											"end": 2967,
											"name": "DUP6",
											"source": 43
										},
										{
											"begin": 2960,
											"end": 2999,
											"name": "ADD",
											"source": 43
										},
										{
											"begin": 2956,
											"end": 3006,
											"name": "ADD",
											"source": 43
										},
										{
											"begin": 2949,
											"end": 3006,
											"name": "SWAP2",
											"source": 43
										},
										{
											"begin": 2949,
											"end": 3006,
											"name": "POP",
											"source": 43
										},
										{
											"begin": 2949,
											"end": 3006,
											"name": "POP",
											"source": 43
										},
										{
											"begin": 2589,
											"end": 3012,
											"name": "SWAP3",
											"source": 43
										},
										{
											"begin": 2589,
											"end": 3012,
											"name": "SWAP2",
											"source": 43
										},
										{
											"begin": 2589,
											"end": 3012,
											"name": "POP",
											"source": 43
										},
										{
											"begin": 2589,
											"end": 3012,
											"name": "POP",
											"source": 43
										},
										{
											"begin": 2589,
											"end": 3012,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 43
										},
										{
											"begin": 3017,
											"end": 3544,
											"name": "tag",
											"source": 43,
											"value": "46"
										},
										{
											"begin": 3017,
											"end": 3544,
											"name": "JUMPDEST",
											"source": 43
										},
										{
											"begin": 3270,
											"end": 3273,
											"name": "PUSH",
											"source": 43,
											"value": "80"
										},
										{
											"begin": 3259,
											"end": 3268,
											"name": "DUP2",
											"source": 43
										},
										{
											"begin": 3252,
											"end": 3274,
											"name": "MSTORE",
											"source": 43
										},
										{
											"begin": 3233,
											"end": 3237,
											"name": "PUSH",
											"source": 43,
											"value": "0"
										},
										{
											"begin": 3297,
											"end": 3343,
											"name": "PUSH [tag]",
											"source": 43,
											"value": "172"
										},
										{
											"begin": 3338,
											"end": 3341,
											"name": "PUSH",
											"source": 43,
											"value": "80"
										},
										{
											"begin": 3327,
											"end": 3336,
											"name": "DUP4",
											"source": 43
										},
										{
											"begin": 3323,
											"end": 3342,
											"name": "ADD",
											"source": 43
										},
										{
											"begin": 3315,
											"end": 3321,
											"name": "DUP8",
											"source": 43
										},
										{
											"begin": 3297,
											"end": 3343,
											"name": "PUSH [tag]",
											"source": 43,
											"value": "141"
										},
										{
											"begin": 3297,
											"end": 3343,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 43
										},
										{
											"begin": 3297,
											"end": 3343,
											"name": "tag",
											"source": 43,
											"value": "172"
										},
										{
											"begin": 3297,
											"end": 3343,
											"name": "JUMPDEST",
											"source": 43
										},
										{
											"begin": 3379,
											"end": 3385,
											"name": "DUP6",
											"source": 43
										},
										{
											"begin": 3374,
											"end": 3376,
											"name": "PUSH",
											"source": 43,
											"value": "20"
										},
										{
											"begin": 3363,
											"end": 3372,
											"name": "DUP5",
											"source": 43
										},
										{
											"begin": 3359,
											"end": 3377,
											"name": "ADD",
											"source": 43
										},
										{
											"begin": 3352,
											"end": 3386,
											"name": "MSTORE",
											"source": 43
										},
										{
											"begin": 3434,
											"end": 3443,
											"name": "DUP3",
											"source": 43
										},
										{
											"begin": 3426,
											"end": 3432,
											"name": "DUP2",
											"source": 43
										},
										{
											"begin": 3422,
											"end": 3444,
											"name": "SUB",
											"source": 43
										},
										{
											"begin": 3417,
											"end": 3419,
											"name": "PUSH",
											"source": 43,
											"value": "40"
										},
										{
											"begin": 3406,
											"end": 3415,
											"name": "DUP5",
											"source": 43
										},
										{
											"begin": 3402,
											"end": 3420,
											"name": "ADD",
											"source": 43
										},
										{
											"begin": 3395,
											"end": 3445,
											"name": "MSTORE",
											"source": 43
										},
										{
											"begin": 3462,
											"end": 3495,
											"name": "PUSH [tag]",
											"source": 43,
											"value": "173"
										},
										{
											"begin": 3488,
											"end": 3494,
											"name": "DUP2",
											"source": 43
										},
										{
											"begin": 3480,
											"end": 3486,
											"name": "DUP7",
											"source": 43
										},
										{
											"begin": 3462,
											"end": 3495,
											"name": "PUSH [tag]",
											"source": 43,
											"value": "141"
										},
										{
											"begin": 3462,
											"end": 3495,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 43
										},
										{
											"begin": 3462,
											"end": 3495,
											"name": "tag",
											"source": 43,
											"value": "173"
										},
										{
											"begin": 3462,
											"end": 3495,
											"name": "JUMPDEST",
											"source": 43
										},
										{
											"begin": 3454,
											"end": 3495,
											"name": "SWAP2",
											"source": 43
										},
										{
											"begin": 3454,
											"end": 3495,
											"name": "POP",
											"source": 43
										},
										{
											"begin": 3454,
											"end": 3495,
											"name": "POP",
											"source": 43
										},
										{
											"begin": 3531,
											"end": 3537,
											"name": "DUP3",
											"source": 43
										},
										{
											"begin": 3526,
											"end": 3528,
											"name": "PUSH",
											"source": 43,
											"value": "60"
										},
										{
											"begin": 3515,
											"end": 3524,
											"name": "DUP4",
											"source": 43
										},
										{
											"begin": 3511,
											"end": 3529,
											"name": "ADD",
											"source": 43
										},
										{
											"begin": 3504,
											"end": 3538,
											"name": "MSTORE",
											"source": 43
										},
										{
											"begin": 3017,
											"end": 3544,
											"name": "SWAP6",
											"source": 43
										},
										{
											"begin": 3017,
											"end": 3544,
											"name": "SWAP5",
											"source": 43
										},
										{
											"begin": 3017,
											"end": 3544,
											"name": "POP",
											"source": 43
										},
										{
											"begin": 3017,
											"end": 3544,
											"name": "POP",
											"source": 43
										},
										{
											"begin": 3017,
											"end": 3544,
											"name": "POP",
											"source": 43
										},
										{
											"begin": 3017,
											"end": 3544,
											"name": "POP",
											"source": 43
										},
										{
											"begin": 3017,
											"end": 3544,
											"name": "POP",
											"source": 43
										},
										{
											"begin": 3017,
											"end": 3544,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 43
										},
										{
											"begin": 3549,
											"end": 3769,
											"name": "tag",
											"source": 43,
											"value": "50"
										},
										{
											"begin": 3549,
											"end": 3769,
											"name": "JUMPDEST",
											"source": 43
										},
										{
											"begin": 3698,
											"end": 3700,
											"name": "PUSH",
											"source": 43,
											"value": "20"
										},
										{
											"begin": 3687,
											"end": 3696,
											"name": "DUP2",
											"source": 43
										},
										{
											"begin": 3680,
											"end": 3701,
											"name": "MSTORE",
											"source": 43
										},
										{
											"begin": 3661,
											"end": 3665,
											"name": "PUSH",
											"source": 43,
											"value": "0"
										},
										{
											"begin": 3718,
											"end": 3763,
											"name": "PUSH [tag]",
											"source": 43,
											"value": "175"
										},
										{
											"begin": 3759,
											"end": 3761,
											"name": "PUSH",
											"source": 43,
											"value": "20"
										},
										{
											"begin": 3748,
											"end": 3757,
											"name": "DUP4",
											"source": 43
										},
										{
											"begin": 3744,
											"end": 3762,
											"name": "ADD",
											"source": 43
										},
										{
											"begin": 3736,
											"end": 3742,
											"name": "DUP5",
											"source": 43
										},
										{
											"begin": 3718,
											"end": 3763,
											"name": "PUSH [tag]",
											"source": 43,
											"value": "141"
										},
										{
											"begin": 3718,
											"end": 3763,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 43
										},
										{
											"begin": 3718,
											"end": 3763,
											"name": "tag",
											"source": 43,
											"value": "175"
										},
										{
											"begin": 3718,
											"end": 3763,
											"name": "JUMPDEST",
											"source": 43
										},
										{
											"begin": 3710,
											"end": 3763,
											"name": "SWAP4",
											"source": 43
										},
										{
											"begin": 3549,
											"end": 3769,
											"name": "SWAP3",
											"source": 43
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3549,
											"end": 3769,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 43
										},
										{
											"begin": 3774,
											"end": 4219,
											"name": "tag",
											"source": 43,
											"value": "57"
										},
										{
											"begin": 3774,
											"end": 4219,
											"name": "JUMPDEST",
											"source": 43
										},
										{
											"begin": 3851,
											"end": 3857,
											"name": "PUSH",
											"source": 43,
											"value": "0"
										},
										{
											"begin": 3859,
											"end": 3865,
											"name": "DUP1",
											"source": 43
										},
										{
											"begin": 3867,
											"end": 3873,
											"name": "PUSH",
											"source": 43,
											"value": "0"
										},
										{
											"begin": 3920,
											"end": 3922,
											"name": "PUSH",
											"source": 43,
											"value": "60"
										},
										{
											"begin": 3908,
											"end": 3917,
											"name": "DUP5",
											"source": 43
										},
										{
											"begin": 3899,
											"end": 3906,
											"name": "DUP7",
											"source": 43
										},
										{
											"begin": 3895,
											"end": 3918,
											"name": "SUB",
											"source": 43
										},
										{
											"begin": 3891,
											"end": 3923,
											"name": "SLT",
											"source": 43
										},
										{
											"begin": 3888,
											"end": 3940,
											"name": "ISZERO",
											"source": 43
										},
										{
											"begin": 3888,
											"end": 3940,
											"name": "PUSH [tag]",
											"source": 43,
											"value": "177"
										},
										{
											"begin": 3888,
											"end": 3940,
											"name": "JUMPI",
											"source": 43
										},
										{
											"begin": 3936,
											"end": 3937,
											"name": "PUSH",
											"source": 43,
											"value": "0"
										},
										{
											"begin": 3933,
											"end": 3934,
											"name": "DUP1",
											"source": 43
										},
										{
											"begin": 3926,
											"end": 3938,
											"name": "REVERT",
											"source": 43
										},
										{
											"begin": 3888,
											"end": 3940,
											"name": "tag",
											"source": 43,
											"value": "177"
										},
										{
											"begin": 3888,
											"end": 3940,
											"name": "JUMPDEST",
											"source": 43
										},
										{
											"begin": 3975,
											"end": 3984,
											"name": "DUP4",
											"source": 43
										},
										{
											"begin": 3962,
											"end": 3985,
											"name": "CALLDATALOAD",
											"source": 43
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4018,
											"end": 4023,
											"name": "DUP2",
											"source": 43
										},
										{
											"begin": 4014,
											"end": 4068,
											"name": "AND",
											"source": 43
										},
										{
											"begin": 4007,
											"end": 4012,
											"name": "DUP2",
											"source": 43
										},
										{
											"begin": 4004,
											"end": 4069,
											"name": "EQ",
											"source": 43
										},
										{
											"begin": 3994,
											"end": 4087,
											"name": "PUSH [tag]",
											"source": 43,
											"value": "178"
										},
										{
											"begin": 3994,
											"end": 4087,
											"name": "JUMPI",
											"source": 43
										},
										{
											"begin": 4083,
											"end": 4084,
											"name": "PUSH",
											"source": 43,
											"value": "0"
										},
										{
											"begin": 4080,
											"end": 4081,
											"name": "DUP1",
											"source": 43
										},
										{
											"begin": 4073,
											"end": 4085,
											"name": "REVERT",
											"source": 43
										},
										{
											"begin": 3994,
											"end": 4087,
											"name": "tag",
											"source": 43,
											"value": "178"
										},
										{
											"begin": 3994,
											"end": 4087,
											"name": "JUMPDEST",
											"source": 43
										},
										{
											"begin": 4106,
											"end": 4111,
											"name": "SWAP6",
											"source": 43
										},
										{
											"begin": 4158,
											"end": 4160,
											"name": "PUSH",
											"source": 43,
											"value": "20"
										},
										{
											"begin": 4143,
											"end": 4161,
											"name": "DUP6",
											"source": 43
										},
										{
											"begin": 4143,
											"end": 4161,
											"name": "ADD",
											"source": 43
										},
										{
											"begin": 4130,
											"end": 4162,
											"name": "CALLDATALOAD",
											"source": 43
										},
										{
											"begin": 4130,
											"end": 4162,
											"name": "SWAP6",
											"source": 43
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4209,
											"end": 4211,
											"name": "PUSH",
											"source": 43,
											"value": "40"
										},
										{
											"begin": 4194,
											"end": 4212,
											"name": "SWAP1",
											"source": 43
										},
										{
											"begin": 4194,
											"end": 4212,
											"name": "SWAP5",
											"source": 43
										},
										{
											"begin": 4194,
											"end": 4212,
											"name": "ADD",
											"source": 43
										},
										{
											"begin": 4181,
											"end": 4213,
											"name": "CALLDATALOAD",
											"source": 43
										},
										{
											"begin": 4181,
											"end": 4213,
											"name": "SWAP4",
											"source": 43
										},
										{
											"begin": 3774,
											"end": 4219,
											"name": "SWAP3",
											"source": 43
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3774,
											"end": 4219,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 43
										},
										{
											"begin": 4817,
											"end": 5254,
											"name": "tag",
											"source": 43,
											"value": "90"
										},
										{
											"begin": 4817,
											"end": 5254,
											"name": "JUMPDEST",
											"source": 43
										},
										{
											"begin": 4896,
											"end": 4897,
											"name": "PUSH",
											"source": 43,
											"value": "1"
										},
										{
											"begin": 4892,
											"end": 4904,
											"name": "DUP2",
											"source": 43
										},
										{
											"begin": 4892,
											"end": 4904,
											"name": "DUP2",
											"source": 43
										},
										{
											"begin": 4892,
											"end": 4904,
											"name": "SHR",
											"source": 43
										},
										{
											"begin": 4892,
											"end": 4904,
											"name": "SWAP1",
											"source": 43
										},
										{
											"begin": 4939,
											"end": 4951,
											"name": "DUP3",
											"source": 43
										},
										{
											"begin": 4939,
											"end": 4951,
											"name": "AND",
											"source": 43
										},
										{
											"begin": 4939,
											"end": 4951,
											"name": "DUP1",
											"source": 43
										},
										{
											"begin": 4960,
											"end": 5021,
											"name": "PUSH [tag]",
											"source": 43,
											"value": "182"
										},
										{
											"begin": 4960,
											"end": 5021,
											"name": "JUMPI",
											"source": 43
										},
										{
											"begin": 5014,
											"end": 5018,
											"name": "PUSH",
											"source": 43,
											"value": "7F"
										},
										{
											"begin": 5006,
											"end": 5012,
											"name": "DUP3",
											"source": 43
										},
										{
											"begin": 5002,
											"end": 5019,
											"name": "AND",
											"source": 43
										},
										{
											"begin": 4992,
											"end": 5019,
											"name": "SWAP2",
											"source": 43
										},
										{
											"begin": 4992,
											"end": 5019,
											"name": "POP",
											"source": 43
										},
										{
											"begin": 4960,
											"end": 5021,
											"name": "tag",
											"source": 43,
											"value": "182"
										},
										{
											"begin": 4960,
											"end": 5021,
											"name": "JUMPDEST",
											"source": 43
										},
										{
											"begin": 5067,
											"end": 5069,
											"name": "PUSH",
											"source": 43,
											"value": "20"
										},
										{
											"begin": 5059,
											"end": 5065,
											"name": "DUP3",
											"source": 43
										},
										{
											"begin": 5056,
											"end": 5070,
											"name": "LT",
											"source": 43
										},
										{
											"begin": 5036,
											"end": 5054,
											"name": "DUP2",
											"source": 43
										},
										{
											"begin": 5033,
											"end": 5071,
											"name": "SUB",
											"source": 43
										},
										{
											"begin": 5030,
											"end": 5248,
											"name": "PUSH [tag]",
											"source": 43,
											"value": "183"
										},
										{
											"begin": 5030,
											"end": 5248,
											"name": "JUMPI",
											"source": 43
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4E487B71"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5101,
											"end": 5102,
											"name": "PUSH",
											"source": 43,
											"value": "0"
										},
										{
											"begin": 5094,
											"end": 5182,
											"name": "MSTORE",
											"source": 43
										},
										{
											"begin": 5205,
											"end": 5209,
											"name": "PUSH",
											"source": 43,
											"value": "22"
										},
										{
											"begin": 5202,
											"end": 5203,
											"name": "PUSH",
											"source": 43,
											"value": "4"
										},
										{
											"begin": 5195,
											"end": 5210,
											"name": "MSTORE",
											"source": 43
										},
										{
											"begin": 5233,
											"end": 5237,
											"name": "PUSH",
											"source": 43,
											"value": "24"
										},
										{
											"begin": 5230,
											"end": 5231,
											"name": "PUSH",
											"source": 43,
											"value": "0"
										},
										{
											"begin": 5223,
											"end": 5238,
											"name": "REVERT",
											"source": 43
										},
										{
											"begin": 5030,
											"end": 5248,
											"name": "tag",
											"source": 43,
											"value": "183"
										},
										{
											"begin": 5030,
											"end": 5248,
											"name": "JUMPDEST",
											"source": 43
										},
										{
											"begin": 5030,
											"end": 5248,
											"name": "POP",
											"source": 43
										},
										{
											"begin": 4817,
											"end": 5254,
											"name": "SWAP2",
											"source": 43
										},
										{
											"begin": 4817,
											"end": 5254,
											"name": "SWAP1",
											"source": 43
										},
										{
											"begin": 4817,
											"end": 5254,
											"name": "POP",
											"source": 43
										},
										{
											"begin": 4817,
											"end": 5254,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 43
										},
										{
											"begin": 5385,
											"end": 5903,
											"name": "tag",
											"source": 43,
											"value": "143"
										},
										{
											"begin": 5385,
											"end": 5903,
											"name": "JUMPDEST",
											"source": 43
										},
										{
											"begin": 5487,
											"end": 5489,
											"name": "PUSH",
											"source": 43,
											"value": "1F"
										},
										{
											"begin": 5482,
											"end": 5485,
											"name": "DUP3",
											"source": 43
										},
										{
											"begin": 5479,
											"end": 5490,
											"name": "GT",
											"source": 43
										},
										{
											"begin": 5476,
											"end": 5897,
											"name": "ISZERO",
											"source": 43
										},
										{
											"begin": 5476,
											"end": 5897,
											"name": "PUSH [tag]",
											"source": 43,
											"value": "186"
										},
										{
											"begin": 5476,
											"end": 5897,
											"name": "JUMPI",
											"source": 43
										},
										{
											"begin": 5523,
											"end": 5528,
											"name": "DUP1",
											"source": 43
										},
										{
											"begin": 5520,
											"end": 5521,
											"name": "PUSH",
											"source": 43,
											"value": "0"
										},
										{
											"begin": 5513,
											"end": 5529,
											"name": "MSTORE",
											"source": 43
										},
										{
											"begin": 5567,
											"end": 5571,
											"name": "PUSH",
											"source": 43,
											"value": "20"
										},
										{
											"begin": 5564,
											"end": 5565,
											"name": "PUSH",
											"source": 43,
											"value": "0"
										},
										{
											"begin": 5554,
											"end": 5572,
											"name": "KECCAK256",
											"source": 43
										},
										{
											"begin": 5637,
											"end": 5639,
											"name": "PUSH",
											"source": 43,
											"value": "1F"
										},
										{
											"begin": 5625,
											"end": 5635,
											"name": "DUP5",
											"source": 43
										},
										{
											"begin": 5621,
											"end": 5640,
											"name": "ADD",
											"source": 43
										},
										{
											"begin": 5618,
											"end": 5619,
											"name": "PUSH",
											"source": 43,
											"value": "5"
										},
										{
											"begin": 5614,
											"end": 5641,
											"name": "SHR",
											"source": 43
										},
										{
											"begin": 5608,
											"end": 5612,
											"name": "DUP2",
											"source": 43
										},
										{
											"begin": 5604,
											"end": 5642,
											"name": "ADD",
											"source": 43
										},
										{
											"begin": 5673,
											"end": 5677,
											"name": "PUSH",
											"source": 43,
											"value": "20"
										},
										{
											"begin": 5661,
											"end": 5671,
											"name": "DUP6",
											"source": 43
										},
										{
											"begin": 5658,
											"end": 5678,
											"name": "LT",
											"source": 43
										},
										{
											"begin": 5655,
											"end": 5702,
											"name": "ISZERO",
											"source": 43
										},
										{
											"begin": 5655,
											"end": 5702,
											"name": "PUSH [tag]",
											"source": 43,
											"value": "187"
										},
										{
											"begin": 5655,
											"end": 5702,
											"name": "JUMPI",
											"source": 43
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5696,
											"end": 5700,
											"name": "DUP1",
											"source": 43
										},
										{
											"begin": 5655,
											"end": 5702,
											"name": "tag",
											"source": 43,
											"value": "187"
										},
										{
											"begin": 5655,
											"end": 5702,
											"name": "JUMPDEST",
											"source": 43
										},
										{
											"begin": 5751,
											"end": 5753,
											"name": "PUSH",
											"source": 43,
											"value": "1F"
										},
										{
											"begin": 5746,
											"end": 5749,
											"name": "DUP5",
											"source": 43
										},
										{
											"begin": 5742,
											"end": 5754,
											"name": "ADD",
											"source": 43
										},
										{
											"begin": 5739,
											"end": 5740,
											"name": "PUSH",
											"source": 43,
											"value": "5"
										},
										{
											"begin": 5735,
											"end": 5755,
											"name": "SHR",
											"source": 43
										},
										{
											"begin": 5729,
											"end": 5733,
											"name": "DUP3",
											"source": 43
										},
										{
											"begin": 5725,
											"end": 5756,
											"name": "ADD",
											"source": 43
										},
										{
											"begin": 5715,
											"end": 5756,
											"name": "SWAP2",
											"source": 43
										},
										{
											"begin": 5715,
											"end": 5756,
											"name": "POP",
											"source": 43
										},
										{
											"begin": 5806,
											"end": 5887,
											"name": "tag",
											"source": 43,
											"value": "188"
										},
										{
											"begin": 5806,
											"end": 5887,
											"name": "JUMPDEST",
											"source": 43
										},
										{
											"begin": 5824,
											"end": 5826,
											"name": "DUP2",
											"source": 43
										},
										{
											"begin": 5817,
											"end": 5822,
											"name": "DUP2",
											"source": 43
										},
										{
											"begin": 5814,
											"end": 5827,
											"name": "LT",
											"source": 43
										},
										{
											"begin": 5806,
											"end": 5887,
											"name": "ISZERO",
											"source": 43
										},
										{
											"begin": 5806,
											"end": 5887,
											"name": "PUSH [tag]",
											"source": 43,
											"value": "190"
										},
										{
											"begin": 5806,
											"end": 5887,
											"name": "JUMPI",
											"source": 43
										},
										{
											"begin": 5883,
											"end": 5884,
											"name": "PUSH",
											"source": 43,
											"value": "0"
										},
										{
											"begin": 5869,
											"end": 5885,
											"name": "DUP2",
											"source": 43
										},
										{
											"begin": 5869,
											"end": 5885,
											"name": "SSTORE",
											"source": 43
										},
										{
											"begin": 5850,
											"end": 5851,
											"name": "PUSH",
											"source": 43,
											"value": "1"
										},
										{
											"begin": 5839,
											"end": 5852,
											"name": "ADD",
											"source": 43
										},
										{
											"begin": 5806,
											"end": 5887,
											"name": "PUSH [tag]",
											"source": 43,
											"value": "188"
										},
										{
											"begin": 5806,
											"end": 5887,
											"name": "JUMP",
											"source": 43
										},
										{
											"begin": 5806,
											"end": 5887,
											"name": "tag",
											"source": 43,
											"value": "190"
										},
										{
											"begin": 5806,
											"end": 5887,
											"name": "JUMPDEST",
											"source": 43
										},
										{
											"begin": 5810,
											"end": 5813,
											"name": "POP",
											"source": 43
										},
										{
											"begin": 5810,
											"end": 5813,
											"name": "POP",
											"source": 43
										},
										{
											"begin": 5476,
											"end": 5897,
											"name": "tag",
											"source": 43,
											"value": "186"
										},
										{
											"begin": 5476,
											"end": 5897,
											"name": "JUMPDEST",
											"source": 43
										},
										{
											"begin": 5385,
											"end": 5903,
											"name": "POP",
											"source": 43
										},
										{
											"begin": 5385,
											"end": 5903,
											"name": "POP",
											"source": 43
										},
										{
											"begin": 5385,
											"end": 5903,
											"name": "POP",
											"source": 43
										},
										{
											"begin": 5385,
											"end": 5903,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 43
										},
										{
											"begin": 6079,
											"end": 7424,
											"name": "tag",
											"source": 43,
											"value": "81"
										},
										{
											"begin": 6079,
											"end": 7424,
											"name": "JUMPDEST",
											"source": 43
										},
										{
											"begin": 6205,
											"end": 6208,
											"name": "DUP2",
											"source": 43
										},
										{
											"begin": 6199,
											"end": 6209,
											"name": "MLOAD",
											"source": 43
										},
										{
											"begin": 6232,
											"end": 6250,
											"name": "PUSH",
											"source": 43,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6224,
											"end": 6230,
											"name": "DUP2",
											"source": 43
										},
										{
											"begin": 6221,
											"end": 6251,
											"name": "GT",
											"source": 43
										},
										{
											"begin": 6218,
											"end": 6274,
											"name": "ISZERO",
											"source": 43
										},
										{
											"begin": 6218,
											"end": 6274,
											"name": "PUSH [tag]",
											"source": 43,
											"value": "194"
										},
										{
											"begin": 6218,
											"end": 6274,
											"name": "JUMPI",
											"source": 43
										},
										{
											"begin": 6254,
											"end": 6272,
											"name": "PUSH [tag]",
											"source": 43,
											"value": "194"
										},
										{
											"begin": 6254,
											"end": 6272,
											"name": "PUSH [tag]",
											"source": 43,
											"value": "139"
										},
										{
											"begin": 6254,
											"end": 6272,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 43
										},
										{
											"begin": 6254,
											"end": 6272,
											"name": "tag",
											"source": 43,
											"value": "194"
										},
										{
											"begin": 6254,
											"end": 6272,
											"name": "JUMPDEST",
											"source": 43
										},
										{
											"begin": 6283,
											"end": 6380,
											"name": "PUSH [tag]",
											"source": 43,
											"value": "195"
										},
										{
											"begin": 6373,
											"end": 6379,
											"name": "DUP2",
											"source": 43
										},
										{
											"begin": 6333,
											"end": 6371,
											"name": "PUSH [tag]",
											"source": 43,
											"value": "196"
										},
										{
											"begin": 6365,
											"end": 6369,
											"name": "DUP5",
											"source": 43
										},
										{
											"begin": 6359,
											"end": 6370,
											"name": "SLOAD",
											"source": 43
										},
										{
											"begin": 6333,
											"end": 6371,
											"name": "PUSH [tag]",
											"source": 43,
											"value": "90"
										},
										{
											"begin": 6333,
											"end": 6371,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 43
										},
										{
											"begin": 6333,
											"end": 6371,
											"name": "tag",
											"source": 43,
											"value": "196"
										},
										{
											"begin": 6333,
											"end": 6371,
											"name": "JUMPDEST",
											"source": 43
										},
										{
											"begin": 6327,
											"end": 6331,
											"name": "DUP5",
											"source": 43
										},
										{
											"begin": 6283,
											"end": 6380,
											"name": "PUSH [tag]",
											"source": 43,
											"value": "143"
										},
										{
											"begin": 6283,
											"end": 6380,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 43
										},
										{
											"begin": 6283,
											"end": 6380,
											"name": "tag",
											"source": 43,
											"value": "195"
										},
										{
											"begin": 6283,
											"end": 6380,
											"name": "JUMPDEST",
											"source": 43
										},
										{
											"begin": 6435,
											"end": 6439,
											"name": "PUSH",
											"source": 43,
											"value": "20"
										},
										{
											"begin": 6435,
											"end": 6439,
											"name": "DUP1",
											"source": 43
										},
										{
											"begin": 6492,
											"end": 6494,
											"name": "PUSH",
											"source": 43,
											"value": "1F"
										},
										{
											"begin": 6481,
											"end": 6495,
											"name": "DUP4",
											"source": 43
										},
										{
											"begin": 6481,
											"end": 6495,
											"name": "GT",
											"source": 43
										},
										{
											"begin": 6509,
											"end": 6510,
											"name": "PUSH",
											"source": 43,
											"value": "1"
										},
										{
											"begin": 6504,
											"end": 7167,
											"name": "DUP2",
											"source": 43
										},
										{
											"begin": 6504,
											"end": 7167,
											"name": "EQ",
											"source": 43
										},
										{
											"begin": 6504,
											"end": 7167,
											"name": "PUSH [tag]",
											"source": 43,
											"value": "198"
										},
										{
											"begin": 6504,
											"end": 7167,
											"name": "JUMPI",
											"source": 43
										},
										{
											"begin": 7211,
											"end": 7212,
											"name": "PUSH",
											"source": 43,
											"value": "0"
										},
										{
											"begin": 7228,
											"end": 7234,
											"name": "DUP5",
											"source": 43
										},
										{
											"begin": 7225,
											"end": 7314,
											"name": "ISZERO",
											"source": 43
										},
										{
											"begin": 7225,
											"end": 7314,
											"name": "PUSH [tag]",
											"source": 43,
											"value": "199"
										},
										{
											"begin": 7225,
											"end": 7314,
											"name": "JUMPI",
											"source": 43
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7280,
											"end": 7299,
											"name": "DUP6",
											"source": 43
										},
										{
											"begin": 7280,
											"end": 7299,
											"name": "DUP4",
											"source": 43
										},
										{
											"begin": 7280,
											"end": 7299,
											"name": "ADD",
											"source": 43
										},
										{
											"begin": 7274,
											"end": 7300,
											"name": "MLOAD",
											"source": 43
										},
										{
											"begin": 7225,
											"end": 7314,
											"name": "tag",
											"source": 43,
											"value": "199"
										},
										{
											"begin": 7225,
											"end": 7314,
											"name": "JUMPDEST",
											"source": 43
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 6036,
											"end": 6037,
											"name": "PUSH",
											"source": 43,
											"value": "3"
										},
										{
											"begin": 6032,
											"end": 6043,
											"name": "DUP7",
											"source": 43
										},
										{
											"begin": 6032,
											"end": 6043,
											"name": "SWAP1",
											"source": 43
										},
										{
											"begin": 6032,
											"end": 6043,
											"name": "SHL",
											"source": 43
										},
										{
											"begin": 6028,
											"end": 6052,
											"name": "SHR",
											"source": 43
										},
										{
											"begin": 6024,
											"end": 6053,
											"name": "NOT",
											"source": 43
										},
										{
											"begin": 6014,
											"end": 6054,
											"name": "AND",
											"source": 43
										},
										{
											"begin": 6060,
											"end": 6061,
											"name": "PUSH",
											"source": 43,
											"value": "1"
										},
										{
											"begin": 6056,
											"end": 6067,
											"name": "DUP6",
											"source": 43
										},
										{
											"begin": 6056,
											"end": 6067,
											"name": "SWAP1",
											"source": 43
										},
										{
											"begin": 6056,
											"end": 6067,
											"name": "SHL",
											"source": 43
										},
										{
											"begin": 6011,
											"end": 6068,
											"name": "OR",
											"source": 43
										},
										{
											"begin": 7327,
											"end": 7408,
											"name": "DUP6",
											"source": 43
										},
										{
											"begin": 7327,
											"end": 7408,
											"name": "SSTORE",
											"source": 43
										},
										{
											"begin": 6474,
											"end": 7418,
											"name": "PUSH [tag]",
											"source": 43,
											"value": "197"
										},
										{
											"begin": 6474,
											"end": 7418,
											"name": "JUMP",
											"source": 43
										},
										{
											"begin": 6504,
											"end": 7167,
											"name": "tag",
											"source": 43,
											"value": "198"
										},
										{
											"begin": 6504,
											"end": 7167,
											"name": "JUMPDEST",
											"source": 43
										},
										{
											"begin": 5332,
											"end": 5333,
											"name": "PUSH",
											"source": 43,
											"value": "0"
										},
										{
											"begin": 5325,
											"end": 5339,
											"name": "DUP6",
											"source": 43
										},
										{
											"begin": 5325,
											"end": 5339,
											"name": "DUP2",
											"source": 43
										},
										{
											"begin": 5325,
											"end": 5339,
											"name": "MSTORE",
											"source": 43
										},
										{
											"begin": 5369,
											"end": 5373,
											"name": "PUSH",
											"source": 43,
											"value": "20"
										},
										{
											"begin": 5356,
											"end": 5374,
											"name": "DUP2",
											"source": 43
										},
										{
											"begin": 5356,
											"end": 5374,
											"name": "KECCAK256",
											"source": 43
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 6540,
											"end": 6560,
											"name": "DUP7",
											"source": 43
										},
										{
											"begin": 6540,
											"end": 6560,
											"name": "AND",
											"source": 43
										},
										{
											"begin": 6540,
											"end": 6560,
											"name": "SWAP2",
											"source": 43
										},
										{
											"begin": 6658,
											"end": 6894,
											"name": "tag",
											"source": 43,
											"value": "202"
										},
										{
											"begin": 6658,
											"end": 6894,
											"name": "JUMPDEST",
											"source": 43
										},
										{
											"begin": 6672,
											"end": 6679,
											"name": "DUP3",
											"source": 43
										},
										{
											"begin": 6669,
											"end": 6670,
											"name": "DUP2",
											"source": 43
										},
										{
											"begin": 6666,
											"end": 6680,
											"name": "LT",
											"source": 43
										},
										{
											"begin": 6658,
											"end": 6894,
											"name": "ISZERO",
											"source": 43
										},
										{
											"begin": 6658,
											"end": 6894,
											"name": "PUSH [tag]",
											"source": 43,
											"value": "204"
										},
										{
											"begin": 6658,
											"end": 6894,
											"name": "JUMPI",
											"source": 43
										},
										{
											"begin": 6761,
											"end": 6780,
											"name": "DUP9",
											"source": 43
										},
										{
											"begin": 6761,
											"end": 6780,
											"name": "DUP7",
											"source": 43
										},
										{
											"begin": 6761,
											"end": 6780,
											"name": "ADD",
											"source": 43
										},
										{
											"begin": 6755,
											"end": 6781,
											"name": "MLOAD",
											"source": 43
										},
										{
											"begin": 6740,
											"end": 6782,
											"name": "DUP3",
											"source": 43
										},
										{
											"begin": 6740,
											"end": 6782,
											"name": "SSTORE",
											"source": 43
										},
										{
											"begin": 6853,
											"end": 6880,
											"name": "SWAP5",
											"source": 43
										},
										{
											"begin": 6853,
											"end": 6880,
											"name": "DUP5",
											"source": 43
										},
										{
											"begin": 6853,
											"end": 6880,
											"name": "ADD",
											"source": 43
										},
										{
											"begin": 6853,
											"end": 6880,
											"name": "SWAP5",
											"source": 43
										},
										{
											"begin": 6821,
											"end": 6822,
											"name": "PUSH",
											"source": 43,
											"value": "1"
										},
										{
											"begin": 6809,
											"end": 6823,
											"name": "SWAP1",
											"source": 43
										},
										{
											"begin": 6809,
											"end": 6823,
											"name": "SWAP2",
											"source": 43
										},
										{
											"begin": 6809,
											"end": 6823,
											"name": "ADD",
											"source": 43
										},
										{
											"begin": 6809,
											"end": 6823,
											"name": "SWAP1",
											"source": 43
										},
										{
											"begin": 6688,
											"end": 6707,
											"name": "DUP5",
											"source": 43
										},
										{
											"begin": 6688,
											"end": 6707,
											"name": "ADD",
											"source": 43
										},
										{
											"begin": 6658,
											"end": 6894,
											"name": "PUSH [tag]",
											"source": 43,
											"value": "202"
										},
										{
											"begin": 6658,
											"end": 6894,
											"name": "JUMP",
											"source": 43
										},
										{
											"begin": 6658,
											"end": 6894,
											"name": "tag",
											"source": 43,
											"value": "204"
										},
										{
											"begin": 6658,
											"end": 6894,
											"name": "JUMPDEST",
											"source": 43
										},
										{
											"begin": 6662,
											"end": 6665,
											"name": "POP",
											"source": 43
										},
										{
											"begin": 6922,
											"end": 6928,
											"name": "DUP6",
											"source": 43
										},
										{
											"begin": 6913,
											"end": 6920,
											"name": "DUP3",
											"source": 43
										},
										{
											"begin": 6910,
											"end": 6929,
											"name": "LT",
											"source": 43
										},
										{
											"begin": 6907,
											"end": 7108,
											"name": "ISZERO",
											"source": 43
										},
										{
											"begin": 6907,
											"end": 7108,
											"name": "PUSH [tag]",
											"source": 43,
											"value": "205"
										},
										{
											"begin": 6907,
											"end": 7108,
											"name": "JUMPI",
											"source": 43
										},
										{
											"begin": 6983,
											"end": 7002,
											"name": "DUP8",
											"source": 43
										},
										{
											"begin": 6983,
											"end": 7002,
											"name": "DUP6",
											"source": 43
										},
										{
											"begin": 6983,
											"end": 7002,
											"name": "ADD",
											"source": 43
										},
										{
											"begin": 6977,
											"end": 7003,
											"name": "MLOAD",
											"source": 43
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 7066,
											"end": 7067,
											"name": "PUSH",
											"source": 43,
											"value": "3"
										},
										{
											"begin": 7062,
											"end": 7076,
											"name": "DUP9",
											"source": 43
										},
										{
											"begin": 7062,
											"end": 7076,
											"name": "SWAP1",
											"source": 43
										},
										{
											"begin": 7062,
											"end": 7076,
											"name": "SHL",
											"source": 43
										},
										{
											"begin": 7078,
											"end": 7081,
											"name": "PUSH",
											"source": 43,
											"value": "F8"
										},
										{
											"begin": 7058,
											"end": 7082,
											"name": "AND",
											"source": 43
										},
										{
											"begin": 7054,
											"end": 7091,
											"name": "SHR",
											"source": 43
										},
										{
											"begin": 7050,
											"end": 7092,
											"name": "NOT",
											"source": 43
										},
										{
											"begin": 7035,
											"end": 7093,
											"name": "AND",
											"source": 43
										},
										{
											"begin": 7020,
											"end": 7094,
											"name": "DUP2",
											"source": 43
										},
										{
											"begin": 7020,
											"end": 7094,
											"name": "SSTORE",
											"source": 43
										},
										{
											"begin": 6907,
											"end": 7108,
											"name": "tag",
											"source": 43,
											"value": "205"
										},
										{
											"begin": 6907,
											"end": 7108,
											"name": "JUMPDEST",
											"source": 43
										},
										{
											"begin": 6907,
											"end": 7108,
											"name": "POP",
											"source": 43
										},
										{
											"begin": 6907,
											"end": 7108,
											"name": "POP",
											"source": 43
										},
										{
											"begin": 7154,
											"end": 7155,
											"name": "PUSH",
											"source": 43,
											"value": "1"
										},
										{
											"begin": 7145,
											"end": 7151,
											"name": "DUP5",
											"source": 43
										},
										{
											"begin": 7142,
											"end": 7143,
											"name": "PUSH",
											"source": 43,
											"value": "1"
										},
										{
											"begin": 7138,
											"end": 7152,
											"name": "SHL",
											"source": 43
										},
										{
											"begin": 7134,
											"end": 7156,
											"name": "ADD",
											"source": 43
										},
										{
											"begin": 7128,
											"end": 7132,
											"name": "DUP6",
											"source": 43
										},
										{
											"begin": 7121,
											"end": 7157,
											"name": "SSTORE",
											"source": 43
										},
										{
											"begin": 6474,
											"end": 7418,
											"name": "tag",
											"source": 43,
											"value": "197"
										},
										{
											"begin": 6474,
											"end": 7418,
											"name": "JUMPDEST",
											"source": 43
										},
										{
											"begin": 6474,
											"end": 7418,
											"name": "POP",
											"source": 43
										},
										{
											"begin": 6474,
											"end": 7418,
											"name": "POP",
											"source": 43
										},
										{
											"begin": 6474,
											"end": 7418,
											"name": "POP",
											"source": 43
										},
										{
											"begin": 6474,
											"end": 7418,
											"name": "POP",
											"source": 43
										},
										{
											"begin": 6079,
											"end": 7424,
											"name": "POP",
											"source": 43
										},
										{
											"begin": 6079,
											"end": 7424,
											"name": "POP",
											"source": 43
										},
										{
											"begin": 6079,
											"end": 7424,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 43
										},
										{
											"begin": 7429,
											"end": 7708,
											"name": "tag",
											"source": 43,
											"value": "86"
										},
										{
											"begin": 7429,
											"end": 7708,
											"name": "JUMPDEST",
											"source": 43
										},
										{
											"begin": 7494,
											"end": 7503,
											"name": "DUP1",
											"source": 43
										},
										{
											"begin": 7494,
											"end": 7503,
											"name": "DUP3",
											"source": 43
										},
										{
											"begin": 7494,
											"end": 7503,
											"name": "ADD",
											"source": 43
										},
										{
											"begin": 7515,
											"end": 7525,
											"name": "DUP1",
											"source": 43
										},
										{
											"begin": 7515,
											"end": 7525,
											"name": "DUP3",
											"source": 43
										},
										{
											"begin": 7515,
											"end": 7525,
											"name": "GT",
											"source": 43
										},
										{
											"begin": 7512,
											"end": 7702,
											"name": "ISZERO",
											"source": 43
										},
										{
											"begin": 7512,
											"end": 7702,
											"name": "PUSH [tag]",
											"source": 43,
											"value": "207"
										},
										{
											"begin": 7512,
											"end": 7702,
											"name": "JUMPI",
											"source": 43
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4E487B71"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7555,
											"end": 7556,
											"name": "PUSH",
											"source": 43,
											"value": "0"
										},
										{
											"begin": 7548,
											"end": 7636,
											"name": "MSTORE",
											"source": 43
										},
										{
											"begin": 7659,
											"end": 7663,
											"name": "PUSH",
											"source": 43,
											"value": "11"
										},
										{
											"begin": 7656,
											"end": 7657,
											"name": "PUSH",
											"source": 43,
											"value": "4"
										},
										{
											"begin": 7649,
											"end": 7664,
											"name": "MSTORE",
											"source": 43
										},
										{
											"begin": 7687,
											"end": 7691,
											"name": "PUSH",
											"source": 43,
											"value": "24"
										},
										{
											"begin": 7684,
											"end": 7685,
											"name": "PUSH",
											"source": 43,
											"value": "0"
										},
										{
											"begin": 7677,
											"end": 7692,
											"name": "REVERT",
											"source": 43
										},
										{
											"begin": 7512,
											"end": 7702,
											"name": "tag",
											"source": 43,
											"value": "207"
										},
										{
											"begin": 7512,
											"end": 7702,
											"name": "JUMPDEST",
											"source": 43
										},
										{
											"begin": 7429,
											"end": 7708,
											"name": "SWAP3",
											"source": 43
										},
										{
											"begin": 7429,
											"end": 7708,
											"name": "SWAP2",
											"source": 43
										},
										{
											"begin": 7429,
											"end": 7708,
											"name": "POP",
											"source": 43
										},
										{
											"begin": 7429,
											"end": 7708,
											"name": "POP",
											"source": 43
										},
										{
											"begin": 7429,
											"end": 7708,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 43
										},
										{
											"begin": 7713,
											"end": 8096,
											"name": "tag",
											"source": 43,
											"value": "88"
										},
										{
											"begin": 7713,
											"end": 8096,
											"name": "JUMPDEST",
											"source": 43
										},
										{
											"begin": 7910,
											"end": 7912,
											"name": "PUSH",
											"source": 43,
											"value": "40"
										},
										{
											"begin": 7899,
											"end": 7908,
											"name": "DUP2",
											"source": 43
										},
										{
											"begin": 7892,
											"end": 7913,
											"name": "MSTORE",
											"source": 43
										},
										{
											"begin": 7873,
											"end": 7877,
											"name": "PUSH",
											"source": 43,
											"value": "0"
										},
										{
											"begin": 7936,
											"end": 7981,
											"name": "PUSH [tag]",
											"source": 43,
											"value": "209"
										},
										{
											"begin": 7977,
											"end": 7979,
											"name": "PUSH",
											"source": 43,
											"value": "40"
										},
										{
											"begin": 7966,
											"end": 7975,
											"name": "DUP4",
											"source": 43
										},
										{
											"begin": 7962,
											"end": 7980,
											"name": "ADD",
											"source": 43
										},
										{
											"begin": 7954,
											"end": 7960,
											"name": "DUP6",
											"source": 43
										},
										{
											"begin": 7936,
											"end": 7981,
											"name": "PUSH [tag]",
											"source": 43,
											"value": "141"
										},
										{
											"begin": 7936,
											"end": 7981,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 43
										},
										{
											"begin": 7936,
											"end": 7981,
											"name": "tag",
											"source": 43,
											"value": "209"
										},
										{
											"begin": 7936,
											"end": 7981,
											"name": "JUMPDEST",
											"source": 43
										},
										{
											"begin": 8029,
											"end": 8038,
											"name": "DUP3",
											"source": 43
										},
										{
											"begin": 8021,
											"end": 8027,
											"name": "DUP2",
											"source": 43
										},
										{
											"begin": 8017,
											"end": 8039,
											"name": "SUB",
											"source": 43
										},
										{
											"begin": 8012,
											"end": 8014,
											"name": "PUSH",
											"source": 43,
											"value": "20"
										},
										{
											"begin": 8001,
											"end": 8010,
											"name": "DUP5",
											"source": 43
										},
										{
											"begin": 7997,
											"end": 8015,
											"name": "ADD",
											"source": 43
										},
										{
											"begin": 7990,
											"end": 8040,
											"name": "MSTORE",
											"source": 43
										},
										{
											"begin": 8057,
											"end": 8090,
											"name": "PUSH [tag]",
											"source": 43,
											"value": "210"
										},
										{
											"begin": 8083,
											"end": 8089,
											"name": "DUP2",
											"source": 43
										},
										{
											"begin": 8075,
											"end": 8081,
											"name": "DUP6",
											"source": 43
										},
										{
											"begin": 8057,
											"end": 8090,
											"name": "PUSH [tag]",
											"source": 43,
											"value": "141"
										},
										{
											"begin": 8057,
											"end": 8090,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 43
										},
										{
											"begin": 8057,
											"end": 8090,
											"name": "tag",
											"source": 43,
											"value": "210"
										},
										{
											"begin": 8057,
											"end": 8090,
											"name": "JUMPDEST",
											"source": 43
										},
										{
											"begin": 8049,
											"end": 8090,
											"name": "SWAP6",
											"source": 43
										},
										{
											"begin": 7713,
											"end": 8096,
											"name": "SWAP5",
											"source": 43
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7713,
											"end": 8096,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 43
										},
										{
											"begin": 8101,
											"end": 9528,
											"name": "tag",
											"source": 43,
											"value": "106"
										},
										{
											"begin": 8101,
											"end": 9528,
											"name": "JUMPDEST",
											"source": 43
										},
										{
											"begin": 8220,
											"end": 8223,
											"name": "DUP2",
											"source": 43
										},
										{
											"begin": 8214,
											"end": 8218,
											"name": "DUP2",
											"source": 43
										},
										{
											"begin": 8211,
											"end": 8224,
											"name": "SUB",
											"source": 43
										},
										{
											"begin": 8208,
											"end": 8234,
											"name": "PUSH [tag]",
											"source": 43,
											"value": "212"
										},
										{
											"begin": 8208,
											"end": 8234,
											"name": "JUMPI",
											"source": 43
										},
										{
											"begin": 8227,
											"end": 8232,
											"name": "POP",
											"source": 43
										},
										{
											"begin": 8227,
											"end": 8232,
											"name": "POP",
											"source": 43
										},
										{
											"begin": 8101,
											"end": 9528,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 43
										},
										{
											"begin": 8208,
											"end": 8234,
											"name": "tag",
											"source": 43,
											"value": "212"
										},
										{
											"begin": 8208,
											"end": 8234,
											"name": "JUMPDEST",
											"source": 43
										},
										{
											"begin": 8257,
											"end": 8294,
											"name": "PUSH [tag]",
											"source": 43,
											"value": "213"
										},
										{
											"begin": 8289,
											"end": 8292,
											"name": "DUP3",
											"source": 43
										},
										{
											"begin": 8283,
											"end": 8293,
											"name": "SLOAD",
											"source": 43
										},
										{
											"begin": 8257,
											"end": 8294,
											"name": "PUSH [tag]",
											"source": 43,
											"value": "90"
										},
										{
											"begin": 8257,
											"end": 8294,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 43
										},
										{
											"begin": 8257,
											"end": 8294,
											"name": "tag",
											"source": 43,
											"value": "213"
										},
										{
											"begin": 8257,
											"end": 8294,
											"name": "JUMPDEST",
											"source": 43
										},
										{
											"begin": 8317,
											"end": 8335,
											"name": "PUSH",
											"source": 43,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8309,
											"end": 8315,
											"name": "DUP2",
											"source": 43
										},
										{
											"begin": 8306,
											"end": 8336,
											"name": "GT",
											"source": 43
										},
										{
											"begin": 8303,
											"end": 8359,
											"name": "ISZERO",
											"source": 43
										},
										{
											"begin": 8303,
											"end": 8359,
											"name": "PUSH [tag]",
											"source": 43,
											"value": "215"
										},
										{
											"begin": 8303,
											"end": 8359,
											"name": "JUMPI",
											"source": 43
										},
										{
											"begin": 8339,
											"end": 8357,
											"name": "PUSH [tag]",
											"source": 43,
											"value": "215"
										},
										{
											"begin": 8339,
											"end": 8357,
											"name": "PUSH [tag]",
											"source": 43,
											"value": "139"
										},
										{
											"begin": 8339,
											"end": 8357,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 43
										},
										{
											"begin": 8339,
											"end": 8357,
											"name": "tag",
											"source": 43,
											"value": "215"
										},
										{
											"begin": 8339,
											"end": 8357,
											"name": "JUMPDEST",
											"source": 43
										},
										{
											"begin": 8368,
											"end": 8465,
											"name": "PUSH [tag]",
											"source": 43,
											"value": "216"
										},
										{
											"begin": 8458,
											"end": 8464,
											"name": "DUP2",
											"source": 43
										},
										{
											"begin": 8418,
											"end": 8456,
											"name": "PUSH [tag]",
											"source": 43,
											"value": "196"
										},
										{
											"begin": 8450,
											"end": 8454,
											"name": "DUP5",
											"source": 43
										},
										{
											"begin": 8444,
											"end": 8455,
											"name": "SLOAD",
											"source": 43
										},
										{
											"begin": 8418,
											"end": 8456,
											"name": "PUSH [tag]",
											"source": 43,
											"value": "90"
										},
										{
											"begin": 8418,
											"end": 8456,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 43
										},
										{
											"begin": 8368,
											"end": 8465,
											"name": "tag",
											"source": 43,
											"value": "216"
										},
										{
											"begin": 8368,
											"end": 8465,
											"name": "JUMPDEST",
											"source": 43
										},
										{
											"begin": 8491,
											"end": 8492,
											"name": "PUSH",
											"source": 43,
											"value": "0"
										},
										{
											"begin": 8519,
											"end": 8521,
											"name": "PUSH",
											"source": 43,
											"value": "1F"
										},
										{
											"begin": 8511,
											"end": 8517,
											"name": "DUP3",
											"source": 43
										},
										{
											"begin": 8508,
											"end": 8522,
											"name": "GT",
											"source": 43
										},
										{
											"begin": 8536,
											"end": 8537,
											"name": "PUSH",
											"source": 43,
											"value": "1"
										},
										{
											"begin": 8531,
											"end": 9271,
											"name": "DUP2",
											"source": 43
										},
										{
											"begin": 8531,
											"end": 9271,
											"name": "EQ",
											"source": 43
										},
										{
											"begin": 8531,
											"end": 9271,
											"name": "PUSH [tag]",
											"source": 43,
											"value": "219"
										},
										{
											"begin": 8531,
											"end": 9271,
											"name": "JUMPI",
											"source": 43
										},
										{
											"begin": 9315,
											"end": 9316,
											"name": "PUSH",
											"source": 43,
											"value": "0"
										},
										{
											"begin": 9332,
											"end": 9338,
											"name": "DUP4",
											"source": 43
										},
										{
											"begin": 9329,
											"end": 9418,
											"name": "ISZERO",
											"source": 43
										},
										{
											"begin": 9329,
											"end": 9418,
											"name": "PUSH [tag]",
											"source": 43,
											"value": "220"
										},
										{
											"begin": 9329,
											"end": 9418,
											"name": "JUMPI",
											"source": 43
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9384,
											"end": 9403,
											"name": "DUP5",
											"source": 43
										},
										{
											"begin": 9384,
											"end": 9403,
											"name": "DUP3",
											"source": 43
										},
										{
											"begin": 9384,
											"end": 9403,
											"name": "ADD",
											"source": 43
										},
										{
											"begin": 9378,
											"end": 9404,
											"name": "SLOAD",
											"source": 43
										},
										{
											"begin": 9329,
											"end": 9418,
											"name": "tag",
											"source": 43,
											"value": "220"
										},
										{
											"begin": 9329,
											"end": 9418,
											"name": "JUMPDEST",
											"source": 43
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 6036,
											"end": 6037,
											"name": "PUSH",
											"source": 43,
											"value": "3"
										},
										{
											"begin": 6032,
											"end": 6043,
											"name": "DUP6",
											"source": 43
										},
										{
											"begin": 6032,
											"end": 6043,
											"name": "SWAP1",
											"source": 43
										},
										{
											"begin": 6032,
											"end": 6043,
											"name": "SHL",
											"source": 43
										},
										{
											"begin": 6028,
											"end": 6052,
											"name": "SHR",
											"source": 43
										},
										{
											"begin": 6024,
											"end": 6053,
											"name": "NOT",
											"source": 43
										},
										{
											"begin": 6014,
											"end": 6054,
											"name": "AND",
											"source": 43
										},
										{
											"begin": 6060,
											"end": 6061,
											"name": "PUSH",
											"source": 43,
											"value": "1"
										},
										{
											"begin": 6056,
											"end": 6067,
											"name": "DUP5",
											"source": 43
										},
										{
											"begin": 6056,
											"end": 6067,
											"name": "SWAP1",
											"source": 43
										},
										{
											"begin": 6056,
											"end": 6067,
											"name": "SHL",
											"source": 43
										},
										{
											"begin": 6011,
											"end": 6068,
											"name": "OR",
											"source": 43
										},
										{
											"begin": 9431,
											"end": 9512,
											"name": "DUP5",
											"source": 43
										},
										{
											"begin": 9431,
											"end": 9512,
											"name": "SSTORE",
											"source": 43
										},
										{
											"begin": 8501,
											"end": 9522,
											"name": "PUSH [tag]",
											"source": 43,
											"value": "190"
										},
										{
											"begin": 8501,
											"end": 9522,
											"name": "JUMP",
											"source": 43
										},
										{
											"begin": 8531,
											"end": 9271,
											"name": "tag",
											"source": 43,
											"value": "219"
										},
										{
											"begin": 8531,
											"end": 9271,
											"name": "JUMPDEST",
											"source": 43
										},
										{
											"begin": 5332,
											"end": 5333,
											"name": "PUSH",
											"source": 43,
											"value": "0"
										},
										{
											"begin": 5325,
											"end": 5339,
											"name": "DUP6",
											"source": 43
										},
										{
											"begin": 5325,
											"end": 5339,
											"name": "DUP2",
											"source": 43
										},
										{
											"begin": 5325,
											"end": 5339,
											"name": "MSTORE",
											"source": 43
										},
										{
											"begin": 5369,
											"end": 5373,
											"name": "PUSH",
											"source": 43,
											"value": "20"
										},
										{
											"begin": 5356,
											"end": 5374,
											"name": "DUP1",
											"source": 43
										},
										{
											"begin": 5356,
											"end": 5374,
											"name": "DUP3",
											"source": 43
										},
										{
											"begin": 5356,
											"end": 5374,
											"name": "KECCAK256",
											"source": 43
										},
										{
											"begin": 5325,
											"end": 5339,
											"name": "DUP7",
											"source": 43
										},
										{
											"begin": 5325,
											"end": 5339,
											"name": "DUP4",
											"source": 43
										},
										{
											"begin": 5325,
											"end": 5339,
											"name": "MSTORE",
											"source": 43
										},
										{
											"begin": 5356,
											"end": 5374,
											"name": "SWAP1",
											"source": 43
										},
										{
											"begin": 5356,
											"end": 5374,
											"name": "DUP3",
											"source": 43
										},
										{
											"begin": 5356,
											"end": 5374,
											"name": "KECCAK256",
											"source": 43
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 8567,
											"end": 8587,
											"name": "DUP7",
											"source": 43
										},
										{
											"begin": 8567,
											"end": 8587,
											"name": "AND",
											"source": 43
										},
										{
											"begin": 8567,
											"end": 8587,
											"name": "SWAP3",
											"source": 43
										},
										{
											"begin": 8745,
											"end": 8996,
											"name": "tag",
											"source": 43,
											"value": "224"
										},
										{
											"begin": 8745,
											"end": 8996,
											"name": "JUMPDEST",
											"source": 43
										},
										{
											"begin": 8759,
											"end": 8766,
											"name": "DUP4",
											"source": 43
										},
										{
											"begin": 8756,
											"end": 8757,
											"name": "DUP2",
											"source": 43
										},
										{
											"begin": 8753,
											"end": 8767,
											"name": "LT",
											"source": 43
										},
										{
											"begin": 8745,
											"end": 8996,
											"name": "ISZERO",
											"source": 43
										},
										{
											"begin": 8745,
											"end": 8996,
											"name": "PUSH [tag]",
											"source": 43,
											"value": "226"
										},
										{
											"begin": 8745,
											"end": 8996,
											"name": "JUMPI",
											"source": 43
										},
										{
											"begin": 8841,
											"end": 8862,
											"name": "DUP3",
											"source": 43
										},
										{
											"begin": 8841,
											"end": 8862,
											"name": "DUP7",
											"source": 43
										},
										{
											"begin": 8841,
											"end": 8862,
											"name": "ADD",
											"source": 43
										},
										{
											"begin": 8835,
											"end": 8863,
											"name": "SLOAD",
											"source": 43
										},
										{
											"begin": 8820,
											"end": 8864,
											"name": "DUP3",
											"source": 43
										},
										{
											"begin": 8820,
											"end": 8864,
											"name": "SSTORE",
											"source": 43
										},
										{
											"begin": 8891,
											"end": 8892,
											"name": "PUSH",
											"source": 43,
											"value": "1"
										},
										{
											"begin": 8964,
											"end": 8982,
											"name": "SWAP6",
											"source": 43
										},
										{
											"begin": 8964,
											"end": 8982,
											"name": "DUP7",
											"source": 43
										},
										{
											"begin": 8964,
											"end": 8982,
											"name": "ADD",
											"source": 43
										},
										{
											"begin": 8964,
											"end": 8982,
											"name": "SWAP6",
											"source": 43
										},
										{
											"begin": 8919,
											"end": 8934,
											"name": "SWAP1",
											"source": 43
										},
										{
											"begin": 8919,
											"end": 8934,
											"name": "SWAP2",
											"source": 43
										},
										{
											"begin": 8919,
											"end": 8934,
											"name": "ADD",
											"source": 43
										},
										{
											"begin": 8919,
											"end": 8934,
											"name": "SWAP1",
											"source": 43
										},
										{
											"begin": 8782,
											"end": 8786,
											"name": "PUSH",
											"source": 43,
											"value": "20"
										},
										{
											"begin": 8775,
											"end": 8787,
											"name": "ADD",
											"source": 43
										},
										{
											"begin": 8745,
											"end": 8996,
											"name": "PUSH [tag]",
											"source": 43,
											"value": "224"
										},
										{
											"begin": 8745,
											"end": 8996,
											"name": "JUMP",
											"source": 43
										},
										{
											"begin": 8745,
											"end": 8996,
											"name": "tag",
											"source": 43,
											"value": "226"
										},
										{
											"begin": 8745,
											"end": 8996,
											"name": "JUMPDEST",
											"source": 43
										},
										{
											"begin": 8749,
											"end": 8752,
											"name": "POP",
											"source": 43
										},
										{
											"begin": 9024,
											"end": 9030,
											"name": "DUP6",
											"source": 43
										},
										{
											"begin": 9015,
											"end": 9022,
											"name": "DUP4",
											"source": 43
										},
										{
											"begin": 9012,
											"end": 9031,
											"name": "LT",
											"source": 43
										},
										{
											"begin": 9009,
											"end": 9212,
											"name": "ISZERO",
											"source": 43
										},
										{
											"begin": 9009,
											"end": 9212,
											"name": "PUSH [tag]",
											"source": 43,
											"value": "227"
										},
										{
											"begin": 9009,
											"end": 9212,
											"name": "JUMPI",
											"source": 43
										},
										{
											"begin": 9085,
											"end": 9106,
											"name": "DUP2",
											"source": 43
										},
										{
											"begin": 9085,
											"end": 9106,
											"name": "DUP6",
											"source": 43
										},
										{
											"begin": 9085,
											"end": 9106,
											"name": "ADD",
											"source": 43
										},
										{
											"begin": 9079,
											"end": 9107,
											"name": "SLOAD",
											"source": 43
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 9170,
											"end": 9171,
											"name": "PUSH",
											"source": 43,
											"value": "3"
										},
										{
											"begin": 9166,
											"end": 9180,
											"name": "DUP9",
											"source": 43
										},
										{
											"begin": 9166,
											"end": 9180,
											"name": "SWAP1",
											"source": 43
										},
										{
											"begin": 9166,
											"end": 9180,
											"name": "SHL",
											"source": 43
										},
										{
											"begin": 9182,
											"end": 9185,
											"name": "PUSH",
											"source": 43,
											"value": "F8"
										},
										{
											"begin": 9162,
											"end": 9186,
											"name": "AND",
											"source": 43
										},
										{
											"begin": 9158,
											"end": 9195,
											"name": "SHR",
											"source": 43
										},
										{
											"begin": 9154,
											"end": 9196,
											"name": "NOT",
											"source": 43
										},
										{
											"begin": 9139,
											"end": 9197,
											"name": "AND",
											"source": 43
										},
										{
											"begin": 9124,
											"end": 9198,
											"name": "DUP2",
											"source": 43
										},
										{
											"begin": 9124,
											"end": 9198,
											"name": "SSTORE",
											"source": 43
										},
										{
											"begin": 9009,
											"end": 9212,
											"name": "tag",
											"source": 43,
											"value": "227"
										},
										{
											"begin": 9009,
											"end": 9212,
											"name": "JUMPDEST",
											"source": 43
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9258,
											"end": 9259,
											"name": "PUSH",
											"source": 43,
											"value": "1"
										},
										{
											"begin": 9242,
											"end": 9256,
											"name": "SWAP1",
											"source": 43
										},
										{
											"begin": 9242,
											"end": 9256,
											"name": "DUP2",
											"source": 43
										},
										{
											"begin": 9242,
											"end": 9256,
											"name": "SHL",
											"source": 43
										},
										{
											"begin": 9238,
											"end": 9260,
											"name": "ADD",
											"source": 43
										},
										{
											"begin": 9225,
											"end": 9261,
											"name": "SWAP1",
											"source": 43
										},
										{
											"begin": 9225,
											"end": 9261,
											"name": "SSTORE",
											"source": 43
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8101,
											"end": 9528,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 43
										}
									]
								}
							},
							"sourceList": [
								"@solidstate/contracts/access/ownable/IOwnable.sol",
								"@solidstate/contracts/access/ownable/IOwnableInternal.sol",
								"@solidstate/contracts/access/ownable/ISafeOwnable.sol",
								"@solidstate/contracts/access/ownable/ISafeOwnableInternal.sol",
								"@solidstate/contracts/access/ownable/Ownable.sol",
								"@solidstate/contracts/access/ownable/OwnableInternal.sol",
								"@solidstate/contracts/access/ownable/OwnableStorage.sol",
								"@solidstate/contracts/access/ownable/SafeOwnable.sol",
								"@solidstate/contracts/access/ownable/SafeOwnableInternal.sol",
								"@solidstate/contracts/access/ownable/SafeOwnableStorage.sol",
								"@solidstate/contracts/interfaces/IERC165.sol",
								"@solidstate/contracts/interfaces/IERC165Internal.sol",
								"@solidstate/contracts/interfaces/IERC173.sol",
								"@solidstate/contracts/interfaces/IERC173Internal.sol",
								"@solidstate/contracts/interfaces/IERC2535DiamondCut.sol",
								"@solidstate/contracts/interfaces/IERC2535DiamondCutInternal.sol",
								"@solidstate/contracts/interfaces/IERC2535DiamondLoupe.sol",
								"@solidstate/contracts/interfaces/IERC2535DiamondLoupeInternal.sol",
								"@solidstate/contracts/introspection/ERC165/base/ERC165Base.sol",
								"@solidstate/contracts/introspection/ERC165/base/ERC165BaseInternal.sol",
								"@solidstate/contracts/introspection/ERC165/base/ERC165BaseStorage.sol",
								"@solidstate/contracts/introspection/ERC165/base/IERC165Base.sol",
								"@solidstate/contracts/introspection/ERC165/base/IERC165BaseInternal.sol",
								"@solidstate/contracts/proxy/IProxy.sol",
								"@solidstate/contracts/proxy/Proxy.sol",
								"@solidstate/contracts/proxy/diamond/ISolidStateDiamond.sol",
								"@solidstate/contracts/proxy/diamond/SolidStateDiamond.sol",
								"@solidstate/contracts/proxy/diamond/base/DiamondBase.sol",
								"@solidstate/contracts/proxy/diamond/base/DiamondBaseStorage.sol",
								"@solidstate/contracts/proxy/diamond/base/IDiamondBase.sol",
								"@solidstate/contracts/proxy/diamond/fallback/DiamondFallback.sol",
								"@solidstate/contracts/proxy/diamond/fallback/IDiamondFallback.sol",
								"@solidstate/contracts/proxy/diamond/readable/DiamondReadable.sol",
								"@solidstate/contracts/proxy/diamond/readable/DiamondReadableInternal.sol",
								"@solidstate/contracts/proxy/diamond/readable/IDiamondReadable.sol",
								"@solidstate/contracts/proxy/diamond/readable/IDiamondReadableInternal.sol",
								"@solidstate/contracts/proxy/diamond/writable/DiamondWritable.sol",
								"@solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol",
								"@solidstate/contracts/proxy/diamond/writable/IDiamondWritable.sol",
								"@solidstate/contracts/proxy/diamond/writable/IDiamondWritableInternal.sol",
								"@solidstate/contracts/utils/AddressUtils.sol",
								"@solidstate/contracts/utils/UintUtils.sol",
								"Eip2535/EIp2535Diamond.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"addCandidateDetails(string,uint256,string)": "13732d79",
							"addVoterDetails(address,uint256,uint256)": "7a26dd31",
							"candidateDetails(uint256)": "6247e532",
							"checkCandidateStatus(uint256)": "b2fb8e37",
							"checkVoterStatus(uint256)": "c93346ab",
							"hasRegistered(bytes32)": "6b0eec1c",
							"hasVoted(bytes32)": "1b4613cb",
							"listOfParties(uint256)": "e9d729ae",
							"partyCounter()": "0500894d",
							"result()": "65372147",
							"voterCounter()": "4d50ba3a",
							"voterDetails(bytes32)": "1e51c9ea",
							"winner()": "dfbf53ae"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"_nameOfCandidate\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"_voterCardNo\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"_partyName\",\"type\":\"string\"}],\"name\":\"CandidateAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_voterAddress\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"_voterCardNo\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_partyNumber\",\"type\":\"uint256\"}],\"name\":\"VoteCasted\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_nameOfCandidate\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"_voterCardNo\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"_partyName\",\"type\":\"string\"}],\"name\":\"addCandidateDetails\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_voterAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_voterCardNo\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_partyNumber\",\"type\":\"uint256\"}],\"name\":\"addVoterDetails\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"candidateDetails\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"nameOfCandidate\",\"type\":\"string\"},{\"internalType\":\"bytes32\",\"name\":\"voterCardNo\",\"type\":\"bytes32\"},{\"internalType\":\"string\",\"name\":\"partyName\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"totalVotes\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_voterCardNo\",\"type\":\"uint256\"}],\"name\":\"checkCandidateStatus\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_voterCardNo\",\"type\":\"uint256\"}],\"name\":\"checkVoterStatus\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"hasRegistered\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"hasVoted\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"listOfParties\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"partyCounter\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"result\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"voterCounter\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"voterDetails\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"voterAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"partyNumber\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"winner\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Eip2535/EIp2535Diamond.sol\":\"Eip2535VotingContract\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":900},\"remappings\":[]},\"sources\":{\"@solidstate/contracts/access/ownable/IOwnable.sol\":{\"keccak256\":\"0x11d21dc54925e813f796ac5f09abbf2a561fd8796268941d9f0b39abd8a917c7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://70d3e007838a1ce8dacab8e6ff6cc2505d97b56ad44fb35cf1af5c9c0a2e9033\",\"dweb:/ipfs/QmT2zFUbiHfQeyhcCMAPTHe7Xk2s4ABAJKeCeAYQcDXGjd\"]},\"@solidstate/contracts/access/ownable/IOwnableInternal.sol\":{\"keccak256\":\"0x4cd447859a063c235aa56dcb017012f3c7ad6c54a399d6cdfef8045c78820f90\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fecba3866ae33c19144357b5aa3a43b8d9b84728a124443a87471409d90507ff\",\"dweb:/ipfs/QmZzkdVbNp4Zv7vHPxeBkoFP3od1sRVXVdWA4j6v9TTSAa\"]},\"@solidstate/contracts/access/ownable/ISafeOwnable.sol\":{\"keccak256\":\"0xf5f4f16883ab1df6352732885160b2b8c82d147f83b3a2c4ecf3d1f7bed13263\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://37a02bc456355b3878074aba4ab8b077ba4e0c8af7d2284a3aaef2dd57f3310c\",\"dweb:/ipfs/QmdSU9M7i7W9h26iFYuZzukmGWA464xgNEk4FAnS9ErRYP\"]},\"@solidstate/contracts/access/ownable/ISafeOwnableInternal.sol\":{\"keccak256\":\"0x371b9fed15ae2760b52eb9391e7ceefcbaaacc73b4cf2dcdd3c12e13db829cd6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d3244dbd25a5b5a6cf7740ddfb3ff9acd14cc54bde74750de20c629154567e39\",\"dweb:/ipfs/Qmd9d1CfMuPH7hsUjEur1P1cU8ZDxYKVvf4SHqHqj9K1dT\"]},\"@solidstate/contracts/access/ownable/Ownable.sol\":{\"keccak256\":\"0x6863983e4048a1c0f65c048af9b9381b0c02c230c763d8136bb16abd1c972e68\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://72a94ccda4287bd598330a663125bba83dde9f4133a13190c922cfb24ac600c7\",\"dweb:/ipfs/QmVcsaFFHBYB4e69tTYqBdCfwWszKRuxrRy1tDrHUh13t5\"]},\"@solidstate/contracts/access/ownable/OwnableInternal.sol\":{\"keccak256\":\"0x68e9c133cdc3a3cdbed72c63f682d428e4533f2c8095d57410653430f69f225c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2f24f167ce2396a880db1b8c8745dbd98d48ee29583784ccb8126547ac81f042\",\"dweb:/ipfs/QmW5r1s5QoV2ENh3Qx2WRhcsbyD9cKC1gBbk2JMFM4YbcR\"]},\"@solidstate/contracts/access/ownable/OwnableStorage.sol\":{\"keccak256\":\"0xdd830eb11d93432c1219d28f1758d1e1e260e09f64152f34e0cab7861a567acb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4beb423fff82203ce963d2fa005b9a26e489dc22efc183e6c68d912cb65ee291\",\"dweb:/ipfs/QmakghQzG8UJ2uwkR8peYxXB7KCMKGrjB9c5r9JSyoB6kw\"]},\"@solidstate/contracts/access/ownable/SafeOwnable.sol\":{\"keccak256\":\"0x1ccd51daadb5633dd0d6bcdf333f290637844560f081e442ba750ab48b64db13\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b593dc55bea11dd27c360026e8241c2de30c61967342418e11cbded07e103db4\",\"dweb:/ipfs/Qmc2gaaRB6VnyHtJw7yQJdZaCKEQQUyKBGdm8hxuVunNeh\"]},\"@solidstate/contracts/access/ownable/SafeOwnableInternal.sol\":{\"keccak256\":\"0x35b21e71d1bf6bfd1d7b224bd972ea699a0c94e44c4d00ba29a1dd712f5e5e12\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ceaa2c8f431ef3b729eab5e91ab8f62bf0f370083a1d71f67b17aeb8d7c9af63\",\"dweb:/ipfs/QmZK6GToi8YBGg9XU6Lcf2h5EfNQUPgBSt1rPchw8cFgQA\"]},\"@solidstate/contracts/access/ownable/SafeOwnableStorage.sol\":{\"keccak256\":\"0x435612f25379c285743b73e6bd8e22653230ee619d82007d9b2c8860a5de88d7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://57017de792c526a2cd6c4308d21fa08ec362c259e83afeb947b5dcca46c2a6f8\",\"dweb:/ipfs/Qmcqj6hSQbWvyJzGMMi8EJNnU5AfBTJf6gLjYYS4RkaEqX\"]},\"@solidstate/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0x05652eb09f7108b0ded5234ee56ccbdadd259e7801da27c484959b01bd0ef97e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://280cf3914c409430d3d3dfb36c82e3404cd056803eed8c6642eab59851d1596c\",\"dweb:/ipfs/QmZiv8jbJYEkic6mMdATRSCfRBfzQjDFfWY4xbSEnHjCvB\"]},\"@solidstate/contracts/interfaces/IERC165Internal.sol\":{\"keccak256\":\"0xbf2681def388e5bfda27e98c258bdd0fa547c233f2f7c44dd316d12252634fce\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://184a68e115babf0ed2b99e80e127950a8c44b6baef9c81a71cc9f48894f3bc43\",\"dweb:/ipfs/QmZCYdyk9PStUQYbuZZf2wNwkwpwFUfdp44YVx9SvLokwz\"]},\"@solidstate/contracts/interfaces/IERC173.sol\":{\"keccak256\":\"0x1dcf85abc1fa1871fd31e6cf54ba539c6cb93342fae91466550940ad49ad08f7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://666470e1f5e26f114d35608a4cce2885f044cfb01fe5b11db0ed32edd5d68750\",\"dweb:/ipfs/Qma5iVmjnWAjkbxs2y62PYdLGCQAef2Q6KsbMUHaQp6bUV\"]},\"@solidstate/contracts/interfaces/IERC173Internal.sol\":{\"keccak256\":\"0x411c4c66a220f9eb25a29c2553fa9e6cac22a948a8645507d20fe5e7876dc8d1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://36c60312ab789ba0b1aa3d5129fffa911bee346937f6a5662cbd2c2e97b8ccec\",\"dweb:/ipfs/QmZJV8DgbcKs2Nws8gYQWuPdfEKFJSBj9BMfqmPxtNYF8z\"]},\"@solidstate/contracts/interfaces/IERC2535DiamondCut.sol\":{\"keccak256\":\"0xe2bc83d555c3b406a74ab0736d93da6435d197850a2504e0645dea7606055e4f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f4020f04ddf277326e647d25aeb6113bd1f65d62f02d6cabb479c646ceca5619\",\"dweb:/ipfs/QmU3snuS4Nu4FyxrpTm4Y63DtrqMQDDG2dYQ4wAu1i5npi\"]},\"@solidstate/contracts/interfaces/IERC2535DiamondCutInternal.sol\":{\"keccak256\":\"0xc59ed1d101485d637a4cc0b4717723a11cfae824734b169b310994e2ca8cf8ee\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bf0851d1129744467b98e5aff7a24a0c0cb6c78126b8caa7c312ce1bfb4ed83c\",\"dweb:/ipfs/QmdZKYETmRhk2ucWCmfBH16u1vN8WRsdAj7fam3topYj7L\"]},\"@solidstate/contracts/interfaces/IERC2535DiamondLoupe.sol\":{\"keccak256\":\"0x26c32fd85a01de39974f3ff9c025e6bdc6c87b9d3d4a33abe06bdace2711d3c3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1fd3d5df9bea6a5738c5f59042e61015cc4dd65c5bc2587399efa2e1ac1479ac\",\"dweb:/ipfs/QmXMwJ86oCpy6JysW4TzDHDv84TSaVtfyYH8s9TdMjYkdq\"]},\"@solidstate/contracts/interfaces/IERC2535DiamondLoupeInternal.sol\":{\"keccak256\":\"0xf53530cc00621f951debec10349ad6209173a4e37519f9329061c33178319c54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://944813649502424d16a37dff3ca41d9d7393458508576e43289e49b876414851\",\"dweb:/ipfs/QmXmdY3XqPQRC6iVEAa82jydXisTnAJAzwTc1z7YcZJ4dy\"]},\"@solidstate/contracts/introspection/ERC165/base/ERC165Base.sol\":{\"keccak256\":\"0x4a8e6e515570725ae96e6e21c7144f27fdc101bfcd19f74c912474615f007e16\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://702de9b29334e76ac73e98be1555599968f16d29d9c6d0a2d8bd3ed1cf8d3454\",\"dweb:/ipfs/Qmbrbb1NoKHu84igojGCUaDarNGE1CpsfmmxW2EtAoUqUP\"]},\"@solidstate/contracts/introspection/ERC165/base/ERC165BaseInternal.sol\":{\"keccak256\":\"0xd2900ce01bce0dde2a848949b189c0345a4155900bf4c6401c0317ad41ee8740\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2f0f1ae8d514b6575d0a08f63b4264aeeb4ee8555774c4ebdbc4a40e89789ef8\",\"dweb:/ipfs/QmZ8DvFtDv1DFcb3gtXa33Ygzkr3ppBELfGLyx8nyJk6TP\"]},\"@solidstate/contracts/introspection/ERC165/base/ERC165BaseStorage.sol\":{\"keccak256\":\"0x90b7e081bb06e2ea5b2ccdde30d174d72ced4a3683c44a46f92b8e0c98eec52f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0b977c181a83790d3799f5ff29c81c9fc7461cb96f75375a279e8f60c1eba28c\",\"dweb:/ipfs/QmYTfZtWxkUnVn67hGtyySW2HkYA5hF5f2dMKcjqJHAuQS\"]},\"@solidstate/contracts/introspection/ERC165/base/IERC165Base.sol\":{\"keccak256\":\"0xf651a6e6c267cb908a3c66592a5b4b2e5cc571cd44e129d8fd653fa05c025e0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ffd390fb94ced75514fd104601019396d85a35c6ff6df71873815b773e825b80\",\"dweb:/ipfs/QmWg5R8hS1ekuWm2q86ZQiNRzHy3sS9z9671udXLwA2TpA\"]},\"@solidstate/contracts/introspection/ERC165/base/IERC165BaseInternal.sol\":{\"keccak256\":\"0xb3eccf8d895692a5824e73d59aecfbe938dd39a57fee2cef43d5caeba0155266\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d8a039f793a32839f33098ccc3be5f226c83529236b7d387399884afea045360\",\"dweb:/ipfs/QmRD9UWYAF64KpaXjRUjTFjoW3Z71HnE8a4p4Sj7yWvioh\"]},\"@solidstate/contracts/proxy/IProxy.sol\":{\"keccak256\":\"0x48d7f3fe133c1c8a9388eab6cda5060966af9bbd47a6d24a198e1a970fe9ee9f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b8f5e7dcea26eb4bfe4f8cb04704cf51ece7988409647e3387e483f65dd32954\",\"dweb:/ipfs/QmdKfjkDEXJGtDZ24tD4G9ro6AbMgJNN3Kwg9qGyPRRLQB\"]},\"@solidstate/contracts/proxy/Proxy.sol\":{\"keccak256\":\"0x40b3f644b893b536b316dec6d45d5787490144aeab259494118b337814c38cd3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8705f59bfdbf4d98b4bc0bfc81cc68edaa6e23ec21c7eb099af4f84cc21ff6b5\",\"dweb:/ipfs/QmaNmduvuLkY7R4iuYE4ME96J13UuzZ4Mm6PjUD9Lc8hAa\"]},\"@solidstate/contracts/proxy/diamond/ISolidStateDiamond.sol\":{\"keccak256\":\"0xac7569f320832aa6ee5b9e5f6de17fea33009ba8dcdd56aad687487b8ae6fc92\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cfdebf2293222ceec328d09a317bd9bc76ba65f563055fba58a37369e4ce7979\",\"dweb:/ipfs/QmRK745EuARnBFEdMVk3LkZoXG2xSGd7LuNQZWUex9xhgK\"]},\"@solidstate/contracts/proxy/diamond/SolidStateDiamond.sol\":{\"keccak256\":\"0xb56c502a4984ed40fefe7a0bf7966e95154ee701b9603aa9d9df9265e2c588c2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://282436fc2893490322b49329388dc6c7495ff1d125e7ffd86fb2d7268a9231ba\",\"dweb:/ipfs/QmXU7MVwzUmewPPPxQd96e3hx8ufBwZXX1WKMhrUPfBZKF\"]},\"@solidstate/contracts/proxy/diamond/base/DiamondBase.sol\":{\"keccak256\":\"0x0590fb00acfbf4eeec1957df8196cac63de89566a26ce0a80a9f78f919fae74c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://19ec1dfec4092f11029a37fabb50ba3385a94cd39e5044e3377074b6c5f9b709\",\"dweb:/ipfs/QmZbChb94a7S2W9ZAgFpesW4E4YEYeWg1wiV7VaJJGgWMK\"]},\"@solidstate/contracts/proxy/diamond/base/DiamondBaseStorage.sol\":{\"keccak256\":\"0x536f0e1d66226166d145aa150db4f493d73d0b118d24c327d167574d9130b114\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://dfb0c70f473fdfe921b2d0103e8fba7e1d452c9ce792a2a6a901f2efba65e56a\",\"dweb:/ipfs/QmacmpDGdPHE7o7G4pDp46cudBXHniswBerj6dyVnsSajs\"]},\"@solidstate/contracts/proxy/diamond/base/IDiamondBase.sol\":{\"keccak256\":\"0x00cad88b32dd925b1a6e5ad740811741f0f59fccba47d3e70b4488305a3fab78\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fa284f987966ddd735cd66d55d206f4a3ef161175df1f867e3930d60b62bba76\",\"dweb:/ipfs/QmSymhtgta9xnTg8xcHWMe6TzwnG5X2g7u9QnZZvVSzFrS\"]},\"@solidstate/contracts/proxy/diamond/fallback/DiamondFallback.sol\":{\"keccak256\":\"0x4924f8b6669fb144d56649adb0a52712b01bc7b442cc0feea1be07a24edf9ac3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f08a89af5dd515d10fd13f7610325b58f8e50139a5531d9c95aabc5acb1990f3\",\"dweb:/ipfs/Qme9yoWNfsPZTiJjCKbmuuX3GiHYw9vMvLbcyUY2zbRMzK\"]},\"@solidstate/contracts/proxy/diamond/fallback/IDiamondFallback.sol\":{\"keccak256\":\"0x299eb396c7716208795faf3822c304de0719acdc47b94c29b87b69a85505f84c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ae6cda79e1b66f7726f633f2367586e6d1b5571ae781b69a186a707586cd5e9f\",\"dweb:/ipfs/QmY3Jxm48NGi2pmhDcjA4QP3UX9nY9NHQx7goUGSguvSza\"]},\"@solidstate/contracts/proxy/diamond/readable/DiamondReadable.sol\":{\"keccak256\":\"0x35a67bc44b71b5ee37a2c871ce02fa5b9ebac0936ba0a1aa053b12c035f7f890\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9c2958090fd5c64c1725a5a7fba73765006c4e81ce3a39af192dfe539fe3d94c\",\"dweb:/ipfs/QmX3kW8Nkh33ahwZ455uaMJBNeV7yQa77ovNqjC3rwTDcB\"]},\"@solidstate/contracts/proxy/diamond/readable/DiamondReadableInternal.sol\":{\"keccak256\":\"0x620e6c505fb6dd854dd4cb11fe9537274019e65de35edf91cfccfcd42bcce30d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b8b44f06039b3ad76d5a1f27155b329e2e6a8073d14eb33b90eee33867f35492\",\"dweb:/ipfs/QmZkLeNhhUabW36QJFQTHSKrJkmLsgNeJSzJZHBWXXthiW\"]},\"@solidstate/contracts/proxy/diamond/readable/IDiamondReadable.sol\":{\"keccak256\":\"0xb2a4f085ace4eeb45e9e34096cc54d08d289a4e0cd2d570c8fef5424d4989925\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://dc63d50f2fa14338954819d4e054b204d4a217f13f5e100f114405ef7d27ddd8\",\"dweb:/ipfs/QmZL9VKfNwwfscekLyyTh6JJELDMusQgQkrWeP2whM8yKb\"]},\"@solidstate/contracts/proxy/diamond/readable/IDiamondReadableInternal.sol\":{\"keccak256\":\"0x04f52dd1ded535ec471866b39455e9879ddd5b5265adee8d4b32a06b4a718790\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a2ba06128f57b5bda17b3b1de7490880c21c2d68ada6b36dc3049398a6de8bff\",\"dweb:/ipfs/Qmf9QAjygj4mPHKuh8RjVGMwZDNVajcerqH7pPnQR3r8cN\"]},\"@solidstate/contracts/proxy/diamond/writable/DiamondWritable.sol\":{\"keccak256\":\"0x6da3dbd19422c4a434e50bde10db43f8baa291cf5086604399adab39f0796f05\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://06b79d4eb3c85879e1412301745d2abcc25344b5884d31e20bddcbcee23e5041\",\"dweb:/ipfs/Qme6ScmPGQ3PouDnXGis4Lj6s2EDQGimCdVWGv1gzTV2BE\"]},\"@solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":{\"keccak256\":\"0xbc71dc13eb588d46132745d218819aae37217d1476c4f9e626ef8ccdc2205be7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7cfb8919df76c0d37a061bfdc4ab11c08a61ab7250c7054cb02d48df037f46c3\",\"dweb:/ipfs/QmTpR2g5TcSNHjYFsUEeYcqohvrNPoEFhBfYVsLaMmPHqe\"]},\"@solidstate/contracts/proxy/diamond/writable/IDiamondWritable.sol\":{\"keccak256\":\"0x5b93ab2500c62bf37ff8a81927356c1e9251ea6a52c8165abb2f9c770410f572\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f2ec9e41faee654c99591f8d6e5d437b2bbfc67c4b7a58bb7d6bb764f7a4cf3d\",\"dweb:/ipfs/QmNVrDk1T4wh1PkvhXQtazQpZuKRiuRifJTANnhMfaFjpn\"]},\"@solidstate/contracts/proxy/diamond/writable/IDiamondWritableInternal.sol\":{\"keccak256\":\"0x84808f6a171f5ff30b0bc2f02a0c327c16c123530aeb36a4f88c1b5322a5d159\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://579c4f9b2597c7cff29309846749596a962cb491557ee5865fe74759ca65f8f4\",\"dweb:/ipfs/QmZeuV14qUg2sEy3EdvbzpYjDzMjuV2CCpwCFZvyTd2v6B\"]},\"@solidstate/contracts/utils/AddressUtils.sol\":{\"keccak256\":\"0x73b8727aeb8d6a984dfb279cf64eb867cb0f5c42527b877f87dcbe1a37f3e433\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://21599c6853d978762bd6db8e70720ba7de6394bf6e1b66d32a936c074c160135\",\"dweb:/ipfs/QmekH1Vro4JrwfSpJUBVRofaCMsxAj8huDbujYBgGsHm63\"]},\"@solidstate/contracts/utils/UintUtils.sol\":{\"keccak256\":\"0x1dbd4a2d25d6d3511018319bb752e2fe72b934cbcf31b18e47a286229ce36f1f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e339115b07880370eef2b22f5529050fcf863a34bab9e8ac81be570ae7deb2be\",\"dweb:/ipfs/QmU9KsZQTMffVUnHUGHkf78Yg5orQF9TSk9n1uSgQnkak2\"]},\"Eip2535/EIp2535Diamond.sol\":{\"keccak256\":\"0x5ba586dc677c34f605a25d97b33a1d6fb92f2e262b303fb117400759b8fa8270\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bb4aa260826a3f99561fda55c2c11c1482d8af9b381bfe0042cf80d77b649e1c\",\"dweb:/ipfs/QmU5tDseunWJd9UErXF1E8Uy1UN41osuk5gibz5irfkaSa\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 3626,
								"contract": "Eip2535/EIp2535Diamond.sol:Eip2535VotingContract",
								"label": "voterDetails",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_bytes32,t_struct(VoterDetails)3612_storage)"
							},
							{
								"astId": 3631,
								"contract": "Eip2535/EIp2535Diamond.sol:Eip2535VotingContract",
								"label": "candidateDetails",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_uint256,t_struct(CandidateDetails)3621_storage)"
							},
							{
								"astId": 3635,
								"contract": "Eip2535/EIp2535Diamond.sol:Eip2535VotingContract",
								"label": "hasVoted",
								"offset": 0,
								"slot": "2",
								"type": "t_mapping(t_bytes32,t_bool)"
							},
							{
								"astId": 3639,
								"contract": "Eip2535/EIp2535Diamond.sol:Eip2535VotingContract",
								"label": "hasRegistered",
								"offset": 0,
								"slot": "3",
								"type": "t_mapping(t_bytes32,t_bool)"
							},
							{
								"astId": 3641,
								"contract": "Eip2535/EIp2535Diamond.sol:Eip2535VotingContract",
								"label": "partyCounter",
								"offset": 0,
								"slot": "4",
								"type": "t_uint256"
							},
							{
								"astId": 3643,
								"contract": "Eip2535/EIp2535Diamond.sol:Eip2535VotingContract",
								"label": "voterCounter",
								"offset": 0,
								"slot": "5",
								"type": "t_uint256"
							},
							{
								"astId": 3646,
								"contract": "Eip2535/EIp2535Diamond.sol:Eip2535VotingContract",
								"label": "listOfParties",
								"offset": 0,
								"slot": "6",
								"type": "t_array(t_string_storage)dyn_storage"
							},
							{
								"astId": 3648,
								"contract": "Eip2535/EIp2535Diamond.sol:Eip2535VotingContract",
								"label": "winner",
								"offset": 0,
								"slot": "7",
								"type": "t_string_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_array(t_string_storage)dyn_storage": {
								"base": "t_string_storage",
								"encoding": "dynamic_array",
								"label": "string[]",
								"numberOfBytes": "32"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_bytes32": {
								"encoding": "inplace",
								"label": "bytes32",
								"numberOfBytes": "32"
							},
							"t_mapping(t_bytes32,t_bool)": {
								"encoding": "mapping",
								"key": "t_bytes32",
								"label": "mapping(bytes32 => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_bytes32,t_struct(VoterDetails)3612_storage)": {
								"encoding": "mapping",
								"key": "t_bytes32",
								"label": "mapping(bytes32 => struct Eip2535VotingContract.VoterDetails)",
								"numberOfBytes": "32",
								"value": "t_struct(VoterDetails)3612_storage"
							},
							"t_mapping(t_uint256,t_struct(CandidateDetails)3621_storage)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => struct Eip2535VotingContract.CandidateDetails)",
								"numberOfBytes": "32",
								"value": "t_struct(CandidateDetails)3621_storage"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_struct(CandidateDetails)3621_storage": {
								"encoding": "inplace",
								"label": "struct Eip2535VotingContract.CandidateDetails",
								"members": [
									{
										"astId": 3614,
										"contract": "Eip2535/EIp2535Diamond.sol:Eip2535VotingContract",
										"label": "nameOfCandidate",
										"offset": 0,
										"slot": "0",
										"type": "t_string_storage"
									},
									{
										"astId": 3616,
										"contract": "Eip2535/EIp2535Diamond.sol:Eip2535VotingContract",
										"label": "voterCardNo",
										"offset": 0,
										"slot": "1",
										"type": "t_bytes32"
									},
									{
										"astId": 3618,
										"contract": "Eip2535/EIp2535Diamond.sol:Eip2535VotingContract",
										"label": "partyName",
										"offset": 0,
										"slot": "2",
										"type": "t_string_storage"
									},
									{
										"astId": 3620,
										"contract": "Eip2535/EIp2535Diamond.sol:Eip2535VotingContract",
										"label": "totalVotes",
										"offset": 0,
										"slot": "3",
										"type": "t_uint256"
									}
								],
								"numberOfBytes": "128"
							},
							"t_struct(VoterDetails)3612_storage": {
								"encoding": "inplace",
								"label": "struct Eip2535VotingContract.VoterDetails",
								"members": [
									{
										"astId": 3609,
										"contract": "Eip2535/EIp2535Diamond.sol:Eip2535VotingContract",
										"label": "voterAddress",
										"offset": 0,
										"slot": "0",
										"type": "t_address"
									},
									{
										"astId": 3611,
										"contract": "Eip2535/EIp2535Diamond.sol:Eip2535VotingContract",
										"label": "partyNumber",
										"offset": 0,
										"slot": "1",
										"type": "t_uint256"
									}
								],
								"numberOfBytes": "64"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IDiamond": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "string",
									"name": "_nameOfCandidate",
									"type": "string"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "_voterCardNo",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "string",
									"name": "_partyName",
									"type": "string"
								}
							],
							"name": "CandidateAdded",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"components": [
										{
											"internalType": "address",
											"name": "facetAddress",
											"type": "address"
										},
										{
											"internalType": "enum IDiamond.FacetCutAction",
											"name": "action",
											"type": "uint8"
										},
										{
											"internalType": "bytes4",
											"name": "functionSelector",
											"type": "bytes4"
										}
									],
									"indexed": false,
									"internalType": "struct IDiamond.FacetCut[]",
									"name": "_diamondCut",
									"type": "tuple[]"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "_init",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bytes",
									"name": "_calldata",
									"type": "bytes"
								}
							],
							"name": "DiamondCut",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "_voterAddress",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "_voterCardNo",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "_partyNumber",
									"type": "uint256"
								}
							],
							"name": "VoteCasted",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "_nameOfCandidate",
									"type": "string"
								},
								{
									"internalType": "uint256",
									"name": "_voterCardNo",
									"type": "uint256"
								},
								{
									"internalType": "string",
									"name": "_partyName",
									"type": "string"
								}
							],
							"name": "addCandidateDetails",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_voterAddress",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_voterCardNo",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_partyNUmber",
									"type": "uint256"
								}
							],
							"name": "addVoterDetails",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"components": [
										{
											"internalType": "address",
											"name": "facetAddress",
											"type": "address"
										},
										{
											"internalType": "enum IDiamond.FacetCutAction",
											"name": "action",
											"type": "uint8"
										},
										{
											"internalType": "bytes4",
											"name": "functionSelector",
											"type": "bytes4"
										}
									],
									"internalType": "struct IDiamond.FacetCut[]",
									"name": "_diamondCut",
									"type": "tuple[]"
								},
								{
									"internalType": "address",
									"name": "_init",
									"type": "address"
								},
								{
									"internalType": "bytes",
									"name": "_calldata",
									"type": "bytes"
								}
							],
							"name": "diamondCut",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"addCandidateDetails(string,uint256,string)": "13732d79",
							"addVoterDetails(address,uint256,uint256)": "7a26dd31",
							"diamondCut((address,uint8,bytes4)[],address,bytes)": "9e97d739"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"_nameOfCandidate\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"_voterCardNo\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"_partyName\",\"type\":\"string\"}],\"name\":\"CandidateAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"facetAddress\",\"type\":\"address\"},{\"internalType\":\"enum IDiamond.FacetCutAction\",\"name\":\"action\",\"type\":\"uint8\"},{\"internalType\":\"bytes4\",\"name\":\"functionSelector\",\"type\":\"bytes4\"}],\"indexed\":false,\"internalType\":\"struct IDiamond.FacetCut[]\",\"name\":\"_diamondCut\",\"type\":\"tuple[]\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_init\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"_calldata\",\"type\":\"bytes\"}],\"name\":\"DiamondCut\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_voterAddress\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"_voterCardNo\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_partyNumber\",\"type\":\"uint256\"}],\"name\":\"VoteCasted\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_nameOfCandidate\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"_voterCardNo\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"_partyName\",\"type\":\"string\"}],\"name\":\"addCandidateDetails\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_voterAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_voterCardNo\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_partyNUmber\",\"type\":\"uint256\"}],\"name\":\"addVoterDetails\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"facetAddress\",\"type\":\"address\"},{\"internalType\":\"enum IDiamond.FacetCutAction\",\"name\":\"action\",\"type\":\"uint8\"},{\"internalType\":\"bytes4\",\"name\":\"functionSelector\",\"type\":\"bytes4\"}],\"internalType\":\"struct IDiamond.FacetCut[]\",\"name\":\"_diamondCut\",\"type\":\"tuple[]\"},{\"internalType\":\"address\",\"name\":\"_init\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"_calldata\",\"type\":\"bytes\"}],\"name\":\"diamondCut\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Eip2535/EIp2535Diamond.sol\":\"IDiamond\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":900},\"remappings\":[]},\"sources\":{\"@solidstate/contracts/access/ownable/IOwnable.sol\":{\"keccak256\":\"0x11d21dc54925e813f796ac5f09abbf2a561fd8796268941d9f0b39abd8a917c7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://70d3e007838a1ce8dacab8e6ff6cc2505d97b56ad44fb35cf1af5c9c0a2e9033\",\"dweb:/ipfs/QmT2zFUbiHfQeyhcCMAPTHe7Xk2s4ABAJKeCeAYQcDXGjd\"]},\"@solidstate/contracts/access/ownable/IOwnableInternal.sol\":{\"keccak256\":\"0x4cd447859a063c235aa56dcb017012f3c7ad6c54a399d6cdfef8045c78820f90\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fecba3866ae33c19144357b5aa3a43b8d9b84728a124443a87471409d90507ff\",\"dweb:/ipfs/QmZzkdVbNp4Zv7vHPxeBkoFP3od1sRVXVdWA4j6v9TTSAa\"]},\"@solidstate/contracts/access/ownable/ISafeOwnable.sol\":{\"keccak256\":\"0xf5f4f16883ab1df6352732885160b2b8c82d147f83b3a2c4ecf3d1f7bed13263\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://37a02bc456355b3878074aba4ab8b077ba4e0c8af7d2284a3aaef2dd57f3310c\",\"dweb:/ipfs/QmdSU9M7i7W9h26iFYuZzukmGWA464xgNEk4FAnS9ErRYP\"]},\"@solidstate/contracts/access/ownable/ISafeOwnableInternal.sol\":{\"keccak256\":\"0x371b9fed15ae2760b52eb9391e7ceefcbaaacc73b4cf2dcdd3c12e13db829cd6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d3244dbd25a5b5a6cf7740ddfb3ff9acd14cc54bde74750de20c629154567e39\",\"dweb:/ipfs/Qmd9d1CfMuPH7hsUjEur1P1cU8ZDxYKVvf4SHqHqj9K1dT\"]},\"@solidstate/contracts/access/ownable/Ownable.sol\":{\"keccak256\":\"0x6863983e4048a1c0f65c048af9b9381b0c02c230c763d8136bb16abd1c972e68\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://72a94ccda4287bd598330a663125bba83dde9f4133a13190c922cfb24ac600c7\",\"dweb:/ipfs/QmVcsaFFHBYB4e69tTYqBdCfwWszKRuxrRy1tDrHUh13t5\"]},\"@solidstate/contracts/access/ownable/OwnableInternal.sol\":{\"keccak256\":\"0x68e9c133cdc3a3cdbed72c63f682d428e4533f2c8095d57410653430f69f225c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2f24f167ce2396a880db1b8c8745dbd98d48ee29583784ccb8126547ac81f042\",\"dweb:/ipfs/QmW5r1s5QoV2ENh3Qx2WRhcsbyD9cKC1gBbk2JMFM4YbcR\"]},\"@solidstate/contracts/access/ownable/OwnableStorage.sol\":{\"keccak256\":\"0xdd830eb11d93432c1219d28f1758d1e1e260e09f64152f34e0cab7861a567acb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4beb423fff82203ce963d2fa005b9a26e489dc22efc183e6c68d912cb65ee291\",\"dweb:/ipfs/QmakghQzG8UJ2uwkR8peYxXB7KCMKGrjB9c5r9JSyoB6kw\"]},\"@solidstate/contracts/access/ownable/SafeOwnable.sol\":{\"keccak256\":\"0x1ccd51daadb5633dd0d6bcdf333f290637844560f081e442ba750ab48b64db13\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b593dc55bea11dd27c360026e8241c2de30c61967342418e11cbded07e103db4\",\"dweb:/ipfs/Qmc2gaaRB6VnyHtJw7yQJdZaCKEQQUyKBGdm8hxuVunNeh\"]},\"@solidstate/contracts/access/ownable/SafeOwnableInternal.sol\":{\"keccak256\":\"0x35b21e71d1bf6bfd1d7b224bd972ea699a0c94e44c4d00ba29a1dd712f5e5e12\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ceaa2c8f431ef3b729eab5e91ab8f62bf0f370083a1d71f67b17aeb8d7c9af63\",\"dweb:/ipfs/QmZK6GToi8YBGg9XU6Lcf2h5EfNQUPgBSt1rPchw8cFgQA\"]},\"@solidstate/contracts/access/ownable/SafeOwnableStorage.sol\":{\"keccak256\":\"0x435612f25379c285743b73e6bd8e22653230ee619d82007d9b2c8860a5de88d7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://57017de792c526a2cd6c4308d21fa08ec362c259e83afeb947b5dcca46c2a6f8\",\"dweb:/ipfs/Qmcqj6hSQbWvyJzGMMi8EJNnU5AfBTJf6gLjYYS4RkaEqX\"]},\"@solidstate/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0x05652eb09f7108b0ded5234ee56ccbdadd259e7801da27c484959b01bd0ef97e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://280cf3914c409430d3d3dfb36c82e3404cd056803eed8c6642eab59851d1596c\",\"dweb:/ipfs/QmZiv8jbJYEkic6mMdATRSCfRBfzQjDFfWY4xbSEnHjCvB\"]},\"@solidstate/contracts/interfaces/IERC165Internal.sol\":{\"keccak256\":\"0xbf2681def388e5bfda27e98c258bdd0fa547c233f2f7c44dd316d12252634fce\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://184a68e115babf0ed2b99e80e127950a8c44b6baef9c81a71cc9f48894f3bc43\",\"dweb:/ipfs/QmZCYdyk9PStUQYbuZZf2wNwkwpwFUfdp44YVx9SvLokwz\"]},\"@solidstate/contracts/interfaces/IERC173.sol\":{\"keccak256\":\"0x1dcf85abc1fa1871fd31e6cf54ba539c6cb93342fae91466550940ad49ad08f7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://666470e1f5e26f114d35608a4cce2885f044cfb01fe5b11db0ed32edd5d68750\",\"dweb:/ipfs/Qma5iVmjnWAjkbxs2y62PYdLGCQAef2Q6KsbMUHaQp6bUV\"]},\"@solidstate/contracts/interfaces/IERC173Internal.sol\":{\"keccak256\":\"0x411c4c66a220f9eb25a29c2553fa9e6cac22a948a8645507d20fe5e7876dc8d1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://36c60312ab789ba0b1aa3d5129fffa911bee346937f6a5662cbd2c2e97b8ccec\",\"dweb:/ipfs/QmZJV8DgbcKs2Nws8gYQWuPdfEKFJSBj9BMfqmPxtNYF8z\"]},\"@solidstate/contracts/interfaces/IERC2535DiamondCut.sol\":{\"keccak256\":\"0xe2bc83d555c3b406a74ab0736d93da6435d197850a2504e0645dea7606055e4f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f4020f04ddf277326e647d25aeb6113bd1f65d62f02d6cabb479c646ceca5619\",\"dweb:/ipfs/QmU3snuS4Nu4FyxrpTm4Y63DtrqMQDDG2dYQ4wAu1i5npi\"]},\"@solidstate/contracts/interfaces/IERC2535DiamondCutInternal.sol\":{\"keccak256\":\"0xc59ed1d101485d637a4cc0b4717723a11cfae824734b169b310994e2ca8cf8ee\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bf0851d1129744467b98e5aff7a24a0c0cb6c78126b8caa7c312ce1bfb4ed83c\",\"dweb:/ipfs/QmdZKYETmRhk2ucWCmfBH16u1vN8WRsdAj7fam3topYj7L\"]},\"@solidstate/contracts/interfaces/IERC2535DiamondLoupe.sol\":{\"keccak256\":\"0x26c32fd85a01de39974f3ff9c025e6bdc6c87b9d3d4a33abe06bdace2711d3c3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1fd3d5df9bea6a5738c5f59042e61015cc4dd65c5bc2587399efa2e1ac1479ac\",\"dweb:/ipfs/QmXMwJ86oCpy6JysW4TzDHDv84TSaVtfyYH8s9TdMjYkdq\"]},\"@solidstate/contracts/interfaces/IERC2535DiamondLoupeInternal.sol\":{\"keccak256\":\"0xf53530cc00621f951debec10349ad6209173a4e37519f9329061c33178319c54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://944813649502424d16a37dff3ca41d9d7393458508576e43289e49b876414851\",\"dweb:/ipfs/QmXmdY3XqPQRC6iVEAa82jydXisTnAJAzwTc1z7YcZJ4dy\"]},\"@solidstate/contracts/introspection/ERC165/base/ERC165Base.sol\":{\"keccak256\":\"0x4a8e6e515570725ae96e6e21c7144f27fdc101bfcd19f74c912474615f007e16\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://702de9b29334e76ac73e98be1555599968f16d29d9c6d0a2d8bd3ed1cf8d3454\",\"dweb:/ipfs/Qmbrbb1NoKHu84igojGCUaDarNGE1CpsfmmxW2EtAoUqUP\"]},\"@solidstate/contracts/introspection/ERC165/base/ERC165BaseInternal.sol\":{\"keccak256\":\"0xd2900ce01bce0dde2a848949b189c0345a4155900bf4c6401c0317ad41ee8740\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2f0f1ae8d514b6575d0a08f63b4264aeeb4ee8555774c4ebdbc4a40e89789ef8\",\"dweb:/ipfs/QmZ8DvFtDv1DFcb3gtXa33Ygzkr3ppBELfGLyx8nyJk6TP\"]},\"@solidstate/contracts/introspection/ERC165/base/ERC165BaseStorage.sol\":{\"keccak256\":\"0x90b7e081bb06e2ea5b2ccdde30d174d72ced4a3683c44a46f92b8e0c98eec52f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0b977c181a83790d3799f5ff29c81c9fc7461cb96f75375a279e8f60c1eba28c\",\"dweb:/ipfs/QmYTfZtWxkUnVn67hGtyySW2HkYA5hF5f2dMKcjqJHAuQS\"]},\"@solidstate/contracts/introspection/ERC165/base/IERC165Base.sol\":{\"keccak256\":\"0xf651a6e6c267cb908a3c66592a5b4b2e5cc571cd44e129d8fd653fa05c025e0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ffd390fb94ced75514fd104601019396d85a35c6ff6df71873815b773e825b80\",\"dweb:/ipfs/QmWg5R8hS1ekuWm2q86ZQiNRzHy3sS9z9671udXLwA2TpA\"]},\"@solidstate/contracts/introspection/ERC165/base/IERC165BaseInternal.sol\":{\"keccak256\":\"0xb3eccf8d895692a5824e73d59aecfbe938dd39a57fee2cef43d5caeba0155266\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d8a039f793a32839f33098ccc3be5f226c83529236b7d387399884afea045360\",\"dweb:/ipfs/QmRD9UWYAF64KpaXjRUjTFjoW3Z71HnE8a4p4Sj7yWvioh\"]},\"@solidstate/contracts/proxy/IProxy.sol\":{\"keccak256\":\"0x48d7f3fe133c1c8a9388eab6cda5060966af9bbd47a6d24a198e1a970fe9ee9f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b8f5e7dcea26eb4bfe4f8cb04704cf51ece7988409647e3387e483f65dd32954\",\"dweb:/ipfs/QmdKfjkDEXJGtDZ24tD4G9ro6AbMgJNN3Kwg9qGyPRRLQB\"]},\"@solidstate/contracts/proxy/Proxy.sol\":{\"keccak256\":\"0x40b3f644b893b536b316dec6d45d5787490144aeab259494118b337814c38cd3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8705f59bfdbf4d98b4bc0bfc81cc68edaa6e23ec21c7eb099af4f84cc21ff6b5\",\"dweb:/ipfs/QmaNmduvuLkY7R4iuYE4ME96J13UuzZ4Mm6PjUD9Lc8hAa\"]},\"@solidstate/contracts/proxy/diamond/ISolidStateDiamond.sol\":{\"keccak256\":\"0xac7569f320832aa6ee5b9e5f6de17fea33009ba8dcdd56aad687487b8ae6fc92\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cfdebf2293222ceec328d09a317bd9bc76ba65f563055fba58a37369e4ce7979\",\"dweb:/ipfs/QmRK745EuARnBFEdMVk3LkZoXG2xSGd7LuNQZWUex9xhgK\"]},\"@solidstate/contracts/proxy/diamond/SolidStateDiamond.sol\":{\"keccak256\":\"0xb56c502a4984ed40fefe7a0bf7966e95154ee701b9603aa9d9df9265e2c588c2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://282436fc2893490322b49329388dc6c7495ff1d125e7ffd86fb2d7268a9231ba\",\"dweb:/ipfs/QmXU7MVwzUmewPPPxQd96e3hx8ufBwZXX1WKMhrUPfBZKF\"]},\"@solidstate/contracts/proxy/diamond/base/DiamondBase.sol\":{\"keccak256\":\"0x0590fb00acfbf4eeec1957df8196cac63de89566a26ce0a80a9f78f919fae74c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://19ec1dfec4092f11029a37fabb50ba3385a94cd39e5044e3377074b6c5f9b709\",\"dweb:/ipfs/QmZbChb94a7S2W9ZAgFpesW4E4YEYeWg1wiV7VaJJGgWMK\"]},\"@solidstate/contracts/proxy/diamond/base/DiamondBaseStorage.sol\":{\"keccak256\":\"0x536f0e1d66226166d145aa150db4f493d73d0b118d24c327d167574d9130b114\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://dfb0c70f473fdfe921b2d0103e8fba7e1d452c9ce792a2a6a901f2efba65e56a\",\"dweb:/ipfs/QmacmpDGdPHE7o7G4pDp46cudBXHniswBerj6dyVnsSajs\"]},\"@solidstate/contracts/proxy/diamond/base/IDiamondBase.sol\":{\"keccak256\":\"0x00cad88b32dd925b1a6e5ad740811741f0f59fccba47d3e70b4488305a3fab78\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fa284f987966ddd735cd66d55d206f4a3ef161175df1f867e3930d60b62bba76\",\"dweb:/ipfs/QmSymhtgta9xnTg8xcHWMe6TzwnG5X2g7u9QnZZvVSzFrS\"]},\"@solidstate/contracts/proxy/diamond/fallback/DiamondFallback.sol\":{\"keccak256\":\"0x4924f8b6669fb144d56649adb0a52712b01bc7b442cc0feea1be07a24edf9ac3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f08a89af5dd515d10fd13f7610325b58f8e50139a5531d9c95aabc5acb1990f3\",\"dweb:/ipfs/Qme9yoWNfsPZTiJjCKbmuuX3GiHYw9vMvLbcyUY2zbRMzK\"]},\"@solidstate/contracts/proxy/diamond/fallback/IDiamondFallback.sol\":{\"keccak256\":\"0x299eb396c7716208795faf3822c304de0719acdc47b94c29b87b69a85505f84c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ae6cda79e1b66f7726f633f2367586e6d1b5571ae781b69a186a707586cd5e9f\",\"dweb:/ipfs/QmY3Jxm48NGi2pmhDcjA4QP3UX9nY9NHQx7goUGSguvSza\"]},\"@solidstate/contracts/proxy/diamond/readable/DiamondReadable.sol\":{\"keccak256\":\"0x35a67bc44b71b5ee37a2c871ce02fa5b9ebac0936ba0a1aa053b12c035f7f890\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9c2958090fd5c64c1725a5a7fba73765006c4e81ce3a39af192dfe539fe3d94c\",\"dweb:/ipfs/QmX3kW8Nkh33ahwZ455uaMJBNeV7yQa77ovNqjC3rwTDcB\"]},\"@solidstate/contracts/proxy/diamond/readable/DiamondReadableInternal.sol\":{\"keccak256\":\"0x620e6c505fb6dd854dd4cb11fe9537274019e65de35edf91cfccfcd42bcce30d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b8b44f06039b3ad76d5a1f27155b329e2e6a8073d14eb33b90eee33867f35492\",\"dweb:/ipfs/QmZkLeNhhUabW36QJFQTHSKrJkmLsgNeJSzJZHBWXXthiW\"]},\"@solidstate/contracts/proxy/diamond/readable/IDiamondReadable.sol\":{\"keccak256\":\"0xb2a4f085ace4eeb45e9e34096cc54d08d289a4e0cd2d570c8fef5424d4989925\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://dc63d50f2fa14338954819d4e054b204d4a217f13f5e100f114405ef7d27ddd8\",\"dweb:/ipfs/QmZL9VKfNwwfscekLyyTh6JJELDMusQgQkrWeP2whM8yKb\"]},\"@solidstate/contracts/proxy/diamond/readable/IDiamondReadableInternal.sol\":{\"keccak256\":\"0x04f52dd1ded535ec471866b39455e9879ddd5b5265adee8d4b32a06b4a718790\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a2ba06128f57b5bda17b3b1de7490880c21c2d68ada6b36dc3049398a6de8bff\",\"dweb:/ipfs/Qmf9QAjygj4mPHKuh8RjVGMwZDNVajcerqH7pPnQR3r8cN\"]},\"@solidstate/contracts/proxy/diamond/writable/DiamondWritable.sol\":{\"keccak256\":\"0x6da3dbd19422c4a434e50bde10db43f8baa291cf5086604399adab39f0796f05\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://06b79d4eb3c85879e1412301745d2abcc25344b5884d31e20bddcbcee23e5041\",\"dweb:/ipfs/Qme6ScmPGQ3PouDnXGis4Lj6s2EDQGimCdVWGv1gzTV2BE\"]},\"@solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol\":{\"keccak256\":\"0xbc71dc13eb588d46132745d218819aae37217d1476c4f9e626ef8ccdc2205be7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7cfb8919df76c0d37a061bfdc4ab11c08a61ab7250c7054cb02d48df037f46c3\",\"dweb:/ipfs/QmTpR2g5TcSNHjYFsUEeYcqohvrNPoEFhBfYVsLaMmPHqe\"]},\"@solidstate/contracts/proxy/diamond/writable/IDiamondWritable.sol\":{\"keccak256\":\"0x5b93ab2500c62bf37ff8a81927356c1e9251ea6a52c8165abb2f9c770410f572\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f2ec9e41faee654c99591f8d6e5d437b2bbfc67c4b7a58bb7d6bb764f7a4cf3d\",\"dweb:/ipfs/QmNVrDk1T4wh1PkvhXQtazQpZuKRiuRifJTANnhMfaFjpn\"]},\"@solidstate/contracts/proxy/diamond/writable/IDiamondWritableInternal.sol\":{\"keccak256\":\"0x84808f6a171f5ff30b0bc2f02a0c327c16c123530aeb36a4f88c1b5322a5d159\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://579c4f9b2597c7cff29309846749596a962cb491557ee5865fe74759ca65f8f4\",\"dweb:/ipfs/QmZeuV14qUg2sEy3EdvbzpYjDzMjuV2CCpwCFZvyTd2v6B\"]},\"@solidstate/contracts/utils/AddressUtils.sol\":{\"keccak256\":\"0x73b8727aeb8d6a984dfb279cf64eb867cb0f5c42527b877f87dcbe1a37f3e433\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://21599c6853d978762bd6db8e70720ba7de6394bf6e1b66d32a936c074c160135\",\"dweb:/ipfs/QmekH1Vro4JrwfSpJUBVRofaCMsxAj8huDbujYBgGsHm63\"]},\"@solidstate/contracts/utils/UintUtils.sol\":{\"keccak256\":\"0x1dbd4a2d25d6d3511018319bb752e2fe72b934cbcf31b18e47a286229ce36f1f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e339115b07880370eef2b22f5529050fcf863a34bab9e8ac81be570ae7deb2be\",\"dweb:/ipfs/QmU9KsZQTMffVUnHUGHkf78Yg5orQF9TSk9n1uSgQnkak2\"]},\"Eip2535/EIp2535Diamond.sol\":{\"keccak256\":\"0x5ba586dc677c34f605a25d97b33a1d6fb92f2e262b303fb117400759b8fa8270\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bb4aa260826a3f99561fda55c2c11c1482d8af9b381bfe0042cf80d77b649e1c\",\"dweb:/ipfs/QmU5tDseunWJd9UErXF1E8Uy1UN41osuk5gibz5irfkaSa\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"errorCode": "3628",
				"formattedMessage": "Warning: This contract has a payable fallback function, but no receive ether function. Consider adding a receive ether function.\n --> @solidstate/contracts/proxy/diamond/fallback/IDiamondFallback.sol:7:1:\n  |\n7 | interface IDiamondFallback is IDiamondBase {\n  | ^ (Relevant source part starts here and spans across multiple lines).\nNote: The payable fallback function is defined here.\n --> @solidstate/contracts/proxy/IProxy.sol:8:5:\n  |\n8 |     fallback() external payable;\n  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n",
				"message": "This contract has a payable fallback function, but no receive ether function. Consider adding a receive ether function.",
				"secondarySourceLocations": [
					{
						"end": 159,
						"file": "@solidstate/contracts/proxy/IProxy.sol",
						"message": "The payable fallback function is defined here.",
						"start": 131
					}
				],
				"severity": "warning",
				"sourceLocation": {
					"end": 627,
					"file": "@solidstate/contracts/proxy/diamond/fallback/IDiamondFallback.sol",
					"start": 117
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "3628",
				"formattedMessage": "Warning: This contract has a payable fallback function, but no receive ether function. Consider adding a receive ether function.\n  --> @solidstate/contracts/proxy/diamond/fallback/DiamondFallback.sol:13:1:\n   |\n13 | abstract contract DiamondFallback is\n   | ^ (Relevant source part starts here and spans across multiple lines).\nNote: The payable fallback function is defined here.\n  --> @solidstate/contracts/proxy/Proxy.sol:19:5:\n   |\n19 |     fallback() external payable virtual {\n   |     ^ (Relevant source part starts here and spans across multiple lines).\n\n",
				"message": "This contract has a payable fallback function, but no receive ether function. Consider adding a receive ether function.",
				"secondarySourceLocations": [
					{
						"end": 1246,
						"file": "@solidstate/contracts/proxy/Proxy.sol",
						"message": "The payable fallback function is defined here.",
						"start": 537
					}
				],
				"severity": "warning",
				"sourceLocation": {
					"end": 1971,
					"file": "@solidstate/contracts/proxy/diamond/fallback/DiamondFallback.sol",
					"start": 386
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "9302",
				"formattedMessage": "Warning: Return value of low-level calls not used.\n   --> Eip2535/EIp2535Diamond.sol:208:17:\n    |\n208 |                 _init.delegatecall(_calldata);\n    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n",
				"message": "Return value of low-level calls not used.",
				"severity": "warning",
				"sourceLocation": {
					"end": 6241,
					"file": "Eip2535/EIp2535Diamond.sol",
					"start": 6212
				},
				"type": "Warning"
			}
		],
		"sources": {
			"@solidstate/contracts/access/ownable/IOwnable.sol": {
				"ast": {
					"absolutePath": "@solidstate/contracts/access/ownable/IOwnable.sol",
					"exportedSymbols": {
						"IERC173": [
							432
						],
						"IOwnable": [
							10
						],
						"IOwnableInternal": [
							21
						]
					},
					"id": 11,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".18"
							],
							"nodeType": "PragmaDirective",
							"src": "33:24:0"
						},
						{
							"absolutePath": "@solidstate/contracts/interfaces/IERC173.sol",
							"file": "../../interfaces/IERC173.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 11,
							"sourceUnit": 433,
							"src": "59:55:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2,
										"name": "IERC173",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 432,
										"src": "68:7:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@solidstate/contracts/access/ownable/IOwnableInternal.sol",
							"file": "./IOwnableInternal.sol",
							"id": 5,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 11,
							"sourceUnit": 22,
							"src": "115:58:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 4,
										"name": "IOwnableInternal",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 21,
										"src": "124:16:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 6,
										"name": "IOwnableInternal",
										"nameLocations": [
											"197:16:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 21,
										"src": "197:16:0"
									},
									"id": 7,
									"nodeType": "InheritanceSpecifier",
									"src": "197:16:0"
								},
								{
									"baseName": {
										"id": 8,
										"name": "IERC173",
										"nameLocations": [
											"215:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 432,
										"src": "215:7:0"
									},
									"id": 9,
									"nodeType": "InheritanceSpecifier",
									"src": "215:7:0"
								}
							],
							"canonicalName": "IOwnable",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 10,
							"linearizedBaseContracts": [
								10,
								432,
								21,
								442
							],
							"name": "IOwnable",
							"nameLocation": "185:8:0",
							"nodeType": "ContractDefinition",
							"nodes": [],
							"scope": 11,
							"src": "175:50:0",
							"usedErrors": [
								18,
								20
							],
							"usedEvents": [
								441
							]
						}
					],
					"src": "33:193:0"
				},
				"id": 0
			},
			"@solidstate/contracts/access/ownable/IOwnableInternal.sol": {
				"ast": {
					"absolutePath": "@solidstate/contracts/access/ownable/IOwnableInternal.sol",
					"exportedSymbols": {
						"IERC173Internal": [
							442
						],
						"IOwnableInternal": [
							21
						]
					},
					"id": 22,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 12,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".18"
							],
							"nodeType": "PragmaDirective",
							"src": "33:24:1"
						},
						{
							"absolutePath": "@solidstate/contracts/interfaces/IERC173Internal.sol",
							"file": "../../interfaces/IERC173Internal.sol",
							"id": 14,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 22,
							"sourceUnit": 443,
							"src": "59:71:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 13,
										"name": "IERC173Internal",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 442,
										"src": "68:15:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 15,
										"name": "IERC173Internal",
										"nameLocations": [
											"162:15:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 442,
										"src": "162:15:1"
									},
									"id": 16,
									"nodeType": "InheritanceSpecifier",
									"src": "162:15:1"
								}
							],
							"canonicalName": "IOwnableInternal",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": true,
							"id": 21,
							"linearizedBaseContracts": [
								21,
								442
							],
							"name": "IOwnableInternal",
							"nameLocation": "142:16:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"errorSelector": "2f7a8ee1",
									"id": 18,
									"name": "Ownable__NotOwner",
									"nameLocation": "190:17:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 17,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "207:2:1"
									},
									"src": "184:26:1"
								},
								{
									"errorSelector": "d0b49847",
									"id": 20,
									"name": "Ownable__NotTransitiveOwner",
									"nameLocation": "221:27:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 19,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "248:2:1"
									},
									"src": "215:36:1"
								}
							],
							"scope": 22,
							"src": "132:121:1",
							"usedErrors": [
								18,
								20
							],
							"usedEvents": [
								441
							]
						}
					],
					"src": "33:221:1"
				},
				"id": 1
			},
			"@solidstate/contracts/access/ownable/ISafeOwnable.sol": {
				"ast": {
					"absolutePath": "@solidstate/contracts/access/ownable/ISafeOwnable.sol",
					"exportedSymbols": {
						"IOwnable": [
							10
						],
						"ISafeOwnable": [
							42
						],
						"ISafeOwnableInternal": [
							51
						]
					},
					"id": 43,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 23,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".18"
							],
							"nodeType": "PragmaDirective",
							"src": "33:24:2"
						},
						{
							"absolutePath": "@solidstate/contracts/access/ownable/IOwnable.sol",
							"file": "./IOwnable.sol",
							"id": 25,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 43,
							"sourceUnit": 11,
							"src": "59:42:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 24,
										"name": "IOwnable",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 10,
										"src": "68:8:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@solidstate/contracts/access/ownable/ISafeOwnableInternal.sol",
							"file": "./ISafeOwnableInternal.sol",
							"id": 27,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 43,
							"sourceUnit": 52,
							"src": "102:66:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 26,
										"name": "ISafeOwnableInternal",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 51,
										"src": "111:20:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 28,
										"name": "ISafeOwnableInternal",
										"nameLocations": [
											"196:20:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 51,
										"src": "196:20:2"
									},
									"id": 29,
									"nodeType": "InheritanceSpecifier",
									"src": "196:20:2"
								},
								{
									"baseName": {
										"id": 30,
										"name": "IOwnable",
										"nameLocations": [
											"218:8:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 10,
										"src": "218:8:2"
									},
									"id": 31,
									"nodeType": "InheritanceSpecifier",
									"src": "218:8:2"
								}
							],
							"canonicalName": "ISafeOwnable",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 42,
							"linearizedBaseContracts": [
								42,
								10,
								432,
								51,
								21,
								442
							],
							"name": "ISafeOwnable",
							"nameLocation": "180:12:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 32,
										"nodeType": "StructuredDocumentation",
										"src": "233:93:2",
										"text": " @notice get the nominated owner who has permission to call acceptOwnership"
									},
									"functionSelector": "8ab5150a",
									"id": 37,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "nomineeOwner",
									"nameLocation": "340:12:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 33,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "352:2:2"
									},
									"returnParameters": {
										"id": 36,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 35,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 37,
												"src": "378:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 34,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "378:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "377:9:2"
									},
									"scope": 42,
									"src": "331:56:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 38,
										"nodeType": "StructuredDocumentation",
										"src": "393:64:2",
										"text": " @notice accept transfer of contract ownership"
									},
									"functionSelector": "79ba5097",
									"id": 41,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "acceptOwnership",
									"nameLocation": "471:15:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 39,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "486:2:2"
									},
									"returnParameters": {
										"id": 40,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "497:0:2"
									},
									"scope": 42,
									"src": "462:36:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 43,
							"src": "170:330:2",
							"usedErrors": [
								18,
								20,
								50
							],
							"usedEvents": [
								441
							]
						}
					],
					"src": "33:468:2"
				},
				"id": 2
			},
			"@solidstate/contracts/access/ownable/ISafeOwnableInternal.sol": {
				"ast": {
					"absolutePath": "@solidstate/contracts/access/ownable/ISafeOwnableInternal.sol",
					"exportedSymbols": {
						"IOwnableInternal": [
							21
						],
						"ISafeOwnableInternal": [
							51
						]
					},
					"id": 52,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 44,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".18"
							],
							"nodeType": "PragmaDirective",
							"src": "33:24:3"
						},
						{
							"absolutePath": "@solidstate/contracts/access/ownable/IOwnableInternal.sol",
							"file": "./IOwnableInternal.sol",
							"id": 46,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 52,
							"sourceUnit": 22,
							"src": "59:58:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 45,
										"name": "IOwnableInternal",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 21,
										"src": "68:16:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 47,
										"name": "IOwnableInternal",
										"nameLocations": [
											"153:16:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 21,
										"src": "153:16:3"
									},
									"id": 48,
									"nodeType": "InheritanceSpecifier",
									"src": "153:16:3"
								}
							],
							"canonicalName": "ISafeOwnableInternal",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": true,
							"id": 51,
							"linearizedBaseContracts": [
								51,
								21,
								442
							],
							"name": "ISafeOwnableInternal",
							"nameLocation": "129:20:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"errorSelector": "efd1052d",
									"id": 50,
									"name": "SafeOwnable__NotNomineeOwner",
									"nameLocation": "182:28:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 49,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "210:2:3"
									},
									"src": "176:37:3"
								}
							],
							"scope": 52,
							"src": "119:96:3",
							"usedErrors": [
								18,
								20,
								50
							],
							"usedEvents": [
								441
							]
						}
					],
					"src": "33:183:3"
				},
				"id": 3
			},
			"@solidstate/contracts/access/ownable/Ownable.sol": {
				"ast": {
					"absolutePath": "@solidstate/contracts/access/ownable/Ownable.sol",
					"exportedSymbols": {
						"IERC173": [
							432
						],
						"IOwnable": [
							10
						],
						"Ownable": [
							88
						],
						"OwnableInternal": [
							212
						]
					},
					"id": 89,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 53,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".18"
							],
							"nodeType": "PragmaDirective",
							"src": "33:24:4"
						},
						{
							"absolutePath": "@solidstate/contracts/interfaces/IERC173.sol",
							"file": "../../interfaces/IERC173.sol",
							"id": 55,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 89,
							"sourceUnit": 433,
							"src": "59:55:4",
							"symbolAliases": [
								{
									"foreign": {
										"id": 54,
										"name": "IERC173",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 432,
										"src": "68:7:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@solidstate/contracts/access/ownable/IOwnable.sol",
							"file": "./IOwnable.sol",
							"id": 57,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 89,
							"sourceUnit": 11,
							"src": "115:42:4",
							"symbolAliases": [
								{
									"foreign": {
										"id": 56,
										"name": "IOwnable",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 10,
										"src": "124:8:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@solidstate/contracts/access/ownable/OwnableInternal.sol",
							"file": "./OwnableInternal.sol",
							"id": 59,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 89,
							"sourceUnit": 213,
							"src": "158:56:4",
							"symbolAliases": [
								{
									"foreign": {
										"id": 58,
										"name": "OwnableInternal",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 212,
										"src": "167:15:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 61,
										"name": "IOwnable",
										"nameLocations": [
											"304:8:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 10,
										"src": "304:8:4"
									},
									"id": 62,
									"nodeType": "InheritanceSpecifier",
									"src": "304:8:4"
								},
								{
									"baseName": {
										"id": 63,
										"name": "OwnableInternal",
										"nameLocations": [
											"314:15:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 212,
										"src": "314:15:4"
									},
									"id": 64,
									"nodeType": "InheritanceSpecifier",
									"src": "314:15:4"
								}
							],
							"canonicalName": "Ownable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 60,
								"nodeType": "StructuredDocumentation",
								"src": "216:58:4",
								"text": " @title Ownership access control based on ERC173"
							},
							"fullyImplemented": true,
							"id": 88,
							"linearizedBaseContracts": [
								88,
								212,
								10,
								432,
								21,
								442
							],
							"name": "Ownable",
							"nameLocation": "293:7:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"baseFunctions": [
										425
									],
									"body": {
										"id": 73,
										"nodeType": "Block",
										"src": "434:32:4",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 70,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 140,
														"src": "451:6:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 71,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "451:8:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 69,
												"id": 72,
												"nodeType": "Return",
												"src": "444:15:4"
											}
										]
									},
									"documentation": {
										"id": 65,
										"nodeType": "StructuredDocumentation",
										"src": "336:38:4",
										"text": " @inheritdoc IERC173"
									},
									"functionSelector": "8da5cb5b",
									"id": 74,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "388:5:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 66,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "393:2:4"
									},
									"returnParameters": {
										"id": 69,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 68,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 74,
												"src": "425:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 67,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "425:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "424:9:4"
									},
									"scope": 88,
									"src": "379:87:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										431
									],
									"body": {
										"id": 86,
										"nodeType": "Block",
										"src": "584:44:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 83,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 77,
															"src": "613:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 82,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 184,
														"src": "594:18:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 84,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "594:27:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 85,
												"nodeType": "ExpressionStatement",
												"src": "594:27:4"
											}
										]
									},
									"documentation": {
										"id": 75,
										"nodeType": "StructuredDocumentation",
										"src": "472:38:4",
										"text": " @inheritdoc IERC173"
									},
									"functionSelector": "f2fde38b",
									"id": 87,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 80,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 79,
												"name": "onlyOwner",
												"nameLocations": [
													"574:9:4"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 116,
												"src": "574:9:4"
											},
											"nodeType": "ModifierInvocation",
											"src": "574:9:4"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "524:17:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 78,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 77,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "550:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 87,
												"src": "542:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 76,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "542:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "541:17:4"
									},
									"returnParameters": {
										"id": 81,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "584:0:4"
									},
									"scope": 88,
									"src": "515:113:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								}
							],
							"scope": 89,
							"src": "275:355:4",
							"usedErrors": [
								18,
								20
							],
							"usedEvents": [
								441
							]
						}
					],
					"src": "33:598:4"
				},
				"id": 4
			},
			"@solidstate/contracts/access/ownable/OwnableInternal.sol": {
				"ast": {
					"absolutePath": "@solidstate/contracts/access/ownable/OwnableInternal.sol",
					"exportedSymbols": {
						"AddressUtils": [
							2972
						],
						"IERC173": [
							432
						],
						"IOwnableInternal": [
							21
						],
						"OwnableInternal": [
							212
						],
						"OwnableStorage": [
							235
						]
					},
					"id": 213,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 90,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".18"
							],
							"nodeType": "PragmaDirective",
							"src": "33:24:5"
						},
						{
							"absolutePath": "@solidstate/contracts/interfaces/IERC173.sol",
							"file": "../../interfaces/IERC173.sol",
							"id": 92,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 213,
							"sourceUnit": 433,
							"src": "59:55:5",
							"symbolAliases": [
								{
									"foreign": {
										"id": 91,
										"name": "IERC173",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 432,
										"src": "68:7:5",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@solidstate/contracts/utils/AddressUtils.sol",
							"file": "../../utils/AddressUtils.sol",
							"id": 94,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 213,
							"sourceUnit": 2973,
							"src": "115:60:5",
							"symbolAliases": [
								{
									"foreign": {
										"id": 93,
										"name": "AddressUtils",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 2972,
										"src": "124:12:5",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@solidstate/contracts/access/ownable/IOwnableInternal.sol",
							"file": "./IOwnableInternal.sol",
							"id": 96,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 213,
							"sourceUnit": 22,
							"src": "176:58:5",
							"symbolAliases": [
								{
									"foreign": {
										"id": 95,
										"name": "IOwnableInternal",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 21,
										"src": "185:16:5",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@solidstate/contracts/access/ownable/OwnableStorage.sol",
							"file": "./OwnableStorage.sol",
							"id": 98,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 213,
							"sourceUnit": 236,
							"src": "235:54:5",
							"symbolAliases": [
								{
									"foreign": {
										"id": 97,
										"name": "OwnableStorage",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 235,
										"src": "244:14:5",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 99,
										"name": "IOwnableInternal",
										"nameLocations": [
											"328:16:5"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 21,
										"src": "328:16:5"
									},
									"id": 100,
									"nodeType": "InheritanceSpecifier",
									"src": "328:16:5"
								}
							],
							"canonicalName": "OwnableInternal",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 212,
							"linearizedBaseContracts": [
								212,
								21,
								442
							],
							"name": "OwnableInternal",
							"nameLocation": "309:15:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 103,
									"libraryName": {
										"id": 101,
										"name": "AddressUtils",
										"nameLocations": [
											"357:12:5"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2972,
										"src": "357:12:5"
									},
									"nodeType": "UsingForDirective",
									"src": "351:31:5",
									"typeName": {
										"id": 102,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "374:7:5",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									}
								},
								{
									"body": {
										"id": 115,
										"nodeType": "Block",
										"src": "409:82:5",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 109,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 105,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "423:3:5",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 106,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "427:6:5",
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "423:10:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 107,
															"name": "_owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 140,
															"src": "437:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 108,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "437:8:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "423:22:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 113,
												"nodeType": "IfStatement",
												"src": "419:54:5",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 110,
															"name": "Ownable__NotOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 18,
															"src": "454:17:5",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$__$",
																"typeString": "function () pure"
															}
														},
														"id": 111,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "454:19:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 112,
													"nodeType": "RevertStatement",
													"src": "447:26:5"
												}
											},
											{
												"id": 114,
												"nodeType": "PlaceholderStatement",
												"src": "483:1:5"
											}
										]
									},
									"id": 116,
									"name": "onlyOwner",
									"nameLocation": "397:9:5",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 104,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "406:2:5"
									},
									"src": "388:103:5",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 128,
										"nodeType": "Block",
										"src": "528:114:5",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 122,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 118,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "542:3:5",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 119,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "546:6:5",
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "542:10:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 120,
															"name": "_transitiveOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 174,
															"src": "556:16:5",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 121,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "556:18:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "542:32:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 126,
												"nodeType": "IfStatement",
												"src": "538:86:5",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 123,
															"name": "Ownable__NotTransitiveOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 20,
															"src": "595:27:5",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$__$",
																"typeString": "function () pure"
															}
														},
														"id": 124,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "595:29:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 125,
													"nodeType": "RevertStatement",
													"src": "588:36:5"
												}
											},
											{
												"id": 127,
												"nodeType": "PlaceholderStatement",
												"src": "634:1:5"
											}
										]
									},
									"id": 129,
									"name": "onlyTransitiveOwner",
									"nameLocation": "506:19:5",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 117,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "525:2:5"
									},
									"src": "497:145:5",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 139,
										"nodeType": "Block",
										"src": "706:53:5",
										"statements": [
											{
												"expression": {
													"expression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"expression": {
																"id": 134,
																"name": "OwnableStorage",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 235,
																"src": "723:14:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_OwnableStorage_$235_$",
																	"typeString": "type(library OwnableStorage)"
																}
															},
															"id": 135,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "738:6:5",
															"memberName": "layout",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 234,
															"src": "723:21:5",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_Layout_$217_storage_ptr_$",
																"typeString": "function () pure returns (struct OwnableStorage.Layout storage pointer)"
															}
														},
														"id": 136,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "723:23:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Layout_$217_storage_ptr",
															"typeString": "struct OwnableStorage.Layout storage pointer"
														}
													},
													"id": 137,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "747:5:5",
													"memberName": "owner",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 216,
													"src": "723:29:5",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 133,
												"id": 138,
												"nodeType": "Return",
												"src": "716:36:5"
											}
										]
									},
									"id": 140,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_owner",
									"nameLocation": "657:6:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 130,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "663:2:5"
									},
									"returnParameters": {
										"id": 133,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 132,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 140,
												"src": "697:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 131,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "697:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "696:9:5"
									},
									"scope": 212,
									"src": "648:111:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 173,
										"nodeType": "Block",
										"src": "839:256:5",
										"statements": [
											{
												"expression": {
													"id": 148,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 145,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 143,
														"src": "849:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 146,
															"name": "_owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 140,
															"src": "857:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 147,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "857:8:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "849:16:5",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 149,
												"nodeType": "ExpressionStatement",
												"src": "849:16:5"
											},
											{
												"body": {
													"id": 171,
													"nodeType": "Block",
													"src": "903:186:5",
													"statements": [
														{
															"clauses": [
																{
																	"block": {
																		"id": 165,
																		"nodeType": "Block",
																		"src": "978:56:5",
																		"statements": [
																			{
																				"expression": {
																					"id": 163,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftHandSide": {
																						"id": 161,
																						"name": "owner",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 143,
																						"src": "996:5:5",
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					},
																					"nodeType": "Assignment",
																					"operator": "=",
																					"rightHandSide": {
																						"id": 162,
																						"name": "transitiveOwner",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 159,
																						"src": "1004:15:5",
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					},
																					"src": "996:23:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				"id": 164,
																				"nodeType": "ExpressionStatement",
																				"src": "996:23:5"
																			}
																		]
																	},
																	"errorName": "",
																	"id": 166,
																	"nodeType": "TryCatchClause",
																	"parameters": {
																		"id": 160,
																		"nodeType": "ParameterList",
																		"parameters": [
																			{
																				"constant": false,
																				"id": 159,
																				"mutability": "mutable",
																				"name": "transitiveOwner",
																				"nameLocation": "961:15:5",
																				"nodeType": "VariableDeclaration",
																				"scope": 166,
																				"src": "953:23:5",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				"typeName": {
																					"id": 158,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "953:7:5",
																					"stateMutability": "nonpayable",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"src": "952:25:5"
																	},
																	"src": "944:90:5"
																},
																{
																	"block": {
																		"id": 168,
																		"nodeType": "Block",
																		"src": "1041:38:5",
																		"statements": [
																			{
																				"id": 167,
																				"nodeType": "Break",
																				"src": "1059:5:5"
																			}
																		]
																	},
																	"errorName": "",
																	"id": 169,
																	"nodeType": "TryCatchClause",
																	"src": "1035:44:5"
																}
															],
															"externalCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"expression": {
																		"arguments": [
																			{
																				"id": 154,
																				"name": "owner",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 143,
																				"src": "929:5:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 153,
																			"name": "IERC173",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 432,
																			"src": "921:7:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC173_$432_$",
																				"typeString": "type(contract IERC173)"
																			}
																		},
																		"id": 155,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "921:14:5",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC173_$432",
																			"typeString": "contract IERC173"
																		}
																	},
																	"id": 156,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "936:5:5",
																	"memberName": "owner",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 425,
																	"src": "921:20:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
																		"typeString": "function () view external returns (address)"
																	}
																},
																"id": 157,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "921:22:5",
																"tryCall": true,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 170,
															"nodeType": "TryStatement",
															"src": "917:162:5"
														}
													]
												},
												"condition": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 150,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 143,
															"src": "883:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 151,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "889:10:5",
														"memberName": "isContract",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2785,
														"src": "883:16:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$attached_to$_t_address_$",
															"typeString": "function (address) view returns (bool)"
														}
													},
													"id": 152,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "883:18:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 172,
												"nodeType": "WhileStatement",
												"src": "876:213:5"
											}
										]
									},
									"id": 174,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transitiveOwner",
									"nameLocation": "774:16:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 141,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "790:2:5"
									},
									"returnParameters": {
										"id": 144,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 143,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "832:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 174,
												"src": "824:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 142,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "824:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "823:15:5"
									},
									"scope": 212,
									"src": "765:330:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 183,
										"nodeType": "Block",
										"src": "1163:35:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 180,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 176,
															"src": "1183:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 179,
														"name": "_setOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 211,
														"src": "1173:9:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 181,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1173:18:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 182,
												"nodeType": "ExpressionStatement",
												"src": "1173:18:5"
											}
										]
									},
									"id": 184,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "1110:18:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 177,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 176,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1137:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 184,
												"src": "1129:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 175,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1129:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1128:17:5"
									},
									"returnParameters": {
										"id": 178,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1163:0:5"
									},
									"scope": 212,
									"src": "1101:97:5",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 210,
										"nodeType": "Block",
										"src": "1257:154:5",
										"statements": [
											{
												"assignments": [
													193
												],
												"declarations": [
													{
														"constant": false,
														"id": 193,
														"mutability": "mutable",
														"name": "l",
														"nameLocation": "1297:1:5",
														"nodeType": "VariableDeclaration",
														"scope": 210,
														"src": "1267:31:5",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Layout_$217_storage_ptr",
															"typeString": "struct OwnableStorage.Layout"
														},
														"typeName": {
															"id": 192,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 191,
																"name": "OwnableStorage.Layout",
																"nameLocations": [
																	"1267:14:5",
																	"1282:6:5"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 217,
																"src": "1267:21:5"
															},
															"referencedDeclaration": 217,
															"src": "1267:21:5",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Layout_$217_storage_ptr",
																"typeString": "struct OwnableStorage.Layout"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 197,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 194,
															"name": "OwnableStorage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 235,
															"src": "1301:14:5",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_OwnableStorage_$235_$",
																"typeString": "type(library OwnableStorage)"
															}
														},
														"id": 195,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1316:6:5",
														"memberName": "layout",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 234,
														"src": "1301:21:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_Layout_$217_storage_ptr_$",
															"typeString": "function () pure returns (struct OwnableStorage.Layout storage pointer)"
														}
													},
													"id": 196,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1301:23:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Layout_$217_storage_ptr",
														"typeString": "struct OwnableStorage.Layout storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1267:57:5"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 199,
																"name": "l",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 193,
																"src": "1360:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Layout_$217_storage_ptr",
																	"typeString": "struct OwnableStorage.Layout storage pointer"
																}
															},
															"id": 200,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1362:5:5",
															"memberName": "owner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 216,
															"src": "1360:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 201,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 186,
															"src": "1369:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 198,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 441,
														"src": "1339:20:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 202,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1339:38:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 203,
												"nodeType": "EmitStatement",
												"src": "1334:43:5"
											},
											{
												"expression": {
													"id": 208,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 204,
															"name": "l",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 193,
															"src": "1387:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Layout_$217_storage_ptr",
																"typeString": "struct OwnableStorage.Layout storage pointer"
															}
														},
														"id": 206,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "1389:5:5",
														"memberName": "owner",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 216,
														"src": "1387:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 207,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 186,
														"src": "1397:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1387:17:5",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 209,
												"nodeType": "ExpressionStatement",
												"src": "1387:17:5"
											}
										]
									},
									"id": 211,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setOwner",
									"nameLocation": "1213:9:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 187,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 186,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1231:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 211,
												"src": "1223:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 185,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1223:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1222:17:5"
									},
									"returnParameters": {
										"id": 188,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1257:0:5"
									},
									"scope": 212,
									"src": "1204:207:5",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 213,
							"src": "291:1122:5",
							"usedErrors": [
								18,
								20
							],
							"usedEvents": [
								441
							]
						}
					],
					"src": "33:1381:5"
				},
				"id": 5
			},
			"@solidstate/contracts/access/ownable/OwnableStorage.sol": {
				"ast": {
					"absolutePath": "@solidstate/contracts/access/ownable/OwnableStorage.sol",
					"exportedSymbols": {
						"OwnableStorage": [
							235
						]
					},
					"id": 236,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 214,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".18"
							],
							"nodeType": "PragmaDirective",
							"src": "33:24:6"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "OwnableStorage",
							"contractDependencies": [],
							"contractKind": "library",
							"fullyImplemented": true,
							"id": 235,
							"linearizedBaseContracts": [
								235
							],
							"name": "OwnableStorage",
							"nameLocation": "67:14:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "OwnableStorage.Layout",
									"id": 217,
									"members": [
										{
											"constant": false,
											"id": 216,
											"mutability": "mutable",
											"name": "owner",
											"nameLocation": "120:5:6",
											"nodeType": "VariableDeclaration",
											"scope": 217,
											"src": "112:13:6",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 215,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "112:7:6",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Layout",
									"nameLocation": "95:6:6",
									"nodeType": "StructDefinition",
									"scope": 235,
									"src": "88:44:6",
									"visibility": "public"
								},
								{
									"constant": true,
									"id": 222,
									"mutability": "constant",
									"name": "STORAGE_SLOT",
									"nameLocation": "164:12:6",
									"nodeType": "VariableDeclaration",
									"scope": 235,
									"src": "138:98:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 218,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "138:7:6",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"arguments": [
											{
												"hexValue": "736f6c696473746174652e636f6e7472616374732e73746f726167652e4f776e61626c65",
												"id": 220,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "string",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "197:38:6",
												"typeDescriptions": {
													"typeIdentifier": "t_stringliteral_8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f671680460",
													"typeString": "literal_string \"solidstate.contracts.storage.Ownable\""
												},
												"value": "solidstate.contracts.storage.Ownable"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_stringliteral_8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f671680460",
													"typeString": "literal_string \"solidstate.contracts.storage.Ownable\""
												}
											],
											"id": 219,
											"name": "keccak256",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 4294967288,
											"src": "187:9:6",
											"typeDescriptions": {
												"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
												"typeString": "function (bytes memory) pure returns (bytes32)"
											}
										},
										"id": 221,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "functionCall",
										"lValueRequested": false,
										"nameLocations": [],
										"names": [],
										"nodeType": "FunctionCall",
										"src": "187:49:6",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"visibility": "internal"
								},
								{
									"body": {
										"id": 233,
										"nodeType": "Block",
										"src": "302:100:6",
										"statements": [
											{
												"assignments": [
													229
												],
												"declarations": [
													{
														"constant": false,
														"id": 229,
														"mutability": "mutable",
														"name": "slot",
														"nameLocation": "320:4:6",
														"nodeType": "VariableDeclaration",
														"scope": 233,
														"src": "312:12:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 228,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "312:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 231,
												"initialValue": {
													"id": 230,
													"name": "STORAGE_SLOT",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 222,
													"src": "327:12:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "312:27:6"
											},
											{
												"AST": {
													"nativeSrc": "358:38:6",
													"nodeType": "YulBlock",
													"src": "358:38:6",
													"statements": [
														{
															"nativeSrc": "372:14:6",
															"nodeType": "YulAssignment",
															"src": "372:14:6",
															"value": {
																"name": "slot",
																"nativeSrc": "382:4:6",
																"nodeType": "YulIdentifier",
																"src": "382:4:6"
															},
															"variableNames": [
																{
																	"name": "l.slot",
																	"nativeSrc": "372:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "372:6:6"
																}
															]
														}
													]
												},
												"evmVersion": "shanghai",
												"externalReferences": [
													{
														"declaration": 226,
														"isOffset": false,
														"isSlot": true,
														"src": "372:6:6",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 229,
														"isOffset": false,
														"isSlot": false,
														"src": "382:4:6",
														"valueSize": 1
													}
												],
												"id": 232,
												"nodeType": "InlineAssembly",
												"src": "349:47:6"
											}
										]
									},
									"id": 234,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "layout",
									"nameLocation": "252:6:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 223,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "258:2:6"
									},
									"returnParameters": {
										"id": 227,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 226,
												"mutability": "mutable",
												"name": "l",
												"nameLocation": "299:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 234,
												"src": "284:16:6",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Layout_$217_storage_ptr",
													"typeString": "struct OwnableStorage.Layout"
												},
												"typeName": {
													"id": 225,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 224,
														"name": "Layout",
														"nameLocations": [
															"284:6:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 217,
														"src": "284:6:6"
													},
													"referencedDeclaration": 217,
													"src": "284:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Layout_$217_storage_ptr",
														"typeString": "struct OwnableStorage.Layout"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "283:18:6"
									},
									"scope": 235,
									"src": "243:159:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 236,
							"src": "59:345:6",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "33:372:6"
				},
				"id": 6
			},
			"@solidstate/contracts/access/ownable/SafeOwnable.sol": {
				"ast": {
					"absolutePath": "@solidstate/contracts/access/ownable/SafeOwnable.sol",
					"exportedSymbols": {
						"ISafeOwnable": [
							42
						],
						"Ownable": [
							88
						],
						"OwnableInternal": [
							212
						],
						"SafeOwnable": [
							288
						],
						"SafeOwnableInternal": [
							369
						]
					},
					"id": 289,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 237,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".18"
							],
							"nodeType": "PragmaDirective",
							"src": "33:24:7"
						},
						{
							"absolutePath": "@solidstate/contracts/access/ownable/Ownable.sol",
							"file": "./Ownable.sol",
							"id": 239,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 289,
							"sourceUnit": 89,
							"src": "59:40:7",
							"symbolAliases": [
								{
									"foreign": {
										"id": 238,
										"name": "Ownable",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 88,
										"src": "68:7:7",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@solidstate/contracts/access/ownable/ISafeOwnable.sol",
							"file": "./ISafeOwnable.sol",
							"id": 241,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 289,
							"sourceUnit": 43,
							"src": "100:50:7",
							"symbolAliases": [
								{
									"foreign": {
										"id": 240,
										"name": "ISafeOwnable",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 42,
										"src": "109:12:7",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@solidstate/contracts/access/ownable/OwnableInternal.sol",
							"file": "./OwnableInternal.sol",
							"id": 243,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 289,
							"sourceUnit": 213,
							"src": "151:56:7",
							"symbolAliases": [
								{
									"foreign": {
										"id": 242,
										"name": "OwnableInternal",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 212,
										"src": "160:15:7",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@solidstate/contracts/access/ownable/SafeOwnableInternal.sol",
							"file": "./SafeOwnableInternal.sol",
							"id": 245,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 289,
							"sourceUnit": 370,
							"src": "208:64:7",
							"symbolAliases": [
								{
									"foreign": {
										"id": 244,
										"name": "SafeOwnableInternal",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 369,
										"src": "217:19:7",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 247,
										"name": "ISafeOwnable",
										"nameLocations": [
											"403:12:7"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 42,
										"src": "403:12:7"
									},
									"id": 248,
									"nodeType": "InheritanceSpecifier",
									"src": "403:12:7"
								},
								{
									"baseName": {
										"id": 249,
										"name": "Ownable",
										"nameLocations": [
											"417:7:7"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 88,
										"src": "417:7:7"
									},
									"id": 250,
									"nodeType": "InheritanceSpecifier",
									"src": "417:7:7"
								},
								{
									"baseName": {
										"id": 251,
										"name": "SafeOwnableInternal",
										"nameLocations": [
											"426:19:7"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 369,
										"src": "426:19:7"
									},
									"id": 252,
									"nodeType": "InheritanceSpecifier",
									"src": "426:19:7"
								}
							],
							"canonicalName": "SafeOwnable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 246,
								"nodeType": "StructuredDocumentation",
								"src": "274:95:7",
								"text": " @title Ownership access control based on ERC173 with ownership transfer safety check"
							},
							"fullyImplemented": true,
							"id": 288,
							"linearizedBaseContracts": [
								288,
								369,
								88,
								212,
								42,
								10,
								432,
								51,
								21,
								442
							],
							"name": "SafeOwnable",
							"nameLocation": "388:11:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"baseFunctions": [
										37
									],
									"body": {
										"id": 261,
										"nodeType": "Block",
										"src": "562:39:7",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 258,
														"name": "_nomineeOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 325,
														"src": "579:13:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 259,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "579:15:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 257,
												"id": 260,
												"nodeType": "Return",
												"src": "572:22:7"
											}
										]
									},
									"documentation": {
										"id": 253,
										"nodeType": "StructuredDocumentation",
										"src": "452:43:7",
										"text": " @inheritdoc ISafeOwnable"
									},
									"functionSelector": "8ab5150a",
									"id": 262,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "nomineeOwner",
									"nameLocation": "509:12:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 254,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "521:2:7"
									},
									"returnParameters": {
										"id": 257,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 256,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 262,
												"src": "553:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 255,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "553:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "552:9:7"
									},
									"scope": 288,
									"src": "500:101:7",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										41
									],
									"body": {
										"id": 271,
										"nodeType": "Block",
										"src": "714:35:7",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 268,
														"name": "_acceptOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 341,
														"src": "724:16:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 269,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "724:18:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 270,
												"nodeType": "ExpressionStatement",
												"src": "724:18:7"
											}
										]
									},
									"documentation": {
										"id": 263,
										"nodeType": "StructuredDocumentation",
										"src": "607:43:7",
										"text": " @inheritdoc ISafeOwnable"
									},
									"functionSelector": "79ba5097",
									"id": 272,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 266,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 265,
												"name": "onlyNomineeOwner",
												"nameLocations": [
													"697:16:7"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 313,
												"src": "697:16:7"
											},
											"nodeType": "ModifierInvocation",
											"src": "697:16:7"
										}
									],
									"name": "acceptOwnership",
									"nameLocation": "664:15:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 264,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "679:2:7"
									},
									"returnParameters": {
										"id": 267,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "714:0:7"
									},
									"scope": 288,
									"src": "655:94:7",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										184,
										353
									],
									"body": {
										"id": 286,
										"nodeType": "Block",
										"src": "878:50:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 283,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 274,
															"src": "913:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 280,
															"name": "super",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967271,
															"src": "888:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_super$_SafeOwnable_$288_$",
																"typeString": "type(contract super SafeOwnable)"
															}
														},
														"id": 282,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "894:18:7",
														"memberName": "_transferOwnership",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 353,
														"src": "888:24:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 284,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "888:33:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 285,
												"nodeType": "ExpressionStatement",
												"src": "888:33:7"
											}
										]
									},
									"id": 287,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "764:18:7",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 278,
										"nodeType": "OverrideSpecifier",
										"overrides": [
											{
												"id": 276,
												"name": "OwnableInternal",
												"nameLocations": [
													"840:15:7"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 212,
												"src": "840:15:7"
											},
											{
												"id": 277,
												"name": "SafeOwnableInternal",
												"nameLocations": [
													"857:19:7"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 369,
												"src": "857:19:7"
											}
										],
										"src": "831:46:7"
									},
									"parameters": {
										"id": 275,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 274,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "800:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 287,
												"src": "792:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 273,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "792:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "782:31:7"
									},
									"returnParameters": {
										"id": 279,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "878:0:7"
									},
									"scope": 288,
									"src": "755:173:7",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 289,
							"src": "370:560:7",
							"usedErrors": [
								18,
								20,
								50
							],
							"usedEvents": [
								441
							]
						}
					],
					"src": "33:898:7"
				},
				"id": 7
			},
			"@solidstate/contracts/access/ownable/SafeOwnableInternal.sol": {
				"ast": {
					"absolutePath": "@solidstate/contracts/access/ownable/SafeOwnableInternal.sol",
					"exportedSymbols": {
						"ISafeOwnableInternal": [
							51
						],
						"OwnableInternal": [
							212
						],
						"SafeOwnableInternal": [
							369
						],
						"SafeOwnableStorage": [
							392
						]
					},
					"id": 370,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 290,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".18"
							],
							"nodeType": "PragmaDirective",
							"src": "33:24:8"
						},
						{
							"absolutePath": "@solidstate/contracts/access/ownable/ISafeOwnableInternal.sol",
							"file": "./ISafeOwnableInternal.sol",
							"id": 292,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 370,
							"sourceUnit": 52,
							"src": "59:66:8",
							"symbolAliases": [
								{
									"foreign": {
										"id": 291,
										"name": "ISafeOwnableInternal",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 51,
										"src": "68:20:8",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@solidstate/contracts/access/ownable/OwnableInternal.sol",
							"file": "./OwnableInternal.sol",
							"id": 294,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 370,
							"sourceUnit": 213,
							"src": "126:56:8",
							"symbolAliases": [
								{
									"foreign": {
										"id": 293,
										"name": "OwnableInternal",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 212,
										"src": "135:15:8",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@solidstate/contracts/access/ownable/SafeOwnableStorage.sol",
							"file": "./SafeOwnableStorage.sol",
							"id": 296,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 370,
							"sourceUnit": 393,
							"src": "183:62:8",
							"symbolAliases": [
								{
									"foreign": {
										"id": 295,
										"name": "SafeOwnableStorage",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 392,
										"src": "192:18:8",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 297,
										"name": "ISafeOwnableInternal",
										"nameLocations": [
											"288:20:8"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 51,
										"src": "288:20:8"
									},
									"id": 298,
									"nodeType": "InheritanceSpecifier",
									"src": "288:20:8"
								},
								{
									"baseName": {
										"id": 299,
										"name": "OwnableInternal",
										"nameLocations": [
											"310:15:8"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 212,
										"src": "310:15:8"
									},
									"id": 300,
									"nodeType": "InheritanceSpecifier",
									"src": "310:15:8"
								}
							],
							"canonicalName": "SafeOwnableInternal",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 369,
							"linearizedBaseContracts": [
								369,
								212,
								51,
								21,
								442
							],
							"name": "SafeOwnableInternal",
							"nameLocation": "265:19:8",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 312,
										"nodeType": "Block",
										"src": "360:112:8",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 306,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 302,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "374:3:8",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 303,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "378:6:8",
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "374:10:8",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 304,
															"name": "_nomineeOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 325,
															"src": "388:13:8",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 305,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "388:15:8",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "374:29:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 310,
												"nodeType": "IfStatement",
												"src": "370:84:8",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 307,
															"name": "SafeOwnable__NotNomineeOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 50,
															"src": "424:28:8",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$__$",
																"typeString": "function () pure"
															}
														},
														"id": 308,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "424:30:8",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 309,
													"nodeType": "RevertStatement",
													"src": "417:37:8"
												}
											},
											{
												"id": 311,
												"nodeType": "PlaceholderStatement",
												"src": "464:1:8"
											}
										]
									},
									"id": 313,
									"name": "onlyNomineeOwner",
									"nameLocation": "341:16:8",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 301,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "357:2:8"
									},
									"src": "332:140:8",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 324,
										"nodeType": "Block",
										"src": "641:64:8",
										"statements": [
											{
												"expression": {
													"expression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"expression": {
																"id": 319,
																"name": "SafeOwnableStorage",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 392,
																"src": "658:18:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_SafeOwnableStorage_$392_$",
																	"typeString": "type(library SafeOwnableStorage)"
																}
															},
															"id": 320,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "677:6:8",
															"memberName": "layout",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 391,
															"src": "658:25:8",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_Layout_$374_storage_ptr_$",
																"typeString": "function () pure returns (struct SafeOwnableStorage.Layout storage pointer)"
															}
														},
														"id": 321,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "658:27:8",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Layout_$374_storage_ptr",
															"typeString": "struct SafeOwnableStorage.Layout storage pointer"
														}
													},
													"id": 322,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "686:12:8",
													"memberName": "nomineeOwner",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 373,
													"src": "658:40:8",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 318,
												"id": 323,
												"nodeType": "Return",
												"src": "651:47:8"
											}
										]
									},
									"documentation": {
										"id": 314,
										"nodeType": "StructuredDocumentation",
										"src": "478:93:8",
										"text": " @notice get the nominated owner who has permission to call acceptOwnership"
									},
									"id": 325,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_nomineeOwner",
									"nameLocation": "585:13:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 315,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "598:2:8"
									},
									"returnParameters": {
										"id": 318,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 317,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 325,
												"src": "632:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 316,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "632:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "631:9:8"
									},
									"scope": 369,
									"src": "576:129:8",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 340,
										"nodeType": "Block",
										"src": "825:95:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 330,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "845:3:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 331,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "849:6:8",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "845:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 329,
														"name": "_setOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 211,
														"src": "835:9:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 332,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "835:21:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 333,
												"nodeType": "ExpressionStatement",
												"src": "835:21:8"
											},
											{
												"expression": {
													"id": 338,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "delete",
													"prefix": true,
													"src": "866:47:8",
													"subExpression": {
														"expression": {
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"expression": {
																	"id": 334,
																	"name": "SafeOwnableStorage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 392,
																	"src": "873:18:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_SafeOwnableStorage_$392_$",
																		"typeString": "type(library SafeOwnableStorage)"
																	}
																},
																"id": 335,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "892:6:8",
																"memberName": "layout",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 391,
																"src": "873:25:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_Layout_$374_storage_ptr_$",
																	"typeString": "function () pure returns (struct SafeOwnableStorage.Layout storage pointer)"
																}
															},
															"id": 336,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "873:27:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Layout_$374_storage_ptr",
																"typeString": "struct SafeOwnableStorage.Layout storage pointer"
															}
														},
														"id": 337,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "901:12:8",
														"memberName": "nomineeOwner",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 373,
														"src": "873:40:8",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 339,
												"nodeType": "ExpressionStatement",
												"src": "866:47:8"
											}
										]
									},
									"documentation": {
										"id": 326,
										"nodeType": "StructuredDocumentation",
										"src": "711:64:8",
										"text": " @notice accept transfer of contract ownership"
									},
									"id": 341,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_acceptOwnership",
									"nameLocation": "789:16:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 327,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "805:2:8"
									},
									"returnParameters": {
										"id": 328,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "825:0:8"
									},
									"scope": 369,
									"src": "780:140:8",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										184
									],
									"body": {
										"id": 352,
										"nodeType": "Block",
										"src": "1090:42:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 349,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 344,
															"src": "1117:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 348,
														"name": "_setNomineeOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 368,
														"src": "1100:16:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 350,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1100:25:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 351,
												"nodeType": "ExpressionStatement",
												"src": "1100:25:8"
											}
										]
									},
									"documentation": {
										"id": 342,
										"nodeType": "StructuredDocumentation",
										"src": "926:88:8",
										"text": " @notice grant permission to given address to claim contract ownership"
									},
									"id": 353,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "1028:18:8",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 346,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "1081:8:8"
									},
									"parameters": {
										"id": 345,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 344,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1055:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 353,
												"src": "1047:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 343,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1047:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1046:17:8"
									},
									"returnParameters": {
										"id": 347,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1090:0:8"
									},
									"scope": 369,
									"src": "1019:113:8",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 367,
										"nodeType": "Block",
										"src": "1247:67:8",
										"statements": [
											{
												"expression": {
													"id": 365,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"expression": {
																	"id": 359,
																	"name": "SafeOwnableStorage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 392,
																	"src": "1257:18:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_SafeOwnableStorage_$392_$",
																		"typeString": "type(library SafeOwnableStorage)"
																	}
																},
																"id": 361,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1276:6:8",
																"memberName": "layout",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 391,
																"src": "1257:25:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_Layout_$374_storage_ptr_$",
																	"typeString": "function () pure returns (struct SafeOwnableStorage.Layout storage pointer)"
																}
															},
															"id": 362,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1257:27:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Layout_$374_storage_ptr",
																"typeString": "struct SafeOwnableStorage.Layout storage pointer"
															}
														},
														"id": 363,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "1285:12:8",
														"memberName": "nomineeOwner",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 373,
														"src": "1257:40:8",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 364,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 356,
														"src": "1300:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1257:50:8",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 366,
												"nodeType": "ExpressionStatement",
												"src": "1257:50:8"
											}
										]
									},
									"documentation": {
										"id": 354,
										"nodeType": "StructuredDocumentation",
										"src": "1138:44:8",
										"text": " @notice set nominee owner"
									},
									"id": 368,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setNomineeOwner",
									"nameLocation": "1196:16:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 357,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 356,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1221:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 368,
												"src": "1213:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 355,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1213:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1212:17:8"
									},
									"returnParameters": {
										"id": 358,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1247:0:8"
									},
									"scope": 369,
									"src": "1187:127:8",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 370,
							"src": "247:1069:8",
							"usedErrors": [
								18,
								20,
								50
							],
							"usedEvents": [
								441
							]
						}
					],
					"src": "33:1284:8"
				},
				"id": 8
			},
			"@solidstate/contracts/access/ownable/SafeOwnableStorage.sol": {
				"ast": {
					"absolutePath": "@solidstate/contracts/access/ownable/SafeOwnableStorage.sol",
					"exportedSymbols": {
						"SafeOwnableStorage": [
							392
						]
					},
					"id": 393,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 371,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".18"
							],
							"nodeType": "PragmaDirective",
							"src": "33:24:9"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SafeOwnableStorage",
							"contractDependencies": [],
							"contractKind": "library",
							"fullyImplemented": true,
							"id": 392,
							"linearizedBaseContracts": [
								392
							],
							"name": "SafeOwnableStorage",
							"nameLocation": "67:18:9",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "SafeOwnableStorage.Layout",
									"id": 374,
									"members": [
										{
											"constant": false,
											"id": 373,
											"mutability": "mutable",
											"name": "nomineeOwner",
											"nameLocation": "124:12:9",
											"nodeType": "VariableDeclaration",
											"scope": 374,
											"src": "116:20:9",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 372,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "116:7:9",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Layout",
									"nameLocation": "99:6:9",
									"nodeType": "StructDefinition",
									"scope": 392,
									"src": "92:51:9",
									"visibility": "public"
								},
								{
									"constant": true,
									"id": 379,
									"mutability": "constant",
									"name": "STORAGE_SLOT",
									"nameLocation": "175:12:9",
									"nodeType": "VariableDeclaration",
									"scope": 392,
									"src": "149:102:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 375,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "149:7:9",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"arguments": [
											{
												"hexValue": "736f6c696473746174652e636f6e7472616374732e73746f726167652e536166654f776e61626c65",
												"id": 377,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "string",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "208:42:9",
												"typeDescriptions": {
													"typeIdentifier": "t_stringliteral_24aa1f7b31fd188a8d3ecfb06bc55c806040e59b03bd4396283442fce6617890",
													"typeString": "literal_string \"solidstate.contracts.storage.SafeOwnable\""
												},
												"value": "solidstate.contracts.storage.SafeOwnable"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_stringliteral_24aa1f7b31fd188a8d3ecfb06bc55c806040e59b03bd4396283442fce6617890",
													"typeString": "literal_string \"solidstate.contracts.storage.SafeOwnable\""
												}
											],
											"id": 376,
											"name": "keccak256",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 4294967288,
											"src": "198:9:9",
											"typeDescriptions": {
												"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
												"typeString": "function (bytes memory) pure returns (bytes32)"
											}
										},
										"id": 378,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "functionCall",
										"lValueRequested": false,
										"nameLocations": [],
										"names": [],
										"nodeType": "FunctionCall",
										"src": "198:53:9",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"visibility": "internal"
								},
								{
									"body": {
										"id": 390,
										"nodeType": "Block",
										"src": "317:100:9",
										"statements": [
											{
												"assignments": [
													386
												],
												"declarations": [
													{
														"constant": false,
														"id": 386,
														"mutability": "mutable",
														"name": "slot",
														"nameLocation": "335:4:9",
														"nodeType": "VariableDeclaration",
														"scope": 390,
														"src": "327:12:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 385,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "327:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 388,
												"initialValue": {
													"id": 387,
													"name": "STORAGE_SLOT",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 379,
													"src": "342:12:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "327:27:9"
											},
											{
												"AST": {
													"nativeSrc": "373:38:9",
													"nodeType": "YulBlock",
													"src": "373:38:9",
													"statements": [
														{
															"nativeSrc": "387:14:9",
															"nodeType": "YulAssignment",
															"src": "387:14:9",
															"value": {
																"name": "slot",
																"nativeSrc": "397:4:9",
																"nodeType": "YulIdentifier",
																"src": "397:4:9"
															},
															"variableNames": [
																{
																	"name": "l.slot",
																	"nativeSrc": "387:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "387:6:9"
																}
															]
														}
													]
												},
												"evmVersion": "shanghai",
												"externalReferences": [
													{
														"declaration": 383,
														"isOffset": false,
														"isSlot": true,
														"src": "387:6:9",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 386,
														"isOffset": false,
														"isSlot": false,
														"src": "397:4:9",
														"valueSize": 1
													}
												],
												"id": 389,
												"nodeType": "InlineAssembly",
												"src": "364:47:9"
											}
										]
									},
									"id": 391,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "layout",
									"nameLocation": "267:6:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 380,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "273:2:9"
									},
									"returnParameters": {
										"id": 384,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 383,
												"mutability": "mutable",
												"name": "l",
												"nameLocation": "314:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 391,
												"src": "299:16:9",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Layout_$374_storage_ptr",
													"typeString": "struct SafeOwnableStorage.Layout"
												},
												"typeName": {
													"id": 382,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 381,
														"name": "Layout",
														"nameLocations": [
															"299:6:9"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 374,
														"src": "299:6:9"
													},
													"referencedDeclaration": 374,
													"src": "299:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Layout_$374_storage_ptr",
														"typeString": "struct SafeOwnableStorage.Layout"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "298:18:9"
									},
									"scope": 392,
									"src": "258:159:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 393,
							"src": "59:360:9",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "33:387:9"
				},
				"id": 9
			},
			"@solidstate/contracts/interfaces/IERC165.sol": {
				"ast": {
					"absolutePath": "@solidstate/contracts/interfaces/IERC165.sol",
					"exportedSymbols": {
						"IERC165": [
							408
						],
						"IERC165Internal": [
							412
						]
					},
					"id": 409,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 394,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".18"
							],
							"nodeType": "PragmaDirective",
							"src": "33:24:10"
						},
						{
							"absolutePath": "@solidstate/contracts/interfaces/IERC165Internal.sol",
							"file": "./IERC165Internal.sol",
							"id": 396,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 409,
							"sourceUnit": 413,
							"src": "59:56:10",
							"symbolAliases": [
								{
									"foreign": {
										"id": 395,
										"name": "IERC165Internal",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 412,
										"src": "68:15:10",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 398,
										"name": "IERC165Internal",
										"nameLocations": [
											"247:15:10"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 412,
										"src": "247:15:10"
									},
									"id": 399,
									"nodeType": "InheritanceSpecifier",
									"src": "247:15:10"
								}
							],
							"canonicalName": "IERC165",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 397,
								"nodeType": "StructuredDocumentation",
								"src": "117:108:10",
								"text": " @title ERC165 interface registration interface\n @dev see https://eips.ethereum.org/EIPS/eip-165"
							},
							"fullyImplemented": false,
							"id": 408,
							"linearizedBaseContracts": [
								408,
								412
							],
							"name": "IERC165",
							"nameLocation": "236:7:10",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 400,
										"nodeType": "StructuredDocumentation",
										"src": "269:182:10",
										"text": " @notice query whether contract has registered support for given interface\n @param interfaceId interface id\n @return bool whether interface is supported"
									},
									"functionSelector": "01ffc9a7",
									"id": 407,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "465:17:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 403,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 402,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "490:11:10",
												"nodeType": "VariableDeclaration",
												"scope": 407,
												"src": "483:18:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 401,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "483:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "482:20:10"
									},
									"returnParameters": {
										"id": 406,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 405,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 407,
												"src": "526:4:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 404,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "526:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "525:6:10"
									},
									"scope": 408,
									"src": "456:76:10",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 409,
							"src": "226:308:10",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "33:502:10"
				},
				"id": 10
			},
			"@solidstate/contracts/interfaces/IERC165Internal.sol": {
				"ast": {
					"absolutePath": "@solidstate/contracts/interfaces/IERC165Internal.sol",
					"exportedSymbols": {
						"IERC165Internal": [
							412
						]
					},
					"id": 413,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 410,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".18"
							],
							"nodeType": "PragmaDirective",
							"src": "33:24:11"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC165Internal",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 411,
								"nodeType": "StructuredDocumentation",
								"src": "59:57:11",
								"text": " @title ERC165 interface registration interface"
							},
							"fullyImplemented": true,
							"id": 412,
							"linearizedBaseContracts": [
								412
							],
							"name": "IERC165Internal",
							"nameLocation": "127:15:11",
							"nodeType": "ContractDefinition",
							"nodes": [],
							"scope": 413,
							"src": "117:30:11",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "33:115:11"
				},
				"id": 11
			},
			"@solidstate/contracts/interfaces/IERC173.sol": {
				"ast": {
					"absolutePath": "@solidstate/contracts/interfaces/IERC173.sol",
					"exportedSymbols": {
						"IERC173": [
							432
						],
						"IERC173Internal": [
							442
						]
					},
					"id": 433,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 414,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".18"
							],
							"nodeType": "PragmaDirective",
							"src": "33:24:12"
						},
						{
							"absolutePath": "@solidstate/contracts/interfaces/IERC173Internal.sol",
							"file": "./IERC173Internal.sol",
							"id": 416,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 433,
							"sourceUnit": 443,
							"src": "59:56:12",
							"symbolAliases": [
								{
									"foreign": {
										"id": 415,
										"name": "IERC173Internal",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 442,
										"src": "68:15:12",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 418,
										"name": "IERC173Internal",
										"nameLocations": [
											"245:15:12"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 442,
										"src": "245:15:12"
									},
									"id": 419,
									"nodeType": "InheritanceSpecifier",
									"src": "245:15:12"
								}
							],
							"canonicalName": "IERC173",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 417,
								"nodeType": "StructuredDocumentation",
								"src": "117:106:12",
								"text": " @title Contract ownership standard interface\n @dev see https://eips.ethereum.org/EIPS/eip-173"
							},
							"fullyImplemented": false,
							"id": 432,
							"linearizedBaseContracts": [
								432,
								442
							],
							"name": "IERC173",
							"nameLocation": "234:7:12",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 420,
										"nodeType": "StructuredDocumentation",
										"src": "267:86:12",
										"text": " @notice get the ERC173 contract owner\n @return contract owner"
									},
									"functionSelector": "8da5cb5b",
									"id": 425,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "367:5:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 421,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "372:2:12"
									},
									"returnParameters": {
										"id": 424,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 423,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 425,
												"src": "398:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 422,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "398:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "397:9:12"
									},
									"scope": 432,
									"src": "358:49:12",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 426,
										"nodeType": "StructuredDocumentation",
										"src": "413:112:12",
										"text": " @notice transfer contract ownership to new account\n @param account address of new owner"
									},
									"functionSelector": "f2fde38b",
									"id": 431,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferOwnership",
									"nameLocation": "539:17:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 429,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 428,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "565:7:12",
												"nodeType": "VariableDeclaration",
												"scope": 431,
												"src": "557:15:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 427,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "557:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "556:17:12"
									},
									"returnParameters": {
										"id": 430,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "582:0:12"
									},
									"scope": 432,
									"src": "530:53:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 433,
							"src": "224:361:12",
							"usedErrors": [],
							"usedEvents": [
								441
							]
						}
					],
					"src": "33:553:12"
				},
				"id": 12
			},
			"@solidstate/contracts/interfaces/IERC173Internal.sol": {
				"ast": {
					"absolutePath": "@solidstate/contracts/interfaces/IERC173Internal.sol",
					"exportedSymbols": {
						"IERC173Internal": [
							442
						]
					},
					"id": 443,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 434,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".18"
							],
							"nodeType": "PragmaDirective",
							"src": "33:24:13"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC173Internal",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 435,
								"nodeType": "StructuredDocumentation",
								"src": "59:71:13",
								"text": " @title Partial ERC173 interface needed by internal functions"
							},
							"fullyImplemented": true,
							"id": 442,
							"linearizedBaseContracts": [
								442
							],
							"name": "IERC173Internal",
							"nameLocation": "141:15:13",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 441,
									"name": "OwnershipTransferred",
									"nameLocation": "169:20:13",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 440,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 437,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "215:13:13",
												"nodeType": "VariableDeclaration",
												"scope": 441,
												"src": "199:29:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 436,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "199:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 439,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "254:8:13",
												"nodeType": "VariableDeclaration",
												"scope": 441,
												"src": "238:24:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 438,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "238:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "189:79:13"
									},
									"src": "163:106:13"
								}
							],
							"scope": 443,
							"src": "131:140:13",
							"usedErrors": [],
							"usedEvents": [
								441
							]
						}
					],
					"src": "33:239:13"
				},
				"id": 13
			},
			"@solidstate/contracts/interfaces/IERC2535DiamondCut.sol": {
				"ast": {
					"absolutePath": "@solidstate/contracts/interfaces/IERC2535DiamondCut.sol",
					"exportedSymbols": {
						"IERC2535DiamondCut": [
							462
						],
						"IERC2535DiamondCutInternal": [
							489
						]
					},
					"id": 463,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 444,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".18"
							],
							"nodeType": "PragmaDirective",
							"src": "33:24:14"
						},
						{
							"absolutePath": "@solidstate/contracts/interfaces/IERC2535DiamondCutInternal.sol",
							"file": "./IERC2535DiamondCutInternal.sol",
							"id": 446,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 463,
							"sourceUnit": 490,
							"src": "59:78:14",
							"symbolAliases": [
								{
									"foreign": {
										"id": 445,
										"name": "IERC2535DiamondCutInternal",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 489,
										"src": "68:26:14",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 448,
										"name": "IERC2535DiamondCutInternal",
										"nameLocations": [
											"265:26:14"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 489,
										"src": "265:26:14"
									},
									"id": 449,
									"nodeType": "InheritanceSpecifier",
									"src": "265:26:14"
								}
							],
							"canonicalName": "IERC2535DiamondCut",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 447,
								"nodeType": "StructuredDocumentation",
								"src": "139:93:14",
								"text": " @title ERC2535 write interface\n @dev see https://eips.ethereum.org/EIPS/eip-2535"
							},
							"fullyImplemented": false,
							"id": 462,
							"linearizedBaseContracts": [
								462,
								489
							],
							"name": "IERC2535DiamondCut",
							"nameLocation": "243:18:14",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 450,
										"nodeType": "StructuredDocumentation",
										"src": "298:305:14",
										"text": " @notice update diamond facets and optionally execute arbitrary initialization function\n @param facetCuts array of structured Diamond facet update data\n @param target optional target of initialization delegatecall\n @param data optional initialization function call data"
									},
									"functionSelector": "1f931c1c",
									"id": 461,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "diamondCut",
									"nameLocation": "617:10:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 459,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 454,
												"mutability": "mutable",
												"name": "facetCuts",
												"nameLocation": "657:9:14",
												"nodeType": "VariableDeclaration",
												"scope": 461,
												"src": "637:29:14",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_struct$_FacetCut_$478_calldata_ptr_$dyn_calldata_ptr",
													"typeString": "struct IERC2535DiamondCutInternal.FacetCut[]"
												},
												"typeName": {
													"baseType": {
														"id": 452,
														"nodeType": "UserDefinedTypeName",
														"pathNode": {
															"id": 451,
															"name": "FacetCut",
															"nameLocations": [
																"637:8:14"
															],
															"nodeType": "IdentifierPath",
															"referencedDeclaration": 478,
															"src": "637:8:14"
														},
														"referencedDeclaration": 478,
														"src": "637:8:14",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_FacetCut_$478_storage_ptr",
															"typeString": "struct IERC2535DiamondCutInternal.FacetCut"
														}
													},
													"id": 453,
													"nodeType": "ArrayTypeName",
													"src": "637:10:14",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_FacetCut_$478_storage_$dyn_storage_ptr",
														"typeString": "struct IERC2535DiamondCutInternal.FacetCut[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 456,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "684:6:14",
												"nodeType": "VariableDeclaration",
												"scope": 461,
												"src": "676:14:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 455,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "676:7:14",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 458,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "715:4:14",
												"nodeType": "VariableDeclaration",
												"scope": 461,
												"src": "700:19:14",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 457,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "700:5:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "627:98:14"
									},
									"returnParameters": {
										"id": 460,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "734:0:14"
									},
									"scope": 462,
									"src": "608:127:14",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 463,
							"src": "233:504:14",
							"usedErrors": [],
							"usedEvents": [
								488
							]
						}
					],
					"src": "33:705:14"
				},
				"id": 14
			},
			"@solidstate/contracts/interfaces/IERC2535DiamondCutInternal.sol": {
				"ast": {
					"absolutePath": "@solidstate/contracts/interfaces/IERC2535DiamondCutInternal.sol",
					"exportedSymbols": {
						"IERC2535DiamondCutInternal": [
							489
						]
					},
					"id": 490,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 464,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".18"
							],
							"nodeType": "PragmaDirective",
							"src": "33:24:15"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC2535DiamondCutInternal",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 465,
								"nodeType": "StructuredDocumentation",
								"src": "59:116:15",
								"text": " @title ERC2535 write interface for internal functions\n @dev see https://eips.ethereum.org/EIPS/eip-2535"
							},
							"fullyImplemented": true,
							"id": 489,
							"linearizedBaseContracts": [
								489
							],
							"name": "IERC2535DiamondCutInternal",
							"nameLocation": "186:26:15",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "IERC2535DiamondCutInternal.FacetCutAction",
									"id": 469,
									"members": [
										{
											"id": 466,
											"name": "ADD",
											"nameLocation": "249:3:15",
											"nodeType": "EnumValue",
											"src": "249:3:15"
										},
										{
											"id": 467,
											"name": "REPLACE",
											"nameLocation": "262:7:15",
											"nodeType": "EnumValue",
											"src": "262:7:15"
										},
										{
											"id": 468,
											"name": "REMOVE",
											"nameLocation": "279:6:15",
											"nodeType": "EnumValue",
											"src": "279:6:15"
										}
									],
									"name": "FacetCutAction",
									"nameLocation": "224:14:15",
									"nodeType": "EnumDefinition",
									"src": "219:72:15"
								},
								{
									"canonicalName": "IERC2535DiamondCutInternal.FacetCut",
									"id": 478,
									"members": [
										{
											"constant": false,
											"id": 471,
											"mutability": "mutable",
											"name": "target",
											"nameLocation": "331:6:15",
											"nodeType": "VariableDeclaration",
											"scope": 478,
											"src": "323:14:15",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 470,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "323:7:15",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 474,
											"mutability": "mutable",
											"name": "action",
											"nameLocation": "362:6:15",
											"nodeType": "VariableDeclaration",
											"scope": 478,
											"src": "347:21:15",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_enum$_FacetCutAction_$469",
												"typeString": "enum IERC2535DiamondCutInternal.FacetCutAction"
											},
											"typeName": {
												"id": 473,
												"nodeType": "UserDefinedTypeName",
												"pathNode": {
													"id": 472,
													"name": "FacetCutAction",
													"nameLocations": [
														"347:14:15"
													],
													"nodeType": "IdentifierPath",
													"referencedDeclaration": 469,
													"src": "347:14:15"
												},
												"referencedDeclaration": 469,
												"src": "347:14:15",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_FacetCutAction_$469",
													"typeString": "enum IERC2535DiamondCutInternal.FacetCutAction"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 477,
											"mutability": "mutable",
											"name": "selectors",
											"nameLocation": "387:9:15",
											"nodeType": "VariableDeclaration",
											"scope": 478,
											"src": "378:18:15",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_array$_t_bytes4_$dyn_storage_ptr",
												"typeString": "bytes4[]"
											},
											"typeName": {
												"baseType": {
													"id": 475,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "378:6:15",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"id": 476,
												"nodeType": "ArrayTypeName",
												"src": "378:8:15",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_bytes4_$dyn_storage_ptr",
													"typeString": "bytes4[]"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "FacetCut",
									"nameLocation": "304:8:15",
									"nodeType": "StructDefinition",
									"scope": 489,
									"src": "297:106:15",
									"visibility": "public"
								},
								{
									"anonymous": false,
									"eventSelector": "8faa70878671ccd212d20771b795c50af8fd3ff6cf27f4bde57e5d4de0aeb673",
									"id": 488,
									"name": "DiamondCut",
									"nameLocation": "415:10:15",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 487,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 482,
												"indexed": false,
												"mutability": "mutable",
												"name": "facetCuts",
												"nameLocation": "437:9:15",
												"nodeType": "VariableDeclaration",
												"scope": 488,
												"src": "426:20:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_struct$_FacetCut_$478_memory_ptr_$dyn_memory_ptr",
													"typeString": "struct IERC2535DiamondCutInternal.FacetCut[]"
												},
												"typeName": {
													"baseType": {
														"id": 480,
														"nodeType": "UserDefinedTypeName",
														"pathNode": {
															"id": 479,
															"name": "FacetCut",
															"nameLocations": [
																"426:8:15"
															],
															"nodeType": "IdentifierPath",
															"referencedDeclaration": 478,
															"src": "426:8:15"
														},
														"referencedDeclaration": 478,
														"src": "426:8:15",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_FacetCut_$478_storage_ptr",
															"typeString": "struct IERC2535DiamondCutInternal.FacetCut"
														}
													},
													"id": 481,
													"nodeType": "ArrayTypeName",
													"src": "426:10:15",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_FacetCut_$478_storage_$dyn_storage_ptr",
														"typeString": "struct IERC2535DiamondCutInternal.FacetCut[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 484,
												"indexed": false,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "456:6:15",
												"nodeType": "VariableDeclaration",
												"scope": 488,
												"src": "448:14:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 483,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "448:7:15",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 486,
												"indexed": false,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "470:4:15",
												"nodeType": "VariableDeclaration",
												"scope": 488,
												"src": "464:10:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 485,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "464:5:15",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "425:50:15"
									},
									"src": "409:67:15"
								}
							],
							"scope": 490,
							"src": "176:302:15",
							"usedErrors": [],
							"usedEvents": [
								488
							]
						}
					],
					"src": "33:446:15"
				},
				"id": 15
			},
			"@solidstate/contracts/interfaces/IERC2535DiamondLoupe.sol": {
				"ast": {
					"absolutePath": "@solidstate/contracts/interfaces/IERC2535DiamondLoupe.sol",
					"exportedSymbols": {
						"IERC2535DiamondLoupe": [
							529
						],
						"IERC2535DiamondLoupeInternal": [
							539
						]
					},
					"id": 530,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 491,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".18"
							],
							"nodeType": "PragmaDirective",
							"src": "33:24:16"
						},
						{
							"absolutePath": "@solidstate/contracts/interfaces/IERC2535DiamondLoupeInternal.sol",
							"file": "./IERC2535DiamondLoupeInternal.sol",
							"id": 493,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 530,
							"sourceUnit": 540,
							"src": "59:82:16",
							"symbolAliases": [
								{
									"foreign": {
										"id": 492,
										"name": "IERC2535DiamondLoupeInternal",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 539,
										"src": "68:28:16",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 495,
										"name": "IERC2535DiamondLoupeInternal",
										"nameLocations": [
											"270:28:16"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 539,
										"src": "270:28:16"
									},
									"id": 496,
									"nodeType": "InheritanceSpecifier",
									"src": "270:28:16"
								}
							],
							"canonicalName": "IERC2535DiamondLoupe",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 494,
								"nodeType": "StructuredDocumentation",
								"src": "143:92:16",
								"text": " @title ERC2535 read interface\n @dev see https://eips.ethereum.org/EIPS/eip-2535"
							},
							"fullyImplemented": false,
							"id": 529,
							"linearizedBaseContracts": [
								529,
								539
							],
							"name": "IERC2535DiamondLoupe",
							"nameLocation": "246:20:16",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 497,
										"nodeType": "StructuredDocumentation",
										"src": "305:121:16",
										"text": " @notice get all facets and their selectors\n @return diamondFacets array of structured facet data"
									},
									"functionSelector": "7a0ed627",
									"id": 504,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "facets",
									"nameLocation": "440:6:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 498,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "446:2:16"
									},
									"returnParameters": {
										"id": 503,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 502,
												"mutability": "mutable",
												"name": "diamondFacets",
												"nameLocation": "487:13:16",
												"nodeType": "VariableDeclaration",
												"scope": 504,
												"src": "472:28:16",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_struct$_Facet_$538_memory_ptr_$dyn_memory_ptr",
													"typeString": "struct IERC2535DiamondLoupeInternal.Facet[]"
												},
												"typeName": {
													"baseType": {
														"id": 500,
														"nodeType": "UserDefinedTypeName",
														"pathNode": {
															"id": 499,
															"name": "Facet",
															"nameLocations": [
																"472:5:16"
															],
															"nodeType": "IdentifierPath",
															"referencedDeclaration": 538,
															"src": "472:5:16"
														},
														"referencedDeclaration": 538,
														"src": "472:5:16",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Facet_$538_storage_ptr",
															"typeString": "struct IERC2535DiamondLoupeInternal.Facet"
														}
													},
													"id": 501,
													"nodeType": "ArrayTypeName",
													"src": "472:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_Facet_$538_storage_$dyn_storage_ptr",
														"typeString": "struct IERC2535DiamondLoupeInternal.Facet[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "471:30:16"
									},
									"scope": 529,
									"src": "431:71:16",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 505,
										"nodeType": "StructuredDocumentation",
										"src": "508:167:16",
										"text": " @notice get all selectors for given facet address\n @param facet address of facet to query\n @return selectors array of function selectors"
									},
									"functionSelector": "adfca15e",
									"id": 513,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "facetFunctionSelectors",
									"nameLocation": "689:22:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 508,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 507,
												"mutability": "mutable",
												"name": "facet",
												"nameLocation": "729:5:16",
												"nodeType": "VariableDeclaration",
												"scope": 513,
												"src": "721:13:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 506,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "721:7:16",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "711:29:16"
									},
									"returnParameters": {
										"id": 512,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 511,
												"mutability": "mutable",
												"name": "selectors",
												"nameLocation": "780:9:16",
												"nodeType": "VariableDeclaration",
												"scope": 513,
												"src": "764:25:16",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_bytes4_$dyn_memory_ptr",
													"typeString": "bytes4[]"
												},
												"typeName": {
													"baseType": {
														"id": 509,
														"name": "bytes4",
														"nodeType": "ElementaryTypeName",
														"src": "764:6:16",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"id": 510,
													"nodeType": "ArrayTypeName",
													"src": "764:8:16",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_bytes4_$dyn_storage_ptr",
														"typeString": "bytes4[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "763:27:16"
									},
									"scope": 529,
									"src": "680:111:16",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 514,
										"nodeType": "StructuredDocumentation",
										"src": "797:120:16",
										"text": " @notice get addresses of all facets used by diamond\n @return addresses array of facet addresses"
									},
									"functionSelector": "52ef6b2c",
									"id": 520,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "facetAddresses",
									"nameLocation": "931:14:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 515,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "945:2:16"
									},
									"returnParameters": {
										"id": 519,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 518,
												"mutability": "mutable",
												"name": "addresses",
												"nameLocation": "1012:9:16",
												"nodeType": "VariableDeclaration",
												"scope": 520,
												"src": "995:26:16",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 516,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "995:7:16",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 517,
													"nodeType": "ArrayTypeName",
													"src": "995:9:16",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "994:28:16"
									},
									"scope": 529,
									"src": "922:101:16",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 521,
										"nodeType": "StructuredDocumentation",
										"src": "1029:199:16",
										"text": " @notice get the address of the facet associated with given selector\n @param selector function selector to query\n @return facet facet address (zero address if not found)"
									},
									"functionSelector": "cdffacc6",
									"id": 528,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "facetAddress",
									"nameLocation": "1242:12:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 524,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 523,
												"mutability": "mutable",
												"name": "selector",
												"nameLocation": "1271:8:16",
												"nodeType": "VariableDeclaration",
												"scope": 528,
												"src": "1264:15:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 522,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "1264:6:16",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1254:31:16"
									},
									"returnParameters": {
										"id": 527,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 526,
												"mutability": "mutable",
												"name": "facet",
												"nameLocation": "1317:5:16",
												"nodeType": "VariableDeclaration",
												"scope": 528,
												"src": "1309:13:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 525,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1309:7:16",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1308:15:16"
									},
									"scope": 529,
									"src": "1233:91:16",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 530,
							"src": "236:1090:16",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "33:1294:16"
				},
				"id": 16
			},
			"@solidstate/contracts/interfaces/IERC2535DiamondLoupeInternal.sol": {
				"ast": {
					"absolutePath": "@solidstate/contracts/interfaces/IERC2535DiamondLoupeInternal.sol",
					"exportedSymbols": {
						"IERC2535DiamondLoupeInternal": [
							539
						]
					},
					"id": 540,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 531,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".18"
							],
							"nodeType": "PragmaDirective",
							"src": "33:24:17"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC2535DiamondLoupeInternal",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 532,
								"nodeType": "StructuredDocumentation",
								"src": "59:115:17",
								"text": " @title ERC2535 read interface for internal functions\n @dev see https://eips.ethereum.org/EIPS/eip-2535"
							},
							"fullyImplemented": true,
							"id": 539,
							"linearizedBaseContracts": [
								539
							],
							"name": "IERC2535DiamondLoupeInternal",
							"nameLocation": "185:28:17",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "IERC2535DiamondLoupeInternal.Facet",
									"id": 538,
									"members": [
										{
											"constant": false,
											"id": 534,
											"mutability": "mutable",
											"name": "target",
											"nameLocation": "251:6:17",
											"nodeType": "VariableDeclaration",
											"scope": 538,
											"src": "243:14:17",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 533,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "243:7:17",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 537,
											"mutability": "mutable",
											"name": "selectors",
											"nameLocation": "276:9:17",
											"nodeType": "VariableDeclaration",
											"scope": 538,
											"src": "267:18:17",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_array$_t_bytes4_$dyn_storage_ptr",
												"typeString": "bytes4[]"
											},
											"typeName": {
												"baseType": {
													"id": 535,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "267:6:17",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"id": 536,
												"nodeType": "ArrayTypeName",
												"src": "267:8:17",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_bytes4_$dyn_storage_ptr",
													"typeString": "bytes4[]"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Facet",
									"nameLocation": "227:5:17",
									"nodeType": "StructDefinition",
									"scope": 539,
									"src": "220:72:17",
									"visibility": "public"
								}
							],
							"scope": 540,
							"src": "175:119:17",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "33:262:17"
				},
				"id": 17
			},
			"@solidstate/contracts/introspection/ERC165/base/ERC165Base.sol": {
				"ast": {
					"absolutePath": "@solidstate/contracts/introspection/ERC165/base/ERC165Base.sol",
					"exportedSymbols": {
						"ERC165Base": [
							568
						],
						"ERC165BaseInternal": [
							620
						],
						"ERC165BaseStorage": [
							645
						],
						"IERC165": [
							408
						],
						"IERC165Base": [
							656
						]
					},
					"id": 569,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 541,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".18"
							],
							"nodeType": "PragmaDirective",
							"src": "33:24:18"
						},
						{
							"absolutePath": "@solidstate/contracts/interfaces/IERC165.sol",
							"file": "../../../interfaces/IERC165.sol",
							"id": 543,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 569,
							"sourceUnit": 409,
							"src": "59:58:18",
							"symbolAliases": [
								{
									"foreign": {
										"id": 542,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 408,
										"src": "68:7:18",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@solidstate/contracts/introspection/ERC165/base/IERC165Base.sol",
							"file": "./IERC165Base.sol",
							"id": 545,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 569,
							"sourceUnit": 657,
							"src": "118:48:18",
							"symbolAliases": [
								{
									"foreign": {
										"id": 544,
										"name": "IERC165Base",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 656,
										"src": "127:11:18",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@solidstate/contracts/introspection/ERC165/base/ERC165BaseInternal.sol",
							"file": "./ERC165BaseInternal.sol",
							"id": 547,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 569,
							"sourceUnit": 621,
							"src": "167:62:18",
							"symbolAliases": [
								{
									"foreign": {
										"id": 546,
										"name": "ERC165BaseInternal",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 620,
										"src": "176:18:18",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@solidstate/contracts/introspection/ERC165/base/ERC165BaseStorage.sol",
							"file": "./ERC165BaseStorage.sol",
							"id": 549,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 569,
							"sourceUnit": 646,
							"src": "230:60:18",
							"symbolAliases": [
								{
									"foreign": {
										"id": 548,
										"name": "ERC165BaseStorage",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 645,
										"src": "239:17:18",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 551,
										"name": "IERC165Base",
										"nameLocations": [
											"364:11:18"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 656,
										"src": "364:11:18"
									},
									"id": 552,
									"nodeType": "InheritanceSpecifier",
									"src": "364:11:18"
								},
								{
									"baseName": {
										"id": 553,
										"name": "ERC165BaseInternal",
										"nameLocations": [
											"377:18:18"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 620,
										"src": "377:18:18"
									},
									"id": 554,
									"nodeType": "InheritanceSpecifier",
									"src": "377:18:18"
								}
							],
							"canonicalName": "ERC165Base",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 550,
								"nodeType": "StructuredDocumentation",
								"src": "292:39:18",
								"text": " @title ERC165 implementation"
							},
							"fullyImplemented": true,
							"id": 568,
							"linearizedBaseContracts": [
								568,
								620,
								656,
								665,
								408,
								412
							],
							"name": "ERC165Base",
							"nameLocation": "350:10:18",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"baseFunctions": [
										407
									],
									"body": {
										"id": 566,
										"nodeType": "Block",
										"src": "519:55:18",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 563,
															"name": "interfaceId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 557,
															"src": "555:11:18",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														],
														"id": 562,
														"name": "_supportsInterface",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 593,
														"src": "536:18:18",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes4_$returns$_t_bool_$",
															"typeString": "function (bytes4) view returns (bool)"
														}
													},
													"id": 564,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "536:31:18",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 561,
												"id": 565,
												"nodeType": "Return",
												"src": "529:38:18"
											}
										]
									},
									"documentation": {
										"id": 555,
										"nodeType": "StructuredDocumentation",
										"src": "402:38:18",
										"text": " @inheritdoc IERC165"
									},
									"functionSelector": "01ffc9a7",
									"id": 567,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "454:17:18",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 558,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 557,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "479:11:18",
												"nodeType": "VariableDeclaration",
												"scope": 567,
												"src": "472:18:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 556,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "472:6:18",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "471:20:18"
									},
									"returnParameters": {
										"id": 561,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 560,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 567,
												"src": "513:4:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 559,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "513:4:18",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "512:6:18"
									},
									"scope": 568,
									"src": "445:129:18",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 569,
							"src": "332:244:18",
							"usedErrors": [
								664
							],
							"usedEvents": []
						}
					],
					"src": "33:544:18"
				},
				"id": 18
			},
			"@solidstate/contracts/introspection/ERC165/base/ERC165BaseInternal.sol": {
				"ast": {
					"absolutePath": "@solidstate/contracts/introspection/ERC165/base/ERC165BaseInternal.sol",
					"exportedSymbols": {
						"ERC165BaseInternal": [
							620
						],
						"ERC165BaseStorage": [
							645
						],
						"IERC165BaseInternal": [
							665
						]
					},
					"id": 621,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 570,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".18"
							],
							"nodeType": "PragmaDirective",
							"src": "33:24:19"
						},
						{
							"absolutePath": "@solidstate/contracts/introspection/ERC165/base/IERC165BaseInternal.sol",
							"file": "./IERC165BaseInternal.sol",
							"id": 572,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 621,
							"sourceUnit": 666,
							"src": "59:64:19",
							"symbolAliases": [
								{
									"foreign": {
										"id": 571,
										"name": "IERC165BaseInternal",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 665,
										"src": "68:19:19",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@solidstate/contracts/introspection/ERC165/base/ERC165BaseStorage.sol",
							"file": "./ERC165BaseStorage.sol",
							"id": 574,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 621,
							"sourceUnit": 646,
							"src": "124:60:19",
							"symbolAliases": [
								{
									"foreign": {
										"id": 573,
										"name": "ERC165BaseStorage",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 645,
										"src": "133:17:19",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 576,
										"name": "IERC165BaseInternal",
										"nameLocations": [
											"266:19:19"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 665,
										"src": "266:19:19"
									},
									"id": 577,
									"nodeType": "InheritanceSpecifier",
									"src": "266:19:19"
								}
							],
							"canonicalName": "ERC165BaseInternal",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 575,
								"nodeType": "StructuredDocumentation",
								"src": "186:39:19",
								"text": " @title ERC165 implementation"
							},
							"fullyImplemented": true,
							"id": 620,
							"linearizedBaseContracts": [
								620,
								665,
								412
							],
							"name": "ERC165BaseInternal",
							"nameLocation": "244:18:19",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 592,
										"nodeType": "Block",
										"src": "612:83:19",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"expression": {
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"expression": {
																	"id": 585,
																	"name": "ERC165BaseStorage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 645,
																	"src": "629:17:19",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_ERC165BaseStorage_$645_$",
																		"typeString": "type(library ERC165BaseStorage)"
																	}
																},
																"id": 586,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "647:6:19",
																"memberName": "layout",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 644,
																"src": "629:24:19",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_Layout_$627_storage_ptr_$",
																	"typeString": "function () pure returns (struct ERC165BaseStorage.Layout storage pointer)"
																}
															},
															"id": 587,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "629:26:19",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Layout_$627_storage_ptr",
																"typeString": "struct ERC165BaseStorage.Layout storage pointer"
															}
														},
														"id": 588,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "656:19:19",
														"memberName": "supportedInterfaces",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 626,
														"src": "629:46:19",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_bytes4_$_t_bool_$",
															"typeString": "mapping(bytes4 => bool)"
														}
													},
													"id": 590,
													"indexExpression": {
														"id": 589,
														"name": "interfaceId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 580,
														"src": "676:11:19",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "629:59:19",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 584,
												"id": 591,
												"nodeType": "Return",
												"src": "622:66:19"
											}
										]
									},
									"documentation": {
										"id": 578,
										"nodeType": "StructuredDocumentation",
										"src": "292:216:19",
										"text": " @notice indicates whether an interface is already supported based on the interfaceId\n @param interfaceId id of interface to check\n @return bool indicating whether interface is supported"
									},
									"id": 593,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_supportsInterface",
									"nameLocation": "522:18:19",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 581,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 580,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "557:11:19",
												"nodeType": "VariableDeclaration",
												"scope": 593,
												"src": "550:18:19",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 579,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "550:6:19",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "540:34:19"
									},
									"returnParameters": {
										"id": 584,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 583,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 593,
												"src": "606:4:19",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 582,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "606:4:19",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "605:6:19"
									},
									"scope": 620,
									"src": "513:182:19",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 618,
										"nodeType": "Block",
										"src": "1011:165:19",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													},
													"id": 603,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 601,
														"name": "interfaceId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 596,
														"src": "1025:11:19",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30786666666666666666",
														"id": 602,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1040:10:19",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_4294967295_by_1",
															"typeString": "int_const 4294967295"
														},
														"value": "0xffffffff"
													},
													"src": "1025:25:19",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 607,
												"nodeType": "IfStatement",
												"src": "1021:70:19",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 604,
															"name": "ERC165Base__InvalidInterfaceId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 664,
															"src": "1059:30:19",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$__$",
																"typeString": "function () pure"
															}
														},
														"id": 605,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1059:32:19",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 606,
													"nodeType": "RevertStatement",
													"src": "1052:39:19"
												}
											},
											{
												"expression": {
													"id": 616,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"expression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"expression": {
																		"id": 608,
																		"name": "ERC165BaseStorage",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 645,
																		"src": "1101:17:19",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_ERC165BaseStorage_$645_$",
																			"typeString": "type(library ERC165BaseStorage)"
																		}
																	},
																	"id": 610,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1119:6:19",
																	"memberName": "layout",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 644,
																	"src": "1101:24:19",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_Layout_$627_storage_ptr_$",
																		"typeString": "function () pure returns (struct ERC165BaseStorage.Layout storage pointer)"
																	}
																},
																"id": 611,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1101:26:19",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Layout_$627_storage_ptr",
																	"typeString": "struct ERC165BaseStorage.Layout storage pointer"
																}
															},
															"id": 612,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1128:19:19",
															"memberName": "supportedInterfaces",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 626,
															"src": "1101:46:19",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_bytes4_$_t_bool_$",
																"typeString": "mapping(bytes4 => bool)"
															}
														},
														"id": 614,
														"indexExpression": {
															"id": 613,
															"name": "interfaceId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 596,
															"src": "1148:11:19",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1101:59:19",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 615,
														"name": "status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 598,
														"src": "1163:6:19",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "1101:68:19",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 617,
												"nodeType": "ExpressionStatement",
												"src": "1101:68:19"
											}
										]
									},
									"documentation": {
										"id": 594,
										"nodeType": "StructuredDocumentation",
										"src": "701:202:19",
										"text": " @notice sets status of interface support\n @param interfaceId id of interface to set status for\n @param status boolean indicating whether interface will be set as supported"
									},
									"id": 619,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setSupportsInterface",
									"nameLocation": "917:21:19",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 599,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 596,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "955:11:19",
												"nodeType": "VariableDeclaration",
												"scope": 619,
												"src": "948:18:19",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 595,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "948:6:19",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 598,
												"mutability": "mutable",
												"name": "status",
												"nameLocation": "981:6:19",
												"nodeType": "VariableDeclaration",
												"scope": 619,
												"src": "976:11:19",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 597,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "976:4:19",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "938:55:19"
									},
									"returnParameters": {
										"id": 600,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1011:0:19"
									},
									"scope": 620,
									"src": "908:268:19",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 621,
							"src": "226:952:19",
							"usedErrors": [
								664
							],
							"usedEvents": []
						}
					],
					"src": "33:1146:19"
				},
				"id": 19
			},
			"@solidstate/contracts/introspection/ERC165/base/ERC165BaseStorage.sol": {
				"ast": {
					"absolutePath": "@solidstate/contracts/introspection/ERC165/base/ERC165BaseStorage.sol",
					"exportedSymbols": {
						"ERC165BaseStorage": [
							645
						]
					},
					"id": 646,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 622,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".18"
							],
							"nodeType": "PragmaDirective",
							"src": "33:24:20"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "ERC165BaseStorage",
							"contractDependencies": [],
							"contractKind": "library",
							"fullyImplemented": true,
							"id": 645,
							"linearizedBaseContracts": [
								645
							],
							"name": "ERC165BaseStorage",
							"nameLocation": "67:17:20",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "ERC165BaseStorage.Layout",
									"id": 627,
									"members": [
										{
											"constant": false,
											"id": 626,
											"mutability": "mutable",
											"name": "supportedInterfaces",
											"nameLocation": "139:19:20",
											"nodeType": "VariableDeclaration",
											"scope": 627,
											"src": "115:43:20",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_bytes4_$_t_bool_$",
												"typeString": "mapping(bytes4 => bool)"
											},
											"typeName": {
												"id": 625,
												"keyName": "",
												"keyNameLocation": "-1:-1:-1",
												"keyType": {
													"id": 623,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "123:6:20",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"nodeType": "Mapping",
												"src": "115:23:20",
												"typeDescriptions": {
													"typeIdentifier": "t_mapping$_t_bytes4_$_t_bool_$",
													"typeString": "mapping(bytes4 => bool)"
												},
												"valueName": "",
												"valueNameLocation": "-1:-1:-1",
												"valueType": {
													"id": 624,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "133:4:20",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Layout",
									"nameLocation": "98:6:20",
									"nodeType": "StructDefinition",
									"scope": 645,
									"src": "91:74:20",
									"visibility": "public"
								},
								{
									"constant": true,
									"id": 632,
									"mutability": "constant",
									"name": "STORAGE_SLOT",
									"nameLocation": "197:12:20",
									"nodeType": "VariableDeclaration",
									"scope": 645,
									"src": "171:101:20",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 628,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "171:7:20",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"arguments": [
											{
												"hexValue": "736f6c696473746174652e636f6e7472616374732e73746f726167652e45524331363542617365",
												"id": 630,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "string",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "230:41:20",
												"typeDescriptions": {
													"typeIdentifier": "t_stringliteral_fc606c433378e3a7e0a6a531deac289b66caa1b4aa8554fd4ab2c6f1570f92d8",
													"typeString": "literal_string \"solidstate.contracts.storage.ERC165Base\""
												},
												"value": "solidstate.contracts.storage.ERC165Base"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_stringliteral_fc606c433378e3a7e0a6a531deac289b66caa1b4aa8554fd4ab2c6f1570f92d8",
													"typeString": "literal_string \"solidstate.contracts.storage.ERC165Base\""
												}
											],
											"id": 629,
											"name": "keccak256",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 4294967288,
											"src": "220:9:20",
											"typeDescriptions": {
												"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
												"typeString": "function (bytes memory) pure returns (bytes32)"
											}
										},
										"id": 631,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "functionCall",
										"lValueRequested": false,
										"nameLocations": [],
										"names": [],
										"nodeType": "FunctionCall",
										"src": "220:52:20",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"visibility": "internal"
								},
								{
									"body": {
										"id": 643,
										"nodeType": "Block",
										"src": "338:100:20",
										"statements": [
											{
												"assignments": [
													639
												],
												"declarations": [
													{
														"constant": false,
														"id": 639,
														"mutability": "mutable",
														"name": "slot",
														"nameLocation": "356:4:20",
														"nodeType": "VariableDeclaration",
														"scope": 643,
														"src": "348:12:20",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 638,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "348:7:20",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 641,
												"initialValue": {
													"id": 640,
													"name": "STORAGE_SLOT",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 632,
													"src": "363:12:20",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "348:27:20"
											},
											{
												"AST": {
													"nativeSrc": "394:38:20",
													"nodeType": "YulBlock",
													"src": "394:38:20",
													"statements": [
														{
															"nativeSrc": "408:14:20",
															"nodeType": "YulAssignment",
															"src": "408:14:20",
															"value": {
																"name": "slot",
																"nativeSrc": "418:4:20",
																"nodeType": "YulIdentifier",
																"src": "418:4:20"
															},
															"variableNames": [
																{
																	"name": "l.slot",
																	"nativeSrc": "408:6:20",
																	"nodeType": "YulIdentifier",
																	"src": "408:6:20"
																}
															]
														}
													]
												},
												"evmVersion": "shanghai",
												"externalReferences": [
													{
														"declaration": 636,
														"isOffset": false,
														"isSlot": true,
														"src": "408:6:20",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 639,
														"isOffset": false,
														"isSlot": false,
														"src": "418:4:20",
														"valueSize": 1
													}
												],
												"id": 642,
												"nodeType": "InlineAssembly",
												"src": "385:47:20"
											}
										]
									},
									"id": 644,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "layout",
									"nameLocation": "288:6:20",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 633,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "294:2:20"
									},
									"returnParameters": {
										"id": 637,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 636,
												"mutability": "mutable",
												"name": "l",
												"nameLocation": "335:1:20",
												"nodeType": "VariableDeclaration",
												"scope": 644,
												"src": "320:16:20",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Layout_$627_storage_ptr",
													"typeString": "struct ERC165BaseStorage.Layout"
												},
												"typeName": {
													"id": 635,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 634,
														"name": "Layout",
														"nameLocations": [
															"320:6:20"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 627,
														"src": "320:6:20"
													},
													"referencedDeclaration": 627,
													"src": "320:6:20",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Layout_$627_storage_ptr",
														"typeString": "struct ERC165BaseStorage.Layout"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "319:18:20"
									},
									"scope": 645,
									"src": "279:159:20",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 646,
							"src": "59:381:20",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "33:408:20"
				},
				"id": 20
			},
			"@solidstate/contracts/introspection/ERC165/base/IERC165Base.sol": {
				"ast": {
					"absolutePath": "@solidstate/contracts/introspection/ERC165/base/IERC165Base.sol",
					"exportedSymbols": {
						"IERC165": [
							408
						],
						"IERC165Base": [
							656
						],
						"IERC165BaseInternal": [
							665
						]
					},
					"id": 657,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 647,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".18"
							],
							"nodeType": "PragmaDirective",
							"src": "33:24:21"
						},
						{
							"absolutePath": "@solidstate/contracts/interfaces/IERC165.sol",
							"file": "../../../interfaces/IERC165.sol",
							"id": 649,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 657,
							"sourceUnit": 409,
							"src": "59:58:21",
							"symbolAliases": [
								{
									"foreign": {
										"id": 648,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 408,
										"src": "68:7:21",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@solidstate/contracts/introspection/ERC165/base/IERC165BaseInternal.sol",
							"file": "./IERC165BaseInternal.sol",
							"id": 651,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 657,
							"sourceUnit": 666,
							"src": "118:64:21",
							"symbolAliases": [
								{
									"foreign": {
										"id": 650,
										"name": "IERC165BaseInternal",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 665,
										"src": "127:19:21",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 652,
										"name": "IERC165",
										"nameLocations": [
											"209:7:21"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 408,
										"src": "209:7:21"
									},
									"id": 653,
									"nodeType": "InheritanceSpecifier",
									"src": "209:7:21"
								},
								{
									"baseName": {
										"id": 654,
										"name": "IERC165BaseInternal",
										"nameLocations": [
											"218:19:21"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 665,
										"src": "218:19:21"
									},
									"id": 655,
									"nodeType": "InheritanceSpecifier",
									"src": "218:19:21"
								}
							],
							"canonicalName": "IERC165Base",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 656,
							"linearizedBaseContracts": [
								656,
								665,
								408,
								412
							],
							"name": "IERC165Base",
							"nameLocation": "194:11:21",
							"nodeType": "ContractDefinition",
							"nodes": [],
							"scope": 657,
							"src": "184:56:21",
							"usedErrors": [
								664
							],
							"usedEvents": []
						}
					],
					"src": "33:208:21"
				},
				"id": 21
			},
			"@solidstate/contracts/introspection/ERC165/base/IERC165BaseInternal.sol": {
				"ast": {
					"absolutePath": "@solidstate/contracts/introspection/ERC165/base/IERC165BaseInternal.sol",
					"exportedSymbols": {
						"IERC165BaseInternal": [
							665
						],
						"IERC165Internal": [
							412
						]
					},
					"id": 666,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 658,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".18"
							],
							"nodeType": "PragmaDirective",
							"src": "33:24:22"
						},
						{
							"absolutePath": "@solidstate/contracts/interfaces/IERC165Internal.sol",
							"file": "../../../interfaces/IERC165Internal.sol",
							"id": 660,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 666,
							"sourceUnit": 413,
							"src": "59:74:22",
							"symbolAliases": [
								{
									"foreign": {
										"id": 659,
										"name": "IERC165Internal",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 412,
										"src": "68:15:22",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 661,
										"name": "IERC165Internal",
										"nameLocations": [
											"168:15:22"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 412,
										"src": "168:15:22"
									},
									"id": 662,
									"nodeType": "InheritanceSpecifier",
									"src": "168:15:22"
								}
							],
							"canonicalName": "IERC165BaseInternal",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": true,
							"id": 665,
							"linearizedBaseContracts": [
								665,
								412
							],
							"name": "IERC165BaseInternal",
							"nameLocation": "145:19:22",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"errorSelector": "b0a19dd5",
									"id": 664,
									"name": "ERC165Base__InvalidInterfaceId",
									"nameLocation": "196:30:22",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 663,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "226:2:22"
									},
									"src": "190:39:22"
								}
							],
							"scope": 666,
							"src": "135:96:22",
							"usedErrors": [
								664
							],
							"usedEvents": []
						}
					],
					"src": "33:199:22"
				},
				"id": 22
			},
			"@solidstate/contracts/proxy/IProxy.sol": {
				"ast": {
					"absolutePath": "@solidstate/contracts/proxy/IProxy.sol",
					"exportedSymbols": {
						"IProxy": [
							673
						]
					},
					"id": 674,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 667,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".18"
							],
							"nodeType": "PragmaDirective",
							"src": "33:24:23"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IProxy",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 673,
							"linearizedBaseContracts": [
								673
							],
							"name": "IProxy",
							"nameLocation": "69:6:23",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"errorSelector": "87c9fc34",
									"id": 669,
									"name": "Proxy__ImplementationIsNotContract",
									"nameLocation": "88:34:23",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 668,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "122:2:23"
									},
									"src": "82:43:23"
								},
								{
									"id": 672,
									"implemented": false,
									"kind": "fallback",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 670,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "139:2:23"
									},
									"returnParameters": {
										"id": 671,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "158:0:23"
									},
									"scope": 673,
									"src": "131:28:23",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 674,
							"src": "59:102:23",
							"usedErrors": [
								669
							],
							"usedEvents": []
						}
					],
					"src": "33:129:23"
				},
				"id": 23
			},
			"@solidstate/contracts/proxy/Proxy.sol": {
				"ast": {
					"absolutePath": "@solidstate/contracts/proxy/Proxy.sol",
					"exportedSymbols": {
						"AddressUtils": [
							2972
						],
						"IProxy": [
							673
						],
						"Proxy": [
							711
						]
					},
					"id": 712,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 675,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".18"
							],
							"nodeType": "PragmaDirective",
							"src": "33:24:24"
						},
						{
							"absolutePath": "@solidstate/contracts/utils/AddressUtils.sol",
							"file": "../utils/AddressUtils.sol",
							"id": 677,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 712,
							"sourceUnit": 2973,
							"src": "59:57:24",
							"symbolAliases": [
								{
									"foreign": {
										"id": 676,
										"name": "AddressUtils",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 2972,
										"src": "68:12:24",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@solidstate/contracts/proxy/IProxy.sol",
							"file": "./IProxy.sol",
							"id": 679,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 712,
							"sourceUnit": 674,
							"src": "117:38:24",
							"symbolAliases": [
								{
									"foreign": {
										"id": 678,
										"name": "IProxy",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 673,
										"src": "126:6:24",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 681,
										"name": "IProxy",
										"nameLocations": [
											"222:6:24"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 673,
										"src": "222:6:24"
									},
									"id": 682,
									"nodeType": "InheritanceSpecifier",
									"src": "222:6:24"
								}
							],
							"canonicalName": "Proxy",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 680,
								"nodeType": "StructuredDocumentation",
								"src": "157:37:24",
								"text": " @title Base proxy contract"
							},
							"fullyImplemented": false,
							"id": 711,
							"linearizedBaseContracts": [
								711,
								673
							],
							"name": "Proxy",
							"nameLocation": "213:5:24",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 685,
									"libraryName": {
										"id": 683,
										"name": "AddressUtils",
										"nameLocations": [
											"241:12:24"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2972,
										"src": "241:12:24"
									},
									"nodeType": "UsingForDirective",
									"src": "235:31:24",
									"typeName": {
										"id": 684,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "258:7:24",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									}
								},
								{
									"baseFunctions": [
										672
									],
									"body": {
										"id": 703,
										"nodeType": "Block",
										"src": "573:673:24",
										"statements": [
											{
												"assignments": [
													690
												],
												"declarations": [
													{
														"constant": false,
														"id": 690,
														"mutability": "mutable",
														"name": "implementation",
														"nameLocation": "591:14:24",
														"nodeType": "VariableDeclaration",
														"scope": 703,
														"src": "583:22:24",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 689,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "583:7:24",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 693,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 691,
														"name": "_getImplementation",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 710,
														"src": "608:18:24",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$_t_address_$",
															"typeString": "function () returns (address)"
														}
													},
													"id": 692,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "608:20:24",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "583:45:24"
											},
											{
												"condition": {
													"id": 697,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "643:28:24",
													"subExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"expression": {
																"id": 694,
																"name": "implementation",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 690,
																"src": "644:14:24",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 695,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "659:10:24",
															"memberName": "isContract",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2785,
															"src": "644:25:24",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$attached_to$_t_address_$",
																"typeString": "function (address) view returns (bool)"
															}
														},
														"id": 696,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "644:27:24",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 701,
												"nodeType": "IfStatement",
												"src": "639:89:24",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 698,
															"name": "Proxy__ImplementationIsNotContract",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 669,
															"src": "692:34:24",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$__$",
																"typeString": "function () pure"
															}
														},
														"id": 699,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "692:36:24",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 700,
													"nodeType": "RevertStatement",
													"src": "685:43:24"
												}
											},
											{
												"AST": {
													"nativeSrc": "748:492:24",
													"nodeType": "YulBlock",
													"src": "748:492:24",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "775:1:24",
																		"nodeType": "YulLiteral",
																		"src": "775:1:24",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "778:1:24",
																		"nodeType": "YulLiteral",
																		"src": "778:1:24",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [],
																		"functionName": {
																			"name": "calldatasize",
																			"nativeSrc": "781:12:24",
																			"nodeType": "YulIdentifier",
																			"src": "781:12:24"
																		},
																		"nativeSrc": "781:14:24",
																		"nodeType": "YulFunctionCall",
																		"src": "781:14:24"
																	}
																],
																"functionName": {
																	"name": "calldatacopy",
																	"nativeSrc": "762:12:24",
																	"nodeType": "YulIdentifier",
																	"src": "762:12:24"
																},
																"nativeSrc": "762:34:24",
																"nodeType": "YulFunctionCall",
																"src": "762:34:24"
															},
															"nativeSrc": "762:34:24",
															"nodeType": "YulExpressionStatement",
															"src": "762:34:24"
														},
														{
															"nativeSrc": "809:184:24",
															"nodeType": "YulVariableDeclaration",
															"src": "809:184:24",
															"value": {
																"arguments": [
																	{
																		"arguments": [],
																		"functionName": {
																			"name": "gas",
																			"nativeSrc": "853:3:24",
																			"nodeType": "YulIdentifier",
																			"src": "853:3:24"
																		},
																		"nativeSrc": "853:5:24",
																		"nodeType": "YulFunctionCall",
																		"src": "853:5:24"
																	},
																	{
																		"name": "implementation",
																		"nativeSrc": "876:14:24",
																		"nodeType": "YulIdentifier",
																		"src": "876:14:24"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "908:1:24",
																		"nodeType": "YulLiteral",
																		"src": "908:1:24",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [],
																		"functionName": {
																			"name": "calldatasize",
																			"nativeSrc": "927:12:24",
																			"nodeType": "YulIdentifier",
																			"src": "927:12:24"
																		},
																		"nativeSrc": "927:14:24",
																		"nodeType": "YulFunctionCall",
																		"src": "927:14:24"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "959:1:24",
																		"nodeType": "YulLiteral",
																		"src": "959:1:24",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "978:1:24",
																		"nodeType": "YulLiteral",
																		"src": "978:1:24",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "delegatecall",
																	"nativeSrc": "823:12:24",
																	"nodeType": "YulIdentifier",
																	"src": "823:12:24"
																},
																"nativeSrc": "823:170:24",
																"nodeType": "YulFunctionCall",
																"src": "823:170:24"
															},
															"variables": [
																{
																	"name": "result",
																	"nativeSrc": "813:6:24",
																	"nodeType": "YulTypedName",
																	"src": "813:6:24",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1021:1:24",
																		"nodeType": "YulLiteral",
																		"src": "1021:1:24",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1024:1:24",
																		"nodeType": "YulLiteral",
																		"src": "1024:1:24",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [],
																		"functionName": {
																			"name": "returndatasize",
																			"nativeSrc": "1027:14:24",
																			"nodeType": "YulIdentifier",
																			"src": "1027:14:24"
																		},
																		"nativeSrc": "1027:16:24",
																		"nodeType": "YulFunctionCall",
																		"src": "1027:16:24"
																	}
																],
																"functionName": {
																	"name": "returndatacopy",
																	"nativeSrc": "1006:14:24",
																	"nodeType": "YulIdentifier",
																	"src": "1006:14:24"
																},
																"nativeSrc": "1006:38:24",
																"nodeType": "YulFunctionCall",
																"src": "1006:38:24"
															},
															"nativeSrc": "1006:38:24",
															"nodeType": "YulExpressionStatement",
															"src": "1006:38:24"
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "1091:59:24",
																		"nodeType": "YulBlock",
																		"src": "1091:59:24",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "1116:1:24",
																							"nodeType": "YulLiteral",
																							"src": "1116:1:24",
																							"type": "",
																							"value": "0"
																						},
																						{
																							"arguments": [],
																							"functionName": {
																								"name": "returndatasize",
																								"nativeSrc": "1119:14:24",
																								"nodeType": "YulIdentifier",
																								"src": "1119:14:24"
																							},
																							"nativeSrc": "1119:16:24",
																							"nodeType": "YulFunctionCall",
																							"src": "1119:16:24"
																						}
																					],
																					"functionName": {
																						"name": "revert",
																						"nativeSrc": "1109:6:24",
																						"nodeType": "YulIdentifier",
																						"src": "1109:6:24"
																					},
																					"nativeSrc": "1109:27:24",
																					"nodeType": "YulFunctionCall",
																					"src": "1109:27:24"
																				},
																				"nativeSrc": "1109:27:24",
																				"nodeType": "YulExpressionStatement",
																				"src": "1109:27:24"
																			}
																		]
																	},
																	"nativeSrc": "1084:66:24",
																	"nodeType": "YulCase",
																	"src": "1084:66:24",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1089:1:24",
																		"nodeType": "YulLiteral",
																		"src": "1089:1:24",
																		"type": "",
																		"value": "0"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "1171:59:24",
																		"nodeType": "YulBlock",
																		"src": "1171:59:24",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "1196:1:24",
																							"nodeType": "YulLiteral",
																							"src": "1196:1:24",
																							"type": "",
																							"value": "0"
																						},
																						{
																							"arguments": [],
																							"functionName": {
																								"name": "returndatasize",
																								"nativeSrc": "1199:14:24",
																								"nodeType": "YulIdentifier",
																								"src": "1199:14:24"
																							},
																							"nativeSrc": "1199:16:24",
																							"nodeType": "YulFunctionCall",
																							"src": "1199:16:24"
																						}
																					],
																					"functionName": {
																						"name": "return",
																						"nativeSrc": "1189:6:24",
																						"nodeType": "YulIdentifier",
																						"src": "1189:6:24"
																					},
																					"nativeSrc": "1189:27:24",
																					"nodeType": "YulFunctionCall",
																					"src": "1189:27:24"
																				},
																				"nativeSrc": "1189:27:24",
																				"nodeType": "YulExpressionStatement",
																				"src": "1189:27:24"
																			}
																		]
																	},
																	"nativeSrc": "1163:67:24",
																	"nodeType": "YulCase",
																	"src": "1163:67:24",
																	"value": "default"
																}
															],
															"expression": {
																"name": "result",
																"nativeSrc": "1065:6:24",
																"nodeType": "YulIdentifier",
																"src": "1065:6:24"
															},
															"nativeSrc": "1058:172:24",
															"nodeType": "YulSwitch",
															"src": "1058:172:24"
														}
													]
												},
												"evmVersion": "shanghai",
												"externalReferences": [
													{
														"declaration": 690,
														"isOffset": false,
														"isSlot": false,
														"src": "876:14:24",
														"valueSize": 1
													}
												],
												"id": 702,
												"nodeType": "InlineAssembly",
												"src": "739:501:24"
											}
										]
									},
									"documentation": {
										"id": 686,
										"nodeType": "StructuredDocumentation",
										"src": "272:260:24",
										"text": " @notice delegate all calls to implementation contract\n @dev reverts if implementation address contains no code, for compatibility with metamorphic contracts\n @dev memory location in use by assembly may be unsafe in other contexts"
									},
									"id": 704,
									"implemented": true,
									"kind": "fallback",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 687,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "545:2:24"
									},
									"returnParameters": {
										"id": 688,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "573:0:24"
									},
									"scope": 711,
									"src": "537:709:24",
									"stateMutability": "payable",
									"virtual": true,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 705,
										"nodeType": "StructuredDocumentation",
										"src": "1252:97:24",
										"text": " @notice get logic implementation address\n @return implementation address"
									},
									"id": 710,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "_getImplementation",
									"nameLocation": "1363:18:24",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 706,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1381:2:24"
									},
									"returnParameters": {
										"id": 709,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 708,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 710,
												"src": "1410:7:24",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 707,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1410:7:24",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1409:9:24"
									},
									"scope": 711,
									"src": "1354:65:24",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 712,
							"src": "195:1226:24",
							"usedErrors": [
								669
							],
							"usedEvents": []
						}
					],
					"src": "33:1389:24"
				},
				"id": 24
			},
			"@solidstate/contracts/proxy/diamond/ISolidStateDiamond.sol": {
				"ast": {
					"absolutePath": "@solidstate/contracts/proxy/diamond/ISolidStateDiamond.sol",
					"exportedSymbols": {
						"IDiamondBase": [
							1118
						],
						"IDiamondFallback": [
							1236
						],
						"IDiamondReadable": [
							1835
						],
						"IDiamondWritable": [
							2714
						],
						"IERC165": [
							408
						],
						"ISafeOwnable": [
							42
						],
						"ISolidStateDiamond": [
							741
						]
					},
					"id": 742,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 713,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".18"
							],
							"nodeType": "PragmaDirective",
							"src": "33:24:25"
						},
						{
							"absolutePath": "@solidstate/contracts/access/ownable/ISafeOwnable.sol",
							"file": "../../access/ownable/ISafeOwnable.sol",
							"id": 715,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 742,
							"sourceUnit": 43,
							"src": "59:69:25",
							"symbolAliases": [
								{
									"foreign": {
										"id": 714,
										"name": "ISafeOwnable",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 42,
										"src": "68:12:25",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@solidstate/contracts/interfaces/IERC165.sol",
							"file": "../../interfaces/IERC165.sol",
							"id": 717,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 742,
							"sourceUnit": 409,
							"src": "129:55:25",
							"symbolAliases": [
								{
									"foreign": {
										"id": 716,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 408,
										"src": "138:7:25",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@solidstate/contracts/proxy/diamond/base/IDiamondBase.sol",
							"file": "./base/IDiamondBase.sol",
							"id": 719,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 742,
							"sourceUnit": 1119,
							"src": "185:55:25",
							"symbolAliases": [
								{
									"foreign": {
										"id": 718,
										"name": "IDiamondBase",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1118,
										"src": "194:12:25",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@solidstate/contracts/proxy/diamond/fallback/IDiamondFallback.sol",
							"file": "./fallback/IDiamondFallback.sol",
							"id": 721,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 742,
							"sourceUnit": 1237,
							"src": "241:67:25",
							"symbolAliases": [
								{
									"foreign": {
										"id": 720,
										"name": "IDiamondFallback",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1236,
										"src": "250:16:25",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@solidstate/contracts/proxy/diamond/readable/IDiamondReadable.sol",
							"file": "./readable/IDiamondReadable.sol",
							"id": 723,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 742,
							"sourceUnit": 1836,
							"src": "309:67:25",
							"symbolAliases": [
								{
									"foreign": {
										"id": 722,
										"name": "IDiamondReadable",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1835,
										"src": "318:16:25",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@solidstate/contracts/proxy/diamond/writable/IDiamondWritable.sol",
							"file": "./writable/IDiamondWritable.sol",
							"id": 725,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 742,
							"sourceUnit": 2715,
							"src": "377:67:25",
							"symbolAliases": [
								{
									"foreign": {
										"id": 724,
										"name": "IDiamondWritable",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 2714,
										"src": "386:16:25",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 726,
										"name": "IDiamondBase",
										"nameLocations": [
											"482:12:25"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1118,
										"src": "482:12:25"
									},
									"id": 727,
									"nodeType": "InheritanceSpecifier",
									"src": "482:12:25"
								},
								{
									"baseName": {
										"id": 728,
										"name": "IDiamondFallback",
										"nameLocations": [
											"500:16:25"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1236,
										"src": "500:16:25"
									},
									"id": 729,
									"nodeType": "InheritanceSpecifier",
									"src": "500:16:25"
								},
								{
									"baseName": {
										"id": 730,
										"name": "IDiamondReadable",
										"nameLocations": [
											"522:16:25"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1835,
										"src": "522:16:25"
									},
									"id": 731,
									"nodeType": "InheritanceSpecifier",
									"src": "522:16:25"
								},
								{
									"baseName": {
										"id": 732,
										"name": "IDiamondWritable",
										"nameLocations": [
											"544:16:25"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2714,
										"src": "544:16:25"
									},
									"id": 733,
									"nodeType": "InheritanceSpecifier",
									"src": "544:16:25"
								},
								{
									"baseName": {
										"id": 734,
										"name": "ISafeOwnable",
										"nameLocations": [
											"566:12:25"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 42,
										"src": "566:12:25"
									},
									"id": 735,
									"nodeType": "InheritanceSpecifier",
									"src": "566:12:25"
								},
								{
									"baseName": {
										"id": 736,
										"name": "IERC165",
										"nameLocations": [
											"584:7:25"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 408,
										"src": "584:7:25"
									},
									"id": 737,
									"nodeType": "InheritanceSpecifier",
									"src": "584:7:25"
								}
							],
							"canonicalName": "ISolidStateDiamond",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 741,
							"linearizedBaseContracts": [
								741,
								408,
								412,
								42,
								10,
								432,
								51,
								21,
								442,
								2714,
								2737,
								462,
								489,
								1835,
								1843,
								529,
								539,
								1236,
								1118,
								673
							],
							"name": "ISolidStateDiamond",
							"nameLocation": "456:18:25",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"id": 740,
									"implemented": false,
									"kind": "receive",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 738,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "605:2:25"
									},
									"returnParameters": {
										"id": 739,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "624:0:25"
									},
									"scope": 741,
									"src": "598:27:25",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 742,
							"src": "446:181:25",
							"usedErrors": [
								18,
								20,
								50,
								669,
								2722,
								2724,
								2726,
								2728,
								2730,
								2732,
								2734,
								2736
							],
							"usedEvents": [
								441,
								488
							]
						}
					],
					"src": "33:595:25"
				},
				"id": 25
			},
			"@solidstate/contracts/proxy/diamond/SolidStateDiamond.sol": {
				"ast": {
					"absolutePath": "@solidstate/contracts/proxy/diamond/SolidStateDiamond.sol",
					"exportedSymbols": {
						"DiamondBase": [
							1077
						],
						"DiamondFallback": [
							1217
						],
						"DiamondReadable": [
							1310
						],
						"DiamondWritable": [
							1882
						],
						"ERC165Base": [
							568
						],
						"ERC165BaseStorage": [
							645
						],
						"IDiamondFallback": [
							1236
						],
						"IERC165": [
							408
						],
						"IERC173": [
							432
						],
						"IERC2535DiamondCut": [
							462
						],
						"IERC2535DiamondLoupe": [
							529
						],
						"IOwnable": [
							10
						],
						"ISafeOwnable": [
							42
						],
						"ISolidStateDiamond": [
							741
						],
						"Ownable": [
							88
						],
						"OwnableInternal": [
							212
						],
						"SafeOwnable": [
							288
						],
						"SolidStateDiamond": [
							1029
						]
					},
					"id": 1030,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 743,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".18"
							],
							"nodeType": "PragmaDirective",
							"src": "33:24:26"
						},
						{
							"absolutePath": "@solidstate/contracts/access/ownable/Ownable.sol",
							"file": "../../access/ownable/Ownable.sol",
							"id": 747,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1030,
							"sourceUnit": 89,
							"src": "59:86:26",
							"symbolAliases": [
								{
									"foreign": {
										"id": 744,
										"name": "IOwnable",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 10,
										"src": "68:8:26",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								},
								{
									"foreign": {
										"id": 745,
										"name": "Ownable",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 88,
										"src": "78:7:26",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								},
								{
									"foreign": {
										"id": 746,
										"name": "OwnableInternal",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 212,
										"src": "87:15:26",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@solidstate/contracts/access/ownable/SafeOwnable.sol",
							"file": "../../access/ownable/SafeOwnable.sol",
							"id": 750,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1030,
							"sourceUnit": 289,
							"src": "146:81:26",
							"symbolAliases": [
								{
									"foreign": {
										"id": 748,
										"name": "ISafeOwnable",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 42,
										"src": "155:12:26",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								},
								{
									"foreign": {
										"id": 749,
										"name": "SafeOwnable",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 288,
										"src": "169:11:26",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@solidstate/contracts/interfaces/IERC165.sol",
							"file": "../../interfaces/IERC165.sol",
							"id": 752,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1030,
							"sourceUnit": 409,
							"src": "228:55:26",
							"symbolAliases": [
								{
									"foreign": {
										"id": 751,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 408,
										"src": "237:7:26",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@solidstate/contracts/interfaces/IERC173.sol",
							"file": "../../interfaces/IERC173.sol",
							"id": 754,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1030,
							"sourceUnit": 433,
							"src": "284:55:26",
							"symbolAliases": [
								{
									"foreign": {
										"id": 753,
										"name": "IERC173",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 432,
										"src": "293:7:26",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@solidstate/contracts/interfaces/IERC2535DiamondCut.sol",
							"file": "../../interfaces/IERC2535DiamondCut.sol",
							"id": 756,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1030,
							"sourceUnit": 463,
							"src": "340:77:26",
							"symbolAliases": [
								{
									"foreign": {
										"id": 755,
										"name": "IERC2535DiamondCut",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 462,
										"src": "349:18:26",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@solidstate/contracts/interfaces/IERC2535DiamondLoupe.sol",
							"file": "../../interfaces/IERC2535DiamondLoupe.sol",
							"id": 758,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1030,
							"sourceUnit": 530,
							"src": "418:81:26",
							"symbolAliases": [
								{
									"foreign": {
										"id": 757,
										"name": "IERC2535DiamondLoupe",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 529,
										"src": "427:20:26",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@solidstate/contracts/introspection/ERC165/base/ERC165Base.sol",
							"file": "../../introspection/ERC165/base/ERC165Base.sol",
							"id": 761,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1030,
							"sourceUnit": 569,
							"src": "500:95:26",
							"symbolAliases": [
								{
									"foreign": {
										"id": 759,
										"name": "ERC165Base",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 568,
										"src": "509:10:26",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								},
								{
									"foreign": {
										"id": 760,
										"name": "ERC165BaseStorage",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 645,
										"src": "521:17:26",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@solidstate/contracts/proxy/diamond/base/DiamondBase.sol",
							"file": "./base/DiamondBase.sol",
							"id": 763,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1030,
							"sourceUnit": 1078,
							"src": "596:53:26",
							"symbolAliases": [
								{
									"foreign": {
										"id": 762,
										"name": "DiamondBase",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1077,
										"src": "605:11:26",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@solidstate/contracts/proxy/diamond/fallback/DiamondFallback.sol",
							"file": "./fallback/DiamondFallback.sol",
							"id": 766,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1030,
							"sourceUnit": 1218,
							"src": "650:83:26",
							"symbolAliases": [
								{
									"foreign": {
										"id": 764,
										"name": "DiamondFallback",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1217,
										"src": "659:15:26",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								},
								{
									"foreign": {
										"id": 765,
										"name": "IDiamondFallback",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1236,
										"src": "676:16:26",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@solidstate/contracts/proxy/diamond/readable/DiamondReadable.sol",
							"file": "./readable/DiamondReadable.sol",
							"id": 768,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1030,
							"sourceUnit": 1311,
							"src": "734:65:26",
							"symbolAliases": [
								{
									"foreign": {
										"id": 767,
										"name": "DiamondReadable",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1310,
										"src": "743:15:26",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@solidstate/contracts/proxy/diamond/writable/DiamondWritable.sol",
							"file": "./writable/DiamondWritable.sol",
							"id": 770,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1030,
							"sourceUnit": 1883,
							"src": "800:65:26",
							"symbolAliases": [
								{
									"foreign": {
										"id": 769,
										"name": "DiamondWritable",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1882,
										"src": "809:15:26",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@solidstate/contracts/proxy/diamond/ISolidStateDiamond.sol",
							"file": "./ISolidStateDiamond.sol",
							"id": 772,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1030,
							"sourceUnit": 742,
							"src": "866:62:26",
							"symbolAliases": [
								{
									"foreign": {
										"id": 771,
										"name": "ISolidStateDiamond",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 741,
										"src": "875:18:26",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 774,
										"name": "ISolidStateDiamond",
										"nameLocations": [
											"1043:18:26"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 741,
										"src": "1043:18:26"
									},
									"id": 775,
									"nodeType": "InheritanceSpecifier",
									"src": "1043:18:26"
								},
								{
									"baseName": {
										"id": 776,
										"name": "DiamondBase",
										"nameLocations": [
											"1067:11:26"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1077,
										"src": "1067:11:26"
									},
									"id": 777,
									"nodeType": "InheritanceSpecifier",
									"src": "1067:11:26"
								},
								{
									"baseName": {
										"id": 778,
										"name": "DiamondFallback",
										"nameLocations": [
											"1084:15:26"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1217,
										"src": "1084:15:26"
									},
									"id": 779,
									"nodeType": "InheritanceSpecifier",
									"src": "1084:15:26"
								},
								{
									"baseName": {
										"id": 780,
										"name": "DiamondReadable",
										"nameLocations": [
											"1105:15:26"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1310,
										"src": "1105:15:26"
									},
									"id": 781,
									"nodeType": "InheritanceSpecifier",
									"src": "1105:15:26"
								},
								{
									"baseName": {
										"id": 782,
										"name": "DiamondWritable",
										"nameLocations": [
											"1126:15:26"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1882,
										"src": "1126:15:26"
									},
									"id": 783,
									"nodeType": "InheritanceSpecifier",
									"src": "1126:15:26"
								},
								{
									"baseName": {
										"id": 784,
										"name": "SafeOwnable",
										"nameLocations": [
											"1147:11:26"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 288,
										"src": "1147:11:26"
									},
									"id": 785,
									"nodeType": "InheritanceSpecifier",
									"src": "1147:11:26"
								},
								{
									"baseName": {
										"id": 786,
										"name": "ERC165Base",
										"nameLocations": [
											"1164:10:26"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 568,
										"src": "1164:10:26"
									},
									"id": 787,
									"nodeType": "InheritanceSpecifier",
									"src": "1164:10:26"
								}
							],
							"canonicalName": "SolidStateDiamond",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 773,
								"nodeType": "StructuredDocumentation",
								"src": "930:69:26",
								"text": " @title SolidState \"Diamond\" proxy reference implementation"
							},
							"fullyImplemented": true,
							"id": 1029,
							"internalFunctionIDs": {
								"74": 1,
								"87": 2,
								"262": 3,
								"272": 4
							},
							"linearizedBaseContracts": [
								1029,
								568,
								620,
								656,
								665,
								288,
								369,
								88,
								1882,
								1310,
								1823,
								1217,
								1077,
								711,
								212,
								741,
								408,
								412,
								42,
								10,
								432,
								51,
								21,
								442,
								2702,
								2714,
								2737,
								462,
								489,
								1835,
								1843,
								529,
								539,
								1236,
								1118,
								673
							],
							"name": "SolidStateDiamond",
							"nameLocation": "1018:17:26",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 992,
										"nodeType": "Block",
										"src": "1195:1998:26",
										"statements": [
											{
												"assignments": [
													794
												],
												"declarations": [
													{
														"constant": false,
														"id": 794,
														"mutability": "mutable",
														"name": "selectors",
														"nameLocation": "1221:9:26",
														"nodeType": "VariableDeclaration",
														"scope": 992,
														"src": "1205:25:26",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_bytes4_$dyn_memory_ptr",
															"typeString": "bytes4[]"
														},
														"typeName": {
															"baseType": {
																"id": 792,
																"name": "bytes4",
																"nodeType": "ElementaryTypeName",
																"src": "1205:6:26",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"id": 793,
															"nodeType": "ArrayTypeName",
															"src": "1205:8:26",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_bytes4_$dyn_storage_ptr",
																"typeString": "bytes4[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 800,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "3132",
															"id": 798,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1246:2:26",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_12_by_1",
																"typeString": "int_const 12"
															},
															"value": "12"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_rational_12_by_1",
																"typeString": "int_const 12"
															}
														],
														"id": 797,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "1233:12:26",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_bytes4_$dyn_memory_ptr_$",
															"typeString": "function (uint256) pure returns (bytes4[] memory)"
														},
														"typeName": {
															"baseType": {
																"id": 795,
																"name": "bytes4",
																"nodeType": "ElementaryTypeName",
																"src": "1237:6:26",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"id": 796,
															"nodeType": "ArrayTypeName",
															"src": "1237:8:26",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_bytes4_$dyn_storage_ptr",
																"typeString": "bytes4[]"
															}
														}
													},
													"id": 799,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1233:16:26",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_bytes4_$dyn_memory_ptr",
														"typeString": "bytes4[] memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1205:44:26"
											},
											{
												"assignments": [
													802
												],
												"declarations": [
													{
														"constant": false,
														"id": 802,
														"mutability": "mutable",
														"name": "selectorIndex",
														"nameLocation": "1267:13:26",
														"nodeType": "VariableDeclaration",
														"scope": 992,
														"src": "1259:21:26",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 801,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1259:7:26",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 803,
												"nodeType": "VariableDeclarationStatement",
												"src": "1259:21:26"
											},
											{
												"expression": {
													"id": 811,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 804,
															"name": "selectors",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 794,
															"src": "1328:9:26",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_bytes4_$dyn_memory_ptr",
																"typeString": "bytes4[] memory"
															}
														},
														"id": 807,
														"indexExpression": {
															"id": 806,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "++",
															"prefix": false,
															"src": "1338:15:26",
															"subExpression": {
																"id": 805,
																"name": "selectorIndex",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 802,
																"src": "1338:13:26",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1328:26:26",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"expression": {
																"id": 808,
																"name": "IDiamondFallback",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1236,
																"src": "1357:16:26",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IDiamondFallback_$1236_$",
																	"typeString": "type(contract IDiamondFallback)"
																}
															},
															"id": 809,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberLocation": "1387:18:26",
															"memberName": "getFallbackAddress",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1229,
															"src": "1357:48:26",
															"typeDescriptions": {
																"typeIdentifier": "t_function_declaration_view$__$returns$_t_address_$",
																"typeString": "function IDiamondFallback.getFallbackAddress() view returns (address)"
															}
														},
														"id": 810,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "1419:8:26",
														"memberName": "selector",
														"nodeType": "MemberAccess",
														"src": "1357:70:26",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"src": "1328:99:26",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"id": 812,
												"nodeType": "ExpressionStatement",
												"src": "1328:99:26"
											},
											{
												"expression": {
													"id": 820,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 813,
															"name": "selectors",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 794,
															"src": "1437:9:26",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_bytes4_$dyn_memory_ptr",
																"typeString": "bytes4[] memory"
															}
														},
														"id": 816,
														"indexExpression": {
															"id": 815,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "++",
															"prefix": false,
															"src": "1447:15:26",
															"subExpression": {
																"id": 814,
																"name": "selectorIndex",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 802,
																"src": "1447:13:26",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1437:26:26",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"expression": {
																"id": 817,
																"name": "IDiamondFallback",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1236,
																"src": "1466:16:26",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IDiamondFallback_$1236_$",
																	"typeString": "type(contract IDiamondFallback)"
																}
															},
															"id": 818,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberLocation": "1496:18:26",
															"memberName": "setFallbackAddress",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1235,
															"src": "1466:48:26",
															"typeDescriptions": {
																"typeIdentifier": "t_function_declaration_nonpayable$_t_address_$returns$__$",
																"typeString": "function IDiamondFallback.setFallbackAddress(address)"
															}
														},
														"id": 819,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "1528:8:26",
														"memberName": "selector",
														"nodeType": "MemberAccess",
														"src": "1466:70:26",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"src": "1437:99:26",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"id": 821,
												"nodeType": "ExpressionStatement",
												"src": "1437:99:26"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 824,
																		"name": "IDiamondFallback",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1236,
																		"src": "1574:16:26",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_IDiamondFallback_$1236_$",
																			"typeString": "type(contract IDiamondFallback)"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_type$_t_contract$_IDiamondFallback_$1236_$",
																			"typeString": "type(contract IDiamondFallback)"
																		}
																	],
																	"id": 823,
																	"name": "type",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967269,
																	"src": "1569:4:26",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 825,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1569:22:26",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_meta_type_t_contract$_IDiamondFallback_$1236",
																	"typeString": "type(contract IDiamondFallback)"
																}
															},
															"id": 826,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberLocation": "1592:11:26",
															"memberName": "interfaceId",
															"nodeType": "MemberAccess",
															"src": "1569:34:26",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														},
														{
															"hexValue": "74727565",
															"id": 827,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1605:4:26",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 822,
														"name": "_setSupportsInterface",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 619,
														"src": "1547:21:26",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes4_$_t_bool_$returns$__$",
															"typeString": "function (bytes4,bool)"
														}
													},
													"id": 828,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1547:63:26",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 829,
												"nodeType": "ExpressionStatement",
												"src": "1547:63:26"
											},
											{
												"expression": {
													"id": 837,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 830,
															"name": "selectors",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 794,
															"src": "1658:9:26",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_bytes4_$dyn_memory_ptr",
																"typeString": "bytes4[] memory"
															}
														},
														"id": 833,
														"indexExpression": {
															"id": 832,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "++",
															"prefix": false,
															"src": "1668:15:26",
															"subExpression": {
																"id": 831,
																"name": "selectorIndex",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 802,
																"src": "1668:13:26",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1658:26:26",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"expression": {
																"id": 834,
																"name": "IERC2535DiamondCut",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 462,
																"src": "1687:18:26",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC2535DiamondCut_$462_$",
																	"typeString": "type(contract IERC2535DiamondCut)"
																}
															},
															"id": 835,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberLocation": "1706:10:26",
															"memberName": "diamondCut",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 461,
															"src": "1687:29:26",
															"typeDescriptions": {
																"typeIdentifier": "t_function_declaration_nonpayable$_t_array$_t_struct$_FacetCut_$478_calldata_ptr_$dyn_calldata_ptr_$_t_address_$_t_bytes_calldata_ptr_$returns$__$",
																"typeString": "function IERC2535DiamondCut.diamondCut(struct IERC2535DiamondCutInternal.FacetCut calldata[] calldata,address,bytes calldata)"
															}
														},
														"id": 836,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "1717:8:26",
														"memberName": "selector",
														"nodeType": "MemberAccess",
														"src": "1687:38:26",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"src": "1658:67:26",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"id": 838,
												"nodeType": "ExpressionStatement",
												"src": "1658:67:26"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 841,
																		"name": "IERC2535DiamondCut",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 462,
																		"src": "1763:18:26",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_IERC2535DiamondCut_$462_$",
																			"typeString": "type(contract IERC2535DiamondCut)"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_type$_t_contract$_IERC2535DiamondCut_$462_$",
																			"typeString": "type(contract IERC2535DiamondCut)"
																		}
																	],
																	"id": 840,
																	"name": "type",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967269,
																	"src": "1758:4:26",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 842,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1758:24:26",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_meta_type_t_contract$_IERC2535DiamondCut_$462",
																	"typeString": "type(contract IERC2535DiamondCut)"
																}
															},
															"id": 843,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberLocation": "1783:11:26",
															"memberName": "interfaceId",
															"nodeType": "MemberAccess",
															"src": "1758:36:26",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														},
														{
															"hexValue": "74727565",
															"id": 844,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1796:4:26",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 839,
														"name": "_setSupportsInterface",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 619,
														"src": "1736:21:26",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes4_$_t_bool_$returns$__$",
															"typeString": "function (bytes4,bool)"
														}
													},
													"id": 845,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1736:65:26",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 846,
												"nodeType": "ExpressionStatement",
												"src": "1736:65:26"
											},
											{
												"expression": {
													"id": 854,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 847,
															"name": "selectors",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 794,
															"src": "1849:9:26",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_bytes4_$dyn_memory_ptr",
																"typeString": "bytes4[] memory"
															}
														},
														"id": 850,
														"indexExpression": {
															"id": 849,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "++",
															"prefix": false,
															"src": "1859:15:26",
															"subExpression": {
																"id": 848,
																"name": "selectorIndex",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 802,
																"src": "1859:13:26",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1849:26:26",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"expression": {
																"id": 851,
																"name": "IERC2535DiamondLoupe",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 529,
																"src": "1878:20:26",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC2535DiamondLoupe_$529_$",
																	"typeString": "type(contract IERC2535DiamondLoupe)"
																}
															},
															"id": 852,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberLocation": "1899:6:26",
															"memberName": "facets",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 504,
															"src": "1878:27:26",
															"typeDescriptions": {
																"typeIdentifier": "t_function_declaration_view$__$returns$_t_array$_t_struct$_Facet_$538_memory_ptr_$dyn_memory_ptr_$",
																"typeString": "function IERC2535DiamondLoupe.facets() view returns (struct IERC2535DiamondLoupeInternal.Facet memory[] memory)"
															}
														},
														"id": 853,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "1906:8:26",
														"memberName": "selector",
														"nodeType": "MemberAccess",
														"src": "1878:36:26",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"src": "1849:65:26",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"id": 855,
												"nodeType": "ExpressionStatement",
												"src": "1849:65:26"
											},
											{
												"expression": {
													"id": 863,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 856,
															"name": "selectors",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 794,
															"src": "1924:9:26",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_bytes4_$dyn_memory_ptr",
																"typeString": "bytes4[] memory"
															}
														},
														"id": 859,
														"indexExpression": {
															"id": 858,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "++",
															"prefix": false,
															"src": "1934:15:26",
															"subExpression": {
																"id": 857,
																"name": "selectorIndex",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 802,
																"src": "1934:13:26",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1924:26:26",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"expression": {
																"id": 860,
																"name": "IERC2535DiamondLoupe",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 529,
																"src": "1953:20:26",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC2535DiamondLoupe_$529_$",
																	"typeString": "type(contract IERC2535DiamondLoupe)"
																}
															},
															"id": 861,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberLocation": "1987:22:26",
															"memberName": "facetFunctionSelectors",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 513,
															"src": "1953:56:26",
															"typeDescriptions": {
																"typeIdentifier": "t_function_declaration_view$_t_address_$returns$_t_array$_t_bytes4_$dyn_memory_ptr_$",
																"typeString": "function IERC2535DiamondLoupe.facetFunctionSelectors(address) view returns (bytes4[] memory)"
															}
														},
														"id": 862,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "2023:8:26",
														"memberName": "selector",
														"nodeType": "MemberAccess",
														"src": "1953:78:26",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"src": "1924:107:26",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"id": 864,
												"nodeType": "ExpressionStatement",
												"src": "1924:107:26"
											},
											{
												"expression": {
													"id": 872,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 865,
															"name": "selectors",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 794,
															"src": "2041:9:26",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_bytes4_$dyn_memory_ptr",
																"typeString": "bytes4[] memory"
															}
														},
														"id": 868,
														"indexExpression": {
															"id": 867,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "++",
															"prefix": false,
															"src": "2051:15:26",
															"subExpression": {
																"id": 866,
																"name": "selectorIndex",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 802,
																"src": "2051:13:26",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2041:26:26",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"expression": {
																"id": 869,
																"name": "IERC2535DiamondLoupe",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 529,
																"src": "2070:20:26",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC2535DiamondLoupe_$529_$",
																	"typeString": "type(contract IERC2535DiamondLoupe)"
																}
															},
															"id": 870,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberLocation": "2104:14:26",
															"memberName": "facetAddresses",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 520,
															"src": "2070:48:26",
															"typeDescriptions": {
																"typeIdentifier": "t_function_declaration_view$__$returns$_t_array$_t_address_$dyn_memory_ptr_$",
																"typeString": "function IERC2535DiamondLoupe.facetAddresses() view returns (address[] memory)"
															}
														},
														"id": 871,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "2132:8:26",
														"memberName": "selector",
														"nodeType": "MemberAccess",
														"src": "2070:70:26",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"src": "2041:99:26",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"id": 873,
												"nodeType": "ExpressionStatement",
												"src": "2041:99:26"
											},
											{
												"expression": {
													"id": 881,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 874,
															"name": "selectors",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 794,
															"src": "2150:9:26",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_bytes4_$dyn_memory_ptr",
																"typeString": "bytes4[] memory"
															}
														},
														"id": 877,
														"indexExpression": {
															"id": 876,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "++",
															"prefix": false,
															"src": "2160:15:26",
															"subExpression": {
																"id": 875,
																"name": "selectorIndex",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 802,
																"src": "2160:13:26",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2150:26:26",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"expression": {
																"id": 878,
																"name": "IERC2535DiamondLoupe",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 529,
																"src": "2179:20:26",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC2535DiamondLoupe_$529_$",
																	"typeString": "type(contract IERC2535DiamondLoupe)"
																}
															},
															"id": 879,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberLocation": "2200:12:26",
															"memberName": "facetAddress",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 528,
															"src": "2179:33:26",
															"typeDescriptions": {
																"typeIdentifier": "t_function_declaration_view$_t_bytes4_$returns$_t_address_$",
																"typeString": "function IERC2535DiamondLoupe.facetAddress(bytes4) view returns (address)"
															}
														},
														"id": 880,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "2213:8:26",
														"memberName": "selector",
														"nodeType": "MemberAccess",
														"src": "2179:42:26",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"src": "2150:71:26",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"id": 882,
												"nodeType": "ExpressionStatement",
												"src": "2150:71:26"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 885,
																		"name": "IERC2535DiamondLoupe",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 529,
																		"src": "2259:20:26",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_IERC2535DiamondLoupe_$529_$",
																			"typeString": "type(contract IERC2535DiamondLoupe)"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_type$_t_contract$_IERC2535DiamondLoupe_$529_$",
																			"typeString": "type(contract IERC2535DiamondLoupe)"
																		}
																	],
																	"id": 884,
																	"name": "type",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967269,
																	"src": "2254:4:26",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 886,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2254:26:26",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_meta_type_t_contract$_IERC2535DiamondLoupe_$529",
																	"typeString": "type(contract IERC2535DiamondLoupe)"
																}
															},
															"id": 887,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberLocation": "2281:11:26",
															"memberName": "interfaceId",
															"nodeType": "MemberAccess",
															"src": "2254:38:26",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														},
														{
															"hexValue": "74727565",
															"id": 888,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2294:4:26",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 883,
														"name": "_setSupportsInterface",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 619,
														"src": "2232:21:26",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes4_$_t_bool_$returns$__$",
															"typeString": "function (bytes4,bool)"
														}
													},
													"id": 889,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2232:67:26",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 890,
												"nodeType": "ExpressionStatement",
												"src": "2232:67:26"
											},
											{
												"expression": {
													"id": 898,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 891,
															"name": "selectors",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 794,
															"src": "2338:9:26",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_bytes4_$dyn_memory_ptr",
																"typeString": "bytes4[] memory"
															}
														},
														"id": 894,
														"indexExpression": {
															"id": 893,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "++",
															"prefix": false,
															"src": "2348:15:26",
															"subExpression": {
																"id": 892,
																"name": "selectorIndex",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 802,
																"src": "2348:13:26",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2338:26:26",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"expression": {
																"id": 895,
																"name": "IERC165",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 408,
																"src": "2367:7:26",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC165_$408_$",
																	"typeString": "type(contract IERC165)"
																}
															},
															"id": 896,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberLocation": "2375:17:26",
															"memberName": "supportsInterface",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 407,
															"src": "2367:25:26",
															"typeDescriptions": {
																"typeIdentifier": "t_function_declaration_view$_t_bytes4_$returns$_t_bool_$",
																"typeString": "function IERC165.supportsInterface(bytes4) view returns (bool)"
															}
														},
														"id": 897,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "2393:8:26",
														"memberName": "selector",
														"nodeType": "MemberAccess",
														"src": "2367:34:26",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"src": "2338:63:26",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"id": 899,
												"nodeType": "ExpressionStatement",
												"src": "2338:63:26"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 902,
																		"name": "IERC165",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 408,
																		"src": "2439:7:26",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_IERC165_$408_$",
																			"typeString": "type(contract IERC165)"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_type$_t_contract$_IERC165_$408_$",
																			"typeString": "type(contract IERC165)"
																		}
																	],
																	"id": 901,
																	"name": "type",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967269,
																	"src": "2434:4:26",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 903,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2434:13:26",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_meta_type_t_contract$_IERC165_$408",
																	"typeString": "type(contract IERC165)"
																}
															},
															"id": 904,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberLocation": "2448:11:26",
															"memberName": "interfaceId",
															"nodeType": "MemberAccess",
															"src": "2434:25:26",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														},
														{
															"hexValue": "74727565",
															"id": 905,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2461:4:26",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 900,
														"name": "_setSupportsInterface",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 619,
														"src": "2412:21:26",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes4_$_t_bool_$returns$__$",
															"typeString": "function (bytes4,bool)"
														}
													},
													"id": 906,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2412:54:26",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 907,
												"nodeType": "ExpressionStatement",
												"src": "2412:54:26"
											},
											{
												"expression": {
													"id": 915,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 908,
															"name": "selectors",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 794,
															"src": "2510:9:26",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_bytes4_$dyn_memory_ptr",
																"typeString": "bytes4[] memory"
															}
														},
														"id": 911,
														"indexExpression": {
															"id": 910,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "++",
															"prefix": false,
															"src": "2520:15:26",
															"subExpression": {
																"id": 909,
																"name": "selectorIndex",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 802,
																"src": "2520:13:26",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2510:26:26",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"expression": {
																"id": 912,
																"name": "Ownable",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 88,
																"src": "2539:7:26",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_Ownable_$88_$",
																	"typeString": "type(contract Ownable)"
																}
															},
															"id": 913,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2547:5:26",
															"memberName": "owner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 74,
															"src": "2539:13:26",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 914,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "2553:8:26",
														"memberName": "selector",
														"nodeType": "MemberAccess",
														"src": "2539:22:26",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"src": "2510:51:26",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"id": 916,
												"nodeType": "ExpressionStatement",
												"src": "2510:51:26"
											},
											{
												"expression": {
													"id": 924,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 917,
															"name": "selectors",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 794,
															"src": "2571:9:26",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_bytes4_$dyn_memory_ptr",
																"typeString": "bytes4[] memory"
															}
														},
														"id": 920,
														"indexExpression": {
															"id": 919,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "++",
															"prefix": false,
															"src": "2581:15:26",
															"subExpression": {
																"id": 918,
																"name": "selectorIndex",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 802,
																"src": "2581:13:26",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2571:26:26",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"expression": {
																"id": 921,
																"name": "SafeOwnable",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 288,
																"src": "2600:11:26",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_SafeOwnable_$288_$",
																	"typeString": "type(contract SafeOwnable)"
																}
															},
															"id": 922,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2612:12:26",
															"memberName": "nomineeOwner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 262,
															"src": "2600:24:26",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 923,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "2625:8:26",
														"memberName": "selector",
														"nodeType": "MemberAccess",
														"src": "2600:33:26",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"src": "2571:62:26",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"id": 925,
												"nodeType": "ExpressionStatement",
												"src": "2571:62:26"
											},
											{
												"expression": {
													"id": 933,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 926,
															"name": "selectors",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 794,
															"src": "2643:9:26",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_bytes4_$dyn_memory_ptr",
																"typeString": "bytes4[] memory"
															}
														},
														"id": 929,
														"indexExpression": {
															"id": 928,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "++",
															"prefix": false,
															"src": "2653:15:26",
															"subExpression": {
																"id": 927,
																"name": "selectorIndex",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 802,
																"src": "2653:13:26",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2643:26:26",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"expression": {
																"id": 930,
																"name": "Ownable",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 88,
																"src": "2672:7:26",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_Ownable_$88_$",
																	"typeString": "type(contract Ownable)"
																}
															},
															"id": 931,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2680:17:26",
															"memberName": "transferOwnership",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 87,
															"src": "2672:25:26",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
																"typeString": "function (address)"
															}
														},
														"id": 932,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "2698:8:26",
														"memberName": "selector",
														"nodeType": "MemberAccess",
														"src": "2672:34:26",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"src": "2643:63:26",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"id": 934,
												"nodeType": "ExpressionStatement",
												"src": "2643:63:26"
											},
											{
												"expression": {
													"id": 942,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 935,
															"name": "selectors",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 794,
															"src": "2716:9:26",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_bytes4_$dyn_memory_ptr",
																"typeString": "bytes4[] memory"
															}
														},
														"id": 938,
														"indexExpression": {
															"id": 937,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "++",
															"prefix": false,
															"src": "2726:15:26",
															"subExpression": {
																"id": 936,
																"name": "selectorIndex",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 802,
																"src": "2726:13:26",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2716:26:26",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"expression": {
																"id": 939,
																"name": "SafeOwnable",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 288,
																"src": "2745:11:26",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_SafeOwnable_$288_$",
																	"typeString": "type(contract SafeOwnable)"
																}
															},
															"id": 940,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2757:15:26",
															"memberName": "acceptOwnership",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 272,
															"src": "2745:27:26",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
																"typeString": "function ()"
															}
														},
														"id": 941,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "2773:8:26",
														"memberName": "selector",
														"nodeType": "MemberAccess",
														"src": "2745:36:26",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"src": "2716:65:26",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"id": 943,
												"nodeType": "ExpressionStatement",
												"src": "2716:65:26"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 946,
																		"name": "IERC173",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 432,
																		"src": "2819:7:26",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_IERC173_$432_$",
																			"typeString": "type(contract IERC173)"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_type$_t_contract$_IERC173_$432_$",
																			"typeString": "type(contract IERC173)"
																		}
																	],
																	"id": 945,
																	"name": "type",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967269,
																	"src": "2814:4:26",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 947,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2814:13:26",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_meta_type_t_contract$_IERC173_$432",
																	"typeString": "type(contract IERC173)"
																}
															},
															"id": 948,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberLocation": "2828:11:26",
															"memberName": "interfaceId",
															"nodeType": "MemberAccess",
															"src": "2814:25:26",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														},
														{
															"hexValue": "74727565",
															"id": 949,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2841:4:26",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 944,
														"name": "_setSupportsInterface",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 619,
														"src": "2792:21:26",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes4_$_t_bool_$returns$__$",
															"typeString": "function (bytes4,bool)"
														}
													},
													"id": 950,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2792:54:26",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 951,
												"nodeType": "ExpressionStatement",
												"src": "2792:54:26"
											},
											{
												"assignments": [
													956
												],
												"declarations": [
													{
														"constant": false,
														"id": 956,
														"mutability": "mutable",
														"name": "facetCuts",
														"nameLocation": "2899:9:26",
														"nodeType": "VariableDeclaration",
														"scope": 992,
														"src": "2881:27:26",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_struct$_FacetCut_$478_memory_ptr_$dyn_memory_ptr",
															"typeString": "struct IERC2535DiamondCutInternal.FacetCut[]"
														},
														"typeName": {
															"baseType": {
																"id": 954,
																"nodeType": "UserDefinedTypeName",
																"pathNode": {
																	"id": 953,
																	"name": "FacetCut",
																	"nameLocations": [
																		"2881:8:26"
																	],
																	"nodeType": "IdentifierPath",
																	"referencedDeclaration": 478,
																	"src": "2881:8:26"
																},
																"referencedDeclaration": 478,
																"src": "2881:8:26",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_FacetCut_$478_storage_ptr",
																	"typeString": "struct IERC2535DiamondCutInternal.FacetCut"
																}
															},
															"id": 955,
															"nodeType": "ArrayTypeName",
															"src": "2881:10:26",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_FacetCut_$478_storage_$dyn_storage_ptr",
																"typeString": "struct IERC2535DiamondCutInternal.FacetCut[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 963,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "31",
															"id": 961,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2926:1:26",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															}
														],
														"id": 960,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "2911:14:26",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_struct$_FacetCut_$478_memory_ptr_$dyn_memory_ptr_$",
															"typeString": "function (uint256) pure returns (struct IERC2535DiamondCutInternal.FacetCut memory[] memory)"
														},
														"typeName": {
															"baseType": {
																"id": 958,
																"nodeType": "UserDefinedTypeName",
																"pathNode": {
																	"id": 957,
																	"name": "FacetCut",
																	"nameLocations": [
																		"2915:8:26"
																	],
																	"nodeType": "IdentifierPath",
																	"referencedDeclaration": 478,
																	"src": "2915:8:26"
																},
																"referencedDeclaration": 478,
																"src": "2915:8:26",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_FacetCut_$478_storage_ptr",
																	"typeString": "struct IERC2535DiamondCutInternal.FacetCut"
																}
															},
															"id": 959,
															"nodeType": "ArrayTypeName",
															"src": "2915:10:26",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_FacetCut_$478_storage_$dyn_storage_ptr",
																"typeString": "struct IERC2535DiamondCutInternal.FacetCut[]"
															}
														}
													},
													"id": 962,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2911:17:26",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_FacetCut_$478_memory_ptr_$dyn_memory_ptr",
														"typeString": "struct IERC2535DiamondCutInternal.FacetCut memory[] memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2881:47:26"
											},
											{
												"expression": {
													"id": 976,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 964,
															"name": "facetCuts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 956,
															"src": "2939:9:26",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_FacetCut_$478_memory_ptr_$dyn_memory_ptr",
																"typeString": "struct IERC2535DiamondCutInternal.FacetCut memory[] memory"
															}
														},
														"id": 966,
														"indexExpression": {
															"hexValue": "30",
															"id": 965,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2949:1:26",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2939:12:26",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_FacetCut_$478_memory_ptr",
															"typeString": "struct IERC2535DiamondCutInternal.FacetCut memory"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"arguments": [
																	{
																		"id": 970,
																		"name": "this",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967268,
																		"src": "2993:4:26",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_SolidStateDiamond_$1029",
																			"typeString": "contract SolidStateDiamond"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_SolidStateDiamond_$1029",
																			"typeString": "contract SolidStateDiamond"
																		}
																	],
																	"id": 969,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2985:7:26",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 968,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2985:7:26",
																		"typeDescriptions": {}
																	}
																},
																"id": 971,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2985:13:26",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"expression": {
																	"id": 972,
																	"name": "FacetCutAction",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 469,
																	"src": "3020:14:26",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_enum$_FacetCutAction_$469_$",
																		"typeString": "type(enum IERC2535DiamondCutInternal.FacetCutAction)"
																	}
																},
																"id": 973,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "3035:3:26",
																"memberName": "ADD",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 466,
																"src": "3020:18:26",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_FacetCutAction_$469",
																	"typeString": "enum IERC2535DiamondCutInternal.FacetCutAction"
																}
															},
															{
																"id": 974,
																"name": "selectors",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 794,
																"src": "3063:9:26",
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_bytes4_$dyn_memory_ptr",
																	"typeString": "bytes4[] memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_enum$_FacetCutAction_$469",
																	"typeString": "enum IERC2535DiamondCutInternal.FacetCutAction"
																},
																{
																	"typeIdentifier": "t_array$_t_bytes4_$dyn_memory_ptr",
																	"typeString": "bytes4[] memory"
																}
															],
															"id": 967,
															"name": "FacetCut",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 478,
															"src": "2954:8:26",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_struct$_FacetCut_$478_storage_ptr_$",
																"typeString": "type(struct IERC2535DiamondCutInternal.FacetCut storage pointer)"
															}
														},
														"id": 975,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "structConstructorCall",
														"lValueRequested": false,
														"nameLocations": [
															"2977:6:26",
															"3012:6:26",
															"3052:9:26"
														],
														"names": [
															"target",
															"action",
															"selectors"
														],
														"nodeType": "FunctionCall",
														"src": "2954:129:26",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_FacetCut_$478_memory_ptr",
															"typeString": "struct IERC2535DiamondCutInternal.FacetCut memory"
														}
													},
													"src": "2939:144:26",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_FacetCut_$478_memory_ptr",
														"typeString": "struct IERC2535DiamondCutInternal.FacetCut memory"
													}
												},
												"id": 977,
												"nodeType": "ExpressionStatement",
												"src": "2939:144:26"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 979,
															"name": "facetCuts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 956,
															"src": "3106:9:26",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_FacetCut_$478_memory_ptr_$dyn_memory_ptr",
																"typeString": "struct IERC2535DiamondCutInternal.FacetCut memory[] memory"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 982,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3125:1:26",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 981,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3117:7:26",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 980,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3117:7:26",
																	"typeDescriptions": {}
																}
															},
															"id": 983,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3117:10:26",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"hexValue": "",
															"id": 984,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3129:2:26",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_array$_t_struct$_FacetCut_$478_memory_ptr_$dyn_memory_ptr",
																"typeString": "struct IERC2535DiamondCutInternal.FacetCut memory[] memory"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"id": 978,
														"name": "_diamondCut",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2087,
														"src": "3094:11:26",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_array$_t_struct$_FacetCut_$478_memory_ptr_$dyn_memory_ptr_$_t_address_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (struct IERC2535DiamondCutInternal.FacetCut memory[] memory,address,bytes memory)"
														}
													},
													"id": 985,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3094:38:26",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 986,
												"nodeType": "ExpressionStatement",
												"src": "3094:38:26"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 988,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "3175:3:26",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 989,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3179:6:26",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "3175:10:26",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 987,
														"name": "_setOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 211,
														"src": "3165:9:26",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 990,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3165:21:26",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 991,
												"nodeType": "ExpressionStatement",
												"src": "3165:21:26"
											}
										]
									},
									"id": 993,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 788,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1192:2:26"
									},
									"returnParameters": {
										"id": 789,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1195:0:26"
									},
									"scope": 1029,
									"src": "1181:2012:26",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										740
									],
									"body": {
										"id": 996,
										"nodeType": "Block",
										"src": "3226:2:26",
										"statements": []
									},
									"id": 997,
									"implemented": true,
									"kind": "receive",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 994,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3206:2:26"
									},
									"returnParameters": {
										"id": 995,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3226:0:26"
									},
									"scope": 1029,
									"src": "3199:29:26",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										184,
										287
									],
									"body": {
										"id": 1011,
										"nodeType": "Block",
										"src": "3349:50:26",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1008,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 999,
															"src": "3384:7:26",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 1005,
															"name": "super",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967271,
															"src": "3359:5:26",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_super$_SolidStateDiamond_$1029_$",
																"typeString": "type(contract super SolidStateDiamond)"
															}
														},
														"id": 1007,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3365:18:26",
														"memberName": "_transferOwnership",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 287,
														"src": "3359:24:26",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 1009,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3359:33:26",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1010,
												"nodeType": "ExpressionStatement",
												"src": "3359:33:26"
											}
										]
									},
									"id": 1012,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "3243:18:26",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1003,
										"nodeType": "OverrideSpecifier",
										"overrides": [
											{
												"id": 1001,
												"name": "OwnableInternal",
												"nameLocations": [
													"3319:15:26"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 212,
												"src": "3319:15:26"
											},
											{
												"id": 1002,
												"name": "SafeOwnable",
												"nameLocations": [
													"3336:11:26"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 288,
												"src": "3336:11:26"
											}
										],
										"src": "3310:38:26"
									},
									"parameters": {
										"id": 1000,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 999,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "3279:7:26",
												"nodeType": "VariableDeclaration",
												"scope": 1012,
												"src": "3271:15:26",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 998,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3271:7:26",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3261:31:26"
									},
									"returnParameters": {
										"id": 1004,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3349:0:26"
									},
									"scope": 1029,
									"src": "3234:165:26",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										1076,
										1187
									],
									"body": {
										"id": 1027,
										"nodeType": "Block",
										"src": "3608:60:26",
										"statements": [
											{
												"expression": {
													"id": 1025,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1021,
														"name": "implementation",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1019,
														"src": "3618:14:26",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"expression": {
																"id": 1022,
																"name": "super",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967271,
																"src": "3635:5:26",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_super$_SolidStateDiamond_$1029_$",
																	"typeString": "type(contract super SolidStateDiamond)"
																}
															},
															"id": 1023,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3641:18:26",
															"memberName": "_getImplementation",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1187,
															"src": "3635:24:26",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 1024,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3635:26:26",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3618:43:26",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1026,
												"nodeType": "ExpressionStatement",
												"src": "3618:43:26"
											}
										]
									},
									"documentation": {
										"id": 1013,
										"nodeType": "StructuredDocumentation",
										"src": "3405:46:26",
										"text": " @inheritdoc DiamondFallback"
									},
									"id": 1028,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_getImplementation",
									"nameLocation": "3465:18:26",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1017,
										"nodeType": "OverrideSpecifier",
										"overrides": [
											{
												"id": 1015,
												"name": "DiamondBase",
												"nameLocations": [
													"3533:11:26"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1077,
												"src": "3533:11:26"
											},
											{
												"id": 1016,
												"name": "DiamondFallback",
												"nameLocations": [
													"3546:15:26"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1217,
												"src": "3546:15:26"
											}
										],
										"src": "3524:38:26"
									},
									"parameters": {
										"id": 1014,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3483:2:26"
									},
									"returnParameters": {
										"id": 1020,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1019,
												"mutability": "mutable",
												"name": "implementation",
												"nameLocation": "3588:14:26",
												"nodeType": "VariableDeclaration",
												"scope": 1028,
												"src": "3580:22:26",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1018,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3580:7:26",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3579:24:26"
									},
									"scope": 1029,
									"src": "3456:212:26",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1030,
							"src": "1000:2670:26",
							"usedErrors": [
								18,
								20,
								50,
								664,
								669,
								2722,
								2724,
								2726,
								2728,
								2730,
								2732,
								2734,
								2736
							],
							"usedEvents": [
								441,
								488
							]
						}
					],
					"src": "33:3638:26"
				},
				"id": 26
			},
			"@solidstate/contracts/proxy/diamond/base/DiamondBase.sol": {
				"ast": {
					"absolutePath": "@solidstate/contracts/proxy/diamond/base/DiamondBase.sol",
					"exportedSymbols": {
						"DiamondBase": [
							1077
						],
						"DiamondBaseStorage": [
							1111
						],
						"IDiamondBase": [
							1118
						],
						"Proxy": [
							711
						]
					},
					"id": 1078,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1031,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".18"
							],
							"nodeType": "PragmaDirective",
							"src": "33:24:27"
						},
						{
							"absolutePath": "@solidstate/contracts/proxy/Proxy.sol",
							"file": "../../Proxy.sol",
							"id": 1033,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1078,
							"sourceUnit": 712,
							"src": "59:40:27",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1032,
										"name": "Proxy",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 711,
										"src": "68:5:27",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@solidstate/contracts/proxy/diamond/base/IDiamondBase.sol",
							"file": "./IDiamondBase.sol",
							"id": 1035,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1078,
							"sourceUnit": 1119,
							"src": "100:50:27",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1034,
										"name": "IDiamondBase",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1118,
										"src": "109:12:27",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@solidstate/contracts/proxy/diamond/base/DiamondBaseStorage.sol",
							"file": "./DiamondBaseStorage.sol",
							"id": 1037,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1078,
							"sourceUnit": 1112,
							"src": "151:62:27",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1036,
										"name": "DiamondBaseStorage",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1111,
										"src": "160:18:27",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 1039,
										"name": "IDiamondBase",
										"nameLocations": [
											"514:12:27"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1118,
										"src": "514:12:27"
									},
									"id": 1040,
									"nodeType": "InheritanceSpecifier",
									"src": "514:12:27"
								},
								{
									"baseName": {
										"id": 1041,
										"name": "Proxy",
										"nameLocations": [
											"528:5:27"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 711,
										"src": "528:5:27"
									},
									"id": 1042,
									"nodeType": "InheritanceSpecifier",
									"src": "528:5:27"
								}
							],
							"canonicalName": "DiamondBase",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1038,
								"nodeType": "StructuredDocumentation",
								"src": "215:265:27",
								"text": " @title EIP-2535 \"Diamond\" proxy base contract\n @dev see https://eips.ethereum.org/EIPS/eip-2535\n @dev note that for EIP-2535 compliance this base contract must also include the DiamondReadable functions (either within the same deployment or by proxy)"
							},
							"fullyImplemented": true,
							"id": 1077,
							"linearizedBaseContracts": [
								1077,
								711,
								1118,
								673
							],
							"name": "DiamondBase",
							"nameLocation": "499:11:27",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"baseFunctions": [
										710
									],
									"body": {
										"id": 1075,
										"nodeType": "Block",
										"src": "719:284:27",
										"statements": [
											{
												"assignments": [
													1053
												],
												"declarations": [
													{
														"constant": false,
														"id": 1053,
														"mutability": "mutable",
														"name": "l",
														"nameLocation": "820:1:27",
														"nodeType": "VariableDeclaration",
														"scope": 1075,
														"src": "786:35:27",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Layout_$1093_storage_ptr",
															"typeString": "struct DiamondBaseStorage.Layout"
														},
														"typeName": {
															"id": 1052,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1051,
																"name": "DiamondBaseStorage.Layout",
																"nameLocations": [
																	"786:18:27",
																	"805:6:27"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 1093,
																"src": "786:25:27"
															},
															"referencedDeclaration": 1093,
															"src": "786:25:27",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Layout_$1093_storage_ptr",
																"typeString": "struct DiamondBaseStorage.Layout"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1054,
												"nodeType": "VariableDeclarationStatement",
												"src": "786:35:27"
											},
											{
												"assignments": [
													1056
												],
												"declarations": [
													{
														"constant": false,
														"id": 1056,
														"mutability": "mutable",
														"name": "slot",
														"nameLocation": "839:4:27",
														"nodeType": "VariableDeclaration",
														"scope": 1075,
														"src": "831:12:27",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 1055,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "831:7:27",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1059,
												"initialValue": {
													"expression": {
														"id": 1057,
														"name": "DiamondBaseStorage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1111,
														"src": "846:18:27",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_contract$_DiamondBaseStorage_$1111_$",
															"typeString": "type(library DiamondBaseStorage)"
														}
													},
													"id": 1058,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"lValueRequested": false,
													"memberLocation": "865:12:27",
													"memberName": "STORAGE_SLOT",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 1098,
													"src": "846:31:27",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "831:46:27"
											},
											{
												"AST": {
													"nativeSrc": "896:38:27",
													"nodeType": "YulBlock",
													"src": "896:38:27",
													"statements": [
														{
															"nativeSrc": "910:14:27",
															"nodeType": "YulAssignment",
															"src": "910:14:27",
															"value": {
																"name": "slot",
																"nativeSrc": "920:4:27",
																"nodeType": "YulIdentifier",
																"src": "920:4:27"
															},
															"variableNames": [
																{
																	"name": "l.slot",
																	"nativeSrc": "910:6:27",
																	"nodeType": "YulIdentifier",
																	"src": "910:6:27"
																}
															]
														}
													]
												},
												"evmVersion": "shanghai",
												"externalReferences": [
													{
														"declaration": 1053,
														"isOffset": false,
														"isSlot": true,
														"src": "910:6:27",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 1056,
														"isOffset": false,
														"isSlot": false,
														"src": "920:4:27",
														"valueSize": 1
													}
												],
												"id": 1060,
												"nodeType": "InlineAssembly",
												"src": "887:47:27"
											},
											{
												"expression": {
													"id": 1073,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1061,
														"name": "implementation",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1047,
														"src": "944:14:27",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"arguments": [
																	{
																		"baseExpression": {
																			"expression": {
																				"id": 1066,
																				"name": "l",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1053,
																				"src": "977:1:27",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_Layout_$1093_storage_ptr",
																					"typeString": "struct DiamondBaseStorage.Layout storage pointer"
																				}
																			},
																			"id": 1067,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "979:6:27",
																			"memberName": "facets",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 1084,
																			"src": "977:8:27",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_bytes4_$_t_bytes32_$",
																				"typeString": "mapping(bytes4 => bytes32)"
																			}
																		},
																		"id": 1070,
																		"indexExpression": {
																			"expression": {
																				"id": 1068,
																				"name": "msg",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967281,
																				"src": "986:3:27",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_message",
																					"typeString": "msg"
																				}
																			},
																			"id": 1069,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "990:3:27",
																			"memberName": "sig",
																			"nodeType": "MemberAccess",
																			"src": "986:7:27",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes4",
																				"typeString": "bytes4"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "977:17:27",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	],
																	"id": 1065,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "969:7:27",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bytes20_$",
																		"typeString": "type(bytes20)"
																	},
																	"typeName": {
																		"id": 1064,
																		"name": "bytes20",
																		"nodeType": "ElementaryTypeName",
																		"src": "969:7:27",
																		"typeDescriptions": {}
																	}
																},
																"id": 1071,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "969:26:27",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes20",
																	"typeString": "bytes20"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes20",
																	"typeString": "bytes20"
																}
															],
															"id": 1063,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "961:7:27",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1062,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "961:7:27",
																"typeDescriptions": {}
															}
														},
														"id": 1072,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "961:35:27",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "944:52:27",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1074,
												"nodeType": "ExpressionStatement",
												"src": "944:52:27"
											}
										]
									},
									"documentation": {
										"id": 1043,
										"nodeType": "StructuredDocumentation",
										"src": "540:36:27",
										"text": " @inheritdoc Proxy"
									},
									"id": 1076,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_getImplementation",
									"nameLocation": "590:18:27",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1045,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "665:8:27"
									},
									"parameters": {
										"id": 1044,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "608:2:27"
									},
									"returnParameters": {
										"id": 1048,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1047,
												"mutability": "mutable",
												"name": "implementation",
												"nameLocation": "699:14:27",
												"nodeType": "VariableDeclaration",
												"scope": 1076,
												"src": "691:22:27",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1046,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "691:7:27",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "690:24:27"
									},
									"scope": 1077,
									"src": "581:422:27",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1078,
							"src": "481:524:27",
							"usedErrors": [
								669
							],
							"usedEvents": []
						}
					],
					"src": "33:973:27"
				},
				"id": 27
			},
			"@solidstate/contracts/proxy/diamond/base/DiamondBaseStorage.sol": {
				"ast": {
					"absolutePath": "@solidstate/contracts/proxy/diamond/base/DiamondBaseStorage.sol",
					"exportedSymbols": {
						"DiamondBaseStorage": [
							1111
						]
					},
					"id": 1112,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1079,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".18"
							],
							"nodeType": "PragmaDirective",
							"src": "33:24:28"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "DiamondBaseStorage",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1080,
								"nodeType": "StructuredDocumentation",
								"src": "59:78:28",
								"text": " @dev derived from https://github.com/mudgen/diamond-2 (MIT license)"
							},
							"fullyImplemented": true,
							"id": 1111,
							"linearizedBaseContracts": [
								1111
							],
							"name": "DiamondBaseStorage",
							"nameLocation": "146:18:28",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "DiamondBaseStorage.Layout",
									"id": 1093,
									"members": [
										{
											"constant": false,
											"id": 1084,
											"mutability": "mutable",
											"name": "facets",
											"nameLocation": "294:6:28",
											"nodeType": "VariableDeclaration",
											"scope": 1093,
											"src": "267:33:28",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_bytes4_$_t_bytes32_$",
												"typeString": "mapping(bytes4 => bytes32)"
											},
											"typeName": {
												"id": 1083,
												"keyName": "",
												"keyNameLocation": "-1:-1:-1",
												"keyType": {
													"id": 1081,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "275:6:28",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"nodeType": "Mapping",
												"src": "267:26:28",
												"typeDescriptions": {
													"typeIdentifier": "t_mapping$_t_bytes4_$_t_bytes32_$",
													"typeString": "mapping(bytes4 => bytes32)"
												},
												"valueName": "",
												"valueNameLocation": "-1:-1:-1",
												"valueType": {
													"id": 1082,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "285:7:28",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1086,
											"mutability": "mutable",
											"name": "selectorCount",
											"nameLocation": "365:13:28",
											"nodeType": "VariableDeclaration",
											"scope": 1093,
											"src": "358:20:28",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint16",
												"typeString": "uint16"
											},
											"typeName": {
												"id": 1085,
												"name": "uint16",
												"nodeType": "ElementaryTypeName",
												"src": "358:6:28",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1090,
											"mutability": "mutable",
											"name": "selectorSlots",
											"nameLocation": "477:13:28",
											"nodeType": "VariableDeclaration",
											"scope": 1093,
											"src": "449:41:28",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_uint256_$_t_bytes32_$",
												"typeString": "mapping(uint256 => bytes32)"
											},
											"typeName": {
												"id": 1089,
												"keyName": "",
												"keyNameLocation": "-1:-1:-1",
												"keyType": {
													"id": 1087,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "457:7:28",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "Mapping",
												"src": "449:27:28",
												"typeDescriptions": {
													"typeIdentifier": "t_mapping$_t_uint256_$_t_bytes32_$",
													"typeString": "mapping(uint256 => bytes32)"
												},
												"valueName": "",
												"valueNameLocation": "-1:-1:-1",
												"valueType": {
													"id": 1088,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "468:7:28",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1092,
											"mutability": "mutable",
											"name": "fallbackAddress",
											"nameLocation": "508:15:28",
											"nodeType": "VariableDeclaration",
											"scope": 1093,
											"src": "500:23:28",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 1091,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "500:7:28",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Layout",
									"nameLocation": "178:6:28",
									"nodeType": "StructDefinition",
									"scope": 1111,
									"src": "171:359:28",
									"visibility": "public"
								},
								{
									"constant": true,
									"id": 1098,
									"mutability": "constant",
									"name": "STORAGE_SLOT",
									"nameLocation": "562:12:28",
									"nodeType": "VariableDeclaration",
									"scope": 1111,
									"src": "536:102:28",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 1094,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "536:7:28",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"arguments": [
											{
												"hexValue": "736f6c696473746174652e636f6e7472616374732e73746f726167652e4469616d6f6e6442617365",
												"id": 1096,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "string",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "595:42:28",
												"typeDescriptions": {
													"typeIdentifier": "t_stringliteral_177481ac65e4292921c69f62d1cc7f57541261e5d61c8175cf4e36a01c9bfc93",
													"typeString": "literal_string \"solidstate.contracts.storage.DiamondBase\""
												},
												"value": "solidstate.contracts.storage.DiamondBase"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_stringliteral_177481ac65e4292921c69f62d1cc7f57541261e5d61c8175cf4e36a01c9bfc93",
													"typeString": "literal_string \"solidstate.contracts.storage.DiamondBase\""
												}
											],
											"id": 1095,
											"name": "keccak256",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 4294967288,
											"src": "585:9:28",
											"typeDescriptions": {
												"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
												"typeString": "function (bytes memory) pure returns (bytes32)"
											}
										},
										"id": 1097,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "functionCall",
										"lValueRequested": false,
										"nameLocations": [],
										"names": [],
										"nodeType": "FunctionCall",
										"src": "585:53:28",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1109,
										"nodeType": "Block",
										"src": "704:100:28",
										"statements": [
											{
												"assignments": [
													1105
												],
												"declarations": [
													{
														"constant": false,
														"id": 1105,
														"mutability": "mutable",
														"name": "slot",
														"nameLocation": "722:4:28",
														"nodeType": "VariableDeclaration",
														"scope": 1109,
														"src": "714:12:28",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 1104,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "714:7:28",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1107,
												"initialValue": {
													"id": 1106,
													"name": "STORAGE_SLOT",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1098,
													"src": "729:12:28",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "714:27:28"
											},
											{
												"AST": {
													"nativeSrc": "760:38:28",
													"nodeType": "YulBlock",
													"src": "760:38:28",
													"statements": [
														{
															"nativeSrc": "774:14:28",
															"nodeType": "YulAssignment",
															"src": "774:14:28",
															"value": {
																"name": "slot",
																"nativeSrc": "784:4:28",
																"nodeType": "YulIdentifier",
																"src": "784:4:28"
															},
															"variableNames": [
																{
																	"name": "l.slot",
																	"nativeSrc": "774:6:28",
																	"nodeType": "YulIdentifier",
																	"src": "774:6:28"
																}
															]
														}
													]
												},
												"evmVersion": "shanghai",
												"externalReferences": [
													{
														"declaration": 1102,
														"isOffset": false,
														"isSlot": true,
														"src": "774:6:28",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 1105,
														"isOffset": false,
														"isSlot": false,
														"src": "784:4:28",
														"valueSize": 1
													}
												],
												"id": 1108,
												"nodeType": "InlineAssembly",
												"src": "751:47:28"
											}
										]
									},
									"id": 1110,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "layout",
									"nameLocation": "654:6:28",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1099,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "660:2:28"
									},
									"returnParameters": {
										"id": 1103,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1102,
												"mutability": "mutable",
												"name": "l",
												"nameLocation": "701:1:28",
												"nodeType": "VariableDeclaration",
												"scope": 1110,
												"src": "686:16:28",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Layout_$1093_storage_ptr",
													"typeString": "struct DiamondBaseStorage.Layout"
												},
												"typeName": {
													"id": 1101,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1100,
														"name": "Layout",
														"nameLocations": [
															"686:6:28"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1093,
														"src": "686:6:28"
													},
													"referencedDeclaration": 1093,
													"src": "686:6:28",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Layout_$1093_storage_ptr",
														"typeString": "struct DiamondBaseStorage.Layout"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "685:18:28"
									},
									"scope": 1111,
									"src": "645:159:28",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1112,
							"src": "138:668:28",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "33:774:28"
				},
				"id": 28
			},
			"@solidstate/contracts/proxy/diamond/base/IDiamondBase.sol": {
				"ast": {
					"absolutePath": "@solidstate/contracts/proxy/diamond/base/IDiamondBase.sol",
					"exportedSymbols": {
						"IDiamondBase": [
							1118
						],
						"IProxy": [
							673
						]
					},
					"id": 1119,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1113,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".18"
							],
							"nodeType": "PragmaDirective",
							"src": "33:24:29"
						},
						{
							"absolutePath": "@solidstate/contracts/proxy/IProxy.sol",
							"file": "../../IProxy.sol",
							"id": 1115,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1119,
							"sourceUnit": 674,
							"src": "59:42:29",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1114,
										"name": "IProxy",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 673,
										"src": "68:6:29",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1116,
										"name": "IProxy",
										"nameLocations": [
											"129:6:29"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 673,
										"src": "129:6:29"
									},
									"id": 1117,
									"nodeType": "InheritanceSpecifier",
									"src": "129:6:29"
								}
							],
							"canonicalName": "IDiamondBase",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 1118,
							"linearizedBaseContracts": [
								1118,
								673
							],
							"name": "IDiamondBase",
							"nameLocation": "113:12:29",
							"nodeType": "ContractDefinition",
							"nodes": [],
							"scope": 1119,
							"src": "103:35:29",
							"usedErrors": [
								669
							],
							"usedEvents": []
						}
					],
					"src": "33:106:29"
				},
				"id": 29
			},
			"@solidstate/contracts/proxy/diamond/fallback/DiamondFallback.sol": {
				"ast": {
					"absolutePath": "@solidstate/contracts/proxy/diamond/fallback/DiamondFallback.sol",
					"exportedSymbols": {
						"DiamondBase": [
							1077
						],
						"DiamondBaseStorage": [
							1111
						],
						"DiamondFallback": [
							1217
						],
						"IDiamondFallback": [
							1236
						],
						"OwnableInternal": [
							212
						]
					},
					"id": 1218,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1120,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".18"
							],
							"nodeType": "PragmaDirective",
							"src": "33:24:30"
						},
						{
							"absolutePath": "@solidstate/contracts/access/ownable/OwnableInternal.sol",
							"file": "../../../access/ownable/OwnableInternal.sol",
							"id": 1122,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1218,
							"sourceUnit": 213,
							"src": "59:78:30",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1121,
										"name": "OwnableInternal",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 212,
										"src": "68:15:30",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@solidstate/contracts/proxy/diamond/base/DiamondBase.sol",
							"file": "../base/DiamondBase.sol",
							"id": 1124,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1218,
							"sourceUnit": 1078,
							"src": "138:54:30",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1123,
										"name": "DiamondBase",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1077,
										"src": "147:11:30",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@solidstate/contracts/proxy/diamond/base/DiamondBaseStorage.sol",
							"file": "../base/DiamondBaseStorage.sol",
							"id": 1126,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1218,
							"sourceUnit": 1112,
							"src": "193:68:30",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1125,
										"name": "DiamondBaseStorage",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1111,
										"src": "202:18:30",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@solidstate/contracts/proxy/diamond/fallback/IDiamondFallback.sol",
							"file": "./IDiamondFallback.sol",
							"id": 1128,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1218,
							"sourceUnit": 1237,
							"src": "262:58:30",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1127,
										"name": "IDiamondFallback",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1236,
										"src": "271:16:30",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 1130,
										"name": "IDiamondFallback",
										"nameLocations": [
											"427:16:30"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1236,
										"src": "427:16:30"
									},
									"id": 1131,
									"nodeType": "InheritanceSpecifier",
									"src": "427:16:30"
								},
								{
									"baseName": {
										"id": 1132,
										"name": "OwnableInternal",
										"nameLocations": [
											"449:15:30"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 212,
										"src": "449:15:30"
									},
									"id": 1133,
									"nodeType": "InheritanceSpecifier",
									"src": "449:15:30"
								},
								{
									"baseName": {
										"id": 1134,
										"name": "DiamondBase",
										"nameLocations": [
											"470:11:30"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1077,
										"src": "470:11:30"
									},
									"id": 1135,
									"nodeType": "InheritanceSpecifier",
									"src": "470:11:30"
								}
							],
							"canonicalName": "DiamondFallback",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1129,
								"nodeType": "StructuredDocumentation",
								"src": "322:63:30",
								"text": " @title Fallback feature for EIP-2535 \"Diamond\" proxy"
							},
							"fullyImplemented": true,
							"id": 1217,
							"linearizedBaseContracts": [
								1217,
								1077,
								711,
								212,
								21,
								442,
								1236,
								1118,
								673
							],
							"name": "DiamondFallback",
							"nameLocation": "404:15:30",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"baseFunctions": [
										1229
									],
									"body": {
										"id": 1146,
										"nodeType": "Block",
										"src": "646:56:30",
										"statements": [
											{
												"expression": {
													"id": 1144,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1141,
														"name": "fallbackAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1139,
														"src": "656:15:30",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 1142,
															"name": "_getFallbackAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1201,
															"src": "674:19:30",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 1143,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "674:21:30",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "656:39:30",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1145,
												"nodeType": "ExpressionStatement",
												"src": "656:39:30"
											}
										]
									},
									"documentation": {
										"id": 1136,
										"nodeType": "StructuredDocumentation",
										"src": "488:47:30",
										"text": " @inheritdoc IDiamondFallback"
									},
									"functionSelector": "2c408059",
									"id": 1147,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getFallbackAddress",
									"nameLocation": "549:18:30",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1137,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "567:2:30"
									},
									"returnParameters": {
										"id": 1140,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1139,
												"mutability": "mutable",
												"name": "fallbackAddress",
												"nameLocation": "625:15:30",
												"nodeType": "VariableDeclaration",
												"scope": 1147,
												"src": "617:23:30",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1138,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "617:7:30",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "616:25:30"
									},
									"scope": 1217,
									"src": "540:162:30",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										1235
									],
									"body": {
										"id": 1159,
										"nodeType": "Block",
										"src": "832:53:30",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1156,
															"name": "fallbackAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1150,
															"src": "862:15:30",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1155,
														"name": "_setFallbackAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1216,
														"src": "842:19:30",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 1157,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "842:36:30",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1158,
												"nodeType": "ExpressionStatement",
												"src": "842:36:30"
											}
										]
									},
									"documentation": {
										"id": 1148,
										"nodeType": "StructuredDocumentation",
										"src": "708:47:30",
										"text": " @inheritdoc IDiamondFallback"
									},
									"functionSelector": "91423765",
									"id": 1160,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1153,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1152,
												"name": "onlyOwner",
												"nameLocations": [
													"822:9:30"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 116,
												"src": "822:9:30"
											},
											"nodeType": "ModifierInvocation",
											"src": "822:9:30"
										}
									],
									"name": "setFallbackAddress",
									"nameLocation": "769:18:30",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1151,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1150,
												"mutability": "mutable",
												"name": "fallbackAddress",
												"nameLocation": "796:15:30",
												"nodeType": "VariableDeclaration",
												"scope": 1160,
												"src": "788:23:30",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1149,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "788:7:30",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "787:25:30"
									},
									"returnParameters": {
										"id": 1154,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "832:0:30"
									},
									"scope": 1217,
									"src": "760:125:30",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										1076
									],
									"body": {
										"id": 1186,
										"nodeType": "Block",
										"src": "1151:167:30",
										"statements": [
											{
												"expression": {
													"id": 1171,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1167,
														"name": "implementation",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1165,
														"src": "1161:14:30",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"expression": {
																"id": 1168,
																"name": "super",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967271,
																"src": "1178:5:30",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_super$_DiamondFallback_$1217_$",
																	"typeString": "type(contract super DiamondFallback)"
																}
															},
															"id": 1169,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1184:18:30",
															"memberName": "_getImplementation",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1076,
															"src": "1178:24:30",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 1170,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1178:26:30",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1161:43:30",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1172,
												"nodeType": "ExpressionStatement",
												"src": "1161:43:30"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1178,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1173,
														"name": "implementation",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1165,
														"src": "1219:14:30",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1176,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1245:1:30",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1175,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1237:7:30",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1174,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "1237:7:30",
																"typeDescriptions": {}
															}
														},
														"id": 1177,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1237:10:30",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1219:28:30",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1185,
												"nodeType": "IfStatement",
												"src": "1215:97:30",
												"trueBody": {
													"id": 1184,
													"nodeType": "Block",
													"src": "1249:63:30",
													"statements": [
														{
															"expression": {
																"id": 1182,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1179,
																	"name": "implementation",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1165,
																	"src": "1263:14:30",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 1180,
																		"name": "_getFallbackAddress",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1201,
																		"src": "1280:19:30",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																			"typeString": "function () view returns (address)"
																		}
																	},
																	"id": 1181,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1280:21:30",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "1263:38:30",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1183,
															"nodeType": "ExpressionStatement",
															"src": "1263:38:30"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1161,
										"nodeType": "StructuredDocumentation",
										"src": "891:117:30",
										"text": " @inheritdoc DiamondBase\n @notice query custom fallback address is no implementation is found"
									},
									"id": 1187,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_getImplementation",
									"nameLocation": "1022:18:30",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1163,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "1097:8:30"
									},
									"parameters": {
										"id": 1162,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1040:2:30"
									},
									"returnParameters": {
										"id": 1166,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1165,
												"mutability": "mutable",
												"name": "implementation",
												"nameLocation": "1131:14:30",
												"nodeType": "VariableDeclaration",
												"scope": 1187,
												"src": "1123:22:30",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1164,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1123:7:30",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1122:24:30"
									},
									"scope": 1217,
									"src": "1013:305:30",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1200,
										"nodeType": "Block",
										"src": "1593:78:30",
										"statements": [
											{
												"expression": {
													"id": 1198,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1193,
														"name": "fallbackAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1191,
														"src": "1603:15:30",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"expression": {
																	"id": 1194,
																	"name": "DiamondBaseStorage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1111,
																	"src": "1621:18:30",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_DiamondBaseStorage_$1111_$",
																		"typeString": "type(library DiamondBaseStorage)"
																	}
																},
																"id": 1195,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1640:6:30",
																"memberName": "layout",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1110,
																"src": "1621:25:30",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_Layout_$1093_storage_ptr_$",
																	"typeString": "function () pure returns (struct DiamondBaseStorage.Layout storage pointer)"
																}
															},
															"id": 1196,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1621:27:30",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Layout_$1093_storage_ptr",
																"typeString": "struct DiamondBaseStorage.Layout storage pointer"
															}
														},
														"id": 1197,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1649:15:30",
														"memberName": "fallbackAddress",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1092,
														"src": "1621:43:30",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1603:61:30",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1199,
												"nodeType": "ExpressionStatement",
												"src": "1603:61:30"
											}
										]
									},
									"documentation": {
										"id": 1188,
										"nodeType": "StructuredDocumentation",
										"src": "1324:141:30",
										"text": " @notice query the address of the fallback implementation\n @return fallbackAddress address of fallback implementation"
									},
									"id": 1201,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_getFallbackAddress",
									"nameLocation": "1479:19:30",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1189,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1498:2:30"
									},
									"returnParameters": {
										"id": 1192,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1191,
												"mutability": "mutable",
												"name": "fallbackAddress",
												"nameLocation": "1572:15:30",
												"nodeType": "VariableDeclaration",
												"scope": 1201,
												"src": "1564:23:30",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1190,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1564:7:30",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1563:25:30"
									},
									"scope": 1217,
									"src": "1470:201:30",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1215,
										"nodeType": "Block",
										"src": "1891:78:30",
										"statements": [
											{
												"expression": {
													"id": 1213,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"expression": {
																	"id": 1207,
																	"name": "DiamondBaseStorage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1111,
																	"src": "1901:18:30",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_DiamondBaseStorage_$1111_$",
																		"typeString": "type(library DiamondBaseStorage)"
																	}
																},
																"id": 1209,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1920:6:30",
																"memberName": "layout",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1110,
																"src": "1901:25:30",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_Layout_$1093_storage_ptr_$",
																	"typeString": "function () pure returns (struct DiamondBaseStorage.Layout storage pointer)"
																}
															},
															"id": 1210,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1901:27:30",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Layout_$1093_storage_ptr",
																"typeString": "struct DiamondBaseStorage.Layout storage pointer"
															}
														},
														"id": 1211,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "1929:15:30",
														"memberName": "fallbackAddress",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1092,
														"src": "1901:43:30",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1212,
														"name": "fallbackAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1204,
														"src": "1947:15:30",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1901:61:30",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1214,
												"nodeType": "ExpressionStatement",
												"src": "1901:61:30"
											}
										]
									},
									"documentation": {
										"id": 1202,
										"nodeType": "StructuredDocumentation",
										"src": "1677:138:30",
										"text": " @notice set the address of the fallback implementation\n @param fallbackAddress address of fallback implementation"
									},
									"id": 1216,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setFallbackAddress",
									"nameLocation": "1829:19:30",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1205,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1204,
												"mutability": "mutable",
												"name": "fallbackAddress",
												"nameLocation": "1857:15:30",
												"nodeType": "VariableDeclaration",
												"scope": 1216,
												"src": "1849:23:30",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1203,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1849:7:30",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1848:25:30"
									},
									"returnParameters": {
										"id": 1206,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1891:0:30"
									},
									"scope": 1217,
									"src": "1820:149:30",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1218,
							"src": "386:1585:30",
							"usedErrors": [
								18,
								20,
								669
							],
							"usedEvents": [
								441
							]
						}
					],
					"src": "33:1939:30"
				},
				"id": 30
			},
			"@solidstate/contracts/proxy/diamond/fallback/IDiamondFallback.sol": {
				"ast": {
					"absolutePath": "@solidstate/contracts/proxy/diamond/fallback/IDiamondFallback.sol",
					"exportedSymbols": {
						"IDiamondBase": [
							1118
						],
						"IDiamondFallback": [
							1236
						]
					},
					"id": 1237,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1219,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".18"
							],
							"nodeType": "PragmaDirective",
							"src": "33:24:31"
						},
						{
							"absolutePath": "@solidstate/contracts/proxy/diamond/base/IDiamondBase.sol",
							"file": "../base/IDiamondBase.sol",
							"id": 1221,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1237,
							"sourceUnit": 1119,
							"src": "59:56:31",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1220,
										"name": "IDiamondBase",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1118,
										"src": "68:12:31",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1222,
										"name": "IDiamondBase",
										"nameLocations": [
											"147:12:31"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1118,
										"src": "147:12:31"
									},
									"id": 1223,
									"nodeType": "InheritanceSpecifier",
									"src": "147:12:31"
								}
							],
							"canonicalName": "IDiamondFallback",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 1236,
							"linearizedBaseContracts": [
								1236,
								1118,
								673
							],
							"name": "IDiamondFallback",
							"nameLocation": "127:16:31",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1224,
										"nodeType": "StructuredDocumentation",
										"src": "166:141:31",
										"text": " @notice query the address of the fallback implementation\n @return fallbackAddress address of fallback implementation"
									},
									"functionSelector": "2c408059",
									"id": 1229,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getFallbackAddress",
									"nameLocation": "321:18:31",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1225,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "339:2:31"
									},
									"returnParameters": {
										"id": 1228,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1227,
												"mutability": "mutable",
												"name": "fallbackAddress",
												"nameLocation": "397:15:31",
												"nodeType": "VariableDeclaration",
												"scope": 1229,
												"src": "389:23:31",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1226,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "389:7:31",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "388:25:31"
									},
									"scope": 1236,
									"src": "312:102:31",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1230,
										"nodeType": "StructuredDocumentation",
										"src": "420:138:31",
										"text": " @notice set the address of the fallback implementation\n @param fallbackAddress address of fallback implementation"
									},
									"functionSelector": "91423765",
									"id": 1235,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setFallbackAddress",
									"nameLocation": "572:18:31",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1233,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1232,
												"mutability": "mutable",
												"name": "fallbackAddress",
												"nameLocation": "599:15:31",
												"nodeType": "VariableDeclaration",
												"scope": 1235,
												"src": "591:23:31",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1231,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "591:7:31",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "590:25:31"
									},
									"returnParameters": {
										"id": 1234,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "624:0:31"
									},
									"scope": 1236,
									"src": "563:62:31",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1237,
							"src": "117:510:31",
							"usedErrors": [
								669
							],
							"usedEvents": []
						}
					],
					"src": "33:595:31"
				},
				"id": 31
			},
			"@solidstate/contracts/proxy/diamond/readable/DiamondReadable.sol": {
				"ast": {
					"absolutePath": "@solidstate/contracts/proxy/diamond/readable/DiamondReadable.sol",
					"exportedSymbols": {
						"DiamondBaseStorage": [
							1111
						],
						"DiamondReadable": [
							1310
						],
						"DiamondReadableInternal": [
							1823
						],
						"IDiamondReadable": [
							1835
						],
						"IERC2535DiamondLoupe": [
							529
						]
					},
					"id": 1311,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1238,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".18"
							],
							"nodeType": "PragmaDirective",
							"src": "33:24:32"
						},
						{
							"absolutePath": "@solidstate/contracts/interfaces/IERC2535DiamondLoupe.sol",
							"file": "../../../interfaces/IERC2535DiamondLoupe.sol",
							"id": 1240,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1311,
							"sourceUnit": 530,
							"src": "59:84:32",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1239,
										"name": "IERC2535DiamondLoupe",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 529,
										"src": "68:20:32",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@solidstate/contracts/proxy/diamond/base/DiamondBaseStorage.sol",
							"file": "../base/DiamondBaseStorage.sol",
							"id": 1242,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1311,
							"sourceUnit": 1112,
							"src": "144:68:32",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1241,
										"name": "DiamondBaseStorage",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1111,
										"src": "153:18:32",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@solidstate/contracts/proxy/diamond/readable/IDiamondReadable.sol",
							"file": "./IDiamondReadable.sol",
							"id": 1244,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1311,
							"sourceUnit": 1836,
							"src": "213:58:32",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1243,
										"name": "IDiamondReadable",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1835,
										"src": "222:16:32",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@solidstate/contracts/proxy/diamond/readable/DiamondReadableInternal.sol",
							"file": "./DiamondReadableInternal.sol",
							"id": 1246,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1311,
							"sourceUnit": 1824,
							"src": "272:72:32",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1245,
										"name": "DiamondReadableInternal",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1823,
										"src": "281:23:32",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 1248,
										"name": "IDiamondReadable",
										"nameLocations": [
											"520:16:32"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1835,
										"src": "520:16:32"
									},
									"id": 1249,
									"nodeType": "InheritanceSpecifier",
									"src": "520:16:32"
								},
								{
									"baseName": {
										"id": 1250,
										"name": "DiamondReadableInternal",
										"nameLocations": [
											"538:23:32"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1823,
										"src": "538:23:32"
									},
									"id": 1251,
									"nodeType": "InheritanceSpecifier",
									"src": "538:23:32"
								}
							],
							"canonicalName": "DiamondReadable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1247,
								"nodeType": "StructuredDocumentation",
								"src": "346:136:32",
								"text": " @title EIP-2535 \"Diamond\" proxy introspection contract\n @dev derived from https://github.com/mudgen/diamond-2 (MIT license)"
							},
							"fullyImplemented": true,
							"id": 1310,
							"linearizedBaseContracts": [
								1310,
								1823,
								1835,
								1843,
								529,
								539
							],
							"name": "DiamondReadable",
							"nameLocation": "501:15:32",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"baseFunctions": [
										504
									],
									"body": {
										"id": 1264,
										"nodeType": "Block",
										"src": "695:42:32",
										"statements": [
											{
												"expression": {
													"id": 1262,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1259,
														"name": "diamondFacets",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1257,
														"src": "705:13:32",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_struct$_Facet_$538_memory_ptr_$dyn_memory_ptr",
															"typeString": "struct IERC2535DiamondLoupeInternal.Facet memory[] memory"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 1260,
															"name": "_facets",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1551,
															"src": "721:7:32",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_array$_t_struct$_Facet_$538_memory_ptr_$dyn_memory_ptr_$",
																"typeString": "function () view returns (struct IERC2535DiamondLoupeInternal.Facet memory[] memory)"
															}
														},
														"id": 1261,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "721:9:32",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_struct$_Facet_$538_memory_ptr_$dyn_memory_ptr",
															"typeString": "struct IERC2535DiamondLoupeInternal.Facet memory[] memory"
														}
													},
													"src": "705:25:32",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_Facet_$538_memory_ptr_$dyn_memory_ptr",
														"typeString": "struct IERC2535DiamondLoupeInternal.Facet memory[] memory"
													}
												},
												"id": 1263,
												"nodeType": "ExpressionStatement",
												"src": "705:25:32"
											}
										]
									},
									"documentation": {
										"id": 1252,
										"nodeType": "StructuredDocumentation",
										"src": "568:51:32",
										"text": " @inheritdoc IERC2535DiamondLoupe"
									},
									"functionSelector": "7a0ed627",
									"id": 1265,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "facets",
									"nameLocation": "633:6:32",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1253,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "639:2:32"
									},
									"returnParameters": {
										"id": 1258,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1257,
												"mutability": "mutable",
												"name": "diamondFacets",
												"nameLocation": "680:13:32",
												"nodeType": "VariableDeclaration",
												"scope": 1265,
												"src": "665:28:32",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_struct$_Facet_$538_memory_ptr_$dyn_memory_ptr",
													"typeString": "struct IERC2535DiamondLoupeInternal.Facet[]"
												},
												"typeName": {
													"baseType": {
														"id": 1255,
														"nodeType": "UserDefinedTypeName",
														"pathNode": {
															"id": 1254,
															"name": "Facet",
															"nameLocations": [
																"665:5:32"
															],
															"nodeType": "IdentifierPath",
															"referencedDeclaration": 538,
															"src": "665:5:32"
														},
														"referencedDeclaration": 538,
														"src": "665:5:32",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Facet_$538_storage_ptr",
															"typeString": "struct IERC2535DiamondLoupeInternal.Facet"
														}
													},
													"id": 1256,
													"nodeType": "ArrayTypeName",
													"src": "665:7:32",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_Facet_$538_storage_$dyn_storage_ptr",
														"typeString": "struct IERC2535DiamondLoupeInternal.Facet[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "664:30:32"
									},
									"scope": 1310,
									"src": "624:113:32",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										513
									],
									"body": {
										"id": 1280,
										"nodeType": "Block",
										"src": "910:59:32",
										"statements": [
											{
												"expression": {
													"id": 1278,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1274,
														"name": "selectors",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1272,
														"src": "920:9:32",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_bytes4_$dyn_memory_ptr",
															"typeString": "bytes4[] memory"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1276,
																"name": "facet",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1268,
																"src": "956:5:32",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 1275,
															"name": "_facetFunctionSelectors",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1661,
															"src": "932:23:32",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_array$_t_bytes4_$dyn_memory_ptr_$",
																"typeString": "function (address) view returns (bytes4[] memory)"
															}
														},
														"id": 1277,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "932:30:32",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_bytes4_$dyn_memory_ptr",
															"typeString": "bytes4[] memory"
														}
													},
													"src": "920:42:32",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_bytes4_$dyn_memory_ptr",
														"typeString": "bytes4[] memory"
													}
												},
												"id": 1279,
												"nodeType": "ExpressionStatement",
												"src": "920:42:32"
											}
										]
									},
									"documentation": {
										"id": 1266,
										"nodeType": "StructuredDocumentation",
										"src": "743:51:32",
										"text": " @inheritdoc IERC2535DiamondLoupe"
									},
									"functionSelector": "adfca15e",
									"id": 1281,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "facetFunctionSelectors",
									"nameLocation": "808:22:32",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1269,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1268,
												"mutability": "mutable",
												"name": "facet",
												"nameLocation": "848:5:32",
												"nodeType": "VariableDeclaration",
												"scope": 1281,
												"src": "840:13:32",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1267,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "840:7:32",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "830:29:32"
									},
									"returnParameters": {
										"id": 1273,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1272,
												"mutability": "mutable",
												"name": "selectors",
												"nameLocation": "899:9:32",
												"nodeType": "VariableDeclaration",
												"scope": 1281,
												"src": "883:25:32",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_bytes4_$dyn_memory_ptr",
													"typeString": "bytes4[]"
												},
												"typeName": {
													"baseType": {
														"id": 1270,
														"name": "bytes4",
														"nodeType": "ElementaryTypeName",
														"src": "883:6:32",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"id": 1271,
													"nodeType": "ArrayTypeName",
													"src": "883:8:32",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_bytes4_$dyn_storage_ptr",
														"typeString": "bytes4[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "882:27:32"
									},
									"scope": 1310,
									"src": "799:170:32",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										520
									],
									"body": {
										"id": 1293,
										"nodeType": "Block",
										"src": "1136:46:32",
										"statements": [
											{
												"expression": {
													"id": 1291,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1288,
														"name": "addresses",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1286,
														"src": "1146:9:32",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
															"typeString": "address[] memory"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 1289,
															"name": "_facetAddresses",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1798,
															"src": "1158:15:32",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_array$_t_address_$dyn_memory_ptr_$",
																"typeString": "function () view returns (address[] memory)"
															}
														},
														"id": 1290,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1158:17:32",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
															"typeString": "address[] memory"
														}
													},
													"src": "1146:29:32",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
														"typeString": "address[] memory"
													}
												},
												"id": 1292,
												"nodeType": "ExpressionStatement",
												"src": "1146:29:32"
											}
										]
									},
									"documentation": {
										"id": 1282,
										"nodeType": "StructuredDocumentation",
										"src": "975:51:32",
										"text": " @inheritdoc IERC2535DiamondLoupe"
									},
									"functionSelector": "52ef6b2c",
									"id": 1294,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "facetAddresses",
									"nameLocation": "1040:14:32",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1283,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1054:2:32"
									},
									"returnParameters": {
										"id": 1287,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1286,
												"mutability": "mutable",
												"name": "addresses",
												"nameLocation": "1121:9:32",
												"nodeType": "VariableDeclaration",
												"scope": 1294,
												"src": "1104:26:32",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 1284,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "1104:7:32",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 1285,
													"nodeType": "ArrayTypeName",
													"src": "1104:9:32",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1103:28:32"
									},
									"scope": 1310,
									"src": "1031:151:32",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										528
									],
									"body": {
										"id": 1308,
										"nodeType": "Block",
										"src": "1335:48:32",
										"statements": [
											{
												"expression": {
													"id": 1306,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1302,
														"name": "facet",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1300,
														"src": "1345:5:32",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1304,
																"name": "selector",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1297,
																"src": "1367:8:32",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															],
															"id": 1303,
															"name": "_facetAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1822,
															"src": "1353:13:32",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_bytes4_$returns$_t_address_$",
																"typeString": "function (bytes4) view returns (address)"
															}
														},
														"id": 1305,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1353:23:32",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1345:31:32",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1307,
												"nodeType": "ExpressionStatement",
												"src": "1345:31:32"
											}
										]
									},
									"documentation": {
										"id": 1295,
										"nodeType": "StructuredDocumentation",
										"src": "1188:51:32",
										"text": " @inheritdoc IERC2535DiamondLoupe"
									},
									"functionSelector": "cdffacc6",
									"id": 1309,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "facetAddress",
									"nameLocation": "1253:12:32",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1298,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1297,
												"mutability": "mutable",
												"name": "selector",
												"nameLocation": "1282:8:32",
												"nodeType": "VariableDeclaration",
												"scope": 1309,
												"src": "1275:15:32",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1296,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "1275:6:32",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1265:31:32"
									},
									"returnParameters": {
										"id": 1301,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1300,
												"mutability": "mutable",
												"name": "facet",
												"nameLocation": "1328:5:32",
												"nodeType": "VariableDeclaration",
												"scope": 1309,
												"src": "1320:13:32",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1299,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1320:7:32",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1319:15:32"
									},
									"scope": 1310,
									"src": "1244:139:32",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1311,
							"src": "483:902:32",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "33:1353:32"
				},
				"id": 32
			},
			"@solidstate/contracts/proxy/diamond/readable/DiamondReadableInternal.sol": {
				"ast": {
					"absolutePath": "@solidstate/contracts/proxy/diamond/readable/DiamondReadableInternal.sol",
					"exportedSymbols": {
						"DiamondBaseStorage": [
							1111
						],
						"DiamondReadableInternal": [
							1823
						],
						"IDiamondReadableInternal": [
							1843
						]
					},
					"id": 1824,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1312,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".18"
							],
							"nodeType": "PragmaDirective",
							"src": "33:24:33"
						},
						{
							"absolutePath": "@solidstate/contracts/proxy/diamond/base/DiamondBaseStorage.sol",
							"file": "../base/DiamondBaseStorage.sol",
							"id": 1314,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1824,
							"sourceUnit": 1112,
							"src": "59:68:33",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1313,
										"name": "DiamondBaseStorage",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1111,
										"src": "68:18:33",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@solidstate/contracts/proxy/diamond/readable/IDiamondReadableInternal.sol",
							"file": "./IDiamondReadableInternal.sol",
							"id": 1316,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1824,
							"sourceUnit": 1844,
							"src": "128:74:33",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1315,
										"name": "IDiamondReadableInternal",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1843,
										"src": "137:24:33",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 1318,
										"name": "IDiamondReadableInternal",
										"nameLocations": [
											"405:24:33"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1843,
										"src": "405:24:33"
									},
									"id": 1319,
									"nodeType": "InheritanceSpecifier",
									"src": "405:24:33"
								}
							],
							"canonicalName": "DiamondReadableInternal",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1317,
								"nodeType": "StructuredDocumentation",
								"src": "204:155:33",
								"text": " @title EIP-2535 \"Diamond\" proxy introspection contract internal functions\n @dev derived from https://github.com/mudgen/diamond-2 (MIT license)"
							},
							"fullyImplemented": true,
							"id": 1823,
							"linearizedBaseContracts": [
								1823,
								1843,
								539
							],
							"name": "DiamondReadableInternal",
							"nameLocation": "378:23:33",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1550,
										"nodeType": "Block",
										"src": "634:2478:33",
										"statements": [
											{
												"assignments": [
													1331
												],
												"declarations": [
													{
														"constant": false,
														"id": 1331,
														"mutability": "mutable",
														"name": "l",
														"nameLocation": "678:1:33",
														"nodeType": "VariableDeclaration",
														"scope": 1550,
														"src": "644:35:33",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Layout_$1093_storage_ptr",
															"typeString": "struct DiamondBaseStorage.Layout"
														},
														"typeName": {
															"id": 1330,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1329,
																"name": "DiamondBaseStorage.Layout",
																"nameLocations": [
																	"644:18:33",
																	"663:6:33"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 1093,
																"src": "644:25:33"
															},
															"referencedDeclaration": 1093,
															"src": "644:25:33",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Layout_$1093_storage_ptr",
																"typeString": "struct DiamondBaseStorage.Layout"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1335,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 1332,
															"name": "DiamondBaseStorage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1111,
															"src": "682:18:33",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_DiamondBaseStorage_$1111_$",
																"typeString": "type(library DiamondBaseStorage)"
															}
														},
														"id": 1333,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "701:6:33",
														"memberName": "layout",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1110,
														"src": "682:25:33",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_Layout_$1093_storage_ptr_$",
															"typeString": "function () pure returns (struct DiamondBaseStorage.Layout storage pointer)"
														}
													},
													"id": 1334,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "682:27:33",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Layout_$1093_storage_ptr",
														"typeString": "struct DiamondBaseStorage.Layout storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "644:65:33"
											},
											{
												"expression": {
													"id": 1344,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1336,
														"name": "diamondFacets",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1325,
														"src": "720:13:33",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_struct$_Facet_$538_memory_ptr_$dyn_memory_ptr",
															"typeString": "struct IERC2535DiamondLoupeInternal.Facet memory[] memory"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"expression": {
																	"id": 1341,
																	"name": "l",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1331,
																	"src": "748:1:33",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Layout_$1093_storage_ptr",
																		"typeString": "struct DiamondBaseStorage.Layout storage pointer"
																	}
																},
																"id": 1342,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "750:13:33",
																"memberName": "selectorCount",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1086,
																"src": "748:15:33",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint16",
																	"typeString": "uint16"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint16",
																	"typeString": "uint16"
																}
															],
															"id": 1340,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "NewExpression",
															"src": "736:11:33",
															"typeDescriptions": {
																"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_struct$_Facet_$538_memory_ptr_$dyn_memory_ptr_$",
																"typeString": "function (uint256) pure returns (struct IERC2535DiamondLoupeInternal.Facet memory[] memory)"
															},
															"typeName": {
																"baseType": {
																	"id": 1338,
																	"nodeType": "UserDefinedTypeName",
																	"pathNode": {
																		"id": 1337,
																		"name": "Facet",
																		"nameLocations": [
																			"740:5:33"
																		],
																		"nodeType": "IdentifierPath",
																		"referencedDeclaration": 538,
																		"src": "740:5:33"
																	},
																	"referencedDeclaration": 538,
																	"src": "740:5:33",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Facet_$538_storage_ptr",
																		"typeString": "struct IERC2535DiamondLoupeInternal.Facet"
																	}
																},
																"id": 1339,
																"nodeType": "ArrayTypeName",
																"src": "740:7:33",
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_struct$_Facet_$538_storage_$dyn_storage_ptr",
																	"typeString": "struct IERC2535DiamondLoupeInternal.Facet[]"
																}
															}
														},
														"id": 1343,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "736:28:33",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_struct$_Facet_$538_memory_ptr_$dyn_memory_ptr",
															"typeString": "struct IERC2535DiamondLoupeInternal.Facet memory[] memory"
														}
													},
													"src": "720:44:33",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_Facet_$538_memory_ptr_$dyn_memory_ptr",
														"typeString": "struct IERC2535DiamondLoupeInternal.Facet memory[] memory"
													}
												},
												"id": 1345,
												"nodeType": "ExpressionStatement",
												"src": "720:44:33"
											},
											{
												"assignments": [
													1350
												],
												"declarations": [
													{
														"constant": false,
														"id": 1350,
														"mutability": "mutable",
														"name": "numFacetSelectors",
														"nameLocation": "790:17:33",
														"nodeType": "VariableDeclaration",
														"scope": 1550,
														"src": "775:32:33",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint8_$dyn_memory_ptr",
															"typeString": "uint8[]"
														},
														"typeName": {
															"baseType": {
																"id": 1348,
																"name": "uint8",
																"nodeType": "ElementaryTypeName",
																"src": "775:5:33",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"id": 1349,
															"nodeType": "ArrayTypeName",
															"src": "775:7:33",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint8_$dyn_storage_ptr",
																"typeString": "uint8[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1357,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 1354,
																"name": "l",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1331,
																"src": "822:1:33",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Layout_$1093_storage_ptr",
																	"typeString": "struct DiamondBaseStorage.Layout storage pointer"
																}
															},
															"id": 1355,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "824:13:33",
															"memberName": "selectorCount",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1086,
															"src": "822:15:33",
															"typeDescriptions": {
																"typeIdentifier": "t_uint16",
																"typeString": "uint16"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint16",
																"typeString": "uint16"
															}
														],
														"id": 1353,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "810:11:33",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint8_$dyn_memory_ptr_$",
															"typeString": "function (uint256) pure returns (uint8[] memory)"
														},
														"typeName": {
															"baseType": {
																"id": 1351,
																"name": "uint8",
																"nodeType": "ElementaryTypeName",
																"src": "814:5:33",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"id": 1352,
															"nodeType": "ArrayTypeName",
															"src": "814:7:33",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint8_$dyn_storage_ptr",
																"typeString": "uint8[]"
															}
														}
													},
													"id": 1356,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "810:28:33",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint8_$dyn_memory_ptr",
														"typeString": "uint8[] memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "775:63:33"
											},
											{
												"assignments": [
													1359
												],
												"declarations": [
													{
														"constant": false,
														"id": 1359,
														"mutability": "mutable",
														"name": "numFacets",
														"nameLocation": "856:9:33",
														"nodeType": "VariableDeclaration",
														"scope": 1550,
														"src": "848:17:33",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1358,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "848:7:33",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1360,
												"nodeType": "VariableDeclarationStatement",
												"src": "848:17:33"
											},
											{
												"assignments": [
													1362
												],
												"declarations": [
													{
														"constant": false,
														"id": 1362,
														"mutability": "mutable",
														"name": "selectorIndex",
														"nameLocation": "883:13:33",
														"nodeType": "VariableDeclaration",
														"scope": 1550,
														"src": "875:21:33",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1361,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "875:7:33",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1363,
												"nodeType": "VariableDeclarationStatement",
												"src": "875:21:33"
											},
											{
												"body": {
													"id": 1519,
													"nodeType": "Block",
													"src": "1020:1611:33",
													"statements": [
														{
															"assignments": [
																1375
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1375,
																	"mutability": "mutable",
																	"name": "slot",
																	"nameLocation": "1042:4:33",
																	"nodeType": "VariableDeclaration",
																	"scope": 1519,
																	"src": "1034:12:33",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	"typeName": {
																		"id": 1374,
																		"name": "bytes32",
																		"nodeType": "ElementaryTypeName",
																		"src": "1034:7:33",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1380,
															"initialValue": {
																"baseExpression": {
																	"expression": {
																		"id": 1376,
																		"name": "l",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1331,
																		"src": "1049:1:33",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Layout_$1093_storage_ptr",
																			"typeString": "struct DiamondBaseStorage.Layout storage pointer"
																		}
																	},
																	"id": 1377,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1051:13:33",
																	"memberName": "selectorSlots",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1090,
																	"src": "1049:15:33",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_uint256_$_t_bytes32_$",
																		"typeString": "mapping(uint256 => bytes32)"
																	}
																},
																"id": 1379,
																"indexExpression": {
																	"id": 1378,
																	"name": "slotIndex",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1365,
																	"src": "1065:9:33",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "1049:26:33",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "1034:41:33"
														},
														{
															"body": {
																"id": 1517,
																"nodeType": "Block",
																"src": "1228:1393:33",
																"statements": [
																	{
																		"expression": {
																			"id": 1391,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "UnaryOperation",
																			"operator": "++",
																			"prefix": false,
																			"src": "1246:15:33",
																			"subExpression": {
																				"id": 1390,
																				"name": "selectorIndex",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1362,
																				"src": "1246:13:33",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1392,
																		"nodeType": "ExpressionStatement",
																		"src": "1246:15:33"
																	},
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1396,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1393,
																				"name": "selectorIndex",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1362,
																				"src": "1284:13:33",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": ">",
																			"rightExpression": {
																				"expression": {
																					"id": 1394,
																					"name": "l",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1331,
																					"src": "1300:1:33",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_Layout_$1093_storage_ptr",
																						"typeString": "struct DiamondBaseStorage.Layout storage pointer"
																					}
																				},
																				"id": 1395,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "1302:13:33",
																				"memberName": "selectorCount",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 1086,
																				"src": "1300:15:33",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint16",
																					"typeString": "uint16"
																				}
																			},
																			"src": "1284:31:33",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"id": 1399,
																		"nodeType": "IfStatement",
																		"src": "1280:83:33",
																		"trueBody": {
																			"id": 1398,
																			"nodeType": "Block",
																			"src": "1317:46:33",
																			"statements": [
																				{
																					"id": 1397,
																					"nodeType": "Break",
																					"src": "1339:5:33"
																				}
																			]
																		}
																	},
																	{
																		"assignments": [
																			1401
																		],
																		"declarations": [
																			{
																				"constant": false,
																				"id": 1401,
																				"mutability": "mutable",
																				"name": "selector",
																				"nameLocation": "1388:8:33",
																				"nodeType": "VariableDeclaration",
																				"scope": 1517,
																				"src": "1381:15:33",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes4",
																					"typeString": "bytes4"
																				},
																				"typeName": {
																					"id": 1400,
																					"name": "bytes4",
																					"nodeType": "ElementaryTypeName",
																					"src": "1381:6:33",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes4",
																						"typeString": "bytes4"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"id": 1411,
																		"initialValue": {
																			"arguments": [
																				{
																					"commonType": {
																						"typeIdentifier": "t_bytes32",
																						"typeString": "bytes32"
																					},
																					"id": 1409,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 1404,
																						"name": "slot",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1375,
																						"src": "1406:4:33",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes32",
																							"typeString": "bytes32"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "<<",
																					"rightExpression": {
																						"components": [
																							{
																								"commonType": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								},
																								"id": 1407,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"leftExpression": {
																									"id": 1405,
																									"name": "selectorSlotIndex",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 1382,
																									"src": "1415:17:33",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"nodeType": "BinaryOperation",
																								"operator": "<<",
																								"rightExpression": {
																									"hexValue": "35",
																									"id": 1406,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"kind": "number",
																									"lValueRequested": false,
																									"nodeType": "Literal",
																									"src": "1436:1:33",
																									"typeDescriptions": {
																										"typeIdentifier": "t_rational_5_by_1",
																										"typeString": "int_const 5"
																									},
																									"value": "5"
																								},
																								"src": "1415:22:33",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							}
																						],
																						"id": 1408,
																						"isConstant": false,
																						"isInlineArray": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"nodeType": "TupleExpression",
																						"src": "1414:24:33",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "1406:32:33",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes32",
																						"typeString": "bytes32"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_bytes32",
																						"typeString": "bytes32"
																					}
																				],
																				"id": 1403,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "1399:6:33",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_bytes4_$",
																					"typeString": "type(bytes4)"
																				},
																				"typeName": {
																					"id": 1402,
																					"name": "bytes4",
																					"nodeType": "ElementaryTypeName",
																					"src": "1399:6:33",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 1410,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "1399:40:33",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes4",
																				"typeString": "bytes4"
																			}
																		},
																		"nodeType": "VariableDeclarationStatement",
																		"src": "1381:58:33"
																	},
																	{
																		"assignments": [
																			1413
																		],
																		"declarations": [
																			{
																				"constant": false,
																				"id": 1413,
																				"mutability": "mutable",
																				"name": "facet",
																				"nameLocation": "1465:5:33",
																				"nodeType": "VariableDeclaration",
																				"scope": 1517,
																				"src": "1457:13:33",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				"typeName": {
																					"id": 1412,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "1457:7:33",
																					"stateMutability": "nonpayable",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"id": 1424,
																		"initialValue": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"baseExpression": {
																								"expression": {
																									"id": 1418,
																									"name": "l",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 1331,
																									"src": "1489:1:33",
																									"typeDescriptions": {
																										"typeIdentifier": "t_struct$_Layout_$1093_storage_ptr",
																										"typeString": "struct DiamondBaseStorage.Layout storage pointer"
																									}
																								},
																								"id": 1419,
																								"isConstant": false,
																								"isLValue": true,
																								"isPure": false,
																								"lValueRequested": false,
																								"memberLocation": "1491:6:33",
																								"memberName": "facets",
																								"nodeType": "MemberAccess",
																								"referencedDeclaration": 1084,
																								"src": "1489:8:33",
																								"typeDescriptions": {
																									"typeIdentifier": "t_mapping$_t_bytes4_$_t_bytes32_$",
																									"typeString": "mapping(bytes4 => bytes32)"
																								}
																							},
																							"id": 1421,
																							"indexExpression": {
																								"id": 1420,
																								"name": "selector",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1401,
																								"src": "1498:8:33",
																								"typeDescriptions": {
																									"typeIdentifier": "t_bytes4",
																									"typeString": "bytes4"
																								}
																							},
																							"isConstant": false,
																							"isLValue": true,
																							"isPure": false,
																							"lValueRequested": false,
																							"nodeType": "IndexAccess",
																							"src": "1489:18:33",
																							"typeDescriptions": {
																								"typeIdentifier": "t_bytes32",
																								"typeString": "bytes32"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_bytes32",
																								"typeString": "bytes32"
																							}
																						],
																						"id": 1417,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "1481:7:33",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_bytes20_$",
																							"typeString": "type(bytes20)"
																						},
																						"typeName": {
																							"id": 1416,
																							"name": "bytes20",
																							"nodeType": "ElementaryTypeName",
																							"src": "1481:7:33",
																							"typeDescriptions": {}
																						}
																					},
																					"id": 1422,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "typeConversion",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "1481:27:33",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes20",
																						"typeString": "bytes20"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_bytes20",
																						"typeString": "bytes20"
																					}
																				],
																				"id": 1415,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "1473:7:33",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 1414,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "1473:7:33",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 1423,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "1473:36:33",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"nodeType": "VariableDeclarationStatement",
																		"src": "1457:52:33"
																	},
																	{
																		"assignments": [
																			1426
																		],
																		"declarations": [
																			{
																				"constant": false,
																				"id": 1426,
																				"mutability": "mutable",
																				"name": "continueLoop",
																				"nameLocation": "1533:12:33",
																				"nodeType": "VariableDeclaration",
																				"scope": 1517,
																				"src": "1528:17:33",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				},
																				"typeName": {
																					"id": 1425,
																					"name": "bool",
																					"nodeType": "ElementaryTypeName",
																					"src": "1528:4:33",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"id": 1427,
																		"nodeType": "VariableDeclarationStatement",
																		"src": "1528:17:33"
																	},
																	{
																		"body": {
																			"id": 1474,
																			"nodeType": "Block",
																			"src": "1627:570:33",
																			"statements": [
																				{
																					"condition": {
																						"commonType": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						},
																						"id": 1442,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftExpression": {
																							"expression": {
																								"baseExpression": {
																									"id": 1437,
																									"name": "diamondFacets",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 1325,
																									"src": "1653:13:33",
																									"typeDescriptions": {
																										"typeIdentifier": "t_array$_t_struct$_Facet_$538_memory_ptr_$dyn_memory_ptr",
																										"typeString": "struct IERC2535DiamondLoupeInternal.Facet memory[] memory"
																									}
																								},
																								"id": 1439,
																								"indexExpression": {
																									"id": 1438,
																									"name": "facetIndex",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 1429,
																									"src": "1667:10:33",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"isConstant": false,
																								"isLValue": true,
																								"isPure": false,
																								"lValueRequested": false,
																								"nodeType": "IndexAccess",
																								"src": "1653:25:33",
																								"typeDescriptions": {
																									"typeIdentifier": "t_struct$_Facet_$538_memory_ptr",
																									"typeString": "struct IERC2535DiamondLoupeInternal.Facet memory"
																								}
																							},
																							"id": 1440,
																							"isConstant": false,
																							"isLValue": true,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberLocation": "1679:6:33",
																							"memberName": "target",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 534,
																							"src": "1653:32:33",
																							"typeDescriptions": {
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "==",
																						"rightExpression": {
																							"id": 1441,
																							"name": "facet",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1413,
																							"src": "1689:5:33",
																							"typeDescriptions": {
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						},
																						"src": "1653:41:33",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bool",
																							"typeString": "bool"
																						}
																					},
																					"id": 1473,
																					"nodeType": "IfStatement",
																					"src": "1649:530:33",
																					"trueBody": {
																						"id": 1472,
																						"nodeType": "Block",
																						"src": "1696:483:33",
																						"statements": [
																							{
																								"expression": {
																									"id": 1452,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": false,
																									"lValueRequested": false,
																									"leftHandSide": {
																										"baseExpression": {
																											"expression": {
																												"baseExpression": {
																													"id": 1443,
																													"name": "diamondFacets",
																													"nodeType": "Identifier",
																													"overloadedDeclarations": [],
																													"referencedDeclaration": 1325,
																													"src": "1722:13:33",
																													"typeDescriptions": {
																														"typeIdentifier": "t_array$_t_struct$_Facet_$538_memory_ptr_$dyn_memory_ptr",
																														"typeString": "struct IERC2535DiamondLoupeInternal.Facet memory[] memory"
																													}
																												},
																												"id": 1445,
																												"indexExpression": {
																													"id": 1444,
																													"name": "facetIndex",
																													"nodeType": "Identifier",
																													"overloadedDeclarations": [],
																													"referencedDeclaration": 1429,
																													"src": "1736:10:33",
																													"typeDescriptions": {
																														"typeIdentifier": "t_uint256",
																														"typeString": "uint256"
																													}
																												},
																												"isConstant": false,
																												"isLValue": true,
																												"isPure": false,
																												"lValueRequested": false,
																												"nodeType": "IndexAccess",
																												"src": "1722:25:33",
																												"typeDescriptions": {
																													"typeIdentifier": "t_struct$_Facet_$538_memory_ptr",
																													"typeString": "struct IERC2535DiamondLoupeInternal.Facet memory"
																												}
																											},
																											"id": 1446,
																											"isConstant": false,
																											"isLValue": true,
																											"isPure": false,
																											"lValueRequested": false,
																											"memberLocation": "1748:9:33",
																											"memberName": "selectors",
																											"nodeType": "MemberAccess",
																											"referencedDeclaration": 537,
																											"src": "1722:35:33",
																											"typeDescriptions": {
																												"typeIdentifier": "t_array$_t_bytes4_$dyn_memory_ptr",
																												"typeString": "bytes4[] memory"
																											}
																										},
																										"id": 1450,
																										"indexExpression": {
																											"baseExpression": {
																												"id": 1447,
																												"name": "numFacetSelectors",
																												"nodeType": "Identifier",
																												"overloadedDeclarations": [],
																												"referencedDeclaration": 1350,
																												"src": "1787:17:33",
																												"typeDescriptions": {
																													"typeIdentifier": "t_array$_t_uint8_$dyn_memory_ptr",
																													"typeString": "uint8[] memory"
																												}
																											},
																											"id": 1449,
																											"indexExpression": {
																												"id": 1448,
																												"name": "facetIndex",
																												"nodeType": "Identifier",
																												"overloadedDeclarations": [],
																												"referencedDeclaration": 1429,
																												"src": "1805:10:33",
																												"typeDescriptions": {
																													"typeIdentifier": "t_uint256",
																													"typeString": "uint256"
																												}
																											},
																											"isConstant": false,
																											"isLValue": true,
																											"isPure": false,
																											"lValueRequested": false,
																											"nodeType": "IndexAccess",
																											"src": "1787:29:33",
																											"typeDescriptions": {
																												"typeIdentifier": "t_uint8",
																												"typeString": "uint8"
																											}
																										},
																										"isConstant": false,
																										"isLValue": true,
																										"isPure": false,
																										"lValueRequested": true,
																										"nodeType": "IndexAccess",
																										"src": "1722:120:33",
																										"typeDescriptions": {
																											"typeIdentifier": "t_bytes4",
																											"typeString": "bytes4"
																										}
																									},
																									"nodeType": "Assignment",
																									"operator": "=",
																									"rightHandSide": {
																										"id": 1451,
																										"name": "selector",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 1401,
																										"src": "1845:8:33",
																										"typeDescriptions": {
																											"typeIdentifier": "t_bytes4",
																											"typeString": "bytes4"
																										}
																									},
																									"src": "1722:131:33",
																									"typeDescriptions": {
																										"typeIdentifier": "t_bytes4",
																										"typeString": "bytes4"
																									}
																								},
																								"id": 1453,
																								"nodeType": "ExpressionStatement",
																								"src": "1722:131:33"
																							},
																							{
																								"expression": {
																									"arguments": [
																										{
																											"commonType": {
																												"typeIdentifier": "t_uint8",
																												"typeString": "uint8"
																											},
																											"id": 1459,
																											"isConstant": false,
																											"isLValue": false,
																											"isPure": false,
																											"lValueRequested": false,
																											"leftExpression": {
																												"baseExpression": {
																													"id": 1455,
																													"name": "numFacetSelectors",
																													"nodeType": "Identifier",
																													"overloadedDeclarations": [],
																													"referencedDeclaration": 1350,
																													"src": "1987:17:33",
																													"typeDescriptions": {
																														"typeIdentifier": "t_array$_t_uint8_$dyn_memory_ptr",
																														"typeString": "uint8[] memory"
																													}
																												},
																												"id": 1457,
																												"indexExpression": {
																													"id": 1456,
																													"name": "facetIndex",
																													"nodeType": "Identifier",
																													"overloadedDeclarations": [],
																													"referencedDeclaration": 1429,
																													"src": "2005:10:33",
																													"typeDescriptions": {
																														"typeIdentifier": "t_uint256",
																														"typeString": "uint256"
																													}
																												},
																												"isConstant": false,
																												"isLValue": true,
																												"isPure": false,
																												"lValueRequested": false,
																												"nodeType": "IndexAccess",
																												"src": "1987:29:33",
																												"typeDescriptions": {
																													"typeIdentifier": "t_uint8",
																													"typeString": "uint8"
																												}
																											},
																											"nodeType": "BinaryOperation",
																											"operator": "<",
																											"rightExpression": {
																												"hexValue": "323535",
																												"id": 1458,
																												"isConstant": false,
																												"isLValue": false,
																												"isPure": true,
																												"kind": "number",
																												"lValueRequested": false,
																												"nodeType": "Literal",
																												"src": "2019:3:33",
																												"typeDescriptions": {
																													"typeIdentifier": "t_rational_255_by_1",
																													"typeString": "int_const 255"
																												},
																												"value": "255"
																											},
																											"src": "1987:35:33",
																											"typeDescriptions": {
																												"typeIdentifier": "t_bool",
																												"typeString": "bool"
																											}
																										}
																									],
																									"expression": {
																										"argumentTypes": [
																											{
																												"typeIdentifier": "t_bool",
																												"typeString": "bool"
																											}
																										],
																										"id": 1454,
																										"name": "require",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [
																											4294967278,
																											4294967278
																										],
																										"referencedDeclaration": 4294967278,
																										"src": "1979:7:33",
																										"typeDescriptions": {
																											"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
																											"typeString": "function (bool) pure"
																										}
																									},
																									"id": 1460,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": false,
																									"kind": "functionCall",
																									"lValueRequested": false,
																									"nameLocations": [],
																									"names": [],
																									"nodeType": "FunctionCall",
																									"src": "1979:44:33",
																									"tryCall": false,
																									"typeDescriptions": {
																										"typeIdentifier": "t_tuple$__$",
																										"typeString": "tuple()"
																									}
																								},
																								"id": 1461,
																								"nodeType": "ExpressionStatement",
																								"src": "1979:44:33"
																							},
																							{
																								"expression": {
																									"id": 1465,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": false,
																									"lValueRequested": false,
																									"nodeType": "UnaryOperation",
																									"operator": "++",
																									"prefix": false,
																									"src": "2049:31:33",
																									"subExpression": {
																										"baseExpression": {
																											"id": 1462,
																											"name": "numFacetSelectors",
																											"nodeType": "Identifier",
																											"overloadedDeclarations": [],
																											"referencedDeclaration": 1350,
																											"src": "2049:17:33",
																											"typeDescriptions": {
																												"typeIdentifier": "t_array$_t_uint8_$dyn_memory_ptr",
																												"typeString": "uint8[] memory"
																											}
																										},
																										"id": 1464,
																										"indexExpression": {
																											"id": 1463,
																											"name": "facetIndex",
																											"nodeType": "Identifier",
																											"overloadedDeclarations": [],
																											"referencedDeclaration": 1429,
																											"src": "2067:10:33",
																											"typeDescriptions": {
																												"typeIdentifier": "t_uint256",
																												"typeString": "uint256"
																											}
																										},
																										"isConstant": false,
																										"isLValue": true,
																										"isPure": false,
																										"lValueRequested": true,
																										"nodeType": "IndexAccess",
																										"src": "2049:29:33",
																										"typeDescriptions": {
																											"typeIdentifier": "t_uint8",
																											"typeString": "uint8"
																										}
																									},
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint8",
																										"typeString": "uint8"
																									}
																								},
																								"id": 1466,
																								"nodeType": "ExpressionStatement",
																								"src": "2049:31:33"
																							},
																							{
																								"expression": {
																									"id": 1469,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": false,
																									"lValueRequested": false,
																									"leftHandSide": {
																										"id": 1467,
																										"name": "continueLoop",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 1426,
																										"src": "2106:12:33",
																										"typeDescriptions": {
																											"typeIdentifier": "t_bool",
																											"typeString": "bool"
																										}
																									},
																									"nodeType": "Assignment",
																									"operator": "=",
																									"rightHandSide": {
																										"hexValue": "74727565",
																										"id": 1468,
																										"isConstant": false,
																										"isLValue": false,
																										"isPure": true,
																										"kind": "bool",
																										"lValueRequested": false,
																										"nodeType": "Literal",
																										"src": "2121:4:33",
																										"typeDescriptions": {
																											"typeIdentifier": "t_bool",
																											"typeString": "bool"
																										},
																										"value": "true"
																									},
																									"src": "2106:19:33",
																									"typeDescriptions": {
																										"typeIdentifier": "t_bool",
																										"typeString": "bool"
																									}
																								},
																								"id": 1470,
																								"nodeType": "ExpressionStatement",
																								"src": "2106:19:33"
																							},
																							{
																								"id": 1471,
																								"nodeType": "Break",
																								"src": "2151:5:33"
																							}
																						]
																					}
																				}
																			]
																		},
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1433,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1431,
																				"name": "facetIndex",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1429,
																				"src": "1589:10:33",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "<",
																			"rightExpression": {
																				"id": 1432,
																				"name": "numFacets",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1359,
																				"src": "1602:9:33",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "1589:22:33",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"id": 1475,
																		"initializationExpression": {
																			"assignments": [
																				1429
																			],
																			"declarations": [
																				{
																					"constant": false,
																					"id": 1429,
																					"mutability": "mutable",
																					"name": "facetIndex",
																					"nameLocation": "1577:10:33",
																					"nodeType": "VariableDeclaration",
																					"scope": 1475,
																					"src": "1569:18:33",
																					"stateVariable": false,
																					"storageLocation": "default",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"typeName": {
																						"id": 1428,
																						"name": "uint256",
																						"nodeType": "ElementaryTypeName",
																						"src": "1569:7:33",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"visibility": "internal"
																				}
																			],
																			"id": 1430,
																			"nodeType": "VariableDeclarationStatement",
																			"src": "1569:18:33"
																		},
																		"isSimpleCounterLoop": true,
																		"loopExpression": {
																			"expression": {
																				"id": 1435,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "UnaryOperation",
																				"operator": "++",
																				"prefix": false,
																				"src": "1613:12:33",
																				"subExpression": {
																					"id": 1434,
																					"name": "facetIndex",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1429,
																					"src": "1613:10:33",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"id": 1436,
																			"nodeType": "ExpressionStatement",
																			"src": "1613:12:33"
																		},
																		"nodeType": "ForStatement",
																		"src": "1564:633:33"
																	},
																	{
																		"condition": {
																			"id": 1476,
																			"name": "continueLoop",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1426,
																			"src": "2219:12:33",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"id": 1479,
																		"nodeType": "IfStatement",
																		"src": "2215:67:33",
																		"trueBody": {
																			"id": 1478,
																			"nodeType": "Block",
																			"src": "2233:49:33",
																			"statements": [
																				{
																					"id": 1477,
																					"nodeType": "Continue",
																					"src": "2255:8:33"
																				}
																			]
																		}
																	},
																	{
																		"expression": {
																			"id": 1485,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"expression": {
																					"baseExpression": {
																						"id": 1480,
																						"name": "diamondFacets",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1325,
																						"src": "2300:13:33",
																						"typeDescriptions": {
																							"typeIdentifier": "t_array$_t_struct$_Facet_$538_memory_ptr_$dyn_memory_ptr",
																							"typeString": "struct IERC2535DiamondLoupeInternal.Facet memory[] memory"
																						}
																					},
																					"id": 1482,
																					"indexExpression": {
																						"id": 1481,
																						"name": "numFacets",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1359,
																						"src": "2314:9:33",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "IndexAccess",
																					"src": "2300:24:33",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_Facet_$538_memory_ptr",
																						"typeString": "struct IERC2535DiamondLoupeInternal.Facet memory"
																					}
																				},
																				"id": 1483,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": true,
																				"memberLocation": "2325:6:33",
																				"memberName": "target",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 534,
																				"src": "2300:31:33",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"id": 1484,
																				"name": "facet",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1413,
																				"src": "2334:5:33",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"src": "2300:39:33",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"id": 1486,
																		"nodeType": "ExpressionStatement",
																		"src": "2300:39:33"
																	},
																	{
																		"expression": {
																			"id": 1497,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"expression": {
																					"baseExpression": {
																						"id": 1487,
																						"name": "diamondFacets",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1325,
																						"src": "2357:13:33",
																						"typeDescriptions": {
																							"typeIdentifier": "t_array$_t_struct$_Facet_$538_memory_ptr_$dyn_memory_ptr",
																							"typeString": "struct IERC2535DiamondLoupeInternal.Facet memory[] memory"
																						}
																					},
																					"id": 1489,
																					"indexExpression": {
																						"id": 1488,
																						"name": "numFacets",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1359,
																						"src": "2371:9:33",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "IndexAccess",
																					"src": "2357:24:33",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_Facet_$538_memory_ptr",
																						"typeString": "struct IERC2535DiamondLoupeInternal.Facet memory"
																					}
																				},
																				"id": 1490,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": true,
																				"memberLocation": "2382:9:33",
																				"memberName": "selectors",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 537,
																				"src": "2357:34:33",
																				"typeDescriptions": {
																					"typeIdentifier": "t_array$_t_bytes4_$dyn_memory_ptr",
																					"typeString": "bytes4[] memory"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"arguments": [
																					{
																						"expression": {
																							"id": 1494,
																							"name": "l",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1331,
																							"src": "2428:1:33",
																							"typeDescriptions": {
																								"typeIdentifier": "t_struct$_Layout_$1093_storage_ptr",
																								"typeString": "struct DiamondBaseStorage.Layout storage pointer"
																							}
																						},
																						"id": 1495,
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberLocation": "2430:13:33",
																						"memberName": "selectorCount",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 1086,
																						"src": "2428:15:33",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint16",
																							"typeString": "uint16"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_uint16",
																							"typeString": "uint16"
																						}
																					],
																					"id": 1493,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "NewExpression",
																					"src": "2394:12:33",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_bytes4_$dyn_memory_ptr_$",
																						"typeString": "function (uint256) pure returns (bytes4[] memory)"
																					},
																					"typeName": {
																						"baseType": {
																							"id": 1491,
																							"name": "bytes4",
																							"nodeType": "ElementaryTypeName",
																							"src": "2398:6:33",
																							"typeDescriptions": {
																								"typeIdentifier": "t_bytes4",
																								"typeString": "bytes4"
																							}
																						},
																						"id": 1492,
																						"nodeType": "ArrayTypeName",
																						"src": "2398:8:33",
																						"typeDescriptions": {
																							"typeIdentifier": "t_array$_t_bytes4_$dyn_storage_ptr",
																							"typeString": "bytes4[]"
																						}
																					}
																				},
																				"id": 1496,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "2394:67:33",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_array$_t_bytes4_$dyn_memory_ptr",
																					"typeString": "bytes4[] memory"
																				}
																			},
																			"src": "2357:104:33",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_bytes4_$dyn_memory_ptr",
																				"typeString": "bytes4[] memory"
																			}
																		},
																		"id": 1498,
																		"nodeType": "ExpressionStatement",
																		"src": "2357:104:33"
																	},
																	{
																		"expression": {
																			"id": 1506,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"baseExpression": {
																					"expression": {
																						"baseExpression": {
																							"id": 1499,
																							"name": "diamondFacets",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1325,
																							"src": "2479:13:33",
																							"typeDescriptions": {
																								"typeIdentifier": "t_array$_t_struct$_Facet_$538_memory_ptr_$dyn_memory_ptr",
																								"typeString": "struct IERC2535DiamondLoupeInternal.Facet memory[] memory"
																							}
																						},
																						"id": 1501,
																						"indexExpression": {
																							"id": 1500,
																							"name": "numFacets",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1359,
																							"src": "2493:9:33",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"nodeType": "IndexAccess",
																						"src": "2479:24:33",
																						"typeDescriptions": {
																							"typeIdentifier": "t_struct$_Facet_$538_memory_ptr",
																							"typeString": "struct IERC2535DiamondLoupeInternal.Facet memory"
																						}
																					},
																					"id": 1502,
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberLocation": "2504:9:33",
																					"memberName": "selectors",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 537,
																					"src": "2479:34:33",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_bytes4_$dyn_memory_ptr",
																						"typeString": "bytes4[] memory"
																					}
																				},
																				"id": 1504,
																				"indexExpression": {
																					"hexValue": "30",
																					"id": 1503,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "2514:1:33",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_0_by_1",
																						"typeString": "int_const 0"
																					},
																					"value": "0"
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": true,
																				"nodeType": "IndexAccess",
																				"src": "2479:37:33",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes4",
																					"typeString": "bytes4"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"id": 1505,
																				"name": "selector",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1401,
																				"src": "2519:8:33",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes4",
																					"typeString": "bytes4"
																				}
																			},
																			"src": "2479:48:33",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes4",
																				"typeString": "bytes4"
																			}
																		},
																		"id": 1507,
																		"nodeType": "ExpressionStatement",
																		"src": "2479:48:33"
																	},
																	{
																		"expression": {
																			"id": 1512,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"baseExpression": {
																					"id": 1508,
																					"name": "numFacetSelectors",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1350,
																					"src": "2545:17:33",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_uint8_$dyn_memory_ptr",
																						"typeString": "uint8[] memory"
																					}
																				},
																				"id": 1510,
																				"indexExpression": {
																					"id": 1509,
																					"name": "numFacets",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1359,
																					"src": "2563:9:33",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": true,
																				"nodeType": "IndexAccess",
																				"src": "2545:28:33",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint8",
																					"typeString": "uint8"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"hexValue": "31",
																				"id": 1511,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2576:1:33",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_1_by_1",
																					"typeString": "int_const 1"
																				},
																				"value": "1"
																			},
																			"src": "2545:32:33",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint8",
																				"typeString": "uint8"
																			}
																		},
																		"id": 1513,
																		"nodeType": "ExpressionStatement",
																		"src": "2545:32:33"
																	},
																	{
																		"expression": {
																			"id": 1515,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "UnaryOperation",
																			"operator": "++",
																			"prefix": false,
																			"src": "2595:11:33",
																			"subExpression": {
																				"id": 1514,
																				"name": "numFacets",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1359,
																				"src": "2595:9:33",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1516,
																		"nodeType": "ExpressionStatement",
																		"src": "2595:11:33"
																	}
																]
															},
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1386,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1384,
																	"name": "selectorSlotIndex",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1382,
																	"src": "1155:17:33",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 1385,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1175:1:33",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "1155:21:33",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1518,
															"initializationExpression": {
																"assignments": [
																	1382
																],
																"declarations": [
																	{
																		"constant": false,
																		"id": 1382,
																		"mutability": "mutable",
																		"name": "selectorSlotIndex",
																		"nameLocation": "1120:17:33",
																		"nodeType": "VariableDeclaration",
																		"scope": 1518,
																		"src": "1112:25:33",
																		"stateVariable": false,
																		"storageLocation": "default",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"typeName": {
																			"id": 1381,
																			"name": "uint256",
																			"nodeType": "ElementaryTypeName",
																			"src": "1112:7:33",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"visibility": "internal"
																	}
																],
																"id": 1383,
																"nodeType": "VariableDeclarationStatement",
																"src": "1112:25:33"
															},
															"isSimpleCounterLoop": true,
															"loopExpression": {
																"expression": {
																	"id": 1388,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "UnaryOperation",
																	"operator": "++",
																	"prefix": false,
																	"src": "1194:19:33",
																	"subExpression": {
																		"id": 1387,
																		"name": "selectorSlotIndex",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1382,
																		"src": "1194:17:33",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 1389,
																"nodeType": "ExpressionStatement",
																"src": "1194:19:33"
															},
															"nodeType": "ForStatement",
															"src": "1090:1531:33"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1370,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1367,
														"name": "selectorIndex",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1362,
														"src": "974:13:33",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 1368,
															"name": "l",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1331,
															"src": "990:1:33",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Layout_$1093_storage_ptr",
																"typeString": "struct DiamondBaseStorage.Layout storage pointer"
															}
														},
														"id": 1369,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "992:13:33",
														"memberName": "selectorCount",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1086,
														"src": "990:15:33",
														"typeDescriptions": {
															"typeIdentifier": "t_uint16",
															"typeString": "uint16"
														}
													},
													"src": "974:31:33",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1520,
												"initializationExpression": {
													"assignments": [
														1365
													],
													"declarations": [
														{
															"constant": false,
															"id": 1365,
															"mutability": "mutable",
															"name": "slotIndex",
															"nameLocation": "963:9:33",
															"nodeType": "VariableDeclaration",
															"scope": 1520,
															"src": "955:17:33",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 1364,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "955:7:33",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 1366,
													"nodeType": "VariableDeclarationStatement",
													"src": "955:17:33"
												},
												"isSimpleCounterLoop": false,
												"loopExpression": {
													"expression": {
														"id": 1372,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "1007:11:33",
														"subExpression": {
															"id": 1371,
															"name": "slotIndex",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1365,
															"src": "1007:9:33",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1373,
													"nodeType": "ExpressionStatement",
													"src": "1007:11:33"
												},
												"nodeType": "ForStatement",
												"src": "950:1681:33"
											},
											{
												"body": {
													"id": 1547,
													"nodeType": "Block",
													"src": "2704:287:33",
													"statements": [
														{
															"assignments": [
																1531
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1531,
																	"mutability": "mutable",
																	"name": "numSelectors",
																	"nameLocation": "2726:12:33",
																	"nodeType": "VariableDeclaration",
																	"scope": 1547,
																	"src": "2718:20:33",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1530,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "2718:7:33",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1535,
															"initialValue": {
																"baseExpression": {
																	"id": 1532,
																	"name": "numFacetSelectors",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1350,
																	"src": "2741:17:33",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint8_$dyn_memory_ptr",
																		"typeString": "uint8[] memory"
																	}
																},
																"id": 1534,
																"indexExpression": {
																	"id": 1533,
																	"name": "facetIndex",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1522,
																	"src": "2759:10:33",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "2741:29:33",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "2718:52:33"
														},
														{
															"assignments": [
																1540
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1540,
																	"mutability": "mutable",
																	"name": "selectors",
																	"nameLocation": "2800:9:33",
																	"nodeType": "VariableDeclaration",
																	"scope": 1547,
																	"src": "2784:25:33",
																	"stateVariable": false,
																	"storageLocation": "memory",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_bytes4_$dyn_memory_ptr",
																		"typeString": "bytes4[]"
																	},
																	"typeName": {
																		"baseType": {
																			"id": 1538,
																			"name": "bytes4",
																			"nodeType": "ElementaryTypeName",
																			"src": "2784:6:33",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes4",
																				"typeString": "bytes4"
																			}
																		},
																		"id": 1539,
																		"nodeType": "ArrayTypeName",
																		"src": "2784:8:33",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_bytes4_$dyn_storage_ptr",
																			"typeString": "bytes4[]"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1545,
															"initialValue": {
																"expression": {
																	"baseExpression": {
																		"id": 1541,
																		"name": "diamondFacets",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1325,
																		"src": "2812:13:33",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_struct$_Facet_$538_memory_ptr_$dyn_memory_ptr",
																			"typeString": "struct IERC2535DiamondLoupeInternal.Facet memory[] memory"
																		}
																	},
																	"id": 1543,
																	"indexExpression": {
																		"id": 1542,
																		"name": "facetIndex",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1522,
																		"src": "2826:10:33",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "2812:25:33",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Facet_$538_memory_ptr",
																		"typeString": "struct IERC2535DiamondLoupeInternal.Facet memory"
																	}
																},
																"id": 1544,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2838:9:33",
																"memberName": "selectors",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 537,
																"src": "2812:35:33",
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_bytes4_$dyn_memory_ptr",
																	"typeString": "bytes4[] memory"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "2784:63:33"
														},
														{
															"AST": {
																"nativeSrc": "2918:63:33",
																"nodeType": "YulBlock",
																"src": "2918:63:33",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "selectors",
																					"nativeSrc": "2943:9:33",
																					"nodeType": "YulIdentifier",
																					"src": "2943:9:33"
																				},
																				{
																					"name": "numSelectors",
																					"nativeSrc": "2954:12:33",
																					"nodeType": "YulIdentifier",
																					"src": "2954:12:33"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "2936:6:33",
																				"nodeType": "YulIdentifier",
																				"src": "2936:6:33"
																			},
																			"nativeSrc": "2936:31:33",
																			"nodeType": "YulFunctionCall",
																			"src": "2936:31:33"
																		},
																		"nativeSrc": "2936:31:33",
																		"nodeType": "YulExpressionStatement",
																		"src": "2936:31:33"
																	}
																]
															},
															"evmVersion": "shanghai",
															"externalReferences": [
																{
																	"declaration": 1531,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "2954:12:33",
																	"valueSize": 1
																},
																{
																	"declaration": 1540,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "2943:9:33",
																	"valueSize": 1
																}
															],
															"id": 1546,
															"nodeType": "InlineAssembly",
															"src": "2909:72:33"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1526,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1524,
														"name": "facetIndex",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1522,
														"src": "2666:10:33",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 1525,
														"name": "numFacets",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1359,
														"src": "2679:9:33",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2666:22:33",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1548,
												"initializationExpression": {
													"assignments": [
														1522
													],
													"declarations": [
														{
															"constant": false,
															"id": 1522,
															"mutability": "mutable",
															"name": "facetIndex",
															"nameLocation": "2654:10:33",
															"nodeType": "VariableDeclaration",
															"scope": 1548,
															"src": "2646:18:33",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 1521,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "2646:7:33",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 1523,
													"nodeType": "VariableDeclarationStatement",
													"src": "2646:18:33"
												},
												"isSimpleCounterLoop": true,
												"loopExpression": {
													"expression": {
														"id": 1528,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "2690:12:33",
														"subExpression": {
															"id": 1527,
															"name": "facetIndex",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1522,
															"src": "2690:10:33",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1529,
													"nodeType": "ExpressionStatement",
													"src": "2690:12:33"
												},
												"nodeType": "ForStatement",
												"src": "2641:350:33"
											},
											{
												"AST": {
													"nativeSrc": "3050:56:33",
													"nodeType": "YulBlock",
													"src": "3050:56:33",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "diamondFacets",
																		"nativeSrc": "3071:13:33",
																		"nodeType": "YulIdentifier",
																		"src": "3071:13:33"
																	},
																	{
																		"name": "numFacets",
																		"nativeSrc": "3086:9:33",
																		"nodeType": "YulIdentifier",
																		"src": "3086:9:33"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3064:6:33",
																	"nodeType": "YulIdentifier",
																	"src": "3064:6:33"
																},
																"nativeSrc": "3064:32:33",
																"nodeType": "YulFunctionCall",
																"src": "3064:32:33"
															},
															"nativeSrc": "3064:32:33",
															"nodeType": "YulExpressionStatement",
															"src": "3064:32:33"
														}
													]
												},
												"evmVersion": "shanghai",
												"externalReferences": [
													{
														"declaration": 1325,
														"isOffset": false,
														"isSlot": false,
														"src": "3071:13:33",
														"valueSize": 1
													},
													{
														"declaration": 1359,
														"isOffset": false,
														"isSlot": false,
														"src": "3086:9:33",
														"valueSize": 1
													}
												],
												"id": 1549,
												"nodeType": "InlineAssembly",
												"src": "3041:65:33"
											}
										]
									},
									"documentation": {
										"id": 1320,
										"nodeType": "StructuredDocumentation",
										"src": "436:121:33",
										"text": " @notice get all facets and their selectors\n @return diamondFacets array of structured facet data"
									},
									"id": 1551,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_facets",
									"nameLocation": "571:7:33",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1321,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "578:2:33"
									},
									"returnParameters": {
										"id": 1326,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1325,
												"mutability": "mutable",
												"name": "diamondFacets",
												"nameLocation": "619:13:33",
												"nodeType": "VariableDeclaration",
												"scope": 1551,
												"src": "604:28:33",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_struct$_Facet_$538_memory_ptr_$dyn_memory_ptr",
													"typeString": "struct IERC2535DiamondLoupeInternal.Facet[]"
												},
												"typeName": {
													"baseType": {
														"id": 1323,
														"nodeType": "UserDefinedTypeName",
														"pathNode": {
															"id": 1322,
															"name": "Facet",
															"nameLocations": [
																"604:5:33"
															],
															"nodeType": "IdentifierPath",
															"referencedDeclaration": 538,
															"src": "604:5:33"
														},
														"referencedDeclaration": 538,
														"src": "604:5:33",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Facet_$538_storage_ptr",
															"typeString": "struct IERC2535DiamondLoupeInternal.Facet"
														}
													},
													"id": 1324,
													"nodeType": "ArrayTypeName",
													"src": "604:7:33",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_Facet_$538_storage_$dyn_storage_ptr",
														"typeString": "struct IERC2535DiamondLoupeInternal.Facet[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "603:30:33"
									},
									"scope": 1823,
									"src": "562:2550:33",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1660,
										"nodeType": "Block",
										"src": "3402:1069:33",
										"statements": [
											{
												"assignments": [
													1564
												],
												"declarations": [
													{
														"constant": false,
														"id": 1564,
														"mutability": "mutable",
														"name": "l",
														"nameLocation": "3446:1:33",
														"nodeType": "VariableDeclaration",
														"scope": 1660,
														"src": "3412:35:33",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Layout_$1093_storage_ptr",
															"typeString": "struct DiamondBaseStorage.Layout"
														},
														"typeName": {
															"id": 1563,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1562,
																"name": "DiamondBaseStorage.Layout",
																"nameLocations": [
																	"3412:18:33",
																	"3431:6:33"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 1093,
																"src": "3412:25:33"
															},
															"referencedDeclaration": 1093,
															"src": "3412:25:33",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Layout_$1093_storage_ptr",
																"typeString": "struct DiamondBaseStorage.Layout"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1568,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 1565,
															"name": "DiamondBaseStorage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1111,
															"src": "3450:18:33",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_DiamondBaseStorage_$1111_$",
																"typeString": "type(library DiamondBaseStorage)"
															}
														},
														"id": 1566,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3469:6:33",
														"memberName": "layout",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1110,
														"src": "3450:25:33",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_Layout_$1093_storage_ptr_$",
															"typeString": "function () pure returns (struct DiamondBaseStorage.Layout storage pointer)"
														}
													},
													"id": 1567,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3450:27:33",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Layout_$1093_storage_ptr",
														"typeString": "struct DiamondBaseStorage.Layout storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3412:65:33"
											},
											{
												"expression": {
													"id": 1576,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1569,
														"name": "selectors",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1558,
														"src": "3488:9:33",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_bytes4_$dyn_memory_ptr",
															"typeString": "bytes4[] memory"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"expression": {
																	"id": 1573,
																	"name": "l",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1564,
																	"src": "3513:1:33",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Layout_$1093_storage_ptr",
																		"typeString": "struct DiamondBaseStorage.Layout storage pointer"
																	}
																},
																"id": 1574,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "3515:13:33",
																"memberName": "selectorCount",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1086,
																"src": "3513:15:33",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint16",
																	"typeString": "uint16"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint16",
																	"typeString": "uint16"
																}
															],
															"id": 1572,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "NewExpression",
															"src": "3500:12:33",
															"typeDescriptions": {
																"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_bytes4_$dyn_memory_ptr_$",
																"typeString": "function (uint256) pure returns (bytes4[] memory)"
															},
															"typeName": {
																"baseType": {
																	"id": 1570,
																	"name": "bytes4",
																	"nodeType": "ElementaryTypeName",
																	"src": "3504:6:33",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																"id": 1571,
																"nodeType": "ArrayTypeName",
																"src": "3504:8:33",
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_bytes4_$dyn_storage_ptr",
																	"typeString": "bytes4[]"
																}
															}
														},
														"id": 1575,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3500:29:33",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_bytes4_$dyn_memory_ptr",
															"typeString": "bytes4[] memory"
														}
													},
													"src": "3488:41:33",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_bytes4_$dyn_memory_ptr",
														"typeString": "bytes4[] memory"
													}
												},
												"id": 1577,
												"nodeType": "ExpressionStatement",
												"src": "3488:41:33"
											},
											{
												"assignments": [
													1579
												],
												"declarations": [
													{
														"constant": false,
														"id": 1579,
														"mutability": "mutable",
														"name": "numSelectors",
														"nameLocation": "3548:12:33",
														"nodeType": "VariableDeclaration",
														"scope": 1660,
														"src": "3540:20:33",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1578,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3540:7:33",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1580,
												"nodeType": "VariableDeclarationStatement",
												"src": "3540:20:33"
											},
											{
												"assignments": [
													1582
												],
												"declarations": [
													{
														"constant": false,
														"id": 1582,
														"mutability": "mutable",
														"name": "selectorIndex",
														"nameLocation": "3578:13:33",
														"nodeType": "VariableDeclaration",
														"scope": 1660,
														"src": "3570:21:33",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1581,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3570:7:33",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1583,
												"nodeType": "VariableDeclarationStatement",
												"src": "3570:21:33"
											},
											{
												"body": {
													"id": 1657,
													"nodeType": "Block",
													"src": "3715:624:33",
													"statements": [
														{
															"assignments": [
																1595
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1595,
																	"mutability": "mutable",
																	"name": "slot",
																	"nameLocation": "3737:4:33",
																	"nodeType": "VariableDeclaration",
																	"scope": 1657,
																	"src": "3729:12:33",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	"typeName": {
																		"id": 1594,
																		"name": "bytes32",
																		"nodeType": "ElementaryTypeName",
																		"src": "3729:7:33",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1600,
															"initialValue": {
																"baseExpression": {
																	"expression": {
																		"id": 1596,
																		"name": "l",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1564,
																		"src": "3744:1:33",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Layout_$1093_storage_ptr",
																			"typeString": "struct DiamondBaseStorage.Layout storage pointer"
																		}
																	},
																	"id": 1597,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "3746:13:33",
																	"memberName": "selectorSlots",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1090,
																	"src": "3744:15:33",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_uint256_$_t_bytes32_$",
																		"typeString": "mapping(uint256 => bytes32)"
																	}
																},
																"id": 1599,
																"indexExpression": {
																	"id": 1598,
																	"name": "slotIndex",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1585,
																	"src": "3760:9:33",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "3744:26:33",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "3729:41:33"
														},
														{
															"body": {
																"id": 1655,
																"nodeType": "Block",
																"src": "3923:406:33",
																"statements": [
																	{
																		"expression": {
																			"id": 1611,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "UnaryOperation",
																			"operator": "++",
																			"prefix": false,
																			"src": "3941:15:33",
																			"subExpression": {
																				"id": 1610,
																				"name": "selectorIndex",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1582,
																				"src": "3941:13:33",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1612,
																		"nodeType": "ExpressionStatement",
																		"src": "3941:15:33"
																	},
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1616,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1613,
																				"name": "selectorIndex",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1582,
																				"src": "3979:13:33",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": ">",
																			"rightExpression": {
																				"expression": {
																					"id": 1614,
																					"name": "l",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1564,
																					"src": "3995:1:33",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_Layout_$1093_storage_ptr",
																						"typeString": "struct DiamondBaseStorage.Layout storage pointer"
																					}
																				},
																				"id": 1615,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "3997:13:33",
																				"memberName": "selectorCount",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 1086,
																				"src": "3995:15:33",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint16",
																					"typeString": "uint16"
																				}
																			},
																			"src": "3979:31:33",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"id": 1619,
																		"nodeType": "IfStatement",
																		"src": "3975:83:33",
																		"trueBody": {
																			"id": 1618,
																			"nodeType": "Block",
																			"src": "4012:46:33",
																			"statements": [
																				{
																					"id": 1617,
																					"nodeType": "Break",
																					"src": "4034:5:33"
																				}
																			]
																		}
																	},
																	{
																		"assignments": [
																			1621
																		],
																		"declarations": [
																			{
																				"constant": false,
																				"id": 1621,
																				"mutability": "mutable",
																				"name": "selector",
																				"nameLocation": "4083:8:33",
																				"nodeType": "VariableDeclaration",
																				"scope": 1655,
																				"src": "4076:15:33",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes4",
																					"typeString": "bytes4"
																				},
																				"typeName": {
																					"id": 1620,
																					"name": "bytes4",
																					"nodeType": "ElementaryTypeName",
																					"src": "4076:6:33",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes4",
																						"typeString": "bytes4"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"id": 1631,
																		"initialValue": {
																			"arguments": [
																				{
																					"commonType": {
																						"typeIdentifier": "t_bytes32",
																						"typeString": "bytes32"
																					},
																					"id": 1629,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 1624,
																						"name": "slot",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1595,
																						"src": "4101:4:33",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes32",
																							"typeString": "bytes32"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "<<",
																					"rightExpression": {
																						"components": [
																							{
																								"commonType": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								},
																								"id": 1627,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"leftExpression": {
																									"id": 1625,
																									"name": "selectorSlotIndex",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 1602,
																									"src": "4110:17:33",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"nodeType": "BinaryOperation",
																								"operator": "<<",
																								"rightExpression": {
																									"hexValue": "35",
																									"id": 1626,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"kind": "number",
																									"lValueRequested": false,
																									"nodeType": "Literal",
																									"src": "4131:1:33",
																									"typeDescriptions": {
																										"typeIdentifier": "t_rational_5_by_1",
																										"typeString": "int_const 5"
																									},
																									"value": "5"
																								},
																								"src": "4110:22:33",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							}
																						],
																						"id": 1628,
																						"isConstant": false,
																						"isInlineArray": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"nodeType": "TupleExpression",
																						"src": "4109:24:33",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "4101:32:33",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes32",
																						"typeString": "bytes32"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_bytes32",
																						"typeString": "bytes32"
																					}
																				],
																				"id": 1623,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "4094:6:33",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_bytes4_$",
																					"typeString": "type(bytes4)"
																				},
																				"typeName": {
																					"id": 1622,
																					"name": "bytes4",
																					"nodeType": "ElementaryTypeName",
																					"src": "4094:6:33",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 1630,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "4094:40:33",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes4",
																				"typeString": "bytes4"
																			}
																		},
																		"nodeType": "VariableDeclarationStatement",
																		"src": "4076:58:33"
																	},
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			"id": 1643,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1632,
																				"name": "facet",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1554,
																				"src": "4157:5:33",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "==",
																			"rightExpression": {
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"baseExpression": {
																									"expression": {
																										"id": 1637,
																										"name": "l",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 1564,
																										"src": "4182:1:33",
																										"typeDescriptions": {
																											"typeIdentifier": "t_struct$_Layout_$1093_storage_ptr",
																											"typeString": "struct DiamondBaseStorage.Layout storage pointer"
																										}
																									},
																									"id": 1638,
																									"isConstant": false,
																									"isLValue": true,
																									"isPure": false,
																									"lValueRequested": false,
																									"memberLocation": "4184:6:33",
																									"memberName": "facets",
																									"nodeType": "MemberAccess",
																									"referencedDeclaration": 1084,
																									"src": "4182:8:33",
																									"typeDescriptions": {
																										"typeIdentifier": "t_mapping$_t_bytes4_$_t_bytes32_$",
																										"typeString": "mapping(bytes4 => bytes32)"
																									}
																								},
																								"id": 1640,
																								"indexExpression": {
																									"id": 1639,
																									"name": "selector",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 1621,
																									"src": "4191:8:33",
																									"typeDescriptions": {
																										"typeIdentifier": "t_bytes4",
																										"typeString": "bytes4"
																									}
																								},
																								"isConstant": false,
																								"isLValue": true,
																								"isPure": false,
																								"lValueRequested": false,
																								"nodeType": "IndexAccess",
																								"src": "4182:18:33",
																								"typeDescriptions": {
																									"typeIdentifier": "t_bytes32",
																									"typeString": "bytes32"
																								}
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_bytes32",
																									"typeString": "bytes32"
																								}
																							],
																							"id": 1636,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"nodeType": "ElementaryTypeNameExpression",
																							"src": "4174:7:33",
																							"typeDescriptions": {
																								"typeIdentifier": "t_type$_t_bytes20_$",
																								"typeString": "type(bytes20)"
																							},
																							"typeName": {
																								"id": 1635,
																								"name": "bytes20",
																								"nodeType": "ElementaryTypeName",
																								"src": "4174:7:33",
																								"typeDescriptions": {}
																							}
																						},
																						"id": 1641,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "typeConversion",
																						"lValueRequested": false,
																						"nameLocations": [],
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "4174:27:33",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes20",
																							"typeString": "bytes20"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_bytes20",
																							"typeString": "bytes20"
																						}
																					],
																					"id": 1634,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "4166:7:33",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_address_$",
																						"typeString": "type(address)"
																					},
																					"typeName": {
																						"id": 1633,
																						"name": "address",
																						"nodeType": "ElementaryTypeName",
																						"src": "4166:7:33",
																						"typeDescriptions": {}
																					}
																				},
																				"id": 1642,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "4166:36:33",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"src": "4157:45:33",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"id": 1654,
																		"nodeType": "IfStatement",
																		"src": "4153:162:33",
																		"trueBody": {
																			"id": 1653,
																			"nodeType": "Block",
																			"src": "4204:111:33",
																			"statements": [
																				{
																					"expression": {
																						"id": 1648,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftHandSide": {
																							"baseExpression": {
																								"id": 1644,
																								"name": "selectors",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1558,
																								"src": "4226:9:33",
																								"typeDescriptions": {
																									"typeIdentifier": "t_array$_t_bytes4_$dyn_memory_ptr",
																									"typeString": "bytes4[] memory"
																								}
																							},
																							"id": 1646,
																							"indexExpression": {
																								"id": 1645,
																								"name": "numSelectors",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1579,
																								"src": "4236:12:33",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"isConstant": false,
																							"isLValue": true,
																							"isPure": false,
																							"lValueRequested": true,
																							"nodeType": "IndexAccess",
																							"src": "4226:23:33",
																							"typeDescriptions": {
																								"typeIdentifier": "t_bytes4",
																								"typeString": "bytes4"
																							}
																						},
																						"nodeType": "Assignment",
																						"operator": "=",
																						"rightHandSide": {
																							"id": 1647,
																							"name": "selector",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1621,
																							"src": "4252:8:33",
																							"typeDescriptions": {
																								"typeIdentifier": "t_bytes4",
																								"typeString": "bytes4"
																							}
																						},
																						"src": "4226:34:33",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes4",
																							"typeString": "bytes4"
																						}
																					},
																					"id": 1649,
																					"nodeType": "ExpressionStatement",
																					"src": "4226:34:33"
																				},
																				{
																					"expression": {
																						"id": 1651,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"nodeType": "UnaryOperation",
																						"operator": "++",
																						"prefix": false,
																						"src": "4282:14:33",
																						"subExpression": {
																							"id": 1650,
																							"name": "numSelectors",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1579,
																							"src": "4282:12:33",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"id": 1652,
																					"nodeType": "ExpressionStatement",
																					"src": "4282:14:33"
																				}
																			]
																		}
																	}
																]
															},
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1606,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1604,
																	"name": "selectorSlotIndex",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1602,
																	"src": "3850:17:33",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 1605,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3870:1:33",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "3850:21:33",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1656,
															"initializationExpression": {
																"assignments": [
																	1602
																],
																"declarations": [
																	{
																		"constant": false,
																		"id": 1602,
																		"mutability": "mutable",
																		"name": "selectorSlotIndex",
																		"nameLocation": "3815:17:33",
																		"nodeType": "VariableDeclaration",
																		"scope": 1656,
																		"src": "3807:25:33",
																		"stateVariable": false,
																		"storageLocation": "default",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"typeName": {
																			"id": 1601,
																			"name": "uint256",
																			"nodeType": "ElementaryTypeName",
																			"src": "3807:7:33",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"visibility": "internal"
																	}
																],
																"id": 1603,
																"nodeType": "VariableDeclarationStatement",
																"src": "3807:25:33"
															},
															"isSimpleCounterLoop": true,
															"loopExpression": {
																"expression": {
																	"id": 1608,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "UnaryOperation",
																	"operator": "++",
																	"prefix": false,
																	"src": "3889:19:33",
																	"subExpression": {
																		"id": 1607,
																		"name": "selectorSlotIndex",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1602,
																		"src": "3889:17:33",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 1609,
																"nodeType": "ExpressionStatement",
																"src": "3889:19:33"
															},
															"nodeType": "ForStatement",
															"src": "3785:544:33"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1590,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1587,
														"name": "selectorIndex",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1582,
														"src": "3669:13:33",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 1588,
															"name": "l",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1564,
															"src": "3685:1:33",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Layout_$1093_storage_ptr",
																"typeString": "struct DiamondBaseStorage.Layout storage pointer"
															}
														},
														"id": 1589,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3687:13:33",
														"memberName": "selectorCount",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1086,
														"src": "3685:15:33",
														"typeDescriptions": {
															"typeIdentifier": "t_uint16",
															"typeString": "uint16"
														}
													},
													"src": "3669:31:33",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1658,
												"initializationExpression": {
													"assignments": [
														1585
													],
													"declarations": [
														{
															"constant": false,
															"id": 1585,
															"mutability": "mutable",
															"name": "slotIndex",
															"nameLocation": "3658:9:33",
															"nodeType": "VariableDeclaration",
															"scope": 1658,
															"src": "3650:17:33",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 1584,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "3650:7:33",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 1586,
													"nodeType": "VariableDeclarationStatement",
													"src": "3650:17:33"
												},
												"isSimpleCounterLoop": false,
												"loopExpression": {
													"expression": {
														"id": 1592,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "3702:11:33",
														"subExpression": {
															"id": 1591,
															"name": "slotIndex",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1585,
															"src": "3702:9:33",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1593,
													"nodeType": "ExpressionStatement",
													"src": "3702:11:33"
												},
												"nodeType": "ForStatement",
												"src": "3645:694:33"
											},
											{
												"AST": {
													"nativeSrc": "4410:55:33",
													"nodeType": "YulBlock",
													"src": "4410:55:33",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "selectors",
																		"nativeSrc": "4431:9:33",
																		"nodeType": "YulIdentifier",
																		"src": "4431:9:33"
																	},
																	{
																		"name": "numSelectors",
																		"nativeSrc": "4442:12:33",
																		"nodeType": "YulIdentifier",
																		"src": "4442:12:33"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4424:6:33",
																	"nodeType": "YulIdentifier",
																	"src": "4424:6:33"
																},
																"nativeSrc": "4424:31:33",
																"nodeType": "YulFunctionCall",
																"src": "4424:31:33"
															},
															"nativeSrc": "4424:31:33",
															"nodeType": "YulExpressionStatement",
															"src": "4424:31:33"
														}
													]
												},
												"evmVersion": "shanghai",
												"externalReferences": [
													{
														"declaration": 1579,
														"isOffset": false,
														"isSlot": false,
														"src": "4442:12:33",
														"valueSize": 1
													},
													{
														"declaration": 1558,
														"isOffset": false,
														"isSlot": false,
														"src": "4431:9:33",
														"valueSize": 1
													}
												],
												"id": 1659,
												"nodeType": "InlineAssembly",
												"src": "4401:64:33"
											}
										]
									},
									"documentation": {
										"id": 1552,
										"nodeType": "StructuredDocumentation",
										"src": "3118:167:33",
										"text": " @notice get all selectors for given facet address\n @param facet address of facet to query\n @return selectors array of function selectors"
									},
									"id": 1661,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_facetFunctionSelectors",
									"nameLocation": "3299:23:33",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1555,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1554,
												"mutability": "mutable",
												"name": "facet",
												"nameLocation": "3340:5:33",
												"nodeType": "VariableDeclaration",
												"scope": 1661,
												"src": "3332:13:33",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1553,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3332:7:33",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3322:29:33"
									},
									"returnParameters": {
										"id": 1559,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1558,
												"mutability": "mutable",
												"name": "selectors",
												"nameLocation": "3391:9:33",
												"nodeType": "VariableDeclaration",
												"scope": 1661,
												"src": "3375:25:33",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_bytes4_$dyn_memory_ptr",
													"typeString": "bytes4[]"
												},
												"typeName": {
													"baseType": {
														"id": 1556,
														"name": "bytes4",
														"nodeType": "ElementaryTypeName",
														"src": "3375:6:33",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"id": 1557,
													"nodeType": "ArrayTypeName",
													"src": "3375:8:33",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_bytes4_$dyn_storage_ptr",
														"typeString": "bytes4[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3374:27:33"
									},
									"scope": 1823,
									"src": "3290:1181:33",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1797,
										"nodeType": "Block",
										"src": "4708:1369:33",
										"statements": [
											{
												"assignments": [
													1672
												],
												"declarations": [
													{
														"constant": false,
														"id": 1672,
														"mutability": "mutable",
														"name": "l",
														"nameLocation": "4752:1:33",
														"nodeType": "VariableDeclaration",
														"scope": 1797,
														"src": "4718:35:33",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Layout_$1093_storage_ptr",
															"typeString": "struct DiamondBaseStorage.Layout"
														},
														"typeName": {
															"id": 1671,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1670,
																"name": "DiamondBaseStorage.Layout",
																"nameLocations": [
																	"4718:18:33",
																	"4737:6:33"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 1093,
																"src": "4718:25:33"
															},
															"referencedDeclaration": 1093,
															"src": "4718:25:33",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Layout_$1093_storage_ptr",
																"typeString": "struct DiamondBaseStorage.Layout"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1676,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 1673,
															"name": "DiamondBaseStorage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1111,
															"src": "4756:18:33",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_DiamondBaseStorage_$1111_$",
																"typeString": "type(library DiamondBaseStorage)"
															}
														},
														"id": 1674,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4775:6:33",
														"memberName": "layout",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1110,
														"src": "4756:25:33",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_Layout_$1093_storage_ptr_$",
															"typeString": "function () pure returns (struct DiamondBaseStorage.Layout storage pointer)"
														}
													},
													"id": 1675,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4756:27:33",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Layout_$1093_storage_ptr",
														"typeString": "struct DiamondBaseStorage.Layout storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4718:65:33"
											},
											{
												"expression": {
													"id": 1684,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1677,
														"name": "addresses",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1666,
														"src": "4794:9:33",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
															"typeString": "address[] memory"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"expression": {
																	"id": 1681,
																	"name": "l",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1672,
																	"src": "4820:1:33",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Layout_$1093_storage_ptr",
																		"typeString": "struct DiamondBaseStorage.Layout storage pointer"
																	}
																},
																"id": 1682,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "4822:13:33",
																"memberName": "selectorCount",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1086,
																"src": "4820:15:33",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint16",
																	"typeString": "uint16"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint16",
																	"typeString": "uint16"
																}
															],
															"id": 1680,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "NewExpression",
															"src": "4806:13:33",
															"typeDescriptions": {
																"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_address_$dyn_memory_ptr_$",
																"typeString": "function (uint256) pure returns (address[] memory)"
															},
															"typeName": {
																"baseType": {
																	"id": 1678,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "4810:7:33",
																	"stateMutability": "nonpayable",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 1679,
																"nodeType": "ArrayTypeName",
																"src": "4810:9:33",
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
																	"typeString": "address[]"
																}
															}
														},
														"id": 1683,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4806:30:33",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
															"typeString": "address[] memory"
														}
													},
													"src": "4794:42:33",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
														"typeString": "address[] memory"
													}
												},
												"id": 1685,
												"nodeType": "ExpressionStatement",
												"src": "4794:42:33"
											},
											{
												"assignments": [
													1687
												],
												"declarations": [
													{
														"constant": false,
														"id": 1687,
														"mutability": "mutable",
														"name": "numFacets",
														"nameLocation": "4854:9:33",
														"nodeType": "VariableDeclaration",
														"scope": 1797,
														"src": "4846:17:33",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1686,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4846:7:33",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1688,
												"nodeType": "VariableDeclarationStatement",
												"src": "4846:17:33"
											},
											{
												"assignments": [
													1690
												],
												"declarations": [
													{
														"constant": false,
														"id": 1690,
														"mutability": "mutable",
														"name": "selectorIndex",
														"nameLocation": "4881:13:33",
														"nodeType": "VariableDeclaration",
														"scope": 1797,
														"src": "4873:21:33",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1689,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4873:7:33",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1691,
												"nodeType": "VariableDeclarationStatement",
												"src": "4873:21:33"
											},
											{
												"body": {
													"id": 1794,
													"nodeType": "Block",
													"src": "4975:967:33",
													"statements": [
														{
															"assignments": [
																1703
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1703,
																	"mutability": "mutable",
																	"name": "slot",
																	"nameLocation": "4997:4:33",
																	"nodeType": "VariableDeclaration",
																	"scope": 1794,
																	"src": "4989:12:33",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	"typeName": {
																		"id": 1702,
																		"name": "bytes32",
																		"nodeType": "ElementaryTypeName",
																		"src": "4989:7:33",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1708,
															"initialValue": {
																"baseExpression": {
																	"expression": {
																		"id": 1704,
																		"name": "l",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1672,
																		"src": "5004:1:33",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Layout_$1093_storage_ptr",
																			"typeString": "struct DiamondBaseStorage.Layout storage pointer"
																		}
																	},
																	"id": 1705,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "5006:13:33",
																	"memberName": "selectorSlots",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1090,
																	"src": "5004:15:33",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_uint256_$_t_bytes32_$",
																		"typeString": "mapping(uint256 => bytes32)"
																	}
																},
																"id": 1707,
																"indexExpression": {
																	"id": 1706,
																	"name": "slotIndex",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1693,
																	"src": "5020:9:33",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "5004:26:33",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "4989:41:33"
														},
														{
															"body": {
																"id": 1792,
																"nodeType": "Block",
																"src": "5183:749:33",
																"statements": [
																	{
																		"expression": {
																			"id": 1719,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "UnaryOperation",
																			"operator": "++",
																			"prefix": false,
																			"src": "5201:15:33",
																			"subExpression": {
																				"id": 1718,
																				"name": "selectorIndex",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1690,
																				"src": "5201:13:33",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1720,
																		"nodeType": "ExpressionStatement",
																		"src": "5201:15:33"
																	},
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1724,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1721,
																				"name": "selectorIndex",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1690,
																				"src": "5239:13:33",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": ">",
																			"rightExpression": {
																				"expression": {
																					"id": 1722,
																					"name": "l",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1672,
																					"src": "5255:1:33",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_Layout_$1093_storage_ptr",
																						"typeString": "struct DiamondBaseStorage.Layout storage pointer"
																					}
																				},
																				"id": 1723,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "5257:13:33",
																				"memberName": "selectorCount",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 1086,
																				"src": "5255:15:33",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint16",
																					"typeString": "uint16"
																				}
																			},
																			"src": "5239:31:33",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"id": 1727,
																		"nodeType": "IfStatement",
																		"src": "5235:83:33",
																		"trueBody": {
																			"id": 1726,
																			"nodeType": "Block",
																			"src": "5272:46:33",
																			"statements": [
																				{
																					"id": 1725,
																					"nodeType": "Break",
																					"src": "5294:5:33"
																				}
																			]
																		}
																	},
																	{
																		"assignments": [
																			1729
																		],
																		"declarations": [
																			{
																				"constant": false,
																				"id": 1729,
																				"mutability": "mutable",
																				"name": "selector",
																				"nameLocation": "5343:8:33",
																				"nodeType": "VariableDeclaration",
																				"scope": 1792,
																				"src": "5336:15:33",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes4",
																					"typeString": "bytes4"
																				},
																				"typeName": {
																					"id": 1728,
																					"name": "bytes4",
																					"nodeType": "ElementaryTypeName",
																					"src": "5336:6:33",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes4",
																						"typeString": "bytes4"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"id": 1739,
																		"initialValue": {
																			"arguments": [
																				{
																					"commonType": {
																						"typeIdentifier": "t_bytes32",
																						"typeString": "bytes32"
																					},
																					"id": 1737,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 1732,
																						"name": "slot",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1703,
																						"src": "5361:4:33",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes32",
																							"typeString": "bytes32"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "<<",
																					"rightExpression": {
																						"components": [
																							{
																								"commonType": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								},
																								"id": 1735,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"leftExpression": {
																									"id": 1733,
																									"name": "selectorSlotIndex",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 1710,
																									"src": "5370:17:33",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"nodeType": "BinaryOperation",
																								"operator": "<<",
																								"rightExpression": {
																									"hexValue": "35",
																									"id": 1734,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"kind": "number",
																									"lValueRequested": false,
																									"nodeType": "Literal",
																									"src": "5391:1:33",
																									"typeDescriptions": {
																										"typeIdentifier": "t_rational_5_by_1",
																										"typeString": "int_const 5"
																									},
																									"value": "5"
																								},
																								"src": "5370:22:33",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							}
																						],
																						"id": 1736,
																						"isConstant": false,
																						"isInlineArray": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"nodeType": "TupleExpression",
																						"src": "5369:24:33",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "5361:32:33",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes32",
																						"typeString": "bytes32"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_bytes32",
																						"typeString": "bytes32"
																					}
																				],
																				"id": 1731,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "5354:6:33",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_bytes4_$",
																					"typeString": "type(bytes4)"
																				},
																				"typeName": {
																					"id": 1730,
																					"name": "bytes4",
																					"nodeType": "ElementaryTypeName",
																					"src": "5354:6:33",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 1738,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "5354:40:33",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes4",
																				"typeString": "bytes4"
																			}
																		},
																		"nodeType": "VariableDeclarationStatement",
																		"src": "5336:58:33"
																	},
																	{
																		"assignments": [
																			1741
																		],
																		"declarations": [
																			{
																				"constant": false,
																				"id": 1741,
																				"mutability": "mutable",
																				"name": "facet",
																				"nameLocation": "5420:5:33",
																				"nodeType": "VariableDeclaration",
																				"scope": 1792,
																				"src": "5412:13:33",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				"typeName": {
																					"id": 1740,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "5412:7:33",
																					"stateMutability": "nonpayable",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"id": 1752,
																		"initialValue": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"baseExpression": {
																								"expression": {
																									"id": 1746,
																									"name": "l",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 1672,
																									"src": "5444:1:33",
																									"typeDescriptions": {
																										"typeIdentifier": "t_struct$_Layout_$1093_storage_ptr",
																										"typeString": "struct DiamondBaseStorage.Layout storage pointer"
																									}
																								},
																								"id": 1747,
																								"isConstant": false,
																								"isLValue": true,
																								"isPure": false,
																								"lValueRequested": false,
																								"memberLocation": "5446:6:33",
																								"memberName": "facets",
																								"nodeType": "MemberAccess",
																								"referencedDeclaration": 1084,
																								"src": "5444:8:33",
																								"typeDescriptions": {
																									"typeIdentifier": "t_mapping$_t_bytes4_$_t_bytes32_$",
																									"typeString": "mapping(bytes4 => bytes32)"
																								}
																							},
																							"id": 1749,
																							"indexExpression": {
																								"id": 1748,
																								"name": "selector",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1729,
																								"src": "5453:8:33",
																								"typeDescriptions": {
																									"typeIdentifier": "t_bytes4",
																									"typeString": "bytes4"
																								}
																							},
																							"isConstant": false,
																							"isLValue": true,
																							"isPure": false,
																							"lValueRequested": false,
																							"nodeType": "IndexAccess",
																							"src": "5444:18:33",
																							"typeDescriptions": {
																								"typeIdentifier": "t_bytes32",
																								"typeString": "bytes32"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_bytes32",
																								"typeString": "bytes32"
																							}
																						],
																						"id": 1745,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "5436:7:33",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_bytes20_$",
																							"typeString": "type(bytes20)"
																						},
																						"typeName": {
																							"id": 1744,
																							"name": "bytes20",
																							"nodeType": "ElementaryTypeName",
																							"src": "5436:7:33",
																							"typeDescriptions": {}
																						}
																					},
																					"id": 1750,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "typeConversion",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "5436:27:33",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes20",
																						"typeString": "bytes20"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_bytes20",
																						"typeString": "bytes20"
																					}
																				],
																				"id": 1743,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "5428:7:33",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 1742,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "5428:7:33",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 1751,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "5428:36:33",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"nodeType": "VariableDeclarationStatement",
																		"src": "5412:52:33"
																	},
																	{
																		"assignments": [
																			1754
																		],
																		"declarations": [
																			{
																				"constant": false,
																				"id": 1754,
																				"mutability": "mutable",
																				"name": "continueLoop",
																				"nameLocation": "5488:12:33",
																				"nodeType": "VariableDeclaration",
																				"scope": 1792,
																				"src": "5483:17:33",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				},
																				"typeName": {
																					"id": 1753,
																					"name": "bool",
																					"nodeType": "ElementaryTypeName",
																					"src": "5483:4:33",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"id": 1755,
																		"nodeType": "VariableDeclarationStatement",
																		"src": "5483:17:33"
																	},
																	{
																		"body": {
																			"id": 1777,
																			"nodeType": "Block",
																			"src": "5582:175:33",
																			"statements": [
																				{
																					"condition": {
																						"commonType": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						},
																						"id": 1769,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftExpression": {
																							"id": 1765,
																							"name": "facet",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1741,
																							"src": "5608:5:33",
																							"typeDescriptions": {
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "==",
																						"rightExpression": {
																							"baseExpression": {
																								"id": 1766,
																								"name": "addresses",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1666,
																								"src": "5617:9:33",
																								"typeDescriptions": {
																									"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																									"typeString": "address[] memory"
																								}
																							},
																							"id": 1768,
																							"indexExpression": {
																								"id": 1767,
																								"name": "facetIndex",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1757,
																								"src": "5627:10:33",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"isConstant": false,
																							"isLValue": true,
																							"isPure": false,
																							"lValueRequested": false,
																							"nodeType": "IndexAccess",
																							"src": "5617:21:33",
																							"typeDescriptions": {
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						},
																						"src": "5608:30:33",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bool",
																							"typeString": "bool"
																						}
																					},
																					"id": 1776,
																					"nodeType": "IfStatement",
																					"src": "5604:135:33",
																					"trueBody": {
																						"id": 1775,
																						"nodeType": "Block",
																						"src": "5640:99:33",
																						"statements": [
																							{
																								"expression": {
																									"id": 1772,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": false,
																									"lValueRequested": false,
																									"leftHandSide": {
																										"id": 1770,
																										"name": "continueLoop",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 1754,
																										"src": "5666:12:33",
																										"typeDescriptions": {
																											"typeIdentifier": "t_bool",
																											"typeString": "bool"
																										}
																									},
																									"nodeType": "Assignment",
																									"operator": "=",
																									"rightHandSide": {
																										"hexValue": "74727565",
																										"id": 1771,
																										"isConstant": false,
																										"isLValue": false,
																										"isPure": true,
																										"kind": "bool",
																										"lValueRequested": false,
																										"nodeType": "Literal",
																										"src": "5681:4:33",
																										"typeDescriptions": {
																											"typeIdentifier": "t_bool",
																											"typeString": "bool"
																										},
																										"value": "true"
																									},
																									"src": "5666:19:33",
																									"typeDescriptions": {
																										"typeIdentifier": "t_bool",
																										"typeString": "bool"
																									}
																								},
																								"id": 1773,
																								"nodeType": "ExpressionStatement",
																								"src": "5666:19:33"
																							},
																							{
																								"id": 1774,
																								"nodeType": "Break",
																								"src": "5711:5:33"
																							}
																						]
																					}
																				}
																			]
																		},
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1761,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1759,
																				"name": "facetIndex",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1757,
																				"src": "5544:10:33",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "<",
																			"rightExpression": {
																				"id": 1760,
																				"name": "numFacets",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1687,
																				"src": "5557:9:33",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "5544:22:33",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"id": 1778,
																		"initializationExpression": {
																			"assignments": [
																				1757
																			],
																			"declarations": [
																				{
																					"constant": false,
																					"id": 1757,
																					"mutability": "mutable",
																					"name": "facetIndex",
																					"nameLocation": "5532:10:33",
																					"nodeType": "VariableDeclaration",
																					"scope": 1778,
																					"src": "5524:18:33",
																					"stateVariable": false,
																					"storageLocation": "default",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"typeName": {
																						"id": 1756,
																						"name": "uint256",
																						"nodeType": "ElementaryTypeName",
																						"src": "5524:7:33",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"visibility": "internal"
																				}
																			],
																			"id": 1758,
																			"nodeType": "VariableDeclarationStatement",
																			"src": "5524:18:33"
																		},
																		"isSimpleCounterLoop": true,
																		"loopExpression": {
																			"expression": {
																				"id": 1763,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "UnaryOperation",
																				"operator": "++",
																				"prefix": false,
																				"src": "5568:12:33",
																				"subExpression": {
																					"id": 1762,
																					"name": "facetIndex",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1757,
																					"src": "5568:10:33",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"id": 1764,
																			"nodeType": "ExpressionStatement",
																			"src": "5568:12:33"
																		},
																		"nodeType": "ForStatement",
																		"src": "5519:238:33"
																	},
																	{
																		"condition": {
																			"id": 1779,
																			"name": "continueLoop",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1754,
																			"src": "5779:12:33",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"id": 1782,
																		"nodeType": "IfStatement",
																		"src": "5775:67:33",
																		"trueBody": {
																			"id": 1781,
																			"nodeType": "Block",
																			"src": "5793:49:33",
																			"statements": [
																				{
																					"id": 1780,
																					"nodeType": "Continue",
																					"src": "5815:8:33"
																				}
																			]
																		}
																	},
																	{
																		"expression": {
																			"id": 1787,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"baseExpression": {
																					"id": 1783,
																					"name": "addresses",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1666,
																					"src": "5860:9:33",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																						"typeString": "address[] memory"
																					}
																				},
																				"id": 1785,
																				"indexExpression": {
																					"id": 1784,
																					"name": "numFacets",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1687,
																					"src": "5870:9:33",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": true,
																				"nodeType": "IndexAccess",
																				"src": "5860:20:33",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"id": 1786,
																				"name": "facet",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1741,
																				"src": "5883:5:33",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"src": "5860:28:33",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"id": 1788,
																		"nodeType": "ExpressionStatement",
																		"src": "5860:28:33"
																	},
																	{
																		"expression": {
																			"id": 1790,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "UnaryOperation",
																			"operator": "++",
																			"prefix": false,
																			"src": "5906:11:33",
																			"subExpression": {
																				"id": 1789,
																				"name": "numFacets",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1687,
																				"src": "5906:9:33",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1791,
																		"nodeType": "ExpressionStatement",
																		"src": "5906:11:33"
																	}
																]
															},
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1714,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1712,
																	"name": "selectorSlotIndex",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1710,
																	"src": "5110:17:33",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 1713,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5130:1:33",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "5110:21:33",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1793,
															"initializationExpression": {
																"assignments": [
																	1710
																],
																"declarations": [
																	{
																		"constant": false,
																		"id": 1710,
																		"mutability": "mutable",
																		"name": "selectorSlotIndex",
																		"nameLocation": "5075:17:33",
																		"nodeType": "VariableDeclaration",
																		"scope": 1793,
																		"src": "5067:25:33",
																		"stateVariable": false,
																		"storageLocation": "default",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"typeName": {
																			"id": 1709,
																			"name": "uint256",
																			"nodeType": "ElementaryTypeName",
																			"src": "5067:7:33",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"visibility": "internal"
																	}
																],
																"id": 1711,
																"nodeType": "VariableDeclarationStatement",
																"src": "5067:25:33"
															},
															"isSimpleCounterLoop": true,
															"loopExpression": {
																"expression": {
																	"id": 1716,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "UnaryOperation",
																	"operator": "++",
																	"prefix": false,
																	"src": "5149:19:33",
																	"subExpression": {
																		"id": 1715,
																		"name": "selectorSlotIndex",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1710,
																		"src": "5149:17:33",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 1717,
																"nodeType": "ExpressionStatement",
																"src": "5149:19:33"
															},
															"nodeType": "ForStatement",
															"src": "5045:887:33"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1698,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1695,
														"name": "selectorIndex",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1690,
														"src": "4929:13:33",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 1696,
															"name": "l",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1672,
															"src": "4945:1:33",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Layout_$1093_storage_ptr",
																"typeString": "struct DiamondBaseStorage.Layout storage pointer"
															}
														},
														"id": 1697,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4947:13:33",
														"memberName": "selectorCount",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1086,
														"src": "4945:15:33",
														"typeDescriptions": {
															"typeIdentifier": "t_uint16",
															"typeString": "uint16"
														}
													},
													"src": "4929:31:33",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1795,
												"initializationExpression": {
													"assignments": [
														1693
													],
													"declarations": [
														{
															"constant": false,
															"id": 1693,
															"mutability": "mutable",
															"name": "slotIndex",
															"nameLocation": "4918:9:33",
															"nodeType": "VariableDeclaration",
															"scope": 1795,
															"src": "4910:17:33",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 1692,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "4910:7:33",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 1694,
													"nodeType": "VariableDeclarationStatement",
													"src": "4910:17:33"
												},
												"isSimpleCounterLoop": false,
												"loopExpression": {
													"expression": {
														"id": 1700,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "4962:11:33",
														"subExpression": {
															"id": 1699,
															"name": "slotIndex",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1693,
															"src": "4962:9:33",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1701,
													"nodeType": "ExpressionStatement",
													"src": "4962:11:33"
												},
												"nodeType": "ForStatement",
												"src": "4905:1037:33"
											},
											{
												"AST": {
													"nativeSrc": "6019:52:33",
													"nodeType": "YulBlock",
													"src": "6019:52:33",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "addresses",
																		"nativeSrc": "6040:9:33",
																		"nodeType": "YulIdentifier",
																		"src": "6040:9:33"
																	},
																	{
																		"name": "numFacets",
																		"nativeSrc": "6051:9:33",
																		"nodeType": "YulIdentifier",
																		"src": "6051:9:33"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6033:6:33",
																	"nodeType": "YulIdentifier",
																	"src": "6033:6:33"
																},
																"nativeSrc": "6033:28:33",
																"nodeType": "YulFunctionCall",
																"src": "6033:28:33"
															},
															"nativeSrc": "6033:28:33",
															"nodeType": "YulExpressionStatement",
															"src": "6033:28:33"
														}
													]
												},
												"evmVersion": "shanghai",
												"externalReferences": [
													{
														"declaration": 1666,
														"isOffset": false,
														"isSlot": false,
														"src": "6040:9:33",
														"valueSize": 1
													},
													{
														"declaration": 1687,
														"isOffset": false,
														"isSlot": false,
														"src": "6051:9:33",
														"valueSize": 1
													}
												],
												"id": 1796,
												"nodeType": "InlineAssembly",
												"src": "6010:61:33"
											}
										]
									},
									"documentation": {
										"id": 1662,
										"nodeType": "StructuredDocumentation",
										"src": "4477:120:33",
										"text": " @notice get addresses of all facets used by diamond\n @return addresses array of facet addresses"
									},
									"id": 1798,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_facetAddresses",
									"nameLocation": "4611:15:33",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1663,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4626:2:33"
									},
									"returnParameters": {
										"id": 1667,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1666,
												"mutability": "mutable",
												"name": "addresses",
												"nameLocation": "4693:9:33",
												"nodeType": "VariableDeclaration",
												"scope": 1798,
												"src": "4676:26:33",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 1664,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "4676:7:33",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 1665,
													"nodeType": "ArrayTypeName",
													"src": "4676:9:33",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4675:28:33"
									},
									"scope": 1823,
									"src": "4602:1475:33",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1821,
										"nodeType": "Block",
										"src": "6379:87:33",
										"statements": [
											{
												"expression": {
													"id": 1819,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1806,
														"name": "facet",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1804,
														"src": "6389:5:33",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"arguments": [
																	{
																		"baseExpression": {
																			"expression": {
																				"arguments": [],
																				"expression": {
																					"argumentTypes": [],
																					"expression": {
																						"id": 1811,
																						"name": "DiamondBaseStorage",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1111,
																						"src": "6413:18:33",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_contract$_DiamondBaseStorage_$1111_$",
																							"typeString": "type(library DiamondBaseStorage)"
																						}
																					},
																					"id": 1812,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberLocation": "6432:6:33",
																					"memberName": "layout",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 1110,
																					"src": "6413:25:33",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_Layout_$1093_storage_ptr_$",
																						"typeString": "function () pure returns (struct DiamondBaseStorage.Layout storage pointer)"
																					}
																				},
																				"id": 1813,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "6413:27:33",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_Layout_$1093_storage_ptr",
																					"typeString": "struct DiamondBaseStorage.Layout storage pointer"
																				}
																			},
																			"id": 1814,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "6441:6:33",
																			"memberName": "facets",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 1084,
																			"src": "6413:34:33",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_bytes4_$_t_bytes32_$",
																				"typeString": "mapping(bytes4 => bytes32)"
																			}
																		},
																		"id": 1816,
																		"indexExpression": {
																			"id": 1815,
																			"name": "selector",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1801,
																			"src": "6448:8:33",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes4",
																				"typeString": "bytes4"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "6413:44:33",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	],
																	"id": 1810,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "6405:7:33",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bytes20_$",
																		"typeString": "type(bytes20)"
																	},
																	"typeName": {
																		"id": 1809,
																		"name": "bytes20",
																		"nodeType": "ElementaryTypeName",
																		"src": "6405:7:33",
																		"typeDescriptions": {}
																	}
																},
																"id": 1817,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6405:53:33",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes20",
																	"typeString": "bytes20"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes20",
																	"typeString": "bytes20"
																}
															],
															"id": 1808,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6397:7:33",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1807,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6397:7:33",
																"typeDescriptions": {}
															}
														},
														"id": 1818,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6397:62:33",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6389:70:33",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1820,
												"nodeType": "ExpressionStatement",
												"src": "6389:70:33"
											}
										]
									},
									"documentation": {
										"id": 1799,
										"nodeType": "StructuredDocumentation",
										"src": "6083:199:33",
										"text": " @notice get the address of the facet associated with given selector\n @param selector function selector to query\n @return facet facet address (zero address if not found)"
									},
									"id": 1822,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_facetAddress",
									"nameLocation": "6296:13:33",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1802,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1801,
												"mutability": "mutable",
												"name": "selector",
												"nameLocation": "6326:8:33",
												"nodeType": "VariableDeclaration",
												"scope": 1822,
												"src": "6319:15:33",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1800,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "6319:6:33",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6309:31:33"
									},
									"returnParameters": {
										"id": 1805,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1804,
												"mutability": "mutable",
												"name": "facet",
												"nameLocation": "6372:5:33",
												"nodeType": "VariableDeclaration",
												"scope": 1822,
												"src": "6364:13:33",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1803,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6364:7:33",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6363:15:33"
									},
									"scope": 1823,
									"src": "6287:179:33",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1824,
							"src": "360:6108:33",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "33:6436:33"
				},
				"id": 33
			},
			"@solidstate/contracts/proxy/diamond/readable/IDiamondReadable.sol": {
				"ast": {
					"absolutePath": "@solidstate/contracts/proxy/diamond/readable/IDiamondReadable.sol",
					"exportedSymbols": {
						"IDiamondReadable": [
							1835
						],
						"IDiamondReadableInternal": [
							1843
						],
						"IERC2535DiamondLoupe": [
							529
						]
					},
					"id": 1836,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1825,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".18"
							],
							"nodeType": "PragmaDirective",
							"src": "33:24:34"
						},
						{
							"absolutePath": "@solidstate/contracts/interfaces/IERC2535DiamondLoupe.sol",
							"file": "../../../interfaces/IERC2535DiamondLoupe.sol",
							"id": 1827,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1836,
							"sourceUnit": 530,
							"src": "59:84:34",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1826,
										"name": "IERC2535DiamondLoupe",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 529,
										"src": "68:20:34",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@solidstate/contracts/proxy/diamond/readable/IDiamondReadableInternal.sol",
							"file": "./IDiamondReadableInternal.sol",
							"id": 1829,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1836,
							"sourceUnit": 1844,
							"src": "144:74:34",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1828,
										"name": "IDiamondReadableInternal",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1843,
										"src": "153:24:34",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1831,
										"name": "IERC2535DiamondLoupe",
										"nameLocations": [
											"358:20:34"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 529,
										"src": "358:20:34"
									},
									"id": 1832,
									"nodeType": "InheritanceSpecifier",
									"src": "358:20:34"
								},
								{
									"baseName": {
										"id": 1833,
										"name": "IDiamondReadableInternal",
										"nameLocations": [
											"380:24:34"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1843,
										"src": "380:24:34"
									},
									"id": 1834,
									"nodeType": "InheritanceSpecifier",
									"src": "380:24:34"
								}
							],
							"canonicalName": "IDiamondReadable",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1830,
								"nodeType": "StructuredDocumentation",
								"src": "220:107:34",
								"text": " @title Diamond proxy introspection interface\n @dev see https://eips.ethereum.org/EIPS/eip-2535"
							},
							"fullyImplemented": false,
							"id": 1835,
							"linearizedBaseContracts": [
								1835,
								1843,
								529,
								539
							],
							"name": "IDiamondReadable",
							"nameLocation": "338:16:34",
							"nodeType": "ContractDefinition",
							"nodes": [],
							"scope": 1836,
							"src": "328:81:34",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "33:377:34"
				},
				"id": 34
			},
			"@solidstate/contracts/proxy/diamond/readable/IDiamondReadableInternal.sol": {
				"ast": {
					"absolutePath": "@solidstate/contracts/proxy/diamond/readable/IDiamondReadableInternal.sol",
					"exportedSymbols": {
						"IDiamondReadableInternal": [
							1843
						],
						"IERC2535DiamondLoupeInternal": [
							539
						]
					},
					"id": 1844,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1837,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".18"
							],
							"nodeType": "PragmaDirective",
							"src": "33:24:35"
						},
						{
							"absolutePath": "@solidstate/contracts/interfaces/IERC2535DiamondLoupeInternal.sol",
							"file": "../../../interfaces/IERC2535DiamondLoupeInternal.sol",
							"id": 1839,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1844,
							"sourceUnit": 540,
							"src": "59:100:35",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1838,
										"name": "IERC2535DiamondLoupeInternal",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 539,
										"src": "68:28:35",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1841,
										"name": "IERC2535DiamondLoupeInternal",
										"nameLocations": [
											"337:28:35"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 539,
										"src": "337:28:35"
									},
									"id": 1842,
									"nodeType": "InheritanceSpecifier",
									"src": "337:28:35"
								}
							],
							"canonicalName": "IDiamondReadableInternal",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1840,
								"nodeType": "StructuredDocumentation",
								"src": "161:137:35",
								"text": " @title Diamond proxy introspection interface needed for internal functions\n @dev see https://eips.ethereum.org/EIPS/eip-2535"
							},
							"fullyImplemented": true,
							"id": 1843,
							"linearizedBaseContracts": [
								1843,
								539
							],
							"name": "IDiamondReadableInternal",
							"nameLocation": "309:24:35",
							"nodeType": "ContractDefinition",
							"nodes": [],
							"scope": 1844,
							"src": "299:71:35",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "33:338:35"
				},
				"id": 35
			},
			"@solidstate/contracts/proxy/diamond/writable/DiamondWritable.sol": {
				"ast": {
					"absolutePath": "@solidstate/contracts/proxy/diamond/writable/DiamondWritable.sol",
					"exportedSymbols": {
						"DiamondWritable": [
							1882
						],
						"DiamondWritableInternal": [
							2702
						],
						"IDiamondWritable": [
							2714
						],
						"IERC2535DiamondCut": [
							462
						],
						"OwnableInternal": [
							212
						]
					},
					"id": 1883,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1845,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".18"
							],
							"nodeType": "PragmaDirective",
							"src": "33:24:36"
						},
						{
							"absolutePath": "@solidstate/contracts/interfaces/IERC2535DiamondCut.sol",
							"file": "../../../interfaces/IERC2535DiamondCut.sol",
							"id": 1847,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1883,
							"sourceUnit": 463,
							"src": "59:80:36",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1846,
										"name": "IERC2535DiamondCut",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 462,
										"src": "68:18:36",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@solidstate/contracts/access/ownable/OwnableInternal.sol",
							"file": "../../../access/ownable/OwnableInternal.sol",
							"id": 1849,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1883,
							"sourceUnit": 213,
							"src": "140:78:36",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1848,
										"name": "OwnableInternal",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 212,
										"src": "149:15:36",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@solidstate/contracts/proxy/diamond/writable/IDiamondWritable.sol",
							"file": "./IDiamondWritable.sol",
							"id": 1851,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1883,
							"sourceUnit": 2715,
							"src": "219:58:36",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1850,
										"name": "IDiamondWritable",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 2714,
										"src": "228:16:36",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol",
							"file": "./DiamondWritableInternal.sol",
							"id": 1853,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1883,
							"sourceUnit": 2703,
							"src": "278:72:36",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1852,
										"name": "DiamondWritableInternal",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 2702,
										"src": "287:23:36",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 1855,
										"name": "IDiamondWritable",
										"nameLocations": [
											"452:16:36"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2714,
										"src": "452:16:36"
									},
									"id": 1856,
									"nodeType": "InheritanceSpecifier",
									"src": "452:16:36"
								},
								{
									"baseName": {
										"id": 1857,
										"name": "DiamondWritableInternal",
										"nameLocations": [
											"474:23:36"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2702,
										"src": "474:23:36"
									},
									"id": 1858,
									"nodeType": "InheritanceSpecifier",
									"src": "474:23:36"
								},
								{
									"baseName": {
										"id": 1859,
										"name": "OwnableInternal",
										"nameLocations": [
											"503:15:36"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 212,
										"src": "503:15:36"
									},
									"id": 1860,
									"nodeType": "InheritanceSpecifier",
									"src": "503:15:36"
								}
							],
							"canonicalName": "DiamondWritable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1854,
								"nodeType": "StructuredDocumentation",
								"src": "352:58:36",
								"text": " @title EIP-2535 \"Diamond\" proxy update contract"
							},
							"fullyImplemented": true,
							"id": 1882,
							"linearizedBaseContracts": [
								1882,
								212,
								21,
								442,
								2702,
								2714,
								2737,
								462,
								489
							],
							"name": "DiamondWritable",
							"nameLocation": "429:15:36",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"baseFunctions": [
										461
									],
									"body": {
										"id": 1880,
										"nodeType": "Block",
										"src": "716:53:36",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1875,
															"name": "facetCuts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1865,
															"src": "738:9:36",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_FacetCut_$478_calldata_ptr_$dyn_calldata_ptr",
																"typeString": "struct IERC2535DiamondCutInternal.FacetCut calldata[] calldata"
															}
														},
														{
															"id": 1876,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1867,
															"src": "749:6:36",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1877,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1869,
															"src": "757:4:36",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_calldata_ptr",
																"typeString": "bytes calldata"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_array$_t_struct$_FacetCut_$478_calldata_ptr_$dyn_calldata_ptr",
																"typeString": "struct IERC2535DiamondCutInternal.FacetCut calldata[] calldata"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_calldata_ptr",
																"typeString": "bytes calldata"
															}
														],
														"id": 1874,
														"name": "_diamondCut",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2087,
														"src": "726:11:36",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_array$_t_struct$_FacetCut_$478_memory_ptr_$dyn_memory_ptr_$_t_address_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (struct IERC2535DiamondCutInternal.FacetCut memory[] memory,address,bytes memory)"
														}
													},
													"id": 1878,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "726:36:36",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1879,
												"nodeType": "ExpressionStatement",
												"src": "726:36:36"
											}
										]
									},
									"documentation": {
										"id": 1861,
										"nodeType": "StructuredDocumentation",
										"src": "525:49:36",
										"text": " @inheritdoc IERC2535DiamondCut"
									},
									"functionSelector": "1f931c1c",
									"id": 1881,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1872,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1871,
												"name": "onlyOwner",
												"nameLocations": [
													"706:9:36"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 116,
												"src": "706:9:36"
											},
											"nodeType": "ModifierInvocation",
											"src": "706:9:36"
										}
									],
									"name": "diamondCut",
									"nameLocation": "588:10:36",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1870,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1865,
												"mutability": "mutable",
												"name": "facetCuts",
												"nameLocation": "628:9:36",
												"nodeType": "VariableDeclaration",
												"scope": 1881,
												"src": "608:29:36",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_struct$_FacetCut_$478_calldata_ptr_$dyn_calldata_ptr",
													"typeString": "struct IERC2535DiamondCutInternal.FacetCut[]"
												},
												"typeName": {
													"baseType": {
														"id": 1863,
														"nodeType": "UserDefinedTypeName",
														"pathNode": {
															"id": 1862,
															"name": "FacetCut",
															"nameLocations": [
																"608:8:36"
															],
															"nodeType": "IdentifierPath",
															"referencedDeclaration": 478,
															"src": "608:8:36"
														},
														"referencedDeclaration": 478,
														"src": "608:8:36",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_FacetCut_$478_storage_ptr",
															"typeString": "struct IERC2535DiamondCutInternal.FacetCut"
														}
													},
													"id": 1864,
													"nodeType": "ArrayTypeName",
													"src": "608:10:36",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_FacetCut_$478_storage_$dyn_storage_ptr",
														"typeString": "struct IERC2535DiamondCutInternal.FacetCut[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1867,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "655:6:36",
												"nodeType": "VariableDeclaration",
												"scope": 1881,
												"src": "647:14:36",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1866,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "647:7:36",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1869,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "686:4:36",
												"nodeType": "VariableDeclaration",
												"scope": 1881,
												"src": "671:19:36",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1868,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "671:5:36",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "598:98:36"
									},
									"returnParameters": {
										"id": 1873,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "716:0:36"
									},
									"scope": 1882,
									"src": "579:190:36",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1883,
							"src": "411:360:36",
							"usedErrors": [
								18,
								20,
								2722,
								2724,
								2726,
								2728,
								2730,
								2732,
								2734,
								2736
							],
							"usedEvents": [
								441,
								488
							]
						}
					],
					"src": "33:739:36"
				},
				"id": 36
			},
			"@solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol": {
				"ast": {
					"absolutePath": "@solidstate/contracts/proxy/diamond/writable/DiamondWritableInternal.sol",
					"exportedSymbols": {
						"AddressUtils": [
							2972
						],
						"DiamondBaseStorage": [
							1111
						],
						"DiamondWritableInternal": [
							2702
						],
						"IDiamondWritableInternal": [
							2737
						]
					},
					"id": 2703,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1884,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".18"
							],
							"nodeType": "PragmaDirective",
							"src": "33:24:37"
						},
						{
							"absolutePath": "@solidstate/contracts/utils/AddressUtils.sol",
							"file": "../../../utils/AddressUtils.sol",
							"id": 1886,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2703,
							"sourceUnit": 2973,
							"src": "59:63:37",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1885,
										"name": "AddressUtils",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 2972,
										"src": "68:12:37",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@solidstate/contracts/proxy/diamond/base/DiamondBaseStorage.sol",
							"file": "../base/DiamondBaseStorage.sol",
							"id": 1888,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2703,
							"sourceUnit": 1112,
							"src": "123:68:37",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1887,
										"name": "DiamondBaseStorage",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1111,
										"src": "132:18:37",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@solidstate/contracts/proxy/diamond/writable/IDiamondWritableInternal.sol",
							"file": "./IDiamondWritableInternal.sol",
							"id": 1890,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2703,
							"sourceUnit": 2738,
							"src": "192:74:37",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1889,
										"name": "IDiamondWritableInternal",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 2737,
										"src": "201:24:37",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 1891,
										"name": "IDiamondWritableInternal",
										"nameLocations": [
											"313:24:37"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2737,
										"src": "313:24:37"
									},
									"id": 1892,
									"nodeType": "InheritanceSpecifier",
									"src": "313:24:37"
								}
							],
							"canonicalName": "DiamondWritableInternal",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 2702,
							"linearizedBaseContracts": [
								2702,
								2737,
								489
							],
							"name": "DiamondWritableInternal",
							"nameLocation": "286:23:37",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 1895,
									"libraryName": {
										"id": 1893,
										"name": "AddressUtils",
										"nameLocations": [
											"350:12:37"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2972,
										"src": "350:12:37"
									},
									"nodeType": "UsingForDirective",
									"src": "344:31:37",
									"typeName": {
										"id": 1894,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "367:7:37",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									}
								},
								{
									"constant": true,
									"id": 1904,
									"mutability": "constant",
									"name": "CLEAR_ADDRESS_MASK",
									"nameLocation": "406:18:37",
									"nodeType": "VariableDeclaration",
									"scope": 2702,
									"src": "381:98:37",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 1896,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "381:7:37",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"arguments": [
											{
												"arguments": [
													{
														"hexValue": "3078666666666666666666666666666666666666666666666666",
														"id": 1901,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "451:26:37",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_79228162514264337593543950335_by_1",
															"typeString": "int_const 79228162514264337593543950335"
														},
														"value": "0xffffffffffffffffffffffff"
													}
												],
												"expression": {
													"argumentTypes": [
														{
															"typeIdentifier": "t_rational_79228162514264337593543950335_by_1",
															"typeString": "int_const 79228162514264337593543950335"
														}
													],
													"id": 1900,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"lValueRequested": false,
													"nodeType": "ElementaryTypeNameExpression",
													"src": "443:7:37",
													"typeDescriptions": {
														"typeIdentifier": "t_type$_t_uint256_$",
														"typeString": "type(uint256)"
													},
													"typeName": {
														"id": 1899,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "443:7:37",
														"typeDescriptions": {}
													}
												},
												"id": 1902,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "typeConversion",
												"lValueRequested": false,
												"nameLocations": [],
												"names": [],
												"nodeType": "FunctionCall",
												"src": "443:35:37",
												"tryCall": false,
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											],
											"id": 1898,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"lValueRequested": false,
											"nodeType": "ElementaryTypeNameExpression",
											"src": "435:7:37",
											"typeDescriptions": {
												"typeIdentifier": "t_type$_t_bytes32_$",
												"typeString": "type(bytes32)"
											},
											"typeName": {
												"id": 1897,
												"name": "bytes32",
												"nodeType": "ElementaryTypeName",
												"src": "435:7:37",
												"typeDescriptions": {}
											}
										},
										"id": 1903,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "typeConversion",
										"lValueRequested": false,
										"nameLocations": [],
										"names": [],
										"nodeType": "FunctionCall",
										"src": "435:44:37",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 1915,
									"mutability": "constant",
									"name": "CLEAR_SELECTOR_MASK",
									"nameLocation": "510:19:37",
									"nodeType": "VariableDeclaration",
									"scope": 2702,
									"src": "485:90:37",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 1905,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "485:7:37",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"arguments": [
											{
												"arguments": [
													{
														"commonType": {
															"typeIdentifier": "t_rational_115792089210356248756420345214020892766250353992003419616917011526809519390720_by_1",
															"typeString": "int_const 1157...(70 digits omitted)...0720"
														},
														"id": 1912,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"leftExpression": {
															"hexValue": "30786666666666666666",
															"id": 1910,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "556:10:37",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_4294967295_by_1",
																"typeString": "int_const 4294967295"
															},
															"value": "0xffffffff"
														},
														"nodeType": "BinaryOperation",
														"operator": "<<",
														"rightExpression": {
															"hexValue": "323234",
															"id": 1911,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "570:3:37",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_224_by_1",
																"typeString": "int_const 224"
															},
															"value": "224"
														},
														"src": "556:17:37",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_115792089210356248756420345214020892766250353992003419616917011526809519390720_by_1",
															"typeString": "int_const 1157...(70 digits omitted)...0720"
														}
													}
												],
												"expression": {
													"argumentTypes": [
														{
															"typeIdentifier": "t_rational_115792089210356248756420345214020892766250353992003419616917011526809519390720_by_1",
															"typeString": "int_const 1157...(70 digits omitted)...0720"
														}
													],
													"id": 1909,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"lValueRequested": false,
													"nodeType": "ElementaryTypeNameExpression",
													"src": "548:7:37",
													"typeDescriptions": {
														"typeIdentifier": "t_type$_t_uint256_$",
														"typeString": "type(uint256)"
													},
													"typeName": {
														"id": 1908,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "548:7:37",
														"typeDescriptions": {}
													}
												},
												"id": 1913,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "typeConversion",
												"lValueRequested": false,
												"nameLocations": [],
												"names": [],
												"nodeType": "FunctionCall",
												"src": "548:26:37",
												"tryCall": false,
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											],
											"id": 1907,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"lValueRequested": false,
											"nodeType": "ElementaryTypeNameExpression",
											"src": "540:7:37",
											"typeDescriptions": {
												"typeIdentifier": "t_type$_t_bytes32_$",
												"typeString": "type(bytes32)"
											},
											"typeName": {
												"id": 1906,
												"name": "bytes32",
												"nodeType": "ElementaryTypeName",
												"src": "540:7:37",
												"typeDescriptions": {}
											}
										},
										"id": 1914,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "typeConversion",
										"lValueRequested": false,
										"nameLocations": [],
										"names": [],
										"nodeType": "FunctionCall",
										"src": "540:35:37",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 2086,
										"nodeType": "Block",
										"src": "982:1911:37",
										"statements": [
											{
												"assignments": [
													1931
												],
												"declarations": [
													{
														"constant": false,
														"id": 1931,
														"mutability": "mutable",
														"name": "l",
														"nameLocation": "1026:1:37",
														"nodeType": "VariableDeclaration",
														"scope": 2086,
														"src": "992:35:37",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Layout_$1093_storage_ptr",
															"typeString": "struct DiamondBaseStorage.Layout"
														},
														"typeName": {
															"id": 1930,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1929,
																"name": "DiamondBaseStorage.Layout",
																"nameLocations": [
																	"992:18:37",
																	"1011:6:37"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 1093,
																"src": "992:25:37"
															},
															"referencedDeclaration": 1093,
															"src": "992:25:37",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Layout_$1093_storage_ptr",
																"typeString": "struct DiamondBaseStorage.Layout"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1935,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 1932,
															"name": "DiamondBaseStorage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1111,
															"src": "1030:18:37",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_DiamondBaseStorage_$1111_$",
																"typeString": "type(library DiamondBaseStorage)"
															}
														},
														"id": 1933,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1049:6:37",
														"memberName": "layout",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1110,
														"src": "1030:25:37",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_Layout_$1093_storage_ptr_$",
															"typeString": "function () pure returns (struct DiamondBaseStorage.Layout storage pointer)"
														}
													},
													"id": 1934,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1030:27:37",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Layout_$1093_storage_ptr",
														"typeString": "struct DiamondBaseStorage.Layout storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "992:65:37"
											},
											{
												"id": 2085,
												"nodeType": "UncheckedBlock",
												"src": "1068:1819:37",
												"statements": [
													{
														"assignments": [
															1937
														],
														"declarations": [
															{
																"constant": false,
																"id": 1937,
																"mutability": "mutable",
																"name": "originalSelectorCount",
																"nameLocation": "1100:21:37",
																"nodeType": "VariableDeclaration",
																"scope": 2085,
																"src": "1092:29:37",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1936,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "1092:7:37",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1940,
														"initialValue": {
															"expression": {
																"id": 1938,
																"name": "l",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1931,
																"src": "1124:1:37",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Layout_$1093_storage_ptr",
																	"typeString": "struct DiamondBaseStorage.Layout storage pointer"
																}
															},
															"id": 1939,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1126:13:37",
															"memberName": "selectorCount",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1086,
															"src": "1124:15:37",
															"typeDescriptions": {
																"typeIdentifier": "t_uint16",
																"typeString": "uint16"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "1092:47:37"
													},
													{
														"assignments": [
															1942
														],
														"declarations": [
															{
																"constant": false,
																"id": 1942,
																"mutability": "mutable",
																"name": "selectorCount",
																"nameLocation": "1161:13:37",
																"nodeType": "VariableDeclaration",
																"scope": 2085,
																"src": "1153:21:37",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1941,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "1153:7:37",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1944,
														"initialValue": {
															"id": 1943,
															"name": "originalSelectorCount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1937,
															"src": "1177:21:37",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "1153:45:37"
													},
													{
														"assignments": [
															1946
														],
														"declarations": [
															{
																"constant": false,
																"id": 1946,
																"mutability": "mutable",
																"name": "selectorSlot",
																"nameLocation": "1220:12:37",
																"nodeType": "VariableDeclaration",
																"scope": 2085,
																"src": "1212:20:37",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																},
																"typeName": {
																	"id": 1945,
																	"name": "bytes32",
																	"nodeType": "ElementaryTypeName",
																	"src": "1212:7:37",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1947,
														"nodeType": "VariableDeclarationStatement",
														"src": "1212:20:37"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1952,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1950,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1948,
																	"name": "selectorCount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1942,
																	"src": "1306:13:37",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"hexValue": "37",
																	"id": 1949,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1322:1:37",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_7_by_1",
																		"typeString": "int_const 7"
																	},
																	"value": "7"
																},
																"src": "1306:17:37",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1951,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1326:1:37",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1306:21:37",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1963,
														"nodeType": "IfStatement",
														"src": "1302:151:37",
														"trueBody": {
															"id": 1962,
															"nodeType": "Block",
															"src": "1329:124:37",
															"statements": [
																{
																	"expression": {
																		"id": 1960,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1953,
																			"name": "selectorSlot",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1946,
																			"src": "1388:12:37",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes32",
																				"typeString": "bytes32"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"baseExpression": {
																				"expression": {
																					"id": 1954,
																					"name": "l",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1931,
																					"src": "1403:1:37",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_Layout_$1093_storage_ptr",
																						"typeString": "struct DiamondBaseStorage.Layout storage pointer"
																					}
																				},
																				"id": 1955,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "1405:13:37",
																				"memberName": "selectorSlots",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 1090,
																				"src": "1403:15:37",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_uint256_$_t_bytes32_$",
																					"typeString": "mapping(uint256 => bytes32)"
																				}
																			},
																			"id": 1959,
																			"indexExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1958,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1956,
																					"name": "selectorCount",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1942,
																					"src": "1419:13:37",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": ">>",
																				"rightExpression": {
																					"hexValue": "33",
																					"id": 1957,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "1436:1:37",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_3_by_1",
																						"typeString": "int_const 3"
																					},
																					"value": "3"
																				},
																				"src": "1419:18:37",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "1403:35:37",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes32",
																				"typeString": "bytes32"
																			}
																		},
																		"src": "1388:50:37",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	"id": 1961,
																	"nodeType": "ExpressionStatement",
																	"src": "1388:50:37"
																}
															]
														}
													},
													{
														"body": {
															"id": 2041,
															"nodeType": "Block",
															"src": "1510:970:37",
															"statements": [
																{
																	"assignments": [
																		1976
																	],
																	"declarations": [
																		{
																			"constant": false,
																			"id": 1976,
																			"mutability": "mutable",
																			"name": "facetCut",
																			"nameLocation": "1544:8:37",
																			"nodeType": "VariableDeclaration",
																			"scope": 2041,
																			"src": "1528:24:37",
																			"stateVariable": false,
																			"storageLocation": "memory",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_FacetCut_$478_memory_ptr",
																				"typeString": "struct IERC2535DiamondCutInternal.FacetCut"
																			},
																			"typeName": {
																				"id": 1975,
																				"nodeType": "UserDefinedTypeName",
																				"pathNode": {
																					"id": 1974,
																					"name": "FacetCut",
																					"nameLocations": [
																						"1528:8:37"
																					],
																					"nodeType": "IdentifierPath",
																					"referencedDeclaration": 478,
																					"src": "1528:8:37"
																				},
																				"referencedDeclaration": 478,
																				"src": "1528:8:37",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_FacetCut_$478_storage_ptr",
																					"typeString": "struct IERC2535DiamondCutInternal.FacetCut"
																				}
																			},
																			"visibility": "internal"
																		}
																	],
																	"id": 1980,
																	"initialValue": {
																		"baseExpression": {
																			"id": 1977,
																			"name": "facetCuts",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1920,
																			"src": "1555:9:37",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_struct$_FacetCut_$478_memory_ptr_$dyn_memory_ptr",
																				"typeString": "struct IERC2535DiamondCutInternal.FacetCut memory[] memory"
																			}
																		},
																		"id": 1979,
																		"indexExpression": {
																			"id": 1978,
																			"name": "i",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1965,
																			"src": "1565:1:37",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "1555:12:37",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_FacetCut_$478_memory_ptr",
																			"typeString": "struct IERC2535DiamondCutInternal.FacetCut memory"
																		}
																	},
																	"nodeType": "VariableDeclarationStatement",
																	"src": "1528:39:37"
																},
																{
																	"assignments": [
																		1983
																	],
																	"declarations": [
																		{
																			"constant": false,
																			"id": 1983,
																			"mutability": "mutable",
																			"name": "action",
																			"nameLocation": "1600:6:37",
																			"nodeType": "VariableDeclaration",
																			"scope": 2041,
																			"src": "1585:21:37",
																			"stateVariable": false,
																			"storageLocation": "default",
																			"typeDescriptions": {
																				"typeIdentifier": "t_enum$_FacetCutAction_$469",
																				"typeString": "enum IERC2535DiamondCutInternal.FacetCutAction"
																			},
																			"typeName": {
																				"id": 1982,
																				"nodeType": "UserDefinedTypeName",
																				"pathNode": {
																					"id": 1981,
																					"name": "FacetCutAction",
																					"nameLocations": [
																						"1585:14:37"
																					],
																					"nodeType": "IdentifierPath",
																					"referencedDeclaration": 469,
																					"src": "1585:14:37"
																				},
																				"referencedDeclaration": 469,
																				"src": "1585:14:37",
																				"typeDescriptions": {
																					"typeIdentifier": "t_enum$_FacetCutAction_$469",
																					"typeString": "enum IERC2535DiamondCutInternal.FacetCutAction"
																				}
																			},
																			"visibility": "internal"
																		}
																	],
																	"id": 1986,
																	"initialValue": {
																		"expression": {
																			"id": 1984,
																			"name": "facetCut",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1976,
																			"src": "1609:8:37",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_FacetCut_$478_memory_ptr",
																				"typeString": "struct IERC2535DiamondCutInternal.FacetCut memory"
																			}
																		},
																		"id": 1985,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "1618:6:37",
																		"memberName": "action",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 474,
																		"src": "1609:15:37",
																		"typeDescriptions": {
																			"typeIdentifier": "t_enum$_FacetCutAction_$469",
																			"typeString": "enum IERC2535DiamondCutInternal.FacetCutAction"
																		}
																	},
																	"nodeType": "VariableDeclarationStatement",
																	"src": "1585:39:37"
																},
																{
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1991,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"expression": {
																				"expression": {
																					"id": 1987,
																					"name": "facetCut",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1976,
																					"src": "1647:8:37",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_FacetCut_$478_memory_ptr",
																						"typeString": "struct IERC2535DiamondCutInternal.FacetCut memory"
																					}
																				},
																				"id": 1988,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "1656:9:37",
																				"memberName": "selectors",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 477,
																				"src": "1647:18:37",
																				"typeDescriptions": {
																					"typeIdentifier": "t_array$_t_bytes4_$dyn_memory_ptr",
																					"typeString": "bytes4[] memory"
																				}
																			},
																			"id": 1989,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "1666:6:37",
																			"memberName": "length",
																			"nodeType": "MemberAccess",
																			"src": "1647:25:37",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 1990,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1676:1:37",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "1647:30:37",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"id": 1995,
																	"nodeType": "IfStatement",
																	"src": "1643:102:37",
																	"trueBody": {
																		"errorCall": {
																			"arguments": [],
																			"expression": {
																				"argumentTypes": [],
																				"id": 1992,
																				"name": "DiamondWritable__SelectorNotSpecified",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2734,
																				"src": "1706:37:37",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$__$returns$__$",
																					"typeString": "function () pure"
																				}
																			},
																			"id": 1993,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "1706:39:37",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 1994,
																		"nodeType": "RevertStatement",
																		"src": "1699:46:37"
																	}
																},
																{
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_enum$_FacetCutAction_$469",
																			"typeString": "enum IERC2535DiamondCutInternal.FacetCutAction"
																		},
																		"id": 1999,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1996,
																			"name": "action",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1983,
																			"src": "1768:6:37",
																			"typeDescriptions": {
																				"typeIdentifier": "t_enum$_FacetCutAction_$469",
																				"typeString": "enum IERC2535DiamondCutInternal.FacetCutAction"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"expression": {
																				"id": 1997,
																				"name": "FacetCutAction",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 469,
																				"src": "1778:14:37",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_enum$_FacetCutAction_$469_$",
																					"typeString": "type(enum IERC2535DiamondCutInternal.FacetCutAction)"
																				}
																			},
																			"id": 1998,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"memberLocation": "1793:3:37",
																			"memberName": "ADD",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 466,
																			"src": "1778:18:37",
																			"typeDescriptions": {
																				"typeIdentifier": "t_enum$_FacetCutAction_$469",
																				"typeString": "enum IERC2535DiamondCutInternal.FacetCutAction"
																			}
																		},
																		"src": "1768:28:37",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"falseBody": {
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_enum$_FacetCutAction_$469",
																				"typeString": "enum IERC2535DiamondCutInternal.FacetCutAction"
																			},
																			"id": 2015,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2012,
																				"name": "action",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1983,
																				"src": "2059:6:37",
																				"typeDescriptions": {
																					"typeIdentifier": "t_enum$_FacetCutAction_$469",
																					"typeString": "enum IERC2535DiamondCutInternal.FacetCutAction"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "==",
																			"rightExpression": {
																				"expression": {
																					"id": 2013,
																					"name": "FacetCutAction",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 469,
																					"src": "2069:14:37",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_enum$_FacetCutAction_$469_$",
																						"typeString": "type(enum IERC2535DiamondCutInternal.FacetCutAction)"
																					}
																				},
																				"id": 2014,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"memberLocation": "2084:7:37",
																				"memberName": "REPLACE",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 467,
																				"src": "2069:22:37",
																				"typeDescriptions": {
																					"typeIdentifier": "t_enum$_FacetCutAction_$469",
																					"typeString": "enum IERC2535DiamondCutInternal.FacetCutAction"
																				}
																			},
																			"src": "2059:32:37",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseBody": {
																			"condition": {
																				"commonType": {
																					"typeIdentifier": "t_enum$_FacetCutAction_$469",
																					"typeString": "enum IERC2535DiamondCutInternal.FacetCutAction"
																				},
																				"id": 2025,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2022,
																					"name": "action",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1983,
																					"src": "2179:6:37",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_FacetCutAction_$469",
																						"typeString": "enum IERC2535DiamondCutInternal.FacetCutAction"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "==",
																				"rightExpression": {
																					"expression": {
																						"id": 2023,
																						"name": "FacetCutAction",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 469,
																						"src": "2189:14:37",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_enum$_FacetCutAction_$469_$",
																							"typeString": "type(enum IERC2535DiamondCutInternal.FacetCutAction)"
																						}
																					},
																					"id": 2024,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"memberLocation": "2204:6:37",
																					"memberName": "REMOVE",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 468,
																					"src": "2189:21:37",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_FacetCutAction_$469",
																						"typeString": "enum IERC2535DiamondCutInternal.FacetCutAction"
																					}
																				},
																				"src": "2179:31:37",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"id": 2038,
																			"nodeType": "IfStatement",
																			"src": "2175:291:37",
																			"trueBody": {
																				"id": 2037,
																				"nodeType": "Block",
																				"src": "2212:254:37",
																				"statements": [
																					{
																						"expression": {
																							"id": 2035,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"leftHandSide": {
																								"components": [
																									{
																										"id": 2026,
																										"name": "selectorCount",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 1942,
																										"src": "2235:13:37",
																										"typeDescriptions": {
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										}
																									},
																									{
																										"id": 2027,
																										"name": "selectorSlot",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 1946,
																										"src": "2250:12:37",
																										"typeDescriptions": {
																											"typeIdentifier": "t_bytes32",
																											"typeString": "bytes32"
																										}
																									}
																								],
																								"id": 2028,
																								"isConstant": false,
																								"isInlineArray": false,
																								"isLValue": true,
																								"isPure": false,
																								"lValueRequested": true,
																								"nodeType": "TupleExpression",
																								"src": "2234:29:37",
																								"typeDescriptions": {
																									"typeIdentifier": "t_tuple$_t_uint256_$_t_bytes32_$",
																									"typeString": "tuple(uint256,bytes32)"
																								}
																							},
																							"nodeType": "Assignment",
																							"operator": "=",
																							"rightHandSide": {
																								"arguments": [
																									{
																										"id": 2030,
																										"name": "l",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 1931,
																										"src": "2313:1:37",
																										"typeDescriptions": {
																											"typeIdentifier": "t_struct$_Layout_$1093_storage_ptr",
																											"typeString": "struct DiamondBaseStorage.Layout storage pointer"
																										}
																									},
																									{
																										"id": 2031,
																										"name": "selectorCount",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 1942,
																										"src": "2340:13:37",
																										"typeDescriptions": {
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										}
																									},
																									{
																										"id": 2032,
																										"name": "selectorSlot",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 1946,
																										"src": "2379:12:37",
																										"typeDescriptions": {
																											"typeIdentifier": "t_bytes32",
																											"typeString": "bytes32"
																										}
																									},
																									{
																										"id": 2033,
																										"name": "facetCut",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 1976,
																										"src": "2417:8:37",
																										"typeDescriptions": {
																											"typeIdentifier": "t_struct$_FacetCut_$478_memory_ptr",
																											"typeString": "struct IERC2535DiamondCutInternal.FacetCut memory"
																										}
																									}
																								],
																								"expression": {
																									"argumentTypes": [
																										{
																											"typeIdentifier": "t_struct$_Layout_$1093_storage_ptr",
																											"typeString": "struct DiamondBaseStorage.Layout storage pointer"
																										},
																										{
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										},
																										{
																											"typeIdentifier": "t_bytes32",
																											"typeString": "bytes32"
																										},
																										{
																											"typeIdentifier": "t_struct$_FacetCut_$478_memory_ptr",
																											"typeString": "struct IERC2535DiamondCutInternal.FacetCut memory"
																										}
																									],
																									"id": 2029,
																									"name": "_removeFacetSelectors",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 2538,
																									"src": "2266:21:37",
																									"typeDescriptions": {
																										"typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Layout_$1093_storage_ptr_$_t_uint256_$_t_bytes32_$_t_struct$_FacetCut_$478_memory_ptr_$returns$_t_uint256_$_t_bytes32_$",
																										"typeString": "function (struct DiamondBaseStorage.Layout storage pointer,uint256,bytes32,struct IERC2535DiamondCutInternal.FacetCut memory) returns (uint256,bytes32)"
																									}
																								},
																								"id": 2034,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"kind": "functionCall",
																								"lValueRequested": false,
																								"nameLocations": [],
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "2266:181:37",
																								"tryCall": false,
																								"typeDescriptions": {
																									"typeIdentifier": "t_tuple$_t_uint256_$_t_bytes32_$",
																									"typeString": "tuple(uint256,bytes32)"
																								}
																							},
																							"src": "2234:213:37",
																							"typeDescriptions": {
																								"typeIdentifier": "t_tuple$__$",
																								"typeString": "tuple()"
																							}
																						},
																						"id": 2036,
																						"nodeType": "ExpressionStatement",
																						"src": "2234:213:37"
																					}
																				]
																			}
																		},
																		"id": 2039,
																		"nodeType": "IfStatement",
																		"src": "2055:411:37",
																		"trueBody": {
																			"id": 2021,
																			"nodeType": "Block",
																			"src": "2093:76:37",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [
																							{
																								"id": 2017,
																								"name": "l",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1931,
																								"src": "2138:1:37",
																								"typeDescriptions": {
																									"typeIdentifier": "t_struct$_Layout_$1093_storage_ptr",
																									"typeString": "struct DiamondBaseStorage.Layout storage pointer"
																								}
																							},
																							{
																								"id": 2018,
																								"name": "facetCut",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1976,
																								"src": "2141:8:37",
																								"typeDescriptions": {
																									"typeIdentifier": "t_struct$_FacetCut_$478_memory_ptr",
																									"typeString": "struct IERC2535DiamondCutInternal.FacetCut memory"
																								}
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_struct$_Layout_$1093_storage_ptr",
																									"typeString": "struct DiamondBaseStorage.Layout storage pointer"
																								},
																								{
																									"typeIdentifier": "t_struct$_FacetCut_$478_memory_ptr",
																									"typeString": "struct IERC2535DiamondCutInternal.FacetCut memory"
																								}
																							],
																							"id": 2016,
																							"name": "_replaceFacetSelectors",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 2640,
																							"src": "2115:22:37",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Layout_$1093_storage_ptr_$_t_struct$_FacetCut_$478_memory_ptr_$returns$__$",
																								"typeString": "function (struct DiamondBaseStorage.Layout storage pointer,struct IERC2535DiamondCutInternal.FacetCut memory)"
																							}
																						},
																						"id": 2019,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "functionCall",
																						"lValueRequested": false,
																						"nameLocations": [],
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "2115:35:37",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_tuple$__$",
																							"typeString": "tuple()"
																						}
																					},
																					"id": 2020,
																					"nodeType": "ExpressionStatement",
																					"src": "2115:35:37"
																				}
																			]
																		}
																	},
																	"id": 2040,
																	"nodeType": "IfStatement",
																	"src": "1764:702:37",
																	"trueBody": {
																		"id": 2011,
																		"nodeType": "Block",
																		"src": "1798:251:37",
																		"statements": [
																			{
																				"expression": {
																					"id": 2009,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftHandSide": {
																						"components": [
																							{
																								"id": 2000,
																								"name": "selectorCount",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1942,
																								"src": "1821:13:37",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							{
																								"id": 2001,
																								"name": "selectorSlot",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1946,
																								"src": "1836:12:37",
																								"typeDescriptions": {
																									"typeIdentifier": "t_bytes32",
																									"typeString": "bytes32"
																								}
																							}
																						],
																						"id": 2002,
																						"isConstant": false,
																						"isInlineArray": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": true,
																						"nodeType": "TupleExpression",
																						"src": "1820:29:37",
																						"typeDescriptions": {
																							"typeIdentifier": "t_tuple$_t_uint256_$_t_bytes32_$",
																							"typeString": "tuple(uint256,bytes32)"
																						}
																					},
																					"nodeType": "Assignment",
																					"operator": "=",
																					"rightHandSide": {
																						"arguments": [
																							{
																								"id": 2004,
																								"name": "l",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1931,
																								"src": "1896:1:37",
																								"typeDescriptions": {
																									"typeIdentifier": "t_struct$_Layout_$1093_storage_ptr",
																									"typeString": "struct DiamondBaseStorage.Layout storage pointer"
																								}
																							},
																							{
																								"id": 2005,
																								"name": "selectorCount",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1942,
																								"src": "1923:13:37",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							{
																								"id": 2006,
																								"name": "selectorSlot",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1946,
																								"src": "1962:12:37",
																								"typeDescriptions": {
																									"typeIdentifier": "t_bytes32",
																									"typeString": "bytes32"
																								}
																							},
																							{
																								"id": 2007,
																								"name": "facetCut",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1976,
																								"src": "2000:8:37",
																								"typeDescriptions": {
																									"typeIdentifier": "t_struct$_FacetCut_$478_memory_ptr",
																									"typeString": "struct IERC2535DiamondCutInternal.FacetCut memory"
																								}
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_struct$_Layout_$1093_storage_ptr",
																									"typeString": "struct DiamondBaseStorage.Layout storage pointer"
																								},
																								{
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								},
																								{
																									"typeIdentifier": "t_bytes32",
																									"typeString": "bytes32"
																								},
																								{
																									"typeIdentifier": "t_struct$_FacetCut_$478_memory_ptr",
																									"typeString": "struct IERC2535DiamondCutInternal.FacetCut memory"
																								}
																							],
																							"id": 2003,
																							"name": "_addFacetSelectors",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 2250,
																							"src": "1852:18:37",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Layout_$1093_storage_ptr_$_t_uint256_$_t_bytes32_$_t_struct$_FacetCut_$478_memory_ptr_$returns$_t_uint256_$_t_bytes32_$",
																								"typeString": "function (struct DiamondBaseStorage.Layout storage pointer,uint256,bytes32,struct IERC2535DiamondCutInternal.FacetCut memory) returns (uint256,bytes32)"
																							}
																						},
																						"id": 2008,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "functionCall",
																						"lValueRequested": false,
																						"nameLocations": [],
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "1852:178:37",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_tuple$_t_uint256_$_t_bytes32_$",
																							"typeString": "tuple(uint256,bytes32)"
																						}
																					},
																					"src": "1820:210:37",
																					"typeDescriptions": {
																						"typeIdentifier": "t_tuple$__$",
																						"typeString": "tuple()"
																					}
																				},
																				"id": 2010,
																				"nodeType": "ExpressionStatement",
																				"src": "1820:210:37"
																			}
																		]
																	}
																}
															]
														},
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1970,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1967,
																"name": "i",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1965,
																"src": "1483:1:37",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"expression": {
																	"id": 1968,
																	"name": "facetCuts",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1920,
																	"src": "1487:9:37",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_struct$_FacetCut_$478_memory_ptr_$dyn_memory_ptr",
																		"typeString": "struct IERC2535DiamondCutInternal.FacetCut memory[] memory"
																	}
																},
																"id": 1969,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1497:6:37",
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "1487:16:37",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1483:20:37",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2042,
														"initializationExpression": {
															"assignments": [
																1965
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1965,
																	"mutability": "mutable",
																	"name": "i",
																	"nameLocation": "1480:1:37",
																	"nodeType": "VariableDeclaration",
																	"scope": 2042,
																	"src": "1472:9:37",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1964,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "1472:7:37",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1966,
															"nodeType": "VariableDeclarationStatement",
															"src": "1472:9:37"
														},
														"isSimpleCounterLoop": true,
														"loopExpression": {
															"expression": {
																"id": 1972,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "++",
																"prefix": false,
																"src": "1505:3:37",
																"subExpression": {
																	"id": 1971,
																	"name": "i",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1965,
																	"src": "1505:1:37",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1973,
															"nodeType": "ExpressionStatement",
															"src": "1505:3:37"
														},
														"nodeType": "ForStatement",
														"src": "1467:1013:37"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2045,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2043,
																"name": "selectorCount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1942,
																"src": "2498:13:37",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 2044,
																"name": "originalSelectorCount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1937,
																"src": "2515:21:37",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2498:38:37",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2056,
														"nodeType": "IfStatement",
														"src": "2494:116:37",
														"trueBody": {
															"id": 2055,
															"nodeType": "Block",
															"src": "2538:72:37",
															"statements": [
																{
																	"expression": {
																		"id": 2053,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"expression": {
																				"id": 2046,
																				"name": "l",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1931,
																				"src": "2556:1:37",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_Layout_$1093_storage_ptr",
																					"typeString": "struct DiamondBaseStorage.Layout storage pointer"
																				}
																			},
																			"id": 2048,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"memberLocation": "2558:13:37",
																			"memberName": "selectorCount",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 1086,
																			"src": "2556:15:37",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint16",
																				"typeString": "uint16"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"arguments": [
																				{
																					"id": 2051,
																					"name": "selectorCount",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1942,
																					"src": "2581:13:37",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 2050,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "2574:6:37",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_uint16_$",
																					"typeString": "type(uint16)"
																				},
																				"typeName": {
																					"id": 2049,
																					"name": "uint16",
																					"nodeType": "ElementaryTypeName",
																					"src": "2574:6:37",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 2052,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "2574:21:37",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint16",
																				"typeString": "uint16"
																			}
																		},
																		"src": "2556:39:37",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint16",
																			"typeString": "uint16"
																		}
																	},
																	"id": 2054,
																	"nodeType": "ExpressionStatement",
																	"src": "2556:39:37"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2061,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2059,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2057,
																	"name": "selectorCount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1942,
																	"src": "2677:13:37",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"hexValue": "37",
																	"id": 2058,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2693:1:37",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_7_by_1",
																		"typeString": "int_const 7"
																	},
																	"value": "7"
																},
																"src": "2677:17:37",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2060,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2697:1:37",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2677:21:37",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2073,
														"nodeType": "IfStatement",
														"src": "2673:110:37",
														"trueBody": {
															"id": 2072,
															"nodeType": "Block",
															"src": "2700:83:37",
															"statements": [
																{
																	"expression": {
																		"id": 2070,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"expression": {
																					"id": 2062,
																					"name": "l",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1931,
																					"src": "2718:1:37",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_Layout_$1093_storage_ptr",
																						"typeString": "struct DiamondBaseStorage.Layout storage pointer"
																					}
																				},
																				"id": 2067,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "2720:13:37",
																				"memberName": "selectorSlots",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 1090,
																				"src": "2718:15:37",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_uint256_$_t_bytes32_$",
																					"typeString": "mapping(uint256 => bytes32)"
																				}
																			},
																			"id": 2068,
																			"indexExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2066,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2064,
																					"name": "selectorCount",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1942,
																					"src": "2734:13:37",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": ">>",
																				"rightExpression": {
																					"hexValue": "33",
																					"id": 2065,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "2751:1:37",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_3_by_1",
																						"typeString": "int_const 3"
																					},
																					"value": "3"
																				},
																				"src": "2734:18:37",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "2718:35:37",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes32",
																				"typeString": "bytes32"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"id": 2069,
																			"name": "selectorSlot",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1946,
																			"src": "2756:12:37",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes32",
																				"typeString": "bytes32"
																			}
																		},
																		"src": "2718:50:37",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	"id": 2071,
																	"nodeType": "ExpressionStatement",
																	"src": "2718:50:37"
																}
															]
														}
													},
													{
														"eventCall": {
															"arguments": [
																{
																	"id": 2075,
																	"name": "facetCuts",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1920,
																	"src": "2813:9:37",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_struct$_FacetCut_$478_memory_ptr_$dyn_memory_ptr",
																		"typeString": "struct IERC2535DiamondCutInternal.FacetCut memory[] memory"
																	}
																},
																{
																	"id": 2076,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1922,
																	"src": "2824:6:37",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 2077,
																	"name": "data",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1924,
																	"src": "2832:4:37",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_array$_t_struct$_FacetCut_$478_memory_ptr_$dyn_memory_ptr",
																		"typeString": "struct IERC2535DiamondCutInternal.FacetCut memory[] memory"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"id": 2074,
																"name": "DiamondCut",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 488,
																"src": "2802:10:37",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_event_nonpayable$_t_array$_t_struct$_FacetCut_$478_memory_ptr_$dyn_memory_ptr_$_t_address_$_t_bytes_memory_ptr_$returns$__$",
																	"typeString": "function (struct IERC2535DiamondCutInternal.FacetCut memory[] memory,address,bytes memory)"
																}
															},
															"id": 2078,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2802:35:37",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 2079,
														"nodeType": "EmitStatement",
														"src": "2797:40:37"
													},
													{
														"expression": {
															"arguments": [
																{
																	"id": 2081,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1922,
																	"src": "2863:6:37",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 2082,
																	"name": "data",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1924,
																	"src": "2871:4:37",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"id": 2080,
																"name": "_initialize",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2701,
																"src": "2851:11:37",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$__$",
																	"typeString": "function (address,bytes memory)"
																}
															},
															"id": 2083,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2851:25:37",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 2084,
														"nodeType": "ExpressionStatement",
														"src": "2851:25:37"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1916,
										"nodeType": "StructuredDocumentation",
										"src": "582:263:37",
										"text": " @notice update functions callable on Diamond proxy\n @param facetCuts array of structured Diamond facet update data\n @param target optional recipient of initialization delegatecall\n @param data optional initialization call data"
									},
									"id": 2087,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_diamondCut",
									"nameLocation": "859:11:37",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1925,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1920,
												"mutability": "mutable",
												"name": "facetCuts",
												"nameLocation": "898:9:37",
												"nodeType": "VariableDeclaration",
												"scope": 2087,
												"src": "880:27:37",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_struct$_FacetCut_$478_memory_ptr_$dyn_memory_ptr",
													"typeString": "struct IERC2535DiamondCutInternal.FacetCut[]"
												},
												"typeName": {
													"baseType": {
														"id": 1918,
														"nodeType": "UserDefinedTypeName",
														"pathNode": {
															"id": 1917,
															"name": "FacetCut",
															"nameLocations": [
																"880:8:37"
															],
															"nodeType": "IdentifierPath",
															"referencedDeclaration": 478,
															"src": "880:8:37"
														},
														"referencedDeclaration": 478,
														"src": "880:8:37",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_FacetCut_$478_storage_ptr",
															"typeString": "struct IERC2535DiamondCutInternal.FacetCut"
														}
													},
													"id": 1919,
													"nodeType": "ArrayTypeName",
													"src": "880:10:37",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_FacetCut_$478_storage_$dyn_storage_ptr",
														"typeString": "struct IERC2535DiamondCutInternal.FacetCut[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1922,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "925:6:37",
												"nodeType": "VariableDeclaration",
												"scope": 2087,
												"src": "917:14:37",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1921,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "917:7:37",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1924,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "954:4:37",
												"nodeType": "VariableDeclaration",
												"scope": 2087,
												"src": "941:17:37",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1923,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "941:5:37",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "870:94:37"
									},
									"returnParameters": {
										"id": 1926,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "982:0:37"
									},
									"scope": 2702,
									"src": "850:2043:37",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2249,
										"nodeType": "Block",
										"src": "3109:1534:37",
										"statements": [
											{
												"id": 2248,
												"nodeType": "UncheckedBlock",
												"src": "3119:1518:37",
												"statements": [
													{
														"condition": {
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"expression": {
																	"expression": {
																		"id": 2104,
																		"name": "facetCut",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2097,
																		"src": "3147:8:37",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_FacetCut_$478_memory_ptr",
																			"typeString": "struct IERC2535DiamondCutInternal.FacetCut memory"
																		}
																	},
																	"id": 2105,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "3156:6:37",
																	"memberName": "target",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 471,
																	"src": "3147:15:37",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 2106,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "3163:10:37",
																"memberName": "isContract",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 2785,
																"src": "3147:26:37",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$attached_to$_t_address_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 2107,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3147:28:37",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"falseBody": {
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 2127,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 2121,
																		"name": "facetCut",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2097,
																		"src": "3343:8:37",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_FacetCut_$478_memory_ptr",
																			"typeString": "struct IERC2535DiamondCutInternal.FacetCut memory"
																		}
																	},
																	"id": 2122,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "3352:6:37",
																	"memberName": "target",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 471,
																	"src": "3343:15:37",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "!=",
																"rightExpression": {
																	"arguments": [
																		{
																			"id": 2125,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "3370:4:37",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_DiamondWritableInternal_$2702",
																				"typeString": "contract DiamondWritableInternal"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_DiamondWritableInternal_$2702",
																				"typeString": "contract DiamondWritableInternal"
																			}
																		],
																		"id": 2124,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "3362:7:37",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 2123,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "3362:7:37",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 2126,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3362:13:37",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "3343:32:37",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 2132,
															"nodeType": "IfStatement",
															"src": "3339:112:37",
															"trueBody": {
																"id": 2131,
																"nodeType": "Block",
																"src": "3377:74:37",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [],
																			"expression": {
																				"argumentTypes": [],
																				"id": 2128,
																				"name": "DiamondWritable__TargetHasNoCode",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2736,
																				"src": "3402:32:37",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$__$returns$__$",
																					"typeString": "function () pure"
																				}
																			},
																			"id": 2129,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "3402:34:37",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 2130,
																		"nodeType": "RevertStatement",
																		"src": "3395:41:37"
																	}
																]
															}
														},
														"id": 2133,
														"nodeType": "IfStatement",
														"src": "3143:308:37",
														"trueBody": {
															"id": 2120,
															"nodeType": "Block",
															"src": "3177:156:37",
															"statements": [
																{
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		"id": 2114,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"expression": {
																				"id": 2108,
																				"name": "facetCut",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2097,
																				"src": "3199:8:37",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_FacetCut_$478_memory_ptr",
																					"typeString": "struct IERC2535DiamondCutInternal.FacetCut memory"
																				}
																			},
																			"id": 2109,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "3208:6:37",
																			"memberName": "target",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 471,
																			"src": "3199:15:37",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"arguments": [
																				{
																					"id": 2112,
																					"name": "this",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967268,
																					"src": "3226:4:37",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_DiamondWritableInternal_$2702",
																						"typeString": "contract DiamondWritableInternal"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_contract$_DiamondWritableInternal_$2702",
																						"typeString": "contract DiamondWritableInternal"
																					}
																				],
																				"id": 2111,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "3218:7:37",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 2110,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "3218:7:37",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 2113,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "3218:13:37",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"src": "3199:32:37",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"id": 2119,
																	"nodeType": "IfStatement",
																	"src": "3195:124:37",
																	"trueBody": {
																		"id": 2118,
																		"nodeType": "Block",
																		"src": "3233:86:37",
																		"statements": [
																			{
																				"errorCall": {
																					"arguments": [],
																					"expression": {
																						"argumentTypes": [],
																						"id": 2115,
																						"name": "DiamondWritable__SelectorIsImmutable",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2730,
																						"src": "3262:36:37",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_error_pure$__$returns$__$",
																							"typeString": "function () pure"
																						}
																					},
																					"id": 2116,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "3262:38:37",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_tuple$__$",
																						"typeString": "tuple()"
																					}
																				},
																				"id": 2117,
																				"nodeType": "RevertStatement",
																				"src": "3255:45:37"
																			}
																		]
																	}
																}
															]
														}
													},
													{
														"body": {
															"id": 2242,
															"nodeType": "Block",
															"src": "3517:1059:37",
															"statements": [
																{
																	"assignments": [
																		2146
																	],
																	"declarations": [
																		{
																			"constant": false,
																			"id": 2146,
																			"mutability": "mutable",
																			"name": "selector",
																			"nameLocation": "3542:8:37",
																			"nodeType": "VariableDeclaration",
																			"scope": 2242,
																			"src": "3535:15:37",
																			"stateVariable": false,
																			"storageLocation": "default",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes4",
																				"typeString": "bytes4"
																			},
																			"typeName": {
																				"id": 2145,
																				"name": "bytes4",
																				"nodeType": "ElementaryTypeName",
																				"src": "3535:6:37",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes4",
																					"typeString": "bytes4"
																				}
																			},
																			"visibility": "internal"
																		}
																	],
																	"id": 2151,
																	"initialValue": {
																		"baseExpression": {
																			"expression": {
																				"id": 2147,
																				"name": "facetCut",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2097,
																				"src": "3553:8:37",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_FacetCut_$478_memory_ptr",
																					"typeString": "struct IERC2535DiamondCutInternal.FacetCut memory"
																				}
																			},
																			"id": 2148,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "3562:9:37",
																			"memberName": "selectors",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 477,
																			"src": "3553:18:37",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_bytes4_$dyn_memory_ptr",
																				"typeString": "bytes4[] memory"
																			}
																		},
																		"id": 2150,
																		"indexExpression": {
																			"id": 2149,
																			"name": "i",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2135,
																			"src": "3572:1:37",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "3553:21:37",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes4",
																			"typeString": "bytes4"
																		}
																	},
																	"nodeType": "VariableDeclarationStatement",
																	"src": "3535:39:37"
																},
																{
																	"assignments": [
																		2153
																	],
																	"declarations": [
																		{
																			"constant": false,
																			"id": 2153,
																			"mutability": "mutable",
																			"name": "oldFacet",
																			"nameLocation": "3600:8:37",
																			"nodeType": "VariableDeclaration",
																			"scope": 2242,
																			"src": "3592:16:37",
																			"stateVariable": false,
																			"storageLocation": "default",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes32",
																				"typeString": "bytes32"
																			},
																			"typeName": {
																				"id": 2152,
																				"name": "bytes32",
																				"nodeType": "ElementaryTypeName",
																				"src": "3592:7:37",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				}
																			},
																			"visibility": "internal"
																		}
																	],
																	"id": 2158,
																	"initialValue": {
																		"baseExpression": {
																			"expression": {
																				"id": 2154,
																				"name": "l",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2090,
																				"src": "3611:1:37",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_Layout_$1093_storage_ptr",
																					"typeString": "struct DiamondBaseStorage.Layout storage pointer"
																				}
																			},
																			"id": 2155,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "3613:6:37",
																			"memberName": "facets",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 1084,
																			"src": "3611:8:37",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_bytes4_$_t_bytes32_$",
																				"typeString": "mapping(bytes4 => bytes32)"
																			}
																		},
																		"id": 2157,
																		"indexExpression": {
																			"id": 2156,
																			"name": "selector",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2146,
																			"src": "3620:8:37",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes4",
																				"typeString": "bytes4"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "3611:18:37",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	"nodeType": "VariableDeclarationStatement",
																	"src": "3592:37:37"
																},
																{
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		"id": 2170,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"id": 2163,
																							"name": "oldFacet",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 2153,
																							"src": "3668:8:37",
																							"typeDescriptions": {
																								"typeIdentifier": "t_bytes32",
																								"typeString": "bytes32"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_bytes32",
																								"typeString": "bytes32"
																							}
																						],
																						"id": 2162,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "3660:7:37",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_bytes20_$",
																							"typeString": "type(bytes20)"
																						},
																						"typeName": {
																							"id": 2161,
																							"name": "bytes20",
																							"nodeType": "ElementaryTypeName",
																							"src": "3660:7:37",
																							"typeDescriptions": {}
																						}
																					},
																					"id": 2164,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "typeConversion",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "3660:17:37",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes20",
																						"typeString": "bytes20"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_bytes20",
																						"typeString": "bytes20"
																					}
																				],
																				"id": 2160,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "3652:7:37",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 2159,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "3652:7:37",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 2165,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "3652:26:37",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "!=",
																		"rightExpression": {
																			"arguments": [
																				{
																					"hexValue": "30",
																					"id": 2168,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "3690:1:37",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_0_by_1",
																						"typeString": "int_const 0"
																					},
																					"value": "0"
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_rational_0_by_1",
																						"typeString": "int_const 0"
																					}
																				],
																				"id": 2167,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "3682:7:37",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 2166,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "3682:7:37",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 2169,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "3682:10:37",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"src": "3652:40:37",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"id": 2174,
																	"nodeType": "IfStatement",
																	"src": "3648:112:37",
																	"trueBody": {
																		"errorCall": {
																			"arguments": [],
																			"expression": {
																				"argumentTypes": [],
																				"id": 2171,
																				"name": "DiamondWritable__SelectorAlreadyAdded",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2728,
																				"src": "3721:37:37",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$__$returns$__$",
																					"typeString": "function () pure"
																				}
																			},
																			"id": 2172,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "3721:39:37",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 2173,
																		"nodeType": "RevertStatement",
																		"src": "3714:46:37"
																	}
																},
																{
																	"expression": {
																		"id": 2190,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"expression": {
																					"id": 2175,
																					"name": "l",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2090,
																					"src": "3821:1:37",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_Layout_$1093_storage_ptr",
																						"typeString": "struct DiamondBaseStorage.Layout storage pointer"
																					}
																				},
																				"id": 2178,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "3823:6:37",
																				"memberName": "facets",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 1084,
																				"src": "3821:8:37",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_bytes4_$_t_bytes32_$",
																					"typeString": "mapping(bytes4 => bytes32)"
																				}
																			},
																			"id": 2179,
																			"indexExpression": {
																				"id": 2177,
																				"name": "selector",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2146,
																				"src": "3830:8:37",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes4",
																					"typeString": "bytes4"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "3821:18:37",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes32",
																				"typeString": "bytes32"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_bytes32",
																				"typeString": "bytes32"
																			},
																			"id": 2189,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"expression": {
																							"id": 2182,
																							"name": "facetCut",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 2097,
																							"src": "3870:8:37",
																							"typeDescriptions": {
																								"typeIdentifier": "t_struct$_FacetCut_$478_memory_ptr",
																								"typeString": "struct IERC2535DiamondCutInternal.FacetCut memory"
																							}
																						},
																						"id": 2183,
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberLocation": "3879:6:37",
																						"memberName": "target",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 471,
																						"src": "3870:15:37",
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					],
																					"id": 2181,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "3862:7:37",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_bytes20_$",
																						"typeString": "type(bytes20)"
																					},
																					"typeName": {
																						"id": 2180,
																						"name": "bytes20",
																						"nodeType": "ElementaryTypeName",
																						"src": "3862:7:37",
																						"typeDescriptions": {}
																					}
																				},
																				"id": 2184,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "3862:24:37",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes20",
																					"typeString": "bytes20"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "|",
																			"rightExpression": {
																				"arguments": [
																					{
																						"id": 2187,
																						"name": "selectorCount",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2092,
																						"src": "3917:13:37",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					],
																					"id": 2186,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "3909:7:37",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_bytes32_$",
																						"typeString": "type(bytes32)"
																					},
																					"typeName": {
																						"id": 2185,
																						"name": "bytes32",
																						"nodeType": "ElementaryTypeName",
																						"src": "3909:7:37",
																						"typeDescriptions": {}
																					}
																				},
																				"id": 2188,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "3909:22:37",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				}
																			},
																			"src": "3862:69:37",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes32",
																				"typeString": "bytes32"
																			}
																		},
																		"src": "3821:110:37",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	"id": 2191,
																	"nodeType": "ExpressionStatement",
																	"src": "3821:110:37"
																},
																{
																	"assignments": [
																		2193
																	],
																	"declarations": [
																		{
																			"constant": false,
																			"id": 2193,
																			"mutability": "mutable",
																			"name": "selectorInSlotPosition",
																			"nameLocation": "3957:22:37",
																			"nodeType": "VariableDeclaration",
																			"scope": 2242,
																			"src": "3949:30:37",
																			"stateVariable": false,
																			"storageLocation": "default",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"typeName": {
																				"id": 2192,
																				"name": "uint256",
																				"nodeType": "ElementaryTypeName",
																				"src": "3949:7:37",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"visibility": "internal"
																		}
																	],
																	"id": 2200,
																	"initialValue": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2199,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"components": [
																				{
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 2196,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 2194,
																						"name": "selectorCount",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2092,
																						"src": "3983:13:37",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "&",
																					"rightExpression": {
																						"hexValue": "37",
																						"id": 2195,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "3999:1:37",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_7_by_1",
																							"typeString": "int_const 7"
																						},
																						"value": "7"
																					},
																					"src": "3983:17:37",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"id": 2197,
																			"isConstant": false,
																			"isInlineArray": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "TupleExpression",
																			"src": "3982:19:37",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "<<",
																		"rightExpression": {
																			"hexValue": "35",
																			"id": 2198,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "4005:1:37",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_5_by_1",
																				"typeString": "int_const 5"
																			},
																			"value": "5"
																		},
																		"src": "3982:24:37",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "VariableDeclarationStatement",
																	"src": "3949:57:37"
																},
																{
																	"expression": {
																		"id": 2218,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2201,
																			"name": "selectorSlot",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2094,
																			"src": "4093:12:37",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes32",
																				"typeString": "bytes32"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_bytes32",
																				"typeString": "bytes32"
																			},
																			"id": 2217,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"components": [
																					{
																						"commonType": {
																							"typeIdentifier": "t_bytes32",
																							"typeString": "bytes32"
																						},
																						"id": 2208,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftExpression": {
																							"id": 2202,
																							"name": "selectorSlot",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 2094,
																							"src": "4129:12:37",
																							"typeDescriptions": {
																								"typeIdentifier": "t_bytes32",
																								"typeString": "bytes32"
																							}
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "&",
																						"rightExpression": {
																							"id": 2207,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"nodeType": "UnaryOperation",
																							"operator": "~",
																							"prefix": true,
																							"src": "4168:48:37",
																							"subExpression": {
																								"components": [
																									{
																										"commonType": {
																											"typeIdentifier": "t_bytes32",
																											"typeString": "bytes32"
																										},
																										"id": 2205,
																										"isConstant": false,
																										"isLValue": false,
																										"isPure": false,
																										"lValueRequested": false,
																										"leftExpression": {
																											"id": 2203,
																											"name": "CLEAR_SELECTOR_MASK",
																											"nodeType": "Identifier",
																											"overloadedDeclarations": [],
																											"referencedDeclaration": 1915,
																											"src": "4170:19:37",
																											"typeDescriptions": {
																												"typeIdentifier": "t_bytes32",
																												"typeString": "bytes32"
																											}
																										},
																										"nodeType": "BinaryOperation",
																										"operator": ">>",
																										"rightExpression": {
																											"id": 2204,
																											"name": "selectorInSlotPosition",
																											"nodeType": "Identifier",
																											"overloadedDeclarations": [],
																											"referencedDeclaration": 2193,
																											"src": "4193:22:37",
																											"typeDescriptions": {
																												"typeIdentifier": "t_uint256",
																												"typeString": "uint256"
																											}
																										},
																										"src": "4170:45:37",
																										"typeDescriptions": {
																											"typeIdentifier": "t_bytes32",
																											"typeString": "bytes32"
																										}
																									}
																								],
																								"id": 2206,
																								"isConstant": false,
																								"isInlineArray": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"nodeType": "TupleExpression",
																								"src": "4169:47:37",
																								"typeDescriptions": {
																									"typeIdentifier": "t_bytes32",
																									"typeString": "bytes32"
																								}
																							},
																							"typeDescriptions": {
																								"typeIdentifier": "t_bytes32",
																								"typeString": "bytes32"
																							}
																						},
																						"src": "4129:87:37",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes32",
																							"typeString": "bytes32"
																						}
																					}
																				],
																				"id": 2209,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "4128:89:37",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "|",
																			"rightExpression": {
																				"components": [
																					{
																						"commonType": {
																							"typeIdentifier": "t_bytes32",
																							"typeString": "bytes32"
																						},
																						"id": 2215,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftExpression": {
																							"arguments": [
																								{
																									"id": 2212,
																									"name": "selector",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 2146,
																									"src": "4249:8:37",
																									"typeDescriptions": {
																										"typeIdentifier": "t_bytes4",
																										"typeString": "bytes4"
																									}
																								}
																							],
																							"expression": {
																								"argumentTypes": [
																									{
																										"typeIdentifier": "t_bytes4",
																										"typeString": "bytes4"
																									}
																								],
																								"id": 2211,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": true,
																								"lValueRequested": false,
																								"nodeType": "ElementaryTypeNameExpression",
																								"src": "4241:7:37",
																								"typeDescriptions": {
																									"typeIdentifier": "t_type$_t_bytes32_$",
																									"typeString": "type(bytes32)"
																								},
																								"typeName": {
																									"id": 2210,
																									"name": "bytes32",
																									"nodeType": "ElementaryTypeName",
																									"src": "4241:7:37",
																									"typeDescriptions": {}
																								}
																							},
																							"id": 2213,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"kind": "typeConversion",
																							"lValueRequested": false,
																							"nameLocations": [],
																							"names": [],
																							"nodeType": "FunctionCall",
																							"src": "4241:17:37",
																							"tryCall": false,
																							"typeDescriptions": {
																								"typeIdentifier": "t_bytes32",
																								"typeString": "bytes32"
																							}
																						},
																						"nodeType": "BinaryOperation",
																						"operator": ">>",
																						"rightExpression": {
																							"id": 2214,
																							"name": "selectorInSlotPosition",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 2193,
																							"src": "4262:22:37",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"src": "4241:43:37",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes32",
																							"typeString": "bytes32"
																						}
																					}
																				],
																				"id": 2216,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "4240:45:37",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				}
																			},
																			"src": "4128:157:37",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes32",
																				"typeString": "bytes32"
																			}
																		},
																		"src": "4093:192:37",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	"id": 2219,
																	"nodeType": "ExpressionStatement",
																	"src": "4093:192:37"
																},
																{
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2222,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2220,
																			"name": "selectorInSlotPosition",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2193,
																			"src": "4368:22:37",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "323234",
																			"id": 2221,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "4394:3:37",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_224_by_1",
																				"typeString": "int_const 224"
																			},
																			"value": "224"
																		},
																		"src": "4368:29:37",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"id": 2238,
																	"nodeType": "IfStatement",
																	"src": "4364:164:37",
																	"trueBody": {
																		"id": 2237,
																		"nodeType": "Block",
																		"src": "4399:129:37",
																		"statements": [
																			{
																				"expression": {
																					"id": 2231,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftHandSide": {
																						"baseExpression": {
																							"expression": {
																								"id": 2223,
																								"name": "l",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 2090,
																								"src": "4421:1:37",
																								"typeDescriptions": {
																									"typeIdentifier": "t_struct$_Layout_$1093_storage_ptr",
																									"typeString": "struct DiamondBaseStorage.Layout storage pointer"
																								}
																							},
																							"id": 2228,
																							"isConstant": false,
																							"isLValue": true,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberLocation": "4423:13:37",
																							"memberName": "selectorSlots",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 1090,
																							"src": "4421:15:37",
																							"typeDescriptions": {
																								"typeIdentifier": "t_mapping$_t_uint256_$_t_bytes32_$",
																								"typeString": "mapping(uint256 => bytes32)"
																							}
																						},
																						"id": 2229,
																						"indexExpression": {
																							"commonType": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							},
																							"id": 2227,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"leftExpression": {
																								"id": 2225,
																								"name": "selectorCount",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 2092,
																								"src": "4437:13:37",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"nodeType": "BinaryOperation",
																							"operator": ">>",
																							"rightExpression": {
																								"hexValue": "33",
																								"id": 2226,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": true,
																								"kind": "number",
																								"lValueRequested": false,
																								"nodeType": "Literal",
																								"src": "4454:1:37",
																								"typeDescriptions": {
																									"typeIdentifier": "t_rational_3_by_1",
																									"typeString": "int_const 3"
																								},
																								"value": "3"
																							},
																							"src": "4437:18:37",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": true,
																						"nodeType": "IndexAccess",
																						"src": "4421:35:37",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes32",
																							"typeString": "bytes32"
																						}
																					},
																					"nodeType": "Assignment",
																					"operator": "=",
																					"rightHandSide": {
																						"id": 2230,
																						"name": "selectorSlot",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2094,
																						"src": "4459:12:37",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes32",
																							"typeString": "bytes32"
																						}
																					},
																					"src": "4421:50:37",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes32",
																						"typeString": "bytes32"
																					}
																				},
																				"id": 2232,
																				"nodeType": "ExpressionStatement",
																				"src": "4421:50:37"
																			},
																			{
																				"expression": {
																					"id": 2235,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftHandSide": {
																						"id": 2233,
																						"name": "selectorSlot",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2094,
																						"src": "4493:12:37",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes32",
																							"typeString": "bytes32"
																						}
																					},
																					"nodeType": "Assignment",
																					"operator": "=",
																					"rightHandSide": {
																						"hexValue": "30",
																						"id": 2234,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "4508:1:37",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_0_by_1",
																							"typeString": "int_const 0"
																						},
																						"value": "0"
																					},
																					"src": "4493:16:37",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes32",
																						"typeString": "bytes32"
																					}
																				},
																				"id": 2236,
																				"nodeType": "ExpressionStatement",
																				"src": "4493:16:37"
																			}
																		]
																	}
																},
																{
																	"expression": {
																		"id": 2240,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "UnaryOperation",
																		"operator": "++",
																		"prefix": false,
																		"src": "4546:15:37",
																		"subExpression": {
																			"id": 2239,
																			"name": "selectorCount",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2092,
																			"src": "4546:13:37",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2241,
																	"nodeType": "ExpressionStatement",
																	"src": "4546:15:37"
																}
															]
														},
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2141,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2137,
																"name": "i",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2135,
																"src": "3481:1:37",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"expression": {
																	"expression": {
																		"id": 2138,
																		"name": "facetCut",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2097,
																		"src": "3485:8:37",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_FacetCut_$478_memory_ptr",
																			"typeString": "struct IERC2535DiamondCutInternal.FacetCut memory"
																		}
																	},
																	"id": 2139,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "3494:9:37",
																	"memberName": "selectors",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 477,
																	"src": "3485:18:37",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_bytes4_$dyn_memory_ptr",
																		"typeString": "bytes4[] memory"
																	}
																},
																"id": 2140,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "3504:6:37",
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "3485:25:37",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3481:29:37",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2243,
														"initializationExpression": {
															"assignments": [
																2135
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 2135,
																	"mutability": "mutable",
																	"name": "i",
																	"nameLocation": "3478:1:37",
																	"nodeType": "VariableDeclaration",
																	"scope": 2243,
																	"src": "3470:9:37",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 2134,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "3470:7:37",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 2136,
															"nodeType": "VariableDeclarationStatement",
															"src": "3470:9:37"
														},
														"isSimpleCounterLoop": true,
														"loopExpression": {
															"expression": {
																"id": 2143,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "++",
																"prefix": false,
																"src": "3512:3:37",
																"subExpression": {
																	"id": 2142,
																	"name": "i",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2135,
																	"src": "3512:1:37",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2144,
															"nodeType": "ExpressionStatement",
															"src": "3512:3:37"
														},
														"nodeType": "ForStatement",
														"src": "3465:1111:37"
													},
													{
														"expression": {
															"components": [
																{
																	"id": 2244,
																	"name": "selectorCount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2092,
																	"src": "4598:13:37",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 2245,
																	"name": "selectorSlot",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2094,
																	"src": "4613:12:37",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																}
															],
															"id": 2246,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "4597:29:37",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_uint256_$_t_bytes32_$",
																"typeString": "tuple(uint256,bytes32)"
															}
														},
														"functionReturnParameters": 2103,
														"id": 2247,
														"nodeType": "Return",
														"src": "4590:36:37"
													}
												]
											}
										]
									},
									"id": 2250,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_addFacetSelectors",
									"nameLocation": "2908:18:37",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2098,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2090,
												"mutability": "mutable",
												"name": "l",
												"nameLocation": "2970:1:37",
												"nodeType": "VariableDeclaration",
												"scope": 2250,
												"src": "2936:35:37",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Layout_$1093_storage_ptr",
													"typeString": "struct DiamondBaseStorage.Layout"
												},
												"typeName": {
													"id": 2089,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2088,
														"name": "DiamondBaseStorage.Layout",
														"nameLocations": [
															"2936:18:37",
															"2955:6:37"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1093,
														"src": "2936:25:37"
													},
													"referencedDeclaration": 1093,
													"src": "2936:25:37",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Layout_$1093_storage_ptr",
														"typeString": "struct DiamondBaseStorage.Layout"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2092,
												"mutability": "mutable",
												"name": "selectorCount",
												"nameLocation": "2989:13:37",
												"nodeType": "VariableDeclaration",
												"scope": 2250,
												"src": "2981:21:37",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2091,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2981:7:37",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2094,
												"mutability": "mutable",
												"name": "selectorSlot",
												"nameLocation": "3020:12:37",
												"nodeType": "VariableDeclaration",
												"scope": 2250,
												"src": "3012:20:37",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2093,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3012:7:37",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2097,
												"mutability": "mutable",
												"name": "facetCut",
												"nameLocation": "3058:8:37",
												"nodeType": "VariableDeclaration",
												"scope": 2250,
												"src": "3042:24:37",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_FacetCut_$478_memory_ptr",
													"typeString": "struct IERC2535DiamondCutInternal.FacetCut"
												},
												"typeName": {
													"id": 2096,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2095,
														"name": "FacetCut",
														"nameLocations": [
															"3042:8:37"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 478,
														"src": "3042:8:37"
													},
													"referencedDeclaration": 478,
													"src": "3042:8:37",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_FacetCut_$478_storage_ptr",
														"typeString": "struct IERC2535DiamondCutInternal.FacetCut"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2926:146:37"
									},
									"returnParameters": {
										"id": 2103,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2100,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2250,
												"src": "3091:7:37",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2099,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3091:7:37",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2102,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2250,
												"src": "3100:7:37",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2101,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3100:7:37",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3090:18:37"
									},
									"scope": 2702,
									"src": "2899:1744:37",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2537,
										"nodeType": "Block",
										"src": "4862:3461:37",
										"statements": [
											{
												"id": 2536,
												"nodeType": "UncheckedBlock",
												"src": "4872:3445:37",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 2273,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 2267,
																	"name": "facetCut",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2260,
																	"src": "4900:8:37",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_FacetCut_$478_memory_ptr",
																		"typeString": "struct IERC2535DiamondCutInternal.FacetCut memory"
																	}
																},
																"id": 2268,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "4909:6:37",
																"memberName": "target",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 471,
																"src": "4900:15:37",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 2271,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "4927:1:37",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 2270,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "4919:7:37",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 2269,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "4919:7:37",
																		"typeDescriptions": {}
																	}
																},
																"id": 2272,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4919:10:37",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "4900:29:37",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2277,
														"nodeType": "IfStatement",
														"src": "4896:103:37",
														"trueBody": {
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 2274,
																	"name": "DiamondWritable__RemoveTargetNotZeroAddress",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2724,
																	"src": "4954:43:37",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 2275,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4954:45:37",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2276,
															"nodeType": "RevertStatement",
															"src": "4947:52:37"
														}
													},
													{
														"assignments": [
															2279
														],
														"declarations": [
															{
																"constant": false,
																"id": 2279,
																"mutability": "mutable",
																"name": "selectorSlotCount",
																"nameLocation": "5022:17:37",
																"nodeType": "VariableDeclaration",
																"scope": 2536,
																"src": "5014:25:37",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2278,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "5014:7:37",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2283,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2282,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2280,
																"name": "selectorCount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2255,
																"src": "5042:13:37",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">>",
															"rightExpression": {
																"hexValue": "33",
																"id": 2281,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5059:1:37",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_3_by_1",
																	"typeString": "int_const 3"
																},
																"value": "3"
															},
															"src": "5042:18:37",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "5014:46:37"
													},
													{
														"assignments": [
															2285
														],
														"declarations": [
															{
																"constant": false,
																"id": 2285,
																"mutability": "mutable",
																"name": "selectorInSlotIndex",
																"nameLocation": "5082:19:37",
																"nodeType": "VariableDeclaration",
																"scope": 2536,
																"src": "5074:27:37",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2284,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "5074:7:37",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2289,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2288,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2286,
																"name": "selectorCount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2255,
																"src": "5104:13:37",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&",
															"rightExpression": {
																"hexValue": "37",
																"id": 2287,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5120:1:37",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_7_by_1",
																	"typeString": "int_const 7"
																},
																"value": "7"
															},
															"src": "5104:17:37",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "5074:47:37"
													},
													{
														"body": {
															"id": 2521,
															"nodeType": "Block",
															"src": "5188:2991:37",
															"statements": [
																{
																	"assignments": [
																		2302
																	],
																	"declarations": [
																		{
																			"constant": false,
																			"id": 2302,
																			"mutability": "mutable",
																			"name": "selector",
																			"nameLocation": "5213:8:37",
																			"nodeType": "VariableDeclaration",
																			"scope": 2521,
																			"src": "5206:15:37",
																			"stateVariable": false,
																			"storageLocation": "default",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes4",
																				"typeString": "bytes4"
																			},
																			"typeName": {
																				"id": 2301,
																				"name": "bytes4",
																				"nodeType": "ElementaryTypeName",
																				"src": "5206:6:37",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes4",
																					"typeString": "bytes4"
																				}
																			},
																			"visibility": "internal"
																		}
																	],
																	"id": 2307,
																	"initialValue": {
																		"baseExpression": {
																			"expression": {
																				"id": 2303,
																				"name": "facetCut",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2260,
																				"src": "5224:8:37",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_FacetCut_$478_memory_ptr",
																					"typeString": "struct IERC2535DiamondCutInternal.FacetCut memory"
																				}
																			},
																			"id": 2304,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "5233:9:37",
																			"memberName": "selectors",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 477,
																			"src": "5224:18:37",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_bytes4_$dyn_memory_ptr",
																				"typeString": "bytes4[] memory"
																			}
																		},
																		"id": 2306,
																		"indexExpression": {
																			"id": 2305,
																			"name": "i",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2291,
																			"src": "5243:1:37",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "5224:21:37",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes4",
																			"typeString": "bytes4"
																		}
																	},
																	"nodeType": "VariableDeclarationStatement",
																	"src": "5206:39:37"
																},
																{
																	"assignments": [
																		2309
																	],
																	"declarations": [
																		{
																			"constant": false,
																			"id": 2309,
																			"mutability": "mutable",
																			"name": "oldFacet",
																			"nameLocation": "5271:8:37",
																			"nodeType": "VariableDeclaration",
																			"scope": 2521,
																			"src": "5263:16:37",
																			"stateVariable": false,
																			"storageLocation": "default",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes32",
																				"typeString": "bytes32"
																			},
																			"typeName": {
																				"id": 2308,
																				"name": "bytes32",
																				"nodeType": "ElementaryTypeName",
																				"src": "5263:7:37",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				}
																			},
																			"visibility": "internal"
																		}
																	],
																	"id": 2314,
																	"initialValue": {
																		"baseExpression": {
																			"expression": {
																				"id": 2310,
																				"name": "l",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2253,
																				"src": "5282:1:37",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_Layout_$1093_storage_ptr",
																					"typeString": "struct DiamondBaseStorage.Layout storage pointer"
																				}
																			},
																			"id": 2311,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "5284:6:37",
																			"memberName": "facets",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 1084,
																			"src": "5282:8:37",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_bytes4_$_t_bytes32_$",
																				"typeString": "mapping(bytes4 => bytes32)"
																			}
																		},
																		"id": 2313,
																		"indexExpression": {
																			"id": 2312,
																			"name": "selector",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2302,
																			"src": "5291:8:37",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes4",
																				"typeString": "bytes4"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "5282:18:37",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	"nodeType": "VariableDeclarationStatement",
																	"src": "5263:37:37"
																},
																{
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		"id": 2326,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"id": 2319,
																							"name": "oldFacet",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 2309,
																							"src": "5339:8:37",
																							"typeDescriptions": {
																								"typeIdentifier": "t_bytes32",
																								"typeString": "bytes32"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_bytes32",
																								"typeString": "bytes32"
																							}
																						],
																						"id": 2318,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "5331:7:37",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_bytes20_$",
																							"typeString": "type(bytes20)"
																						},
																						"typeName": {
																							"id": 2317,
																							"name": "bytes20",
																							"nodeType": "ElementaryTypeName",
																							"src": "5331:7:37",
																							"typeDescriptions": {}
																						}
																					},
																					"id": 2320,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "typeConversion",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "5331:17:37",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes20",
																						"typeString": "bytes20"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_bytes20",
																						"typeString": "bytes20"
																					}
																				],
																				"id": 2316,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "5323:7:37",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 2315,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "5323:7:37",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 2321,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "5323:26:37",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"arguments": [
																				{
																					"hexValue": "30",
																					"id": 2324,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "5361:1:37",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_0_by_1",
																						"typeString": "int_const 0"
																					},
																					"value": "0"
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_rational_0_by_1",
																						"typeString": "int_const 0"
																					}
																				],
																				"id": 2323,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "5353:7:37",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 2322,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "5353:7:37",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 2325,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "5353:10:37",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"src": "5323:40:37",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"id": 2330,
																	"nodeType": "IfStatement",
																	"src": "5319:108:37",
																	"trueBody": {
																		"errorCall": {
																			"arguments": [],
																			"expression": {
																				"argumentTypes": [],
																				"id": 2327,
																				"name": "DiamondWritable__SelectorNotFound",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2732,
																				"src": "5392:33:37",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$__$returns$__$",
																					"typeString": "function () pure"
																				}
																			},
																			"id": 2328,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "5392:35:37",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 2329,
																		"nodeType": "RevertStatement",
																		"src": "5385:42:37"
																	}
																},
																{
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		"id": 2342,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"id": 2335,
																							"name": "oldFacet",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 2309,
																							"src": "5466:8:37",
																							"typeDescriptions": {
																								"typeIdentifier": "t_bytes32",
																								"typeString": "bytes32"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_bytes32",
																								"typeString": "bytes32"
																							}
																						],
																						"id": 2334,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "5458:7:37",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_bytes20_$",
																							"typeString": "type(bytes20)"
																						},
																						"typeName": {
																							"id": 2333,
																							"name": "bytes20",
																							"nodeType": "ElementaryTypeName",
																							"src": "5458:7:37",
																							"typeDescriptions": {}
																						}
																					},
																					"id": 2336,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "typeConversion",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "5458:17:37",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes20",
																						"typeString": "bytes20"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_bytes20",
																						"typeString": "bytes20"
																					}
																				],
																				"id": 2332,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "5450:7:37",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 2331,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "5450:7:37",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 2337,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "5450:26:37",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"arguments": [
																				{
																					"id": 2340,
																					"name": "this",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967268,
																					"src": "5488:4:37",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_DiamondWritableInternal_$2702",
																						"typeString": "contract DiamondWritableInternal"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_contract$_DiamondWritableInternal_$2702",
																						"typeString": "contract DiamondWritableInternal"
																					}
																				],
																				"id": 2339,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "5480:7:37",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 2338,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "5480:7:37",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 2341,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "5480:13:37",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"src": "5450:43:37",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"id": 2346,
																	"nodeType": "IfStatement",
																	"src": "5446:114:37",
																	"trueBody": {
																		"errorCall": {
																			"arguments": [],
																			"expression": {
																				"argumentTypes": [],
																				"id": 2343,
																				"name": "DiamondWritable__SelectorIsImmutable",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2730,
																				"src": "5522:36:37",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$__$returns$__$",
																					"typeString": "function () pure"
																				}
																			},
																			"id": 2344,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "5522:38:37",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 2345,
																		"nodeType": "RevertStatement",
																		"src": "5515:45:37"
																	}
																},
																{
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		},
																		"id": 2349,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2347,
																			"name": "selectorSlot",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2257,
																			"src": "5583:12:37",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes32",
																				"typeString": "bytes32"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 2348,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "5599:1:37",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "5583:17:37",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"falseBody": {
																		"id": 2368,
																		"nodeType": "Block",
																		"src": "5784:62:37",
																		"statements": [
																			{
																				"expression": {
																					"id": 2366,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "UnaryOperation",
																					"operator": "--",
																					"prefix": false,
																					"src": "5806:21:37",
																					"subExpression": {
																						"id": 2365,
																						"name": "selectorInSlotIndex",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2285,
																						"src": "5806:19:37",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"id": 2367,
																				"nodeType": "ExpressionStatement",
																				"src": "5806:21:37"
																			}
																		]
																	},
																	"id": 2369,
																	"nodeType": "IfStatement",
																	"src": "5579:267:37",
																	"trueBody": {
																		"id": 2364,
																		"nodeType": "Block",
																		"src": "5602:176:37",
																		"statements": [
																			{
																				"expression": {
																					"id": 2351,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "UnaryOperation",
																					"operator": "--",
																					"prefix": false,
																					"src": "5624:19:37",
																					"subExpression": {
																						"id": 2350,
																						"name": "selectorSlotCount",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2279,
																						"src": "5624:17:37",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"id": 2352,
																				"nodeType": "ExpressionStatement",
																				"src": "5624:19:37"
																			},
																			{
																				"expression": {
																					"id": 2358,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftHandSide": {
																						"id": 2353,
																						"name": "selectorSlot",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2257,
																						"src": "5665:12:37",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes32",
																							"typeString": "bytes32"
																						}
																					},
																					"nodeType": "Assignment",
																					"operator": "=",
																					"rightHandSide": {
																						"baseExpression": {
																							"expression": {
																								"id": 2354,
																								"name": "l",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 2253,
																								"src": "5680:1:37",
																								"typeDescriptions": {
																									"typeIdentifier": "t_struct$_Layout_$1093_storage_ptr",
																									"typeString": "struct DiamondBaseStorage.Layout storage pointer"
																								}
																							},
																							"id": 2355,
																							"isConstant": false,
																							"isLValue": true,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberLocation": "5682:13:37",
																							"memberName": "selectorSlots",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 1090,
																							"src": "5680:15:37",
																							"typeDescriptions": {
																								"typeIdentifier": "t_mapping$_t_uint256_$_t_bytes32_$",
																								"typeString": "mapping(uint256 => bytes32)"
																							}
																						},
																						"id": 2357,
																						"indexExpression": {
																							"id": 2356,
																							"name": "selectorSlotCount",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 2279,
																							"src": "5696:17:37",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"nodeType": "IndexAccess",
																						"src": "5680:34:37",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes32",
																							"typeString": "bytes32"
																						}
																					},
																					"src": "5665:49:37",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes32",
																						"typeString": "bytes32"
																					}
																				},
																				"id": 2359,
																				"nodeType": "ExpressionStatement",
																				"src": "5665:49:37"
																			},
																			{
																				"expression": {
																					"id": 2362,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftHandSide": {
																						"id": 2360,
																						"name": "selectorInSlotIndex",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2285,
																						"src": "5736:19:37",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "Assignment",
																					"operator": "=",
																					"rightHandSide": {
																						"hexValue": "37",
																						"id": 2361,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "5758:1:37",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_7_by_1",
																							"typeString": "int_const 7"
																						},
																						"value": "7"
																					},
																					"src": "5736:23:37",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"id": 2363,
																				"nodeType": "ExpressionStatement",
																				"src": "5736:23:37"
																			}
																		]
																	}
																},
																{
																	"assignments": [
																		2371
																	],
																	"declarations": [
																		{
																			"constant": false,
																			"id": 2371,
																			"mutability": "mutable",
																			"name": "lastSelector",
																			"nameLocation": "5871:12:37",
																			"nodeType": "VariableDeclaration",
																			"scope": 2521,
																			"src": "5864:19:37",
																			"stateVariable": false,
																			"storageLocation": "default",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes4",
																				"typeString": "bytes4"
																			},
																			"typeName": {
																				"id": 2370,
																				"name": "bytes4",
																				"nodeType": "ElementaryTypeName",
																				"src": "5864:6:37",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes4",
																					"typeString": "bytes4"
																				}
																			},
																			"visibility": "internal"
																		}
																	],
																	"id": 2372,
																	"nodeType": "VariableDeclarationStatement",
																	"src": "5864:19:37"
																},
																{
																	"assignments": [
																		2374
																	],
																	"declarations": [
																		{
																			"constant": false,
																			"id": 2374,
																			"mutability": "mutable",
																			"name": "oldSelectorsSlotCount",
																			"nameLocation": "5909:21:37",
																			"nodeType": "VariableDeclaration",
																			"scope": 2521,
																			"src": "5901:29:37",
																			"stateVariable": false,
																			"storageLocation": "default",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"typeName": {
																				"id": 2373,
																				"name": "uint256",
																				"nodeType": "ElementaryTypeName",
																				"src": "5901:7:37",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"visibility": "internal"
																		}
																	],
																	"id": 2375,
																	"nodeType": "VariableDeclarationStatement",
																	"src": "5901:29:37"
																},
																{
																	"assignments": [
																		2377
																	],
																	"declarations": [
																		{
																			"constant": false,
																			"id": 2377,
																			"mutability": "mutable",
																			"name": "oldSelectorInSlotPosition",
																			"nameLocation": "5956:25:37",
																			"nodeType": "VariableDeclaration",
																			"scope": 2521,
																			"src": "5948:33:37",
																			"stateVariable": false,
																			"storageLocation": "default",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"typeName": {
																				"id": 2376,
																				"name": "uint256",
																				"nodeType": "ElementaryTypeName",
																				"src": "5948:7:37",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"visibility": "internal"
																		}
																	],
																	"id": 2378,
																	"nodeType": "VariableDeclarationStatement",
																	"src": "5948:33:37"
																},
																{
																	"id": 2446,
																	"nodeType": "Block",
																	"src": "6069:803:37",
																	"statements": [
																		{
																			"expression": {
																				"id": 2389,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftHandSide": {
																					"id": 2379,
																					"name": "lastSelector",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2371,
																					"src": "6162:12:37",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes4",
																						"typeString": "bytes4"
																					}
																				},
																				"nodeType": "Assignment",
																				"operator": "=",
																				"rightHandSide": {
																					"arguments": [
																						{
																							"commonType": {
																								"typeIdentifier": "t_bytes32",
																								"typeString": "bytes32"
																							},
																							"id": 2387,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"leftExpression": {
																								"id": 2382,
																								"name": "selectorSlot",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 2257,
																								"src": "6209:12:37",
																								"typeDescriptions": {
																									"typeIdentifier": "t_bytes32",
																									"typeString": "bytes32"
																								}
																							},
																							"nodeType": "BinaryOperation",
																							"operator": "<<",
																							"rightExpression": {
																								"components": [
																									{
																										"commonType": {
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										},
																										"id": 2385,
																										"isConstant": false,
																										"isLValue": false,
																										"isPure": false,
																										"lValueRequested": false,
																										"leftExpression": {
																											"id": 2383,
																											"name": "selectorInSlotIndex",
																											"nodeType": "Identifier",
																											"overloadedDeclarations": [],
																											"referencedDeclaration": 2285,
																											"src": "6226:19:37",
																											"typeDescriptions": {
																												"typeIdentifier": "t_uint256",
																												"typeString": "uint256"
																											}
																										},
																										"nodeType": "BinaryOperation",
																										"operator": "<<",
																										"rightExpression": {
																											"hexValue": "35",
																											"id": 2384,
																											"isConstant": false,
																											"isLValue": false,
																											"isPure": true,
																											"kind": "number",
																											"lValueRequested": false,
																											"nodeType": "Literal",
																											"src": "6249:1:37",
																											"typeDescriptions": {
																												"typeIdentifier": "t_rational_5_by_1",
																												"typeString": "int_const 5"
																											},
																											"value": "5"
																										},
																										"src": "6226:24:37",
																										"typeDescriptions": {
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										}
																									}
																								],
																								"id": 2386,
																								"isConstant": false,
																								"isInlineArray": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"nodeType": "TupleExpression",
																								"src": "6225:26:37",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"src": "6209:42:37",
																							"typeDescriptions": {
																								"typeIdentifier": "t_bytes32",
																								"typeString": "bytes32"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_bytes32",
																								"typeString": "bytes32"
																							}
																						],
																						"id": 2381,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "6177:6:37",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_bytes4_$",
																							"typeString": "type(bytes4)"
																						},
																						"typeName": {
																							"id": 2380,
																							"name": "bytes4",
																							"nodeType": "ElementaryTypeName",
																							"src": "6177:6:37",
																							"typeDescriptions": {}
																						}
																					},
																					"id": 2388,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "typeConversion",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "6177:96:37",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes4",
																						"typeString": "bytes4"
																					}
																				},
																				"src": "6162:111:37",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes4",
																					"typeString": "bytes4"
																				}
																			},
																			"id": 2390,
																			"nodeType": "ExpressionStatement",
																			"src": "6162:111:37"
																		},
																		{
																			"condition": {
																				"commonType": {
																					"typeIdentifier": "t_bytes4",
																					"typeString": "bytes4"
																				},
																				"id": 2393,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2391,
																					"name": "lastSelector",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2371,
																					"src": "6300:12:37",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes4",
																						"typeString": "bytes4"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "!=",
																				"rightExpression": {
																					"id": 2392,
																					"name": "selector",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2302,
																					"src": "6316:8:37",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes4",
																						"typeString": "bytes4"
																					}
																				},
																				"src": "6300:24:37",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"id": 2414,
																			"nodeType": "IfStatement",
																			"src": "6296:292:37",
																			"trueBody": {
																				"id": 2413,
																				"nodeType": "Block",
																				"src": "6326:262:37",
																				"statements": [
																					{
																						"expression": {
																							"id": 2411,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"leftHandSide": {
																								"baseExpression": {
																									"expression": {
																										"id": 2394,
																										"name": "l",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 2253,
																										"src": "6419:1:37",
																										"typeDescriptions": {
																											"typeIdentifier": "t_struct$_Layout_$1093_storage_ptr",
																											"typeString": "struct DiamondBaseStorage.Layout storage pointer"
																										}
																									},
																									"id": 2397,
																									"isConstant": false,
																									"isLValue": true,
																									"isPure": false,
																									"lValueRequested": false,
																									"memberLocation": "6421:6:37",
																									"memberName": "facets",
																									"nodeType": "MemberAccess",
																									"referencedDeclaration": 1084,
																									"src": "6419:8:37",
																									"typeDescriptions": {
																										"typeIdentifier": "t_mapping$_t_bytes4_$_t_bytes32_$",
																										"typeString": "mapping(bytes4 => bytes32)"
																									}
																								},
																								"id": 2398,
																								"indexExpression": {
																									"id": 2396,
																									"name": "lastSelector",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 2371,
																									"src": "6428:12:37",
																									"typeDescriptions": {
																										"typeIdentifier": "t_bytes4",
																										"typeString": "bytes4"
																									}
																								},
																								"isConstant": false,
																								"isLValue": true,
																								"isPure": false,
																								"lValueRequested": true,
																								"nodeType": "IndexAccess",
																								"src": "6419:22:37",
																								"typeDescriptions": {
																									"typeIdentifier": "t_bytes32",
																									"typeString": "bytes32"
																								}
																							},
																							"nodeType": "Assignment",
																							"operator": "=",
																							"rightHandSide": {
																								"commonType": {
																									"typeIdentifier": "t_bytes32",
																									"typeString": "bytes32"
																								},
																								"id": 2410,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"leftExpression": {
																									"components": [
																										{
																											"commonType": {
																												"typeIdentifier": "t_bytes32",
																												"typeString": "bytes32"
																											},
																											"id": 2401,
																											"isConstant": false,
																											"isLValue": false,
																											"isPure": false,
																											"lValueRequested": false,
																											"leftExpression": {
																												"id": 2399,
																												"name": "oldFacet",
																												"nodeType": "Identifier",
																												"overloadedDeclarations": [],
																												"referencedDeclaration": 2309,
																												"src": "6473:8:37",
																												"typeDescriptions": {
																													"typeIdentifier": "t_bytes32",
																													"typeString": "bytes32"
																												}
																											},
																											"nodeType": "BinaryOperation",
																											"operator": "&",
																											"rightExpression": {
																												"id": 2400,
																												"name": "CLEAR_ADDRESS_MASK",
																												"nodeType": "Identifier",
																												"overloadedDeclarations": [],
																												"referencedDeclaration": 1904,
																												"src": "6484:18:37",
																												"typeDescriptions": {
																													"typeIdentifier": "t_bytes32",
																													"typeString": "bytes32"
																												}
																											},
																											"src": "6473:29:37",
																											"typeDescriptions": {
																												"typeIdentifier": "t_bytes32",
																												"typeString": "bytes32"
																											}
																										}
																									],
																									"id": 2402,
																									"isConstant": false,
																									"isInlineArray": false,
																									"isLValue": false,
																									"isPure": false,
																									"lValueRequested": false,
																									"nodeType": "TupleExpression",
																									"src": "6472:31:37",
																									"typeDescriptions": {
																										"typeIdentifier": "t_bytes32",
																										"typeString": "bytes32"
																									}
																								},
																								"nodeType": "BinaryOperation",
																								"operator": "|",
																								"rightExpression": {
																									"arguments": [
																										{
																											"baseExpression": {
																												"expression": {
																													"id": 2405,
																													"name": "l",
																													"nodeType": "Identifier",
																													"overloadedDeclarations": [],
																													"referencedDeclaration": 2253,
																													"src": "6542:1:37",
																													"typeDescriptions": {
																														"typeIdentifier": "t_struct$_Layout_$1093_storage_ptr",
																														"typeString": "struct DiamondBaseStorage.Layout storage pointer"
																													}
																												},
																												"id": 2406,
																												"isConstant": false,
																												"isLValue": true,
																												"isPure": false,
																												"lValueRequested": false,
																												"memberLocation": "6544:6:37",
																												"memberName": "facets",
																												"nodeType": "MemberAccess",
																												"referencedDeclaration": 1084,
																												"src": "6542:8:37",
																												"typeDescriptions": {
																													"typeIdentifier": "t_mapping$_t_bytes4_$_t_bytes32_$",
																													"typeString": "mapping(bytes4 => bytes32)"
																												}
																											},
																											"id": 2408,
																											"indexExpression": {
																												"id": 2407,
																												"name": "lastSelector",
																												"nodeType": "Identifier",
																												"overloadedDeclarations": [],
																												"referencedDeclaration": 2371,
																												"src": "6551:12:37",
																												"typeDescriptions": {
																													"typeIdentifier": "t_bytes4",
																													"typeString": "bytes4"
																												}
																											},
																											"isConstant": false,
																											"isLValue": true,
																											"isPure": false,
																											"lValueRequested": false,
																											"nodeType": "IndexAccess",
																											"src": "6542:22:37",
																											"typeDescriptions": {
																												"typeIdentifier": "t_bytes32",
																												"typeString": "bytes32"
																											}
																										}
																									],
																									"expression": {
																										"argumentTypes": [
																											{
																												"typeIdentifier": "t_bytes32",
																												"typeString": "bytes32"
																											}
																										],
																										"id": 2404,
																										"isConstant": false,
																										"isLValue": false,
																										"isPure": true,
																										"lValueRequested": false,
																										"nodeType": "ElementaryTypeNameExpression",
																										"src": "6534:7:37",
																										"typeDescriptions": {
																											"typeIdentifier": "t_type$_t_bytes20_$",
																											"typeString": "type(bytes20)"
																										},
																										"typeName": {
																											"id": 2403,
																											"name": "bytes20",
																											"nodeType": "ElementaryTypeName",
																											"src": "6534:7:37",
																											"typeDescriptions": {}
																										}
																									},
																									"id": 2409,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": false,
																									"kind": "typeConversion",
																									"lValueRequested": false,
																									"nameLocations": [],
																									"names": [],
																									"nodeType": "FunctionCall",
																									"src": "6534:31:37",
																									"tryCall": false,
																									"typeDescriptions": {
																										"typeIdentifier": "t_bytes20",
																										"typeString": "bytes20"
																									}
																								},
																								"src": "6472:93:37",
																								"typeDescriptions": {
																									"typeIdentifier": "t_bytes32",
																									"typeString": "bytes32"
																								}
																							},
																							"src": "6419:146:37",
																							"typeDescriptions": {
																								"typeIdentifier": "t_bytes32",
																								"typeString": "bytes32"
																							}
																						},
																						"id": 2412,
																						"nodeType": "ExpressionStatement",
																						"src": "6419:146:37"
																					}
																				]
																			}
																		},
																		{
																			"expression": {
																				"id": 2419,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "UnaryOperation",
																				"operator": "delete",
																				"prefix": true,
																				"src": "6610:25:37",
																				"subExpression": {
																					"baseExpression": {
																						"expression": {
																							"id": 2415,
																							"name": "l",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 2253,
																							"src": "6617:1:37",
																							"typeDescriptions": {
																								"typeIdentifier": "t_struct$_Layout_$1093_storage_ptr",
																								"typeString": "struct DiamondBaseStorage.Layout storage pointer"
																							}
																						},
																						"id": 2416,
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberLocation": "6619:6:37",
																						"memberName": "facets",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 1084,
																						"src": "6617:8:37",
																						"typeDescriptions": {
																							"typeIdentifier": "t_mapping$_t_bytes4_$_t_bytes32_$",
																							"typeString": "mapping(bytes4 => bytes32)"
																						}
																					},
																					"id": 2418,
																					"indexExpression": {
																						"id": 2417,
																						"name": "selector",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2302,
																						"src": "6626:8:37",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes4",
																							"typeString": "bytes4"
																						}
																					},
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": true,
																					"nodeType": "IndexAccess",
																					"src": "6617:18:37",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes32",
																						"typeString": "bytes32"
																					}
																				},
																				"typeDescriptions": {
																					"typeIdentifier": "t_tuple$__$",
																					"typeString": "tuple()"
																				}
																			},
																			"id": 2420,
																			"nodeType": "ExpressionStatement",
																			"src": "6610:25:37"
																		},
																		{
																			"assignments": [
																				2422
																			],
																			"declarations": [
																				{
																					"constant": false,
																					"id": 2422,
																					"mutability": "mutable",
																					"name": "oldSelectorCount",
																					"nameLocation": "6665:16:37",
																					"nodeType": "VariableDeclaration",
																					"scope": 2446,
																					"src": "6657:24:37",
																					"stateVariable": false,
																					"storageLocation": "default",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"typeName": {
																						"id": 2421,
																						"name": "uint256",
																						"nodeType": "ElementaryTypeName",
																						"src": "6657:7:37",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"visibility": "internal"
																				}
																			],
																			"id": 2430,
																			"initialValue": {
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"id": 2427,
																								"name": "oldFacet",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 2309,
																								"src": "6699:8:37",
																								"typeDescriptions": {
																									"typeIdentifier": "t_bytes32",
																									"typeString": "bytes32"
																								}
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_bytes32",
																									"typeString": "bytes32"
																								}
																							],
																							"id": 2426,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"nodeType": "ElementaryTypeNameExpression",
																							"src": "6691:7:37",
																							"typeDescriptions": {
																								"typeIdentifier": "t_type$_t_uint256_$",
																								"typeString": "type(uint256)"
																							},
																							"typeName": {
																								"id": 2425,
																								"name": "uint256",
																								"nodeType": "ElementaryTypeName",
																								"src": "6691:7:37",
																								"typeDescriptions": {}
																							}
																						},
																						"id": 2428,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "typeConversion",
																						"lValueRequested": false,
																						"nameLocations": [],
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "6691:17:37",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					],
																					"id": 2424,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "6684:6:37",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_uint16_$",
																						"typeString": "type(uint16)"
																					},
																					"typeName": {
																						"id": 2423,
																						"name": "uint16",
																						"nodeType": "ElementaryTypeName",
																						"src": "6684:6:37",
																						"typeDescriptions": {}
																					}
																				},
																				"id": 2429,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "6684:25:37",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint16",
																					"typeString": "uint16"
																				}
																			},
																			"nodeType": "VariableDeclarationStatement",
																			"src": "6657:52:37"
																		},
																		{
																			"expression": {
																				"id": 2435,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftHandSide": {
																					"id": 2431,
																					"name": "oldSelectorsSlotCount",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2374,
																					"src": "6731:21:37",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "Assignment",
																				"operator": "=",
																				"rightHandSide": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 2434,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 2432,
																						"name": "oldSelectorCount",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2422,
																						"src": "6755:16:37",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": ">>",
																					"rightExpression": {
																						"hexValue": "33",
																						"id": 2433,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "6775:1:37",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_3_by_1",
																							"typeString": "int_const 3"
																						},
																						"value": "3"
																					},
																					"src": "6755:21:37",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "6731:45:37",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"id": 2436,
																			"nodeType": "ExpressionStatement",
																			"src": "6731:45:37"
																		},
																		{
																			"expression": {
																				"id": 2444,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftHandSide": {
																					"id": 2437,
																					"name": "oldSelectorInSlotPosition",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2377,
																					"src": "6798:25:37",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "Assignment",
																				"operator": "=",
																				"rightHandSide": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 2443,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"components": [
																							{
																								"commonType": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								},
																								"id": 2440,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"leftExpression": {
																									"id": 2438,
																									"name": "oldSelectorCount",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 2422,
																									"src": "6827:16:37",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"nodeType": "BinaryOperation",
																								"operator": "&",
																								"rightExpression": {
																									"hexValue": "37",
																									"id": 2439,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"kind": "number",
																									"lValueRequested": false,
																									"nodeType": "Literal",
																									"src": "6846:1:37",
																									"typeDescriptions": {
																										"typeIdentifier": "t_rational_7_by_1",
																										"typeString": "int_const 7"
																									},
																									"value": "7"
																								},
																								"src": "6827:20:37",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							}
																						],
																						"id": 2441,
																						"isConstant": false,
																						"isInlineArray": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"nodeType": "TupleExpression",
																						"src": "6826:22:37",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "<<",
																					"rightExpression": {
																						"hexValue": "35",
																						"id": 2442,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "6852:1:37",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_5_by_1",
																							"typeString": "int_const 5"
																						},
																						"value": "5"
																					},
																					"src": "6826:27:37",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "6798:55:37",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"id": 2445,
																			"nodeType": "ExpressionStatement",
																			"src": "6798:55:37"
																		}
																	]
																},
																{
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2449,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2447,
																			"name": "oldSelectorsSlotCount",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2374,
																			"src": "6894:21:37",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "!=",
																		"rightExpression": {
																			"id": 2448,
																			"name": "selectorSlotCount",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2279,
																			"src": "6919:17:37",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6894:42:37",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"falseBody": {
																		"id": 2504,
																		"nodeType": "Block",
																		"src": "7610:387:37",
																		"statements": [
																			{
																				"expression": {
																					"id": 2502,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftHandSide": {
																						"id": 2485,
																						"name": "selectorSlot",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2257,
																						"src": "7732:12:37",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes32",
																							"typeString": "bytes32"
																						}
																					},
																					"nodeType": "Assignment",
																					"operator": "=",
																					"rightHandSide": {
																						"commonType": {
																							"typeIdentifier": "t_bytes32",
																							"typeString": "bytes32"
																						},
																						"id": 2501,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftExpression": {
																							"components": [
																								{
																									"commonType": {
																										"typeIdentifier": "t_bytes32",
																										"typeString": "bytes32"
																									},
																									"id": 2492,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": false,
																									"lValueRequested": false,
																									"leftExpression": {
																										"id": 2486,
																										"name": "selectorSlot",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 2257,
																										"src": "7772:12:37",
																										"typeDescriptions": {
																											"typeIdentifier": "t_bytes32",
																											"typeString": "bytes32"
																										}
																									},
																									"nodeType": "BinaryOperation",
																									"operator": "&",
																									"rightExpression": {
																										"id": 2491,
																										"isConstant": false,
																										"isLValue": false,
																										"isPure": false,
																										"lValueRequested": false,
																										"nodeType": "UnaryOperation",
																										"operator": "~",
																										"prefix": true,
																										"src": "7815:83:37",
																										"subExpression": {
																											"components": [
																												{
																													"commonType": {
																														"typeIdentifier": "t_bytes32",
																														"typeString": "bytes32"
																													},
																													"id": 2489,
																													"isConstant": false,
																													"isLValue": false,
																													"isPure": false,
																													"lValueRequested": false,
																													"leftExpression": {
																														"id": 2487,
																														"name": "CLEAR_SELECTOR_MASK",
																														"nodeType": "Identifier",
																														"overloadedDeclarations": [],
																														"referencedDeclaration": 1915,
																														"src": "7817:19:37",
																														"typeDescriptions": {
																															"typeIdentifier": "t_bytes32",
																															"typeString": "bytes32"
																														}
																													},
																													"nodeType": "BinaryOperation",
																													"operator": ">>",
																													"rightExpression": {
																														"id": 2488,
																														"name": "oldSelectorInSlotPosition",
																														"nodeType": "Identifier",
																														"overloadedDeclarations": [],
																														"referencedDeclaration": 2377,
																														"src": "7872:25:37",
																														"typeDescriptions": {
																															"typeIdentifier": "t_uint256",
																															"typeString": "uint256"
																														}
																													},
																													"src": "7817:80:37",
																													"typeDescriptions": {
																														"typeIdentifier": "t_bytes32",
																														"typeString": "bytes32"
																													}
																												}
																											],
																											"id": 2490,
																											"isConstant": false,
																											"isInlineArray": false,
																											"isLValue": false,
																											"isPure": false,
																											"lValueRequested": false,
																											"nodeType": "TupleExpression",
																											"src": "7816:82:37",
																											"typeDescriptions": {
																												"typeIdentifier": "t_bytes32",
																												"typeString": "bytes32"
																											}
																										},
																										"typeDescriptions": {
																											"typeIdentifier": "t_bytes32",
																											"typeString": "bytes32"
																										}
																									},
																									"src": "7772:126:37",
																									"typeDescriptions": {
																										"typeIdentifier": "t_bytes32",
																										"typeString": "bytes32"
																									}
																								}
																							],
																							"id": 2493,
																							"isConstant": false,
																							"isInlineArray": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"nodeType": "TupleExpression",
																							"src": "7771:128:37",
																							"typeDescriptions": {
																								"typeIdentifier": "t_bytes32",
																								"typeString": "bytes32"
																							}
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "|",
																						"rightExpression": {
																							"components": [
																								{
																									"commonType": {
																										"typeIdentifier": "t_bytes32",
																										"typeString": "bytes32"
																									},
																									"id": 2499,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": false,
																									"lValueRequested": false,
																									"leftExpression": {
																										"arguments": [
																											{
																												"id": 2496,
																												"name": "lastSelector",
																												"nodeType": "Identifier",
																												"overloadedDeclarations": [],
																												"referencedDeclaration": 2371,
																												"src": "7935:12:37",
																												"typeDescriptions": {
																													"typeIdentifier": "t_bytes4",
																													"typeString": "bytes4"
																												}
																											}
																										],
																										"expression": {
																											"argumentTypes": [
																												{
																													"typeIdentifier": "t_bytes4",
																													"typeString": "bytes4"
																												}
																											],
																											"id": 2495,
																											"isConstant": false,
																											"isLValue": false,
																											"isPure": true,
																											"lValueRequested": false,
																											"nodeType": "ElementaryTypeNameExpression",
																											"src": "7927:7:37",
																											"typeDescriptions": {
																												"typeIdentifier": "t_type$_t_bytes32_$",
																												"typeString": "type(bytes32)"
																											},
																											"typeName": {
																												"id": 2494,
																												"name": "bytes32",
																												"nodeType": "ElementaryTypeName",
																												"src": "7927:7:37",
																												"typeDescriptions": {}
																											}
																										},
																										"id": 2497,
																										"isConstant": false,
																										"isLValue": false,
																										"isPure": false,
																										"kind": "typeConversion",
																										"lValueRequested": false,
																										"nameLocations": [],
																										"names": [],
																										"nodeType": "FunctionCall",
																										"src": "7927:21:37",
																										"tryCall": false,
																										"typeDescriptions": {
																											"typeIdentifier": "t_bytes32",
																											"typeString": "bytes32"
																										}
																									},
																									"nodeType": "BinaryOperation",
																									"operator": ">>",
																									"rightExpression": {
																										"id": 2498,
																										"name": "oldSelectorInSlotPosition",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 2377,
																										"src": "7952:25:37",
																										"typeDescriptions": {
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										}
																									},
																									"src": "7927:50:37",
																									"typeDescriptions": {
																										"typeIdentifier": "t_bytes32",
																										"typeString": "bytes32"
																									}
																								}
																							],
																							"id": 2500,
																							"isConstant": false,
																							"isInlineArray": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"nodeType": "TupleExpression",
																							"src": "7926:52:37",
																							"typeDescriptions": {
																								"typeIdentifier": "t_bytes32",
																								"typeString": "bytes32"
																							}
																						},
																						"src": "7771:207:37",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes32",
																							"typeString": "bytes32"
																						}
																					},
																					"src": "7732:246:37",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes32",
																						"typeString": "bytes32"
																					}
																				},
																				"id": 2503,
																				"nodeType": "ExpressionStatement",
																				"src": "7732:246:37"
																			}
																		]
																	},
																	"id": 2505,
																	"nodeType": "IfStatement",
																	"src": "6890:1107:37",
																	"trueBody": {
																		"id": 2484,
																		"nodeType": "Block",
																		"src": "6938:666:37",
																		"statements": [
																			{
																				"assignments": [
																					2451
																				],
																				"declarations": [
																					{
																						"constant": false,
																						"id": 2451,
																						"mutability": "mutable",
																						"name": "oldSelectorSlot",
																						"nameLocation": "6968:15:37",
																						"nodeType": "VariableDeclaration",
																						"scope": 2484,
																						"src": "6960:23:37",
																						"stateVariable": false,
																						"storageLocation": "default",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes32",
																							"typeString": "bytes32"
																						},
																						"typeName": {
																							"id": 2450,
																							"name": "bytes32",
																							"nodeType": "ElementaryTypeName",
																							"src": "6960:7:37",
																							"typeDescriptions": {
																								"typeIdentifier": "t_bytes32",
																								"typeString": "bytes32"
																							}
																						},
																						"visibility": "internal"
																					}
																				],
																				"id": 2456,
																				"initialValue": {
																					"baseExpression": {
																						"expression": {
																							"id": 2452,
																							"name": "l",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 2253,
																							"src": "6986:1:37",
																							"typeDescriptions": {
																								"typeIdentifier": "t_struct$_Layout_$1093_storage_ptr",
																								"typeString": "struct DiamondBaseStorage.Layout storage pointer"
																							}
																						},
																						"id": 2453,
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberLocation": "6988:13:37",
																						"memberName": "selectorSlots",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 1090,
																						"src": "6986:15:37",
																						"typeDescriptions": {
																							"typeIdentifier": "t_mapping$_t_uint256_$_t_bytes32_$",
																							"typeString": "mapping(uint256 => bytes32)"
																						}
																					},
																					"id": 2455,
																					"indexExpression": {
																						"id": 2454,
																						"name": "oldSelectorsSlotCount",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2374,
																						"src": "7027:21:37",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "IndexAccess",
																					"src": "6986:84:37",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes32",
																						"typeString": "bytes32"
																					}
																				},
																				"nodeType": "VariableDeclarationStatement",
																				"src": "6960:110:37"
																			},
																			{
																				"expression": {
																					"id": 2474,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftHandSide": {
																						"id": 2457,
																						"name": "oldSelectorSlot",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2451,
																						"src": "7193:15:37",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes32",
																							"typeString": "bytes32"
																						}
																					},
																					"nodeType": "Assignment",
																					"operator": "=",
																					"rightHandSide": {
																						"commonType": {
																							"typeIdentifier": "t_bytes32",
																							"typeString": "bytes32"
																						},
																						"id": 2473,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftExpression": {
																							"components": [
																								{
																									"commonType": {
																										"typeIdentifier": "t_bytes32",
																										"typeString": "bytes32"
																									},
																									"id": 2464,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": false,
																									"lValueRequested": false,
																									"leftExpression": {
																										"id": 2458,
																										"name": "oldSelectorSlot",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 2451,
																										"src": "7236:15:37",
																										"typeDescriptions": {
																											"typeIdentifier": "t_bytes32",
																											"typeString": "bytes32"
																										}
																									},
																									"nodeType": "BinaryOperation",
																									"operator": "&",
																									"rightExpression": {
																										"id": 2463,
																										"isConstant": false,
																										"isLValue": false,
																										"isPure": false,
																										"lValueRequested": false,
																										"nodeType": "UnaryOperation",
																										"operator": "~",
																										"prefix": true,
																										"src": "7282:83:37",
																										"subExpression": {
																											"components": [
																												{
																													"commonType": {
																														"typeIdentifier": "t_bytes32",
																														"typeString": "bytes32"
																													},
																													"id": 2461,
																													"isConstant": false,
																													"isLValue": false,
																													"isPure": false,
																													"lValueRequested": false,
																													"leftExpression": {
																														"id": 2459,
																														"name": "CLEAR_SELECTOR_MASK",
																														"nodeType": "Identifier",
																														"overloadedDeclarations": [],
																														"referencedDeclaration": 1915,
																														"src": "7284:19:37",
																														"typeDescriptions": {
																															"typeIdentifier": "t_bytes32",
																															"typeString": "bytes32"
																														}
																													},
																													"nodeType": "BinaryOperation",
																													"operator": ">>",
																													"rightExpression": {
																														"id": 2460,
																														"name": "oldSelectorInSlotPosition",
																														"nodeType": "Identifier",
																														"overloadedDeclarations": [],
																														"referencedDeclaration": 2377,
																														"src": "7339:25:37",
																														"typeDescriptions": {
																															"typeIdentifier": "t_uint256",
																															"typeString": "uint256"
																														}
																													},
																													"src": "7284:80:37",
																													"typeDescriptions": {
																														"typeIdentifier": "t_bytes32",
																														"typeString": "bytes32"
																													}
																												}
																											],
																											"id": 2462,
																											"isConstant": false,
																											"isInlineArray": false,
																											"isLValue": false,
																											"isPure": false,
																											"lValueRequested": false,
																											"nodeType": "TupleExpression",
																											"src": "7283:82:37",
																											"typeDescriptions": {
																												"typeIdentifier": "t_bytes32",
																												"typeString": "bytes32"
																											}
																										},
																										"typeDescriptions": {
																											"typeIdentifier": "t_bytes32",
																											"typeString": "bytes32"
																										}
																									},
																									"src": "7236:129:37",
																									"typeDescriptions": {
																										"typeIdentifier": "t_bytes32",
																										"typeString": "bytes32"
																									}
																								}
																							],
																							"id": 2465,
																							"isConstant": false,
																							"isInlineArray": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"nodeType": "TupleExpression",
																							"src": "7235:131:37",
																							"typeDescriptions": {
																								"typeIdentifier": "t_bytes32",
																								"typeString": "bytes32"
																							}
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "|",
																						"rightExpression": {
																							"components": [
																								{
																									"commonType": {
																										"typeIdentifier": "t_bytes32",
																										"typeString": "bytes32"
																									},
																									"id": 2471,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": false,
																									"lValueRequested": false,
																									"leftExpression": {
																										"arguments": [
																											{
																												"id": 2468,
																												"name": "lastSelector",
																												"nodeType": "Identifier",
																												"overloadedDeclarations": [],
																												"referencedDeclaration": 2371,
																												"src": "7402:12:37",
																												"typeDescriptions": {
																													"typeIdentifier": "t_bytes4",
																													"typeString": "bytes4"
																												}
																											}
																										],
																										"expression": {
																											"argumentTypes": [
																												{
																													"typeIdentifier": "t_bytes4",
																													"typeString": "bytes4"
																												}
																											],
																											"id": 2467,
																											"isConstant": false,
																											"isLValue": false,
																											"isPure": true,
																											"lValueRequested": false,
																											"nodeType": "ElementaryTypeNameExpression",
																											"src": "7394:7:37",
																											"typeDescriptions": {
																												"typeIdentifier": "t_type$_t_bytes32_$",
																												"typeString": "type(bytes32)"
																											},
																											"typeName": {
																												"id": 2466,
																												"name": "bytes32",
																												"nodeType": "ElementaryTypeName",
																												"src": "7394:7:37",
																												"typeDescriptions": {}
																											}
																										},
																										"id": 2469,
																										"isConstant": false,
																										"isLValue": false,
																										"isPure": false,
																										"kind": "typeConversion",
																										"lValueRequested": false,
																										"nameLocations": [],
																										"names": [],
																										"nodeType": "FunctionCall",
																										"src": "7394:21:37",
																										"tryCall": false,
																										"typeDescriptions": {
																											"typeIdentifier": "t_bytes32",
																											"typeString": "bytes32"
																										}
																									},
																									"nodeType": "BinaryOperation",
																									"operator": ">>",
																									"rightExpression": {
																										"id": 2470,
																										"name": "oldSelectorInSlotPosition",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 2377,
																										"src": "7419:25:37",
																										"typeDescriptions": {
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										}
																									},
																									"src": "7394:50:37",
																									"typeDescriptions": {
																										"typeIdentifier": "t_bytes32",
																										"typeString": "bytes32"
																									}
																								}
																							],
																							"id": 2472,
																							"isConstant": false,
																							"isInlineArray": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"nodeType": "TupleExpression",
																							"src": "7393:52:37",
																							"typeDescriptions": {
																								"typeIdentifier": "t_bytes32",
																								"typeString": "bytes32"
																							}
																						},
																						"src": "7235:210:37",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes32",
																							"typeString": "bytes32"
																						}
																					},
																					"src": "7193:252:37",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes32",
																						"typeString": "bytes32"
																					}
																				},
																				"id": 2475,
																				"nodeType": "ExpressionStatement",
																				"src": "7193:252:37"
																			},
																			{
																				"expression": {
																					"id": 2482,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftHandSide": {
																						"baseExpression": {
																							"expression": {
																								"id": 2476,
																								"name": "l",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 2253,
																								"src": "7529:1:37",
																								"typeDescriptions": {
																									"typeIdentifier": "t_struct$_Layout_$1093_storage_ptr",
																									"typeString": "struct DiamondBaseStorage.Layout storage pointer"
																								}
																							},
																							"id": 2479,
																							"isConstant": false,
																							"isLValue": true,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberLocation": "7531:13:37",
																							"memberName": "selectorSlots",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 1090,
																							"src": "7529:15:37",
																							"typeDescriptions": {
																								"typeIdentifier": "t_mapping$_t_uint256_$_t_bytes32_$",
																								"typeString": "mapping(uint256 => bytes32)"
																							}
																						},
																						"id": 2480,
																						"indexExpression": {
																							"id": 2478,
																							"name": "oldSelectorsSlotCount",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 2374,
																							"src": "7545:21:37",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": true,
																						"nodeType": "IndexAccess",
																						"src": "7529:38:37",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes32",
																							"typeString": "bytes32"
																						}
																					},
																					"nodeType": "Assignment",
																					"operator": "=",
																					"rightHandSide": {
																						"id": 2481,
																						"name": "oldSelectorSlot",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2451,
																						"src": "7570:15:37",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes32",
																							"typeString": "bytes32"
																						}
																					},
																					"src": "7529:56:37",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes32",
																						"typeString": "bytes32"
																					}
																				},
																				"id": 2483,
																				"nodeType": "ExpressionStatement",
																				"src": "7529:56:37"
																			}
																		]
																	}
																},
																{
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2508,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2506,
																			"name": "selectorInSlotIndex",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2285,
																			"src": "8019:19:37",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 2507,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "8042:1:37",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "8019:24:37",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"id": 2520,
																	"nodeType": "IfStatement",
																	"src": "8015:150:37",
																	"trueBody": {
																		"id": 2519,
																		"nodeType": "Block",
																		"src": "8045:120:37",
																		"statements": [
																			{
																				"expression": {
																					"id": 2513,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "UnaryOperation",
																					"operator": "delete",
																					"prefix": true,
																					"src": "8067:41:37",
																					"subExpression": {
																						"baseExpression": {
																							"expression": {
																								"id": 2509,
																								"name": "l",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 2253,
																								"src": "8074:1:37",
																								"typeDescriptions": {
																									"typeIdentifier": "t_struct$_Layout_$1093_storage_ptr",
																									"typeString": "struct DiamondBaseStorage.Layout storage pointer"
																								}
																							},
																							"id": 2510,
																							"isConstant": false,
																							"isLValue": true,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberLocation": "8076:13:37",
																							"memberName": "selectorSlots",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 1090,
																							"src": "8074:15:37",
																							"typeDescriptions": {
																								"typeIdentifier": "t_mapping$_t_uint256_$_t_bytes32_$",
																								"typeString": "mapping(uint256 => bytes32)"
																							}
																						},
																						"id": 2512,
																						"indexExpression": {
																							"id": 2511,
																							"name": "selectorSlotCount",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 2279,
																							"src": "8090:17:37",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": true,
																						"nodeType": "IndexAccess",
																						"src": "8074:34:37",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes32",
																							"typeString": "bytes32"
																						}
																					},
																					"typeDescriptions": {
																						"typeIdentifier": "t_tuple$__$",
																						"typeString": "tuple()"
																					}
																				},
																				"id": 2514,
																				"nodeType": "ExpressionStatement",
																				"src": "8067:41:37"
																			},
																			{
																				"expression": {
																					"id": 2517,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftHandSide": {
																						"id": 2515,
																						"name": "selectorSlot",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2257,
																						"src": "8130:12:37",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes32",
																							"typeString": "bytes32"
																						}
																					},
																					"nodeType": "Assignment",
																					"operator": "=",
																					"rightHandSide": {
																						"hexValue": "30",
																						"id": 2516,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "8145:1:37",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_0_by_1",
																							"typeString": "int_const 0"
																						},
																						"value": "0"
																					},
																					"src": "8130:16:37",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes32",
																						"typeString": "bytes32"
																					}
																				},
																				"id": 2518,
																				"nodeType": "ExpressionStatement",
																				"src": "8130:16:37"
																			}
																		]
																	}
																}
															]
														},
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2297,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2293,
																"name": "i",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2291,
																"src": "5152:1:37",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"expression": {
																	"expression": {
																		"id": 2294,
																		"name": "facetCut",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2260,
																		"src": "5156:8:37",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_FacetCut_$478_memory_ptr",
																			"typeString": "struct IERC2535DiamondCutInternal.FacetCut memory"
																		}
																	},
																	"id": 2295,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "5165:9:37",
																	"memberName": "selectors",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 477,
																	"src": "5156:18:37",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_bytes4_$dyn_memory_ptr",
																		"typeString": "bytes4[] memory"
																	}
																},
																"id": 2296,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "5175:6:37",
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "5156:25:37",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5152:29:37",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2522,
														"initializationExpression": {
															"assignments": [
																2291
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 2291,
																	"mutability": "mutable",
																	"name": "i",
																	"nameLocation": "5149:1:37",
																	"nodeType": "VariableDeclaration",
																	"scope": 2522,
																	"src": "5141:9:37",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 2290,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "5141:7:37",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 2292,
															"nodeType": "VariableDeclarationStatement",
															"src": "5141:9:37"
														},
														"isSimpleCounterLoop": true,
														"loopExpression": {
															"expression": {
																"id": 2299,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "++",
																"prefix": false,
																"src": "5183:3:37",
																"subExpression": {
																	"id": 2298,
																	"name": "i",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2291,
																	"src": "5183:1:37",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2300,
															"nodeType": "ExpressionStatement",
															"src": "5183:3:37"
														},
														"nodeType": "ForStatement",
														"src": "5136:3043:37"
													},
													{
														"expression": {
															"id": 2530,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2523,
																"name": "selectorCount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2255,
																"src": "8193:13:37",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2529,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2526,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2524,
																				"name": "selectorSlotCount",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2279,
																				"src": "8210:17:37",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "<<",
																			"rightExpression": {
																				"hexValue": "33",
																				"id": 2525,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "8231:1:37",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_3_by_1",
																					"typeString": "int_const 3"
																				},
																				"value": "3"
																			},
																			"src": "8210:22:37",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2527,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "8209:24:37",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "|",
																"rightExpression": {
																	"id": 2528,
																	"name": "selectorInSlotIndex",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2285,
																	"src": "8236:19:37",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "8209:46:37",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "8193:62:37",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2531,
														"nodeType": "ExpressionStatement",
														"src": "8193:62:37"
													},
													{
														"expression": {
															"components": [
																{
																	"id": 2532,
																	"name": "selectorCount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2255,
																	"src": "8278:13:37",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 2533,
																	"name": "selectorSlot",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2257,
																	"src": "8293:12:37",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																}
															],
															"id": 2534,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "8277:29:37",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_uint256_$_t_bytes32_$",
																"typeString": "tuple(uint256,bytes32)"
															}
														},
														"functionReturnParameters": 2266,
														"id": 2535,
														"nodeType": "Return",
														"src": "8270:36:37"
													}
												]
											}
										]
									},
									"id": 2538,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_removeFacetSelectors",
									"nameLocation": "4658:21:37",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2261,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2253,
												"mutability": "mutable",
												"name": "l",
												"nameLocation": "4723:1:37",
												"nodeType": "VariableDeclaration",
												"scope": 2538,
												"src": "4689:35:37",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Layout_$1093_storage_ptr",
													"typeString": "struct DiamondBaseStorage.Layout"
												},
												"typeName": {
													"id": 2252,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2251,
														"name": "DiamondBaseStorage.Layout",
														"nameLocations": [
															"4689:18:37",
															"4708:6:37"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1093,
														"src": "4689:25:37"
													},
													"referencedDeclaration": 1093,
													"src": "4689:25:37",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Layout_$1093_storage_ptr",
														"typeString": "struct DiamondBaseStorage.Layout"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2255,
												"mutability": "mutable",
												"name": "selectorCount",
												"nameLocation": "4742:13:37",
												"nodeType": "VariableDeclaration",
												"scope": 2538,
												"src": "4734:21:37",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2254,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4734:7:37",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2257,
												"mutability": "mutable",
												"name": "selectorSlot",
												"nameLocation": "4773:12:37",
												"nodeType": "VariableDeclaration",
												"scope": 2538,
												"src": "4765:20:37",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2256,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4765:7:37",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2260,
												"mutability": "mutable",
												"name": "facetCut",
												"nameLocation": "4811:8:37",
												"nodeType": "VariableDeclaration",
												"scope": 2538,
												"src": "4795:24:37",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_FacetCut_$478_memory_ptr",
													"typeString": "struct IERC2535DiamondCutInternal.FacetCut"
												},
												"typeName": {
													"id": 2259,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2258,
														"name": "FacetCut",
														"nameLocations": [
															"4795:8:37"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 478,
														"src": "4795:8:37"
													},
													"referencedDeclaration": 478,
													"src": "4795:8:37",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_FacetCut_$478_storage_ptr",
														"typeString": "struct IERC2535DiamondCutInternal.FacetCut"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4679:146:37"
									},
									"returnParameters": {
										"id": 2266,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2263,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2538,
												"src": "4844:7:37",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2262,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4844:7:37",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2265,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2538,
												"src": "4853:7:37",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2264,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4853:7:37",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4843:18:37"
									},
									"scope": 2702,
									"src": "4649:3674:37",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2639,
										"nodeType": "Block",
										"src": "8455:954:37",
										"statements": [
											{
												"id": 2638,
												"nodeType": "UncheckedBlock",
												"src": "8465:938:37",
												"statements": [
													{
														"condition": {
															"id": 2551,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "8493:29:37",
															"subExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"expression": {
																		"expression": {
																			"id": 2547,
																			"name": "facetCut",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2544,
																			"src": "8494:8:37",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_FacetCut_$478_memory_ptr",
																				"typeString": "struct IERC2535DiamondCutInternal.FacetCut memory"
																			}
																		},
																		"id": 2548,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "8503:6:37",
																		"memberName": "target",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 471,
																		"src": "8494:15:37",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"id": 2549,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "8510:10:37",
																	"memberName": "isContract",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2785,
																	"src": "8494:26:37",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$attached_to$_t_address_$",
																		"typeString": "function (address) view returns (bool)"
																	}
																},
																"id": 2550,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8494:28:37",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2555,
														"nodeType": "IfStatement",
														"src": "8489:92:37",
														"trueBody": {
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 2552,
																	"name": "DiamondWritable__TargetHasNoCode",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2736,
																	"src": "8547:32:37",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 2553,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8547:34:37",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2554,
															"nodeType": "RevertStatement",
															"src": "8540:41:37"
														}
													},
													{
														"body": {
															"id": 2636,
															"nodeType": "Block",
															"src": "8648:745:37",
															"statements": [
																{
																	"assignments": [
																		2568
																	],
																	"declarations": [
																		{
																			"constant": false,
																			"id": 2568,
																			"mutability": "mutable",
																			"name": "selector",
																			"nameLocation": "8673:8:37",
																			"nodeType": "VariableDeclaration",
																			"scope": 2636,
																			"src": "8666:15:37",
																			"stateVariable": false,
																			"storageLocation": "default",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes4",
																				"typeString": "bytes4"
																			},
																			"typeName": {
																				"id": 2567,
																				"name": "bytes4",
																				"nodeType": "ElementaryTypeName",
																				"src": "8666:6:37",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes4",
																					"typeString": "bytes4"
																				}
																			},
																			"visibility": "internal"
																		}
																	],
																	"id": 2573,
																	"initialValue": {
																		"baseExpression": {
																			"expression": {
																				"id": 2569,
																				"name": "facetCut",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2544,
																				"src": "8684:8:37",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_FacetCut_$478_memory_ptr",
																					"typeString": "struct IERC2535DiamondCutInternal.FacetCut memory"
																				}
																			},
																			"id": 2570,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "8693:9:37",
																			"memberName": "selectors",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 477,
																			"src": "8684:18:37",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_bytes4_$dyn_memory_ptr",
																				"typeString": "bytes4[] memory"
																			}
																		},
																		"id": 2572,
																		"indexExpression": {
																			"id": 2571,
																			"name": "i",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2557,
																			"src": "8703:1:37",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "8684:21:37",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes4",
																			"typeString": "bytes4"
																		}
																	},
																	"nodeType": "VariableDeclarationStatement",
																	"src": "8666:39:37"
																},
																{
																	"assignments": [
																		2575
																	],
																	"declarations": [
																		{
																			"constant": false,
																			"id": 2575,
																			"mutability": "mutable",
																			"name": "oldFacet",
																			"nameLocation": "8731:8:37",
																			"nodeType": "VariableDeclaration",
																			"scope": 2636,
																			"src": "8723:16:37",
																			"stateVariable": false,
																			"storageLocation": "default",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes32",
																				"typeString": "bytes32"
																			},
																			"typeName": {
																				"id": 2574,
																				"name": "bytes32",
																				"nodeType": "ElementaryTypeName",
																				"src": "8723:7:37",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				}
																			},
																			"visibility": "internal"
																		}
																	],
																	"id": 2580,
																	"initialValue": {
																		"baseExpression": {
																			"expression": {
																				"id": 2576,
																				"name": "l",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2541,
																				"src": "8742:1:37",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_Layout_$1093_storage_ptr",
																					"typeString": "struct DiamondBaseStorage.Layout storage pointer"
																				}
																			},
																			"id": 2577,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "8744:6:37",
																			"memberName": "facets",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 1084,
																			"src": "8742:8:37",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_bytes4_$_t_bytes32_$",
																				"typeString": "mapping(bytes4 => bytes32)"
																			}
																		},
																		"id": 2579,
																		"indexExpression": {
																			"id": 2578,
																			"name": "selector",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2568,
																			"src": "8751:8:37",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes4",
																				"typeString": "bytes4"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "8742:18:37",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	"nodeType": "VariableDeclarationStatement",
																	"src": "8723:37:37"
																},
																{
																	"assignments": [
																		2582
																	],
																	"declarations": [
																		{
																			"constant": false,
																			"id": 2582,
																			"mutability": "mutable",
																			"name": "oldFacetAddress",
																			"nameLocation": "8786:15:37",
																			"nodeType": "VariableDeclaration",
																			"scope": 2636,
																			"src": "8778:23:37",
																			"stateVariable": false,
																			"storageLocation": "default",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			"typeName": {
																				"id": 2581,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "8778:7:37",
																				"stateMutability": "nonpayable",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"visibility": "internal"
																		}
																	],
																	"id": 2590,
																	"initialValue": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"id": 2587,
																						"name": "oldFacet",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2575,
																						"src": "8820:8:37",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes32",
																							"typeString": "bytes32"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_bytes32",
																							"typeString": "bytes32"
																						}
																					],
																					"id": 2586,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "8812:7:37",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_bytes20_$",
																						"typeString": "type(bytes20)"
																					},
																					"typeName": {
																						"id": 2585,
																						"name": "bytes20",
																						"nodeType": "ElementaryTypeName",
																						"src": "8812:7:37",
																						"typeDescriptions": {}
																					}
																				},
																				"id": 2588,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "8812:17:37",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes20",
																					"typeString": "bytes20"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_bytes20",
																					"typeString": "bytes20"
																				}
																			],
																			"id": 2584,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "8804:7:37",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 2583,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "8804:7:37",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 2589,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "8804:26:37",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"nodeType": "VariableDeclarationStatement",
																	"src": "8778:52:37"
																},
																{
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		"id": 2596,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2591,
																			"name": "oldFacetAddress",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2582,
																			"src": "8853:15:37",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"arguments": [
																				{
																					"hexValue": "30",
																					"id": 2594,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "8880:1:37",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_0_by_1",
																						"typeString": "int_const 0"
																					},
																					"value": "0"
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_rational_0_by_1",
																						"typeString": "int_const 0"
																					}
																				],
																				"id": 2593,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "8872:7:37",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 2592,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "8872:7:37",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 2595,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "8872:10:37",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"src": "8853:29:37",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"id": 2600,
																	"nodeType": "IfStatement",
																	"src": "8849:97:37",
																	"trueBody": {
																		"errorCall": {
																			"arguments": [],
																			"expression": {
																				"argumentTypes": [],
																				"id": 2597,
																				"name": "DiamondWritable__SelectorNotFound",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2732,
																				"src": "8911:33:37",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$__$returns$__$",
																					"typeString": "function () pure"
																				}
																			},
																			"id": 2598,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "8911:35:37",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 2599,
																		"nodeType": "RevertStatement",
																		"src": "8904:42:37"
																	}
																},
																{
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		"id": 2606,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2601,
																			"name": "oldFacetAddress",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2582,
																			"src": "8968:15:37",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"arguments": [
																				{
																					"id": 2604,
																					"name": "this",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967268,
																					"src": "8995:4:37",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_DiamondWritableInternal_$2702",
																						"typeString": "contract DiamondWritableInternal"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_contract$_DiamondWritableInternal_$2702",
																						"typeString": "contract DiamondWritableInternal"
																					}
																				],
																				"id": 2603,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "8987:7:37",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 2602,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "8987:7:37",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 2605,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "8987:13:37",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"src": "8968:32:37",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"id": 2610,
																	"nodeType": "IfStatement",
																	"src": "8964:103:37",
																	"trueBody": {
																		"errorCall": {
																			"arguments": [],
																			"expression": {
																				"argumentTypes": [],
																				"id": 2607,
																				"name": "DiamondWritable__SelectorIsImmutable",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2730,
																				"src": "9029:36:37",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$__$returns$__$",
																					"typeString": "function () pure"
																				}
																			},
																			"id": 2608,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "9029:38:37",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 2609,
																		"nodeType": "RevertStatement",
																		"src": "9022:45:37"
																	}
																},
																{
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		"id": 2614,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2611,
																			"name": "oldFacetAddress",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2582,
																			"src": "9089:15:37",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"expression": {
																				"id": 2612,
																				"name": "facetCut",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2544,
																				"src": "9108:8:37",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_FacetCut_$478_memory_ptr",
																					"typeString": "struct IERC2535DiamondCutInternal.FacetCut memory"
																				}
																			},
																			"id": 2613,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "9117:6:37",
																			"memberName": "target",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 471,
																			"src": "9108:15:37",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"src": "9089:34:37",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"id": 2618,
																	"nodeType": "IfStatement",
																	"src": "9085:110:37",
																	"trueBody": {
																		"errorCall": {
																			"arguments": [],
																			"expression": {
																				"argumentTypes": [],
																				"id": 2615,
																				"name": "DiamondWritable__ReplaceTargetIsIdentical",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2726,
																				"src": "9152:41:37",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$__$returns$__$",
																					"typeString": "function () pure"
																				}
																			},
																			"id": 2616,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "9152:43:37",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 2617,
																		"nodeType": "RevertStatement",
																		"src": "9145:50:37"
																	}
																},
																{
																	"expression": {
																		"id": 2634,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"expression": {
																					"id": 2619,
																					"name": "l",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2541,
																					"src": "9259:1:37",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_Layout_$1093_storage_ptr",
																						"typeString": "struct DiamondBaseStorage.Layout storage pointer"
																					}
																				},
																				"id": 2622,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "9261:6:37",
																				"memberName": "facets",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 1084,
																				"src": "9259:8:37",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_bytes4_$_t_bytes32_$",
																					"typeString": "mapping(bytes4 => bytes32)"
																				}
																			},
																			"id": 2623,
																			"indexExpression": {
																				"id": 2621,
																				"name": "selector",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2568,
																				"src": "9268:8:37",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes4",
																					"typeString": "bytes4"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "9259:18:37",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes32",
																				"typeString": "bytes32"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_bytes32",
																				"typeString": "bytes32"
																			},
																			"id": 2633,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"components": [
																					{
																						"commonType": {
																							"typeIdentifier": "t_bytes32",
																							"typeString": "bytes32"
																						},
																						"id": 2626,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftExpression": {
																							"id": 2624,
																							"name": "oldFacet",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 2575,
																							"src": "9301:8:37",
																							"typeDescriptions": {
																								"typeIdentifier": "t_bytes32",
																								"typeString": "bytes32"
																							}
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "&",
																						"rightExpression": {
																							"id": 2625,
																							"name": "CLEAR_ADDRESS_MASK",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1904,
																							"src": "9312:18:37",
																							"typeDescriptions": {
																								"typeIdentifier": "t_bytes32",
																								"typeString": "bytes32"
																							}
																						},
																						"src": "9301:29:37",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes32",
																							"typeString": "bytes32"
																						}
																					}
																				],
																				"id": 2627,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "9300:31:37",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "|",
																			"rightExpression": {
																				"arguments": [
																					{
																						"expression": {
																							"id": 2630,
																							"name": "facetCut",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 2544,
																							"src": "9362:8:37",
																							"typeDescriptions": {
																								"typeIdentifier": "t_struct$_FacetCut_$478_memory_ptr",
																								"typeString": "struct IERC2535DiamondCutInternal.FacetCut memory"
																							}
																						},
																						"id": 2631,
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberLocation": "9371:6:37",
																						"memberName": "target",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 471,
																						"src": "9362:15:37",
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					],
																					"id": 2629,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "9354:7:37",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_bytes20_$",
																						"typeString": "type(bytes20)"
																					},
																					"typeName": {
																						"id": 2628,
																						"name": "bytes20",
																						"nodeType": "ElementaryTypeName",
																						"src": "9354:7:37",
																						"typeDescriptions": {}
																					}
																				},
																				"id": 2632,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "9354:24:37",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes20",
																					"typeString": "bytes20"
																				}
																			},
																			"src": "9300:78:37",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes32",
																				"typeString": "bytes32"
																			}
																		},
																		"src": "9259:119:37",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	"id": 2635,
																	"nodeType": "ExpressionStatement",
																	"src": "9259:119:37"
																}
															]
														},
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2563,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2559,
																"name": "i",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2557,
																"src": "8612:1:37",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"expression": {
																	"expression": {
																		"id": 2560,
																		"name": "facetCut",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2544,
																		"src": "8616:8:37",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_FacetCut_$478_memory_ptr",
																			"typeString": "struct IERC2535DiamondCutInternal.FacetCut memory"
																		}
																	},
																	"id": 2561,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "8625:9:37",
																	"memberName": "selectors",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 477,
																	"src": "8616:18:37",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_bytes4_$dyn_memory_ptr",
																		"typeString": "bytes4[] memory"
																	}
																},
																"id": 2562,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "8635:6:37",
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "8616:25:37",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "8612:29:37",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2637,
														"initializationExpression": {
															"assignments": [
																2557
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 2557,
																	"mutability": "mutable",
																	"name": "i",
																	"nameLocation": "8609:1:37",
																	"nodeType": "VariableDeclaration",
																	"scope": 2637,
																	"src": "8601:9:37",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 2556,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "8601:7:37",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 2558,
															"nodeType": "VariableDeclarationStatement",
															"src": "8601:9:37"
														},
														"isSimpleCounterLoop": true,
														"loopExpression": {
															"expression": {
																"id": 2565,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "++",
																"prefix": false,
																"src": "8643:3:37",
																"subExpression": {
																	"id": 2564,
																	"name": "i",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2557,
																	"src": "8643:1:37",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2566,
															"nodeType": "ExpressionStatement",
															"src": "8643:3:37"
														},
														"nodeType": "ForStatement",
														"src": "8596:797:37"
													}
												]
											}
										]
									},
									"id": 2640,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_replaceFacetSelectors",
									"nameLocation": "8338:22:37",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2545,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2541,
												"mutability": "mutable",
												"name": "l",
												"nameLocation": "8404:1:37",
												"nodeType": "VariableDeclaration",
												"scope": 2640,
												"src": "8370:35:37",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Layout_$1093_storage_ptr",
													"typeString": "struct DiamondBaseStorage.Layout"
												},
												"typeName": {
													"id": 2540,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2539,
														"name": "DiamondBaseStorage.Layout",
														"nameLocations": [
															"8370:18:37",
															"8389:6:37"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1093,
														"src": "8370:25:37"
													},
													"referencedDeclaration": 1093,
													"src": "8370:25:37",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Layout_$1093_storage_ptr",
														"typeString": "struct DiamondBaseStorage.Layout"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2544,
												"mutability": "mutable",
												"name": "facetCut",
												"nameLocation": "8431:8:37",
												"nodeType": "VariableDeclaration",
												"scope": 2640,
												"src": "8415:24:37",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_FacetCut_$478_memory_ptr",
													"typeString": "struct IERC2535DiamondCutInternal.FacetCut"
												},
												"typeName": {
													"id": 2543,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2542,
														"name": "FacetCut",
														"nameLocations": [
															"8415:8:37"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 478,
														"src": "8415:8:37"
													},
													"referencedDeclaration": 478,
													"src": "8415:8:37",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_FacetCut_$478_storage_ptr",
														"typeString": "struct IERC2535DiamondCutInternal.FacetCut"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8360:85:37"
									},
									"returnParameters": {
										"id": 2546,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8455:0:37"
									},
									"scope": 2702,
									"src": "8329:1080:37",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2700,
										"nodeType": "Block",
										"src": "9479:599:37",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 2659,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 2652,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2647,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2642,
																	"src": "9494:6:37",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"arguments": [
																		{
																			"hexValue": "30",
																			"id": 2650,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9512:1:37",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			}
																		],
																		"id": 2649,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "9504:7:37",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 2648,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "9504:7:37",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 2651,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "9504:10:37",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "9494:20:37",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															}
														],
														"id": 2653,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "9493:22:37",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2657,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 2654,
																		"name": "data",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2644,
																		"src": "9520:4:37",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 2655,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "9525:6:37",
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"src": "9520:11:37",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 2656,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9535:1:37",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "9520:16:37",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															}
														],
														"id": 2658,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "9519:18:37",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "9493:44:37",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2663,
												"nodeType": "IfStatement",
												"src": "9489:119:37",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 2660,
															"name": "DiamondWritable__InvalidInitializationParameters",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2722,
															"src": "9558:48:37",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$__$",
																"typeString": "function () pure"
															}
														},
														"id": 2661,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9558:50:37",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 2662,
													"nodeType": "RevertStatement",
													"src": "9551:57:37"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 2669,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2664,
														"name": "target",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2642,
														"src": "9623:6:37",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 2667,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9641:1:37",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 2666,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "9633:7:37",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 2665,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "9633:7:37",
																"typeDescriptions": {}
															}
														},
														"id": 2668,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9633:10:37",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9623:20:37",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2699,
												"nodeType": "IfStatement",
												"src": "9619:453:37",
												"trueBody": {
													"id": 2698,
													"nodeType": "Block",
													"src": "9645:427:37",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 2675,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2670,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2642,
																	"src": "9663:6:37",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "!=",
																"rightExpression": {
																	"arguments": [
																		{
																			"id": 2673,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "9681:4:37",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_DiamondWritableInternal_$2702",
																				"typeString": "contract DiamondWritableInternal"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_DiamondWritableInternal_$2702",
																				"typeString": "contract DiamondWritableInternal"
																			}
																		],
																		"id": 2672,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "9673:7:37",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 2671,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "9673:7:37",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 2674,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "9673:13:37",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "9663:23:37",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 2685,
															"nodeType": "IfStatement",
															"src": "9659:149:37",
															"trueBody": {
																"id": 2684,
																"nodeType": "Block",
																"src": "9688:120:37",
																"statements": [
																	{
																		"condition": {
																			"id": 2679,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "UnaryOperation",
																			"operator": "!",
																			"prefix": true,
																			"src": "9710:20:37",
																			"subExpression": {
																				"arguments": [],
																				"expression": {
																					"argumentTypes": [],
																					"expression": {
																						"id": 2676,
																						"name": "target",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2642,
																						"src": "9711:6:37",
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					},
																					"id": 2677,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberLocation": "9718:10:37",
																					"memberName": "isContract",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 2785,
																					"src": "9711:17:37",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$attached_to$_t_address_$",
																						"typeString": "function (address) view returns (bool)"
																					}
																				},
																				"id": 2678,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "9711:19:37",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"id": 2683,
																		"nodeType": "IfStatement",
																		"src": "9706:87:37",
																		"trueBody": {
																			"errorCall": {
																				"arguments": [],
																				"expression": {
																					"argumentTypes": [],
																					"id": 2680,
																					"name": "DiamondWritable__TargetHasNoCode",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2736,
																					"src": "9759:32:37",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_error_pure$__$returns$__$",
																						"typeString": "function () pure"
																					}
																				},
																				"id": 2681,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "9759:34:37",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_tuple$__$",
																					"typeString": "tuple()"
																				}
																			},
																			"id": 2682,
																			"nodeType": "RevertStatement",
																			"src": "9752:41:37"
																		}
																	}
																]
															}
														},
														{
															"assignments": [
																2687,
																null
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 2687,
																	"mutability": "mutable",
																	"name": "success",
																	"nameLocation": "9828:7:37",
																	"nodeType": "VariableDeclaration",
																	"scope": 2698,
																	"src": "9823:12:37",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"typeName": {
																		"id": 2686,
																		"name": "bool",
																		"nodeType": "ElementaryTypeName",
																		"src": "9823:4:37",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"visibility": "internal"
																},
																null
															],
															"id": 2692,
															"initialValue": {
																"arguments": [
																	{
																		"id": 2690,
																		"name": "data",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2644,
																		"src": "9861:4:37",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"expression": {
																		"id": 2688,
																		"name": "target",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2642,
																		"src": "9841:6:37",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"id": 2689,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "9848:12:37",
																	"memberName": "delegatecall",
																	"nodeType": "MemberAccess",
																	"src": "9841:19:37",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																		"typeString": "function (bytes memory) returns (bool,bytes memory)"
																	}
																},
																"id": 2691,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9841:25:37",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
																	"typeString": "tuple(bool,bytes memory)"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "9822:44:37"
														},
														{
															"condition": {
																"id": 2694,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "!",
																"prefix": true,
																"src": "9885:8:37",
																"subExpression": {
																	"id": 2693,
																	"name": "success",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2687,
																	"src": "9886:7:37",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 2697,
															"nodeType": "IfStatement",
															"src": "9881:181:37",
															"trueBody": {
																"id": 2696,
																"nodeType": "Block",
																"src": "9895:167:37",
																"statements": [
																	{
																		"AST": {
																			"nativeSrc": "9922:126:37",
																			"nodeType": "YulBlock",
																			"src": "9922:126:37",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "9959:1:37",
																								"nodeType": "YulLiteral",
																								"src": "9959:1:37",
																								"type": "",
																								"value": "0"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "9962:1:37",
																								"nodeType": "YulLiteral",
																								"src": "9962:1:37",
																								"type": "",
																								"value": "0"
																							},
																							{
																								"arguments": [],
																								"functionName": {
																									"name": "returndatasize",
																									"nativeSrc": "9965:14:37",
																									"nodeType": "YulIdentifier",
																									"src": "9965:14:37"
																								},
																								"nativeSrc": "9965:16:37",
																								"nodeType": "YulFunctionCall",
																								"src": "9965:16:37"
																							}
																						],
																						"functionName": {
																							"name": "returndatacopy",
																							"nativeSrc": "9944:14:37",
																							"nodeType": "YulIdentifier",
																							"src": "9944:14:37"
																						},
																						"nativeSrc": "9944:38:37",
																						"nodeType": "YulFunctionCall",
																						"src": "9944:38:37"
																					},
																					"nativeSrc": "9944:38:37",
																					"nodeType": "YulExpressionStatement",
																					"src": "9944:38:37"
																				},
																				{
																					"expression": {
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "10010:1:37",
																								"nodeType": "YulLiteral",
																								"src": "10010:1:37",
																								"type": "",
																								"value": "0"
																							},
																							{
																								"arguments": [],
																								"functionName": {
																									"name": "returndatasize",
																									"nativeSrc": "10013:14:37",
																									"nodeType": "YulIdentifier",
																									"src": "10013:14:37"
																								},
																								"nativeSrc": "10013:16:37",
																								"nodeType": "YulFunctionCall",
																								"src": "10013:16:37"
																							}
																						],
																						"functionName": {
																							"name": "revert",
																							"nativeSrc": "10003:6:37",
																							"nodeType": "YulIdentifier",
																							"src": "10003:6:37"
																						},
																						"nativeSrc": "10003:27:37",
																						"nodeType": "YulFunctionCall",
																						"src": "10003:27:37"
																					},
																					"nativeSrc": "10003:27:37",
																					"nodeType": "YulExpressionStatement",
																					"src": "10003:27:37"
																				}
																			]
																		},
																		"evmVersion": "shanghai",
																		"externalReferences": [],
																		"id": 2695,
																		"nodeType": "InlineAssembly",
																		"src": "9913:135:37"
																	}
																]
															}
														}
													]
												}
											}
										]
									},
									"id": 2701,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_initialize",
									"nameLocation": "9424:11:37",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2645,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2642,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "9444:6:37",
												"nodeType": "VariableDeclaration",
												"scope": 2701,
												"src": "9436:14:37",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2641,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9436:7:37",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2644,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "9465:4:37",
												"nodeType": "VariableDeclaration",
												"scope": 2701,
												"src": "9452:17:37",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2643,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "9452:5:37",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9435:35:37"
									},
									"returnParameters": {
										"id": 2646,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9479:0:37"
									},
									"scope": 2702,
									"src": "9415:663:37",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 2703,
							"src": "268:9812:37",
							"usedErrors": [
								2722,
								2724,
								2726,
								2728,
								2730,
								2732,
								2734,
								2736
							],
							"usedEvents": [
								488
							]
						}
					],
					"src": "33:10048:37"
				},
				"id": 37
			},
			"@solidstate/contracts/proxy/diamond/writable/IDiamondWritable.sol": {
				"ast": {
					"absolutePath": "@solidstate/contracts/proxy/diamond/writable/IDiamondWritable.sol",
					"exportedSymbols": {
						"IDiamondWritable": [
							2714
						],
						"IDiamondWritableInternal": [
							2737
						],
						"IERC2535DiamondCut": [
							462
						]
					},
					"id": 2715,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2704,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".18"
							],
							"nodeType": "PragmaDirective",
							"src": "33:24:38"
						},
						{
							"absolutePath": "@solidstate/contracts/interfaces/IERC2535DiamondCut.sol",
							"file": "../../../interfaces/IERC2535DiamondCut.sol",
							"id": 2706,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2715,
							"sourceUnit": 463,
							"src": "59:80:38",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2705,
										"name": "IERC2535DiamondCut",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 462,
										"src": "68:18:38",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@solidstate/contracts/proxy/diamond/writable/IDiamondWritableInternal.sol",
							"file": "./IDiamondWritableInternal.sol",
							"id": 2708,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2715,
							"sourceUnit": 2738,
							"src": "140:74:38",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2707,
										"name": "IDiamondWritableInternal",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 2737,
										"src": "149:24:38",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 2710,
										"name": "IERC2535DiamondCut",
										"nameLocations": [
											"348:18:38"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 462,
										"src": "348:18:38"
									},
									"id": 2711,
									"nodeType": "InheritanceSpecifier",
									"src": "348:18:38"
								},
								{
									"baseName": {
										"id": 2712,
										"name": "IDiamondWritableInternal",
										"nameLocations": [
											"368:24:38"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2737,
										"src": "368:24:38"
									},
									"id": 2713,
									"nodeType": "InheritanceSpecifier",
									"src": "368:24:38"
								}
							],
							"canonicalName": "IDiamondWritable",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 2709,
								"nodeType": "StructuredDocumentation",
								"src": "216:101:38",
								"text": " @title Diamond proxy upgrade interface\n @dev see https://eips.ethereum.org/EIPS/eip-2535"
							},
							"fullyImplemented": false,
							"id": 2714,
							"linearizedBaseContracts": [
								2714,
								2737,
								462,
								489
							],
							"name": "IDiamondWritable",
							"nameLocation": "328:16:38",
							"nodeType": "ContractDefinition",
							"nodes": [],
							"scope": 2715,
							"src": "318:79:38",
							"usedErrors": [
								2722,
								2724,
								2726,
								2728,
								2730,
								2732,
								2734,
								2736
							],
							"usedEvents": [
								488
							]
						}
					],
					"src": "33:365:38"
				},
				"id": 38
			},
			"@solidstate/contracts/proxy/diamond/writable/IDiamondWritableInternal.sol": {
				"ast": {
					"absolutePath": "@solidstate/contracts/proxy/diamond/writable/IDiamondWritableInternal.sol",
					"exportedSymbols": {
						"IDiamondWritableInternal": [
							2737
						],
						"IERC2535DiamondCutInternal": [
							489
						]
					},
					"id": 2738,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2716,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".18"
							],
							"nodeType": "PragmaDirective",
							"src": "33:24:39"
						},
						{
							"absolutePath": "@solidstate/contracts/interfaces/IERC2535DiamondCutInternal.sol",
							"file": "../../../interfaces/IERC2535DiamondCutInternal.sol",
							"id": 2718,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2738,
							"sourceUnit": 490,
							"src": "59:96:39",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2717,
										"name": "IERC2535DiamondCutInternal",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 489,
										"src": "68:26:39",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 2719,
										"name": "IERC2535DiamondCutInternal",
										"nameLocations": [
											"195:26:39"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 489,
										"src": "195:26:39"
									},
									"id": 2720,
									"nodeType": "InheritanceSpecifier",
									"src": "195:26:39"
								}
							],
							"canonicalName": "IDiamondWritableInternal",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": true,
							"id": 2737,
							"linearizedBaseContracts": [
								2737,
								489
							],
							"name": "IDiamondWritableInternal",
							"nameLocation": "167:24:39",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"errorSelector": "26df4ccd",
									"id": 2722,
									"name": "DiamondWritable__InvalidInitializationParameters",
									"nameLocation": "234:48:39",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 2721,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "282:2:39"
									},
									"src": "228:57:39"
								},
								{
									"errorSelector": "eacd2424",
									"id": 2724,
									"name": "DiamondWritable__RemoveTargetNotZeroAddress",
									"nameLocation": "296:43:39",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 2723,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "339:2:39"
									},
									"src": "290:52:39"
								},
								{
									"errorSelector": "617557e6",
									"id": 2726,
									"name": "DiamondWritable__ReplaceTargetIsIdentical",
									"nameLocation": "353:41:39",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 2725,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "394:2:39"
									},
									"src": "347:50:39"
								},
								{
									"errorSelector": "92474ee2",
									"id": 2728,
									"name": "DiamondWritable__SelectorAlreadyAdded",
									"nameLocation": "408:37:39",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 2727,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "445:2:39"
									},
									"src": "402:46:39"
								},
								{
									"errorSelector": "e9835731",
									"id": 2730,
									"name": "DiamondWritable__SelectorIsImmutable",
									"nameLocation": "459:36:39",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 2729,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "495:2:39"
									},
									"src": "453:45:39"
								},
								{
									"errorSelector": "6fc4b52e",
									"id": 2732,
									"name": "DiamondWritable__SelectorNotFound",
									"nameLocation": "509:33:39",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 2731,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "542:2:39"
									},
									"src": "503:42:39"
								},
								{
									"errorSelector": "eb6c3aeb",
									"id": 2734,
									"name": "DiamondWritable__SelectorNotSpecified",
									"nameLocation": "556:37:39",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 2733,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "593:2:39"
									},
									"src": "550:46:39"
								},
								{
									"errorSelector": "f77172ac",
									"id": 2736,
									"name": "DiamondWritable__TargetHasNoCode",
									"nameLocation": "607:32:39",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 2735,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "639:2:39"
									},
									"src": "601:41:39"
								}
							],
							"scope": 2738,
							"src": "157:487:39",
							"usedErrors": [
								2722,
								2724,
								2726,
								2728,
								2730,
								2732,
								2734,
								2736
							],
							"usedEvents": [
								488
							]
						}
					],
					"src": "33:612:39"
				},
				"id": 39
			},
			"@solidstate/contracts/utils/AddressUtils.sol": {
				"ast": {
					"absolutePath": "@solidstate/contracts/utils/AddressUtils.sol",
					"exportedSymbols": {
						"AddressUtils": [
							2972
						],
						"UintUtils": [
							3536
						]
					},
					"id": 2973,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2739,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".18"
							],
							"nodeType": "PragmaDirective",
							"src": "33:24:40"
						},
						{
							"absolutePath": "@solidstate/contracts/utils/UintUtils.sol",
							"file": "./UintUtils.sol",
							"id": 2741,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2973,
							"sourceUnit": 3537,
							"src": "59:44:40",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2740,
										"name": "UintUtils",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 3536,
										"src": "68:9:40",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "AddressUtils",
							"contractDependencies": [],
							"contractKind": "library",
							"fullyImplemented": true,
							"id": 2972,
							"linearizedBaseContracts": [
								2972
							],
							"name": "AddressUtils",
							"nameLocation": "113:12:40",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 2744,
									"libraryName": {
										"id": 2742,
										"name": "UintUtils",
										"nameLocations": [
											"138:9:40"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 3536,
										"src": "138:9:40"
									},
									"nodeType": "UsingForDirective",
									"src": "132:28:40",
									"typeName": {
										"id": 2743,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "152:7:40",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"errorSelector": "c052e61b",
									"id": 2746,
									"name": "AddressUtils__InsufficientBalance",
									"nameLocation": "172:33:40",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 2745,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "205:2:40"
									},
									"src": "166:42:40"
								},
								{
									"errorSelector": "89c35afc",
									"id": 2748,
									"name": "AddressUtils__NotContract",
									"nameLocation": "219:25:40",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 2747,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "244:2:40"
									},
									"src": "213:34:40"
								},
								{
									"errorSelector": "c6d73c55",
									"id": 2750,
									"name": "AddressUtils__SendValueFailed",
									"nameLocation": "258:29:40",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 2749,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "287:2:40"
									},
									"src": "252:38:40"
								},
								{
									"body": {
										"id": 2768,
										"nodeType": "Block",
										"src": "369:65:40",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"hexValue": "3230",
															"id": 2765,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "424:2:40",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_20_by_1",
																"typeString": "int_const 20"
															},
															"value": "20"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_rational_20_by_1",
																"typeString": "int_const 20"
															}
														],
														"expression": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 2761,
																			"name": "account",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2752,
																			"src": "402:7:40",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 2760,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "394:7:40",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint160_$",
																			"typeString": "type(uint160)"
																		},
																		"typeName": {
																			"id": 2759,
																			"name": "uint160",
																			"nodeType": "ElementaryTypeName",
																			"src": "394:7:40",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 2762,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "394:16:40",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																],
																"id": 2758,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "386:7:40",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint256_$",
																	"typeString": "type(uint256)"
																},
																"typeName": {
																	"id": 2757,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "386:7:40",
																	"typeDescriptions": {}
																}
															},
															"id": 2763,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "386:25:40",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2764,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "412:11:40",
														"memberName": "toHexString",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 3535,
														"src": "386:37:40",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$attached_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (string memory)"
														}
													},
													"id": 2766,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "386:41:40",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 2756,
												"id": 2767,
												"nodeType": "Return",
												"src": "379:48:40"
											}
										]
									},
									"id": 2769,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toString",
									"nameLocation": "305:8:40",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2753,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2752,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "322:7:40",
												"nodeType": "VariableDeclaration",
												"scope": 2769,
												"src": "314:15:40",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2751,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "314:7:40",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "313:17:40"
									},
									"returnParameters": {
										"id": 2756,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2755,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2769,
												"src": "354:13:40",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2754,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "354:6:40",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "353:15:40"
									},
									"scope": 2972,
									"src": "296:138:40",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2784,
										"nodeType": "Block",
										"src": "506:124:40",
										"statements": [
											{
												"assignments": [
													2777
												],
												"declarations": [
													{
														"constant": false,
														"id": 2777,
														"mutability": "mutable",
														"name": "size",
														"nameLocation": "524:4:40",
														"nodeType": "VariableDeclaration",
														"scope": 2784,
														"src": "516:12:40",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2776,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "516:7:40",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2778,
												"nodeType": "VariableDeclarationStatement",
												"src": "516:12:40"
											},
											{
												"AST": {
													"nativeSrc": "547:52:40",
													"nodeType": "YulBlock",
													"src": "547:52:40",
													"statements": [
														{
															"nativeSrc": "561:28:40",
															"nodeType": "YulAssignment",
															"src": "561:28:40",
															"value": {
																"arguments": [
																	{
																		"name": "account",
																		"nativeSrc": "581:7:40",
																		"nodeType": "YulIdentifier",
																		"src": "581:7:40"
																	}
																],
																"functionName": {
																	"name": "extcodesize",
																	"nativeSrc": "569:11:40",
																	"nodeType": "YulIdentifier",
																	"src": "569:11:40"
																},
																"nativeSrc": "569:20:40",
																"nodeType": "YulFunctionCall",
																"src": "569:20:40"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "561:4:40",
																	"nodeType": "YulIdentifier",
																	"src": "561:4:40"
																}
															]
														}
													]
												},
												"evmVersion": "shanghai",
												"externalReferences": [
													{
														"declaration": 2771,
														"isOffset": false,
														"isSlot": false,
														"src": "581:7:40",
														"valueSize": 1
													},
													{
														"declaration": 2777,
														"isOffset": false,
														"isSlot": false,
														"src": "561:4:40",
														"valueSize": 1
													}
												],
												"id": 2779,
												"nodeType": "InlineAssembly",
												"src": "538:61:40"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2782,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2780,
														"name": "size",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2777,
														"src": "615:4:40",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 2781,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "622:1:40",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "615:8:40",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 2775,
												"id": 2783,
												"nodeType": "Return",
												"src": "608:15:40"
											}
										]
									},
									"id": 2785,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isContract",
									"nameLocation": "449:10:40",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2772,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2771,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "468:7:40",
												"nodeType": "VariableDeclaration",
												"scope": 2785,
												"src": "460:15:40",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2770,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "460:7:40",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "459:17:40"
									},
									"returnParameters": {
										"id": 2775,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2774,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2785,
												"src": "500:4:40",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2773,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "500:4:40",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "499:6:40"
									},
									"scope": 2972,
									"src": "440:190:40",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2807,
										"nodeType": "Block",
										"src": "705:131:40",
										"statements": [
											{
												"assignments": [
													2793,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 2793,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "721:7:40",
														"nodeType": "VariableDeclaration",
														"scope": 2807,
														"src": "716:12:40",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 2792,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "716:4:40",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 2800,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "",
															"id": 2798,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "764:2:40",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																}
															],
															"expression": {
																"id": 2794,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2787,
																"src": "734:7:40",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"id": 2795,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "742:4:40",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "734:12:40",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 2797,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 2796,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2789,
																"src": "755:6:40",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "734:29:40",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 2799,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "734:33:40",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "715:52:40"
											},
											{
												"condition": {
													"id": 2802,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "781:8:40",
													"subExpression": {
														"id": 2801,
														"name": "success",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2793,
														"src": "782:7:40",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2806,
												"nodeType": "IfStatement",
												"src": "777:52:40",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 2803,
															"name": "AddressUtils__SendValueFailed",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2750,
															"src": "798:29:40",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$__$",
																"typeString": "function () pure"
															}
														},
														"id": 2804,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "798:31:40",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 2805,
													"nodeType": "RevertStatement",
													"src": "791:38:40"
												}
											}
										]
									},
									"id": 2808,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sendValue",
									"nameLocation": "645:9:40",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2790,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2787,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "671:7:40",
												"nodeType": "VariableDeclaration",
												"scope": 2808,
												"src": "655:23:40",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 2786,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "655:15:40",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2789,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "688:6:40",
												"nodeType": "VariableDeclaration",
												"scope": 2808,
												"src": "680:14:40",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2788,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "680:7:40",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "654:41:40"
									},
									"returnParameters": {
										"id": 2791,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "705:0:40"
									},
									"scope": 2972,
									"src": "636:200:40",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2823,
										"nodeType": "Block",
										"src": "953:101:40",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 2818,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2810,
															"src": "995:6:40",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2819,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2812,
															"src": "1003:4:40",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573735574696c733a206661696c6564206c6f772d6c6576656c2063616c6c",
															"id": 2820,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1009:37:40",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_dae25c1f019b3273f9c6ea856b2a45ee931999c1d16716360c90f15d590c498a",
																"typeString": "literal_string \"AddressUtils: failed low-level call\""
															},
															"value": "AddressUtils: failed low-level call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_dae25c1f019b3273f9c6ea856b2a45ee931999c1d16716360c90f15d590c498a",
																"typeString": "literal_string \"AddressUtils: failed low-level call\""
															}
														],
														"id": 2817,
														"name": "functionCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															2824,
															2843
														],
														"referencedDeclaration": 2843,
														"src": "982:12:40",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 2821,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "982:65:40",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 2816,
												"id": 2822,
												"nodeType": "Return",
												"src": "963:84:40"
											}
										]
									},
									"id": 2824,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "851:12:40",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2813,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2810,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "881:6:40",
												"nodeType": "VariableDeclaration",
												"scope": 2824,
												"src": "873:14:40",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2809,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "873:7:40",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2812,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "910:4:40",
												"nodeType": "VariableDeclaration",
												"scope": 2824,
												"src": "897:17:40",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2811,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "897:5:40",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "863:57:40"
									},
									"returnParameters": {
										"id": 2816,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2815,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2824,
												"src": "939:12:40",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2814,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "939:5:40",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "938:14:40"
									},
									"scope": 2972,
									"src": "842:212:40",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2842,
										"nodeType": "Block",
										"src": "1200:70:40",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 2836,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2826,
															"src": "1240:6:40",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2837,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2828,
															"src": "1248:4:40",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "30",
															"id": 2838,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1254:1:40",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"id": 2839,
															"name": "error",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2830,
															"src": "1257:5:40",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 2835,
														"name": "_functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2971,
														"src": "1217:22:40",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 2840,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1217:46:40",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 2834,
												"id": 2841,
												"nodeType": "Return",
												"src": "1210:53:40"
											}
										]
									},
									"id": 2843,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "1069:12:40",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2831,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2826,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "1099:6:40",
												"nodeType": "VariableDeclaration",
												"scope": 2843,
												"src": "1091:14:40",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2825,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1091:7:40",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2828,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "1128:4:40",
												"nodeType": "VariableDeclaration",
												"scope": 2843,
												"src": "1115:17:40",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2827,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1115:5:40",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2830,
												"mutability": "mutable",
												"name": "error",
												"nameLocation": "1156:5:40",
												"nodeType": "VariableDeclaration",
												"scope": 2843,
												"src": "1142:19:40",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2829,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1142:6:40",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1081:86:40"
									},
									"returnParameters": {
										"id": 2834,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2833,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2843,
												"src": "1186:12:40",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2832,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1186:5:40",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1185:14:40"
									},
									"scope": 2972,
									"src": "1060:210:40",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2861,
										"nodeType": "Block",
										"src": "1419:206:40",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 2855,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2845,
															"src": "1487:6:40",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2856,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2847,
															"src": "1511:4:40",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 2857,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2849,
															"src": "1533:5:40",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "416464726573735574696c733a206661696c6564206c6f772d6c6576656c2063616c6c20776974682076616c7565",
															"id": 2858,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1556:48:40",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_1dea7c3fcc3c03e4612572a7c41d135b6cbe510cf8448d3bf0e1a7f9f2312157",
																"typeString": "literal_string \"AddressUtils: failed low-level call with value\""
															},
															"value": "AddressUtils: failed low-level call with value"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_1dea7c3fcc3c03e4612572a7c41d135b6cbe510cf8448d3bf0e1a7f9f2312157",
																"typeString": "literal_string \"AddressUtils: failed low-level call with value\""
															}
														],
														"id": 2854,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															2862,
															2894
														],
														"referencedDeclaration": 2894,
														"src": "1448:21:40",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 2859,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1448:170:40",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 2853,
												"id": 2860,
												"nodeType": "Return",
												"src": "1429:189:40"
											}
										]
									},
									"id": 2862,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "1285:21:40",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2850,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2845,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "1324:6:40",
												"nodeType": "VariableDeclaration",
												"scope": 2862,
												"src": "1316:14:40",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2844,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1316:7:40",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2847,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "1353:4:40",
												"nodeType": "VariableDeclaration",
												"scope": 2862,
												"src": "1340:17:40",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2846,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1340:5:40",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2849,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1375:5:40",
												"nodeType": "VariableDeclaration",
												"scope": 2862,
												"src": "1367:13:40",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2848,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1367:7:40",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1306:80:40"
									},
									"returnParameters": {
										"id": 2853,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2852,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2862,
												"src": "1405:12:40",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2851,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1405:5:40",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1404:14:40"
									},
									"scope": 2972,
									"src": "1276:349:40",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2893,
										"nodeType": "Block",
										"src": "1803:173:40",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2881,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2875,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2868,
														"src": "1817:5:40",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 2878,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "1833:4:40",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_AddressUtils_$2972",
																		"typeString": "library AddressUtils"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_AddressUtils_$2972",
																		"typeString": "library AddressUtils"
																	}
																],
																"id": 2877,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1825:7:40",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 2876,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1825:7:40",
																	"typeDescriptions": {}
																}
															},
															"id": 2879,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1825:13:40",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 2880,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1839:7:40",
														"memberName": "balance",
														"nodeType": "MemberAccess",
														"src": "1825:21:40",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1817:29:40",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2885,
												"nodeType": "IfStatement",
												"src": "1813:89:40",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 2882,
															"name": "AddressUtils__InsufficientBalance",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2746,
															"src": "1867:33:40",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$__$",
																"typeString": "function () pure"
															}
														},
														"id": 2883,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1867:35:40",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 2884,
													"nodeType": "RevertStatement",
													"src": "1860:42:40"
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2887,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2864,
															"src": "1942:6:40",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2888,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2866,
															"src": "1950:4:40",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 2889,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2868,
															"src": "1956:5:40",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2890,
															"name": "error",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2870,
															"src": "1963:5:40",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 2886,
														"name": "_functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2971,
														"src": "1919:22:40",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 2891,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1919:50:40",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 2874,
												"id": 2892,
												"nodeType": "Return",
												"src": "1912:57:40"
											}
										]
									},
									"id": 2894,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "1640:21:40",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2871,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2864,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "1679:6:40",
												"nodeType": "VariableDeclaration",
												"scope": 2894,
												"src": "1671:14:40",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2863,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1671:7:40",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2866,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "1708:4:40",
												"nodeType": "VariableDeclaration",
												"scope": 2894,
												"src": "1695:17:40",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2865,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1695:5:40",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2868,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1730:5:40",
												"nodeType": "VariableDeclaration",
												"scope": 2894,
												"src": "1722:13:40",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2867,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1722:7:40",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2870,
												"mutability": "mutable",
												"name": "error",
												"nameLocation": "1759:5:40",
												"nodeType": "VariableDeclaration",
												"scope": 2894,
												"src": "1745:19:40",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2869,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1745:6:40",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1661:109:40"
									},
									"returnParameters": {
										"id": 2874,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2873,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2894,
												"src": "1789:12:40",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2872,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1789:5:40",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1788:14:40"
									},
									"scope": 2972,
									"src": "1631:345:40",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2920,
										"nodeType": "Block",
										"src": "2753:791:40",
										"statements": [
											{
												"expression": {
													"id": 2917,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2912,
														"name": "returnData",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2910,
														"src": "2763:10:40",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes memory"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 2915,
																"name": "maxCopy",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2903,
																"src": "2786:7:40",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint16",
																	"typeString": "uint16"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint16",
																	"typeString": "uint16"
																}
															],
															"id": 2914,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "NewExpression",
															"src": "2776:9:40",
															"typeDescriptions": {
																"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$",
																"typeString": "function (uint256) pure returns (bytes memory)"
															},
															"typeName": {
																"id": 2913,
																"name": "bytes",
																"nodeType": "ElementaryTypeName",
																"src": "2780:5:40",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_storage_ptr",
																	"typeString": "bytes"
																}
															}
														},
														"id": 2916,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2776:18:40",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes memory"
														}
													},
													"src": "2763:31:40",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"id": 2918,
												"nodeType": "ExpressionStatement",
												"src": "2763:31:40"
											},
											{
												"AST": {
													"nativeSrc": "2814:724:40",
													"nodeType": "YulBlock",
													"src": "2814:724:40",
													"statements": [
														{
															"nativeSrc": "2920:203:40",
															"nodeType": "YulAssignment",
															"src": "2920:203:40",
															"value": {
																"arguments": [
																	{
																		"name": "gasAmount",
																		"nativeSrc": "2953:9:40",
																		"nodeType": "YulIdentifier",
																		"src": "2953:9:40"
																	},
																	{
																		"name": "target",
																		"nativeSrc": "2980:6:40",
																		"nodeType": "YulIdentifier",
																		"src": "2980:6:40"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "3004:5:40",
																		"nodeType": "YulIdentifier",
																		"src": "3004:5:40"
																	},
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nativeSrc": "3031:4:40",
																				"nodeType": "YulIdentifier",
																				"src": "3031:4:40"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3037:4:40",
																				"nodeType": "YulLiteral",
																				"src": "3037:4:40",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3027:3:40",
																			"nodeType": "YulIdentifier",
																			"src": "3027:3:40"
																		},
																		"nativeSrc": "3027:15:40",
																		"nodeType": "YulFunctionCall",
																		"src": "3027:15:40"
																	},
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nativeSrc": "3066:4:40",
																				"nodeType": "YulIdentifier",
																				"src": "3066:4:40"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "3060:5:40",
																			"nodeType": "YulIdentifier",
																			"src": "3060:5:40"
																		},
																		"nativeSrc": "3060:11:40",
																		"nodeType": "YulFunctionCall",
																		"src": "3060:11:40"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3089:1:40",
																		"nodeType": "YulLiteral",
																		"src": "3089:1:40",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3108:1:40",
																		"nodeType": "YulLiteral",
																		"src": "3108:1:40",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "call",
																	"nativeSrc": "2931:4:40",
																	"nodeType": "YulIdentifier",
																	"src": "2931:4:40"
																},
																"nativeSrc": "2931:192:40",
																"nodeType": "YulFunctionCall",
																"src": "2931:192:40"
															},
															"variableNames": [
																{
																	"name": "success",
																	"nativeSrc": "2920:7:40",
																	"nodeType": "YulIdentifier",
																	"src": "2920:7:40"
																}
															]
														},
														{
															"nativeSrc": "3202:30:40",
															"nodeType": "YulVariableDeclaration",
															"src": "3202:30:40",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "returndatasize",
																	"nativeSrc": "3216:14:40",
																	"nodeType": "YulIdentifier",
																	"src": "3216:14:40"
																},
																"nativeSrc": "3216:16:40",
																"nodeType": "YulFunctionCall",
																"src": "3216:16:40"
															},
															"variables": [
																{
																	"name": "toCopy",
																	"nativeSrc": "3206:6:40",
																	"nodeType": "YulTypedName",
																	"src": "3206:6:40",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "3269:49:40",
																"nodeType": "YulBlock",
																"src": "3269:49:40",
																"statements": [
																	{
																		"nativeSrc": "3287:17:40",
																		"nodeType": "YulAssignment",
																		"src": "3287:17:40",
																		"value": {
																			"name": "maxCopy",
																			"nativeSrc": "3297:7:40",
																			"nodeType": "YulIdentifier",
																			"src": "3297:7:40"
																		},
																		"variableNames": [
																			{
																				"name": "toCopy",
																				"nativeSrc": "3287:6:40",
																				"nodeType": "YulIdentifier",
																				"src": "3287:6:40"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "toCopy",
																		"nativeSrc": "3252:6:40",
																		"nodeType": "YulIdentifier",
																		"src": "3252:6:40"
																	},
																	{
																		"name": "maxCopy",
																		"nativeSrc": "3260:7:40",
																		"nodeType": "YulIdentifier",
																		"src": "3260:7:40"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "3249:2:40",
																	"nodeType": "YulIdentifier",
																	"src": "3249:2:40"
																},
																"nativeSrc": "3249:19:40",
																"nodeType": "YulFunctionCall",
																"src": "3249:19:40"
															},
															"nativeSrc": "3246:72:40",
															"nodeType": "YulIf",
															"src": "3246:72:40"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "returnData",
																		"nativeSrc": "3391:10:40",
																		"nodeType": "YulIdentifier",
																		"src": "3391:10:40"
																	},
																	{
																		"name": "toCopy",
																		"nativeSrc": "3403:6:40",
																		"nodeType": "YulIdentifier",
																		"src": "3403:6:40"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3384:6:40",
																	"nodeType": "YulIdentifier",
																	"src": "3384:6:40"
																},
																"nativeSrc": "3384:26:40",
																"nodeType": "YulFunctionCall",
																"src": "3384:26:40"
															},
															"nativeSrc": "3384:26:40",
															"nodeType": "YulExpressionStatement",
															"src": "3384:26:40"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "returnData",
																				"nativeSrc": "3499:10:40",
																				"nodeType": "YulIdentifier",
																				"src": "3499:10:40"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3511:4:40",
																				"nodeType": "YulLiteral",
																				"src": "3511:4:40",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3495:3:40",
																			"nodeType": "YulIdentifier",
																			"src": "3495:3:40"
																		},
																		"nativeSrc": "3495:21:40",
																		"nodeType": "YulFunctionCall",
																		"src": "3495:21:40"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3518:1:40",
																		"nodeType": "YulLiteral",
																		"src": "3518:1:40",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "toCopy",
																		"nativeSrc": "3521:6:40",
																		"nodeType": "YulIdentifier",
																		"src": "3521:6:40"
																	}
																],
																"functionName": {
																	"name": "returndatacopy",
																	"nativeSrc": "3480:14:40",
																	"nodeType": "YulIdentifier",
																	"src": "3480:14:40"
																},
																"nativeSrc": "3480:48:40",
																"nodeType": "YulFunctionCall",
																"src": "3480:48:40"
															},
															"nativeSrc": "3480:48:40",
															"nodeType": "YulExpressionStatement",
															"src": "3480:48:40"
														}
													]
												},
												"evmVersion": "shanghai",
												"externalReferences": [
													{
														"declaration": 2905,
														"isOffset": false,
														"isSlot": false,
														"src": "3031:4:40",
														"valueSize": 1
													},
													{
														"declaration": 2905,
														"isOffset": false,
														"isSlot": false,
														"src": "3066:4:40",
														"valueSize": 1
													},
													{
														"declaration": 2899,
														"isOffset": false,
														"isSlot": false,
														"src": "2953:9:40",
														"valueSize": 1
													},
													{
														"declaration": 2903,
														"isOffset": false,
														"isSlot": false,
														"src": "3260:7:40",
														"valueSize": 1
													},
													{
														"declaration": 2903,
														"isOffset": false,
														"isSlot": false,
														"src": "3297:7:40",
														"valueSize": 1
													},
													{
														"declaration": 2910,
														"isOffset": false,
														"isSlot": false,
														"src": "3391:10:40",
														"valueSize": 1
													},
													{
														"declaration": 2910,
														"isOffset": false,
														"isSlot": false,
														"src": "3499:10:40",
														"valueSize": 1
													},
													{
														"declaration": 2908,
														"isOffset": false,
														"isSlot": false,
														"src": "2920:7:40",
														"valueSize": 1
													},
													{
														"declaration": 2897,
														"isOffset": false,
														"isSlot": false,
														"src": "2980:6:40",
														"valueSize": 1
													},
													{
														"declaration": 2901,
														"isOffset": false,
														"isSlot": false,
														"src": "3004:5:40",
														"valueSize": 1
													}
												],
												"id": 2919,
												"nodeType": "InlineAssembly",
												"src": "2805:733:40"
											}
										]
									},
									"documentation": {
										"id": 2895,
										"nodeType": "StructuredDocumentation",
										"src": "1982:549:40",
										"text": " @notice execute arbitrary external call with limited gas usage and amount of copied return data\n @dev derived from https://github.com/nomad-xyz/ExcessivelySafeCall (MIT License)\n @param target recipient of call\n @param gasAmount gas allowance for call\n @param value native token value to include in call\n @param maxCopy maximum number of bytes to copy from return data\n @param data encoded call data\n @return success whether call is successful\n @return returnData copied return data"
									},
									"id": 2921,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "excessivelySafeCall",
									"nameLocation": "2545:19:40",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2906,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2897,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "2582:6:40",
												"nodeType": "VariableDeclaration",
												"scope": 2921,
												"src": "2574:14:40",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2896,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2574:7:40",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2899,
												"mutability": "mutable",
												"name": "gasAmount",
												"nameLocation": "2606:9:40",
												"nodeType": "VariableDeclaration",
												"scope": 2921,
												"src": "2598:17:40",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2898,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2598:7:40",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2901,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2633:5:40",
												"nodeType": "VariableDeclaration",
												"scope": 2921,
												"src": "2625:13:40",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2900,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2625:7:40",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2903,
												"mutability": "mutable",
												"name": "maxCopy",
												"nameLocation": "2655:7:40",
												"nodeType": "VariableDeclaration",
												"scope": 2921,
												"src": "2648:14:40",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 2902,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "2648:6:40",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2905,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "2685:4:40",
												"nodeType": "VariableDeclaration",
												"scope": 2921,
												"src": "2672:17:40",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2904,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2672:5:40",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2564:131:40"
									},
									"returnParameters": {
										"id": 2911,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2908,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "2719:7:40",
												"nodeType": "VariableDeclaration",
												"scope": 2921,
												"src": "2714:12:40",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2907,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2714:4:40",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2910,
												"mutability": "mutable",
												"name": "returnData",
												"nameLocation": "2741:10:40",
												"nodeType": "VariableDeclaration",
												"scope": 2921,
												"src": "2728:23:40",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2909,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2728:5:40",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2713:39:40"
									},
									"scope": 2972,
									"src": "2536:1008:40",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2970,
										"nodeType": "Block",
										"src": "3722:492:40",
										"statements": [
											{
												"condition": {
													"id": 2937,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "3736:19:40",
													"subExpression": {
														"arguments": [
															{
																"id": 2935,
																"name": "target",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2923,
																"src": "3748:6:40",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 2934,
															"name": "isContract",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2785,
															"src": "3737:10:40",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																"typeString": "function (address) view returns (bool)"
															}
														},
														"id": 2936,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3737:18:40",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2941,
												"nodeType": "IfStatement",
												"src": "3732:59:40",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 2938,
															"name": "AddressUtils__NotContract",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2748,
															"src": "3764:25:40",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$__$",
																"typeString": "function () pure"
															}
														},
														"id": 2939,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3764:27:40",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 2940,
													"nodeType": "RevertStatement",
													"src": "3757:34:40"
												}
											},
											{
												"assignments": [
													2943,
													2945
												],
												"declarations": [
													{
														"constant": false,
														"id": 2943,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "3808:7:40",
														"nodeType": "VariableDeclaration",
														"scope": 2970,
														"src": "3803:12:40",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 2942,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "3803:4:40",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 2945,
														"mutability": "mutable",
														"name": "returnData",
														"nameLocation": "3830:10:40",
														"nodeType": "VariableDeclaration",
														"scope": 2970,
														"src": "3817:23:40",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 2944,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "3817:5:40",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2952,
												"initialValue": {
													"arguments": [
														{
															"id": 2950,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2925,
															"src": "3885:4:40",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"expression": {
																"id": 2946,
																"name": "target",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2923,
																"src": "3844:6:40",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 2947,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3851:4:40",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "3844:11:40",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 2949,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 2948,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2927,
																"src": "3864:5:40",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "3844:27:40",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 2951,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3844:55:40",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3802:97:40"
											},
											{
												"condition": {
													"id": 2953,
													"name": "success",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2943,
													"src": "3914:7:40",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2960,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"id": 2957,
																"name": "returnData",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2945,
																"src": "3975:10:40",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 2958,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3986:6:40",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "3975:17:40",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"hexValue": "30",
															"id": 2959,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3995:1:40",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "3975:21:40",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseBody": {
														"id": 2967,
														"nodeType": "Block",
														"src": "4170:38:40",
														"statements": [
															{
																"expression": {
																	"arguments": [
																		{
																			"id": 2964,
																			"name": "error",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2929,
																			"src": "4191:5:40",
																			"typeDescriptions": {
																				"typeIdentifier": "t_string_memory_ptr",
																				"typeString": "string memory"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_string_memory_ptr",
																				"typeString": "string memory"
																			}
																		],
																		"id": 2963,
																		"name": "revert",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [
																			4294967277,
																			4294967277
																		],
																		"referencedDeclaration": 4294967277,
																		"src": "4184:6:40",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																			"typeString": "function (string memory) pure"
																		}
																	},
																	"id": 2965,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "4184:13:40",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$__$",
																		"typeString": "tuple()"
																	}
																},
																"id": 2966,
																"nodeType": "ExpressionStatement",
																"src": "4184:13:40"
															}
														]
													},
													"id": 2968,
													"nodeType": "IfStatement",
													"src": "3971:237:40",
													"trueBody": {
														"id": 2962,
														"nodeType": "Block",
														"src": "3998:166:40",
														"statements": [
															{
																"AST": {
																	"nativeSrc": "4021:133:40",
																	"nodeType": "YulBlock",
																	"src": "4021:133:40",
																	"statements": [
																		{
																			"nativeSrc": "4039:40:40",
																			"nodeType": "YulVariableDeclaration",
																			"src": "4039:40:40",
																			"value": {
																				"arguments": [
																					{
																						"name": "returnData",
																						"nativeSrc": "4068:10:40",
																						"nodeType": "YulIdentifier",
																						"src": "4068:10:40"
																					}
																				],
																				"functionName": {
																					"name": "mload",
																					"nativeSrc": "4062:5:40",
																					"nodeType": "YulIdentifier",
																					"src": "4062:5:40"
																				},
																				"nativeSrc": "4062:17:40",
																				"nodeType": "YulFunctionCall",
																				"src": "4062:17:40"
																			},
																			"variables": [
																				{
																					"name": "returnData_size",
																					"nativeSrc": "4043:15:40",
																					"nodeType": "YulTypedName",
																					"src": "4043:15:40",
																					"type": ""
																				}
																			]
																		},
																		{
																			"expression": {
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "4107:2:40",
																								"nodeType": "YulLiteral",
																								"src": "4107:2:40",
																								"type": "",
																								"value": "32"
																							},
																							{
																								"name": "returnData",
																								"nativeSrc": "4111:10:40",
																								"nodeType": "YulIdentifier",
																								"src": "4111:10:40"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nativeSrc": "4103:3:40",
																							"nodeType": "YulIdentifier",
																							"src": "4103:3:40"
																						},
																						"nativeSrc": "4103:19:40",
																						"nodeType": "YulFunctionCall",
																						"src": "4103:19:40"
																					},
																					{
																						"name": "returnData_size",
																						"nativeSrc": "4124:15:40",
																						"nodeType": "YulIdentifier",
																						"src": "4124:15:40"
																					}
																				],
																				"functionName": {
																					"name": "revert",
																					"nativeSrc": "4096:6:40",
																					"nodeType": "YulIdentifier",
																					"src": "4096:6:40"
																				},
																				"nativeSrc": "4096:44:40",
																				"nodeType": "YulFunctionCall",
																				"src": "4096:44:40"
																			},
																			"nativeSrc": "4096:44:40",
																			"nodeType": "YulExpressionStatement",
																			"src": "4096:44:40"
																		}
																	]
																},
																"evmVersion": "shanghai",
																"externalReferences": [
																	{
																		"declaration": 2945,
																		"isOffset": false,
																		"isSlot": false,
																		"src": "4068:10:40",
																		"valueSize": 1
																	},
																	{
																		"declaration": 2945,
																		"isOffset": false,
																		"isSlot": false,
																		"src": "4111:10:40",
																		"valueSize": 1
																	}
																],
																"id": 2961,
																"nodeType": "InlineAssembly",
																"src": "4012:142:40"
															}
														]
													}
												},
												"id": 2969,
												"nodeType": "IfStatement",
												"src": "3910:298:40",
												"trueBody": {
													"id": 2956,
													"nodeType": "Block",
													"src": "3923:42:40",
													"statements": [
														{
															"expression": {
																"id": 2954,
																"name": "returnData",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2945,
																"src": "3944:10:40",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 2933,
															"id": 2955,
															"nodeType": "Return",
															"src": "3937:17:40"
														}
													]
												}
											}
										]
									},
									"id": 2971,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_functionCallWithValue",
									"nameLocation": "3559:22:40",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2930,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2923,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3599:6:40",
												"nodeType": "VariableDeclaration",
												"scope": 2971,
												"src": "3591:14:40",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2922,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3591:7:40",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2925,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3628:4:40",
												"nodeType": "VariableDeclaration",
												"scope": 2971,
												"src": "3615:17:40",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2924,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3615:5:40",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2927,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3650:5:40",
												"nodeType": "VariableDeclaration",
												"scope": 2971,
												"src": "3642:13:40",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2926,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3642:7:40",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2929,
												"mutability": "mutable",
												"name": "error",
												"nameLocation": "3679:5:40",
												"nodeType": "VariableDeclaration",
												"scope": 2971,
												"src": "3665:19:40",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2928,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3665:6:40",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3581:109:40"
									},
									"returnParameters": {
										"id": 2933,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2932,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2971,
												"src": "3708:12:40",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2931,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3708:5:40",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3707:14:40"
									},
									"scope": 2972,
									"src": "3550:664:40",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 2973,
							"src": "105:4111:40",
							"usedErrors": [
								2746,
								2748,
								2750
							],
							"usedEvents": []
						}
					],
					"src": "33:4184:40"
				},
				"id": 40
			},
			"@solidstate/contracts/utils/UintUtils.sol": {
				"ast": {
					"absolutePath": "@solidstate/contracts/utils/UintUtils.sol",
					"exportedSymbols": {
						"UintUtils": [
							3536
						]
					},
					"id": 3537,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2974,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".18"
							],
							"nodeType": "PragmaDirective",
							"src": "33:24:41"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "UintUtils",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 2975,
								"nodeType": "StructuredDocumentation",
								"src": "59:149:41",
								"text": " @title utility functions for uint256 operations\n @dev derived from https://github.com/OpenZeppelin/openzeppelin-contracts/ (MIT license)"
							},
							"fullyImplemented": true,
							"id": 3536,
							"linearizedBaseContracts": [
								3536
							],
							"name": "UintUtils",
							"nameLocation": "217:9:41",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"errorSelector": "ab409fe2",
									"id": 2977,
									"name": "UintUtils__InsufficientPadding",
									"nameLocation": "239:30:41",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 2976,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "269:2:41"
									},
									"src": "233:39:41"
								},
								{
									"errorSelector": "6cec05d1",
									"id": 2979,
									"name": "UintUtils__InvalidBase",
									"nameLocation": "283:22:41",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 2978,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "305:2:41"
									},
									"src": "277:31:41"
								},
								{
									"constant": true,
									"id": 2982,
									"mutability": "constant",
									"name": "HEX_SYMBOLS",
									"nameLocation": "339:11:41",
									"nodeType": "VariableDeclaration",
									"scope": 3536,
									"src": "314:57:41",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes16",
										"typeString": "bytes16"
									},
									"typeName": {
										"id": 2980,
										"name": "bytes16",
										"nodeType": "ElementaryTypeName",
										"src": "314:7:41",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes16",
											"typeString": "bytes16"
										}
									},
									"value": {
										"hexValue": "30313233343536373839616263646566",
										"id": 2981,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "353:18:41",
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_cb29997ed99ead0db59ce4d12b7d3723198c827273e5796737c926d78019c39f",
											"typeString": "literal_string \"0123456789abcdef\""
										},
										"value": "0123456789abcdef"
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 3007,
										"nodeType": "Block",
										"src": "444:59:41",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"id": 2993,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2991,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2986,
															"src": "461:1:41",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<",
														"rightExpression": {
															"hexValue": "30",
															"id": 2992,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "465:1:41",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "461:5:41",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 3004,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2999,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2984,
															"src": "482:1:41",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"arguments": [
																{
																	"id": 3002,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2986,
																	"src": "494:1:41",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																],
																"id": 3001,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "486:7:41",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint256_$",
																	"typeString": "type(uint256)"
																},
																"typeName": {
																	"id": 3000,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "486:7:41",
																	"typeDescriptions": {}
																}
															},
															"id": 3003,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "486:10:41",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "482:14:41",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 3005,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "461:35:41",
													"trueExpression": {
														"arguments": [
															{
																"id": 2995,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2984,
																"src": "473:1:41",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"id": 2997,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "-",
																"prefix": true,
																"src": "476:2:41",
																"subExpression": {
																	"id": 2996,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2986,
																	"src": "477:1:41",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"id": 2994,
															"name": "sub",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3034,
															"src": "469:3:41",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_int256_$returns$_t_uint256_$",
																"typeString": "function (uint256,int256) pure returns (uint256)"
															}
														},
														"id": 2998,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "469:10:41",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2990,
												"id": 3006,
												"nodeType": "Return",
												"src": "454:42:41"
											}
										]
									},
									"id": 3008,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nameLocation": "387:3:41",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2987,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2984,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "399:1:41",
												"nodeType": "VariableDeclaration",
												"scope": 3008,
												"src": "391:9:41",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2983,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "391:7:41",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2986,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "409:1:41",
												"nodeType": "VariableDeclaration",
												"scope": 3008,
												"src": "402:8:41",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2985,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "402:6:41",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "390:21:41"
									},
									"returnParameters": {
										"id": 2990,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2989,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3008,
												"src": "435:7:41",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2988,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "435:7:41",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "434:9:41"
									},
									"scope": 3536,
									"src": "378:125:41",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3033,
										"nodeType": "Block",
										"src": "575:59:41",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"id": 3019,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 3017,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3012,
															"src": "592:1:41",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<",
														"rightExpression": {
															"hexValue": "30",
															"id": 3018,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "596:1:41",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "592:5:41",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 3030,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 3025,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3010,
															"src": "613:1:41",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "-",
														"rightExpression": {
															"arguments": [
																{
																	"id": 3028,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3012,
																	"src": "625:1:41",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																],
																"id": 3027,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "617:7:41",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint256_$",
																	"typeString": "type(uint256)"
																},
																"typeName": {
																	"id": 3026,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "617:7:41",
																	"typeDescriptions": {}
																}
															},
															"id": 3029,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "617:10:41",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "613:14:41",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 3031,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "592:35:41",
													"trueExpression": {
														"arguments": [
															{
																"id": 3021,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3010,
																"src": "604:1:41",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"id": 3023,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "-",
																"prefix": true,
																"src": "607:2:41",
																"subExpression": {
																	"id": 3022,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3012,
																	"src": "608:1:41",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"id": 3020,
															"name": "add",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3008,
															"src": "600:3:41",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_int256_$returns$_t_uint256_$",
																"typeString": "function (uint256,int256) pure returns (uint256)"
															}
														},
														"id": 3024,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "600:10:41",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 3016,
												"id": 3032,
												"nodeType": "Return",
												"src": "585:42:41"
											}
										]
									},
									"id": 3034,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nameLocation": "518:3:41",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3013,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3010,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "530:1:41",
												"nodeType": "VariableDeclaration",
												"scope": 3034,
												"src": "522:9:41",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3009,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "522:7:41",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3012,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "540:1:41",
												"nodeType": "VariableDeclaration",
												"scope": 3034,
												"src": "533:8:41",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3011,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "533:6:41",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "521:21:41"
									},
									"returnParameters": {
										"id": 3016,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3015,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3034,
												"src": "566:7:41",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3014,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "566:7:41",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "565:9:41"
									},
									"scope": 3536,
									"src": "509:125:41",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3080,
										"nodeType": "Block",
										"src": "1031:519:41",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 3046,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3044,
														"name": "radix",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3039,
														"src": "1238:5:41",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"hexValue": "32",
														"id": 3045,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1246:1:41",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_2_by_1",
															"typeString": "int_const 2"
														},
														"value": "2"
													},
													"src": "1238:9:41",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3051,
												"nodeType": "IfStatement",
												"src": "1234:71:41",
												"trueBody": {
													"id": 3050,
													"nodeType": "Block",
													"src": "1249:56:41",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 3047,
																	"name": "UintUtils__InvalidBase",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2979,
																	"src": "1270:22:41",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 3048,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1270:24:41",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 3049,
															"nodeType": "RevertStatement",
															"src": "1263:31:41"
														}
													]
												}
											},
											{
												"assignments": [
													3053
												],
												"declarations": [
													{
														"constant": false,
														"id": 3053,
														"mutability": "mutable",
														"name": "length",
														"nameLocation": "1323:6:41",
														"nodeType": "VariableDeclaration",
														"scope": 3080,
														"src": "1315:14:41",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 3052,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1315:7:41",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3054,
												"nodeType": "VariableDeclarationStatement",
												"src": "1315:14:41"
											},
											{
												"assignments": [
													3056
												],
												"declarations": [
													{
														"constant": false,
														"id": 3056,
														"mutability": "mutable",
														"name": "temp",
														"nameLocation": "1347:4:41",
														"nodeType": "VariableDeclaration",
														"scope": 3080,
														"src": "1339:12:41",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 3055,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1339:7:41",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3058,
												"initialValue": {
													"id": 3057,
													"name": "value",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 3037,
													"src": "1354:5:41",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1339:20:41"
											},
											{
												"body": {
													"id": 3067,
													"nodeType": "Block",
													"src": "1373:102:41",
													"statements": [
														{
															"id": 3062,
															"nodeType": "UncheckedBlock",
															"src": "1387:51:41",
															"statements": [
																{
																	"expression": {
																		"id": 3060,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "UnaryOperation",
																		"operator": "++",
																		"prefix": false,
																		"src": "1415:8:41",
																		"subExpression": {
																			"id": 3059,
																			"name": "length",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3053,
																			"src": "1415:6:41",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3061,
																	"nodeType": "ExpressionStatement",
																	"src": "1415:8:41"
																}
															]
														},
														{
															"expression": {
																"id": 3065,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 3063,
																	"name": "temp",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3056,
																	"src": "1451:4:41",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "/=",
																"rightHandSide": {
																	"id": 3064,
																	"name": "radix",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3039,
																	"src": "1459:5:41",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1451:13:41",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 3066,
															"nodeType": "ExpressionStatement",
															"src": "1451:13:41"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 3070,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3068,
														"name": "temp",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3056,
														"src": "1483:4:41",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 3069,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1491:1:41",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1483:9:41",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3071,
												"nodeType": "DoWhileStatement",
												"src": "1370:124:41"
											},
											{
												"expression": {
													"id": 3078,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 3072,
														"name": "output",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3042,
														"src": "1504:6:41",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 3074,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3037,
																"src": "1522:5:41",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"id": 3075,
																"name": "radix",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3039,
																"src": "1529:5:41",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"id": 3076,
																"name": "length",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3053,
																"src": "1536:6:41",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 3073,
															"name": "toString",
															"nodeType": "Identifier",
															"overloadedDeclarations": [
																3081,
																3173
															],
															"referencedDeclaration": 3173,
															"src": "1513:8:41",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$",
																"typeString": "function (uint256,uint256,uint256) pure returns (string memory)"
															}
														},
														"id": 3077,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1513:30:41",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1504:39:41",
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"id": 3079,
												"nodeType": "ExpressionStatement",
												"src": "1504:39:41"
											}
										]
									},
									"documentation": {
										"id": 3035,
										"nodeType": "StructuredDocumentation",
										"src": "640:271:41",
										"text": " @notice output the string representation of a number in a given radix\n @dev radix must be between 2 and 36 (inclusive)\n @param value number to format as string\n @param radix numerical base to use\n @return output formatted string"
									},
									"id": 3081,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toString",
									"nameLocation": "925:8:41",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3040,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3037,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "951:5:41",
												"nodeType": "VariableDeclaration",
												"scope": 3081,
												"src": "943:13:41",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3036,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "943:7:41",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3039,
												"mutability": "mutable",
												"name": "radix",
												"nameLocation": "974:5:41",
												"nodeType": "VariableDeclaration",
												"scope": 3081,
												"src": "966:13:41",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3038,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "966:7:41",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "933:52:41"
									},
									"returnParameters": {
										"id": 3043,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3042,
												"mutability": "mutable",
												"name": "output",
												"nameLocation": "1023:6:41",
												"nodeType": "VariableDeclaration",
												"scope": 3081,
												"src": "1009:20:41",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 3041,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1009:6:41",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1008:22:41"
									},
									"scope": 3536,
									"src": "916:634:41",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3172,
										"nodeType": "Block",
										"src": "2062:911:41",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 3099,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 3095,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 3093,
															"name": "radix",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3086,
															"src": "2076:5:41",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<",
														"rightExpression": {
															"hexValue": "32",
															"id": 3094,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2084:1:41",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														},
														"src": "2076:9:41",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 3098,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 3096,
															"name": "radix",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3086,
															"src": "2089:5:41",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"hexValue": "3336",
															"id": 3097,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2097:2:41",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_36_by_1",
																"typeString": "int_const 36"
															},
															"value": "36"
														},
														"src": "2089:10:41",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "2076:23:41",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3104,
												"nodeType": "IfStatement",
												"src": "2072:85:41",
												"trueBody": {
													"id": 3103,
													"nodeType": "Block",
													"src": "2101:56:41",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 3100,
																	"name": "UintUtils__InvalidBase",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2979,
																	"src": "2122:22:41",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 3101,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2122:24:41",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 3102,
															"nodeType": "RevertStatement",
															"src": "2115:31:41"
														}
													]
												}
											},
											{
												"assignments": [
													3106
												],
												"declarations": [
													{
														"constant": false,
														"id": 3106,
														"mutability": "mutable",
														"name": "buffer",
														"nameLocation": "2180:6:41",
														"nodeType": "VariableDeclaration",
														"scope": 3172,
														"src": "2167:19:41",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 3105,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "2167:5:41",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3111,
												"initialValue": {
													"arguments": [
														{
															"id": 3109,
															"name": "length",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3088,
															"src": "2199:6:41",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 3108,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "2189:9:41",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (uint256) pure returns (bytes memory)"
														},
														"typeName": {
															"id": 3107,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "2193:5:41",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														}
													},
													"id": 3110,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2189:17:41",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2167:39:41"
											},
											{
												"body": {
													"id": 3156,
													"nodeType": "Block",
													"src": "2237:630:41",
													"statements": [
														{
															"id": 3118,
															"nodeType": "UncheckedBlock",
															"src": "2251:51:41",
															"statements": [
																{
																	"expression": {
																		"id": 3116,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "UnaryOperation",
																		"operator": "--",
																		"prefix": false,
																		"src": "2279:8:41",
																		"subExpression": {
																			"id": 3115,
																			"name": "length",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3088,
																			"src": "2279:6:41",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3117,
																	"nodeType": "ExpressionStatement",
																	"src": "2279:8:41"
																}
															]
														},
														{
															"assignments": [
																3120
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 3120,
																	"mutability": "mutable",
																	"name": "char",
																	"nameLocation": "2324:4:41",
																	"nodeType": "VariableDeclaration",
																	"scope": 3156,
																	"src": "2316:12:41",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 3119,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "2316:7:41",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 3124,
															"initialValue": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 3123,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 3121,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3084,
																	"src": "2331:5:41",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "%",
																"rightExpression": {
																	"id": 3122,
																	"name": "radix",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3086,
																	"src": "2339:5:41",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2331:13:41",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "2316:28:41"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 3127,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 3125,
																	"name": "char",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3120,
																	"src": "2363:4:41",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"hexValue": "3130",
																	"id": 3126,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2370:2:41",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"src": "2363:9:41",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"id": 3138,
																"nodeType": "Block",
																"src": "2593:185:41",
																"statements": [
																	{
																		"id": 3137,
																		"nodeType": "UncheckedBlock",
																		"src": "2703:61:41",
																		"statements": [
																			{
																				"expression": {
																					"id": 3135,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftHandSide": {
																						"id": 3133,
																						"name": "char",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 3120,
																						"src": "2735:4:41",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "Assignment",
																					"operator": "+=",
																					"rightHandSide": {
																						"hexValue": "3837",
																						"id": 3134,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "2743:2:41",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_87_by_1",
																							"typeString": "int_const 87"
																						},
																						"value": "87"
																					},
																					"src": "2735:10:41",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"id": 3136,
																				"nodeType": "ExpressionStatement",
																				"src": "2735:10:41"
																			}
																		]
																	}
																]
															},
															"id": 3139,
															"nodeType": "IfStatement",
															"src": "2359:419:41",
															"trueBody": {
																"id": 3132,
																"nodeType": "Block",
																"src": "2374:213:41",
																"statements": [
																	{
																		"expression": {
																			"id": 3130,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"id": 3128,
																				"name": "char",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3120,
																				"src": "2562:4:41",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "|=",
																			"rightHandSide": {
																				"hexValue": "3438",
																				"id": 3129,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2570:2:41",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_48_by_1",
																					"typeString": "int_const 48"
																				},
																				"value": "48"
																			},
																			"src": "2562:10:41",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 3131,
																		"nodeType": "ExpressionStatement",
																		"src": "2562:10:41"
																	}
																]
															}
														},
														{
															"expression": {
																"id": 3150,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 3140,
																		"name": "buffer",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3106,
																		"src": "2792:6:41",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 3142,
																	"indexExpression": {
																		"id": 3141,
																		"name": "length",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3088,
																		"src": "2799:6:41",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "2792:14:41",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"id": 3147,
																					"name": "char",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3120,
																					"src": "2822:4:41",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 3146,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "2816:5:41",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_uint8_$",
																					"typeString": "type(uint8)"
																				},
																				"typeName": {
																					"id": 3145,
																					"name": "uint8",
																					"nodeType": "ElementaryTypeName",
																					"src": "2816:5:41",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 3148,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "2816:11:41",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint8",
																				"typeString": "uint8"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint8",
																				"typeString": "uint8"
																			}
																		],
																		"id": 3144,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2809:6:41",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_bytes1_$",
																			"typeString": "type(bytes1)"
																		},
																		"typeName": {
																			"id": 3143,
																			"name": "bytes1",
																			"nodeType": "ElementaryTypeName",
																			"src": "2809:6:41",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 3149,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2809:19:41",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"src": "2792:36:41",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes1",
																	"typeString": "bytes1"
																}
															},
															"id": 3151,
															"nodeType": "ExpressionStatement",
															"src": "2792:36:41"
														},
														{
															"expression": {
																"id": 3154,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 3152,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3084,
																	"src": "2842:5:41",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "/=",
																"rightHandSide": {
																	"id": 3153,
																	"name": "radix",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3086,
																	"src": "2851:5:41",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2842:14:41",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 3155,
															"nodeType": "ExpressionStatement",
															"src": "2842:14:41"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 3114,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3112,
														"name": "length",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3088,
														"src": "2224:6:41",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 3113,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2234:1:41",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2224:11:41",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3157,
												"nodeType": "WhileStatement",
												"src": "2217:650:41"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 3160,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3158,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3084,
														"src": "2881:5:41",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 3159,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2890:1:41",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2881:10:41",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3164,
												"nodeType": "IfStatement",
												"src": "2877:55:41",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 3161,
															"name": "UintUtils__InsufficientPadding",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2977,
															"src": "2900:30:41",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$__$",
																"typeString": "function () pure"
															}
														},
														"id": 3162,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2900:32:41",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 3163,
													"nodeType": "RevertStatement",
													"src": "2893:39:41"
												}
											},
											{
												"expression": {
													"id": 3170,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 3165,
														"name": "output",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3091,
														"src": "2943:6:41",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 3168,
																"name": "buffer",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3106,
																"src": "2959:6:41",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"id": 3167,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2952:6:41",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_string_storage_ptr_$",
																"typeString": "type(string storage pointer)"
															},
															"typeName": {
																"id": 3166,
																"name": "string",
																"nodeType": "ElementaryTypeName",
																"src": "2952:6:41",
																"typeDescriptions": {}
															}
														},
														"id": 3169,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2952:14:41",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "2943:23:41",
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"id": 3171,
												"nodeType": "ExpressionStatement",
												"src": "2943:23:41"
											}
										]
									},
									"documentation": {
										"id": 3082,
										"nodeType": "StructuredDocumentation",
										"src": "1556:362:41",
										"text": " @notice output the string representation of a number in a given radix and padded to given length\n @dev radix must be between 2 and 36 (inclusive)\n @param value number to format as string\n @param radix numerical base to use\n @param length size to which output should be zero padded\n @return output formatted string"
									},
									"id": 3173,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toString",
									"nameLocation": "1932:8:41",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3089,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3084,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1958:5:41",
												"nodeType": "VariableDeclaration",
												"scope": 3173,
												"src": "1950:13:41",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3083,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1950:7:41",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3086,
												"mutability": "mutable",
												"name": "radix",
												"nameLocation": "1981:5:41",
												"nodeType": "VariableDeclaration",
												"scope": 3173,
												"src": "1973:13:41",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3085,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1973:7:41",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3088,
												"mutability": "mutable",
												"name": "length",
												"nameLocation": "2004:6:41",
												"nodeType": "VariableDeclaration",
												"scope": 3173,
												"src": "1996:14:41",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3087,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1996:7:41",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1940:76:41"
									},
									"returnParameters": {
										"id": 3092,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3091,
												"mutability": "mutable",
												"name": "output",
												"nameLocation": "2054:6:41",
												"nodeType": "VariableDeclaration",
												"scope": 3173,
												"src": "2040:20:41",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 3090,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2040:6:41",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2039:22:41"
									},
									"scope": 3536,
									"src": "1923:1050:41",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3208,
										"nodeType": "Block",
										"src": "3255:238:41",
										"statements": [
											{
												"assignments": [
													3182
												],
												"declarations": [
													{
														"constant": false,
														"id": 3182,
														"mutability": "mutable",
														"name": "length",
														"nameLocation": "3273:6:41",
														"nodeType": "VariableDeclaration",
														"scope": 3208,
														"src": "3265:14:41",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 3181,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3265:7:41",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3183,
												"nodeType": "VariableDeclarationStatement",
												"src": "3265:14:41"
											},
											{
												"assignments": [
													3185
												],
												"declarations": [
													{
														"constant": false,
														"id": 3185,
														"mutability": "mutable",
														"name": "temp",
														"nameLocation": "3297:4:41",
														"nodeType": "VariableDeclaration",
														"scope": 3208,
														"src": "3289:12:41",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 3184,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3289:7:41",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3187,
												"initialValue": {
													"id": 3186,
													"name": "value",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 3176,
													"src": "3304:5:41",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3289:20:41"
											},
											{
												"body": {
													"id": 3196,
													"nodeType": "Block",
													"src": "3323:99:41",
													"statements": [
														{
															"id": 3191,
															"nodeType": "UncheckedBlock",
															"src": "3337:51:41",
															"statements": [
																{
																	"expression": {
																		"id": 3189,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "UnaryOperation",
																		"operator": "++",
																		"prefix": false,
																		"src": "3365:8:41",
																		"subExpression": {
																			"id": 3188,
																			"name": "length",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3182,
																			"src": "3365:6:41",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3190,
																	"nodeType": "ExpressionStatement",
																	"src": "3365:8:41"
																}
															]
														},
														{
															"expression": {
																"id": 3194,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 3192,
																	"name": "temp",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3185,
																	"src": "3401:4:41",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": ">>=",
																"rightHandSide": {
																	"hexValue": "31",
																	"id": 3193,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3410:1:41",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "3401:10:41",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 3195,
															"nodeType": "ExpressionStatement",
															"src": "3401:10:41"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 3199,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3197,
														"name": "temp",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3185,
														"src": "3430:4:41",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 3198,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3438:1:41",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "3430:9:41",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3200,
												"nodeType": "DoWhileStatement",
												"src": "3320:121:41"
											},
											{
												"expression": {
													"id": 3206,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 3201,
														"name": "output",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3179,
														"src": "3451:6:41",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 3203,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3176,
																"src": "3472:5:41",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"id": 3204,
																"name": "length",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3182,
																"src": "3479:6:41",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 3202,
															"name": "toBinString",
															"nodeType": "Identifier",
															"overloadedDeclarations": [
																3209,
																3280
															],
															"referencedDeclaration": 3280,
															"src": "3460:11:41",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$",
																"typeString": "function (uint256,uint256) pure returns (string memory)"
															}
														},
														"id": 3205,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3460:26:41",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "3451:35:41",
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"id": 3207,
												"nodeType": "ExpressionStatement",
												"src": "3451:35:41"
											}
										]
									},
									"documentation": {
										"id": 3174,
										"nodeType": "StructuredDocumentation",
										"src": "2979:176:41",
										"text": " @notice output the 0b-prefixed binary string representation of a number\n @param value number to format as string\n @return output formatted string"
									},
									"id": 3209,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toBinString",
									"nameLocation": "3169:11:41",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3177,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3176,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3198:5:41",
												"nodeType": "VariableDeclaration",
												"scope": 3209,
												"src": "3190:13:41",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3175,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3190:7:41",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3180:29:41"
									},
									"returnParameters": {
										"id": 3180,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3179,
												"mutability": "mutable",
												"name": "output",
												"nameLocation": "3247:6:41",
												"nodeType": "VariableDeclaration",
												"scope": 3209,
												"src": "3233:20:41",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 3178,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3233:6:41",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3232:22:41"
									},
									"scope": 3536,
									"src": "3160:333:41",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3279,
										"nodeType": "Block",
										"src": "3909:461:41",
										"statements": [
											{
												"expression": {
													"id": 3221,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 3219,
														"name": "length",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3214,
														"src": "3969:6:41",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"hexValue": "32",
														"id": 3220,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3979:1:41",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_2_by_1",
															"typeString": "int_const 2"
														},
														"value": "2"
													},
													"src": "3969:11:41",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 3222,
												"nodeType": "ExpressionStatement",
												"src": "3969:11:41"
											},
											{
												"assignments": [
													3224
												],
												"declarations": [
													{
														"constant": false,
														"id": 3224,
														"mutability": "mutable",
														"name": "buffer",
														"nameLocation": "4004:6:41",
														"nodeType": "VariableDeclaration",
														"scope": 3279,
														"src": "3991:19:41",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 3223,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "3991:5:41",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3229,
												"initialValue": {
													"arguments": [
														{
															"id": 3227,
															"name": "length",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3214,
															"src": "4023:6:41",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 3226,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "4013:9:41",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (uint256) pure returns (bytes memory)"
														},
														"typeName": {
															"id": 3225,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "4017:5:41",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														}
													},
													"id": 3228,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4013:17:41",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3991:39:41"
											},
											{
												"expression": {
													"id": 3234,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 3230,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3224,
															"src": "4040:6:41",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 3232,
														"indexExpression": {
															"hexValue": "30",
															"id": 3231,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4047:1:41",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "4040:9:41",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes1",
															"typeString": "bytes1"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 3233,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4052:3:41",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d",
															"typeString": "literal_string \"0\""
														},
														"value": "0"
													},
													"src": "4040:15:41",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes1",
														"typeString": "bytes1"
													}
												},
												"id": 3235,
												"nodeType": "ExpressionStatement",
												"src": "4040:15:41"
											},
											{
												"expression": {
													"id": 3240,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 3236,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3224,
															"src": "4065:6:41",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 3238,
														"indexExpression": {
															"hexValue": "31",
															"id": 3237,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4072:1:41",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "4065:9:41",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes1",
															"typeString": "bytes1"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "62",
														"id": 3239,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4077:3:41",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_b5553de315e0edf504d9150af82dafa5c4667fa618ed0a6f19c69b41166c5510",
															"typeString": "literal_string \"b\""
														},
														"value": "b"
													},
													"src": "4065:15:41",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes1",
														"typeString": "bytes1"
													}
												},
												"id": 3241,
												"nodeType": "ExpressionStatement",
												"src": "4065:15:41"
											},
											{
												"body": {
													"id": 3263,
													"nodeType": "Block",
													"src": "4110:154:41",
													"statements": [
														{
															"id": 3248,
															"nodeType": "UncheckedBlock",
															"src": "4124:51:41",
															"statements": [
																{
																	"expression": {
																		"id": 3246,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "UnaryOperation",
																		"operator": "--",
																		"prefix": false,
																		"src": "4152:8:41",
																		"subExpression": {
																			"id": 3245,
																			"name": "length",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3214,
																			"src": "4152:6:41",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3247,
																	"nodeType": "ExpressionStatement",
																	"src": "4152:8:41"
																}
															]
														},
														{
															"expression": {
																"id": 3257,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 3249,
																		"name": "buffer",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3224,
																		"src": "4189:6:41",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 3251,
																	"indexExpression": {
																		"id": 3250,
																		"name": "length",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3214,
																		"src": "4196:6:41",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "4189:14:41",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"baseExpression": {
																		"id": 3252,
																		"name": "HEX_SYMBOLS",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2982,
																		"src": "4206:11:41",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes16",
																			"typeString": "bytes16"
																		}
																	},
																	"id": 3256,
																	"indexExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 3255,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 3253,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3212,
																			"src": "4218:5:41",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "&",
																		"rightExpression": {
																			"hexValue": "31",
																			"id": 3254,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "4226:1:41",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "4218:9:41",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "4206:22:41",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"src": "4189:39:41",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes1",
																	"typeString": "bytes1"
																}
															},
															"id": 3258,
															"nodeType": "ExpressionStatement",
															"src": "4189:39:41"
														},
														{
															"expression": {
																"id": 3261,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 3259,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3212,
																	"src": "4242:5:41",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": ">>=",
																"rightHandSide": {
																	"hexValue": "31",
																	"id": 3260,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "4252:1:41",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "4242:11:41",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 3262,
															"nodeType": "ExpressionStatement",
															"src": "4242:11:41"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 3244,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3242,
														"name": "length",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3214,
														"src": "4098:6:41",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "32",
														"id": 3243,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4107:1:41",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_2_by_1",
															"typeString": "int_const 2"
														},
														"value": "2"
													},
													"src": "4098:10:41",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3264,
												"nodeType": "WhileStatement",
												"src": "4091:173:41"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 3267,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3265,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3212,
														"src": "4278:5:41",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 3266,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4287:1:41",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "4278:10:41",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3271,
												"nodeType": "IfStatement",
												"src": "4274:55:41",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 3268,
															"name": "UintUtils__InsufficientPadding",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2977,
															"src": "4297:30:41",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$__$",
																"typeString": "function () pure"
															}
														},
														"id": 3269,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4297:32:41",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 3270,
													"nodeType": "RevertStatement",
													"src": "4290:39:41"
												}
											},
											{
												"expression": {
													"id": 3277,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 3272,
														"name": "output",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3217,
														"src": "4340:6:41",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 3275,
																"name": "buffer",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3224,
																"src": "4356:6:41",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"id": 3274,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "4349:6:41",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_string_storage_ptr_$",
																"typeString": "type(string storage pointer)"
															},
															"typeName": {
																"id": 3273,
																"name": "string",
																"nodeType": "ElementaryTypeName",
																"src": "4349:6:41",
																"typeDescriptions": {}
															}
														},
														"id": 3276,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4349:14:41",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "4340:23:41",
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"id": 3278,
												"nodeType": "ExpressionStatement",
												"src": "4340:23:41"
											}
										]
									},
									"documentation": {
										"id": 3210,
										"nodeType": "StructuredDocumentation",
										"src": "3499:286:41",
										"text": " @notice output the 0b-prefixed binary string representation of a number padded to given length\n @param value number to format as string\n @param length size to which output should be zero padded (not including prefix)\n @return output formatted string"
									},
									"id": 3280,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toBinString",
									"nameLocation": "3799:11:41",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3215,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3212,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3828:5:41",
												"nodeType": "VariableDeclaration",
												"scope": 3280,
												"src": "3820:13:41",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3211,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3820:7:41",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3214,
												"mutability": "mutable",
												"name": "length",
												"nameLocation": "3851:6:41",
												"nodeType": "VariableDeclaration",
												"scope": 3280,
												"src": "3843:14:41",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3213,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3843:7:41",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3810:53:41"
									},
									"returnParameters": {
										"id": 3218,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3217,
												"mutability": "mutable",
												"name": "output",
												"nameLocation": "3901:6:41",
												"nodeType": "VariableDeclaration",
												"scope": 3280,
												"src": "3887:20:41",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 3216,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3887:6:41",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3886:22:41"
									},
									"scope": 3536,
									"src": "3790:580:41",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3315,
										"nodeType": "Block",
										"src": "4651:238:41",
										"statements": [
											{
												"assignments": [
													3289
												],
												"declarations": [
													{
														"constant": false,
														"id": 3289,
														"mutability": "mutable",
														"name": "length",
														"nameLocation": "4669:6:41",
														"nodeType": "VariableDeclaration",
														"scope": 3315,
														"src": "4661:14:41",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 3288,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4661:7:41",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3290,
												"nodeType": "VariableDeclarationStatement",
												"src": "4661:14:41"
											},
											{
												"assignments": [
													3292
												],
												"declarations": [
													{
														"constant": false,
														"id": 3292,
														"mutability": "mutable",
														"name": "temp",
														"nameLocation": "4693:4:41",
														"nodeType": "VariableDeclaration",
														"scope": 3315,
														"src": "4685:12:41",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 3291,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4685:7:41",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3294,
												"initialValue": {
													"id": 3293,
													"name": "value",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 3283,
													"src": "4700:5:41",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4685:20:41"
											},
											{
												"body": {
													"id": 3303,
													"nodeType": "Block",
													"src": "4719:99:41",
													"statements": [
														{
															"id": 3298,
															"nodeType": "UncheckedBlock",
															"src": "4733:51:41",
															"statements": [
																{
																	"expression": {
																		"id": 3296,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "UnaryOperation",
																		"operator": "++",
																		"prefix": false,
																		"src": "4761:8:41",
																		"subExpression": {
																			"id": 3295,
																			"name": "length",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3289,
																			"src": "4761:6:41",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3297,
																	"nodeType": "ExpressionStatement",
																	"src": "4761:8:41"
																}
															]
														},
														{
															"expression": {
																"id": 3301,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 3299,
																	"name": "temp",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3292,
																	"src": "4797:4:41",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": ">>=",
																"rightHandSide": {
																	"hexValue": "33",
																	"id": 3300,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "4806:1:41",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_3_by_1",
																		"typeString": "int_const 3"
																	},
																	"value": "3"
																},
																"src": "4797:10:41",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 3302,
															"nodeType": "ExpressionStatement",
															"src": "4797:10:41"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 3306,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3304,
														"name": "temp",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3292,
														"src": "4826:4:41",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 3305,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4834:1:41",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "4826:9:41",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3307,
												"nodeType": "DoWhileStatement",
												"src": "4716:121:41"
											},
											{
												"expression": {
													"id": 3313,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 3308,
														"name": "output",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3286,
														"src": "4847:6:41",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 3310,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3283,
																"src": "4868:5:41",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"id": 3311,
																"name": "length",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3289,
																"src": "4875:6:41",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 3309,
															"name": "toOctString",
															"nodeType": "Identifier",
															"overloadedDeclarations": [
																3316,
																3387
															],
															"referencedDeclaration": 3387,
															"src": "4856:11:41",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$",
																"typeString": "function (uint256,uint256) pure returns (string memory)"
															}
														},
														"id": 3312,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4856:26:41",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "4847:35:41",
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"id": 3314,
												"nodeType": "ExpressionStatement",
												"src": "4847:35:41"
											}
										]
									},
									"documentation": {
										"id": 3281,
										"nodeType": "StructuredDocumentation",
										"src": "4376:175:41",
										"text": " @notice output the 0o-prefixed octal string representation of a number\n @param value number to format as string\n @return output formatted string"
									},
									"id": 3316,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toOctString",
									"nameLocation": "4565:11:41",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3284,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3283,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4594:5:41",
												"nodeType": "VariableDeclaration",
												"scope": 3316,
												"src": "4586:13:41",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3282,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4586:7:41",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4576:29:41"
									},
									"returnParameters": {
										"id": 3287,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3286,
												"mutability": "mutable",
												"name": "output",
												"nameLocation": "4643:6:41",
												"nodeType": "VariableDeclaration",
												"scope": 3316,
												"src": "4629:20:41",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 3285,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "4629:6:41",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4628:22:41"
									},
									"scope": 3536,
									"src": "4556:333:41",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3386,
										"nodeType": "Block",
										"src": "5304:461:41",
										"statements": [
											{
												"expression": {
													"id": 3328,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 3326,
														"name": "length",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3321,
														"src": "5364:6:41",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"hexValue": "32",
														"id": 3327,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5374:1:41",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_2_by_1",
															"typeString": "int_const 2"
														},
														"value": "2"
													},
													"src": "5364:11:41",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 3329,
												"nodeType": "ExpressionStatement",
												"src": "5364:11:41"
											},
											{
												"assignments": [
													3331
												],
												"declarations": [
													{
														"constant": false,
														"id": 3331,
														"mutability": "mutable",
														"name": "buffer",
														"nameLocation": "5399:6:41",
														"nodeType": "VariableDeclaration",
														"scope": 3386,
														"src": "5386:19:41",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 3330,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "5386:5:41",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3336,
												"initialValue": {
													"arguments": [
														{
															"id": 3334,
															"name": "length",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3321,
															"src": "5418:6:41",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 3333,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "5408:9:41",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (uint256) pure returns (bytes memory)"
														},
														"typeName": {
															"id": 3332,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "5412:5:41",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														}
													},
													"id": 3335,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5408:17:41",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5386:39:41"
											},
											{
												"expression": {
													"id": 3341,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 3337,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3331,
															"src": "5435:6:41",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 3339,
														"indexExpression": {
															"hexValue": "30",
															"id": 3338,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5442:1:41",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "5435:9:41",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes1",
															"typeString": "bytes1"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 3340,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5447:3:41",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d",
															"typeString": "literal_string \"0\""
														},
														"value": "0"
													},
													"src": "5435:15:41",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes1",
														"typeString": "bytes1"
													}
												},
												"id": 3342,
												"nodeType": "ExpressionStatement",
												"src": "5435:15:41"
											},
											{
												"expression": {
													"id": 3347,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 3343,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3331,
															"src": "5460:6:41",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 3345,
														"indexExpression": {
															"hexValue": "31",
															"id": 3344,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5467:1:41",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "5460:9:41",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes1",
															"typeString": "bytes1"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "6f",
														"id": 3346,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5472:3:41",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_53a63b3ee437e1aa804722ac8f2f57053ac47e1bb887f095340cf5990e7faad3",
															"typeString": "literal_string \"o\""
														},
														"value": "o"
													},
													"src": "5460:15:41",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes1",
														"typeString": "bytes1"
													}
												},
												"id": 3348,
												"nodeType": "ExpressionStatement",
												"src": "5460:15:41"
											},
											{
												"body": {
													"id": 3370,
													"nodeType": "Block",
													"src": "5505:154:41",
													"statements": [
														{
															"id": 3355,
															"nodeType": "UncheckedBlock",
															"src": "5519:51:41",
															"statements": [
																{
																	"expression": {
																		"id": 3353,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "UnaryOperation",
																		"operator": "--",
																		"prefix": false,
																		"src": "5547:8:41",
																		"subExpression": {
																			"id": 3352,
																			"name": "length",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3321,
																			"src": "5547:6:41",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3354,
																	"nodeType": "ExpressionStatement",
																	"src": "5547:8:41"
																}
															]
														},
														{
															"expression": {
																"id": 3364,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 3356,
																		"name": "buffer",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3331,
																		"src": "5584:6:41",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 3358,
																	"indexExpression": {
																		"id": 3357,
																		"name": "length",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3321,
																		"src": "5591:6:41",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "5584:14:41",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"baseExpression": {
																		"id": 3359,
																		"name": "HEX_SYMBOLS",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2982,
																		"src": "5601:11:41",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes16",
																			"typeString": "bytes16"
																		}
																	},
																	"id": 3363,
																	"indexExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 3362,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 3360,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3319,
																			"src": "5613:5:41",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "&",
																		"rightExpression": {
																			"hexValue": "37",
																			"id": 3361,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "5621:1:41",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_7_by_1",
																				"typeString": "int_const 7"
																			},
																			"value": "7"
																		},
																		"src": "5613:9:41",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "5601:22:41",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"src": "5584:39:41",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes1",
																	"typeString": "bytes1"
																}
															},
															"id": 3365,
															"nodeType": "ExpressionStatement",
															"src": "5584:39:41"
														},
														{
															"expression": {
																"id": 3368,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 3366,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3319,
																	"src": "5637:5:41",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": ">>=",
																"rightHandSide": {
																	"hexValue": "33",
																	"id": 3367,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5647:1:41",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_3_by_1",
																		"typeString": "int_const 3"
																	},
																	"value": "3"
																},
																"src": "5637:11:41",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 3369,
															"nodeType": "ExpressionStatement",
															"src": "5637:11:41"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 3351,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3349,
														"name": "length",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3321,
														"src": "5493:6:41",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "32",
														"id": 3350,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5502:1:41",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_2_by_1",
															"typeString": "int_const 2"
														},
														"value": "2"
													},
													"src": "5493:10:41",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3371,
												"nodeType": "WhileStatement",
												"src": "5486:173:41"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 3374,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3372,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3319,
														"src": "5673:5:41",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 3373,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5682:1:41",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "5673:10:41",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3378,
												"nodeType": "IfStatement",
												"src": "5669:55:41",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 3375,
															"name": "UintUtils__InsufficientPadding",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2977,
															"src": "5692:30:41",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$__$",
																"typeString": "function () pure"
															}
														},
														"id": 3376,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5692:32:41",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 3377,
													"nodeType": "RevertStatement",
													"src": "5685:39:41"
												}
											},
											{
												"expression": {
													"id": 3384,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 3379,
														"name": "output",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3324,
														"src": "5735:6:41",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 3382,
																"name": "buffer",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3331,
																"src": "5751:6:41",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"id": 3381,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5744:6:41",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_string_storage_ptr_$",
																"typeString": "type(string storage pointer)"
															},
															"typeName": {
																"id": 3380,
																"name": "string",
																"nodeType": "ElementaryTypeName",
																"src": "5744:6:41",
																"typeDescriptions": {}
															}
														},
														"id": 3383,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5744:14:41",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "5735:23:41",
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"id": 3385,
												"nodeType": "ExpressionStatement",
												"src": "5735:23:41"
											}
										]
									},
									"documentation": {
										"id": 3317,
										"nodeType": "StructuredDocumentation",
										"src": "4895:285:41",
										"text": " @notice output the 0o-prefixed octal string representation of a number padded to given length\n @param value number to format as string\n @param length size to which output should be zero padded (not including prefix)\n @return output formatted string"
									},
									"id": 3387,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toOctString",
									"nameLocation": "5194:11:41",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3322,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3319,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5223:5:41",
												"nodeType": "VariableDeclaration",
												"scope": 3387,
												"src": "5215:13:41",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3318,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5215:7:41",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3321,
												"mutability": "mutable",
												"name": "length",
												"nameLocation": "5246:6:41",
												"nodeType": "VariableDeclaration",
												"scope": 3387,
												"src": "5238:14:41",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3320,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5238:7:41",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5205:53:41"
									},
									"returnParameters": {
										"id": 3325,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3324,
												"mutability": "mutable",
												"name": "output",
												"nameLocation": "5296:6:41",
												"nodeType": "VariableDeclaration",
												"scope": 3387,
												"src": "5282:20:41",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 3323,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5282:6:41",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5281:22:41"
									},
									"scope": 3536,
									"src": "5185:580:41",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3402,
										"nodeType": "Block",
										"src": "6036:45:41",
										"statements": [
											{
												"expression": {
													"id": 3400,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 3395,
														"name": "output",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3393,
														"src": "6046:6:41",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 3397,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3390,
																"src": "6064:5:41",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"hexValue": "3130",
																"id": 3398,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6071:2:41",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10_by_1",
																	"typeString": "int_const 10"
																},
																"value": "10"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_rational_10_by_1",
																	"typeString": "int_const 10"
																}
															],
															"id": 3396,
															"name": "toString",
															"nodeType": "Identifier",
															"overloadedDeclarations": [
																3081,
																3173
															],
															"referencedDeclaration": 3081,
															"src": "6055:8:41",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$",
																"typeString": "function (uint256,uint256) pure returns (string memory)"
															}
														},
														"id": 3399,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6055:19:41",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "6046:28:41",
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"id": 3401,
												"nodeType": "ExpressionStatement",
												"src": "6046:28:41"
											}
										]
									},
									"documentation": {
										"id": 3388,
										"nodeType": "StructuredDocumentation",
										"src": "5771:165:41",
										"text": " @notice output the decimal string representation of a number\n @param value number to format as string\n @return output formatted string"
									},
									"id": 3403,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toDecString",
									"nameLocation": "5950:11:41",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3391,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3390,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5979:5:41",
												"nodeType": "VariableDeclaration",
												"scope": 3403,
												"src": "5971:13:41",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3389,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5971:7:41",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5961:29:41"
									},
									"returnParameters": {
										"id": 3394,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3393,
												"mutability": "mutable",
												"name": "output",
												"nameLocation": "6028:6:41",
												"nodeType": "VariableDeclaration",
												"scope": 3403,
												"src": "6014:20:41",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 3392,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6014:6:41",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6013:22:41"
									},
									"scope": 3536,
									"src": "5941:140:41",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3421,
										"nodeType": "Block",
										"src": "6463:53:41",
										"statements": [
											{
												"expression": {
													"id": 3419,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 3413,
														"name": "output",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3411,
														"src": "6473:6:41",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 3415,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3406,
																"src": "6491:5:41",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"hexValue": "3130",
																"id": 3416,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6498:2:41",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10_by_1",
																	"typeString": "int_const 10"
																},
																"value": "10"
															},
															{
																"id": 3417,
																"name": "length",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3408,
																"src": "6502:6:41",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_rational_10_by_1",
																	"typeString": "int_const 10"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 3414,
															"name": "toString",
															"nodeType": "Identifier",
															"overloadedDeclarations": [
																3081,
																3173
															],
															"referencedDeclaration": 3173,
															"src": "6482:8:41",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$",
																"typeString": "function (uint256,uint256,uint256) pure returns (string memory)"
															}
														},
														"id": 3418,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6482:27:41",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "6473:36:41",
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"id": 3420,
												"nodeType": "ExpressionStatement",
												"src": "6473:36:41"
											}
										]
									},
									"documentation": {
										"id": 3404,
										"nodeType": "StructuredDocumentation",
										"src": "6087:252:41",
										"text": " @notice output the decimal string representation of a number padded to given length\n @param value number to format as string\n @param length size to which output should be zero padded\n @return output formatted string"
									},
									"id": 3422,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toDecString",
									"nameLocation": "6353:11:41",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3409,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3406,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "6382:5:41",
												"nodeType": "VariableDeclaration",
												"scope": 3422,
												"src": "6374:13:41",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3405,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6374:7:41",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3408,
												"mutability": "mutable",
												"name": "length",
												"nameLocation": "6405:6:41",
												"nodeType": "VariableDeclaration",
												"scope": 3422,
												"src": "6397:14:41",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3407,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6397:7:41",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6364:53:41"
									},
									"returnParameters": {
										"id": 3412,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3411,
												"mutability": "mutable",
												"name": "output",
												"nameLocation": "6455:6:41",
												"nodeType": "VariableDeclaration",
												"scope": 3422,
												"src": "6441:20:41",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 3410,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6441:6:41",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6440:22:41"
									},
									"scope": 3536,
									"src": "6344:172:41",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3457,
										"nodeType": "Block",
										"src": "6890:238:41",
										"statements": [
											{
												"assignments": [
													3431
												],
												"declarations": [
													{
														"constant": false,
														"id": 3431,
														"mutability": "mutable",
														"name": "length",
														"nameLocation": "6908:6:41",
														"nodeType": "VariableDeclaration",
														"scope": 3457,
														"src": "6900:14:41",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 3430,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "6900:7:41",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3432,
												"nodeType": "VariableDeclarationStatement",
												"src": "6900:14:41"
											},
											{
												"assignments": [
													3434
												],
												"declarations": [
													{
														"constant": false,
														"id": 3434,
														"mutability": "mutable",
														"name": "temp",
														"nameLocation": "6932:4:41",
														"nodeType": "VariableDeclaration",
														"scope": 3457,
														"src": "6924:12:41",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 3433,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "6924:7:41",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3436,
												"initialValue": {
													"id": 3435,
													"name": "value",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 3425,
													"src": "6939:5:41",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6924:20:41"
											},
											{
												"body": {
													"id": 3445,
													"nodeType": "Block",
													"src": "6958:99:41",
													"statements": [
														{
															"id": 3440,
															"nodeType": "UncheckedBlock",
															"src": "6972:51:41",
															"statements": [
																{
																	"expression": {
																		"id": 3438,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "UnaryOperation",
																		"operator": "++",
																		"prefix": false,
																		"src": "7000:8:41",
																		"subExpression": {
																			"id": 3437,
																			"name": "length",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3431,
																			"src": "7000:6:41",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3439,
																	"nodeType": "ExpressionStatement",
																	"src": "7000:8:41"
																}
															]
														},
														{
															"expression": {
																"id": 3443,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 3441,
																	"name": "temp",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3434,
																	"src": "7036:4:41",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": ">>=",
																"rightHandSide": {
																	"hexValue": "38",
																	"id": 3442,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7045:1:41",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "7036:10:41",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 3444,
															"nodeType": "ExpressionStatement",
															"src": "7036:10:41"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 3448,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3446,
														"name": "temp",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3434,
														"src": "7065:4:41",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 3447,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "7073:1:41",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "7065:9:41",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3449,
												"nodeType": "DoWhileStatement",
												"src": "6955:121:41"
											},
											{
												"expression": {
													"id": 3455,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 3450,
														"name": "output",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3428,
														"src": "7086:6:41",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 3452,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3425,
																"src": "7107:5:41",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"id": 3453,
																"name": "length",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3431,
																"src": "7114:6:41",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 3451,
															"name": "toHexString",
															"nodeType": "Identifier",
															"overloadedDeclarations": [
																3458,
																3535
															],
															"referencedDeclaration": 3535,
															"src": "7095:11:41",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$",
																"typeString": "function (uint256,uint256) pure returns (string memory)"
															}
														},
														"id": 3454,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7095:26:41",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "7086:35:41",
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"id": 3456,
												"nodeType": "ExpressionStatement",
												"src": "7086:35:41"
											}
										]
									},
									"documentation": {
										"id": 3423,
										"nodeType": "StructuredDocumentation",
										"src": "6522:268:41",
										"text": " @notice output the 0x-prefixed hexadecimal string representation of a number\n @dev calculated string length will always be even to prevent splitting of bytes\n @param value number to format as string\n @return output formatted string"
									},
									"id": 3458,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toHexString",
									"nameLocation": "6804:11:41",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3426,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3425,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "6833:5:41",
												"nodeType": "VariableDeclaration",
												"scope": 3458,
												"src": "6825:13:41",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3424,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6825:7:41",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6815:29:41"
									},
									"returnParameters": {
										"id": 3429,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3428,
												"mutability": "mutable",
												"name": "output",
												"nameLocation": "6882:6:41",
												"nodeType": "VariableDeclaration",
												"scope": 3458,
												"src": "6868:20:41",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 3427,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6868:6:41",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6867:22:41"
									},
									"scope": 3536,
									"src": "6795:333:41",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3534,
										"nodeType": "Block",
										"src": "7647:555:41",
										"statements": [
											{
												"id": 3477,
												"nodeType": "UncheckedBlock",
												"src": "7751:61:41",
												"statements": [
													{
														"expression": {
															"id": 3475,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 3468,
																"name": "length",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3463,
																"src": "7775:6:41",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 3474,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 3471,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 3469,
																				"name": "length",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3463,
																				"src": "7785:6:41",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "<<",
																			"rightExpression": {
																				"hexValue": "31",
																				"id": 3470,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "7795:1:41",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_1_by_1",
																					"typeString": "int_const 1"
																				},
																				"value": "1"
																			},
																			"src": "7785:11:41",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 3472,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "7784:13:41",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"hexValue": "32",
																	"id": 3473,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7800:1:41",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"src": "7784:17:41",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7775:26:41",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 3476,
														"nodeType": "ExpressionStatement",
														"src": "7775:26:41"
													}
												]
											},
											{
												"assignments": [
													3479
												],
												"declarations": [
													{
														"constant": false,
														"id": 3479,
														"mutability": "mutable",
														"name": "buffer",
														"nameLocation": "7835:6:41",
														"nodeType": "VariableDeclaration",
														"scope": 3534,
														"src": "7822:19:41",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 3478,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "7822:5:41",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3484,
												"initialValue": {
													"arguments": [
														{
															"id": 3482,
															"name": "length",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3463,
															"src": "7854:6:41",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 3481,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "7844:9:41",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (uint256) pure returns (bytes memory)"
														},
														"typeName": {
															"id": 3480,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "7848:5:41",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														}
													},
													"id": 3483,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7844:17:41",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7822:39:41"
											},
											{
												"expression": {
													"id": 3489,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 3485,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3479,
															"src": "7871:6:41",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 3487,
														"indexExpression": {
															"hexValue": "30",
															"id": 3486,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7878:1:41",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "7871:9:41",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes1",
															"typeString": "bytes1"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 3488,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "7883:3:41",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d",
															"typeString": "literal_string \"0\""
														},
														"value": "0"
													},
													"src": "7871:15:41",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes1",
														"typeString": "bytes1"
													}
												},
												"id": 3490,
												"nodeType": "ExpressionStatement",
												"src": "7871:15:41"
											},
											{
												"expression": {
													"id": 3495,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 3491,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3479,
															"src": "7896:6:41",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 3493,
														"indexExpression": {
															"hexValue": "31",
															"id": 3492,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7903:1:41",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "7896:9:41",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes1",
															"typeString": "bytes1"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "78",
														"id": 3494,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "7908:3:41",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_7521d1cadbcfa91eec65aa16715b94ffc1c9654ba57ea2ef1a2127bca1127a83",
															"typeString": "literal_string \"x\""
														},
														"value": "x"
													},
													"src": "7896:15:41",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes1",
														"typeString": "bytes1"
													}
												},
												"id": 3496,
												"nodeType": "ExpressionStatement",
												"src": "7896:15:41"
											},
											{
												"body": {
													"id": 3518,
													"nodeType": "Block",
													"src": "7941:155:41",
													"statements": [
														{
															"id": 3503,
															"nodeType": "UncheckedBlock",
															"src": "7955:51:41",
															"statements": [
																{
																	"expression": {
																		"id": 3501,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "UnaryOperation",
																		"operator": "--",
																		"prefix": false,
																		"src": "7983:8:41",
																		"subExpression": {
																			"id": 3500,
																			"name": "length",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3463,
																			"src": "7983:6:41",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3502,
																	"nodeType": "ExpressionStatement",
																	"src": "7983:8:41"
																}
															]
														},
														{
															"expression": {
																"id": 3512,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 3504,
																		"name": "buffer",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3479,
																		"src": "8020:6:41",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 3506,
																	"indexExpression": {
																		"id": 3505,
																		"name": "length",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3463,
																		"src": "8027:6:41",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "8020:14:41",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"baseExpression": {
																		"id": 3507,
																		"name": "HEX_SYMBOLS",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2982,
																		"src": "8037:11:41",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes16",
																			"typeString": "bytes16"
																		}
																	},
																	"id": 3511,
																	"indexExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 3510,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 3508,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3461,
																			"src": "8049:5:41",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "&",
																		"rightExpression": {
																			"hexValue": "3135",
																			"id": 3509,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "8057:2:41",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_15_by_1",
																				"typeString": "int_const 15"
																			},
																			"value": "15"
																		},
																		"src": "8049:10:41",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "8037:23:41",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"src": "8020:40:41",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes1",
																	"typeString": "bytes1"
																}
															},
															"id": 3513,
															"nodeType": "ExpressionStatement",
															"src": "8020:40:41"
														},
														{
															"expression": {
																"id": 3516,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 3514,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3461,
																	"src": "8074:5:41",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": ">>=",
																"rightHandSide": {
																	"hexValue": "34",
																	"id": 3515,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8084:1:41",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "8074:11:41",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 3517,
															"nodeType": "ExpressionStatement",
															"src": "8074:11:41"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 3499,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3497,
														"name": "length",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3463,
														"src": "7929:6:41",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "32",
														"id": 3498,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "7938:1:41",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_2_by_1",
															"typeString": "int_const 2"
														},
														"value": "2"
													},
													"src": "7929:10:41",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3519,
												"nodeType": "WhileStatement",
												"src": "7922:174:41"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 3522,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3520,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3461,
														"src": "8110:5:41",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 3521,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "8119:1:41",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "8110:10:41",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3526,
												"nodeType": "IfStatement",
												"src": "8106:55:41",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 3523,
															"name": "UintUtils__InsufficientPadding",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2977,
															"src": "8129:30:41",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$__$",
																"typeString": "function () pure"
															}
														},
														"id": 3524,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8129:32:41",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 3525,
													"nodeType": "RevertStatement",
													"src": "8122:39:41"
												}
											},
											{
												"expression": {
													"id": 3532,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 3527,
														"name": "output",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3466,
														"src": "8172:6:41",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 3530,
																"name": "buffer",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3479,
																"src": "8188:6:41",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"id": 3529,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "8181:6:41",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_string_storage_ptr_$",
																"typeString": "type(string storage pointer)"
															},
															"typeName": {
																"id": 3528,
																"name": "string",
																"nodeType": "ElementaryTypeName",
																"src": "8181:6:41",
																"typeDescriptions": {}
															}
														},
														"id": 3531,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8181:14:41",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "8172:23:41",
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"id": 3533,
												"nodeType": "ExpressionStatement",
												"src": "8172:23:41"
											}
										]
									},
									"documentation": {
										"id": 3459,
										"nodeType": "StructuredDocumentation",
										"src": "7134:389:41",
										"text": " @notice output the 0x-prefixed hexadecimal string representation of a number padded to given length\n @dev calculated string length will always be even to prevent splitting of bytes\n @param value number to format as string\n @param length size (in bytes) to which output should be zero padded (not including prefix)\n @return output formatted string"
									},
									"id": 3535,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toHexString",
									"nameLocation": "7537:11:41",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3464,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3461,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "7566:5:41",
												"nodeType": "VariableDeclaration",
												"scope": 3535,
												"src": "7558:13:41",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3460,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7558:7:41",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3463,
												"mutability": "mutable",
												"name": "length",
												"nameLocation": "7589:6:41",
												"nodeType": "VariableDeclaration",
												"scope": 3535,
												"src": "7581:14:41",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3462,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7581:7:41",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7548:53:41"
									},
									"returnParameters": {
										"id": 3467,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3466,
												"mutability": "mutable",
												"name": "output",
												"nameLocation": "7639:6:41",
												"nodeType": "VariableDeclaration",
												"scope": 3535,
												"src": "7625:20:41",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 3465,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "7625:6:41",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7624:22:41"
									},
									"scope": 3536,
									"src": "7528:674:41",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 3537,
							"src": "209:7995:41",
							"usedErrors": [
								2977,
								2979
							],
							"usedEvents": []
						}
					],
					"src": "33:8172:41"
				},
				"id": 41
			},
			"Eip2535/EIp2535Diamond.sol": {
				"ast": {
					"absolutePath": "Eip2535/EIp2535Diamond.sol",
					"exportedSymbols": {
						"DiamondBase": [
							1077
						],
						"DiamondFallback": [
							1217
						],
						"DiamondReadable": [
							1310
						],
						"DiamondWritable": [
							1882
						],
						"ERC165Base": [
							568
						],
						"ERC165BaseStorage": [
							645
						],
						"Eip2535Diamond": [
							4100
						],
						"Eip2535VotingContract": [
							3912
						],
						"IDiamond": [
							3607
						],
						"IDiamondFallback": [
							1236
						],
						"IERC165": [
							408
						],
						"IERC173": [
							432
						],
						"IERC2535DiamondCut": [
							462
						],
						"IERC2535DiamondLoupe": [
							529
						],
						"IOwnable": [
							10
						],
						"ISafeOwnable": [
							42
						],
						"ISolidStateDiamond": [
							741
						],
						"Ownable": [
							88
						],
						"OwnableInternal": [
							212
						],
						"SafeOwnable": [
							288
						],
						"SolidStateDiamond": [
							1029
						]
					},
					"id": 4101,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 3538,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "30:23:42"
						},
						{
							"absolutePath": "@solidstate/contracts/proxy/diamond/SolidStateDiamond.sol",
							"file": "@solidstate/contracts/proxy/diamond/SolidStateDiamond.sol",
							"id": 3539,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 4101,
							"sourceUnit": 1030,
							"src": "55:67:42",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IDiamond",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 3607,
							"linearizedBaseContracts": [
								3607
							],
							"name": "IDiamond",
							"nameLocation": "134:8:42",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "IDiamond.FacetCutAction",
									"id": 3543,
									"members": [
										{
											"id": 3540,
											"name": "Add",
											"nameLocation": "179:3:42",
											"nodeType": "EnumValue",
											"src": "179:3:42"
										},
										{
											"id": 3541,
											"name": "Replace",
											"nameLocation": "192:7:42",
											"nodeType": "EnumValue",
											"src": "192:7:42"
										},
										{
											"id": 3542,
											"name": "Remove",
											"nameLocation": "209:6:42",
											"nodeType": "EnumValue",
											"src": "209:6:42"
										}
									],
									"name": "FacetCutAction",
									"nameLocation": "154:14:42",
									"nodeType": "EnumDefinition",
									"src": "149:72:42"
								},
								{
									"canonicalName": "IDiamond.FacetCut",
									"id": 3551,
									"members": [
										{
											"constant": false,
											"id": 3545,
											"mutability": "mutable",
											"name": "facetAddress",
											"nameLocation": "260:12:42",
											"nodeType": "VariableDeclaration",
											"scope": 3551,
											"src": "252:20:42",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 3544,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "252:7:42",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 3548,
											"mutability": "mutable",
											"name": "action",
											"nameLocation": "297:6:42",
											"nodeType": "VariableDeclaration",
											"scope": 3551,
											"src": "282:21:42",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_enum$_FacetCutAction_$3543",
												"typeString": "enum IDiamond.FacetCutAction"
											},
											"typeName": {
												"id": 3547,
												"nodeType": "UserDefinedTypeName",
												"pathNode": {
													"id": 3546,
													"name": "FacetCutAction",
													"nameLocations": [
														"282:14:42"
													],
													"nodeType": "IdentifierPath",
													"referencedDeclaration": 3543,
													"src": "282:14:42"
												},
												"referencedDeclaration": 3543,
												"src": "282:14:42",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_FacetCutAction_$3543",
													"typeString": "enum IDiamond.FacetCutAction"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 3550,
											"mutability": "mutable",
											"name": "functionSelector",
											"nameLocation": "320:16:42",
											"nodeType": "VariableDeclaration",
											"scope": 3551,
											"src": "313:23:42",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes4",
												"typeString": "bytes4"
											},
											"typeName": {
												"id": 3549,
												"name": "bytes4",
												"nodeType": "ElementaryTypeName",
												"src": "313:6:42",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "FacetCut",
									"nameLocation": "233:8:42",
									"nodeType": "StructDefinition",
									"scope": 3607,
									"src": "226:146:42",
									"visibility": "public"
								},
								{
									"anonymous": false,
									"eventSelector": "ee80746e1d76a7c4654e1a9d2ff0dde8304b0d72803a25eb48c89fd6eae7ebe8",
									"id": 3561,
									"name": "DiamondCut",
									"nameLocation": "440:10:42",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 3560,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3555,
												"indexed": false,
												"mutability": "mutable",
												"name": "_diamondCut",
												"nameLocation": "462:11:42",
												"nodeType": "VariableDeclaration",
												"scope": 3561,
												"src": "451:22:42",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_struct$_FacetCut_$3551_memory_ptr_$dyn_memory_ptr",
													"typeString": "struct IDiamond.FacetCut[]"
												},
												"typeName": {
													"baseType": {
														"id": 3553,
														"nodeType": "UserDefinedTypeName",
														"pathNode": {
															"id": 3552,
															"name": "FacetCut",
															"nameLocations": [
																"451:8:42"
															],
															"nodeType": "IdentifierPath",
															"referencedDeclaration": 3551,
															"src": "451:8:42"
														},
														"referencedDeclaration": 3551,
														"src": "451:8:42",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_FacetCut_$3551_storage_ptr",
															"typeString": "struct IDiamond.FacetCut"
														}
													},
													"id": 3554,
													"nodeType": "ArrayTypeName",
													"src": "451:10:42",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_FacetCut_$3551_storage_$dyn_storage_ptr",
														"typeString": "struct IDiamond.FacetCut[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3557,
												"indexed": false,
												"mutability": "mutable",
												"name": "_init",
												"nameLocation": "483:5:42",
												"nodeType": "VariableDeclaration",
												"scope": 3561,
												"src": "475:13:42",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3556,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "475:7:42",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3559,
												"indexed": false,
												"mutability": "mutable",
												"name": "_calldata",
												"nameLocation": "496:9:42",
												"nodeType": "VariableDeclaration",
												"scope": 3561,
												"src": "490:15:42",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 3558,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "490:5:42",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "450:56:42"
									},
									"src": "434:73:42"
								},
								{
									"anonymous": false,
									"eventSelector": "dbbc48772584850c2086f66c22a3654c9e46524ff539fd9d72198d91cb7c13c0",
									"id": 3569,
									"name": "CandidateAdded",
									"nameLocation": "519:14:42",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 3568,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3563,
												"indexed": false,
												"mutability": "mutable",
												"name": "_nameOfCandidate",
												"nameLocation": "550:16:42",
												"nodeType": "VariableDeclaration",
												"scope": 3569,
												"src": "543:23:42",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 3562,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "543:6:42",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3565,
												"indexed": true,
												"mutability": "mutable",
												"name": "_voterCardNo",
												"nameLocation": "592:12:42",
												"nodeType": "VariableDeclaration",
												"scope": 3569,
												"src": "576:28:42",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3564,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "576:7:42",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3567,
												"indexed": false,
												"mutability": "mutable",
												"name": "_partyName",
												"nameLocation": "621:10:42",
												"nodeType": "VariableDeclaration",
												"scope": 3569,
												"src": "614:17:42",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 3566,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "614:6:42",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "533:104:42"
									},
									"src": "513:125:42"
								},
								{
									"anonymous": false,
									"eventSelector": "cb87df07b1c304492bd875a5c8b98672eca500939412809ea229afef1d745188",
									"id": 3577,
									"name": "VoteCasted",
									"nameLocation": "649:10:42",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 3576,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3571,
												"indexed": false,
												"mutability": "mutable",
												"name": "_voterAddress",
												"nameLocation": "677:13:42",
												"nodeType": "VariableDeclaration",
												"scope": 3577,
												"src": "669:21:42",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3570,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "669:7:42",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3573,
												"indexed": true,
												"mutability": "mutable",
												"name": "_voterCardNo",
												"nameLocation": "716:12:42",
												"nodeType": "VariableDeclaration",
												"scope": 3577,
												"src": "700:28:42",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3572,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "700:7:42",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3575,
												"indexed": false,
												"mutability": "mutable",
												"name": "_partyNumber",
												"nameLocation": "746:12:42",
												"nodeType": "VariableDeclaration",
												"scope": 3577,
												"src": "738:20:42",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3574,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "738:7:42",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "659:105:42"
									},
									"src": "643:122:42"
								},
								{
									"functionSelector": "9e97d739",
									"id": 3588,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "diamondCut",
									"nameLocation": "780:10:42",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3586,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3581,
												"mutability": "mutable",
												"name": "_diamondCut",
												"nameLocation": "820:11:42",
												"nodeType": "VariableDeclaration",
												"scope": 3588,
												"src": "800:31:42",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_struct$_FacetCut_$3551_calldata_ptr_$dyn_calldata_ptr",
													"typeString": "struct IDiamond.FacetCut[]"
												},
												"typeName": {
													"baseType": {
														"id": 3579,
														"nodeType": "UserDefinedTypeName",
														"pathNode": {
															"id": 3578,
															"name": "FacetCut",
															"nameLocations": [
																"800:8:42"
															],
															"nodeType": "IdentifierPath",
															"referencedDeclaration": 3551,
															"src": "800:8:42"
														},
														"referencedDeclaration": 3551,
														"src": "800:8:42",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_FacetCut_$3551_storage_ptr",
															"typeString": "struct IDiamond.FacetCut"
														}
													},
													"id": 3580,
													"nodeType": "ArrayTypeName",
													"src": "800:10:42",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_FacetCut_$3551_storage_$dyn_storage_ptr",
														"typeString": "struct IDiamond.FacetCut[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3583,
												"mutability": "mutable",
												"name": "_init",
												"nameLocation": "849:5:42",
												"nodeType": "VariableDeclaration",
												"scope": 3588,
												"src": "841:13:42",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3582,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "841:7:42",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3585,
												"mutability": "mutable",
												"name": "_calldata",
												"nameLocation": "879:9:42",
												"nodeType": "VariableDeclaration",
												"scope": 3588,
												"src": "864:24:42",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 3584,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "864:5:42",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "790:104:42"
									},
									"returnParameters": {
										"id": 3587,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "903:0:42"
									},
									"scope": 3607,
									"src": "771:133:42",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "13732d79",
									"id": 3597,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "addCandidateDetails",
									"nameLocation": "971:19:42",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3595,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3590,
												"mutability": "mutable",
												"name": "_nameOfCandidate",
												"nameLocation": "1014:16:42",
												"nodeType": "VariableDeclaration",
												"scope": 3597,
												"src": "1000:30:42",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 3589,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1000:6:42",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3592,
												"mutability": "mutable",
												"name": "_voterCardNo",
												"nameLocation": "1048:12:42",
												"nodeType": "VariableDeclaration",
												"scope": 3597,
												"src": "1040:20:42",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3591,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1040:7:42",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3594,
												"mutability": "mutable",
												"name": "_partyName",
												"nameLocation": "1084:10:42",
												"nodeType": "VariableDeclaration",
												"scope": 3597,
												"src": "1070:24:42",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 3593,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1070:6:42",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "990:110:42"
									},
									"returnParameters": {
										"id": 3596,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1109:0:42"
									},
									"scope": 3607,
									"src": "962:148:42",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "7a26dd31",
									"id": 3606,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "addVoterDetails",
									"nameLocation": "1125:15:42",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3604,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3599,
												"mutability": "mutable",
												"name": "_voterAddress",
												"nameLocation": "1158:13:42",
												"nodeType": "VariableDeclaration",
												"scope": 3606,
												"src": "1150:21:42",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3598,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1150:7:42",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3601,
												"mutability": "mutable",
												"name": "_voterCardNo",
												"nameLocation": "1189:12:42",
												"nodeType": "VariableDeclaration",
												"scope": 3606,
												"src": "1181:20:42",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3600,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1181:7:42",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3603,
												"mutability": "mutable",
												"name": "_partyNUmber",
												"nameLocation": "1219:12:42",
												"nodeType": "VariableDeclaration",
												"scope": 3606,
												"src": "1211:20:42",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3602,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1211:7:42",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1140:97:42"
									},
									"returnParameters": {
										"id": 3605,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1246:0:42"
									},
									"scope": 3607,
									"src": "1116:131:42",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 4101,
							"src": "124:1125:42",
							"usedErrors": [],
							"usedEvents": [
								3561,
								3569,
								3577
							]
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Eip2535VotingContract",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 3912,
							"linearizedBaseContracts": [
								3912
							],
							"name": "Eip2535VotingContract",
							"nameLocation": "1260:21:42",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "Eip2535VotingContract.VoterDetails",
									"id": 3612,
									"members": [
										{
											"constant": false,
											"id": 3609,
											"mutability": "mutable",
											"name": "voterAddress",
											"nameLocation": "1326:12:42",
											"nodeType": "VariableDeclaration",
											"scope": 3612,
											"src": "1318:20:42",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 3608,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1318:7:42",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 3611,
											"mutability": "mutable",
											"name": "partyNumber",
											"nameLocation": "1356:11:42",
											"nodeType": "VariableDeclaration",
											"scope": 3612,
											"src": "1348:19:42",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 3610,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1348:7:42",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "VoterDetails",
									"nameLocation": "1295:12:42",
									"nodeType": "StructDefinition",
									"scope": 3912,
									"src": "1288:86:42",
									"visibility": "public"
								},
								{
									"canonicalName": "Eip2535VotingContract.CandidateDetails",
									"id": 3621,
									"members": [
										{
											"constant": false,
											"id": 3614,
											"mutability": "mutable",
											"name": "nameOfCandidate",
											"nameLocation": "1421:15:42",
											"nodeType": "VariableDeclaration",
											"scope": 3621,
											"src": "1414:22:42",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_string_storage_ptr",
												"typeString": "string"
											},
											"typeName": {
												"id": 3613,
												"name": "string",
												"nodeType": "ElementaryTypeName",
												"src": "1414:6:42",
												"typeDescriptions": {
													"typeIdentifier": "t_string_storage_ptr",
													"typeString": "string"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 3616,
											"mutability": "mutable",
											"name": "voterCardNo",
											"nameLocation": "1454:11:42",
											"nodeType": "VariableDeclaration",
											"scope": 3621,
											"src": "1446:19:42",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											},
											"typeName": {
												"id": 3615,
												"name": "bytes32",
												"nodeType": "ElementaryTypeName",
												"src": "1446:7:42",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 3618,
											"mutability": "mutable",
											"name": "partyName",
											"nameLocation": "1482:9:42",
											"nodeType": "VariableDeclaration",
											"scope": 3621,
											"src": "1475:16:42",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_string_storage_ptr",
												"typeString": "string"
											},
											"typeName": {
												"id": 3617,
												"name": "string",
												"nodeType": "ElementaryTypeName",
												"src": "1475:6:42",
												"typeDescriptions": {
													"typeIdentifier": "t_string_storage_ptr",
													"typeString": "string"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 3620,
											"mutability": "mutable",
											"name": "totalVotes",
											"nameLocation": "1509:10:42",
											"nodeType": "VariableDeclaration",
											"scope": 3621,
											"src": "1501:18:42",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 3619,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1501:7:42",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "CandidateDetails",
									"nameLocation": "1387:16:42",
									"nodeType": "StructDefinition",
									"scope": 3912,
									"src": "1380:146:42",
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "1e51c9ea",
									"id": 3626,
									"mutability": "mutable",
									"name": "voterDetails",
									"nameLocation": "1572:12:42",
									"nodeType": "VariableDeclaration",
									"scope": 3912,
									"src": "1532:52:42",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_VoterDetails_$3612_storage_$",
										"typeString": "mapping(bytes32 => struct Eip2535VotingContract.VoterDetails)"
									},
									"typeName": {
										"id": 3625,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 3622,
											"name": "bytes32",
											"nodeType": "ElementaryTypeName",
											"src": "1540:7:42",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											}
										},
										"nodeType": "Mapping",
										"src": "1532:32:42",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_VoterDetails_$3612_storage_$",
											"typeString": "mapping(bytes32 => struct Eip2535VotingContract.VoterDetails)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 3624,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 3623,
												"name": "VoterDetails",
												"nameLocations": [
													"1551:12:42"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 3612,
												"src": "1551:12:42"
											},
											"referencedDeclaration": 3612,
											"src": "1551:12:42",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_VoterDetails_$3612_storage_ptr",
												"typeString": "struct Eip2535VotingContract.VoterDetails"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "6247e532",
									"id": 3631,
									"mutability": "mutable",
									"name": "candidateDetails",
									"nameLocation": "1634:16:42",
									"nodeType": "VariableDeclaration",
									"scope": 3912,
									"src": "1590:60:42",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_CandidateDetails_$3621_storage_$",
										"typeString": "mapping(uint256 => struct Eip2535VotingContract.CandidateDetails)"
									},
									"typeName": {
										"id": 3630,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 3627,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1598:7:42",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "1590:36:42",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_CandidateDetails_$3621_storage_$",
											"typeString": "mapping(uint256 => struct Eip2535VotingContract.CandidateDetails)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 3629,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 3628,
												"name": "CandidateDetails",
												"nameLocations": [
													"1609:16:42"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 3621,
												"src": "1609:16:42"
											},
											"referencedDeclaration": 3621,
											"src": "1609:16:42",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_CandidateDetails_$3621_storage_ptr",
												"typeString": "struct Eip2535VotingContract.CandidateDetails"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "1b4613cb",
									"id": 3635,
									"mutability": "mutable",
									"name": "hasVoted",
									"nameLocation": "1688:8:42",
									"nodeType": "VariableDeclaration",
									"scope": 3912,
									"src": "1656:40:42",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_bytes32_$_t_bool_$",
										"typeString": "mapping(bytes32 => bool)"
									},
									"typeName": {
										"id": 3634,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 3632,
											"name": "bytes32",
											"nodeType": "ElementaryTypeName",
											"src": "1664:7:42",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											}
										},
										"nodeType": "Mapping",
										"src": "1656:24:42",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_bytes32_$_t_bool_$",
											"typeString": "mapping(bytes32 => bool)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 3633,
											"name": "bool",
											"nodeType": "ElementaryTypeName",
											"src": "1675:4:42",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "6b0eec1c",
									"id": 3639,
									"mutability": "mutable",
									"name": "hasRegistered",
									"nameLocation": "1734:13:42",
									"nodeType": "VariableDeclaration",
									"scope": 3912,
									"src": "1702:45:42",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_bytes32_$_t_bool_$",
										"typeString": "mapping(bytes32 => bool)"
									},
									"typeName": {
										"id": 3638,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 3636,
											"name": "bytes32",
											"nodeType": "ElementaryTypeName",
											"src": "1710:7:42",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											}
										},
										"nodeType": "Mapping",
										"src": "1702:24:42",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_bytes32_$_t_bool_$",
											"typeString": "mapping(bytes32 => bool)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 3637,
											"name": "bool",
											"nodeType": "ElementaryTypeName",
											"src": "1721:4:42",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "0500894d",
									"id": 3641,
									"mutability": "mutable",
									"name": "partyCounter",
									"nameLocation": "1769:12:42",
									"nodeType": "VariableDeclaration",
									"scope": 3912,
									"src": "1754:27:42",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 3640,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1754:7:42",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "4d50ba3a",
									"id": 3643,
									"mutability": "mutable",
									"name": "voterCounter",
									"nameLocation": "1802:12:42",
									"nodeType": "VariableDeclaration",
									"scope": 3912,
									"src": "1787:27:42",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 3642,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1787:7:42",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "e9d729ae",
									"id": 3646,
									"mutability": "mutable",
									"name": "listOfParties",
									"nameLocation": "1836:13:42",
									"nodeType": "VariableDeclaration",
									"scope": 3912,
									"src": "1820:29:42",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_string_storage_$dyn_storage",
										"typeString": "string[]"
									},
									"typeName": {
										"baseType": {
											"id": 3644,
											"name": "string",
											"nodeType": "ElementaryTypeName",
											"src": "1820:6:42",
											"typeDescriptions": {
												"typeIdentifier": "t_string_storage_ptr",
												"typeString": "string"
											}
										},
										"id": 3645,
										"nodeType": "ArrayTypeName",
										"src": "1820:8:42",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_string_storage_$dyn_storage_ptr",
											"typeString": "string[]"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "dfbf53ae",
									"id": 3648,
									"mutability": "mutable",
									"name": "winner",
									"nameLocation": "1869:6:42",
									"nodeType": "VariableDeclaration",
									"scope": 3912,
									"src": "1855:20:42",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 3647,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1855:6:42",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "public"
								},
								{
									"anonymous": false,
									"eventSelector": "dbbc48772584850c2086f66c22a3654c9e46524ff539fd9d72198d91cb7c13c0",
									"id": 3656,
									"name": "CandidateAdded",
									"nameLocation": "1888:14:42",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 3655,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3650,
												"indexed": false,
												"mutability": "mutable",
												"name": "_nameOfCandidate",
												"nameLocation": "1919:16:42",
												"nodeType": "VariableDeclaration",
												"scope": 3656,
												"src": "1912:23:42",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 3649,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1912:6:42",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3652,
												"indexed": true,
												"mutability": "mutable",
												"name": "_voterCardNo",
												"nameLocation": "1961:12:42",
												"nodeType": "VariableDeclaration",
												"scope": 3656,
												"src": "1945:28:42",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3651,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1945:7:42",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3654,
												"indexed": false,
												"mutability": "mutable",
												"name": "_partyName",
												"nameLocation": "1990:10:42",
												"nodeType": "VariableDeclaration",
												"scope": 3656,
												"src": "1983:17:42",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 3653,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1983:6:42",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1902:104:42"
									},
									"src": "1882:125:42"
								},
								{
									"anonymous": false,
									"eventSelector": "cb87df07b1c304492bd875a5c8b98672eca500939412809ea229afef1d745188",
									"id": 3664,
									"name": "VoteCasted",
									"nameLocation": "2019:10:42",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 3663,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3658,
												"indexed": false,
												"mutability": "mutable",
												"name": "_voterAddress",
												"nameLocation": "2047:13:42",
												"nodeType": "VariableDeclaration",
												"scope": 3664,
												"src": "2039:21:42",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3657,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2039:7:42",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3660,
												"indexed": true,
												"mutability": "mutable",
												"name": "_voterCardNo",
												"nameLocation": "2086:12:42",
												"nodeType": "VariableDeclaration",
												"scope": 3664,
												"src": "2070:28:42",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3659,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2070:7:42",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3662,
												"indexed": false,
												"mutability": "mutable",
												"name": "_partyNumber",
												"nameLocation": "2116:12:42",
												"nodeType": "VariableDeclaration",
												"scope": 3664,
												"src": "2108:20:42",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3661,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2108:7:42",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2029:105:42"
									},
									"src": "2013:122:42"
								},
								{
									"body": {
										"id": 3740,
										"nodeType": "Block",
										"src": "2287:648:42",
										"statements": [
											{
												"assignments": [
													3674
												],
												"declarations": [
													{
														"constant": false,
														"id": 3674,
														"mutability": "mutable",
														"name": "voterCard",
														"nameLocation": "2305:9:42",
														"nodeType": "VariableDeclaration",
														"scope": 3740,
														"src": "2297:17:42",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 3673,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "2297:7:42",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3681,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 3678,
																	"name": "_voterCardNo",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3668,
																	"src": "2344:12:42",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 3676,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "2327:3:42",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 3677,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "2331:12:42",
																"memberName": "encodePacked",
																"nodeType": "MemberAccess",
																"src": "2327:16:42",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 3679,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2327:30:42",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 3675,
														"name": "keccak256",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967288,
														"src": "2317:9:42",
														"typeDescriptions": {
															"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
															"typeString": "function (bytes memory) pure returns (bytes32)"
														}
													},
													"id": 3680,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2317:41:42",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2297:61:42"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 3687,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"baseExpression": {
																	"id": 3683,
																	"name": "hasRegistered",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3639,
																	"src": "2389:13:42",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_bytes32_$_t_bool_$",
																		"typeString": "mapping(bytes32 => bool)"
																	}
																},
																"id": 3685,
																"indexExpression": {
																	"id": 3684,
																	"name": "voterCard",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3674,
																	"src": "2403:9:42",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "2389:24:42",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "66616c7365",
																"id": 3686,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2417:5:42",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															"src": "2389:33:42",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "43616e6469646174652068617320616c7265616479206265656e2072656769737465726564",
															"id": 3688,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2436:39:42",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_2c187f4e0f6eb04cdbd9242393a666e35059a52e208c37195b601c63a6b61ec0",
																"typeString": "literal_string \"Candidate has already been registered\""
															},
															"value": "Candidate has already been registered"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_2c187f4e0f6eb04cdbd9242393a666e35059a52e208c37195b601c63a6b61ec0",
																"typeString": "literal_string \"Candidate has already been registered\""
															}
														],
														"id": 3682,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2368:7:42",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 3689,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2368:117:42",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3690,
												"nodeType": "ExpressionStatement",
												"src": "2368:117:42"
											},
											{
												"assignments": [
													3692
												],
												"declarations": [
													{
														"constant": false,
														"id": 3692,
														"mutability": "mutable",
														"name": "_partyNumber",
														"nameLocation": "2503:12:42",
														"nodeType": "VariableDeclaration",
														"scope": 3740,
														"src": "2495:20:42",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 3691,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2495:7:42",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3694,
												"initialValue": {
													"id": 3693,
													"name": "partyCounter",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 3641,
													"src": "2518:12:42",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2495:35:42"
											},
											{
												"expression": {
													"id": 3700,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 3695,
																"name": "candidateDetails",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3631,
																"src": "2540:16:42",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_CandidateDetails_$3621_storage_$",
																	"typeString": "mapping(uint256 => struct Eip2535VotingContract.CandidateDetails storage ref)"
																}
															},
															"id": 3697,
															"indexExpression": {
																"id": 3696,
																"name": "_partyNumber",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3692,
																"src": "2557:12:42",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "2540:30:42",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_CandidateDetails_$3621_storage",
																"typeString": "struct Eip2535VotingContract.CandidateDetails storage ref"
															}
														},
														"id": 3698,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "2571:15:42",
														"memberName": "nameOfCandidate",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 3614,
														"src": "2540:46:42",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 3699,
														"name": "_nameOfCandidate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3666,
														"src": "2589:16:42",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "2540:65:42",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 3701,
												"nodeType": "ExpressionStatement",
												"src": "2540:65:42"
											},
											{
												"expression": {
													"id": 3707,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 3702,
																"name": "candidateDetails",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3631,
																"src": "2615:16:42",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_CandidateDetails_$3621_storage_$",
																	"typeString": "mapping(uint256 => struct Eip2535VotingContract.CandidateDetails storage ref)"
																}
															},
															"id": 3704,
															"indexExpression": {
																"id": 3703,
																"name": "_partyNumber",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3692,
																"src": "2632:12:42",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "2615:30:42",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_CandidateDetails_$3621_storage",
																"typeString": "struct Eip2535VotingContract.CandidateDetails storage ref"
															}
														},
														"id": 3705,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "2646:11:42",
														"memberName": "voterCardNo",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 3616,
														"src": "2615:42:42",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 3706,
														"name": "voterCard",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3674,
														"src": "2660:9:42",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"src": "2615:54:42",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"id": 3708,
												"nodeType": "ExpressionStatement",
												"src": "2615:54:42"
											},
											{
												"expression": {
													"id": 3714,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 3709,
																"name": "candidateDetails",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3631,
																"src": "2679:16:42",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_CandidateDetails_$3621_storage_$",
																	"typeString": "mapping(uint256 => struct Eip2535VotingContract.CandidateDetails storage ref)"
																}
															},
															"id": 3711,
															"indexExpression": {
																"id": 3710,
																"name": "_partyNumber",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3692,
																"src": "2696:12:42",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "2679:30:42",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_CandidateDetails_$3621_storage",
																"typeString": "struct Eip2535VotingContract.CandidateDetails storage ref"
															}
														},
														"id": 3712,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "2710:9:42",
														"memberName": "partyName",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 3618,
														"src": "2679:40:42",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 3713,
														"name": "_partyName",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3670,
														"src": "2722:10:42",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "2679:53:42",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 3715,
												"nodeType": "ExpressionStatement",
												"src": "2679:53:42"
											},
											{
												"expression": {
													"id": 3720,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 3716,
															"name": "hasRegistered",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3639,
															"src": "2742:13:42",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_bytes32_$_t_bool_$",
																"typeString": "mapping(bytes32 => bool)"
															}
														},
														"id": 3718,
														"indexExpression": {
															"id": 3717,
															"name": "voterCard",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3674,
															"src": "2756:9:42",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2742:24:42",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 3719,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2769:4:42",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "2742:31:42",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3721,
												"nodeType": "ExpressionStatement",
												"src": "2742:31:42"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 3725,
															"name": "_partyName",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3670,
															"src": "2802:10:42",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"expression": {
															"id": 3722,
															"name": "listOfParties",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3646,
															"src": "2783:13:42",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_string_storage_$dyn_storage",
																"typeString": "string storage ref[] storage ref"
															}
														},
														"id": 3724,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2797:4:42",
														"memberName": "push",
														"nodeType": "MemberAccess",
														"src": "2783:18:42",
														"typeDescriptions": {
															"typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_string_storage_$dyn_storage_ptr_$_t_string_storage_$returns$__$attached_to$_t_array$_t_string_storage_$dyn_storage_ptr_$",
															"typeString": "function (string storage ref[] storage pointer,string storage ref)"
														}
													},
													"id": 3726,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2783:30:42",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3727,
												"nodeType": "ExpressionStatement",
												"src": "2783:30:42"
											},
											{
												"expression": {
													"id": 3732,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 3728,
														"name": "partyCounter",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3641,
														"src": "2823:12:42",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 3731,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 3729,
															"name": "partyCounter",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3641,
															"src": "2838:12:42",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"hexValue": "31",
															"id": 3730,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2853:1:42",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "2838:16:42",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2823:31:42",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 3733,
												"nodeType": "ExpressionStatement",
												"src": "2823:31:42"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 3735,
															"name": "_nameOfCandidate",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3666,
															"src": "2885:16:42",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														{
															"id": 3736,
															"name": "_voterCardNo",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3668,
															"src": "2903:12:42",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 3737,
															"name": "_partyName",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3670,
															"src": "2917:10:42",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 3734,
														"name": "CandidateAdded",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3656,
														"src": "2870:14:42",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (string memory,uint256,string memory)"
														}
													},
													"id": 3738,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2870:58:42",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3739,
												"nodeType": "EmitStatement",
												"src": "2865:63:42"
											}
										]
									},
									"functionSelector": "13732d79",
									"id": 3741,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "addCandidateDetails",
									"nameLocation": "2150:19:42",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3671,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3666,
												"mutability": "mutable",
												"name": "_nameOfCandidate",
												"nameLocation": "2193:16:42",
												"nodeType": "VariableDeclaration",
												"scope": 3741,
												"src": "2179:30:42",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 3665,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2179:6:42",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3668,
												"mutability": "mutable",
												"name": "_voterCardNo",
												"nameLocation": "2227:12:42",
												"nodeType": "VariableDeclaration",
												"scope": 3741,
												"src": "2219:20:42",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3667,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2219:7:42",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3670,
												"mutability": "mutable",
												"name": "_partyName",
												"nameLocation": "2263:10:42",
												"nodeType": "VariableDeclaration",
												"scope": 3741,
												"src": "2249:24:42",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 3669,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2249:6:42",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2169:110:42"
									},
									"returnParameters": {
										"id": 3672,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2287:0:42"
									},
									"scope": 3912,
									"src": "2141:794:42",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 3761,
										"nodeType": "Block",
										"src": "3048:119:42",
										"statements": [
											{
												"assignments": [
													3749
												],
												"declarations": [
													{
														"constant": false,
														"id": 3749,
														"mutability": "mutable",
														"name": "voterCard",
														"nameLocation": "3066:9:42",
														"nodeType": "VariableDeclaration",
														"scope": 3761,
														"src": "3058:17:42",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 3748,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "3058:7:42",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3756,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 3753,
																	"name": "_voterCardNo",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3743,
																	"src": "3105:12:42",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 3751,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "3088:3:42",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 3752,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "3092:12:42",
																"memberName": "encodePacked",
																"nodeType": "MemberAccess",
																"src": "3088:16:42",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 3754,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3088:30:42",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 3750,
														"name": "keccak256",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967288,
														"src": "3078:9:42",
														"typeDescriptions": {
															"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
															"typeString": "function (bytes memory) pure returns (bytes32)"
														}
													},
													"id": 3755,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3078:41:42",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3058:61:42"
											},
											{
												"expression": {
													"baseExpression": {
														"id": 3757,
														"name": "hasRegistered",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3639,
														"src": "3136:13:42",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_bytes32_$_t_bool_$",
															"typeString": "mapping(bytes32 => bool)"
														}
													},
													"id": 3759,
													"indexExpression": {
														"id": 3758,
														"name": "voterCard",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3749,
														"src": "3150:9:42",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3136:24:42",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 3747,
												"id": 3760,
												"nodeType": "Return",
												"src": "3129:31:42"
											}
										]
									},
									"functionSelector": "b2fb8e37",
									"id": 3762,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "checkCandidateStatus",
									"nameLocation": "2950:20:42",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3744,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3743,
												"mutability": "mutable",
												"name": "_voterCardNo",
												"nameLocation": "2979:12:42",
												"nodeType": "VariableDeclaration",
												"scope": 3762,
												"src": "2971:20:42",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3742,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2971:7:42",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2970:22:42"
									},
									"returnParameters": {
										"id": 3747,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3746,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3762,
												"src": "3038:4:42",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 3745,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3038:4:42",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3037:6:42"
									},
									"scope": 3912,
									"src": "2941:226:42",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 3836,
										"nodeType": "Block",
										"src": "3302:604:42",
										"statements": [
											{
												"expression": {
													"id": 3775,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 3771,
														"name": "voterCounter",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3643,
														"src": "3312:12:42",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 3774,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 3772,
															"name": "voterCounter",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3643,
															"src": "3327:12:42",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"hexValue": "31",
															"id": 3773,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3342:1:42",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "3327:16:42",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3312:31:42",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 3776,
												"nodeType": "ExpressionStatement",
												"src": "3312:31:42"
											},
											{
												"assignments": [
													3778
												],
												"declarations": [
													{
														"constant": false,
														"id": 3778,
														"mutability": "mutable",
														"name": "voterCard",
														"nameLocation": "3361:9:42",
														"nodeType": "VariableDeclaration",
														"scope": 3836,
														"src": "3353:17:42",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 3777,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "3353:7:42",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3785,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 3782,
																	"name": "_voterCardNo",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3766,
																	"src": "3400:12:42",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 3780,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "3383:3:42",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 3781,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "3387:12:42",
																"memberName": "encodePacked",
																"nodeType": "MemberAccess",
																"src": "3383:16:42",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 3783,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3383:30:42",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 3779,
														"name": "keccak256",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967288,
														"src": "3373:9:42",
														"typeDescriptions": {
															"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
															"typeString": "function (bytes memory) pure returns (bytes32)"
														}
													},
													"id": 3784,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3373:41:42",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3353:61:42"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 3791,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"baseExpression": {
																	"id": 3787,
																	"name": "hasVoted",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3635,
																	"src": "3432:8:42",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_bytes32_$_t_bool_$",
																		"typeString": "mapping(bytes32 => bool)"
																	}
																},
																"id": 3789,
																"indexExpression": {
																	"id": 3788,
																	"name": "voterCard",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3778,
																	"src": "3441:9:42",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "3432:19:42",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "66616c7365",
																"id": 3790,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3455:5:42",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															"src": "3432:28:42",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "43616e6469646174652068617320616c726561647920766f746564",
															"id": 3792,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3462:29:42",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_90aca1dee7cbf87125be2e3cfb599559c335409d533b41e2526632e81f0ce4b8",
																"typeString": "literal_string \"Candidate has already voted\""
															},
															"value": "Candidate has already voted"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_90aca1dee7cbf87125be2e3cfb599559c335409d533b41e2526632e81f0ce4b8",
																"typeString": "literal_string \"Candidate has already voted\""
															}
														],
														"id": 3786,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3424:7:42",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 3793,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3424:68:42",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3794,
												"nodeType": "ExpressionStatement",
												"src": "3424:68:42"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3799,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 3796,
																	"name": "listOfParties",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3646,
																	"src": "3523:13:42",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_string_storage_$dyn_storage",
																		"typeString": "string storage ref[] storage ref"
																	}
																},
																"id": 3797,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "3537:6:42",
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "3523:20:42",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"hexValue": "32",
																"id": 3798,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3547:1:42",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"src": "3523:25:42",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "54686572652063616e277420626520656c656374696f6e207769746820612073696e676c65207061727479",
															"id": 3800,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3562:45:42",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_8ae60eef87ea50e2dfeaf131b4cf93241d4a9ae442c59029b80566ca970d987e",
																"typeString": "literal_string \"There can't be election with a single party\""
															},
															"value": "There can't be election with a single party"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_8ae60eef87ea50e2dfeaf131b4cf93241d4a9ae442c59029b80566ca970d987e",
																"typeString": "literal_string \"There can't be election with a single party\""
															}
														],
														"id": 3795,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3502:7:42",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 3801,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3502:115:42",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3802,
												"nodeType": "ExpressionStatement",
												"src": "3502:115:42"
											},
											{
												"expression": {
													"id": 3808,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 3803,
																"name": "voterDetails",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3626,
																"src": "3627:12:42",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_VoterDetails_$3612_storage_$",
																	"typeString": "mapping(bytes32 => struct Eip2535VotingContract.VoterDetails storage ref)"
																}
															},
															"id": 3805,
															"indexExpression": {
																"id": 3804,
																"name": "voterCard",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3778,
																"src": "3640:9:42",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "3627:23:42",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_VoterDetails_$3612_storage",
																"typeString": "struct Eip2535VotingContract.VoterDetails storage ref"
															}
														},
														"id": 3806,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "3651:12:42",
														"memberName": "voterAddress",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 3609,
														"src": "3627:36:42",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 3807,
														"name": "_voterAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3764,
														"src": "3666:13:42",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3627:52:42",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 3809,
												"nodeType": "ExpressionStatement",
												"src": "3627:52:42"
											},
											{
												"expression": {
													"id": 3815,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 3810,
																"name": "voterDetails",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3626,
																"src": "3689:12:42",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_VoterDetails_$3612_storage_$",
																	"typeString": "mapping(bytes32 => struct Eip2535VotingContract.VoterDetails storage ref)"
																}
															},
															"id": 3812,
															"indexExpression": {
																"id": 3811,
																"name": "voterCard",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3778,
																"src": "3702:9:42",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "3689:23:42",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_VoterDetails_$3612_storage",
																"typeString": "struct Eip2535VotingContract.VoterDetails storage ref"
															}
														},
														"id": 3813,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "3713:11:42",
														"memberName": "partyNumber",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 3611,
														"src": "3689:35:42",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 3814,
														"name": "_partyNumber",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3768,
														"src": "3727:12:42",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3689:50:42",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 3816,
												"nodeType": "ExpressionStatement",
												"src": "3689:50:42"
											},
											{
												"expression": {
													"id": 3822,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 3817,
																"name": "candidateDetails",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3631,
																"src": "3749:16:42",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_CandidateDetails_$3621_storage_$",
																	"typeString": "mapping(uint256 => struct Eip2535VotingContract.CandidateDetails storage ref)"
																}
															},
															"id": 3819,
															"indexExpression": {
																"id": 3818,
																"name": "_partyNumber",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3768,
																"src": "3766:12:42",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "3749:30:42",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_CandidateDetails_$3621_storage",
																"typeString": "struct Eip2535VotingContract.CandidateDetails storage ref"
															}
														},
														"id": 3820,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "3780:10:42",
														"memberName": "totalVotes",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 3620,
														"src": "3749:41:42",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"hexValue": "31",
														"id": 3821,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3794:1:42",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "3749:46:42",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 3823,
												"nodeType": "ExpressionStatement",
												"src": "3749:46:42"
											},
											{
												"expression": {
													"id": 3828,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 3824,
															"name": "hasVoted",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3635,
															"src": "3805:8:42",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_bytes32_$_t_bool_$",
																"typeString": "mapping(bytes32 => bool)"
															}
														},
														"id": 3826,
														"indexExpression": {
															"id": 3825,
															"name": "voterCard",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3778,
															"src": "3814:9:42",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "3805:19:42",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 3827,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3827:4:42",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "3805:26:42",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3829,
												"nodeType": "ExpressionStatement",
												"src": "3805:26:42"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 3831,
															"name": "_voterAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3764,
															"src": "3857:13:42",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 3832,
															"name": "_voterCardNo",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3766,
															"src": "3872:12:42",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 3833,
															"name": "_partyNumber",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3768,
															"src": "3886:12:42",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 3830,
														"name": "VoteCasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3664,
														"src": "3846:10:42",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256,uint256)"
														}
													},
													"id": 3834,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3846:53:42",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3835,
												"nodeType": "EmitStatement",
												"src": "3841:58:42"
											}
										]
									},
									"functionSelector": "7a26dd31",
									"id": 3837,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "addVoterDetails",
									"nameLocation": "3182:15:42",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3769,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3764,
												"mutability": "mutable",
												"name": "_voterAddress",
												"nameLocation": "3215:13:42",
												"nodeType": "VariableDeclaration",
												"scope": 3837,
												"src": "3207:21:42",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3763,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3207:7:42",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3766,
												"mutability": "mutable",
												"name": "_voterCardNo",
												"nameLocation": "3246:12:42",
												"nodeType": "VariableDeclaration",
												"scope": 3837,
												"src": "3238:20:42",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3765,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3238:7:42",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3768,
												"mutability": "mutable",
												"name": "_partyNumber",
												"nameLocation": "3276:12:42",
												"nodeType": "VariableDeclaration",
												"scope": 3837,
												"src": "3268:20:42",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3767,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3268:7:42",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3197:97:42"
									},
									"returnParameters": {
										"id": 3770,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3302:0:42"
									},
									"scope": 3912,
									"src": "3173:733:42",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 3857,
										"nodeType": "Block",
										"src": "3987:114:42",
										"statements": [
											{
												"assignments": [
													3845
												],
												"declarations": [
													{
														"constant": false,
														"id": 3845,
														"mutability": "mutable",
														"name": "voterCard",
														"nameLocation": "4005:9:42",
														"nodeType": "VariableDeclaration",
														"scope": 3857,
														"src": "3997:17:42",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 3844,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "3997:7:42",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3852,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 3849,
																	"name": "_voterCardNo",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3839,
																	"src": "4044:12:42",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 3847,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "4027:3:42",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 3848,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "4031:12:42",
																"memberName": "encodePacked",
																"nodeType": "MemberAccess",
																"src": "4027:16:42",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 3850,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4027:30:42",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 3846,
														"name": "keccak256",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967288,
														"src": "4017:9:42",
														"typeDescriptions": {
															"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
															"typeString": "function (bytes memory) pure returns (bytes32)"
														}
													},
													"id": 3851,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4017:41:42",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3997:61:42"
											},
											{
												"expression": {
													"baseExpression": {
														"id": 3853,
														"name": "hasVoted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3635,
														"src": "4075:8:42",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_bytes32_$_t_bool_$",
															"typeString": "mapping(bytes32 => bool)"
														}
													},
													"id": 3855,
													"indexExpression": {
														"id": 3854,
														"name": "voterCard",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3845,
														"src": "4084:9:42",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "4075:19:42",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 3843,
												"id": 3856,
												"nodeType": "Return",
												"src": "4068:26:42"
											}
										]
									},
									"functionSelector": "c93346ab",
									"id": 3858,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "checkVoterStatus",
									"nameLocation": "3921:16:42",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3840,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3839,
												"mutability": "mutable",
												"name": "_voterCardNo",
												"nameLocation": "3946:12:42",
												"nodeType": "VariableDeclaration",
												"scope": 3858,
												"src": "3938:20:42",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3838,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3938:7:42",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3937:22:42"
									},
									"returnParameters": {
										"id": 3843,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3842,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3858,
												"src": "3981:4:42",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 3841,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3981:4:42",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3980:6:42"
									},
									"scope": 3912,
									"src": "3912:189:42",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 3910,
										"nodeType": "Block",
										"src": "4156:358:42",
										"statements": [
											{
												"assignments": [
													3864
												],
												"declarations": [
													{
														"constant": false,
														"id": 3864,
														"mutability": "mutable",
														"name": "temp",
														"nameLocation": "4174:4:42",
														"nodeType": "VariableDeclaration",
														"scope": 3910,
														"src": "4166:12:42",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 3863,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4166:7:42",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3865,
												"nodeType": "VariableDeclarationStatement",
												"src": "4166:12:42"
											},
											{
												"assignments": [
													3867
												],
												"declarations": [
													{
														"constant": false,
														"id": 3867,
														"mutability": "mutable",
														"name": "count",
														"nameLocation": "4196:5:42",
														"nodeType": "VariableDeclaration",
														"scope": 3910,
														"src": "4188:13:42",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 3866,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4188:7:42",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3868,
												"nodeType": "VariableDeclarationStatement",
												"src": "4188:13:42"
											},
											{
												"body": {
													"id": 3899,
													"nodeType": "Block",
													"src": "4262:164:42",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 3885,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 3880,
																	"name": "temp",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3864,
																	"src": "4280:4:42",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"expression": {
																		"baseExpression": {
																			"id": 3881,
																			"name": "candidateDetails",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3631,
																			"src": "4287:16:42",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_CandidateDetails_$3621_storage_$",
																				"typeString": "mapping(uint256 => struct Eip2535VotingContract.CandidateDetails storage ref)"
																			}
																		},
																		"id": 3883,
																		"indexExpression": {
																			"id": 3882,
																			"name": "i",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3870,
																			"src": "4304:1:42",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "4287:19:42",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_CandidateDetails_$3621_storage",
																			"typeString": "struct Eip2535VotingContract.CandidateDetails storage ref"
																		}
																	},
																	"id": 3884,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "4307:10:42",
																	"memberName": "totalVotes",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 3620,
																	"src": "4287:30:42",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4280:37:42",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 3898,
															"nodeType": "IfStatement",
															"src": "4276:140:42",
															"trueBody": {
																"id": 3897,
																"nodeType": "Block",
																"src": "4319:97:42",
																"statements": [
																	{
																		"expression": {
																			"id": 3891,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"id": 3886,
																				"name": "temp",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3864,
																				"src": "4337:4:42",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"expression": {
																					"baseExpression": {
																						"id": 3887,
																						"name": "candidateDetails",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 3631,
																						"src": "4344:16:42",
																						"typeDescriptions": {
																							"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_CandidateDetails_$3621_storage_$",
																							"typeString": "mapping(uint256 => struct Eip2535VotingContract.CandidateDetails storage ref)"
																						}
																					},
																					"id": 3889,
																					"indexExpression": {
																						"id": 3888,
																						"name": "i",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 3870,
																						"src": "4361:1:42",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "IndexAccess",
																					"src": "4344:19:42",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_CandidateDetails_$3621_storage",
																						"typeString": "struct Eip2535VotingContract.CandidateDetails storage ref"
																					}
																				},
																				"id": 3890,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "4364:10:42",
																				"memberName": "totalVotes",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 3620,
																				"src": "4344:30:42",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "4337:37:42",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 3892,
																		"nodeType": "ExpressionStatement",
																		"src": "4337:37:42"
																	},
																	{
																		"expression": {
																			"id": 3895,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"id": 3893,
																				"name": "count",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3867,
																				"src": "4392:5:42",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"id": 3894,
																				"name": "i",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3870,
																				"src": "4400:1:42",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "4392:9:42",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 3896,
																		"nodeType": "ExpressionStatement",
																		"src": "4392:9:42"
																	}
																]
															}
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 3876,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3873,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3870,
														"src": "4231:1:42",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 3874,
															"name": "listOfParties",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3646,
															"src": "4235:13:42",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_string_storage_$dyn_storage",
																"typeString": "string storage ref[] storage ref"
															}
														},
														"id": 3875,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4249:6:42",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "4235:20:42",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4231:24:42",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3900,
												"initializationExpression": {
													"assignments": [
														3870
													],
													"declarations": [
														{
															"constant": false,
															"id": 3870,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "4224:1:42",
															"nodeType": "VariableDeclaration",
															"scope": 3900,
															"src": "4216:9:42",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 3869,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "4216:7:42",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 3872,
													"initialValue": {
														"hexValue": "30",
														"id": 3871,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4228:1:42",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "4216:13:42"
												},
												"isSimpleCounterLoop": true,
												"loopExpression": {
													"expression": {
														"id": 3878,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "4257:3:42",
														"subExpression": {
															"id": 3877,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3870,
															"src": "4257:1:42",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 3879,
													"nodeType": "ExpressionStatement",
													"src": "4257:3:42"
												},
												"nodeType": "ForStatement",
												"src": "4211:215:42"
											},
											{
												"expression": {
													"id": 3906,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 3901,
														"name": "winner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3648,
														"src": "4436:6:42",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"baseExpression": {
																"id": 3902,
																"name": "candidateDetails",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3631,
																"src": "4445:16:42",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_CandidateDetails_$3621_storage_$",
																	"typeString": "mapping(uint256 => struct Eip2535VotingContract.CandidateDetails storage ref)"
																}
															},
															"id": 3904,
															"indexExpression": {
																"id": 3903,
																"name": "count",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3867,
																"src": "4462:5:42",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "4445:23:42",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_CandidateDetails_$3621_storage",
																"typeString": "struct Eip2535VotingContract.CandidateDetails storage ref"
															}
														},
														"id": 3905,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4469:15:42",
														"memberName": "nameOfCandidate",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 3614,
														"src": "4445:39:42",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"src": "4436:48:42",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 3907,
												"nodeType": "ExpressionStatement",
												"src": "4436:48:42"
											},
											{
												"expression": {
													"id": 3908,
													"name": "winner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 3648,
													"src": "4501:6:42",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 3862,
												"id": 3909,
												"nodeType": "Return",
												"src": "4494:13:42"
											}
										]
									},
									"functionSelector": "65372147",
									"id": 3911,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "result",
									"nameLocation": "4116:6:42",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3859,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4122:2:42"
									},
									"returnParameters": {
										"id": 3862,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3861,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3911,
												"src": "4141:13:42",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 3860,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "4141:6:42",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4140:15:42"
									},
									"scope": 3912,
									"src": "4107:407:42",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 4101,
							"src": "1251:3265:42",
							"usedErrors": [],
							"usedEvents": [
								3656,
								3664
							]
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 3913,
										"name": "IDiamond",
										"nameLocations": [
											"5294:8:42"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 3607,
										"src": "5294:8:42"
									},
									"id": 3914,
									"nodeType": "InheritanceSpecifier",
									"src": "5294:8:42"
								}
							],
							"canonicalName": "Eip2535Diamond",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 4100,
							"linearizedBaseContracts": [
								4100,
								3607
							],
							"name": "Eip2535Diamond",
							"nameLocation": "5276:14:42",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"functionSelector": "8da5cb5b",
									"id": 3916,
									"mutability": "mutable",
									"name": "owner",
									"nameLocation": "5324:5:42",
									"nodeType": "VariableDeclaration",
									"scope": 4100,
									"src": "5309:20:42",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 3915,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "5309:7:42",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 3924,
										"nodeType": "Block",
										"src": "5350:35:42",
										"statements": [
											{
												"expression": {
													"id": 3922,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 3919,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3916,
														"src": "5360:5:42",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 3920,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "5368:3:42",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 3921,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5372:6:42",
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "5368:10:42",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5360:18:42",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 3923,
												"nodeType": "ExpressionStatement",
												"src": "5360:18:42"
											}
										]
									},
									"id": 3925,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3917,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5347:2:42"
									},
									"returnParameters": {
										"id": 3918,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5350:0:42"
									},
									"scope": 4100,
									"src": "5336:49:42",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 3976,
										"nodeType": "Block",
										"src": "5434:429:42",
										"statements": [
											{
												"assignments": [
													3935
												],
												"declarations": [
													{
														"constant": false,
														"id": 3935,
														"mutability": "mutable",
														"name": "_facetCuts",
														"nameLocation": "5471:10:42",
														"nodeType": "VariableDeclaration",
														"scope": 3976,
														"src": "5444:37:42",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_struct$_FacetCut_$3551_memory_ptr_$dyn_memory_ptr",
															"typeString": "struct IDiamond.FacetCut[]"
														},
														"typeName": {
															"baseType": {
																"id": 3933,
																"nodeType": "UserDefinedTypeName",
																"pathNode": {
																	"id": 3932,
																	"name": "IDiamond.FacetCut",
																	"nameLocations": [
																		"5444:8:42",
																		"5453:8:42"
																	],
																	"nodeType": "IdentifierPath",
																	"referencedDeclaration": 3551,
																	"src": "5444:17:42"
																},
																"referencedDeclaration": 3551,
																"src": "5444:17:42",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_FacetCut_$3551_storage_ptr",
																	"typeString": "struct IDiamond.FacetCut"
																}
															},
															"id": 3934,
															"nodeType": "ArrayTypeName",
															"src": "5444:19:42",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_FacetCut_$3551_storage_$dyn_storage_ptr",
																"typeString": "struct IDiamond.FacetCut[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3942,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "31",
															"id": 3940,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5508:1:42",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															}
														],
														"id": 3939,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "5484:23:42",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_struct$_FacetCut_$3551_memory_ptr_$dyn_memory_ptr_$",
															"typeString": "function (uint256) pure returns (struct IDiamond.FacetCut memory[] memory)"
														},
														"typeName": {
															"baseType": {
																"id": 3937,
																"nodeType": "UserDefinedTypeName",
																"pathNode": {
																	"id": 3936,
																	"name": "IDiamond.FacetCut",
																	"nameLocations": [
																		"5488:8:42",
																		"5497:8:42"
																	],
																	"nodeType": "IdentifierPath",
																	"referencedDeclaration": 3551,
																	"src": "5488:17:42"
																},
																"referencedDeclaration": 3551,
																"src": "5488:17:42",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_FacetCut_$3551_storage_ptr",
																	"typeString": "struct IDiamond.FacetCut"
																}
															},
															"id": 3938,
															"nodeType": "ArrayTypeName",
															"src": "5488:19:42",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_FacetCut_$3551_storage_$dyn_storage_ptr",
																"typeString": "struct IDiamond.FacetCut[]"
															}
														}
													},
													"id": 3941,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5484:26:42",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_FacetCut_$3551_memory_ptr_$dyn_memory_ptr",
														"typeString": "struct IDiamond.FacetCut memory[] memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5444:66:42"
											},
											{
												"expression": {
													"id": 3959,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 3943,
															"name": "_facetCuts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3935,
															"src": "5520:10:42",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_FacetCut_$3551_memory_ptr_$dyn_memory_ptr",
																"typeString": "struct IDiamond.FacetCut memory[] memory"
															}
														},
														"id": 3945,
														"indexExpression": {
															"hexValue": "30",
															"id": 3944,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5531:1:42",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "5520:13:42",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_FacetCut_$3551_memory_ptr",
															"typeString": "struct IDiamond.FacetCut memory"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 3948,
																"name": "_facet",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3927,
																"src": "5582:6:42",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"expression": {
																	"expression": {
																		"id": 3949,
																		"name": "IDiamond",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3607,
																		"src": "5610:8:42",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_IDiamond_$3607_$",
																			"typeString": "type(contract IDiamond)"
																		}
																	},
																	"id": 3950,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "5619:14:42",
																	"memberName": "FacetCutAction",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 3543,
																	"src": "5610:23:42",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_enum$_FacetCutAction_$3543_$",
																		"typeString": "type(enum IDiamond.FacetCutAction)"
																	}
																},
																"id": 3951,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "5634:3:42",
																"memberName": "Add",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 3540,
																"src": "5610:27:42",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_FacetCutAction_$3543",
																	"typeString": "enum IDiamond.FacetCutAction"
																}
															},
															{
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "61646443616e64696461746544657461696c7328737472696e672c7574696e3235362c737472696e6729",
																				"id": 3955,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "string",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "5703:44:42",
																				"typeDescriptions": {
																					"typeIdentifier": "t_stringliteral_fccc64d4ecf61c9e0f8742be19f531f5c8c97766158dda8496fed5401763dc96",
																					"typeString": "literal_string \"addCandidateDetails(string,utin256,string)\""
																				},
																				"value": "addCandidateDetails(string,utin256,string)"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_stringliteral_fccc64d4ecf61c9e0f8742be19f531f5c8c97766158dda8496fed5401763dc96",
																					"typeString": "literal_string \"addCandidateDetails(string,utin256,string)\""
																				}
																			],
																			"id": 3954,
																			"name": "keccak256",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967288,
																			"src": "5693:9:42",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																				"typeString": "function (bytes memory) pure returns (bytes32)"
																			}
																		},
																		"id": 3956,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5693:55:42",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	],
																	"id": 3953,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "5669:6:42",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bytes4_$",
																		"typeString": "type(bytes4)"
																	},
																	"typeName": {
																		"id": 3952,
																		"name": "bytes4",
																		"nodeType": "ElementaryTypeName",
																		"src": "5669:6:42",
																		"typeDescriptions": {}
																	}
																},
																"id": 3957,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5669:93:42",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_enum$_FacetCutAction_$3543",
																	"typeString": "enum IDiamond.FacetCutAction"
																},
																{
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															],
															"expression": {
																"id": 3946,
																"name": "IDiamond",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3607,
																"src": "5536:8:42",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IDiamond_$3607_$",
																	"typeString": "type(contract IDiamond)"
																}
															},
															"id": 3947,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5545:8:42",
															"memberName": "FacetCut",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 3551,
															"src": "5536:17:42",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_struct$_FacetCut_$3551_storage_ptr_$",
																"typeString": "type(struct IDiamond.FacetCut storage pointer)"
															}
														},
														"id": 3958,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "structConstructorCall",
														"lValueRequested": false,
														"nameLocations": [
															"5568:12:42",
															"5602:6:42",
															"5651:16:42"
														],
														"names": [
															"facetAddress",
															"action",
															"functionSelector"
														],
														"nodeType": "FunctionCall",
														"src": "5536:237:42",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_FacetCut_$3551_memory_ptr",
															"typeString": "struct IDiamond.FacetCut memory"
														}
													},
													"src": "5520:253:42",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_FacetCut_$3551_memory_ptr",
														"typeString": "struct IDiamond.FacetCut memory"
													}
												},
												"id": 3960,
												"nodeType": "ExpressionStatement",
												"src": "5520:253:42"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 3968,
															"name": "_facetCuts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3935,
															"src": "5818:10:42",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_FacetCut_$3551_memory_ptr_$dyn_memory_ptr",
																"typeString": "struct IDiamond.FacetCut memory[] memory"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 3971,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5838:1:42",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 3970,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "5830:7:42",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 3969,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "5830:7:42",
																	"typeDescriptions": {}
																}
															},
															"id": 3972,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5830:10:42",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"hexValue": "",
															"id": 3973,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5842:2:42",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_array$_t_struct$_FacetCut_$3551_memory_ptr_$dyn_memory_ptr",
																"typeString": "struct IDiamond.FacetCut memory[] memory"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 3964,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "5800:4:42",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Eip2535Diamond_$4100",
																				"typeString": "contract Eip2535Diamond"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Eip2535Diamond_$4100",
																				"typeString": "contract Eip2535Diamond"
																			}
																		],
																		"id": 3963,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "5792:7:42",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 3962,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "5792:7:42",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 3965,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5792:13:42",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 3961,
																"name": "IDiamond",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3607,
																"src": "5783:8:42",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IDiamond_$3607_$",
																	"typeString": "type(contract IDiamond)"
																}
															},
															"id": 3966,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5783:23:42",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IDiamond_$3607",
																"typeString": "contract IDiamond"
															}
														},
														"id": 3967,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5807:10:42",
														"memberName": "diamondCut",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 3588,
														"src": "5783:34:42",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_array$_t_struct$_FacetCut_$3551_memory_ptr_$dyn_memory_ptr_$_t_address_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (struct IDiamond.FacetCut memory[] memory,address,bytes memory) external"
														}
													},
													"id": 3974,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5783:62:42",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3975,
												"nodeType": "ExpressionStatement",
												"src": "5783:62:42"
											}
										]
									},
									"functionSelector": "a67a117b",
									"id": 3977,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "addFacet",
									"nameLocation": "5400:8:42",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3928,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3927,
												"mutability": "mutable",
												"name": "_facet",
												"nameLocation": "5417:6:42",
												"nodeType": "VariableDeclaration",
												"scope": 3977,
												"src": "5409:14:42",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3926,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5409:7:42",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5408:16:42"
									},
									"returnParameters": {
										"id": 3929,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5434:0:42"
									},
									"scope": 4100,
									"src": "5391:472:42",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										3588
									],
									"body": {
										"id": 4066,
										"nodeType": "Block",
										"src": "6002:705:42",
										"statements": [
											{
												"body": {
													"id": 4064,
													"nodeType": "Block",
													"src": "6057:644:42",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 4006,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"baseExpression": {
																			"id": 3998,
																			"name": "_diamondCut",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3981,
																			"src": "6075:11:42",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_struct$_FacetCut_$3551_calldata_ptr_$dyn_calldata_ptr",
																				"typeString": "struct IDiamond.FacetCut calldata[] calldata"
																			}
																		},
																		"id": 4000,
																		"indexExpression": {
																			"id": 3999,
																			"name": "i",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3989,
																			"src": "6087:1:42",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "6075:14:42",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_FacetCut_$3551_calldata_ptr",
																			"typeString": "struct IDiamond.FacetCut calldata"
																		}
																	},
																	"id": 4001,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "6090:12:42",
																	"memberName": "facetAddress",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 3545,
																	"src": "6075:27:42",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"arguments": [
																		{
																			"hexValue": "30",
																			"id": 4004,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "6114:1:42",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			}
																		],
																		"id": 4003,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "6106:7:42",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 4002,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "6106:7:42",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 4005,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "6106:10:42",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "6075:41:42",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"id": 4062,
																"nodeType": "Block",
																"src": "6262:429:42",
																"statements": [
																	{
																		"assignments": [
																			4025,
																			null
																		],
																		"declarations": [
																			{
																				"constant": false,
																				"id": 4025,
																				"mutability": "mutable",
																				"name": "success",
																				"nameLocation": "6286:7:42",
																				"nodeType": "VariableDeclaration",
																				"scope": 4062,
																				"src": "6281:12:42",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				},
																				"typeName": {
																					"id": 4024,
																					"name": "bool",
																					"nodeType": "ElementaryTypeName",
																					"src": "6281:4:42",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				"visibility": "internal"
																			},
																			null
																		],
																		"id": 4050,
																		"initialValue": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"expression": {
																								"baseExpression": {
																									"id": 4033,
																									"name": "_diamondCut",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 3981,
																									"src": "6403:11:42",
																									"typeDescriptions": {
																										"typeIdentifier": "t_array$_t_struct$_FacetCut_$3551_calldata_ptr_$dyn_calldata_ptr",
																										"typeString": "struct IDiamond.FacetCut calldata[] calldata"
																									}
																								},
																								"id": 4035,
																								"indexExpression": {
																									"id": 4034,
																									"name": "i",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 3989,
																									"src": "6415:1:42",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"nodeType": "IndexAccess",
																								"src": "6403:14:42",
																								"typeDescriptions": {
																									"typeIdentifier": "t_struct$_FacetCut_$3551_calldata_ptr",
																									"typeString": "struct IDiamond.FacetCut calldata"
																								}
																							},
																							"id": 4036,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberLocation": "6418:16:42",
																							"memberName": "functionSelector",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 3550,
																							"src": "6403:31:42",
																							"typeDescriptions": {
																								"typeIdentifier": "t_bytes4",
																								"typeString": "bytes4"
																							}
																						},
																						{
																							"arguments": [
																								{
																									"baseExpression": {
																										"id": 4039,
																										"name": "_diamondCut",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 3981,
																										"src": "6471:11:42",
																										"typeDescriptions": {
																											"typeIdentifier": "t_array$_t_struct$_FacetCut_$3551_calldata_ptr_$dyn_calldata_ptr",
																											"typeString": "struct IDiamond.FacetCut calldata[] calldata"
																										}
																									},
																									"id": 4041,
																									"indexExpression": {
																										"id": 4040,
																										"name": "i",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 3989,
																										"src": "6483:1:42",
																										"typeDescriptions": {
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										}
																									},
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": false,
																									"lValueRequested": false,
																									"nodeType": "IndexAccess",
																									"src": "6471:14:42",
																									"typeDescriptions": {
																										"typeIdentifier": "t_struct$_FacetCut_$3551_calldata_ptr",
																										"typeString": "struct IDiamond.FacetCut calldata"
																									}
																								},
																								{
																									"arguments": [
																										{
																											"hexValue": "30",
																											"id": 4044,
																											"isConstant": false,
																											"isLValue": false,
																											"isPure": true,
																											"kind": "number",
																											"lValueRequested": false,
																											"nodeType": "Literal",
																											"src": "6495:1:42",
																											"typeDescriptions": {
																												"typeIdentifier": "t_rational_0_by_1",
																												"typeString": "int_const 0"
																											},
																											"value": "0"
																										}
																									],
																									"expression": {
																										"argumentTypes": [
																											{
																												"typeIdentifier": "t_rational_0_by_1",
																												"typeString": "int_const 0"
																											}
																										],
																										"id": 4043,
																										"isConstant": false,
																										"isLValue": false,
																										"isPure": true,
																										"lValueRequested": false,
																										"nodeType": "ElementaryTypeNameExpression",
																										"src": "6487:7:42",
																										"typeDescriptions": {
																											"typeIdentifier": "t_type$_t_address_$",
																											"typeString": "type(address)"
																										},
																										"typeName": {
																											"id": 4042,
																											"name": "address",
																											"nodeType": "ElementaryTypeName",
																											"src": "6487:7:42",
																											"typeDescriptions": {}
																										}
																									},
																									"id": 4045,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"kind": "typeConversion",
																									"lValueRequested": false,
																									"nameLocations": [],
																									"names": [],
																									"nodeType": "FunctionCall",
																									"src": "6487:10:42",
																									"tryCall": false,
																									"typeDescriptions": {
																										"typeIdentifier": "t_address",
																										"typeString": "address"
																									}
																								},
																								{
																									"id": 4046,
																									"name": "_calldata",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 3985,
																									"src": "6499:9:42",
																									"typeDescriptions": {
																										"typeIdentifier": "t_bytes_calldata_ptr",
																										"typeString": "bytes calldata"
																									}
																								}
																							],
																							"expression": {
																								"argumentTypes": [
																									{
																										"typeIdentifier": "t_struct$_FacetCut_$3551_calldata_ptr",
																										"typeString": "struct IDiamond.FacetCut calldata"
																									},
																									{
																										"typeIdentifier": "t_address",
																										"typeString": "address"
																									},
																									{
																										"typeIdentifier": "t_bytes_calldata_ptr",
																										"typeString": "bytes calldata"
																									}
																								],
																								"expression": {
																									"id": 4037,
																									"name": "abi",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 4294967295,
																									"src": "6460:3:42",
																									"typeDescriptions": {
																										"typeIdentifier": "t_magic_abi",
																										"typeString": "abi"
																									}
																								},
																								"id": 4038,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": true,
																								"lValueRequested": false,
																								"memberLocation": "6464:6:42",
																								"memberName": "encode",
																								"nodeType": "MemberAccess",
																								"src": "6460:10:42",
																								"typeDescriptions": {
																									"typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
																									"typeString": "function () pure returns (bytes memory)"
																								}
																							},
																							"id": 4047,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"kind": "functionCall",
																							"lValueRequested": false,
																							"nameLocations": [],
																							"names": [],
																							"nodeType": "FunctionCall",
																							"src": "6460:49:42",
																							"tryCall": false,
																							"typeDescriptions": {
																								"typeIdentifier": "t_bytes_memory_ptr",
																								"typeString": "bytes memory"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_bytes4",
																								"typeString": "bytes4"
																							},
																							{
																								"typeIdentifier": "t_bytes_memory_ptr",
																								"typeString": "bytes memory"
																							}
																						],
																						"expression": {
																							"id": 4031,
																							"name": "abi",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 4294967295,
																							"src": "6361:3:42",
																							"typeDescriptions": {
																								"typeIdentifier": "t_magic_abi",
																								"typeString": "abi"
																							}
																						},
																						"id": 4032,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"memberLocation": "6365:12:42",
																						"memberName": "encodePacked",
																						"nodeType": "MemberAccess",
																						"src": "6361:16:42",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																							"typeString": "function () pure returns (bytes memory)"
																						}
																					},
																					"id": 4048,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "6361:170:42",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes_memory_ptr",
																						"typeString": "bytes memory"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_bytes_memory_ptr",
																						"typeString": "bytes memory"
																					}
																				],
																				"expression": {
																					"expression": {
																						"baseExpression": {
																							"id": 4026,
																							"name": "_diamondCut",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 3981,
																							"src": "6299:11:42",
																							"typeDescriptions": {
																								"typeIdentifier": "t_array$_t_struct$_FacetCut_$3551_calldata_ptr_$dyn_calldata_ptr",
																								"typeString": "struct IDiamond.FacetCut calldata[] calldata"
																							}
																						},
																						"id": 4028,
																						"indexExpression": {
																							"id": 4027,
																							"name": "i",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 3989,
																							"src": "6311:1:42",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"nodeType": "IndexAccess",
																						"src": "6299:14:42",
																						"typeDescriptions": {
																							"typeIdentifier": "t_struct$_FacetCut_$3551_calldata_ptr",
																							"typeString": "struct IDiamond.FacetCut calldata"
																						}
																					},
																					"id": 4029,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberLocation": "6314:12:42",
																					"memberName": "facetAddress",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 3545,
																					"src": "6299:27:42",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				"id": 4030,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "6327:12:42",
																				"memberName": "delegatecall",
																				"nodeType": "MemberAccess",
																				"src": "6299:40:42",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																					"typeString": "function (bytes memory) returns (bool,bytes memory)"
																				}
																			},
																			"id": 4049,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "6299:250:42",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
																				"typeString": "tuple(bool,bytes memory)"
																			}
																		},
																		"nodeType": "VariableDeclarationStatement",
																		"src": "6280:269:42"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 4052,
																					"name": "success",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4025,
																					"src": "6575:7:42",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				{
																					"hexValue": "4661636574206d6f64696669636174696f6e206661696c6564",
																					"id": 4053,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "string",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "6584:27:42",
																					"typeDescriptions": {
																						"typeIdentifier": "t_stringliteral_3e171e1bc4293dc8012e866cb04b58106ab144d1167c321b7083a8d2ce68c5e4",
																						"typeString": "literal_string \"Facet modification failed\""
																					},
																					"value": "Facet modification failed"
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					},
																					{
																						"typeIdentifier": "t_stringliteral_3e171e1bc4293dc8012e866cb04b58106ab144d1167c321b7083a8d2ce68c5e4",
																						"typeString": "literal_string \"Facet modification failed\""
																					}
																				],
																				"id": 4051,
																				"name": "require",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [
																					4294967278,
																					4294967278
																				],
																				"referencedDeclaration": 4294967278,
																				"src": "6567:7:42",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																					"typeString": "function (bool,string memory) pure"
																				}
																			},
																			"id": 4054,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "6567:45:42",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 4055,
																		"nodeType": "ExpressionStatement",
																		"src": "6567:45:42"
																	},
																	{
																		"eventCall": {
																			"arguments": [
																				{
																					"id": 4057,
																					"name": "_diamondCut",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3981,
																					"src": "6646:11:42",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_struct$_FacetCut_$3551_calldata_ptr_$dyn_calldata_ptr",
																						"typeString": "struct IDiamond.FacetCut calldata[] calldata"
																					}
																				},
																				{
																					"id": 4058,
																					"name": "_init",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3983,
																					"src": "6659:5:42",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 4059,
																					"name": "_calldata",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3985,
																					"src": "6666:9:42",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes_calldata_ptr",
																						"typeString": "bytes calldata"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_array$_t_struct$_FacetCut_$3551_calldata_ptr_$dyn_calldata_ptr",
																						"typeString": "struct IDiamond.FacetCut calldata[] calldata"
																					},
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_bytes_calldata_ptr",
																						"typeString": "bytes calldata"
																					}
																				],
																				"id": 4056,
																				"name": "DiamondCut",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3561,
																				"src": "6635:10:42",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_event_nonpayable$_t_array$_t_struct$_FacetCut_$3551_memory_ptr_$dyn_memory_ptr_$_t_address_$_t_bytes_memory_ptr_$returns$__$",
																					"typeString": "function (struct IDiamond.FacetCut memory[] memory,address,bytes memory)"
																				}
																			},
																			"id": 4060,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "6635:41:42",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 4061,
																		"nodeType": "EmitStatement",
																		"src": "6630:46:42"
																	}
																]
															},
															"id": 4063,
															"nodeType": "IfStatement",
															"src": "6071:620:42",
															"trueBody": {
																"id": 4023,
																"nodeType": "Block",
																"src": "6118:138:42",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"commonType": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					"id": 4013,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 4008,
																						"name": "_init",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 3983,
																						"src": "6144:5:42",
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "!=",
																					"rightExpression": {
																						"arguments": [
																							{
																								"hexValue": "30",
																								"id": 4011,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": true,
																								"kind": "number",
																								"lValueRequested": false,
																								"nodeType": "Literal",
																								"src": "6161:1:42",
																								"typeDescriptions": {
																									"typeIdentifier": "t_rational_0_by_1",
																									"typeString": "int_const 0"
																								},
																								"value": "0"
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_rational_0_by_1",
																									"typeString": "int_const 0"
																								}
																							],
																							"id": 4010,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"nodeType": "ElementaryTypeNameExpression",
																							"src": "6153:7:42",
																							"typeDescriptions": {
																								"typeIdentifier": "t_type$_t_address_$",
																								"typeString": "type(address)"
																							},
																							"typeName": {
																								"id": 4009,
																								"name": "address",
																								"nodeType": "ElementaryTypeName",
																								"src": "6153:7:42",
																								"typeDescriptions": {}
																							}
																						},
																						"id": 4012,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "typeConversion",
																						"lValueRequested": false,
																						"nameLocations": [],
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "6153:10:42",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					},
																					"src": "6144:19:42",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				{
																					"hexValue": "496e76616c696420696e697469616c697a652061646472657373",
																					"id": 4014,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "string",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "6165:28:42",
																					"typeDescriptions": {
																						"typeIdentifier": "t_stringliteral_945c9de7d462e2062e246bb52c3f039fb3d4db67a6f9243fcb5c6410338702c3",
																						"typeString": "literal_string \"Invalid initialize address\""
																					},
																					"value": "Invalid initialize address"
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					},
																					{
																						"typeIdentifier": "t_stringliteral_945c9de7d462e2062e246bb52c3f039fb3d4db67a6f9243fcb5c6410338702c3",
																						"typeString": "literal_string \"Invalid initialize address\""
																					}
																				],
																				"id": 4007,
																				"name": "require",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [
																					4294967278,
																					4294967278
																				],
																				"referencedDeclaration": 4294967278,
																				"src": "6136:7:42",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																					"typeString": "function (bool,string memory) pure"
																				}
																			},
																			"id": 4015,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "6136:58:42",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 4016,
																		"nodeType": "ExpressionStatement",
																		"src": "6136:58:42"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 4020,
																					"name": "_calldata",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3985,
																					"src": "6231:9:42",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes_calldata_ptr",
																						"typeString": "bytes calldata"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_bytes_calldata_ptr",
																						"typeString": "bytes calldata"
																					}
																				],
																				"expression": {
																					"id": 4017,
																					"name": "_init",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3983,
																					"src": "6212:5:42",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				"id": 4019,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "6218:12:42",
																				"memberName": "delegatecall",
																				"nodeType": "MemberAccess",
																				"src": "6212:18:42",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																					"typeString": "function (bytes memory) returns (bool,bytes memory)"
																				}
																			},
																			"id": 4021,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "6212:29:42",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
																				"typeString": "tuple(bool,bytes memory)"
																			}
																		},
																		"id": 4022,
																		"nodeType": "ExpressionStatement",
																		"src": "6212:29:42"
																	}
																]
															}
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 3994,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3991,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3989,
														"src": "6028:1:42",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 3992,
															"name": "_diamondCut",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3981,
															"src": "6032:11:42",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_FacetCut_$3551_calldata_ptr_$dyn_calldata_ptr",
																"typeString": "struct IDiamond.FacetCut calldata[] calldata"
															}
														},
														"id": 3993,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6044:6:42",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "6032:18:42",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6028:22:42",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 4065,
												"initializationExpression": {
													"assignments": [
														3989
													],
													"declarations": [
														{
															"constant": false,
															"id": 3989,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "6025:1:42",
															"nodeType": "VariableDeclaration",
															"scope": 4065,
															"src": "6017:9:42",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 3988,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "6017:7:42",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 3990,
													"nodeType": "VariableDeclarationStatement",
													"src": "6017:9:42"
												},
												"isSimpleCounterLoop": true,
												"loopExpression": {
													"expression": {
														"id": 3996,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "6052:3:42",
														"subExpression": {
															"id": 3995,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3989,
															"src": "6052:1:42",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 3997,
													"nodeType": "ExpressionStatement",
													"src": "6052:3:42"
												},
												"nodeType": "ForStatement",
												"src": "6012:689:42"
											}
										]
									},
									"functionSelector": "9e97d739",
									"id": 4067,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "diamondCut",
									"nameLocation": "5878:10:42",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3986,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3981,
												"mutability": "mutable",
												"name": "_diamondCut",
												"nameLocation": "5918:11:42",
												"nodeType": "VariableDeclaration",
												"scope": 4067,
												"src": "5898:31:42",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_struct$_FacetCut_$3551_calldata_ptr_$dyn_calldata_ptr",
													"typeString": "struct IDiamond.FacetCut[]"
												},
												"typeName": {
													"baseType": {
														"id": 3979,
														"nodeType": "UserDefinedTypeName",
														"pathNode": {
															"id": 3978,
															"name": "FacetCut",
															"nameLocations": [
																"5898:8:42"
															],
															"nodeType": "IdentifierPath",
															"referencedDeclaration": 3551,
															"src": "5898:8:42"
														},
														"referencedDeclaration": 3551,
														"src": "5898:8:42",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_FacetCut_$3551_storage_ptr",
															"typeString": "struct IDiamond.FacetCut"
														}
													},
													"id": 3980,
													"nodeType": "ArrayTypeName",
													"src": "5898:10:42",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_FacetCut_$3551_storage_$dyn_storage_ptr",
														"typeString": "struct IDiamond.FacetCut[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3983,
												"mutability": "mutable",
												"name": "_init",
												"nameLocation": "5947:5:42",
												"nodeType": "VariableDeclaration",
												"scope": 4067,
												"src": "5939:13:42",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3982,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5939:7:42",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3985,
												"mutability": "mutable",
												"name": "_calldata",
												"nameLocation": "5977:9:42",
												"nodeType": "VariableDeclaration",
												"scope": 4067,
												"src": "5962:24:42",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 3984,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5962:5:42",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5888:104:42"
									},
									"returnParameters": {
										"id": 3987,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6002:0:42"
									},
									"scope": 4100,
									"src": "5869:838:42",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										3597
									],
									"body": {
										"id": 4082,
										"nodeType": "Block",
										"src": "6861:80:42",
										"statements": [
											{
												"eventCall": {
													"arguments": [
														{
															"id": 4077,
															"name": "_nameOfCandidate",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4069,
															"src": "6891:16:42",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														{
															"id": 4078,
															"name": "_voterCardNo",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4071,
															"src": "6909:12:42",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 4079,
															"name": "_partyName",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4073,
															"src": "6923:10:42",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 4076,
														"name": "CandidateAdded",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3569,
														"src": "6876:14:42",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (string memory,uint256,string memory)"
														}
													},
													"id": 4080,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6876:58:42",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 4081,
												"nodeType": "EmitStatement",
												"src": "6871:63:42"
											}
										]
									},
									"functionSelector": "13732d79",
									"id": 4083,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "addCandidateDetails",
									"nameLocation": "6722:19:42",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4074,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4069,
												"mutability": "mutable",
												"name": "_nameOfCandidate",
												"nameLocation": "6765:16:42",
												"nodeType": "VariableDeclaration",
												"scope": 4083,
												"src": "6751:30:42",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 4068,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6751:6:42",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 4071,
												"mutability": "mutable",
												"name": "_voterCardNo",
												"nameLocation": "6799:12:42",
												"nodeType": "VariableDeclaration",
												"scope": 4083,
												"src": "6791:20:42",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 4070,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6791:7:42",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 4073,
												"mutability": "mutable",
												"name": "_partyName",
												"nameLocation": "6835:10:42",
												"nodeType": "VariableDeclaration",
												"scope": 4083,
												"src": "6821:24:42",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 4072,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6821:6:42",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6741:110:42"
									},
									"returnParameters": {
										"id": 4075,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6861:0:42"
									},
									"scope": 4100,
									"src": "6713:228:42",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										3606
									],
									"body": {
										"id": 4098,
										"nodeType": "Block",
										"src": "7076:75:42",
										"statements": [
											{
												"eventCall": {
													"arguments": [
														{
															"id": 4093,
															"name": "_voterAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4085,
															"src": "7102:13:42",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 4094,
															"name": "_voterCardNo",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4087,
															"src": "7117:12:42",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 4095,
															"name": "_partyNumber",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4089,
															"src": "7131:12:42",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 4092,
														"name": "VoteCasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3577,
														"src": "7091:10:42",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256,uint256)"
														}
													},
													"id": 4096,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7091:53:42",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 4097,
												"nodeType": "EmitStatement",
												"src": "7086:58:42"
											}
										]
									},
									"functionSelector": "7a26dd31",
									"id": 4099,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "addVoterDetails",
									"nameLocation": "6956:15:42",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4090,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4085,
												"mutability": "mutable",
												"name": "_voterAddress",
												"nameLocation": "6989:13:42",
												"nodeType": "VariableDeclaration",
												"scope": 4099,
												"src": "6981:21:42",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 4084,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6981:7:42",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 4087,
												"mutability": "mutable",
												"name": "_voterCardNo",
												"nameLocation": "7020:12:42",
												"nodeType": "VariableDeclaration",
												"scope": 4099,
												"src": "7012:20:42",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 4086,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7012:7:42",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 4089,
												"mutability": "mutable",
												"name": "_partyNumber",
												"nameLocation": "7050:12:42",
												"nodeType": "VariableDeclaration",
												"scope": 4099,
												"src": "7042:20:42",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 4088,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7042:7:42",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6971:97:42"
									},
									"returnParameters": {
										"id": 4091,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7076:0:42"
									},
									"scope": 4100,
									"src": "6947:204:42",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 4101,
							"src": "5267:1886:42",
							"usedErrors": [],
							"usedEvents": [
								3561,
								3569,
								3577
							]
						}
					],
					"src": "30:7124:42"
				},
				"id": 42
			}
		}
	}
}