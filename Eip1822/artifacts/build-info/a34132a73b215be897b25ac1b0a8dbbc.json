{
	"id": "a34132a73b215be897b25ac1b0a8dbbc",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.24",
	"solcLongVersion": "0.8.24+commit.e11b9ed9",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/Eip1822/ProxyC.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\n/**\n * @title UniversalUpgradableProxy\n * @dev This contract acts as a proxy that forwards all calls to a target contract.\n * It allows for upgrading the logic contract while preserving the proxy contract's address.\n */\ncontract UniversalUpgradableProxy {\n    address private _currentLogicContract;\n\n    /**\n     * @dev Constructor function\n     * @param initialLogicContract Address of the initial logic contract\n     */\n    constructor(address initialLogicContract) {\n        _currentLogicContract = initialLogicContract;\n    }\n\n    /**\n     * @dev Fallback function that forwards all calls to the current logic contract\n     */\n    fallback() external payable {\n        _delegateCall(_currentLogicContract);\n    }\n\n    /**\n     * @dev Function to upgrade the logic contract to a new contract\n     * @param newLogicContract Address of the new logic contract\n     */\n    function upgradeLogicContract(address newLogicContract) external {\n        _currentLogicContract = newLogicContract;\n    }\n\n    /**\n     * @dev Internal function to delegate call to the logic contract\n     * @param target Address of the logic contract to delegate call to\n     */\n    function _delegateCall(address target) private {\n        assembly {\n            // Get the location of the data being passed to this call\n            let ptr := mload(0x40)\n\n            // Copy input data (msg.data) to memory\n            calldatacopy(ptr, 0, calldatasize())\n\n            // Delegate call to the logic contract with the copied input data\n            let result := delegatecall(gas(), target, ptr, calldatasize(), 0, 0)\n\n            // Get the size of the returned data\n            let size := returndatasize()\n\n            // Copy returned data to memory\n            returndatacopy(ptr, 0, size)\n\n            // Check if the call was successful\n            switch result\n            case 0 { revert(ptr, size) }\n            default { return(ptr, size) }\n        }\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 900
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"contracts/Eip1822/ProxyC.sol": {
				"UniversalUpgradableProxy": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "initialLogicContract",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"stateMutability": "payable",
							"type": "fallback"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newLogicContract",
									"type": "address"
								}
							],
							"name": "upgradeLogicContract",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "This contract acts as a proxy that forwards all calls to a target contract. It allows for upgrading the logic contract while preserving the proxy contract's address.",
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Constructor function",
								"params": {
									"initialLogicContract": "Address of the initial logic contract"
								}
							},
							"upgradeLogicContract(address)": {
								"details": "Function to upgrade the logic contract to a new contract",
								"params": {
									"newLogicContract": "Address of the new logic contract"
								}
							}
						},
						"title": "UniversalUpgradableProxy",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/Eip1822/ProxyC.sol\":277:2000  contract UniversalUpgradableProxy {... */\n  mstore(0x40, 0x80)\n    /* \"contracts/Eip1822/ProxyC.sol\":483:586  constructor(address initialLogicContract) {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  add\n  0x40\n  dup2\n  swap1\n  mstore\n  tag_2\n  swap2\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"contracts/Eip1822/ProxyC.sol\":535:556  _currentLogicContract */\n  0x00\n    /* \"contracts/Eip1822/ProxyC.sol\":535:579  _currentLogicContract = initialLogicContract */\n  dup1\n  sload\n  not(sub(shl(0xa0, 0x01), 0x01))\n  and\n  sub(shl(0xa0, 0x01), 0x01)\n  swap3\n  swap1\n  swap3\n  and\n  swap2\n  swap1\n  swap2\n  or\n  swap1\n  sstore\n    /* \"contracts/Eip1822/ProxyC.sol\":277:2000  contract UniversalUpgradableProxy {... */\n  jump(tag_7)\n    /* \"#utility.yul\":14:304   */\ntag_3:\n    /* \"#utility.yul\":84:90   */\n  0x00\n    /* \"#utility.yul\":137:139   */\n  0x20\n    /* \"#utility.yul\":125:134   */\n  dup3\n    /* \"#utility.yul\":116:123   */\n  dup5\n    /* \"#utility.yul\":112:135   */\n  sub\n    /* \"#utility.yul\":108:140   */\n  slt\n    /* \"#utility.yul\":105:157   */\n  iszero\n  tag_9\n  jumpi\n    /* \"#utility.yul\":153:154   */\n  0x00\n    /* \"#utility.yul\":150:151   */\n  dup1\n    /* \"#utility.yul\":143:155   */\n  revert\n    /* \"#utility.yul\":105:157   */\ntag_9:\n    /* \"#utility.yul\":179:195   */\n  dup2\n  mload\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"#utility.yul\":224:255   */\n  dup2\n  and\n    /* \"#utility.yul\":214:256   */\n  dup2\n  eq\n    /* \"#utility.yul\":204:274   */\n  tag_10\n  jumpi\n    /* \"#utility.yul\":270:271   */\n  0x00\n    /* \"#utility.yul\":267:268   */\n  dup1\n    /* \"#utility.yul\":260:272   */\n  revert\n    /* \"#utility.yul\":204:274   */\ntag_10:\n    /* \"#utility.yul\":293:298   */\n  swap4\n    /* \"#utility.yul\":14:304   */\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\ntag_7:\n    /* \"contracts/Eip1822/ProxyC.sol\":277:2000  contract UniversalUpgradableProxy {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/Eip1822/ProxyC.sol\":277:2000  contract UniversalUpgradableProxy {... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0xa17003b8\n      eq\n      tag_3\n      jumpi\n    tag_1:\n        /* \"contracts/Eip1822/ProxyC.sol\":744:765  _currentLogicContract */\n      sload(0x00)\n        /* \"contracts/Eip1822/ProxyC.sol\":730:766  _delegateCall(_currentLogicContract) */\n      tag_6\n      swap1\n        /* \"contracts/Eip1822/ProxyC.sol\":744:765  _currentLogicContract */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Eip1822/ProxyC.sol\":730:743  _delegateCall */\n      tag_7\n        /* \"contracts/Eip1822/ProxyC.sol\":730:766  _delegateCall(_currentLogicContract) */\n      jump\t// in\n    tag_6:\n        /* \"contracts/Eip1822/ProxyC.sol\":277:2000  contract UniversalUpgradableProxy {... */\n      stop\n        /* \"contracts/Eip1822/ProxyC.sol\":929:1051  function upgradeLogicContract(address newLogicContract) external {... */\n    tag_3:\n      callvalue\n      dup1\n      iszero\n      tag_8\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_8:\n      pop\n      tag_6\n      tag_10\n      calldatasize\n      0x04\n      tag_11\n      jump\t// in\n    tag_10:\n        /* \"contracts/Eip1822/ProxyC.sol\":1004:1025  _currentLogicContract */\n      0x00\n        /* \"contracts/Eip1822/ProxyC.sol\":1004:1044  _currentLogicContract = newLogicContract */\n      dup1\n      sload\n      0xffffffffffffffffffffffff0000000000000000000000000000000000000000\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      swap3\n      swap1\n      swap3\n      and\n      swap2\n      swap1\n      swap2\n      or\n      swap1\n      sstore\n        /* \"contracts/Eip1822/ProxyC.sol\":929:1051  function upgradeLogicContract(address newLogicContract) external {... */\n      jump\n        /* \"contracts/Eip1822/ProxyC.sol\":1213:1998  function _delegateCall(address target) private {... */\n    tag_7:\n        /* \"contracts/Eip1822/ProxyC.sol\":1380:1384  0x40 */\n      0x40\n        /* \"contracts/Eip1822/ProxyC.sol\":1374:1385  mload(0x40) */\n      mload\n        /* \"contracts/Eip1822/ProxyC.sol\":1472:1486  calldatasize() */\n      calldatasize\n        /* \"contracts/Eip1822/ProxyC.sol\":1469:1470  0 */\n      0x00\n        /* \"contracts/Eip1822/ProxyC.sol\":1464:1467  ptr */\n      dup3\n        /* \"contracts/Eip1822/ProxyC.sol\":1451:1487  calldatacopy(ptr, 0, calldatasize()) */\n      calldatacopy\n        /* \"contracts/Eip1822/ProxyC.sol\":1645:1646  0 */\n      0x00\n        /* \"contracts/Eip1822/ProxyC.sol\":1642:1643  0 */\n      dup1\n        /* \"contracts/Eip1822/ProxyC.sol\":1626:1640  calldatasize() */\n      calldatasize\n        /* \"contracts/Eip1822/ProxyC.sol\":1621:1624  ptr */\n      dup4\n        /* \"contracts/Eip1822/ProxyC.sol\":1613:1619  target */\n      dup6\n        /* \"contracts/Eip1822/ProxyC.sol\":1606:1611  gas() */\n      gas\n        /* \"contracts/Eip1822/ProxyC.sol\":1593:1647  delegatecall(gas(), target, ptr, calldatasize(), 0, 0) */\n      delegatecall\n        /* \"contracts/Eip1822/ProxyC.sol\":1722:1738  returndatasize() */\n      returndatasize\n        /* \"contracts/Eip1822/ProxyC.sol\":1819:1823  size */\n      dup1\n        /* \"contracts/Eip1822/ProxyC.sol\":1816:1817  0 */\n      0x00\n        /* \"contracts/Eip1822/ProxyC.sol\":1811:1814  ptr */\n      dup5\n        /* \"contracts/Eip1822/ProxyC.sol\":1796:1824  returndatacopy(ptr, 0, size) */\n      returndatacopy\n        /* \"contracts/Eip1822/ProxyC.sol\":1893:1899  result */\n      dup2\n        /* \"contracts/Eip1822/ProxyC.sol\":1912:1940  case 0 { revert(ptr, size) } */\n      dup1\n      iszero\n      tag_15\n      jumpi\n        /* \"contracts/Eip1822/ProxyC.sol\":1975:1979  size */\n      dup2\n        /* \"contracts/Eip1822/ProxyC.sol\":1970:1973  ptr */\n      dup5\n        /* \"contracts/Eip1822/ProxyC.sol\":1963:1980  return(ptr, size) */\n      return\n        /* \"contracts/Eip1822/ProxyC.sol\":1912:1940  case 0 { revert(ptr, size) } */\n    tag_15:\n        /* \"contracts/Eip1822/ProxyC.sol\":1933:1937  size */\n      dup2\n        /* \"contracts/Eip1822/ProxyC.sol\":1928:1931  ptr */\n      dup5\n        /* \"contracts/Eip1822/ProxyC.sol\":1921:1938  revert(ptr, size) */\n      revert\n        /* \"#utility.yul\":14:323   */\n    tag_11:\n        /* \"#utility.yul\":73:79   */\n      0x00\n        /* \"#utility.yul\":126:128   */\n      0x20\n        /* \"#utility.yul\":114:123   */\n      dup3\n        /* \"#utility.yul\":105:112   */\n      dup5\n        /* \"#utility.yul\":101:124   */\n      sub\n        /* \"#utility.yul\":97:129   */\n      slt\n        /* \"#utility.yul\":94:146   */\n      iszero\n      tag_19\n      jumpi\n        /* \"#utility.yul\":142:143   */\n      0x00\n        /* \"#utility.yul\":139:140   */\n      dup1\n        /* \"#utility.yul\":132:144   */\n      revert\n        /* \"#utility.yul\":94:146   */\n    tag_19:\n        /* \"#utility.yul\":181:190   */\n      dup2\n        /* \"#utility.yul\":168:191   */\n      calldataload\n        /* \"#utility.yul\":231:273   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":224:229   */\n      dup2\n        /* \"#utility.yul\":220:274   */\n      and\n        /* \"#utility.yul\":213:218   */\n      dup2\n        /* \"#utility.yul\":210:275   */\n      eq\n        /* \"#utility.yul\":200:293   */\n      tag_20\n      jumpi\n        /* \"#utility.yul\":289:290   */\n      0x00\n        /* \"#utility.yul\":286:287   */\n      dup1\n        /* \"#utility.yul\":279:291   */\n      revert\n        /* \"#utility.yul\":200:293   */\n    tag_20:\n        /* \"#utility.yul\":312:317   */\n      swap4\n        /* \"#utility.yul\":14:323   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220737522551c5a72878c7dbbd408861839458bddb7dee7b5974134510bc9cc993464736f6c63430008180033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_15": {
									"entryPoint": null,
									"id": 15,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_tuple_t_address_fromMemory": {
									"entryPoint": 82,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:306:1",
										"nodeType": "YulBlock",
										"src": "0:306:1",
										"statements": [
											{
												"nativeSrc": "6:3:1",
												"nodeType": "YulBlock",
												"src": "6:3:1",
												"statements": []
											},
											{
												"body": {
													"nativeSrc": "95:209:1",
													"nodeType": "YulBlock",
													"src": "95:209:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "141:16:1",
																"nodeType": "YulBlock",
																"src": "141:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "150:1:1",
																					"nodeType": "YulLiteral",
																					"src": "150:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "153:1:1",
																					"nodeType": "YulLiteral",
																					"src": "153:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "143:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "143:6:1"
																			},
																			"nativeSrc": "143:12:1",
																			"nodeType": "YulFunctionCall",
																			"src": "143:12:1"
																		},
																		"nativeSrc": "143:12:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "143:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "116:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "116:7:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "125:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "125:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "112:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "112:3:1"
																		},
																		"nativeSrc": "112:23:1",
																		"nodeType": "YulFunctionCall",
																		"src": "112:23:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "137:2:1",
																		"nodeType": "YulLiteral",
																		"src": "137:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "108:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "108:3:1"
																},
																"nativeSrc": "108:32:1",
																"nodeType": "YulFunctionCall",
																"src": "108:32:1"
															},
															"nativeSrc": "105:52:1",
															"nodeType": "YulIf",
															"src": "105:52:1"
														},
														{
															"nativeSrc": "166:29:1",
															"nodeType": "YulVariableDeclaration",
															"src": "166:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "185:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "185:9:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "179:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "179:5:1"
																},
																"nativeSrc": "179:16:1",
																"nodeType": "YulFunctionCall",
																"src": "179:16:1"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "170:5:1",
																	"nodeType": "YulTypedName",
																	"src": "170:5:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "258:16:1",
																"nodeType": "YulBlock",
																"src": "258:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "267:1:1",
																					"nodeType": "YulLiteral",
																					"src": "267:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "270:1:1",
																					"nodeType": "YulLiteral",
																					"src": "270:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "260:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "260:6:1"
																			},
																			"nativeSrc": "260:12:1",
																			"nodeType": "YulFunctionCall",
																			"src": "260:12:1"
																		},
																		"nativeSrc": "260:12:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "260:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "217:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "217:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "228:5:1",
																						"nodeType": "YulIdentifier",
																						"src": "228:5:1"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "243:3:1",
																										"nodeType": "YulLiteral",
																										"src": "243:3:1",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "248:1:1",
																										"nodeType": "YulLiteral",
																										"src": "248:1:1",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nativeSrc": "239:3:1",
																									"nodeType": "YulIdentifier",
																									"src": "239:3:1"
																								},
																								"nativeSrc": "239:11:1",
																								"nodeType": "YulFunctionCall",
																								"src": "239:11:1"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "252:1:1",
																								"nodeType": "YulLiteral",
																								"src": "252:1:1",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nativeSrc": "235:3:1",
																							"nodeType": "YulIdentifier",
																							"src": "235:3:1"
																						},
																						"nativeSrc": "235:19:1",
																						"nodeType": "YulFunctionCall",
																						"src": "235:19:1"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "224:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "224:3:1"
																				},
																				"nativeSrc": "224:31:1",
																				"nodeType": "YulFunctionCall",
																				"src": "224:31:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "214:2:1",
																			"nodeType": "YulIdentifier",
																			"src": "214:2:1"
																		},
																		"nativeSrc": "214:42:1",
																		"nodeType": "YulFunctionCall",
																		"src": "214:42:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "207:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "207:6:1"
																},
																"nativeSrc": "207:50:1",
																"nodeType": "YulFunctionCall",
																"src": "207:50:1"
															},
															"nativeSrc": "204:70:1",
															"nodeType": "YulIf",
															"src": "204:70:1"
														},
														{
															"nativeSrc": "283:15:1",
															"nodeType": "YulAssignment",
															"src": "283:15:1",
															"value": {
																"name": "value",
																"nativeSrc": "293:5:1",
																"nodeType": "YulIdentifier",
																"src": "293:5:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "283:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "283:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address_fromMemory",
												"nativeSrc": "14:290:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "61:9:1",
														"nodeType": "YulTypedName",
														"src": "61:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "72:7:1",
														"nodeType": "YulTypedName",
														"src": "72:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "84:6:1",
														"nodeType": "YulTypedName",
														"src": "84:6:1",
														"type": ""
													}
												],
												"src": "14:290:1"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n        value0 := value\n    }\n}",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b506040516101b33803806101b383398101604081905261002e91610052565b5f80546001600160a01b0319166001600160a01b039290921691909117905561007f565b5f60208284031215610062575f80fd5b81516001600160a01b0381168114610078575f80fd5b9392505050565b6101278061008c5f395ff3fe608060405260043610601b575f3560e01c8063a17003b814603c575b5f54603a9073ffffffffffffffffffffffffffffffffffffffff166098565b005b3480156046575f80fd5b50603a605236600460b9565b5f80547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff92909216919091179055565b604051365f82375f803683855af43d805f843e81801560b5578184f35b8184fd5b5f6020828403121560c8575f80fd5b813573ffffffffffffffffffffffffffffffffffffffff8116811460ea575f80fd5b939250505056fea2646970667358221220737522551c5a72878c7dbbd408861839458bddb7dee7b5974134510bc9cc993464736f6c63430008180033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x1B3 CODESIZE SUB DUP1 PUSH2 0x1B3 DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH2 0x2E SWAP2 PUSH2 0x52 JUMP JUMPDEST PUSH0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH2 0x7F JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x62 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x78 JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x127 DUP1 PUSH2 0x8C PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH1 0x1B JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xA17003B8 EQ PUSH1 0x3C JUMPI JUMPDEST PUSH0 SLOAD PUSH1 0x3A SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x98 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH1 0x46 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x3A PUSH1 0x52 CALLDATASIZE PUSH1 0x4 PUSH1 0xB9 JUMP JUMPDEST PUSH0 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x40 MLOAD CALLDATASIZE PUSH0 DUP3 CALLDATACOPY PUSH0 DUP1 CALLDATASIZE DUP4 DUP6 GAS DELEGATECALL RETURNDATASIZE DUP1 PUSH0 DUP5 RETURNDATACOPY DUP2 DUP1 ISZERO PUSH1 0xB5 JUMPI DUP2 DUP5 RETURN JUMPDEST DUP2 DUP5 REVERT JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH1 0xC8 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND DUP2 EQ PUSH1 0xEA JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH20 0x7522551C5A72878C7DBBD408861839458BDDB7DE 0xE7 0xB5 SWAP8 COINBASE CALLVALUE MLOAD SIGNEXTEND 0xC9 0xCC SWAP10 CALLVALUE PUSH5 0x736F6C6343 STOP ADDMOD XOR STOP CALLER ",
							"sourceMap": "277:1723:0:-:0;;;483:103;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;535:21;:44;;-1:-1:-1;;;;;;535:44:0;-1:-1:-1;;;;;535:44:0;;;;;;;;;;277:1723;;14:290:1;84:6;137:2;125:9;116:7;112:23;108:32;105:52;;;153:1;150;143:12;105:52;179:16;;-1:-1:-1;;;;;224:31:1;;214:42;;204:70;;270:1;267;260:12;204:70;293:5;14:290;-1:-1:-1;;;14:290:1:o;:::-;277:1723:0;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_24": {
									"entryPoint": null,
									"id": 24,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_delegateCall_43": {
									"entryPoint": 152,
									"id": 43,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@upgradeLogicContract_35": {
									"entryPoint": null,
									"id": 35,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 185,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:325:1",
										"nodeType": "YulBlock",
										"src": "0:325:1",
										"statements": [
											{
												"nativeSrc": "6:3:1",
												"nodeType": "YulBlock",
												"src": "6:3:1",
												"statements": []
											},
											{
												"body": {
													"nativeSrc": "84:239:1",
													"nodeType": "YulBlock",
													"src": "84:239:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "130:16:1",
																"nodeType": "YulBlock",
																"src": "130:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "139:1:1",
																					"nodeType": "YulLiteral",
																					"src": "139:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "142:1:1",
																					"nodeType": "YulLiteral",
																					"src": "142:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "132:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "132:6:1"
																			},
																			"nativeSrc": "132:12:1",
																			"nodeType": "YulFunctionCall",
																			"src": "132:12:1"
																		},
																		"nativeSrc": "132:12:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "132:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "105:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "105:7:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "114:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "114:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "101:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "101:3:1"
																		},
																		"nativeSrc": "101:23:1",
																		"nodeType": "YulFunctionCall",
																		"src": "101:23:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "126:2:1",
																		"nodeType": "YulLiteral",
																		"src": "126:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "97:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "97:3:1"
																},
																"nativeSrc": "97:32:1",
																"nodeType": "YulFunctionCall",
																"src": "97:32:1"
															},
															"nativeSrc": "94:52:1",
															"nodeType": "YulIf",
															"src": "94:52:1"
														},
														{
															"nativeSrc": "155:36:1",
															"nodeType": "YulVariableDeclaration",
															"src": "155:36:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "181:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "181:9:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "168:12:1",
																	"nodeType": "YulIdentifier",
																	"src": "168:12:1"
																},
																"nativeSrc": "168:23:1",
																"nodeType": "YulFunctionCall",
																"src": "168:23:1"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "159:5:1",
																	"nodeType": "YulTypedName",
																	"src": "159:5:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "277:16:1",
																"nodeType": "YulBlock",
																"src": "277:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "286:1:1",
																					"nodeType": "YulLiteral",
																					"src": "286:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "289:1:1",
																					"nodeType": "YulLiteral",
																					"src": "289:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "279:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "279:6:1"
																			},
																			"nativeSrc": "279:12:1",
																			"nodeType": "YulFunctionCall",
																			"src": "279:12:1"
																		},
																		"nativeSrc": "279:12:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "279:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "213:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "213:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "224:5:1",
																						"nodeType": "YulIdentifier",
																						"src": "224:5:1"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "231:42:1",
																						"nodeType": "YulLiteral",
																						"src": "231:42:1",
																						"type": "",
																						"value": "0xffffffffffffffffffffffffffffffffffffffff"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "220:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "220:3:1"
																				},
																				"nativeSrc": "220:54:1",
																				"nodeType": "YulFunctionCall",
																				"src": "220:54:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "210:2:1",
																			"nodeType": "YulIdentifier",
																			"src": "210:2:1"
																		},
																		"nativeSrc": "210:65:1",
																		"nodeType": "YulFunctionCall",
																		"src": "210:65:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "203:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "203:6:1"
																},
																"nativeSrc": "203:73:1",
																"nodeType": "YulFunctionCall",
																"src": "203:73:1"
															},
															"nativeSrc": "200:93:1",
															"nodeType": "YulIf",
															"src": "200:93:1"
														},
														{
															"nativeSrc": "302:15:1",
															"nodeType": "YulAssignment",
															"src": "302:15:1",
															"value": {
																"name": "value",
																"nativeSrc": "312:5:1",
																"nodeType": "YulIdentifier",
																"src": "312:5:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "302:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "302:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "14:309:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "50:9:1",
														"nodeType": "YulTypedName",
														"src": "50:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "61:7:1",
														"nodeType": "YulTypedName",
														"src": "61:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "73:6:1",
														"nodeType": "YulTypedName",
														"src": "73:6:1",
														"type": ""
													}
												],
												"src": "14:309:1"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        if iszero(eq(value, and(value, 0xffffffffffffffffffffffffffffffffffffffff))) { revert(0, 0) }\n        value0 := value\n    }\n}",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405260043610601b575f3560e01c8063a17003b814603c575b5f54603a9073ffffffffffffffffffffffffffffffffffffffff166098565b005b3480156046575f80fd5b50603a605236600460b9565b5f80547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff92909216919091179055565b604051365f82375f803683855af43d805f843e81801560b5578184f35b8184fd5b5f6020828403121560c8575f80fd5b813573ffffffffffffffffffffffffffffffffffffffff8116811460ea575f80fd5b939250505056fea2646970667358221220737522551c5a72878c7dbbd408861839458bddb7dee7b5974134510bc9cc993464736f6c63430008180033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH1 0x1B JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xA17003B8 EQ PUSH1 0x3C JUMPI JUMPDEST PUSH0 SLOAD PUSH1 0x3A SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x98 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH1 0x46 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x3A PUSH1 0x52 CALLDATASIZE PUSH1 0x4 PUSH1 0xB9 JUMP JUMPDEST PUSH0 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x40 MLOAD CALLDATASIZE PUSH0 DUP3 CALLDATACOPY PUSH0 DUP1 CALLDATASIZE DUP4 DUP6 GAS DELEGATECALL RETURNDATASIZE DUP1 PUSH0 DUP5 RETURNDATACOPY DUP2 DUP1 ISZERO PUSH1 0xB5 JUMPI DUP2 DUP5 RETURN JUMPDEST DUP2 DUP5 REVERT JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH1 0xC8 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND DUP2 EQ PUSH1 0xEA JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH20 0x7522551C5A72878C7DBBD408861839458BDDB7DE 0xE7 0xB5 SWAP8 COINBASE CALLVALUE MLOAD SIGNEXTEND 0xC9 0xCC SWAP10 CALLVALUE PUSH5 0x736F6C6343 STOP ADDMOD XOR STOP CALLER ",
							"sourceMap": "277:1723:0:-:0;;;;;;;;;;;;;;;;;;744:21;;730:36;;744:21;;730:13;:36::i;:::-;277:1723;929:122;;;;;;;;;;-1:-1:-1;929:122:0;;;;;:::i;:::-;1004:21;:40;;;;;;;;;;;;;;;929:122;1213:785;1380:4;1374:11;1472:14;1469:1;1464:3;1451:36;1645:1;1642;1626:14;1621:3;1613:6;1606:5;1593:54;1722:16;1819:4;1816:1;1811:3;1796:28;1893:6;1912:28;;;;1975:4;1970:3;1963:17;1912:28;1933:4;1928:3;1921:17;14:309:1;73:6;126:2;114:9;105:7;101:23;97:32;94:52;;;142:1;139;132:12;94:52;181:9;168:23;231:42;224:5;220:54;213:5;210:65;200:93;;289:1;286;279:12;200:93;312:5;14:309;-1:-1:-1;;;14:309:1:o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "59000",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"": "infinite",
								"upgradeLogicContract(address)": "24460"
							},
							"internal": {
								"_delegateCall(address)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 277,
									"end": 2000,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 277,
									"end": 2000,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 277,
									"end": 2000,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 483,
									"end": 586,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 483,
									"end": 586,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 483,
									"end": 586,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 483,
									"end": 586,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 483,
									"end": 586,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 483,
									"end": 586,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 483,
									"end": 586,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 483,
									"end": 586,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 483,
									"end": 586,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 483,
									"end": 586,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 483,
									"end": 586,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 483,
									"end": 586,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 483,
									"end": 586,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 483,
									"end": 586,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 483,
									"end": 586,
									"name": "CODESIZE",
									"source": 0
								},
								{
									"begin": 483,
									"end": 586,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 483,
									"end": 586,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 483,
									"end": 586,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 483,
									"end": 586,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 483,
									"end": 586,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 483,
									"end": 586,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 483,
									"end": 586,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 483,
									"end": 586,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 483,
									"end": 586,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 483,
									"end": 586,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 483,
									"end": 586,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 483,
									"end": 586,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 483,
									"end": 586,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 483,
									"end": 586,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 483,
									"end": 586,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 483,
									"end": 586,
									"name": "tag",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 483,
									"end": 586,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 535,
									"end": 556,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 535,
									"end": 579,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 535,
									"end": 579,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 535,
									"end": 579,
									"name": "AND",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 535,
									"end": 579,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 535,
									"end": 579,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 535,
									"end": 579,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 535,
									"end": 579,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 535,
									"end": 579,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 535,
									"end": 579,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 535,
									"end": 579,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 535,
									"end": 579,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 535,
									"end": 579,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 535,
									"end": 579,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 277,
									"end": 2000,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 277,
									"end": 2000,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 14,
									"end": 304,
									"name": "tag",
									"source": 1,
									"value": "3"
								},
								{
									"begin": 14,
									"end": 304,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 84,
									"end": 90,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 137,
									"end": 139,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 125,
									"end": 134,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 116,
									"end": 123,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 112,
									"end": 135,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 108,
									"end": 140,
									"name": "SLT",
									"source": 1
								},
								{
									"begin": 105,
									"end": 157,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 105,
									"end": 157,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "9"
								},
								{
									"begin": 105,
									"end": 157,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 153,
									"end": 154,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 150,
									"end": 151,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 143,
									"end": 155,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 105,
									"end": 157,
									"name": "tag",
									"source": 1,
									"value": "9"
								},
								{
									"begin": 105,
									"end": 157,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 179,
									"end": 195,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 179,
									"end": 195,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 224,
									"end": 255,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 224,
									"end": 255,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 214,
									"end": 256,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 214,
									"end": 256,
									"name": "EQ",
									"source": 1
								},
								{
									"begin": 204,
									"end": 274,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "10"
								},
								{
									"begin": 204,
									"end": 274,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 270,
									"end": 271,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 267,
									"end": 268,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 260,
									"end": 272,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 204,
									"end": 274,
									"name": "tag",
									"source": 1,
									"value": "10"
								},
								{
									"begin": 204,
									"end": 274,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 293,
									"end": 298,
									"name": "SWAP4",
									"source": 1
								},
								{
									"begin": 14,
									"end": 304,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 14,
									"end": 304,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 14,
									"end": 304,
									"name": "tag",
									"source": 1,
									"value": "7"
								},
								{
									"begin": 14,
									"end": 304,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 277,
									"end": 2000,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 277,
									"end": 2000,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 277,
									"end": 2000,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 277,
									"end": 2000,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 277,
									"end": 2000,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 277,
									"end": 2000,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 277,
									"end": 2000,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220737522551c5a72878c7dbbd408861839458bddb7dee7b5974134510bc9cc993464736f6c63430008180033",
									".code": [
										{
											"begin": 277,
											"end": 2000,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 277,
											"end": 2000,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 277,
											"end": 2000,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 277,
											"end": 2000,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 277,
											"end": 2000,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 277,
											"end": 2000,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 277,
											"end": 2000,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 277,
											"end": 2000,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 277,
											"end": 2000,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 277,
											"end": 2000,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 277,
											"end": 2000,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 277,
											"end": 2000,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 277,
											"end": 2000,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 277,
											"end": 2000,
											"name": "PUSH",
											"source": 0,
											"value": "A17003B8"
										},
										{
											"begin": 277,
											"end": 2000,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 277,
											"end": 2000,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 277,
											"end": 2000,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 277,
											"end": 2000,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 277,
											"end": 2000,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 744,
											"end": 765,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 744,
											"end": 765,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 730,
											"end": 766,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 730,
											"end": 766,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 744,
											"end": 765,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 744,
											"end": 765,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 730,
											"end": 743,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 730,
											"end": 766,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 730,
											"end": 766,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 730,
											"end": 766,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 277,
											"end": 2000,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 929,
											"end": 1051,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 929,
											"end": 1051,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 929,
											"end": 1051,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 929,
											"end": 1051,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 929,
											"end": 1051,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 929,
											"end": 1051,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 929,
											"end": 1051,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 929,
											"end": 1051,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 929,
											"end": 1051,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 929,
											"end": 1051,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 929,
											"end": 1051,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 929,
											"end": 1051,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 929,
											"end": 1051,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 929,
											"end": 1051,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 929,
											"end": 1051,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 929,
											"end": 1051,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 929,
											"end": 1051,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 929,
											"end": 1051,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 929,
											"end": 1051,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 929,
											"end": 1051,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1004,
											"end": 1025,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1004,
											"end": 1044,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1004,
											"end": 1044,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1004,
											"end": 1044,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000"
										},
										{
											"begin": 1004,
											"end": 1044,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1004,
											"end": 1044,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1004,
											"end": 1044,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 1004,
											"end": 1044,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1004,
											"end": 1044,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 1004,
											"end": 1044,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1004,
											"end": 1044,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1004,
											"end": 1044,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1004,
											"end": 1044,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1004,
											"end": 1044,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 1004,
											"end": 1044,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1004,
											"end": 1044,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 929,
											"end": 1051,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1213,
											"end": 1998,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 1213,
											"end": 1998,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1380,
											"end": 1384,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1374,
											"end": 1385,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1472,
											"end": 1486,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 1469,
											"end": 1470,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1464,
											"end": 1467,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1451,
											"end": 1487,
											"name": "CALLDATACOPY",
											"source": 0
										},
										{
											"begin": 1645,
											"end": 1646,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1642,
											"end": 1643,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1626,
											"end": 1640,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 1621,
											"end": 1624,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1613,
											"end": 1619,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 1606,
											"end": 1611,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 1593,
											"end": 1647,
											"name": "DELEGATECALL",
											"source": 0
										},
										{
											"begin": 1722,
											"end": 1738,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 1819,
											"end": 1823,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1816,
											"end": 1817,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1811,
											"end": 1814,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 1796,
											"end": 1824,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 1893,
											"end": 1899,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1912,
											"end": 1940,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1912,
											"end": 1940,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1912,
											"end": 1940,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 1912,
											"end": 1940,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1975,
											"end": 1979,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1970,
											"end": 1973,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 1963,
											"end": 1980,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 1912,
											"end": 1940,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 1912,
											"end": 1940,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1933,
											"end": 1937,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1928,
											"end": 1931,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 1921,
											"end": 1938,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 14,
											"end": 323,
											"name": "tag",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 14,
											"end": 323,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 73,
											"end": 79,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 126,
											"end": 128,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 114,
											"end": 123,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 105,
											"end": 112,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 101,
											"end": 124,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 97,
											"end": 129,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 94,
											"end": 146,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 94,
											"end": 146,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 94,
											"end": 146,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 142,
											"end": 143,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 139,
											"end": 140,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 132,
											"end": 144,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 94,
											"end": 146,
											"name": "tag",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 94,
											"end": 146,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 181,
											"end": 190,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 168,
											"end": 191,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 231,
											"end": 273,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 224,
											"end": 229,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 220,
											"end": 274,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 213,
											"end": 218,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 210,
											"end": 275,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 200,
											"end": 293,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 200,
											"end": 293,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 289,
											"end": 290,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 286,
											"end": 287,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 279,
											"end": 291,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 200,
											"end": 293,
											"name": "tag",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 200,
											"end": 293,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 312,
											"end": 317,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 14,
											"end": 323,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 14,
											"end": 323,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										}
									]
								}
							},
							"sourceList": [
								"contracts/Eip1822/ProxyC.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"upgradeLogicContract(address)": "a17003b8"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"initialLogicContract\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newLogicContract\",\"type\":\"address\"}],\"name\":\"upgradeLogicContract\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"This contract acts as a proxy that forwards all calls to a target contract. It allows for upgrading the logic contract while preserving the proxy contract's address.\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Constructor function\",\"params\":{\"initialLogicContract\":\"Address of the initial logic contract\"}},\"upgradeLogicContract(address)\":{\"details\":\"Function to upgrade the logic contract to a new contract\",\"params\":{\"newLogicContract\":\"Address of the new logic contract\"}}},\"title\":\"UniversalUpgradableProxy\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Eip1822/ProxyC.sol\":\"UniversalUpgradableProxy\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":900},\"remappings\":[]},\"sources\":{\"contracts/Eip1822/ProxyC.sol\":{\"keccak256\":\"0xf0574ba1781aeac15c9ea1d305a087b43ed412f612bb27a481c6a32c0359e4bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://973f92fe843b360d4c7313b44693478420d9eb74f1a681d3e2168492018c1eb7\",\"dweb:/ipfs/QmWCEEAgJmCTd8aJPMkAiYCnBjTCyS48T9tLC1jfLo9Vyu\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 4,
								"contract": "contracts/Eip1822/ProxyC.sol:UniversalUpgradableProxy",
								"label": "_currentLogicContract",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"errorCode": "3628",
				"formattedMessage": "Warning: This contract has a payable fallback function, but no receive ether function. Consider adding a receive ether function.\n --> contracts/Eip1822/ProxyC.sol:9:1:\n  |\n9 | contract UniversalUpgradableProxy {\n  | ^ (Relevant source part starts here and spans across multiple lines).\nNote: The payable fallback function is defined here.\n  --> contracts/Eip1822/ProxyC.sol:23:5:\n   |\n23 |     fallback() external payable {\n   |     ^ (Relevant source part starts here and spans across multiple lines).\n\n",
				"message": "This contract has a payable fallback function, but no receive ether function. Consider adding a receive ether function.",
				"secondarySourceLocations": [
					{
						"end": 773,
						"file": "contracts/Eip1822/ProxyC.sol",
						"message": "The payable fallback function is defined here.",
						"start": 692
					}
				],
				"severity": "warning",
				"sourceLocation": {
					"end": 2000,
					"file": "contracts/Eip1822/ProxyC.sol",
					"start": 277
				},
				"type": "Warning"
			}
		],
		"sources": {
			"contracts/Eip1822/ProxyC.sol": {
				"ast": {
					"absolutePath": "contracts/Eip1822/ProxyC.sol",
					"exportedSymbols": {
						"UniversalUpgradableProxy": [
							44
						]
					},
					"id": 45,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "UniversalUpgradableProxy",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "57:219:0",
								"text": " @title UniversalUpgradableProxy\n @dev This contract acts as a proxy that forwards all calls to a target contract.\n It allows for upgrading the logic contract while preserving the proxy contract's address."
							},
							"fullyImplemented": true,
							"id": 44,
							"linearizedBaseContracts": [
								44
							],
							"name": "UniversalUpgradableProxy",
							"nameLocation": "286:24:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 4,
									"mutability": "mutable",
									"name": "_currentLogicContract",
									"nameLocation": "333:21:0",
									"nodeType": "VariableDeclaration",
									"scope": 44,
									"src": "317:37:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 3,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "317:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 14,
										"nodeType": "Block",
										"src": "525:61:0",
										"statements": [
											{
												"expression": {
													"id": 12,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 10,
														"name": "_currentLogicContract",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4,
														"src": "535:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 11,
														"name": "initialLogicContract",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 7,
														"src": "559:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "535:44:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 13,
												"nodeType": "ExpressionStatement",
												"src": "535:44:0"
											}
										]
									},
									"documentation": {
										"id": 5,
										"nodeType": "StructuredDocumentation",
										"src": "361:117:0",
										"text": " @dev Constructor function\n @param initialLogicContract Address of the initial logic contract"
									},
									"id": 15,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 8,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 7,
												"mutability": "mutable",
												"name": "initialLogicContract",
												"nameLocation": "503:20:0",
												"nodeType": "VariableDeclaration",
												"scope": 15,
												"src": "495:28:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 6,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "495:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "494:30:0"
									},
									"returnParameters": {
										"id": 9,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "525:0:0"
									},
									"scope": 44,
									"src": "483:103:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 23,
										"nodeType": "Block",
										"src": "720:53:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 20,
															"name": "_currentLogicContract",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4,
															"src": "744:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 19,
														"name": "_delegateCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 43,
														"src": "730:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 21,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "730:36:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 22,
												"nodeType": "ExpressionStatement",
												"src": "730:36:0"
											}
										]
									},
									"documentation": {
										"id": 16,
										"nodeType": "StructuredDocumentation",
										"src": "592:95:0",
										"text": " @dev Fallback function that forwards all calls to the current logic contract"
									},
									"id": 24,
									"implemented": true,
									"kind": "fallback",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 17,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "700:2:0"
									},
									"returnParameters": {
										"id": 18,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "720:0:0"
									},
									"scope": 44,
									"src": "692:81:0",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 34,
										"nodeType": "Block",
										"src": "994:57:0",
										"statements": [
											{
												"expression": {
													"id": 32,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 30,
														"name": "_currentLogicContract",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4,
														"src": "1004:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 31,
														"name": "newLogicContract",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 27,
														"src": "1028:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1004:40:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 33,
												"nodeType": "ExpressionStatement",
												"src": "1004:40:0"
											}
										]
									},
									"documentation": {
										"id": 25,
										"nodeType": "StructuredDocumentation",
										"src": "779:145:0",
										"text": " @dev Function to upgrade the logic contract to a new contract\n @param newLogicContract Address of the new logic contract"
									},
									"functionSelector": "a17003b8",
									"id": 35,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "upgradeLogicContract",
									"nameLocation": "938:20:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 28,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 27,
												"mutability": "mutable",
												"name": "newLogicContract",
												"nameLocation": "967:16:0",
												"nodeType": "VariableDeclaration",
												"scope": 35,
												"src": "959:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 26,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "959:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "958:26:0"
									},
									"returnParameters": {
										"id": 29,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "994:0:0"
									},
									"scope": 44,
									"src": "929:122:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 42,
										"nodeType": "Block",
										"src": "1260:738:0",
										"statements": [
											{
												"AST": {
													"nativeSrc": "1279:713:0",
													"nodeType": "YulBlock",
													"src": "1279:713:0",
													"statements": [
														{
															"nativeSrc": "1363:22:0",
															"nodeType": "YulVariableDeclaration",
															"src": "1363:22:0",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1380:4:0",
																		"nodeType": "YulLiteral",
																		"src": "1380:4:0",
																		"type": "",
																		"value": "0x40"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1374:5:0",
																	"nodeType": "YulIdentifier",
																	"src": "1374:5:0"
																},
																"nativeSrc": "1374:11:0",
																"nodeType": "YulFunctionCall",
																"src": "1374:11:0"
															},
															"variables": [
																{
																	"name": "ptr",
																	"nativeSrc": "1367:3:0",
																	"nodeType": "YulTypedName",
																	"src": "1367:3:0",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "ptr",
																		"nativeSrc": "1464:3:0",
																		"nodeType": "YulIdentifier",
																		"src": "1464:3:0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1469:1:0",
																		"nodeType": "YulLiteral",
																		"src": "1469:1:0",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [],
																		"functionName": {
																			"name": "calldatasize",
																			"nativeSrc": "1472:12:0",
																			"nodeType": "YulIdentifier",
																			"src": "1472:12:0"
																		},
																		"nativeSrc": "1472:14:0",
																		"nodeType": "YulFunctionCall",
																		"src": "1472:14:0"
																	}
																],
																"functionName": {
																	"name": "calldatacopy",
																	"nativeSrc": "1451:12:0",
																	"nodeType": "YulIdentifier",
																	"src": "1451:12:0"
																},
																"nativeSrc": "1451:36:0",
																"nodeType": "YulFunctionCall",
																"src": "1451:36:0"
															},
															"nativeSrc": "1451:36:0",
															"nodeType": "YulExpressionStatement",
															"src": "1451:36:0"
														},
														{
															"nativeSrc": "1579:68:0",
															"nodeType": "YulVariableDeclaration",
															"src": "1579:68:0",
															"value": {
																"arguments": [
																	{
																		"arguments": [],
																		"functionName": {
																			"name": "gas",
																			"nativeSrc": "1606:3:0",
																			"nodeType": "YulIdentifier",
																			"src": "1606:3:0"
																		},
																		"nativeSrc": "1606:5:0",
																		"nodeType": "YulFunctionCall",
																		"src": "1606:5:0"
																	},
																	{
																		"name": "target",
																		"nativeSrc": "1613:6:0",
																		"nodeType": "YulIdentifier",
																		"src": "1613:6:0"
																	},
																	{
																		"name": "ptr",
																		"nativeSrc": "1621:3:0",
																		"nodeType": "YulIdentifier",
																		"src": "1621:3:0"
																	},
																	{
																		"arguments": [],
																		"functionName": {
																			"name": "calldatasize",
																			"nativeSrc": "1626:12:0",
																			"nodeType": "YulIdentifier",
																			"src": "1626:12:0"
																		},
																		"nativeSrc": "1626:14:0",
																		"nodeType": "YulFunctionCall",
																		"src": "1626:14:0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1642:1:0",
																		"nodeType": "YulLiteral",
																		"src": "1642:1:0",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1645:1:0",
																		"nodeType": "YulLiteral",
																		"src": "1645:1:0",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "delegatecall",
																	"nativeSrc": "1593:12:0",
																	"nodeType": "YulIdentifier",
																	"src": "1593:12:0"
																},
																"nativeSrc": "1593:54:0",
																"nodeType": "YulFunctionCall",
																"src": "1593:54:0"
															},
															"variables": [
																{
																	"name": "result",
																	"nativeSrc": "1583:6:0",
																	"nodeType": "YulTypedName",
																	"src": "1583:6:0",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "1710:28:0",
															"nodeType": "YulVariableDeclaration",
															"src": "1710:28:0",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "returndatasize",
																	"nativeSrc": "1722:14:0",
																	"nodeType": "YulIdentifier",
																	"src": "1722:14:0"
																},
																"nativeSrc": "1722:16:0",
																"nodeType": "YulFunctionCall",
																"src": "1722:16:0"
															},
															"variables": [
																{
																	"name": "size",
																	"nativeSrc": "1714:4:0",
																	"nodeType": "YulTypedName",
																	"src": "1714:4:0",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "ptr",
																		"nativeSrc": "1811:3:0",
																		"nodeType": "YulIdentifier",
																		"src": "1811:3:0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1816:1:0",
																		"nodeType": "YulLiteral",
																		"src": "1816:1:0",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "size",
																		"nativeSrc": "1819:4:0",
																		"nodeType": "YulIdentifier",
																		"src": "1819:4:0"
																	}
																],
																"functionName": {
																	"name": "returndatacopy",
																	"nativeSrc": "1796:14:0",
																	"nodeType": "YulIdentifier",
																	"src": "1796:14:0"
																},
																"nativeSrc": "1796:28:0",
																"nodeType": "YulFunctionCall",
																"src": "1796:28:0"
															},
															"nativeSrc": "1796:28:0",
															"nodeType": "YulExpressionStatement",
															"src": "1796:28:0"
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "1919:21:0",
																		"nodeType": "YulBlock",
																		"src": "1919:21:0",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "ptr",
																							"nativeSrc": "1928:3:0",
																							"nodeType": "YulIdentifier",
																							"src": "1928:3:0"
																						},
																						{
																							"name": "size",
																							"nativeSrc": "1933:4:0",
																							"nodeType": "YulIdentifier",
																							"src": "1933:4:0"
																						}
																					],
																					"functionName": {
																						"name": "revert",
																						"nativeSrc": "1921:6:0",
																						"nodeType": "YulIdentifier",
																						"src": "1921:6:0"
																					},
																					"nativeSrc": "1921:17:0",
																					"nodeType": "YulFunctionCall",
																					"src": "1921:17:0"
																				},
																				"nativeSrc": "1921:17:0",
																				"nodeType": "YulExpressionStatement",
																				"src": "1921:17:0"
																			}
																		]
																	},
																	"nativeSrc": "1912:28:0",
																	"nodeType": "YulCase",
																	"src": "1912:28:0",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1917:1:0",
																		"nodeType": "YulLiteral",
																		"src": "1917:1:0",
																		"type": "",
																		"value": "0"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "1961:21:0",
																		"nodeType": "YulBlock",
																		"src": "1961:21:0",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "ptr",
																							"nativeSrc": "1970:3:0",
																							"nodeType": "YulIdentifier",
																							"src": "1970:3:0"
																						},
																						{
																							"name": "size",
																							"nativeSrc": "1975:4:0",
																							"nodeType": "YulIdentifier",
																							"src": "1975:4:0"
																						}
																					],
																					"functionName": {
																						"name": "return",
																						"nativeSrc": "1963:6:0",
																						"nodeType": "YulIdentifier",
																						"src": "1963:6:0"
																					},
																					"nativeSrc": "1963:17:0",
																					"nodeType": "YulFunctionCall",
																					"src": "1963:17:0"
																				},
																				"nativeSrc": "1963:17:0",
																				"nodeType": "YulExpressionStatement",
																				"src": "1963:17:0"
																			}
																		]
																	},
																	"nativeSrc": "1953:29:0",
																	"nodeType": "YulCase",
																	"src": "1953:29:0",
																	"value": "default"
																}
															],
															"expression": {
																"name": "result",
																"nativeSrc": "1893:6:0",
																"nodeType": "YulIdentifier",
																"src": "1893:6:0"
															},
															"nativeSrc": "1886:96:0",
															"nodeType": "YulSwitch",
															"src": "1886:96:0"
														}
													]
												},
												"evmVersion": "shanghai",
												"externalReferences": [
													{
														"declaration": 38,
														"isOffset": false,
														"isSlot": false,
														"src": "1613:6:0",
														"valueSize": 1
													}
												],
												"id": 41,
												"nodeType": "InlineAssembly",
												"src": "1270:722:0"
											}
										]
									},
									"documentation": {
										"id": 36,
										"nodeType": "StructuredDocumentation",
										"src": "1057:151:0",
										"text": " @dev Internal function to delegate call to the logic contract\n @param target Address of the logic contract to delegate call to"
									},
									"id": 43,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_delegateCall",
									"nameLocation": "1222:13:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 39,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 38,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "1244:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 43,
												"src": "1236:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 37,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1236:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1235:16:0"
									},
									"returnParameters": {
										"id": 40,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1260:0:0"
									},
									"scope": 44,
									"src": "1213:785:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 45,
							"src": "277:1723:0",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "32:1969:0"
				},
				"id": 0
			}
		}
	}
}